/*! For license information please see main.1d0a28f3.js.LICENSE.txt */
(()=>{var e={4445:(e,t)=>{"use strict";t.byteLength=function(e){var t=o(e),A=t[0],r=t[1];return 3*(A+r)/4-r},t.toByteArray=function(e){var t,A,s=o(e),i=s[0],a=s[1],l=new n(function(e,t,A){return 3*(t+A)/4-A}(0,i,a)),u=0,c=a>0?i-4:i;for(A=0;A<c;A+=4)t=r[e.charCodeAt(A)]<<18|r[e.charCodeAt(A+1)]<<12|r[e.charCodeAt(A+2)]<<6|r[e.charCodeAt(A+3)],l[u++]=t>>16&255,l[u++]=t>>8&255,l[u++]=255&t;2===a&&(t=r[e.charCodeAt(A)]<<2|r[e.charCodeAt(A+1)]>>4,l[u++]=255&t);1===a&&(t=r[e.charCodeAt(A)]<<10|r[e.charCodeAt(A+1)]<<4|r[e.charCodeAt(A+2)]>>2,l[u++]=t>>8&255,l[u++]=255&t);return l},t.fromByteArray=function(e){for(var t,r=e.length,n=r%3,s=[],i=16383,o=0,l=r-n;o<l;o+=i)s.push(a(e,o,o+i>l?l:o+i));1===n?(t=e[r-1],s.push(A[t>>2]+A[t<<4&63]+"==")):2===n&&(t=(e[r-2]<<8)+e[r-1],s.push(A[t>>10]+A[t>>4&63]+A[t<<2&63]+"="));return s.join("")};for(var A=[],r=[],n="undefined"!==typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0;i<64;++i)A[i]=s[i],r[s.charCodeAt(i)]=i;function o(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var A=e.indexOf("=");return-1===A&&(A=t),[A,A===t?0:4-A%4]}function a(e,t,r){for(var n,s,i=[],o=t;o<r;o+=3)n=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),i.push(A[(s=n)>>18&63]+A[s>>12&63]+A[s>>6&63]+A[63&s]);return i.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},3192:e=>{var t=4096,A=new Uint32Array([0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215]);function r(e){this.buf_=new Uint8Array(8224),this.input_=e,this.reset()}r.READ_SIZE=t,r.IBUF_MASK=8191,r.prototype.reset=function(){this.buf_ptr_=0,this.val_=0,this.pos_=0,this.bit_pos_=0,this.bit_end_pos_=0,this.eos_=0,this.readMoreInput();for(var e=0;e<4;e++)this.val_|=this.buf_[this.pos_]<<8*e,++this.pos_;return this.bit_end_pos_>0},r.prototype.readMoreInput=function(){if(!(this.bit_end_pos_>256))if(this.eos_){if(this.bit_pos_>this.bit_end_pos_)throw new Error("Unexpected end of input "+this.bit_pos_+" "+this.bit_end_pos_)}else{var e=this.buf_ptr_,A=this.input_.read(this.buf_,e,t);if(A<0)throw new Error("Unexpected end of input");if(A<t){this.eos_=1;for(var r=0;r<32;r++)this.buf_[e+A+r]=0}if(0===e){for(r=0;r<32;r++)this.buf_[8192+r]=this.buf_[r];this.buf_ptr_=t}else this.buf_ptr_=0;this.bit_end_pos_+=A<<3}},r.prototype.fillBitWindow=function(){for(;this.bit_pos_>=8;)this.val_>>>=8,this.val_|=this.buf_[8191&this.pos_]<<24,++this.pos_,this.bit_pos_=this.bit_pos_-8>>>0,this.bit_end_pos_=this.bit_end_pos_-8>>>0},r.prototype.readBits=function(e){32-this.bit_pos_<e&&this.fillBitWindow();var t=this.val_>>>this.bit_pos_&A[e];return this.bit_pos_+=e,t},e.exports=r},6140:(e,t)=>{t.lookup=new Uint8Array([0,0,0,0,0,0,0,0,0,4,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,12,16,12,12,20,12,16,24,28,12,12,32,12,36,12,44,44,44,44,44,44,44,44,44,44,32,32,24,40,28,12,12,48,52,52,52,48,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,24,12,28,12,12,12,56,60,60,60,56,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,24,12,28,12,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,56,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,60,60,60,60,61,61,61,61,62,62,62,62,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),t.lookupOffsets=new Uint16Array([1024,1536,1280,1536,0,256,768,512])},4393:(e,t,A)=>{var r=A(9094).z,n=A(9094).y,s=A(3192),i=A(7887),o=A(9518).z,a=A(9518).u,l=A(6140),u=A(7479),c=A(615),d=8,f=16,h=256,g=704,p=26,b=6,m=2,v=8,y=255,w=1080,B=18,x=new Uint8Array([1,2,3,4,0,5,17,6,16,7,8,9,10,11,12,13,14,15]),C=16,E=new Uint8Array([3,2,1,0,3,3,3,3,3,3,2,2,2,2,2,2]),N=new Int8Array([0,0,0,0,-1,1,-2,2,-3,3,-1,1,-2,2,-3,3]),D=new Uint16Array([256,402,436,468,500,534,566,598,630,662,694,726,758,790,822,854,886,920,952,984,1016,1048,1080]);function Q(e){var t;return 0===e.readBits(1)?16:(t=e.readBits(3))>0?17+t:(t=e.readBits(3))>0?8+t:17}function P(e){if(e.readBits(1)){var t=e.readBits(3);return 0===t?1:e.readBits(t)+(1<<t)}return 0}function I(){this.meta_block_length=0,this.input_end=0,this.is_uncompressed=0,this.is_metadata=!1}function L(e){var t,A,r,n=new I;if(n.input_end=e.readBits(1),n.input_end&&e.readBits(1))return n;if(7===(t=e.readBits(2)+4)){if(n.is_metadata=!0,0!==e.readBits(1))throw new Error("Invalid reserved bit");if(0===(A=e.readBits(2)))return n;for(r=0;r<A;r++){var s=e.readBits(8);if(r+1===A&&A>1&&0===s)throw new Error("Invalid size byte");n.meta_block_length|=s<<8*r}}else for(r=0;r<t;++r){var i=e.readBits(4);if(r+1===t&&t>4&&0===i)throw new Error("Invalid size nibble");n.meta_block_length|=i<<4*r}return++n.meta_block_length,n.input_end||n.is_metadata||(n.is_uncompressed=e.readBits(1)),n}function k(e,t,A){var r;return A.fillBitWindow(),(r=e[t+=A.val_>>>A.bit_pos_&y].bits-v)>0&&(A.bit_pos_+=v,t+=e[t].value,t+=A.val_>>>A.bit_pos_&(1<<r)-1),A.bit_pos_+=e[t].bits,e[t].value}function G(e,t,A,r){var n,s,i=new Uint8Array(e);if(r.readMoreInput(),1===(s=r.readBits(2))){for(var l=e-1,u=0,c=new Int32Array(4),h=r.readBits(2)+1;l;)l>>=1,++u;for(g=0;g<h;++g)c[g]=r.readBits(u)%e,i[c[g]]=2;switch(i[c[0]]=1,h){case 1:break;case 3:if(c[0]===c[1]||c[0]===c[2]||c[1]===c[2])throw new Error("[ReadHuffmanCode] invalid symbols");break;case 2:if(c[0]===c[1])throw new Error("[ReadHuffmanCode] invalid symbols");i[c[1]]=1;break;case 4:if(c[0]===c[1]||c[0]===c[2]||c[0]===c[3]||c[1]===c[2]||c[1]===c[3]||c[2]===c[3])throw new Error("[ReadHuffmanCode] invalid symbols");r.readBits(1)?(i[c[2]]=3,i[c[3]]=3):i[c[0]]=2}}else{var g,p=new Uint8Array(B),b=32,m=0,y=[new o(2,0),new o(2,4),new o(2,3),new o(3,2),new o(2,0),new o(2,4),new o(2,3),new o(4,1),new o(2,0),new o(2,4),new o(2,3),new o(3,2),new o(2,0),new o(2,4),new o(2,3),new o(4,5)];for(g=s;g<B&&b>0;++g){var w,C=x[g],E=0;r.fillBitWindow(),E+=r.val_>>>r.bit_pos_&15,r.bit_pos_+=y[E].bits,w=y[E].value,p[C]=w,0!==w&&(b-=32>>w,++m)}if(1!==m&&0!==b)throw new Error("[ReadHuffmanCode] invalid num_codes or space");!function(e,t,A,r){for(var n=0,s=d,i=0,l=0,u=32768,c=[],h=0;h<32;h++)c.push(new o(0,0));for(a(c,0,5,e,B);n<t&&u>0;){var g,p=0;if(r.readMoreInput(),r.fillBitWindow(),p+=r.val_>>>r.bit_pos_&31,r.bit_pos_+=c[p].bits,(g=255&c[p].value)<f)i=0,A[n++]=g,0!==g&&(s=g,u-=32768>>g);else{var b,m,v=g-14,y=0;if(g===f&&(y=s),l!==y&&(i=0,l=y),b=i,i>0&&(i-=2,i<<=v),n+(m=(i+=r.readBits(v)+3)-b)>t)throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");for(var w=0;w<m;w++)A[n+w]=l;n+=m,0!==l&&(u-=m<<15-l)}}if(0!==u)throw new Error("[ReadHuffmanCodeLengths] space = "+u);for(;n<t;n++)A[n]=0}(p,e,i,r)}if(0===(n=a(t,A,v,i,e)))throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");return n}function F(e,t,A){var r,n;return r=k(e,t,A),n=u.kBlockLengthPrefixCode[r].nbits,u.kBlockLengthPrefixCode[r].offset+A.readBits(n)}function S(e,t,A){var r;return e<C?(A+=E[e],r=t[A&=3]+N[e]):r=e-C+1,r}function W(e,t){for(var A=e[t],r=t;r;--r)e[r]=e[r-1];e[0]=A}function Z(e,t){this.alphabet_size=e,this.num_htrees=t,this.codes=new Array(t+t*D[e+31>>>5]),this.htrees=new Uint32Array(t)}function X(e,t){var A,r,n={num_htrees:null,context_map:null},s=0;t.readMoreInput();var i=n.num_htrees=P(t)+1,a=n.context_map=new Uint8Array(e);if(i<=1)return n;for(t.readBits(1)&&(s=t.readBits(4)+1),A=[],r=0;r<w;r++)A[r]=new o(0,0);for(G(i+s,A,0,t),r=0;r<e;){var l;if(t.readMoreInput(),0===(l=k(A,0,t)))a[r]=0,++r;else if(l<=s)for(var u=1+(1<<l)+t.readBits(l);--u;){if(r>=e)throw new Error("[DecodeContextMap] i >= context_map_size");a[r]=0,++r}else a[r]=l-s,++r}return t.readBits(1)&&function(e,t){var A,r=new Uint8Array(256);for(A=0;A<256;++A)r[A]=A;for(A=0;A<t;++A){var n=e[A];e[A]=r[n],n&&W(r,n)}}(a,e),n}function M(e,t,A,r,n,s,i){var o,a=2*A,l=A,u=k(t,A*w,i);(o=0===u?n[a+(1&s[l])]:1===u?n[a+(s[l]-1&1)]+1:u-2)>=e&&(o-=e),r[A]=o,n[a+(1&s[l])]=o,++s[l]}function z(e,t,A,r,n,i){var o,a=n+1,l=A&n,u=i.pos_&s.IBUF_MASK;if(t<8||i.bit_pos_+(t<<3)<i.bit_end_pos_)for(;t-- >0;)i.readMoreInput(),r[l++]=i.readBits(8),l===a&&(e.write(r,a),l=0);else{if(i.bit_end_pos_<32)throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");for(;i.bit_pos_<32;)r[l]=i.val_>>>i.bit_pos_,i.bit_pos_+=8,++l,--t;if(u+(o=i.bit_end_pos_-i.bit_pos_>>3)>s.IBUF_MASK){for(var c=s.IBUF_MASK+1-u,d=0;d<c;d++)r[l+d]=i.buf_[u+d];o-=c,l+=c,t-=c,u=0}for(d=0;d<o;d++)r[l+d]=i.buf_[u+d];if(t-=o,(l+=o)>=a){e.write(r,a),l-=a;for(d=0;d<l;d++)r[d]=r[a+d]}for(;l+t>=a;){if(o=a-l,i.input_.read(r,l,o)<o)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");e.write(r,a),t-=o,l=0}if(i.input_.read(r,l,t)<t)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");i.reset()}}function R(e){var t=e.bit_pos_+7&-8;return 0==e.readBits(t-e.bit_pos_)}function j(e){var t=new r(e),A=new s(t);return Q(A),L(A).meta_block_length}function T(e,t){var A,r,n,a,d,f,v,y,B,x,E=0,N=0,D=0,I=[16,15,11,4],W=0,j=0,T=0,U=[new Z(0,0),new Z(0,0),new Z(0,0)],V=128+s.READ_SIZE;n=(1<<(r=Q(x=new s(e))))-16,d=(a=1<<r)-1,f=new Uint8Array(a+V+i.maxDictionaryWordLength),v=a,y=[],B=[];for(var O=0;O<3*w;O++)y[O]=new o(0,0),B[O]=new o(0,0);for(;!N;){var Y,H,K,q,J,_,$,ee,te,Ae,re,ne=0,se=[1<<28,1<<28,1<<28],ie=[0],oe=[1,1,1],ae=[0,1,0,1,0,1],le=[0],ue=null,ce=null,de=0,fe=null,he=0,ge=0,pe=0;for(A=0;A<3;++A)U[A].codes=null,U[A].htrees=null;x.readMoreInput();var be=L(x);if(E+(ne=be.meta_block_length)>t.buffer.length){var me=new Uint8Array(E+ne);me.set(t.buffer),t.buffer=me}if(N=be.input_end,Y=be.is_uncompressed,be.is_metadata)for(R(x);ne>0;--ne)x.readMoreInput(),x.readBits(8);else if(0!==ne)if(Y)x.bit_pos_=x.bit_pos_+7&-8,z(t,ne,E,f,d,x),E+=ne;else{for(A=0;A<3;++A)oe[A]=P(x)+1,oe[A]>=2&&(G(oe[A]+2,y,A*w,x),G(p,B,A*w,x),se[A]=F(B,A*w,x),le[A]=1);for(x.readMoreInput(),q=(1<<(H=x.readBits(2)))-1,J=(K=C+(x.readBits(4)<<H))+(48<<H),ue=new Uint8Array(oe[0]),A=0;A<oe[0];++A)x.readMoreInput(),ue[A]=x.readBits(2)<<1;var ve=X(oe[0]<<b,x);$=ve.num_htrees,_=ve.context_map;var ye=X(oe[2]<<m,x);for(te=ye.num_htrees,ee=ye.context_map,U[0]=new Z(h,$),U[1]=new Z(g,oe[1]),U[2]=new Z(J,te),A=0;A<3;++A)U[A].decode(x);for(ce=0,fe=0,Ae=ue[ie[0]],ge=l.lookupOffsets[Ae],pe=l.lookupOffsets[Ae+1],re=U[1].htrees[0];ne>0;){var we,Be,xe,Ce,Ee,Ne,De,Qe,Pe,Ie,Le,ke;for(x.readMoreInput(),0===se[1]&&(M(oe[1],y,1,ie,ae,le,x),se[1]=F(B,w,x),re=U[1].htrees[ie[1]]),--se[1],(Be=(we=k(U[1].codes,re,x))>>6)>=2?(Be-=2,De=-1):De=0,xe=u.kInsertRangeLut[Be]+(we>>3&7),Ce=u.kCopyRangeLut[Be]+(7&we),Ee=u.kInsertLengthPrefixCode[xe].offset+x.readBits(u.kInsertLengthPrefixCode[xe].nbits),Ne=u.kCopyLengthPrefixCode[Ce].offset+x.readBits(u.kCopyLengthPrefixCode[Ce].nbits),j=f[E-1&d],T=f[E-2&d],Pe=0;Pe<Ee;++Pe)x.readMoreInput(),0===se[0]&&(M(oe[0],y,0,ie,ae,le,x),se[0]=F(B,0,x),ce=ie[0]<<b,Ae=ue[ie[0]],ge=l.lookupOffsets[Ae],pe=l.lookupOffsets[Ae+1]),de=_[ce+(l.lookup[ge+j]|l.lookup[pe+T])],--se[0],T=j,j=k(U[0].codes,U[0].htrees[de],x),f[E&d]=j,(E&d)===d&&t.write(f,a),++E;if((ne-=Ee)<=0)break;if(De<0)if(x.readMoreInput(),0===se[2]&&(M(oe[2],y,2,ie,ae,le,x),se[2]=F(B,2*w,x),fe=ie[2]<<m),--se[2],he=ee[fe+(255&(Ne>4?3:Ne-2))],(De=k(U[2].codes,U[2].htrees[he],x))>=K)ke=(De-=K)&q,De=K+((Ge=(2+(1&(De>>=H))<<(Le=1+(De>>1)))-4)+x.readBits(Le)<<H)+ke;if((Qe=S(De,I,W))<0)throw new Error("[BrotliDecompress] invalid distance");if(Ie=E&d,Qe>(D=E<n&&D!==n?E:n)){if(!(Ne>=i.minDictionaryWordLength&&Ne<=i.maxDictionaryWordLength))throw new Error("Invalid backward reference. pos: "+E+" distance: "+Qe+" len: "+Ne+" bytes left: "+ne);var Ge=i.offsetsByLength[Ne],Fe=Qe-D-1,Se=i.sizeBitsByLength[Ne],We=Fe>>Se;if(Ge+=(Fe&(1<<Se)-1)*Ne,!(We<c.kNumTransforms))throw new Error("Invalid backward reference. pos: "+E+" distance: "+Qe+" len: "+Ne+" bytes left: "+ne);var Ze=c.transformDictionaryWord(f,Ie,Ge,Ne,We);if(E+=Ze,ne-=Ze,(Ie+=Ze)>=v){t.write(f,a);for(var Xe=0;Xe<Ie-v;Xe++)f[Xe]=f[v+Xe]}}else{if(De>0&&(I[3&W]=Qe,++W),Ne>ne)throw new Error("Invalid backward reference. pos: "+E+" distance: "+Qe+" len: "+Ne+" bytes left: "+ne);for(Pe=0;Pe<Ne;++Pe)f[E&d]=f[E-Qe&d],(E&d)===d&&t.write(f,a),++E,--ne}j=f[E-1&d],T=f[E-2&d]}E&=1073741823}}t.write(f,E&d)}Z.prototype.decode=function(e){var t,A=0;for(t=0;t<this.num_htrees;++t)this.htrees[t]=A,A+=G(this.alphabet_size,this.codes,A,e)},t.BrotliDecompressBuffer=function(e,t){var A=new r(e);null==t&&(t=j(e));var s=new Uint8Array(t),i=new n(s);return T(A,i),i.pos<i.buffer.length&&(i.buffer=i.buffer.subarray(0,i.pos)),i.buffer},i.init()},4814:(e,t,A)=>{var r=A(4445);t.init=function(){return(0,A(4393).BrotliDecompressBuffer)(r.toByteArray(A(7620)))}},7620:e=>{e.exports="W5/fcQLn5gKf2XUbAiQ1XULX+TZz6ADToDsgqk6qVfeC0e4m6OO2wcQ1J76ZBVRV1fRkEsdu//62zQsFEZWSTCnMhcsQKlS2qOhuVYYMGCkV0fXWEoMFbESXrKEZ9wdUEsyw9g4bJlEt1Y6oVMxMRTEVbCIwZzJzboK5j8m4YH02qgXYhv1V+PM435sLVxyHJihaJREEhZGqL03txGFQLm76caGO/ovxKvzCby/3vMTtX/459f0igi7WutnKiMQ6wODSoRh/8Lx1V3Q99MvKtwB6bHdERYRY0hStJoMjNeTsNX7bn+Y7e4EQ3bf8xBc7L0BsyfFPK43dGSXpL6clYC/I328h54/VYrQ5i0648FgbGtl837svJ35L3Mot/+nPlNpWgKx1gGXQYqX6n+bbZ7wuyCHKcUok12Xjqub7NXZGzqBx0SD+uziNf87t7ve42jxSKQoW3nyxVrWIGlFShhCKxjpZZ5MeGna0+lBkk+kaN8F9qFBAFgEogyMBdcX/T1W/WnMOi/7ycWUQloEBKGeC48MkiwqJkJO+12eQiOFHMmck6q/IjWW3RZlany23TBm+cNr/84/oi5GGmGBZWrZ6j+zykVozz5fT/QH/Da6WTbZYYPynVNO7kxzuNN2kxKKWche5WveitPKAecB8YcAHz/+zXLjcLzkdDSktNIDwZE9J9X+tto43oJy65wApM3mDzYtCwX9lM+N5VR3kXYo0Z3t0TtXfgBFg7gU8oN0Dgl7fZlUbhNll+0uuohRVKjrEd8egrSndy5/Tgd2gqjA4CAVuC7ESUmL3DZoGnfhQV8uwnpi8EGvAVVsowNRxPudck7+oqAUDkwZopWqFnW1riss0t1z6iCISVKreYGNvQcXv+1L9+jbP8cd/dPUiqBso2q+7ZyFBvENCkkVr44iyPbtOoOoCecWsiuqMSML5lv+vN5MzUr+Dnh73G7Q1YnRYJVYXHRJaNAOByiaK6CusgFdBPE40r0rvqXV7tksKO2DrHYXBTv8P5ysqxEx8VDXUDDqkPH6NNOV/a2WH8zlkXRELSa8P+heNyJBBP7PgsG1EtWtNef6/i+lcayzQwQCsduidpbKfhWUDgAEmyhGu/zVTacI6RS0zTABrOYueemnVa19u9fT23N/Ta6RvTpof5DWygqreCqrDAgM4LID1+1T/taU6yTFVLqXOv+/MuQOFnaF8vLMKD7tKWDoBdALgxF33zQccCcdHx8fKIVdW69O7qHtXpeGr9jbbpFA+qRMWr5hp0s67FPc7HAiLV0g0/peZlW7hJPYEhZyhpSwahnf93/tZgfqZWXFdmdXBzqxGHLrQKxoAY6fRoBhgCRPmmGueYZ5JexTVDKUIXzkG/fqp/0U3hAgQdJ9zumutK6nqWbaqvm1pgu03IYR+G+8s0jDBBz8cApZFSBeuWasyqo2OMDKAZCozS+GWSvL/HsE9rHxooe17U3s/lTE+VZAk4j3dp6uIGaC0JMiqR5CUsabPyM0dOYDR7Ea7ip4USZlya38YfPtvrX/tBlhHilj55nZ1nfN24AOAi9BVtz/Mbn8AEDJCqJgsVUa6nQnSxv2Fs7l/NlCzpfYEjmPrNyib/+t0ei2eEMjvNhLkHCZlci4WhBe7ePZTmzYqlY9+1pxtS4GB+5lM1BHT9tS270EWUDYFq1I0yY/fNiAk4bk9yBgmef/f2k6AlYQZHsNFnW8wBQxCd68iWv7/35bXfz3JZmfGligWAKRjIs3IpzxQ27vAglHSiOzCYzJ9L9A1CdiyFvyR66ucA4jKifu5ehwER26yV7HjKqn5Mfozo7Coxxt8LWWPT47BeMxX8p0Pjb7hZn+6bw7z3Lw+7653j5sI8CLu5kThpMlj1m4c2ch3jGcP1FsT13vuK3qjecKTZk2kHcOZY40UX+qdaxstZqsqQqgXz+QGF99ZJLqr3VYu4aecl1Ab5GmqS8k/GV5b95zxQ5d4EfXUJ6kTS/CXF/aiqKDOT1T7Jz5z0PwDUcwr9clLN1OJGCiKfqvah+h3XzrBOiLOW8wvn8gW6qE8vPxi+Efv+UH55T7PQFVMh6cZ1pZQlzJpKZ7P7uWvwPGJ6DTlR6wbyj3Iv2HyefnRo/dv7dNx+qaa0N38iBsR++Uil7Wd4afwDNsrzDAK4fXZwvEY/jdKuIKXlfrQd2C39dW7ntnRbIp9OtGy9pPBn/V2ASoi/2UJZfS+xuGLH8bnLuPlzdTNS6zdyk8Dt/h6sfOW5myxh1f+zf3zZ3MX/mO9cQPp5pOx967ZA6/pqHvclNfnUFF+rq+Vd7alKr6KWPcIDhpn6v2K6NlUu6LrKo8b/pYpU/Gazfvtwhn7tEOUuXht5rUJdSf6sLjYf0VTYDgwJ81yaqKTUYej/tbHckSRb/HZicwGJqh1mAHB/IuNs9dc9yuvF3D5Xocm3elWFdq5oEy70dYFit79yaLiNjPj5UUcVmZUVhQEhW5V2Z6Cm4HVH/R8qlamRYwBileuh07CbEce3TXa2JmXWBf+ozt319psboobeZhVnwhMZzOeQJzhpTDbP71Tv8HuZxxUI/+ma3XW6DFDDs4+qmpERwHGBd2edxwUKlODRdUWZ/g0GOezrbzOZauFMai4QU6GVHV6aPNBiBndHSsV4IzpvUiiYyg6OyyrL4Dj5q/Lw3N5kAwftEVl9rNd7Jk5PDij2hTH6wIXnsyXkKePxbmHYgC8A6an5Fob/KH5GtC0l4eFso+VpxedtJHdHpNm+Bvy4C79yVOkrZsLrQ3OHCeB0Ra+kBIRldUGlDCEmq2RwXnfyh6Dz+alk6eftI2n6sastRrGwbwszBeDRS/Fa/KwRJkCzTsLr/JCs5hOPE/MPLYdZ1F1fv7D+VmysX6NpOC8aU9F4Qs6HvDyUy9PvFGDKZ/P5101TYHFl8pjj6wm/qyS75etZhhfg0UEL4OYmHk6m6dO192AzoIyPSV9QedDA4Ml23rRbqxMPMxf7FJnDc5FTElVS/PyqgePzmwVZ26NWhRDQ+oaT7ly7ell4s3DypS1s0g+tOr7XHrrkZj9+x/mJBttrLx98lFIaRZzHz4aC7r52/JQ4VjHahY2/YVXZn/QC2ztQb/sY3uRlyc5vQS8nLPGT/n27495i8HPA152z7Fh5aFpyn1GPJKHuPL8Iw94DuW3KjkURAWZXn4EQy89xiKEHN1mk/tkM4gYDBxwNoYvRfE6LFqsxWJtPrDGbsnLMap3Ka3MUoytW0cvieozOmdERmhcqzG+3HmZv2yZeiIeQTKGdRT4HHNxekm1tY+/n06rGmFleqLscSERzctTKM6G9P0Pc1RmVvrascIxaO1CQCiYPE15bD7c3xSeW7gXxYjgxcrUlcbIvO0r+Yplhx0kTt3qafDOmFyMjgGxXu73rddMHpV1wMubyAGcf/v5dLr5P72Ta9lBF+fzMJrMycwv+9vnU3ANIl1cH9tfW7af8u0/HG0vV47jNFXzFTtaha1xvze/s8KMtCYucXc1nzfd/MQydUXn/b72RBt5wO/3jRcMH9BdhC/yctKBIveRYPrNpDWqBsO8VMmP+WvRaOcA4zRMR1PvSoO92rS7pYEv+fZfEfTMzEdM+6X5tLlyxExhqLRkms5EuLovLfx66de5fL2/yX02H52FPVwahrPqmN/E0oVXnsCKhbi/yRxX83nRbUKWhzYceXOntfuXn51NszJ6MO73pQf5Pl4in3ec4JU8hF7ppV34+mm9r1LY0ee/i1O1wpd8+zfLztE0cqBxggiBi5Bu95v9l3r9r/U5hweLn+TbfxowrWDqdJauKd8+q/dH8sbPkc9ttuyO94f7/XK/nHX46MPFLEb5qQlNPvhJ50/59t9ft3LXu7uVaWaO2bDrDCnRSzZyWvFKxO1+vT8MwwunR3bX0CkfPjqb4K9O19tn5X50PvmYpEwHtiW9WtzuV/s76B1zvLLNkViNd8ySxIl/3orfqP90TyTGaf7/rx8jQzeHJXdmh/N6YDvbvmTBwCdxfEQ1NcL6wNMdSIXNq7b1EUzRy1/Axsyk5p22GMG1b+GxFgbHErZh92wuvco0AuOLXct9hvw2nw/LqIcDRRmJmmZzcgUa7JpM/WV/S9IUfbF56TL2orzqwebdRD8nIYNJ41D/hz37Fo11p2Y21wzPcn713qVGhqtevStYfGH4n69OEJtPvbbLYWvscDqc3Hgnu166+tAyLnxrX0Y5zoYjV++1sI7t5kMr02KT/+uwtkc+rZLOf/qn/s3nYCf13Dg8/sB2diJgjGqjQ+TLhxbzyue2Ob7X6/9lUwW7a+lbznHzOYy8LKW1C/uRPbQY3KW/0gO9LXunHLvPL97afba9bFtc9hmz7GAttjVYlCvQAiOwAk/gC5+hkLEs6tr3AZKxLJtOEwk2dLxTYWsIB/j/ToWtIWzo906FrSG8iaqqqqqqiIiIiAgzMzMzNz+AyK+01/zi8n8S+Y1MjoRaQ80WU/G8MBlO+53VPXANrWm4wzGUVZUjjBJZVdhpcfkjsmcWaO+UEldXi1e+zq+HOsCpknYshuh8pOLISJun7TN0EIGW2xTnlOImeecnoGW4raxe2G1T3HEvfYUYMhG+gAFOAwh5nK8mZhwJMmN7r224QVsNFvZ87Z0qatvknklyPDK3Hy45PgVKXji52Wen4d4PlFVVYGnNap+fSpFbK90rYnhUc6n91Q3AY9E0tJOFrcfZtm/491XbcG/jsViUPPX76qmeuiz+qY1Hk7/1VPM405zWVuoheLUimpWYdVzCmUdKHebMdzgrYrb8mL2eeLSnRWHdonfZa8RsOU9F37w+591l5FLYHiOqWeHtE/lWrBHcRKp3uhtr8yXm8LU/5ms+NM6ZKsqu90cFZ4o58+k4rdrtB97NADFbwmEG7lXqvirhOTOqU14xuUF2myIjURcPHrPOQ4lmM3PeMg7bUuk0nnZi67bXsU6H8lhqIo8TaOrEafCO1ARK9PjC0QOoq2BxmMdgYB9G/lIb9++fqNJ2s7BHGFyBNmZAR8J3KCo012ikaSP8BCrf6VI0X5xdnbhHIO+B5rbOyB54zXkzfObyJ4ecwxfqBJMLFc7m59rNcw7hoHnFZ0b00zee+gTqvjm61Pb4xn0kcDX4jvHM0rBXZypG3DCKnD/Waa/ZtHmtFPgO5eETx+k7RrVg3aSwm2YoNXnCs3XPQDhNn+Fia6IlOOuIG6VJH7TP6ava26ehKHQa2T4N0tcZ9dPCGo3ZdnNltsHQbeYt5vPnJezV/cAeNypdml1vCHI8M81nSRP5Qi2+mI8v/sxiZru9187nRtp3f/42NemcONa+4eVC3PCZzc88aZh851CqSsshe70uPxeN/dmYwlwb3trwMrN1Gq8jbnApcVDx/yDPeYs5/7r62tsQ6lLg+DiFXTEhzR9dHqv0iT4tgj825W+H3XiRUNUZT2kR9Ri0+lp+UM3iQtS8uOE23Ly4KYtvqH13jghUntJRAewuzNLDXp8RxdcaA3cMY6TO2IeSFRXezeWIjCqyhsUdMYuCgYTZSKpBype1zRfq8FshvfBPc6BAQWl7/QxIDp3VGo1J3vn42OEs3qznws+YLRXbymyB19a9XBx6n/owcyxlEYyFWCi+kG9F+EyD/4yn80+agaZ9P7ay2Dny99aK2o91FkfEOY8hBwyfi5uwx2y5SaHmG+oq/zl1FX/8irOf8Y3vAcX/6uLP6A6nvMO24edSGPjQc827Rw2atX+z2bKq0CmW9mOtYnr5/AfDa1ZfPaXnKtlWborup7QYx+Or2uWb+N3N//2+yDcXMqIJdf55xl7/vsj4WoPPlxLxtVrkJ4w/tTe3mLdATOOYwxcq52w5Wxz5MbPdVs5O8/lhfE7dPj0bIiPQ3QV0iqm4m3YX8hRfc6jQ3fWepevMqUDJd86Z4vwM40CWHnn+WphsGHfieF02D3tmZvpWD+kBpNCFcLnZhcmmrhpGzzbdA+sQ1ar18OJD87IOKOFoRNznaHPNHUfUNhvY1iU+uhvEvpKHaUn3qK3exVVyX4joipp3um7FmYJWmA+WbIDshRpbVRx5/nqstCgy87FGbfVB8yDGCqS+2qCsnRwnSAN6zgzxfdB2nBT/vZ4/6uxb6oH8b4VBRxiIB93wLa47hG3w2SL/2Z27yOXJFwZpSJaBYyvajA7vRRYNKqljXKpt/CFD/tSMr18DKKbwB0xggBePatl1nki0yvqW5zchlyZmJ0OTxJ3D+fsYJs/mxYN5+Le5oagtcl+YsVvy8kSjI2YGvGjvmpkRS9W2dtXqWnVuxUhURm1lKtou/hdEq19VBp9OjGvHEQSmrpuf2R24mXGheil8KeiANY8fW1VERUfBImb64j12caBZmRViZHbeVMjCrPDg9A90IXrtnsYCuZtRQ0PyrKDjBNOsPfKsg1pA02gHlVr0OXiFhtp6nJqXVzcbfM0KnzC3ggOENPE9VBdmHKN6LYaijb4wXxJn5A0FSDF5j+h1ooZx885Jt3ZKzO5n7Z5WfNEOtyyPqQEnn7WLv5Fis3PdgMshjF1FRydbNyeBbyKI1oN1TRVrVK7kgsb/zjX4NDPIRMctVeaxVB38Vh1x5KbeJbU138AM5KzmZu3uny0ErygxiJF7GVXUrPzFxrlx1uFdAaZFDN9cvIb74qD9tzBMo7L7WIEYK+sla1DVMHpF0F7b3+Y6S+zjvLeDMCpapmJo1weBWuxKF3rOocih1gun4BoJh1kWnV/Jmiq6uOhK3VfKxEHEkafjLgK3oujaPzY6SXg8phhL4TNR1xvJd1Wa0aYFfPUMLrNBDCh4AuGRTbtKMc6Z1Udj8evY/ZpCuMAUefdo69DZUngoqE1P9A3PJfOf7WixCEj+Y6t7fYeHbbxUAoFV3M89cCKfma3fc1+jKRe7MFWEbQqEfyzO2x/wrO2VYH7iYdQ9BkPyI8/3kXBpLaCpU7eC0Yv/am/tEDu7HZpqg0EvHo0nf/R/gRzUWy33/HXMJQeu1GylKmOkXzlCfGFruAcPPhaGqZOtu19zsJ1SO2Jz4Ztth5cBX6mRQwWmDwryG9FUMlZzNckMdK+IoMJv1rOWnBamS2w2KHiaPMPLC15hCZm4KTpoZyj4E2TqC/P6r7/EhnDMhKicZZ1ZwxuC7DPzDGs53q8gXaI9kFTK+2LTq7bhwsTbrMV8Rsfua5lMS0FwbTitUVnVa1yTb5IX51mmYnUcP9wPr8Ji1tiYJeJV9GZTrQhF7vvdU2OTU42ogJ9FDwhmycI2LIg++03C6scYhUyUuMV5tkw6kGUoL+mjNC38+wMdWNljn6tGPpRES7veqrSn5TRuv+dh6JVL/iDHU1db4c9WK3++OrH3PqziF916UMUKn8G67nN60GfWiHrXYhUG3yVWmyYak59NHj8t1smG4UDiWz2rPHNrKnN4Zo1LBbr2/eF9YZ0n0blx2nG4X+EKFxvS3W28JESD+FWk61VCD3z/URGHiJl++7TdBwkCj6tGOH3qDb0QqcOF9Kzpj0HUb/KyFW3Yhj2VMKJqGZleFBH7vqvf7WqLC3XMuHV8q8a4sTFuxUtkD/6JIBvKaVjv96ndgruKZ1k/BHzqf2K9fLk7HGXANyLDd1vxkK/i055pnzl+zw6zLnwXlVYVtfmacJgEpRP1hbGgrYPVN6v2lG+idQNGmwcKXu/8xEj/P6qe/sB2WmwNp6pp8jaISMkwdleFXYK55NHWLTTbutSUqjBfDGWo/Yg918qQ+8BRZSAHZbfuNZz2O0sov1Ue4CWlVg3rFhM3Kljj9ksGd/NUhk4nH+a5UN2+1i8+NM3vRNp7uQ6sqexSCukEVlVZriHNqFi5rLm9TMWa4qm3idJqppQACol2l4VSuvWLfta4JcXy3bROPNbXOgdOhG47LC0CwW/dMlSx4Jf17aEU3yA1x9p+Yc0jupXgcMuYNku64iYOkGToVDuJvlbEKlJqsmiHbvNrIVZEH+yFdF8DbleZ6iNiWwMqvtMp/mSpwx5KxRrT9p3MAPTHGtMbfvdFhyj9vhaKcn3At8Lc16Ai+vBcSp1ztXi7rCJZx/ql7TXcclq6Q76UeKWDy9boS0WHIjUuWhPG8LBmW5y2rhuTpM5vsLt+HOLh1Yf0DqXa9tsfC+kaKt2htA0ai/L2i7RKoNjEwztkmRU0GfgW1TxUvPFhg0V7DdfWJk5gfrccpYv+MA9M0dkGTLECeYwUixRzjRFdmjG7zdZIl3XKB9YliNKI31lfa7i2JG5C8Ss+rHe0D7Z696/V3DEAOWHnQ9yNahMUl5kENWS6pHKKp2D1BaSrrHdE1w2qNxIztpXgUIrF0bm15YML4b6V1k+GpNysTahKMVrrS85lTVo9OGJ96I47eAy5rYWpRf/mIzeoYU1DKaQCTUVwrhHeyNoDqHel+lLxr9WKzhSYw7vrR6+V5q0pfi2k3L1zqkubY6rrd9ZLvSuWNf0uqnkY+FpTvFzSW9Fp0b9l8JA7THV9eCi/PY/SCZIUYx3BU2alj7Cm3VV6eYpios4b6WuNOJdYXUK3zTqj5CVG2FqYM4Z7CuIU0qO05XR0d71FHM0YhZmJmTRfLlXEumN82BGtzdX0S19t1e+bUieK8zRmqpa4Qc5TSjifmaQsY2ETLjhI36gMR1+7qpjdXXHiceUekfBaucHShAOiFXmv3sNmGQyU5iVgnoocuonQXEPTFwslHtS8R+A47StI9wj0iSrtbi5rMysczFiImsQ+bdFClnFjjpXXwMy6O7qfjOr8Fb0a7ODItisjnn3EQO16+ypd1cwyaAW5Yzxz5QknfMO7643fXW/I9y3U2xH27Oapqr56Z/tEzglj6IbT6HEHjopiXqeRbe5mQQvxtcbDOVverN0ZgMdzqRYRjaXtMRd56Q4cZSmdPvZJdSrhJ1D9zNXPqAEqPIavPdfubt5oke2kmv0dztIszSv2VYuoyf1UuopbsYb+uX9h6WpwjpgtZ6fNNawNJ4q8O3CFoSbioAaOSZMx2GYaPYB+rEb6qjQiNRFQ76TvwNFVKD+BhH9VhcKGsXzmMI7BptU/CNWolM7YzROvpFAntsiWJp6eR2d3GarcYShVYSUqhmYOWj5E96NK2WvmYNTeY7Zs4RUEdv9h9QT4EseKt6LzLrqEOs3hxAY1MaNWpSa6zZx8F3YOVeCYMS88W+CYHDuWe4yoc6YK+djDuEOrBR5lvh0r+Q9uM88lrjx9x9AtgpQVNE8r+3O6Gvw59D+kBF/UMXyhliYUtPjmvXGY6Dk3x+kEOW+GtdMVC4EZTqoS/jmR0P0LS75DOc/w2vnri97M4SdbZ8qeU7gg8DVbERkU5geaMQO3mYrSYyAngeUQqrN0C0/vsFmcgWNXNeidsTAj7/4MncJR0caaBUpbLK1yBCBNRjEv6KvuVSdpPnEMJdsRRtqJ+U8tN1gXA4ePHc6ZT0eviI73UOJF0fEZ8YaneAQqQdGphNvwM4nIqPnXxV0xA0fnCT+oAhJuyw/q8jO0y8CjSteZExwBpIN6SvNp6A5G/abi6egeND/1GTguhuNjaUbbnSbGd4L8937Ezm34Eyi6n1maeOBxh3PI0jzJDf5mh/BsLD7F2GOKvlA/5gtvxI3/eV4sLfKW5Wy+oio+es/u6T8UU+nsofy57Icb/JlZHPFtCgd/x+bwt3ZT+xXTtTtTrGAb4QehC6X9G+8YT+ozcLxDsdCjsuOqwPFnrdLYaFc92Ui0m4fr39lYmlCaqTit7G6O/3kWDkgtXjNH4BiEm/+jegQnihOtfffn33WxsFjhfMd48HT+f6o6X65j7XR8WLSHMFkxbvOYsrRsF1bowDuSQ18Mkxk4qz2zoGPL5fu9h2Hqmt1asl3Q3Yu3szOc+spiCmX4AETBM3pLoTYSp3sVxahyhL8eC4mPN9k2x3o0xkiixIzM3CZFzf5oR4mecQ5+ax2wCah3/crmnHoqR0+KMaOPxRif1oEFRFOO/kTPPmtww+NfMXxEK6gn6iU32U6fFruIz8Q4WgljtnaCVTBgWx7diUdshC9ZEa5yKpRBBeW12r/iNc/+EgNqmhswNB8SBoihHXeDF7rrWDLcmt3V8GYYN7pXRy4DZjj4DJuUBL5iC3DQAaoo4vkftqVTYRGLS3mHZ7gdmdTTqbgNN/PTdTCOTgXolc88MhXAEUMdX0iy1JMuk5wLsgeu0QUYlz2S4skTWwJz6pOm/8ihrmgGfFgri+ZWUK2gAPHgbWa8jaocdSuM4FJYoKicYX/ZSENkg9Q1ZzJfwScfVnR2DegOGwCvmogaWJCLQepv9WNlU6QgsmOwICquU28Mlk3d9W5E81lU/5Ez0LcX6lwKMWDNluNKfBDUy/phJgBcMnfkh9iRxrdOzgs08JdPB85Lwo+GUSb4t3nC+0byqMZtO2fQJ4U2zGIr49t/28qmmGv2RanDD7a3FEcdtutkW8twwwlUSpb8QalodddbBfNHKDQ828BdE7OBgFdiKYohLawFYqpybQoxATZrheLhdI7+0Zlu9Q1myRcd15r9UIm8K2LGJxqTegntqNVMKnf1a8zQiyUR1rxoqjiFxeHxqFcYUTHfDu7rhbWng6qOxOsI+5A1p9mRyEPdVkTlE24vY54W7bWc6jMgZvNXdfC9/9q7408KDsbdL7Utz7QFSDetz2picArzrdpL8OaCHC9V26RroemtDZ5yNM/KGkWMyTmfnInEvwtSD23UcFcjhaE3VKzkoaEMKGBft4XbIO6forTY1lmGQwVmKicBCiArDzE+1oIxE08fWeviIOD5TznqH+OoHadvoOP20drMPe5Irg3XBQziW2XDuHYzjqQQ4wySssjXUs5H+t3FWYMHppUnBHMx/nYIT5d7OmjDbgD9F6na3m4l7KdkeSO3kTEPXafiWinogag7b52taiZhL1TSvBFmEZafFq2H8khQaZXuitCewT5FBgVtPK0j4xUHPfUz3Q28eac1Z139DAP23dgki94EC8vbDPTQC97HPPSWjUNG5tWKMsaxAEMKC0665Xvo1Ntd07wCLNf8Q56mrEPVpCxlIMVlQlWRxM3oAfpgIc+8KC3rEXUog5g06vt7zgXY8grH7hhwVSaeuvC06YYRAwpbyk/Unzj9hLEZNs2oxPQB9yc+GnL6zTgq7rI++KDJwX2SP8Sd6YzTuw5lV/kU6eQxRD12omfQAW6caTR4LikYkBB1CMOrvgRr/VY75+NSB40Cni6bADAtaK+vyxVWpf9NeKJxN2KYQ8Q2xPB3K1s7fuhvWbr2XpgW044VD6DRs0qXoqKf1NFsaGvKJc47leUV3pppP/5VTKFhaGuol4Esfjf5zyCyUHmHthChcYh4hYLQF+AFWsuq4t0wJyWgdwQVOZiV0efRHPoK5+E1vjz9wTJmVkITC9oEstAsyZSgE/dbicwKr89YUxKZI+owD205Tm5lnnmDRuP/JnzxX3gMtlrcX0UesZdxyQqYQuEW4R51vmQ5xOZteUd8SJruMlTUzhtVw/Nq7eUBcqN2/HVotgfngif60yKEtoUx3WYOZlVJuJOh8u59fzSDPFYtQgqDUAGyGhQOAvKroXMcOYY0qjnStJR/G3aP+Jt1sLVlGV8POwr/6OGsqetnyF3TmTqZjENfnXh51oxe9qVUw2M78EzAJ+IM8lZ1MBPQ9ZWSVc4J3mWSrLKrMHReA5qdGoz0ODRsaA+vwxXA2cAM4qlfzBJA6581m4hzxItQw5dxrrBL3Y6kCbUcFxo1S8jyV44q//+7ASNNudZ6xeaNOSIUffqMn4A9lIjFctYn2gpEPAb3f7p3iIBN8H14FUGQ9ct2hPsL+cEsTgUrR47uJVN4n4wt/wgfwwHuOnLd4yobkofy8JvxSQTA7rMpDIc608SlZFJfZYcmbT0tAHpPE8MrtQ42siTUNWxqvWZOmvu9f0JPoQmg+6l7sZWwyfi6PXkxJnwBraUG0MYG4zYHQz3igy/XsFkx5tNQxw43qvI9dU3f0DdhOUlHKjmi1VAr2Kiy0HZwD8VeEbhh0OiDdMYspolQsYdSwjCcjeowIXNZVUPmL2wwIkYhmXKhGozdCJ4lRKbsf4NBh/XnQoS92NJEWOVOFs2YhN8c5QZFeK0pRdAG40hqvLbmoSA8xQmzOOEc7wLcme9JOsjPCEgpCwUs9E2DohMHRhUeyGIN6TFvrbny8nDuilsDpzrH5mS76APoIEJmItS67sQJ+nfwddzmjPxcBEBBCw0kWDwd0EZCkNeOD7NNQhtBm7KHL9mRxj6U1yWU2puzlIDtpYxdH4ZPeXBJkTGAJfUr/oTCz/iypY6uXaR2V1doPxJYlrw2ghH0D5gbrhFcIxzYwi4a/4hqVdf2DdxBp6vGYDjavxMAAoy+1+3aiO6S3W/QAKNVXagDtvsNtx7Ks+HKgo6U21B+QSZgIogV5Bt+BnXisdVfy9VyXV+2P5fMuvdpAjM1o/K9Z+XnE4EOCrue+kcdYHqAQ0/Y/OmNlQ6OI33jH/uD1RalPaHpJAm2av0/xtpqdXVKNDrc9F2izo23Wu7firgbURFDNX9eGGeYBhiypyXZft2j3hTvzE6PMWKsod//rEILDkzBXfi7xh0eFkfb3/1zzPK/PI5Nk3FbZyTl4mq5BfBoVoqiPHO4Q4QKZAlrQ3MdNfi3oxIjvsM3kAFv3fdufurqYR3PSwX/mpGy/GFI/B2MNPiNdOppWVbs/gjF3YH+QA9jMhlAbhvasAHstB0IJew09iAkmXHl1/TEj+jvHOpOGrPRQXbPADM+Ig2/OEcUcpgPTItMtW4DdqgfYVI/+4hAFWYjUGpOP/UwNuB7+BbKOcALbjobdgzeBQfjgNSp2GOpxzGLj70Vvq5cw2AoYENwKLUtJUX8sGRox4dVa/TN4xKwaKcl9XawQR/uNus700Hf17pyNnezrUgaY9e4MADhEDBpsJT6y1gDJs1q6wlwGhuUzGR7C8kgpjPyHWwsvrf3yn1zJEIRa5eSxoLAZOCR9xbuztxFRJW9ZmMYfCFJ0evm9F2fVnuje92Rc4Pl6A8bluN8MZyyJGZ0+sNSb//DvAFxC2BqlEsFwccWeAl6CyBcQV1bx4mQMBP1Jxqk1EUADNLeieS2dUFbQ/c/kvwItbZ7tx0st16viqd53WsRmPTKv2AD8CUnhtPWg5aUegNpsYgasaw2+EVooeNKmrW3MFtj76bYHJm5K9gpAXZXsE5U8DM8XmVOSJ1F1WnLy6nQup+jx52bAb+rCq6y9WXl2B2oZDhfDkW7H3oYfT/4xx5VncBuxMXP2lNfhUVQjSSzSRbuZFE4vFawlzveXxaYKVs8LpvAb8IRYF3ZHiRnm0ADeNPWocwxSzNseG7NrSEVZoHdKWqaGEBz1N8Pt7kFbqh3LYmAbm9i1IChIpLpM5AS6mr6OAPHMwwznVy61YpBYX8xZDN/a+lt7n+x5j4bNOVteZ8lj3hpAHSx1VR8vZHec4AHO9XFCdjZ9eRkSV65ljMmZVzaej2qFn/qt1lvWzNZEfHxK3qOJrHL6crr0CRzMox5f2e8ALBB4UGFZKA3tN6F6IXd32GTJXGQ7DTi9j/dNcLF9jCbDcWGKxoKTYblIwbLDReL00LRcDPMcQuXLMh5YzgtfjkFK1DP1iDzzYYVZz5M/kWYRlRpig1htVRjVCknm+h1M5LiEDXOyHREhvzCGpFZjHS0RsK27o2avgdilrJkalWqPW3D9gmwV37HKmfM3F8YZj2ar+vHFvf3B8CRoH4kDHIK9mrAg+owiEwNjjd9V+FsQKYR8czJrUkf7Qoi2YaW6EVDZp5zYlqiYtuXOTHk4fAcZ7qBbdLDiJq0WNV1l2+Hntk1mMWvxrYmc8kIx8G3rW36J6Ra4lLrTOCgiOihmow+YnzUT19jbV2B3RWqSHyxkhmgsBqMYWvOcUom1jDQ436+fcbu3xf2bbeqU/ca+C4DOKE+e3qvmeMqW3AxejfzBRFVcwVYPq4L0APSWWoJu+5UYX4qg5U6YTioqQGPG9XrnuZ/BkxuYpe6Li87+18EskyQW/uA+uk2rpHpr6hut2TlVbKgWkFpx+AZffweiw2+VittkEyf/ifinS/0ItRL2Jq3tQOcxPaWO2xrG68GdFoUpZgFXaP2wYVtRc6xYCfI1CaBqyWpg4bx8OHBQwsV4XWMibZZ0LYjWEy2IxQ1mZrf1/UNbYCJplWu3nZ4WpodIGVA05d+RWSS+ET9tH3RfGGmNI1cIY7evZZq7o+a0bjjygpmR3mVfalkT/SZGT27Q8QGalwGlDOS9VHCyFAIL0a1Q7JiW3saz9gqY8lqKynFrPCzxkU4SIfLc9VfCI5edgRhDXs0edO992nhTKHriREP1NJC6SROMgQ0xO5kNNZOhMOIT99AUElbxqeZF8A3xrfDJsWtDnUenAHdYWSwAbYjFqQZ+D5gi3hNK8CSxU9i6f6ClL9IGlj1OPMQAsr84YG6ijsJpCaGWj75c3yOZKBB9mNpQNPUKkK0D6wgLH8MGoyRxTX6Y05Q4AnYNXMZwXM4eij/9WpsM/9CoRnFQXGR6MEaY+FXvXEO3RO0JaStk6OXuHVATHJE+1W+TU3bSZ2ksMtqjO0zfSJCdBv7y2d8DMx6TfVme3q0ZpTKMMu4YL/t7ciTNtdDkwPogh3Cnjx7qk08SHwf+dksZ7M2vCOlfsF0hQ6J4ehPCaHTNrM/zBSOqD83dBEBCW/F/LEmeh0nOHd7oVl3/Qo/9GUDkkbj7yz+9cvvu+dDAtx8NzCDTP4iKdZvk9MWiizvtILLepysflSvTLFBZ37RLwiriqyRxYv/zrgFd/9XVHh/OmzBvDX4mitMR/lUavs2Vx6cR94lzAkplm3IRNy4TFfu47tuYs9EQPIPVta4P64tV+sZ7n3ued3cgEx2YK+QL5+xms6osk8qQbTyuKVGdaX9FQqk6qfDnT5ykxk0VK7KZ62b6DNDUfQlqGHxSMKv1P0XN5BqMeKG1P4Wp5QfZDUCEldppoX0U6ss2jIko2XpURKCIhfaOqLPfShdtS37ZrT+jFRSH2xYVV1rmT/MBtRQhxiO4MQ3iAGlaZi+9PWBEIXOVnu9jN1f921lWLZky9bqbM3J2MAAI9jmuAx3gyoEUa6P2ivs0EeNv/OR+AX6q5SW6l5HaoFuS6jr6yg9limu+P0KYKzfMXWcQSfTXzpOzKEKpwI3YGXZpSSy2LTlMgfmFA3CF6R5c9xWEtRuCg2ZPUQ2Nb6dRFTNd4TfGHrnEWSKHPuRyiJSDAZ+KX0VxmSHjGPbQTLVpqixia2uyhQ394gBMt7C3ZAmxn/DJS+l1fBsAo2Eir/C0jG9csd4+/tp12pPc/BVJGaK9mfvr7M/CeztrmCO5qY06Edi4xAGtiEhnWAbzLy2VEyazE1J5nPmgU4RpW4Sa0TnOT6w5lgt3/tMpROigHHmexBGAMY0mdcDbDxWIz41NgdD6oxgHsJRgr5RnT6wZAkTOcStU4NMOQNemSO7gxGahdEsC+NRVGxMUhQmmM0llWRbbmFGHzEqLM4Iw0H7577Kyo+Zf+2cUFIOw93gEY171vQaM0HLwpjpdRR6Jz7V0ckE7XzYJ0TmY9znLdzkva0vNrAGGT5SUZ5uaHDkcGvI0ySpwkasEgZPMseYcu85w8HPdSNi+4T6A83iAwDbxgeFcB1ZM2iGXzFcEOUlYVrEckaOyodfvaYSQ7GuB4ISE0nYJc15X/1ciDTPbPCgYJK55VkEor4LvzL9S2WDy4xj+6FOqVyTAC2ZNowheeeSI5hA/02l8UYkv4nk9iaVn+kCVEUstgk5Hyq+gJm6R9vG3rhuM904he/hFmNQaUIATB1y3vw+OmxP4X5Yi6A5I5jJufHCjF9+AGNwnEllZjUco6XhsO5T5+R3yxz5yLVOnAn0zuS+6zdj0nTJbEZCbXJdtpfYZfCeCOqJHoE2vPPFS6eRLjIJlG69X93nfR0mxSFXzp1Zc0lt/VafDaImhUMtbnqWVb9M4nGNQLN68BHP7AR8Il9dkcxzmBv8PCZlw9guY0lurbBsmNYlwJZsA/B15/HfkbjbwPddaVecls/elmDHNW2r4crAx43feNkfRwsaNq/yyJ0d/p5hZ6AZajz7DBfUok0ZU62gCzz7x8eVfJTKA8IWn45vINLSM1q+HF9CV9qF3zP6Ml21kPPL3CXzkuYUlnSqT+Ij4tI/od5KwIs+tDajDs64owN7tOAd6eucGz+KfO26iNcBFpbWA5732bBNWO4kHNpr9D955L61bvHCF/mwSrz6eQaDjfDEANqGMkFc+NGxpKZzCD2sj/JrHd+zlPQ8Iz7Q+2JVIiVCuCKoK/hlAEHzvk/Piq3mRL1rT/fEh9hoT5GJmeYswg1otiKydizJ/fS2SeKHVu6Z3JEHjiW8NaTQgP5xdBli8nC57XiN9hrquBu99hn9zqwo92+PM2JXtpeVZS0PdqR5mDyDreMMtEws+CpwaRyyzoYtfcvt9PJIW0fJVNNi/FFyRsea7peLvJrL+5b4GOXJ8tAr+ATk9f8KmiIsRhqRy0vFzwRV3Z5dZ3QqIU8JQ/uQpkJbjMUMFj2F9sCFeaBjI4+fL/oN3+LQgjI4zuAfQ+3IPIPFQBccf0clJpsfpnBxD84atwtupkGqKvrH7cGNl/QcWcSi6wcVDML6ljOgYbo+2BOAWNNjlUBPiyitUAwbnhFvLbnqw42kR3Yp2kv2dMeDdcGOX5kT4S6M44KHEB/SpCfl7xgsUvs+JNY9G3O2X/6FEt9FyAn57lrbiu+tl83sCymSvq9eZbe9mchL7MTf/Ta78e80zSf0hYY5eUU7+ff14jv7Xy8qjzfzzzvaJnrIdvFb5BLWKcWGy5/w7+vV2cvIfwHqdTB+RuJK5oj9mbt0Hy94AmjMjjwYNZlNS6uiyxNnwNyt3gdreLb64p/3+08nXkb92LTkkRgFOwk1oGEVllcOj5lv1hfAZywDows0944U8vUFw+A/nuVq/UCygsrmWIBnHyU01d0XJPwriEOvx/ISK6Pk4y2w0gmojZs7lU8TtakBAdne4v/aNxmMpK4VcGMp7si0yqsiolXRuOi1Z1P7SqD3Zmp0CWcyK4Ubmp2SXiXuI5nGLCieFHKHNRIlcY3Pys2dwMTYCaqlyWSITwr2oGXvyU3h1Pf8eQ3w1bnD7ilocVjYDkcXR3Oo1BXgMLTUjNw2xMVwjtp99NhSVc5aIWrDQT5DHPKtCtheBP4zHcw4dz2eRdTMamhlHhtfgqJJHI7NGDUw1XL8vsSeSHyKqDtqoAmrQqsYwvwi7HW3ojWyhIa5oz5xJTaq14NAzFLjVLR12rRNUQ6xohDnrWFb5bG9yf8aCD8d5phoackcNJp+Dw3Due3RM+5Rid7EuIgsnwgpX0rUWh/nqPtByMhMZZ69NpgvRTKZ62ViZ+Q7Dp5r4K0d7EfJuiy06KuIYauRh5Ecrhdt2QpTS1k1AscEHvapNbU3HL1F2TFyR33Wxb5MvH5iZsrn3SDcsxlnnshO8PLwmdGN+paWnQuORtZGX37uhFT64SeuPsx8UOokY6ON85WdQ1dki5zErsJGazcBOddWJEKqNPiJpsMD1GrVLrVY+AOdPWQneTyyP1hRX/lMM4ZogGGOhYuAdr7F/DOiAoc++cn5vlf0zkMUJ40Z1rlgv9BelPqVOpxKeOpzKdF8maK+1Vv23MO9k/8+qpLoxrIGH2EDQlnGmH8CD31G8QqlyQIcpmR5bwmSVw9/Ns6IHgulCRehvZ/+VrM60Cu/r3AontFfrljew74skYe2uyn7JKQtFQBQRJ9ryGic/zQOsbS4scUBctA8cPToQ3x6ZBQu6DPu5m1bnCtP8TllLYA0UTQNVqza5nfew3Mopy1GPUwG5jsl0OVXniPmAcmLqO5HG8Hv3nSLecE9oOjPDXcsTxoCBxYyzBdj4wmnyEV4kvFDunipS8SSkvdaMnTBN9brHUR8xdmmEAp/Pdqk9uextp1t+JrtXwpN/MG2w/qhRMpSNxQ1uhg/kKO30eQ/FyHUDkWHT8V6gGRU4DhDMxZu7xXij9Ui6jlpWmQCqJg3FkOTq3WKneCRYZxBXMNAVLQgHXSCGSqNdjebY94oyIpVjMYehAiFx/tqzBXFHZaL5PeeD74rW5OysFoUXY8sebUZleFTUa/+zBKVTFDopTReXNuZq47QjkWnxjirCommO4L/GrFtVV21EpMyw8wyThL5Y59d88xtlx1g1ttSICDwnof6lt/6zliPzgVUL8jWBjC0o2D6Kg+jNuThkAlaDJsq/AG2aKA//A76avw2KNqtv223P+Wq3StRDDNKFFgtsFukYt1GFDWooFVXitaNhb3RCyJi4cMeNjROiPEDb4k+G3+hD8tsg+5hhmSc/8t2JTSwYoCzAI75doq8QTHe+E/Tw0RQSUDlU+6uBeNN3h6jJGX/mH8oj0i3caCNsjvTnoh73BtyZpsflHLq6AfwJNCDX4S98h4+pCOhGKDhV3rtkKHMa3EG4J9y8zFWI4UsfNzC/Rl5midNn7gwoN9j23HGCQQ+OAZpTTPMdiVow740gIyuEtd0qVxMyNXhHcnuXRKdw5wDUSL358ktjMXmAkvIB73BLa1vfF9BAUZInPYJiwxqFWQQBVk7gQH4ojfUQ/KEjn+A/WR6EEe4CtbpoLe1mzHkajgTIoE0SLDHVauKhrq12zrAXBGbPPWKCt4DGedq3JyGRbmPFW32bE7T20+73BatV/qQhhBWfWBFHfhYWXjALts38FemnoT+9bn1jDBMcUMmYgSc0e7GQjv2MUBwLU8ionCpgV+Qrhg7iUIfUY6JFxR0Y+ZTCPM+rVuq0GNLyJXX6nrUTt8HzFBRY1E/FIm2EeVA9NcXrj7S6YYIChVQCWr/m2fYUjC4j0XLkzZ8GCSLfmkW3PB/xq+nlXsKVBOj7vTvqKCOMq7Ztqr3cQ+N8gBnPaAps+oGwWOkbuxnRYj/x/WjiDclVrs22xMK4qArE1Ztk1456kiJriw6abkNeRHogaPRBgbgF9Z8i/tbzWELN4CvbqtrqV9TtGSnmPS2F9kqOIBaazHYaJ9bi3AoDBvlZasMluxt0BDXfhp02Jn411aVt6S4TUB8ZgFDkI6TP6gwPY85w+oUQSsjIeXVminrwIdK2ZAawb8Se6XOJbOaliQxHSrnAeONDLuCnFejIbp4YDtBcQCwMsYiRZfHefuEJqJcwKTTJ8sx5hjHmJI1sPFHOr6W9AhZ2NAod38mnLQk1gOz2LCAohoQbgMbUK9RMEA3LkiF7Sr9tLZp6lkciIGhE2V546w3Mam53VtVkGbB9w0Yk2XiRnCmbpxmHr2k4eSC0RuNbjNsUfDIfc8DZvRvgUDe1IlKdZTzcT4ZGEb53dp8VtsoZlyXzLHOdAbsp1LPTVaHvLA0GYDFMbAW/WUBfUAdHwqLFAV+3uHvYWrCfhUOR2i89qvCBoOb48usAGdcF2M4aKn79k/43WzBZ+xR1L0uZfia70XP9soQReeuhZiUnXFDG1T8/OXNmssTSnYO+3kVLAgeiY719uDwL9FQycgLPessNihMZbAKG7qwPZyG11G1+ZA3jAX2yddpYfmaKBlmfcK/V0mwIRUDC0nJSOPUl2KB8h13F4dlVZiRhdGY5farwN+f9hEb1cRi41ZcGDn6Xe9MMSTOY81ULJyXIHSWFIQHstVYLiJEiUjktlHiGjntN5/btB8Fu+vp28zl2fZXN+dJDyN6EXhS+0yzqpl/LSJNEUVxmu7BsNdjAY0jVsAhkNuuY0E1G48ej25mSt+00yPbQ4SRCVkIwb6ISvYtmJRPz9Zt5dk76blf+lJwAPH5KDF+vHAmACLoCdG2Adii6dOHnNJnTmZtoOGO8Q1jy1veMw6gbLFToQmfJa7nT7Al89mRbRkZZQxJTKgK5Kc9INzmTJFp0tpAPzNmyL/F08bX3nhCumM/cR/2RPn9emZ3VljokttZD1zVWXlUIqEU7SLk5I0lFRU0AcENXBYazNaVzsVHA/sD3o9hm42wbHIRb/BBQTKzAi8s3+bMtpOOZgLdQzCYPfX3UUxKd1WYVkGH7lh/RBBgMZZwXzU9+GYxdBqlGs0LP+DZ5g2BWNh6FAcR944B+K/JTWI3t9YyVyRhlP4CCoUk/mmF7+r2pilVBjxXBHFaBfBtr9hbVn2zDuI0kEOG3kBx8CGdPOjX1ph1POOZJUO1JEGG0jzUy2tK4X0CgVNYhmkqqQysRNtKuPdCJqK3WW57kaV17vXgiyPrl4KEEWgiGF1euI4QkSFHFf0TDroQiLNKJiLbdhH0YBhriRNCHPxSqJmNNoketaioohqMglh6wLtEGWSM1EZbQg72h0UJAIPVFCAJOThpQGGdKfFovcwEeiBuZHN2Ob4uVM7+gwZLz1D9E7ta4RmMZ24OBBAg7Eh6dLXGofZ4U2TFOCQMKjwhVckjrydRS+YaqCw1kYt6UexuzbNEDyYLTZnrY1PzsHZJT4U+awO2xlqTSYu6n/U29O2wPXgGOEKDMSq+zTUtyc8+6iLp0ivav4FKx+xxVy4FxhIF/pucVDqpsVe2jFOfdZhTzLz2QjtzvsTCvDPU7bzDH2eXVKUV9TZ+qFtaSSxnYgYdXKwVreIgvWhT9eGDB2OvnWyPLfIIIfNnfIxU8nW7MbcH05nhlsYtaW9EZRsxWcKdEqInq1DiZPKCz7iGmAU9/ccnnQud2pNgIGFYOTAWjhIrd63aPDgfj8/sdlD4l+UTlcxTI9jbaMqqN0gQxSHs60IAcW3cH4p3V1aSciTKB29L1tz2eUQhRiTgTvmqc+sGtBNh4ky0mQJGsdycBREP+fAaSs1EREDVo5gvgi5+aCN7NECw30owbCc1mSpjiahyNVwJd1jiGgzSwfTpzf2c5XJvG/g1n0fH88KHNnf+u7ZiRMlXueSIsloJBUtW9ezvsx9grfsX/FNxnbxU1Lvg0hLxixypHKGFAaPu0xCD8oDTeFSyfRT6s8109GMUZL8m2xXp8X2dpPCWWdX84iga4BrTlOfqox4shqEgh/Ht4qRst52cA1xOIUuOxgfUivp6v5f8IVyaryEdpVk72ERAwdT4aoY1usBgmP+0m06Q216H/nubtNYxHaOIYjcach3A8Ez/zc0KcShhel0HCYjFsA0FjYqyJ5ZUH1aZw3+zWC0hLpM6GDfcAdn9fq2orPmZbW6XXrf+Krc9RtvII5jeD3dFoT1KwZJwxfUMvc5KLfn8rROW23Jw89sJ2a5dpB3qWDUBWF2iX8OCuKprHosJ2mflBR+Wqs86VvgI/XMnsqb97+VlKdPVysczPj8Jhzf+WCvGBHijAqYlavbF60soMWlHbvKT+ScvhprgeTln51xX0sF+Eadc/l2s2a5BgkVbHYyz0E85p0LstqH+gEGiR84nBRRFIn8hLSZrGwqjZ3E29cuGi+5Z5bp7EM8MWFa9ssS/vy4VrDfECSv7DSU84DaP0sXI3Ap4lWznQ65nQoTKRWU30gd7Nn8ZowUvGIx4aqyXGwmA/PB4qN8msJUODezUHEl0VP9uo+cZ8vPFodSIB4C7lQYjEFj8yu49C2KIV3qxMFYTevG8KqAr0TPlkbzHHnTpDpvpzziAiNFh8xiT7C/TiyH0EguUw4vxAgpnE27WIypV+uFN2zW7xniF/n75trs9IJ5amB1zXXZ1LFkJ6GbS/dFokzl4cc2mamVwhL4XU0Av5gDWAl+aEWhAP7t2VIwU+EpvfOPDcLASX7H7lZpXA2XQfbSlD4qU18NffNPoAKMNSccBfO9YVVgmlW4RydBqfHAV7+hrZ84WJGho6bNT0YMhxxLdOx/dwGj0oyak9aAkNJ8lRJzUuA8sR+fPyiyTgUHio5+Pp+YaKlHrhR41jY5NESPS3x+zTMe0S2HnLOKCOQPpdxKyviBvdHrCDRqO+l96HhhNBLXWv4yEMuEUYo8kXnYJM8oIgVM4XJ+xXOev4YbWeqsvgq0lmw4/PiYr9sYLt+W5EAuYSFnJEan8CwJwbtASBfLBBpJZiRPor/aCJBZsM+MhvS7ZepyHvU8m5WSmaZnxuLts8ojl6KkS8oSAHkq5GWlCB/NgJ5W3rO2Cj1MK7ahxsCrbTT3a0V/QQH+sErxV4XUWDHx0kkFy25bPmBMBQ6BU3HoHhhYcJB9JhP6NXUWKxnE0raXHB6U9KHpWdQCQI72qevp5fMzcm+AvC85rsynVQhruDA9fp9COe7N56cg1UKGSas89vrN+WlGLYTwi5W+0xYdKEGtGCeNJwXKDU0XqU5uQYnWsMwTENLGtbQMvoGjIFIEMzCRal4rnBAg7D/CSn8MsCvS+FDJJAzoiioJEhZJgAp9n2+1Yznr7H+6eT4YkJ9Mpj60ImcW4i4iHDLn9RydB8dx3QYm3rsX6n4VRrZDsYK6DCGwkwd5n3/INFEpk16fYpP6JtMQpqEMzcOfQGAHXBTEGzuLJ03GYQL9bmV2/7ExDlRf+Uvf1sM2frRtCWmal12pMgtonvSCtR4n1CLUZRdTHDHP1Otwqd+rcdlavnKjUB/OYXQHUJzpNyFoKpQK+2OgrEKpGyIgIBgn2y9QHnTJihZOpEvOKIoHAMGAXHmj21Lym39Mbiow4IF+77xNuewziNVBxr6KD5e+9HzZSBIlUa/AmsDFJFXeyrQakR3FwowTGcADJHcEfhGkXYNGSYo4dh4bxwLM+28xjiqkdn0/3R4UEkvcBrBfn/SzBc1XhKM2VPlJgKSorjDac96V2UnQYXl1/yZPT4DVelgO+soMjexXwYO58VLl5xInQUZI8jc3H2CPnCNb9X05nOxIy4MlecasTqGK6s2az4RjpF2cQP2G28R+7wDPsZDZC/kWtjdoHC7SpdPmqQrUAhMwKVuxCmYTiD9q/O7GHtZvPSN0CAUQN/rymXZNniYLlJDE70bsk6Xxsh4kDOdxe7A2wo7P9F5YvqqRDI6brf79yPCSp4I0jVoO4YnLYtX5nzspR5WB4AKOYtR1ujXbOQpPyYDvfRE3FN5zw0i7reehdi7yV0YDRKRllGCGRk5Yz+Uv1fYl2ZwrnGsqsjgAVo0xEUba8ohjaNMJNwTwZA/wBDWFSCpg1eUH8MYL2zdioxRTqgGQrDZxQyNzyBJPXZF0+oxITJAbj7oNC5JwgDMUJaM5GqlGCWc//KCIrI+aclEe4IA0uzv7cuj6GCdaJONpi13O544vbtIHBF+A+JeDFUQNy61Gki3rtyQ4aUywn6ru314/dkGiP8Iwjo0J/2Txs49ZkwEl4mx+iYUUO55I6pJzU4P+7RRs+DXZkyKUYZqVWrPF4I94m4Wx1tXeE74o9GuX977yvJ/jkdak8+AmoHVjI15V+WwBdARFV2IPirJgVMdsg1Pez2VNHqa7EHWdTkl3XTcyjG9BiueWFvQfXI8aWSkuuRmqi/HUuzqyvLJfNfs0txMqldYYflWB1BS31WkuPJGGwXUCpjiQSktkuBMWwHjSkQxeehqw1Kgz0Trzm7QbtgxiEPDVmWCNCAeCfROTphd1ZNOhzLy6XfJyG6Xgd5MCAZw4xie0Sj5AnY1/akDgNS9YFl3Y06vd6FAsg2gVQJtzG7LVq1OH2frbXNHWH/NY89NNZ4QUSJqL2yEcGADbT38X0bGdukqYlSoliKOcsSTuqhcaemUeYLLoI8+MZor2RxXTRThF1LrHfqf/5LcLAjdl4EERgUysYS2geE+yFdasU91UgUDsc2cSQ1ZoT9+uLOwdgAmifwQqF028INc2IQEDfTmUw3eZxvz7Ud1z3xc1PQfeCvfKsB9jOhRj7rFyb9XcDWLcYj0bByosychMezMLVkFiYcdBBQtvI6K0KRuOZQH2kBsYHJaXTkup8F0eIhO1/GcIwWKpr2mouB7g5TUDJNvORXPXa/mU8bh27TAZYBe2sKx4NSv5OjnHIWD2RuysCzBlUfeNXhDd2jxnHoUlheJ3jBApzURy0fwm2FwwsSU0caQGl0Kv8hopRQE211NnvtLRsmCNrhhpEDoNiZEzD2QdJWKbRRWnaFedXHAELSN0t0bfsCsMf0ktfBoXBoNA+nZN9+pSlmuzspFevmsqqcMllzzvkyXrzoA+Ryo1ePXpdGOoJvhyru+EBRsmOp7MXZ0vNUMUqHLUoKglg1p73sWeZmPc+KAw0pE2zIsFFE5H4192KwDvDxdxEYoDBDNZjbg2bmADTeUKK57IPD4fTYF4c6EnXx/teYMORBDtIhPJneiZny7Nv/zG+YmekIKCoxr6kauE2bZtBLufetNG0BtBY7f+/ImUypMBvdWu/Q7vTMRzw5aQGZWuc1V0HEsItFYMIBnoKGZ0xcarba/TYZq50kCaflFysYjA4EDKHqGdpYWdKYmm+a7TADmW35yfnOYpZYrkpVEtiqF0EujI00aeplNs2k+qyFZNeE3CDPL9P6b4PQ/kataHkVpLSEVGK7EX6rAa7IVNrvZtFvOA6okKvBgMtFDAGZOx88MeBcJ8AR3AgUUeIznAN6tjCUipGDZONm1FjWJp4A3QIzSaIOmZ7DvF/ysYYbM/fFDOV0jntAjRdapxJxL0eThpEhKOjCDDq2ks+3GrwxqIFKLe1WdOzII8XIOPGnwy6LKXVfpSDOTEfaRsGujhpS4hBIsMOqHbl16PJxc4EkaVu9wpEYlF/84NSv5Zum4drMfp9yXbzzAOJqqS4YkI4cBrFrC7bMPiCfgI3nNZAqkk3QOZqR+yyqx+nDQKBBBZ7QKrfGMCL+XpqFaBJU0wpkBdAhbR4hJsmT5aynlvkouoxm/NjD5oe6BzVIO9uktM+/5dEC5P7vZvarmuO/lKXz4sBabVPIATuKTrwbJP8XUkdM6uEctHKXICUJGjaZIWRbZp8czquQYfY6ynBUCfIU+gG6wqSIBmYIm9pZpXdaL121V7q0VjDjmQnXvMe7ysoEZnZL15B0SpxS1jjd83uNIOKZwu5MPzg2NhOx3xMOPYwEn2CUzbSrwAs5OAtrz3GAaUkJOU74XwjaYUmGJdZBS1NJVkGYrToINLKDjxcuIlyfVsKQSG/G4DyiO2SlQvJ0d0Ot1uOG5IFSAkq+PRVMgVMDvOIJMdqjeCFKUGRWBW9wigYvcbU7CQL/7meF2KZAaWl+4y9uhowAX7elogAvItAAxo2+SFxGRsHGEW9BnhlTuWigYxRcnVUBRQHV41LV+Fr5CJYV7sHfeywswx4XMtUx6EkBhR+q8AXXUA8uPJ73Pb49i9KG9fOljvXeyFj9ixgbo6CcbAJ7WHWqKHy/h+YjBwp6VcN7M89FGzQ04qbrQtgrOFybg3gQRTYG5xn73ArkfQWjCJROwy3J38Dx/D7jOa6BBNsitEw1wGq780EEioOeD+ZGp2J66ADiVGMayiHYucMk8nTK2zzT9CnEraAk95kQjy4k0GRElLL5YAKLQErJ5rp1eay9O4Fb6yJGm9U4FaMwPGxtKD6odIIHKoWnhKo1U8KIpFC+MVn59ZXmc7ZTBZfsg6FQ8W10YfTr4u0nYrpHZbZ1jXiLmooF0cOm0+mPnJBXQtepc7n0BqOipNCqI6yyloTeRShNKH04FIo0gcMk0H/xThyN4pPAWjDDkEp3lNNPRNVfpMI44CWRlRgViP64eK0JSRp0WUvCWYumlW/c58Vcz/yMwVcW5oYb9+26TEhwvbxiNg48hl1VI1UXTU//Eta+BMKnGUivctfL5wINDD0giQL1ipt6U7C9cd4+lgqY2lMUZ02Uv6Prs+ZEZer7ZfWBXVghlfOOrClwsoOFKzWEfz6RZu1eCs+K8fLvkts5+BX0gyrFYve0C3qHrn5U/Oh6D/CihmWIrY7HUZRhJaxde+tldu6adYJ+LeXupQw0XExC36RETdNFxcq9glMu4cNQSX9cqR/GQYp+IxUkIcNGWVU7ZtGa6P3XAyodRt0XeS3Tp01AnCh0ZbUh4VrSZeV9RWfSoWyxnY3hzcZ30G/InDq4wxRrEejreBxnhIQbkxenxkaxl+k7eLUQkUR6vKJ2iDFNGX3WmVA1yaOH+mvhBd+sE6vacQzFobwY5BqEAFmejwW5ne7HtVNolOUgJc8CsUxmc/LBi8N5mu9VsIA5HyErnS6zeCz7VLI9+n/hbT6hTokMXTVyXJRKSG2hd2labXTbtmK4fNH3IZBPreSA4FMeVouVN3zG5x9CiGpLw/3pceo4qGqp+rVp+z+7yQ98oEf+nyH4F3+J9IheDBa94Wi63zJbLBCIZm7P0asHGpIJt3PzE3m0S4YIWyXBCVXGikj8MudDPB/6Nm2v4IxJ5gU0ii0guy5SUHqGUYzTP0jIJU5E82RHUXtX4lDdrihBLdP1YaG1AGUC12rQKuIaGvCpMjZC9bWSCYnjDlvpWbkdXMTNeBHLKiuoozMGIvkczmP0aRJSJ8PYnLCVNhKHXBNckH79e8Z8Kc2wUej4sQZoH8qDRGkg86maW/ZQWGNnLcXmq3FlXM6ssR/3P6E/bHMvm6HLrv1yRixit25JsH3/IOr2UV4BWJhxXW5BJ6Xdr07n9kF3ZNAk6/Xpc5MSFmYJ2R7bdL8Kk7q1OU9Elg/tCxJ8giT27wSTySF0GOxg4PbYJdi/Nyia9Nn89CGDulfJemm1aiEr/eleGSN+5MRrVJ4K6lgyTTIW3i9cQ0dAi6FHt0YMbH3wDSAtGLSAccezzxHitt1QdhW36CQgPcA8vIIBh3/JNjf/Obmc2yzpk8edSlS4lVdwgW5vzbYEyFoF4GCBBby1keVNueHAH+evi+H7oOVfS3XuPQSNTXOONAbzJeSb5stwdQHl1ZjrGoE49I8+A9j3t+ahhQj74FCSWpZrj7wRSFJJnnwi1T9HL5qrCFW/JZq6P62XkMWTb+u4lGpKfmmwiJWx178GOG7KbrZGqyWwmuyKWPkNswkZ1q8uptUlviIi+AXh2bOOTOLsrtNkfqbQJeh24reebkINLkjut5r4d9GR/r8CBa9SU0UQhsnZp5cP+RqWCixRm7i4YRFbtZ4EAkhtNa6jHb6gPYQv7MKqkPLRmX3dFsK8XsRLVZ6IEVrCbmNDc8o5mqsogjAQfoC9Bc7R6gfw03m+lQpv6kTfhxscDIX6s0w+fBxtkhjXAXr10UouWCx3C/p/FYwJRS/AXRKkjOb5CLmK4XRe0+xeDDwVkJPZau52bzLEDHCqV0f44pPgKOkYKgTZJ33fmk3Tu8SdxJ02SHM8Fem5SMsWqRyi2F1ynfRJszcFKykdWlNqgDA/L9lKYBmc7Zu/q9ii1FPF47VJkqhirUob53zoiJtVVRVwMR34gV9iqcBaHbRu9kkvqk3yMpfRFG49pKKjIiq7h/VpRwPGTHoY4cg05X5028iHsLvUW/uz+kjPyIEhhcKUwCkJAwbR9pIEGOn8z6svAO8i89sJ3dL5qDWFYbS+HGPRMxYwJItFQN86YESeJQhn2urGiLRffQeLptDl8dAgb+Tp47UQPxWOw17OeChLN1WnzlkPL1T5O+O3Menpn4C3IY5LEepHpnPeZHbvuWfeVtPlkH4LZjPbBrkJT3NoRJzBt86CO0Xq59oQ+8dsm0ymRcmQyn8w71mhmcuEI5byuF+C88VPYly2sEzjlzAQ3vdn/1+Hzguw6qFNNbqenhZGbdiG6RwZaTG7jTA2X9RdXjDN9yj1uQpyO4Lx8KRAcZcbZMafp4wPOd5MdXoFY52V1A8M9hi3sso93+uprE0qYNMjkE22CvK4HuUxqN7oIz5pWuETq1lQAjqlSlqdD2Rnr/ggp/TVkQYjn9lMfYelk2sH5HPdopYo7MHwlV1or9Bxf+QCyLzm92vzG2wjiIjC/ZHEJzeroJl6bdFPTpZho5MV2U86fLQqxNlGIMqCGy+9WYhJ8ob1r0+Whxde9L2PdysETv97O+xVw+VNN1TZSQN5I6l9m5Ip6pLIqLm4a1B1ffH6gHyqT9p82NOjntRWGIofO3bJz5GhkvSWbsXueTAMaJDou99kGLqDlhwBZNEQ4mKPuDvVwSK4WmLluHyhA97pZiVe8g+JxmnJF8IkV/tCs4Jq/HgOoAEGR9tCDsDbDmi3OviUQpG5D8XmKcSAUaFLRXb2lmJTNYdhtYyfjBYZQmN5qT5CNuaD3BVnlkCk7bsMW3AtXkNMMTuW4HjUERSJnVQ0vsBGa1wo3Qh7115XGeTF3NTz8w0440AgU7c3bSXO/KMINaIWXd0oLpoq/0/QJxCQSJ9XnYy1W7TYLBJpHsVWD1ahsA7FjNvRd6mxCiHsm8g6Z0pnzqIpF1dHUtP2ITU5Z1hZHbu+L3BEEStBbL9XYvGfEakv1bmf+bOZGnoiuHEdlBnaChxYKNzB23b8sw8YyT7Ajxfk49eJIAvdbVkdFCe2J0gMefhQ0bIZxhx3fzMIysQNiN8PgOUKxOMur10LduigREDRMZyP4oGWrP1GFY4t6groASsZ421os48wAdnrbovNhLt7ScNULkwZ5AIZJTrbaKYTLjA1oJ3sIuN/aYocm/9uoQHEIlacF1s/TM1fLcPTL38O9fOsjMEIwoPKfvt7opuI9G2Hf/PR4aCLDQ7wNmIdEuXJ/QNL72k5q4NejAldPfe3UVVqzkys8YZ/jYOGOp6c+YzRCrCuq0M11y7TiN6qk7YXRMn/gukxrEimbMQjr3jwRM6dKVZ4RUfWQr8noPXLJq6yh5R3EH1IVOHESst/LItbG2D2vRsZRkAObzvQAAD3mb3/G4NzopI0FAiHfbpq0X72adg6SRj+8OHMShtFxxLZlf/nLgRLbClwl5WmaYSs+yEjkq48tY7Z2bE0N91mJwt+ua0NlRJIDh0HikF4UvSVorFj2YVu9YeS5tfvlVjPSoNu/Zu6dEUfBOT555hahBdN3Sa5Xuj2Rvau1lQNIaC944y0RWj9UiNDskAK1WoL+EfXcC6IbBXFRyVfX/WKXxPAwUyIAGW8ggZ08hcijKTt1YKnUO6QPvcrmDVAb0FCLIXn5id4fD/Jx4tw/gbXs7WF9b2RgXtPhLBG9vF5FEkdHAKrQHZAJC/HWvk7nvzzDzIXZlfFTJoC3JpGgLPBY7SQTjGlUvG577yNutZ1hTfs9/1nkSXK9zzKLRZ3VODeKUovJe0WCq1zVMYxCJMenmNzPIU2S8TA4E7wWmbNkxq9rI2dd6v0VpcAPVMxnDsvWTWFayyqvKZO7Z08a62i/oH2/jxf8rpmfO64in3FLiL1GX8IGtVE9M23yGsIqJbxDTy+LtaMWDaPqkymb5VrQdzOvqldeU0SUi6IirG8UZ3jcpRbwHa1C0Dww9G/SFX3gPvTJQE+kyz+g1BeMILKKO+olcHzctOWgzxYHnOD7dpCRtuZEXACjgqesZMasoPgnuDC4nUviAAxDc5pngjoAITIkvhKwg5d608pdrZcA+qn5TMT6Uo/QzBaOxBCLTJX3Mgk85rMfsnWx86oLxf7p2PX5ONqieTa/qM3tPw4ZXvlAp83NSD8F7+ZgctK1TpoYwtiU2h02HCGioH5tkVCqNVTMH5p00sRy2JU1qyDBP2CII/Dg4WDsIl+zgeX7589srx6YORRQMBfKbodbB743Tl4WLKOEnwWUVBsm94SOlCracU72MSyj068wdpYjyz1FwC2bjQnxnB6Mp/pZ+yyZXtguEaYB+kqhjQ6UUmwSFazOb+rhYjLaoiM+aN9/8KKn0zaCTFpN9eKwWy7/u4EHzO46TdFSNjMfn2iPSJwDPCFHc0I1+vjdAZw5ZjqR/uzi9Zn20oAa5JnLEk/EA3VRWE7J/XrupfFJPtCUuqHPpnlL7ISJtRpSVcB8qsZCm2QEkWoROtCKKxUh3yEcMbWYJwk6DlEBG0bZP6eg06FL3v6RPb7odGuwm7FN8fG4woqtB8e7M5klPpo97GoObNwt+ludTAmxyC5hmcFx+dIvEZKI6igFKHqLH01iY1o7903VzG9QGetyVx5RNmBYUU+zIuSva/yIcECUi4pRmE3VkF2avqulQEUY4yZ/wmNboBzPmAPey3+dSYtBZUjeWWT0pPwCz4Vozxp9xeClIU60qvEFMQCaPvPaA70WlOP9f/ey39macvpGCVa+zfa8gO44wbxpJUlC8GN/pRMTQtzY8Z8/hiNrU+Zq64ZfFGIkdj7m7abcK1EBtws1X4J/hnqvasPvvDSDYWN+QcQVGMqXalkDtTad5rYY0TIR1Eqox3czwPMjKPvF5sFv17Thujr1IZ1Ytl4VX1J0vjXKmLY4lmXipRAro0qVGEcXxEVMMEl54jQMd4J7RjgomU0j1ptjyxY+cLiSyXPfiEcIS2lWDK3ISAy6UZ3Hb5vnPncA94411jcy75ay6B6DSTzK6UTCZR9uDANtPBrvIDgjsfarMiwoax2OlLxaSoYn4iRgkpEGqEkwox5tyI8aKkLlfZ12lO11TxsqRMY89j5JaO55XfPJPDL1LGSnC88Re9Ai+Nu5bZjtwRrvFITUFHPR4ZmxGslQMecgbZO7nHk32qHxYkdvWpup07ojcMCaVrpFAyFZJJbNvBpZfdf39Hdo2kPtT7v0/f8R/B5Nz4f1t9/3zNM/7n6SUHfcWk5dfQFJvcJMgPolGCpOFb/WC0FGWU2asuQyT+rm88ZKZ78Cei/CAh939CH0JYbpZIPtxc2ufXqjS3pHH9lnWK4iJ7OjR/EESpCo2R3MYKyE7rHfhTvWho4cL1QdN4jFTyR6syMwFm124TVDDRXMNveI1Dp/ntwdz8k8kxw7iFSx6+Yx6O+1LzMVrN0BBzziZi9kneZSzgollBnVwBh6oSOPHXrglrOj+QmR/AESrhDpKrWT+8/AiMDxS/5wwRNuGQPLlJ9ovomhJWn8sMLVItQ8N/7IXvtD8kdOoHaw+vBSbFImQsv/OCAIui99E+YSIOMlMvBXkAt+NAZK8wB9Jf8CPtB+TOUOR+z71d/AFXpPBT6+A5FLjxMjLIEoJzrQfquvxEIi+WoUzGR1IzQFNvbYOnxb2PyQ0kGdyXKzW2axQL8lNAXPk6NEjqrRD1oZtKLlFoofrXw0dCNWASHzy+7PSzOUJ3XtaPZsxLDjr+o41fKuKWNmjiZtfkOzItvlV2MDGSheGF0ma04qE3TUEfqJMrXFm7DpK+27DSvCUVf7rbNoljPhha5W7KBqVq0ShUSTbRmuqPtQreVWH4JET5yMhuqMoSd4r/N8sDmeQiQQvi1tcZv7Moc7dT5X5AtCD6kNEGZOzVcNYlpX4AbTsLgSYYliiPyVoniuYYySxsBy5cgb3pD+EK0Gpb0wJg031dPgaL8JZt6sIvzNPEHfVPOjXmaXj4bd4voXzpZ5GApMhILgMbCEWZ2zwgdeQgjNHLbPIt+KqxRwWPLTN6HwZ0Ouijj4UF+Sg0Au8XuIKW0WxlexdrFrDcZJ8Shauat3X0XmHygqgL1nAu2hrJFb4wZXkcS+i36KMyU1yFvYv23bQUJi/3yQpqr/naUOoiEWOxckyq/gq43dFou1DVDaYMZK9tho7+IXXokBCs5GRfOcBK7g3A+jXQ39K4YA8PBRW4m5+yR0ZAxWJncjRVbITvIAPHYRt1EJ3YLiUbqIvoKHtzHKtUy1ddRUQ0AUO41vonZDUOW+mrszw+SW/6Q/IUgNpcXFjkM7F4CSSQ2ExZg85otsMs7kqsQD4OxYeBNDcSpifjMoLb7GEbGWTwasVObmB/bfPcUlq0wYhXCYEDWRW02TP5bBrYsKTGWjnWDDJ1F7zWai0zW/2XsCuvBQjPFcTYaQX3tSXRSm8hsAoDdjArK/OFp6vcWYOE7lizP0Yc+8p16i7/NiXIiiQTp7c7Xus925VEtlKAjUdFhyaiLT7VxDagprMFwix4wZ05u0qj7cDWFd0W9OYHIu3JbJKMXRJ1aYNovugg+QqRN7fNHSi26VSgBpn+JfMuPo3aeqPWik/wI5Rz3BWarPQX4i5+dM0npwVOsX+KsOhC7vDg+OJsz4Q5zlnIeflUWL6QYMbf9WDfLmosLF4Qev3mJiOuHjoor/dMeBpA9iKDkMjYBNbRo414HCxjsHrB4EXNbHzNMDHCLuNBG6Sf+J4MZ/ElVsDSLxjIiGsTPhw8BPjxbfQtskj+dyNMKOOcUYIRBEIqbazz3lmjlRQhplxq673VklMMY6597vu+d89ec/zq7Mi4gQvh87ehYbpOuZEXj5g/Q7S7BFDAAB9DzG35SC853xtWVcnZQoH54jeOqYLR9NDuwxsVthTV7V99n/B7HSbAytbEyVTz/5NhJ8gGIjG0E5j3griULUd5Rg7tQR+90hJgNQKQH2btbSfPcaTOfIexc1db1BxUOhM1vWCpLaYuKr3FdNTt/T3PWCpEUWDKEtzYrjpzlL/wri3MITKsFvtF8QVV/NhVo97aKIBgdliNc10dWdXVDpVtsNn+2UIolrgqdWA4EY8so0YvB4a+aLzMXiMAuOHQrXY0tr+CL10JbvZzgjJJuB1cRkdT7DUqTvnswVUp5kkUSFVtIIFYK05+tQxT6992HHNWVhWxUsD1PkceIrlXuUVRogwmfdhyrf6zzaL8+c0L7GXMZOteAhAVQVwdJh+7nrX7x4LaIIfz2F2v7Dg/uDfz2Fa+4gFm2zHAor8UqimJG3VTJtZEoFXhnDYXvxMJFc6ku2bhbCxzij2z5UNuK0jmp1mnvkVNUfR+SEmj1Lr94Lym75PO7Fs0MIr3GdsWXRXSfgLTVY0FLqba97u1In8NAcY7IC6TjWLigwKEIm43NxTdaVTv9mcKkzuzBkKd8x/xt1p/9BbP7Wyb4bpo1K1gnOpbLvKz58pWl3B55RJ/Z5mRDLPtNQg14jdOEs9+h/V5UVpwrAI8kGbX8KPVPDIMfIqKDjJD9UyDOPhjZ3vFAyecwyq4akUE9mDOtJEK1hpDyi6Ae87sWAClXGTiwPwN7PXWwjxaR79ArHRIPeYKTunVW24sPr/3HPz2IwH8oKH4OlWEmt4BLM6W5g4kMcYbLwj2usodD1088stZA7VOsUSpEVl4w7NMb1EUHMRxAxLF0CIV+0L3iZb+ekB1vSDSFjAZ3hfLJf7gFaXrOKn+mhR+rWw/eTXIcAgl4HvFuBg1LOmOAwJH3eoVEjjwheKA4icbrQCmvAtpQ0mXG0agYp5mj4Rb6mdQ+RV4QBPbxMqh9C7o8nP0Wko2ocnCHeRGhN1XVyT2b9ACsL+6ylUy+yC3QEnaKRIJK91YtaoSrcWZMMwxuM0E9J68Z+YyjA0g8p1PfHAAIROy6Sa04VXOuT6A351FOWhKfTGsFJ3RTJGWYPoLk5FVK4OaYR9hkJvezwF9vQN1126r6isMGXWTqFW+3HL3I/jurlIdDWIVvYY+s6yq7lrFSPAGRdnU7PVwY/SvWbZGpXzy3BQ2LmAJlrONUsZs4oGkly0V267xbD5KMY8woNNsmWG1VVgLCra8aQBBcI4DP2BlNwxhiCtHlaz6OWFoCW0vMR3ErrG7JyMjTSCnvRcsEHgmPnwA6iNpJ2DrFb4gLlhKJyZGaWkA97H6FFdwEcLT6DRQQL++fOkVC4cYGW1TG/3iK5dShRSuiBulmihqgjR45Vi03o2RbQbP3sxt90VxQ6vzdlGfkXmmKmjOi080JSHkLntjvsBJnv7gKscOaTOkEaRQqAnCA4HWtB4XnMtOhpRmH2FH8tTXrIjAGNWEmudQLCkcVlGTQ965Kh0H6ixXbgImQP6b42B49sO5C8pc7iRlgyvSYvcnH9FgQ3azLbQG2cUW96SDojTQStxkOJyOuDGTHAnnWkz29aEwN9FT8EJ4yhXOg+jLTrCPKeEoJ9a7lDXOjEr8AgX4BmnMQ668oW0zYPyQiVMPxKRHtpfnEEyaKhdzNVThlxxDQNdrHeZiUFb6NoY2KwvSb7BnRcpJy+/g/zAYx3fYSN5QEaVD2Y1VsNWxB0BSO12MRsRY8JLfAezRMz5lURuLUnG1ToKk6Q30FughqWN6gBNcFxP/nY/iv+iaUQOa+2Nuym46wtI/DvSfzSp1jEi4SdYBE7YhTiVV5cX9gwboVDMVgZp5YBQlHOQvaDNfcCoCJuYhf5kz5kwiIKPjzgpcRJHPbOhJajeoeRL53cuMahhV8Z7IRr6M4hW0JzT7mzaMUzQpm866zwM7Cs07fJYXuWvjAMkbe5O6V4bu71sOG6JQ4oL8zIeXHheFVavzxmlIyBkgc9IZlEDplMPr8xlcyss4pVUdwK1e7CK2kTsSdq7g5SHRAl3pYUB9Ko4fsh4qleOyJv1z3KFSTSvwEcRO/Ew8ozEDYZSqpfoVW9uhJfYrNAXR0Z3VmeoAD+rVWtwP/13sE/3ICX3HhDG3CMc476dEEC0K3umSAD4j+ZQLVdFOsWL2C1TH5+4KiSWH+lMibo+B55hR3Gq40G1n25sGcN0mEcoU2wN9FCVyQLBhYOu9aHVLWjEKx2JIUZi5ySoHUAI9b8hGzaLMxCZDMLhv8MkcpTqEwz9KFDpCpqQhVmsGQN8m24wyB82FAKNmjgfKRsXRmsSESovAwXjBIoMKSG51p6Um8b3i7GISs7kjTq/PZoioCfJzfKdJTN0Q45kQEQuh9H88M3yEs3DbtRTKALraM0YC8laiMiOOe6ADmTcCiREeAWZelBaEXRaSuj2lx0xHaRYqF65O0Lo5OCFU18A8cMDE4MLYm9w2QSr9NgQAIcRxZsNpA7UJR0e71JL+VU+ISWFk5I97lra8uGg7GlQYhGd4Gc6rxsLFRiIeGO4abP4S4ekQ1fiqDCy87GZHd52fn5aaDGuvOmIofrzpVwMvtbreZ/855OaXTRcNiNE0wzGZSxbjg26v8ko8L537v/XCCWP2MFaArJpvnkep0pA+O86MWjRAZPQRfznZiSIaTppy6m3p6HrNSsY7fDtz7Cl4V/DJAjQDoyiL2uwf1UHVd2AIrzBUSlJaTj4k6NL97a/GqhWKU9RUmjnYKpm2r+JYUcrkCuZKvcYvrg8pDoUKQywY9GDWg03DUFSirlUXBS5SWn/KAntnf0IdHGL/7mwXqDG+LZYjbEdQmqUqq4y54TNmWUP7IgcAw5816YBzwiNIJiE9M4lPCzeI/FGBeYy3p6IAmH4AjXXmvQ4Iy0Y82NTobcAggT2Cdqz6Mx4TdGoq9fn2etrWKUNFyatAHydQTVUQ2S5OWVUlugcNvoUrlA8cJJz9MqOa/W3iVno4zDHfE7zhoY5f5lRTVZDhrQbR8LS4eRLz8iPMyBL6o4PiLlp89FjdokQLaSBmKHUwWp0na5fE3v9zny2YcDXG/jfI9sctulHRbdkI5a4GOPJx4oAJQzVZ/yYAado8KNZUdEFs9ZPiBsausotXMNebEgr0dyopuqfScFJ3ODNPHgclACPdccwv0YJGQdsN2lhoV4HVGBxcEUeUX/alr4nqpcc1CCR3vR7g40zteQg/JvWmFlUE4mAiTpHlYGrB7w+U2KdSwQz2QJKBe/5eiixWipmfP15AFWrK8Sh1GBBYLgzki1wTMhGQmagXqJ2+FuqJ8f0XzXCVJFHQdMAw8xco11HhM347alrAu+wmX3pDFABOvkC+WPX0Uhg1Z5MVHKNROxaR84YV3s12UcM+70cJ460SzEaKLyh472vOMD3XnaK7zxZcXlWqenEvcjmgGNR2OKbI1s8U+iwiW+HotHalp3e1MGDy6BMVIvajnAzkFHbeVsgjmJUkrP9OAwnEHYXVBqYx3q7LvXjoVR0mY8h+ZaOnh053pdsGkmbqhyryN01eVHySr+CkDYkSMeZ1xjPNVM+gVLTDKu2VGsMUJqWO4TwPDP0VOg2/8ITbAUaMGb4LjL7L+Pi11lEVMXTYIlAZ/QHmTENjyx3kDkBdfcvvQt6tKk6jYFM4EG5UXDTaF5+1ZjRz6W7MdJPC+wTkbDUim4p5QQH3b9kGk2Bkilyeur8Bc20wm5uJSBO95GfYDI1EZipoRaH7uVveneqz43tlTZGRQ4a7CNmMHgXyOQQOL6WQkgMUTQDT8vh21aSdz7ERiZT1jK9F+v6wgFvuEmGngSvIUR2CJkc5tx1QygfZnAruONobB1idCLB1FCfO7N1ZdRocT8/Wye+EnDiO9pzqIpnLDl4bkaRKW+ekBVwHn46Shw1X0tclt/0ROijuUB4kIInrVJU4buWf4YITJtjOJ6iKdr1u+flgQeFH70GxKjhdgt/MrwfB4K/sXczQ+9zYcrD4dhY6qZhZ010rrxggWA8JaZyg2pYij8ieYEg1aZJkZK9O1Re7sB0iouf60rK0Gd+AYlp7soqCBCDGwfKeUQhCBn0E0o0GS6PdmjLi0TtCYZeqazqwN+yNINIA8Lk3iPDnWUiIPLGNcHmZDxfeK0iAdxm/T7LnN+gemRL61hHIc0NCAZaiYJR+OHnLWSe8sLrK905B5eEJHNlWq4RmEXIaFTmo49f8w61+NwfEUyuJAwVqZCLFcyHBKAcIVj3sNzfEOXzVKIndxHw+AR93owhbCxUZf6Gs8cz6/1VdrFEPrv330+9s6BtMVPJ3zl/Uf9rUi0Z/opexfdL3ykF76e999GPfVv8fJv/Y/+/5hEMon1tqNFyVRevV9y9/uIvsG3dbB8GRRrgaEXfhx+2xeOFt+cEn3RZanNxdEe2+B6MHpNbrRE53PlDifPvFcp4kO78ILR0T4xyW/WGPyBsqGdoA7zJJCu1TKbGfhnqgnRbxbB2B3UZoeQ2bz2sTVnUwokTcTU21RxN1PYPS3Sar7T0eRIsyCNowr9amwoMU/od9s2APtiKNL6ENOlyKADstAEWKA+sdKDhrJ6BOhRJmZ+QJbAaZ3/5Fq0/lumCgEzGEbu3yi0Y4I4EgVAjqxh4HbuQn0GrRhOWyAfsglQJAVL1y/6yezS2k8RE2MstJLh92NOB3GCYgFXznF4d25qiP4ZCyI4RYGesut6FXK6GwPpKK8WHEkhYui0AyEmr5Ml3uBFtPFdnioI8RiCooa7Z1G1WuyIi3nSNglutc+xY8BkeW3JJXPK6jd2VIMpaSxpVtFq+R+ySK9J6WG5Qvt+C+QH1hyYUOVK7857nFmyDBYgZ/o+AnibzNVqyYCJQvyDXDTK+iXdkA71bY7TL3bvuLxLBQ8kbTvTEY9aqkQ3+MiLWbEgjLzOH+lXgco1ERgzd80rDCymlpaRQbOYnKG/ODoFl46lzT0cjM5FYVvv0qLUbD5lyJtMUaC1pFlTkNONx6lliaX9o0i/1vws5bNKn5OuENQEKmLlcP4o2ZmJjD4zzd3Fk32uQ4uRWkPSUqb4LBe3EXHdORNB2BWsws5daRnMfNVX7isPSb1hMQdAJi1/qmDMfRUlCU74pmnzjbXfL8PVG8NsW6IQM2Ne23iCPIpryJjYbVnm5hCvKpMa7HLViNiNc+xTfDIaKm3jctViD8A1M9YPJNk003VVr4Zo2MuGW8vil8SLaGpPXqG7I4DLdtl8a4Rbx1Lt4w5Huqaa1XzZBtj208EJVGcmKYEuaeN27zT9EE6a09JerXdEbpaNgNqYJdhP1NdqiPKsbDRUi86XvvNC7rME5mrSQtrzAZVndtSjCMqd8BmaeGR4l4YFULGRBeXIV9Y4yxLFdyoUNpiy2IhePSWzBofYPP0eIa2q5JP4j9G8at/AqoSsLAUuRXtvgsqX/zYwsE+of6oSDbUOo4RMJw+DOUTJq+hnqwKim9Yy/napyZNTc2rCq6V9jHtJbxGPDwlzWj/Sk3zF/BHOlT/fSjSq7FqlPI1q6J+ru8Aku008SFINXZfOfnZNOvGPMtEmn2gLPt+H4QLA+/SYe4j398auzhKIp2Pok3mPC5q1IN1HgR+mnEfc4NeeHYwd2/kpszR3cBn7ni9NbIqhtSWFW8xbUJuUPVOeeXu3j0IGZmFNiwaNZ6rH4/zQ2ODz6tFxRLsUYZu1bfd1uIvfQDt4YD/efKYv8VF8bHGDgK22w2Wqwpi43vNCOXFJZCGMqWiPbL8mil6tsmOTXAWCyMCw73e2rADZj2IK6rqksM3EXF2cbLb4vjB14wa/yXK5vwU+05MzERJ5nXsXsW21o7M+gO0js2OyKciP5uF2iXyb2DiptwQeHeqygkrNsqVCSlldxBMpwHi1vfc8RKpP/4L3Lmpq6DZcvhDDfxTCE3splacTcOtXdK2g303dIWBVe2wD/Gvja1cClFQ67gw0t1ZUttsUgQ1Veky8oOpS6ksYEc4bqseCbZy766SvL3FodmnahlWJRgVCNjPxhL/fk2wyvlKhITH/VQCipOI0dNcRa5B1M5HmOBjTLeZQJy237e2mobwmDyJNHePhdDmiknvLKaDbShL+Is1XTCJuLQd2wmdJL7+mKvs294whXQD+vtd88KKk0DXP8B1Xu9J+xo69VOuFgexgTrcvI6SyltuLix9OPuE6/iRJYoBMEXxU4shQMf4Fjqwf1PtnJ/wWSZd29rhZjRmTGgiGTAUQqRz+nCdjeMfYhsBD5Lv60KILWEvNEHfmsDs2L0A252351eUoYxAysVaCJVLdH9QFWAmqJDCODUcdoo12+gd6bW2boY0pBVHWL6LQDK5bYWh1V8vFvi0cRpfwv7cJiMX3AZNJuTddHehTIdU0YQ/sQ1dLoF2xQPcCuHKiuCWOY30DHe1OwcClLAhqAKyqlnIbH/8u9ScJpcS4kgp6HKDUdiOgRaRGSiUCRBjzI5gSksMZKqy7Sd51aeg0tgJ+x0TH9YH2Mgsap9N7ENZdEB0bey2DMTrBA1hn56SErNHf3tKtqyL9b6yXEP97/rc+jgD2N1LNUH6RM9AzP3kSipr06RkKOolR7HO768jjWiH1X92jA7dkg7gcNcjqsZCgfqWw0tPXdLg20cF6vnQypg7gLtkazrHAodyYfENPQZsdfnjMZiNu4nJO97D1/sQE+3vNFzrSDOKw+keLECYf7RJwVHeP/j79833oZ0egonYB2FlFE5qj02B/LVOMJQlsB8uNg3Leg4qtZwntsOSNidR0abbZmAK4sCzvt8Yiuz2yrNCJoH5O8XvX/vLeR/BBYTWj0sOPYM/jyxRd5+/JziKAABaPcw/34UA3aj/gLZxZgRCWN6m4m3demanNgsx0P237/Q+Ew5VYnJPkyCY0cIVHoFn2Ay/e7U4P19APbPFXEHX94N6KhEMPG7iwB3+I+O1jd5n6VSgHegxgaSawO6iQCYFgDsPSMsNOcUj4q3sF6KzGaH/0u5PQoAj/8zq6Uc9MoNrGqhYeb2jQo0WlGlXjxtanZLS24/OIN5Gx/2g684BPDQpwlqnkFcxpmP/osnOXrFuu4PqifouQH0eF5qCkvITQbJw/Zvy5mAHWC9oU+cTiYhJmSfKsCyt1cGVxisKu+NymEQIAyaCgud/V09qT3nk/9s/SWsYtha7yNpzBIMM40rCSGaJ9u6lEkl00vXBiEt7p9P5IBCiavynEOv7FgLqPdeqxRiCwuFVMolSIUBcoyfUC2e2FJSAUgYdVGFf0b0Kn2EZlK97yyxrT2MVgvtRikfdaAW8RwEEfN+B7/eK8bBdp7URpbqn1xcrC6d2UjdsKbzCjBFqkKkoZt7Mrhg6YagE7spkqj0jOrWM+UGQ0MUlG2evP1uE1p2xSv4dMK0dna6ENcNUF+xkaJ7B764NdxLCpuvhblltVRAf7vK5qPttJ/9RYFUUSGcLdibnz6mf7WkPO3MkUUhR2mAOuGv8IWw5XG1ZvoVMnjSAZe6T7WYA99GENxoHkMiKxHlCuK5Gd0INrISImHQrQmv6F4mqU/TTQ8nHMDzCRivKySQ8dqkpQgnUMnwIkaAuc6/FGq1hw3b2Sba398BhUwUZSAIO8XZvnuLdY2n6hOXws+gq9BHUKcKFA6kz6FDnpxLPICa3qGhnc97bo1FT/XJk48LrkHJ2CAtBv0RtN97N21plfpXHvZ8gMJb7Zc4cfI6MbPwsW7AilCSXMFIEUEmir8XLEklA0ztYbGpTTGqttp5hpFTTIqUyaAIqvMT9A/x+Ji5ejA4Bhxb/cl1pUdOD6epd3yilIdO6j297xInoiBPuEDW2/UfslDyhGkQs7Wy253bVnlT+SWg89zYIK/9KXFl5fe+jow2rd5FXv8zDPrmfMXiUPt9QBO/iK4QGbX5j/7Rx1c1vzsY8ONbP3lVIaPrhL4+1QrECTN3nyKavGG0gBBtHvTKhGoBHgMXHStFowN+HKrPriYu+OZ05Frn8okQrPaaxoKP1ULCS/cmKFN3gcH7HQlVjraCeQmtjg1pSQxeuqXiSKgLpxc/1OiZsU4+n4lz4hpahGyWBURLi4642n1gn9qz9bIsaCeEPJ0uJmenMWp2tJmIwLQ6VSgDYErOeBCfSj9P4G/vI7oIF+l/n5fp956QgxGvur77ynawAu3G9MdFbJbu49NZnWnnFcQHjxRuhUYvg1U/e84N4JTecciDAKb/KYIFXzloyuE1eYXf54MmhjTq7B/yBToDzzpx3tJCTo3HCmVPYfmtBRe3mPYEE/6RlTIxbf4fSOcaKFGk4gbaUWe44hVk9SZzhW80yfW5QWBHxmtUzvMhfVQli4gZTktIOZd9mjJ5hsbmzttaHQB29Am3dZkmx3g/qvYocyhZ2PXAWsNQiIaf+Q8W/MWPIK7/TjvCx5q2XRp4lVWydMc2wIQkhadDB0xsnw/kSEyGjLKjI4coVIwtubTF3E7MJ6LS6UOsJKj82XVAVPJJcepfewbzE91ivXZvOvYfsmMevwtPpfMzGmC7WJlyW2j0jh7AF1JLmwEJSKYwIvu6DHc3YnyLH9ZdIBnQ+nOVDRiP+REpqv++typYHIvoJyICGA40d8bR7HR2k7do6UQTHF4oriYeIQbxKe4Th6+/l1BjUtS9hqORh3MbgvYrStXTfSwaBOmAVQZzpYNqsAmQyjY56MUqty3c/xH6GuhNvNaG9vGbG6cPtBM8UA3e8r51D0AR9kozKuGGSMgLz3nAHxDNnc7GTwpLj7/6HeWp1iksDeTjwCLpxejuMtpMnGJgsiku1sOACwQ9ukzESiDRN77YNESxR5LphOlcASXA5uIts1LnBIcn1J7BLWs49DMALSnuz95gdOrTZr0u1SeYHinno/pE58xYoXbVO/S+FEMMs5qyWkMnp8Q3ClyTlZP52Y9nq7b8fITPuVXUk9ohG5EFHw4gAEcjFxfKb3xuAsEjx2z1wxNbSZMcgS9GKyW3R6KwJONgtA64LTyxWm8Bvudp0M1FdJPEGopM4Fvg7G/hsptkhCfHFegv4ENwxPeXmYhxwZy7js+BeM27t9ODBMynVCLJ7RWcBMteZJtvjOYHb5lOnCLYWNEMKC59BA7covu1cANa2PXL05iGdufOzkgFqqHBOrgQVUmLEc+Mkz4Rq8O6WkNr7atNkH4M8d+SD1t/tSzt3oFql+neVs+AwEI5JaBJaxARtY2Z4mKoUqxds4UpZ0sv3zIbNoo0J4fihldQTX3XNcuNcZmcrB5LTWMdzeRuAtBk3cZHYQF6gTi3PNuDJ0nmR+4LPLoHvxQIxRgJ9iNNXqf2SYJhcvCtJiVWo85TsyFOuq7EyBPJrAdhEgE0cTq16FQXhYPJFqSfiVn0IQnPOy0LbU4BeG94QjdYNB0CiQ3QaxQqD2ebSMiNjaVaw8WaM4Z5WnzcVDsr4eGweSLa2DE3BWViaxhZFIcSTjgxNCAfelg+hznVOYoe5VqTYs1g7WtfTm3e4/WduC6p+qqAM8H4ZyrJCGpewThTDPe6H7CzX/zQ8Tm+r65HeZn+MsmxUciEWPlAVaK/VBaQBWfoG/aRL/jSZIQfep/89GjasWmbaWzeEZ2R1FOjvyJT37O9B8046SRSKVEnXWlBqbkb5XCS3qFeuE9xb9+frEknxWB5h1D/hruz2iVDEAS7+qkEz5Ot5agHJc7WCdY94Ws61sURcX5nG8UELGBAHZ3i+3VulAyT0nKNNz4K2LBHBWJcTBX1wzf+//u/j/9+//v87+9/l9Lbh/L/uyNYiTsWV2LwsjaA6MxTuzFMqmxW8Jw/+IppdX8t/Clgi1rI1SN0UC/r6tX/4lUc2VV1OQReSeCsjUpKZchw4XUcjHfw6ryCV3R8s6VXm67vp4n+lcPV9gJwmbKQEsmrJi9c2vkwrm8HFbVYNTaRGq8D91t9n5+U+aD/hNtN3HjC/nC/vUoGFSCkXP+NlRcmLUqLbiUBl4LYf1U/CCvwtd3ryCH8gUmGITAxiH1O5rnGTz7y1LuFjmnFGQ1UWuM7HwfXtWl2fPFKklYwNUpF2IL/TmaRETjQiM5SJacI+3Gv5MBU8lP5Io6gWkawpyzNEVGqOdx4YlO1dCvjbWFZWbCmeiFKPSlMKtKcMFLs/KQxtgAHi7NZNCQ32bBAW2mbHflVZ8wXKi1JKVHkW20bnYnl3dKWJeWJOiX3oKPBD6Zbi0ZvSIuWktUHB8qDR8DMMh1ZfkBL9FS9x5r0hBGLJ8pUCJv3NYH+Ae8p40mZWd5m5fhobFjQeQvqTT4VKWIYfRL0tfaXKiVl75hHReuTJEcqVlug+eOIIc4bdIydtn2K0iNZPsYWQvQio2qbO3OqAlPHDDOB7DfjGEfVF51FqqNacd6QmgFKJpMfLp5DHTv4wXlONKVXF9zTJpDV4m1sYZqJPhotcsliZM8yksKkCkzpiXt+EcRQvSQqmBS9WdWkxMTJXPSw94jqI3varCjQxTazjlMH8jTS8ilaW8014/vwA/LNa+YiFoyyx3s/KswP3O8QW1jtq45yTM/DX9a8M4voTVaO2ebvw1EooDw/yg6Y1faY+WwrdVs5Yt0hQ5EwRfYXSFxray1YvSM+kYmlpLG2/9mm1MfmbKHXr44Ih8nVKb1M537ZANUkCtdsPZ80JVKVKabVHCadaLXg+IV8i5GSwpZti0h6diTaKs9sdpUKEpd7jDUpYmHtiX33SKiO3tuydkaxA7pEc9XIQEOfWJlszj5YpL5bKeQyT7aZSBOamvSHl8xsWvgo26IP/bqk+0EJUz+gkkcvlUlyPp2kdKFtt7y5aCdks9ZJJcFp5ZWeaWKgtnXMN3ORwGLBE0PtkEIek5FY2aVssUZHtsWIvnljMVJtuVIjpZup/5VL1yPOHWWHkOMc6YySWMckczD5jUj2mlLVquFaMU8leGVaqeXis+aRRL8zm4WuBk6cyWfGMxgtr8useQEx7k/PvRoZyd9nde1GUCV84gMX8Ogu/BWezYPSR27llzQnA97oo0pYyxobYUJfsj+ysTm9zJ+S4pk0TGo9VTG0KjqYhTmALfoDZVKla2b5yhv241PxFaLJs3i05K0AAIdcGxCJZmT3ZdT7CliR7q+kur7WdQjygYtOWRL9B8E4s4LI8KpAj7bE0dg7DLOaX+MGeAi0hMMSSWZEz+RudXbZCsGYS0QqiXjH9XQbd8sCB+nIVTq7/T/FDS+zWY9q7Z2fdq1tdLb6v3hKKVDAw5gjj6o9r1wHFROdHc18MJp4SJ2Ucvu+iQ9EgkekW8VCM+psM6y+/2SBy8tNN4a3L1MzP+OLsyvESo5gS7IQOnIqMmviJBVc6zbVG1n8eXiA3j46kmvvtJlewwNDrxk4SbJOtP/TV/lIVK9ueShNbbMHfwnLTLLhbZuO79ec5XvfgRwLFK+w1r5ZWW15rVFZrE+wKqNRv5KqsLNfpGgnoUU6Y71NxEmN7MyqwqAQqoIULOw/LbuUB2+uE75gJt+kq1qY4LoxV+qR/zalupea3D5+WMeaRIn0sAI6DDWDh158fqUb4YhAxhREbUN0qyyJYkBU4V2KARXDT65gW3gRsiv7xSPYEKLwzgriWcWgPr0sbZnv7m1XHNFW6xPdGNZUdxFiUYlmXNjDVWuu7LCkX/nVkrXaJhiYktBISC2xgBXQnNEP+cptWl1eG62a7CPXrnrkTQ5BQASbEqUZWMDiZUisKyHDeLFOaJILUo5f6iDt4ZO8MlqaKLto0AmTHVVbkGuyPa1R/ywZsWRoRDoRdNMMHwYTsklMVnlAd2S0282bgMI8fiJpDh69OSL6K3qbo20KfpNMurnYGQSr/stFqZ7hYsxKlLnKAKhsmB8AIpEQ4bd/NrTLTXefsE6ChRmKWjXKVgpGoPs8GAicgKVw4K0qgDgy1A6hFq1WRat3fHF+FkU+b6H4NWpOU3KXTxrIb2qSHAb+qhm8hiSROi/9ofapjxhyKxxntPpge6KL5Z4+WBMYkAcE6+0Hd3Yh2zBsK2MV3iW0Y6cvOCroXlRb2MMJtdWx+3dkFzGh2Pe3DZ9QpSqpaR/rE1ImOrHqYYyccpiLC22amJIjRWVAherTfpQLmo6/K2pna85GrDuQPlH1Tsar8isAJbXLafSwOof4gg9RkAGm/oYpBQQiPUoyDk2BCQ1k+KILq48ErFo4WSRhHLq/y7mgw3+L85PpP6xWr6cgp9sOjYjKagOrxF148uhuaWtjet953fh1IQiEzgC+d2IgBCcUZqgTAICm2bR8oCjDLBsmg+ThyhfD+zBalsKBY1Ce54Y/t9cwfbLu9SFwEgphfopNA3yNxgyDafUM3mYTovZNgPGdd4ZFFOj1vtfFW3u7N+iHEN1HkeesDMXKPyoCDCGVMo4GCCD6PBhQ3dRZIHy0Y/3MaE5zU9mTCrwwnZojtE+qNpMSkJSpmGe0EzLyFelMJqhfFQ7a50uXxZ8pCc2wxtAKWgHoeamR2O7R+bq7IbPYItO0esdRgoTaY38hZLJ5y02oIVwoPokGIzxAMDuanQ1vn2WDQ00Rh6o5QOaCRu99fwDbQcN0XAuqkFpxT/cfz3slGRVokrNU0iqiMAJFEbKScZdmSkTUznC0U+MfwFOGdLgsewRyPKwBZYSmy6U325iUhBQNxbAC3FLKDV9VSOuQpOOukJ/GAmu/tyEbX9DgEp6dv1zoU0IqzpG6gssSjIYRVPGgU1QAQYRgIT8gEV0EXr1sqeh2I6rXjtmoCYyEDCe/PkFEi/Q48FuT29p557iN+LCwk5CK/CZ2WdAdfQZh2Z9QGrzPLSNRj5igUWzl9Vi0rCqH8G1Kp4QMLkuwMCAypdviDXyOIk0AHTM8HBYKh3b0/F+DxoNj4ZdoZfCpQVdnZarqoMaHWnMLNVcyevytGsrXQEoIbubqWYNo7NRHzdc0zvT21fWVirj7g36iy6pxogfvgHp1xH1Turbz8QyyHnXeBJicpYUctbzApwzZ1HT+FPEXMAgUZetgeGMwt4G+DHiDT2Lu+PT21fjJCAfV16a/Wu1PqOkUHSTKYhWW6PhhHUlNtWzFnA7MbY+r64vkwdpfNB2JfWgWXAvkzd42K4lN9x7Wrg4kIKgXCb4mcW595MCPJ/cTfPAMQMFWwnqwde4w8HZYJFpQwcSMhjVz4B8p6ncSCN1X4klxoIH4BN2J6taBMj6lHkAOs8JJAmXq5xsQtrPIPIIp/HG6i21xMGcFgqDXSRF0xQg14d2uy6HgKE13LSvQe52oShF5Jx1R6avyL4thhXQZHfC94oZzuPUBKFYf1VvDaxIrtV6dNGSx7DO0i1p6CzBkuAmEqyWceQY7F9+U0ObYDzoa1iKao/cOD/v6Q9gHrrr1uCeOk8fST9MG23Ul0KmM3r+Wn6Hi6WAcL7gEeaykicvgjzkjSwFsAXIR81Zx4QJ6oosVyJkCcT+4xAldCcihqvTf94HHUPXYp3REIaR4dhpQF6+FK1H0i9i7Pvh8owu3lO4PT1iuqu+DkL2Bj9+kdfGAg2TXw03iNHyobxofLE2ibjsYDPgeEQlRMR7afXbSGQcnPjI2D+sdtmuQ771dbASUsDndU7t58jrrNGRzISvwioAlHs5FA+cBE5Ccznkd8NMV6BR6ksnKLPZnMUawRDU1MZ/ib3xCdkTblHKu4blNiylH5n213yM0zubEie0o4JhzcfAy3H5qh2l17uLooBNLaO+gzonTH2uF8PQu9EyH+pjGsACTMy4cHzsPdymUSXYJOMP3yTkXqvO/lpvt0cX5ekDEu9PUfBeZODkFuAjXCaGdi6ew4qxJ8PmFfwmPpkgQjQlWqomFY6UkjmcnAtJG75EVR+NpzGpP1Ef5qUUbfowrC3zcSLX3BxgWEgEx/v9cP8H8u1Mvt9/rMDYf6sjwU1xSOPBgzFEeJLMRVFtKo5QHsUYT8ZRLCah27599EuqoC9PYjYO6aoAMHB8X1OHwEAYouHfHB3nyb2B+SnZxM/vw/bCtORjLMSy5aZoEpvgdGvlJfNPFUu/p7Z4VVK1hiI0/UTuB3ZPq4ohEbm7Mntgc1evEtknaosgZSwnDC2BdMmibpeg48X8Ixl+/8+xXdbshQXUPPvx8jT3fkELivHSmqbhblfNFShWAyQnJ3WBU6SMYSIpTDmHjdLVAdlADdz9gCplZw6mTiHqDwIsxbm9ErGusiVpg2w8Q3khKV/R9Oj8PFeF43hmW/nSd99nZzhyjCX3QOZkkB6BsH4H866WGyv9E0hVAzPYah2tkRfQZMmP2rinfOeQalge0ovhduBjJs9a1GBwReerceify49ctOh5/65ATYuMsAkVltmvTLBk4oHpdl6i+p8DoNj4Fb2vhdFYer2JSEilEwPd5n5zNoGBXEjreg/wh2NFnNRaIUHSOXa4eJRwygZoX6vnWnqVdCRT1ARxeFrNBJ+tsdooMwqnYhE7zIxnD8pZH+P0Nu1wWxCPTADfNWmqx626IBJJq6NeapcGeOmbtXvl0TeWG0Y7OGGV4+EHTtNBIT5Wd0Bujl7inXgZgfXTM5efD3qDTJ54O9v3Bkv+tdIRlq1kXcVD0BEMirmFxglNPt5pedb1AnxuCYMChUykwsTIWqT23XDpvTiKEru1cTcEMeniB+HQDehxPXNmkotFdwUPnilB/u4Nx5Xc6l8J9jH1EgKZUUt8t8cyoZleDBEt8oibDmJRAoMKJ5Oe9CSWS5ZMEJvacsGVdXDWjp/Ype5x0p9PXB2PAwt2LRD3d+ftNgpuyvxlP8pB84oB1i73vAVpwyrmXW72hfW6Dzn9Jkj4++0VQ4d0KSx1AsDA4OtXXDo63/w+GD+zC7w5SJaxsmnlYRQ4dgdjA7tTl2KNLnpJ+mvkoDxtt1a4oPaX3EVqj96o9sRKBQqU7ZOiupeAIyLMD+Y3YwHx30XWHB5CQiw7q3mj1EDlP2eBsZbz79ayUMbyHQ7s8gu4Lgip1LiGJj7NQj905/+rgUYKAA5qdrlHKIknWmqfuR+PB8RdBkDg/NgnlT89G72h2NvySnj7UyBwD+mi/IWs1xWbxuVwUIVXun5cMqBtFbrccI+DILjsVQg6eeq0itiRfedn89CvyFtpkxaauEvSANuZmB1p8FGPbU94J9medwsZ9HkUYjmI7OH5HuxendLbxTaYrPuIfE2ffXFKhoNBUp33HsFAXmCV/Vxpq5AYgFoRr5Ay93ZLRlgaIPjhZjXZZChT+aE5iWAXMX0oSFQEtwjiuhQQItTQX5IYrKfKB+queTNplR1Hoflo5/I6aPPmACwQCE2jTOYo5Dz1cs7Sod0KTG/3kEDGk3kUaUCON19xSJCab3kNpWZhSWkO8l+SpW70Wn3g0ciOIJO5JXma6dbos6jyisuxXwUUhj2+1uGhcvuliKtWwsUTw4gi1c/diEEpZHoKoxTBeMDmhPhKTx7TXWRakV8imJR355DcIHkR9IREHxohP4TbyR5LtFU24umRPRmEYHbpe1LghyxPx7YgUHjNbbQFRQhh4KeU1EabXx8FS3JAxp2rwRDoeWkJgWRUSKw6gGP5U2PuO9V4ZuiKXGGzFQuRuf+tkSSsbBtRJKhCi3ENuLlXhPbjTKD4djXVnfXFds6Zb+1XiUrRfyayGxJq1+SYBEfbKlgjiSmk0orgTqzSS+DZ5rTqsJbttiNtp+KMqGE2AHGFw6jQqM5vD6vMptmXV9OAjq49Uf/Lx9Opam+Hn5O9p8qoBBAQixzQZ4eNVkO9sPzJAMyR1y4/RCQQ1s0pV5KAU5sKLw3tkcFbI/JqrjCsK4Mw+W8aod4lioYuawUiCyVWBE/qPaFi5bnkgpfu/ae47174rI1fqQoTbW0HrU6FAejq7ByM0V4zkZTg02/YJK2N7hUQRCeZ4BIgSEqgD8XsjzG6LIsSbuHoIdz/LhFzbNn1clci1NHWJ0/6/O8HJMdIpEZbqi1RrrFfoo/rI/7ufm2MPG5lUI0IYJ4MAiHRTSOFJ2oTverFHYXThkYFIoyFx6rMYFgaOKM4xNWdlOnIcKb/suptptgTOTdVIf4YgdaAjJnIAm4qNNHNQqqAzvi53GkyRCEoseUBrHohZsjUbkR8gfKtc/+Oa72lwxJ8Mq6HDfDATbfbJhzeIuFQJSiw1uZprHlzUf90WgqG76zO0eCB1WdPv1IT6sNxxh91GEL2YpgC97ikFHyoaH92ndwduqZ6IYjkg20DX33MWdoZk7QkcKUCgisIYslOaaLyvIIqRKWQj16jE1DlQWJJaPopWTJjXfixEjRJJo8g4++wuQjbq+WVYjsqCuNIQW3YjnxKe2M5ZKEqq+cX7ZVgnkbsU3RWIyXA1rxv4kGersYJjD//auldXGmcEbcfTeF16Y1708FB1HIfmWv6dSFi6oD4E+RIjCsEZ+kY7dKnwReJJw3xCjKvi3kGN42rvyhUlIz0Bp+fNSV5xwFiuBzG296e5s/oHoFtUyUplmPulIPl+e1CQIQVtjlzLzzzbV+D/OVQtYzo5ixtMi5BmHuG4N/uKfJk5UIREp7+12oZlKtPBomXSzAY0KgtbPzzZoHQxujnREUgBU+O/jKKhgxVhRPtbqyHiUaRwRpHv7pgRPyUrnE7fYkVblGmfTY28tFCvlILC04Tz3ivkNWVazA+OsYrxvRM/hiNn8Fc4bQBeUZABGx5S/xFf9Lbbmk298X7iFg2yeimvsQqqJ+hYbt6uq+Zf9jC+Jcwiccd61NKQtFvGWrgJiHB5lwi6fR8KzYS7EaEHf/ka9EC7H8D+WEa3TEACHBkNSj/cXxFeq4RllC+fUFm2xtstYLL2nos1DfzsC9vqDDdRVcPA3Ho95aEQHvExVThXPqym65llkKlfRXbPTRiDepdylHjmV9YTWAEjlD9DdQnCem7Aj/ml58On366392214B5zrmQz/9ySG2mFqEwjq5sFl5tYJPw5hNz8lyZPUTsr5E0F2C9VMPnZckWP7+mbwp/BiN7f4kf7vtGnZF2JGvjK/sDX1RtcFY5oPQnE4lIAYV49U3C9SP0LCY/9i/WIFK9ORjzM9kG/KGrAuwFmgdEpdLaiqQNpCTGZVuAO65afkY1h33hrqyLjZy92JK3/twdj9pafFcwfXONmPQWldPlMe7jlP24Js0v9m8bIJ9TgS2IuRvE9ZVRaCwSJYOtAfL5H/YS4FfzKWKbek+GFulheyKtDNlBtrdmr+KU+ibHTdalzFUmMfxw3f36x+3cQbJLItSilW9cuvZEMjKw987jykZRlsH/UI+HlKfo2tLwemBEeBFtmxF2xmItA/dAIfQ+rXnm88dqvXa+GapOYVt/2waFimXFx3TC2MUiOi5/Ml+3rj/YU6Ihx2hXgiDXFsUeQkRAD6wF3SCPi2flk7XwKAA4zboqynuELD312EJ88lmDEVOMa1W/K/a8tGylZRMrMoILyoMQzzbDJHNZrhH77L9qSC42HVmKiZ5S0016UTp83gOhCwz9XItK9fgXfK3F5d7nZCBUekoLxrutQaPHa16Rjsa0gTrzyjqTnmcIcrxg6X6dkKiucudc0DD5W4pJPf0vuDW8r5/uw24YfMuxFRpD2ovT2mFX79xH6Jf+MVdv2TYqR6/955QgVPe3JCD/WjAYcLA9tpXgFiEjge2J5ljeI/iUzg91KQuHkII4mmHZxC3XQORLAC6G7uFn5LOmlnXkjFdoO976moNTxElS8HdxWoPAkjjocDR136m2l+f5t6xaaNgdodOvTu0rievnhNAB79WNrVs6EsPgkgfahF9gSFzzAd+rJSraw5Mllit7vUP5YxA843lUpu6/5jAR0RvH4rRXkSg3nE+O5GFyfe+L0s5r3k05FyghSFnKo4TTgs07qj4nTLqOYj6qaW9knJTDkF5OFMYbmCP+8H16Ty482OjvERV6OFyw043L9w3hoJi408sR+SGo1WviXUu8d7qS+ehKjpKwxeCthsm2LBFSFeetx0x4AaKPxtp3CxdWqCsLrB1s/j5TAhc1jNZsXWl6tjo/WDoewxzg8T8NnhZ1niUwL/nhfygLanCnRwaFGDyLw+sfZhyZ1UtYTp8TYB6dE7R3VsKKH95CUxJ8u8N+9u2/9HUNKHW3x3w5GQrfOPafk2w5qZq8MaHT0ebeY3wIsp3rN9lrpIsW9c1ws3VNV+JwNz0Lo9+V7zZr6GD56We6gWVIvtmam5GPPkVAbr74r6SwhuL+TRXtW/0pgyX16VNl4/EAD50TnUPuwrW6OcUO2VlWXS0inq872kk7GUlW6o/ozFKq+Sip6LcTtSDfDrPTcCHhx75H8BeRon+KG2wRwzfDgWhALmiWOMO6h3pm1UCZEPEjScyk7tdLx6WrdA2N1QTPENvNnhCQjW6kl057/qv7IwRryHrZBCwVSbLLnFRiHdTwk8mlYixFt1slEcPD7FVht13HyqVeyD55HOXrh2ElAxJyinGeoFzwKA91zfrdLvDxJSjzmImfvTisreI25EDcVfGsmxLVbfU8PGe/7NmWWKjXcdTJ11jAlVIY/Bv/mcxg/Q10vCHwKG1GW/XbJq5nxDhyLqiorn7Wd7VEVL8UgVzpHMjQ+Z8DUgSukiVwWAKkeTlVVeZ7t1DGnCgJVIdBPZAEK5f8CDyDNo7tK4/5DBjdD5MPV86TaEhGsLVFPQSI68KlBYy84FievdU9gWh6XZrugvtCZmi9vfd6db6V7FmoEcRHnG36VZH8N4aZaldq9zZawt1uBFgxYYx+Gs/qW1jwANeFy+LCoymyM6zgG7j8bGzUyLhvrbJkTYAEdICEb4kMKusKT9V3eIwMLsjdUdgijMc+7iKrr+TxrVWG0U+W95SGrxnxGrE4eaJFfgvAjUM4SAy8UaRwE9j6ZQH5qYAWGtXByvDiLSDfOD0yFA3UCMKSyQ30fyy1mIRg4ZcgZHLNHWl+c9SeijOvbOJxoQy7lTN2r3Y8p6ovxvUY74aOYbuVezryqXA6U+fcp6wSV9X5/OZKP18tB56Ua0gMyxJI7XyNT7IrqN8GsB9rL/kP5KMrjXxgqKLDa+V5OCH6a5hmOWemMUsea9vQl9t5Oce76PrTyTv50ExOqngE3PHPfSL//AItPdB7kGnyTRhVUUFNdJJ2z7RtktZwgmQzhBG/G7QsjZmJfCE7k75EmdIKH7xlnmDrNM/XbTT6FzldcH/rcRGxlPrv4qDScqE7JSmQABJWqRT/TUcJSwoQM+1jvDigvrjjH8oeK2in1S+/yO1j8xAws/T5u0VnIvAPqaE1atNuN0cuRliLcH2j0nTL4JpcR7w9Qya0JoaHgsOiALLCCzRkl1UUESz+ze/gIXHGtDwgYrK6pCFKJ1webSDog4zTlPkgXZqxlQDiYMjhDpwTtBW2WxthWbov9dt2X9XFLFmcF+eEc1UaQ74gqZiZsdj63pH1qcv3Vy8JYciogIVKsJ8Yy3J9w/GhjWVSQAmrS0BPOWK+RKV+0lWqXgYMnIFwpcZVD7zPSp547i9HlflB8gVnSTGmmq1ClO081OW/UH11pEQMfkEdDFzjLC1Cdo/BdL3s7cXb8J++Hzz1rhOUVZFIPehRiZ8VYu6+7Er7j5PSZu9g/GBdmNzJmyCD9wiswj9BZw+T3iBrg81re36ihMLjoVLoWc+62a1U/7qVX5CpvTVF7rocSAKwv4cBVqZm7lLDS/qoXs4fMs/VQi6BtVbNA3uSzKpQfjH1o3x4LrvkOn40zhm6hjduDglzJUwA0POabgdXIndp9fzhOo23Pe+Rk9GSLX0d71Poqry8NQDTzNlsa+JTNG9+UrEf+ngxCjGEsDCc0bz+udVRyHQI1jmEO3S+IOQycEq7XwB6z3wfMfa73m8PVRp+iOgtZfeSBl01xn03vMaQJkyj7vnhGCklsCWVRUl4y+5oNUzQ63B2dbjDF3vikd/3RUMifPYnX5Glfuk2FsV/7RqjI9yKTbE8wJY+74p7qXO8+dIYgjtLD/N8TJtRh04N9tXJA4H59IkMmLElgvr0Q5OCeVfdAt+5hkh4pQgfRMHpL74XatLQpPiOyHRs/OdmHtBf8nOZcxVKzdGclIN16lE7kJ+pVMjspOI+5+TqLRO6m0ZpNXJoZRv9MPDRcAfJUtNZHyig/s2wwReakFgPPJwCQmu1I30/tcBbji+Na53i1W1N+BqoY7Zxo+U/M9XyJ4Ok2SSkBtoOrwuhAY3a03Eu6l8wFdIG1cN+e8hopTkiKF093KuH/BcB39rMiGDLn6XVhGKEaaT/vqb/lufuAdpGExevF1+J9itkFhCfymWr9vGb3BTK4j598zRH7+e+MU9maruZqb0pkGxRDRE1CD4Z8LV4vhgPidk5w2Bq816g3nHw1//j3JStz7NR9HIWELO8TMn3QrP/zZp//+Dv9p429/ogv+GATR+n/UdF+ns9xNkXZQJXY4t9jMkJNUFygAtzndXwjss+yWH9HAnLQQfhAskdZS2l01HLWv7L7us5uTH409pqitvfSOQg/c+Zt7k879P3K9+WV68n7+3cZfuRd/dDPP/03rn+d+/nBvWfgDlt8+LzjqJ/vx3CnNOwiXhho778C96iD+1TBvRZYeP+EH81LE0vVwOOrmCLB3iKzI1x+vJEsrPH4uF0UB4TJ4X3uDfOCo3PYpYe0MF4bouh0DQ/l43fxUF7Y+dpWuvTSffB0yO2UQUETI/LwCZE3BvnevJ7c9zUlY3H58xzke6DNFDQG8n0WtDN4LAYN4nogKav1ezOfK/z+t6tsCTp+dhx4ymjWuCJk1dEUifDP+HyS4iP/Vg9B2jTo9L4NbiBuDS4nuuHW6H+JDQn2JtqRKGkEQPEYE7uzazXIkcxIAqUq1esasZBETlEZY7y7Jo+RoV/IsjY9eIMkUvr42Hc0xqtsavZvhz1OLwSxMOTuqzlhb0WbdOwBH9EYiyBjatz40bUxTHbiWxqJ0uma19qhPruvcWJlbiSSH48OLDDpaHPszvyct41ZfTu10+vjox6kOqK6v0K/gEPphEvMl/vwSv+A4Hhm36JSP9IXTyCZDm4kKsqD5ay8b1Sad/vaiyO5N/sDfEV6Z4q95E+yfjxpqBoBETW2C7xl4pIO2bDODDFurUPwE7EWC2Uplq+AHmBHvir2PSgkR12/Ry65O0aZtQPeXi9mTlF/Wj5GQ+vFkYyhXsLTjrBSP9hwk4GPqDP5rBn5/l8b0mLRAvRSzXHc293bs3s8EsdE3m2exxidWVB4joHR+S+dz5/W+v00K3TqN14CDBth8eWcsTbiwXPsygHdGid0PEdy6HHm2v/IUuV5RVapYmzGsX90mpnIdNGcOOq64Dbc5GUbYpD9M7S+6cLY//QmjxFLP5cuTFRm3vA5rkFZroFnO3bjHF35uU3s8mvL7Tp9nyTc4mymTJ5sLIp7umSnGkO23faehtz3mmTS7fbVx5rP7x3HXIjRNeq/A3xCs9JNB08c9S9BF2O3bOur0ItslFxXgRPdaapBIi4dRpKGxVz7ir69t/bc9qTxjvtOyGOfiLGDhR4fYywHv1WdOplxIV87TpLBy3Wc0QP0P9s4G7FBNOdITS/tep3o3h1TEa5XDDii7fWtqRzUEReP2fbxz7bHWWJdbIOxOUJZtItNZpTFRfj6vm9sYjRxQVO+WTdiOhdPeTJ+8YirPvoeL88l5iLYOHd3b/Imkq+1ZN1El3UikhftuteEYxf1Wujof8Pr4ICTu5ezZyZ4tHQMxlzUHLYO2VMOoNMGL/20S5i2o2obfk+8qqdR7xzbRDbgU0lnuIgz4LelQ5XS7xbLuSQtNS95v3ZUOdaUx/Qd8qxCt6xf2E62yb/HukLO6RyorV8KgYl5YNc75y+KvefrxY+lc/64y9kvWP0a0bDz/rojq+RWjO06WeruWqNFU7r3HPIcLWRql8ICZsz2Ls/qOm/CLn6++X+Qf7mGspYCrZod/lpl6Rw4xN/yuq8gqV4B6aHk1hVE1SfILxWu5gvXqbfARYQpspcxKp1F/c8XOPzkZvmoSw+vEqBLdrq1fr3wAPv5NnM9i8F+jdAuxkP5Z71c6uhK3enlnGymr7UsWZKC12qgUiG8XXGQ9mxnqz4GSIlybF9eXmbqj2sHX+a1jf0gRoONHRdRSrIq03Ty89eQ1GbV/Bk+du4+V15zls+vvERvZ4E7ZbnxWTVjDjb4o/k8jlw44pTIrUGxxuJvBeO+heuhOjpFsO6lVJ/aXnJDa/bM0Ql1cLbXE/Pbv3EZ3vj3iVrB5irjupZTzlnv677NrI9UNYNqbPgp/HZXS+lJmk87wec+7YOxTDo2aw2l3NfDr34VNlvqWJBknuK7oSlZ6/T10zuOoPZOeoIk81N+sL843WJ2Q4Z0fZ3scsqC/JV2fuhWi1jGURSKZV637lf53Xnnx16/vKEXY89aVJ0fv91jGdfG+G4+sniwHes4hS+udOr4RfhFhG/F5gUG35QaU+McuLmclb5ZWmR+sG5V6nf+PxYzlrnFGxpZaK8eqqVo0NfmAWoGfXDiT/FnUbWvzGDOTr8aktOZWg4BYvz5YH12ZbfCcGtNk+dDAZNGWvHov+PIOnY9Prjg8h/wLRrT69suaMVZ5bNuK00lSVpnqSX1NON/81FoP92rYndionwgOiA8WMf4vc8l15KqEEG4yAm2+WAN5Brfu1sq9suWYqgoajgOYt/JCk1gC8wPkK+XKCtRX6TAtgvrnuBgNRmn6I8lVDipOVB9kX6Oxkp4ZKyd1M6Gj8/v2U7k+YQBL95Kb9PQENucJb0JlW3b5tObN7m/Z1j1ev388d7o15zgXsI9CikAGAViR6lkJv7nb4Ak40M2G8TJ447kN+pvfHiOFjSUSP6PM+QfbAywKJCBaxSVxpizHseZUyUBhq59vFwrkyGoRiHbo0apweEZeSLuNiQ+HAekOnarFg00dZNXaPeoHPTRR0FmEyqYExOVaaaO8c0uFUh7U4e/UxdBmthlBDgg257Q33j1hA7HTxSeTTSuVnPZbgW1nodwmG16aKBDKxEetv7D9OjO0JhrbJTnoe+kcGoDJazFSO8/fUN9Jy/g4XK5PUkw2dgPDGpJqBfhe7GA+cjzfE/EGsMM+FV9nj9IAhrSfT/J3QE5TEIYyk5UjsI6ZZcCPr6A8FZUF4g9nnpVmjX90MLSQysIPD0nFzqwCcSJmIb5mYv2Cmk+C1MDFkZQyCBq4c/Yai9LJ6xYkGS/x2s5/frIW2vmG2Wrv0APpCdgCA9snFvfpe8uc0OwdRs4G9973PGEBnQB5qKrCQ6m6X/H7NInZ7y/1674/ZXOVp7OeuCRk8JFS516VHrnH1HkIUIlTIljjHaQtEtkJtosYul77cVwjk3gW1Ajaa6zWeyHGLlpk3VHE2VFzT2yI/EvlGUSz2H9zYE1s4nsKMtMqNyKNtL/59CpFJki5Fou6VXGm8vWATEPwrUVOLvoA8jLuwOzVBCgHB2Cr5V6OwEWtJEKokJkfc87h+sNHTvMb0KVTp5284QTPupoWvQVUwUeogZR3kBMESYo0mfukewRVPKh5+rzLQb7HKjFFIgWhj1w3yN/qCNoPI8XFiUgBNT1hCHBsAz8L7Oyt8wQWUFj92ONn/APyJFg8hzueqoJdNj57ROrFbffuS/XxrSXLTRgj5uxZjpgQYceeMc2wJrahReSKpm3QjHfqExTLAB2ipVumE8pqcZv8LYXQiPHHsgb5BMW8zM5pvQit+mQx8XGaVDcfVbLyMTlY8xcfmm/RSAT/H09UQol5gIz7rESDmnrQ4bURIB4iRXMDQwxgex1GgtDxKp2HayIkR+E/aDmCttNm2C6lytWdfOVzD6X2SpDWjQDlMRvAp1symWv4my1bPCD+E1EmGnMGWhNwmycJnDV2WrQNxO45ukEb08AAffizYKVULp15I4vbNK5DzWwCSUADfmKhfGSUqii1L2UsE8rB7mLuHuUJZOx4+WiizHBJ/hwboaBzhpNOVvgFTf5cJsHef7L1HCI9dOUUbb+YxUJWn6dYOLz+THi91kzY5dtO5c+grX7v0jEbsuoOGnoIreDIg/sFMyG+TyCLIcAWd1IZ1UNFxE8Uie13ucm40U2fcxC0u3WLvLOxwu+F7MWUsHsdtFQZ7W+nlfCASiAKyh8rnP3EyDByvtJb6Kax6/HkLzT9SyEyTMVM1zPtM0MJY14DmsWh4MgD15Ea9Hd00AdkTZ0EiG5NAGuIBzQJJ0JR0na+OB7lQA6UKxMfihIQ7GCCnVz694QvykWXTxpS2soDu+smru1UdIxSvAszBFD1c8c6ZOobA8bJiJIvuycgIXBQIXWwhyTgZDQxJTRXgEwRNAawGSXO0a1DKjdihLVNp/taE/xYhsgwe+VpKEEB4LlraQyE84gEihxCnbfoyOuJIEXy2FIYw+JjRusybKlU2g/vhTSGTydvCvXhYBdtAXtS2v7LkHtmXh/8fly1do8FI/D0f8UbzVb5h+KRhMGSAmR2mhi0YG/uj7wgxcfzCrMvdjitUIpXDX8ae2JcF/36qUWIMwN6JsjaRGNj+jEteGDcFyTUb8X/NHSucKMJp7pduxtD6KuxVlyxxwaeiC1FbGBESO84lbyrAugYxdl+2N8/6AgWpo/IeoAOcsG35IA/b3AuSyoa55L7llBLlaWlEWvuCFd8f8NfcTUgzJv6CbB+6ohWwodlk9nGWFpBAOaz5uEW5xBvmjnHFeDsb0mXwayj3mdYq5gxxNf3H3/tnCgHwjSrpSgVxLmiTtuszdRUFIsn6LiMPjL808vL1uQhDbM7aA43mISXReqjSskynIRcHCJ9qeFopJfx9tqyUoGbSwJex/0aDE3plBPGtNBYgWbdLom3+Q/bjdizR2/AS/c/dH/d3G7pyl1qDXgtOFtEqidwLqxPYtrNEveasWq3vPUUtqTeu8gpov4bdOQRI2kneFvRNMrShyVeEupK1PoLDPMSfWMIJcs267mGB8X9CehQCF0gIyhpP10mbyM7lwW1e6TGvHBV1sg/UyTghHPGRqMyaebC6pbB1WKNCQtlai1GGvmq9zUKaUzLaXsXEBYtHxmFbEZ2kJhR164LhWW2Tlp1dhsGE7ZgIWRBOx3Zcu2DxgH+G83WTPceKG0TgQKKiiNNOlWgvqNEbnrk6fVD+AqRam2OguZb0YWSTX88N+i/ELSxbaUUpPx4vJUzYg/WonSeA8xUK6u7DPHgpqWpEe6D4cXg5uK9FIYVba47V/nb+wyOtk+zG8RrS4EA0ouwa04iByRLSvoJA2FzaobbZtXnq8GdbfqEp5I2dpfpj59TCVif6+E75p665faiX8gS213RqBxTZqfHP46nF6NSenOneuT+vgbLUbdTH2/t0REFXZJOEB6DHvx6N6g9956CYrY/AYcm9gELJXYkrSi+0F0geKDZgOCIYkLU/+GOW5aGj8mvLFgtFH5+XC8hvAE3CvHRfl4ofM/Qwk4x2A+R+nyc9gNu/9Tem7XW4XRnyRymf52z09cTOdr+PG6+P/Vb4QiXlwauc5WB1z3o+IJjlbxI8MyWtSzT+k4sKVbhF3xa+vDts3NxXa87iiu+xRH9cAprnOL2h6vV54iQRXuOAj1s8nLFK8gZ70ThIQcWdF19/2xaJmT0efrkNDkWbpAQPdo92Z8+Hn/aLjbOzB9AI/k12fPs9HhUNDJ1u6ax2VxD3R6PywN7BrLJ26z6s3QoMp76qzzwetrDABKSGkfW5PwS1GvYNUbK6uRqxfyVGNyFB0E+OugMM8kKwmJmupuRWO8XkXXXQECyRVw9UyIrtCtcc4oNqXqr7AURBmKn6Khz3eBN96LwIJrAGP9mr/59uTOSx631suyT+QujDd4beUFpZ0kJEEnjlP+X/Kr2kCKhnENTg4BsMTOmMqlj2WMFLRUlVG0fzdCBgUta9odrJfpVdFomTi6ak0tFjXTcdqqvWBAzjY6hVrH9sbt3Z9gn+AVDpTcQImefbB4edirjzrsNievve4ZT4EUZWV3TxEsIW+9MT/RJoKfZZYSRGfC1CwPG/9rdMOM8qR/LUYvw5f/emUSoD7YSFuOoqchdUg2UePd1eCtFSKgxLSZ764oy4lvRCIH6bowPxZWwxNFctksLeil47pfevcBipkkBIc4ngZG+kxGZ71a72KQ7VaZ6MZOZkQJZXM6kb/Ac0/XkJx8dvyfJcWbI3zONEaEPIW8GbkYjsZcwy+eMoKrYjDmvEEixHzkCSCRPRzhOfJZuLdcbx19EL23MA8rnjTZZ787FGMnkqnpuzB5/90w1gtUSRaWcb0eta8198VEeZMUSfIhyuc4/nywFQ9uqn7jdqXh+5wwv+RK9XouNPbYdoEelNGo34KyySwigsrfCe0v/PlWPvQvQg8R0KgHO18mTVThhQrlbEQ0Kp/JxPdjHyR7E1QPw/ut0r+HDDG7BwZFm9IqEUZRpv2WpzlMkOemeLcAt5CsrzskLGaVOAxyySzZV/D2EY7ydNZMf8e8VhHcKGHAWNszf1EOq8fNstijMY4JXyATwTdncFFqcNDfDo+mWFvxJJpc4sEZtjXyBdoFcxbUmniCoKq5jydUHNjYJxMqN1KzYV62MugcELVhS3Bnd+TLLOh7dws/zSXWzxEb4Nj4aFun5x4kDWLK5TUF/yCXB/cZYvI9kPgVsG2jShtXkxfgT+xzjJofXqPEnIXIQ1lnIdmVzBOM90EXvJUW6a0nZ/7XjJGl8ToO3H/fdxnxmTNKBZxnkpXLVgLXCZywGT3YyS75w/PAH5I/jMuRspej8xZObU9kREbRA+kqjmKRFaKGWAmFQspC+QLbKPf0RaK3OXvBSWqo46p70ws/eZpu6jCtZUgQy6r4tHMPUdAgWGGUYNbuv/1a6K+MVFsd3T183+T8capSo6m0+Sh57fEeG/95dykGJBQMj09DSW2bY0mUonDy9a8trLnnL5B5LW3Nl8rJZNysO8Zb+80zXxqUGFpud3Qzwb7bf+8mq6x0TAnJU9pDQR9YQmZhlna2xuxJt0aCO/f1SU8gblOrbIyMsxTlVUW69VJPzYU2HlRXcqE2lLLxnObZuz2tT9CivfTAUYfmzJlt/lOPgsR6VN64/xQd4Jlk/RV7UKVv2Gx/AWsmTAuCWKhdwC+4HmKEKYZh2Xis4KsUR1BeObs1c13wqFRnocdmuheaTV30gvVXZcouzHKK5zwrN52jXJEuX6dGx3BCpV/++4f3hyaW/cQJLFKqasjsMuO3B3WlMq2gyYfdK1e7L2pO/tRye2mwzwZPfdUMrl5wdLqdd2Kv/wVtnpyWYhd49L6rsOV+8HXPrWH2Kup89l2tz6bf80iYSd+V4LROSOHeamvexR524q4r43rTmtFzQvArpvWfLYFZrbFspBsXNUqqenjxNNsFXatZvlIhk7teUPfK+YL32F8McTnjv0BZNppb+vshoCrtLXjIWq3EJXpVXIlG6ZNL0dh6qEm2WMwDjD3LfOfkGh1/czYc/0qhiD2ozNnH4882MVVt3JbVFkbwowNCO3KL5IoYW5wlVeGCViOuv1svZx7FbzxKzA4zGqBlRRaRWCobXaVq4yYCWbZf8eiJwt3OY+MFiSJengcFP2t0JMfzOiJ7cECvpx7neg1Rc5x+7myPJOXt2FohVRyXtD+/rDoTOyGYInJelZMjolecVHUhUNqvdZWg2J2t0jPmiLFeRD/8fOT4o+NGILb+TufCo9ceBBm3JLVn+MO2675n7qiEX/6W+188cYg3Zn5NSTjgOKfWFSAANa6raCxSoVU851oJLY11WIoYK0du0ec5E4tCnAPoKh71riTsjVIp3gKvBbEYQiNYrmH22oLQWA2AdwMnID6PX9b58dR2QKo4qag1D1Z+L/FwEKTR7osOZPWECPJIHQqPUsM5i/CH5YupVPfFA5pHUBcsesh8eO5YhyWnaVRPZn/BmdXVumZWPxMP5e28zm2uqHgFoT9CymHYNNrzrrjlXZM06HnzDxYNlI5b/QosxLmmrqDFqmogQdqk0WLkUceoAvQxHgkIyvWU69BPFr24VB6+lx75Rna6dGtrmOxDnvBojvi1/4dHjVeg8owofPe1cOnxU1ioh016s/Vudv9mhV9f35At+Sh28h1bpp8xhr09+vf47Elx3Ms6hyp6QvB3t0vnLbOhwo660cp7K0vvepabK7YJfxEWWfrC2YzJfYOjygPwfwd/1amTqa0hZ5ueebhWYVMubRTwIjj+0Oq0ohU3zfRfuL8gt59XsHdwKtxTQQ4Y2qz6gisxnm2UdlmpEkgOsZz7iEk6QOt8BuPwr+NR01LTqXmJo1C76o1N274twJvl+I069TiLpenK/miRxhyY8jvYV6W1WuSwhH9q7kuwnJMtm7IWcqs7HsnyHSqWXLSpYtZGaR1V3t0gauninFPZGtWskF65rtti48UV9uV9KM8kfDYs0pgB00S+TlzTXV6P8mxq15b9En8sz3jWSszcifZa/NuufPNnNTb031pptt0+sRSH/7UG8pzbsgtt3OG3ut7B9JzDMt2mTZuyRNIV8D54TuTrpNcHtgmMlYJeiY9XS83NYJicjRjtJSf9BZLsQv629QdDsKQhTK5CnXhpk7vMNkHzPhm0ExW/VCGApHfPyBagtZQTQmPHx7g5IXXsrQDPzIVhv2LB6Ih138iSDww1JNHrDvzUxvp73MsQBVhW8EbrReaVUcLB1R3PUXyaYG4HpJUcLVxMgDxcPkVRQpL7VTAGabDzbKcvg12t5P8TSGQkrj/gOrpnbiDHwluA73xbXts/L7u468cRWSWRtgTwlQnA47EKg0OiZDgFxAKQQUcsbGomITgeXUAAyKe03eA7Mp4gnyKQmm0LXJtEk6ddksMJCuxDmmHzmVhO+XaN2A54MIh3niw5CF7PwiXFZrnA8wOdeHLvvhdoqIDG9PDI7UnWWHq526T8y6ixJPhkuVKZnoUruOpUgOOp3iIKBjk+yi1vHo5cItHXb1PIKzGaZlRS0g5d3MV2pD8FQdGYLZ73aae/eEIUePMc4NFz8pIUfLCrrF4jVWH5gQneN3S8vANBmUXrEcKGn6hIUN95y1vpsvLwbGpzV9L0ZKTan6TDXM05236uLJcIEMKVAxKNT0K8WljuwNny3BNQRfzovA85beI9zr1AGNYnYCVkR1aGngWURUrgqR+gRrQhxW81l3CHevjvGEPzPMTxdsIfB9dfGRbZU0cg/1mcubtECX4tvaedmNAvTxCJtc2QaoUalGfENCGK7IS/O8CRpdOVca8EWCRwv2sSWE8CJPW5PCugjCXPd3h6U60cPD+bdhtXZuYB6stcoveE7Sm5MM2yvfUHXFSW7KzLmi7/EeEWL0wqcOH9MOSKjhCHHmw+JGLcYE/7SBZQCRggox0ZZTAxrlzNNXYXL5fNIjkdT4YMqVUz6p8YDt049v4OXGdg3qTrtLBUXOZf7ahPlZAY/O+7Sp0bvGSHdyQ8B1LOsplqMb9Se8VAE7gIdSZvxbRSrfl+Lk5Qaqi5QJceqjitdErcHXg/3MryljPSIAMaaloFm1cVwBJ8DNmkDqoGROSHFetrgjQ5CahuKkdH5pRPigMrgTtlFI8ufJPJSUlGgTjbBSvpRc0zypiUn6U5KZqcRoyrtzhmJ7/caeZkmVRwJQeLOG8LY6vP5ChpKhc8Js0El+n6FXqbx9ItdtLtYP92kKfaTLtCi8StLZdENJa9Ex1nOoz1kQ7qxoiZFKRyLf4O4CHRT0T/0W9F8epNKVoeyxUXhy3sQMMsJjQJEyMOjmOhMFgOmmlscV4eFi1CldU92yjwleirEKPW3bPAuEhRZV7JsKV3Lr5cETAiFuX5Nw5UlF7d2HZ96Bh0sgFIL5KGaKSoVYVlvdKpZJVP5+NZ7xDEkQhmDgsDKciazJCXJ6ZN2B3FY2f6VZyGl/t4aunGIAk/BHaS+i+SpdRfnB/OktOvyjinWNfM9Ksr6WwtCa1hCmeRI6icpFM4o8quCLsikU0tMoZI/9EqXRMpKGaWzofl4nQuVQm17d5fU5qXCQeCDqVaL9XJ9qJ08n3G3EFZS28SHEb3cdRBdtO0YcTzil3QknNKEe/smQ1fTb0XbpyNB5xAeuIlf+5KWlEY0DqJbsnzJlQxJPOVyHiKMx5Xu9FcEv1Fbg6Fhm4t+Jyy5JC1W3YO8dYLsO0PXPbxodBgttTbH3rt9Cp1lJIk2r3O1Zqu94eRbnIz2f50lWolYzuKsj4PMok4abHLO8NAC884hiXx5Fy5pWKO0bWL7uEGXaJCtznhP67SlQ4xjWIfgq6EpZ28QMtuZK7JC0RGbl9nA4XtFLug/NLMoH1pGt9IonAJqcEDLyH6TDROcbsmGPaGIxMo41IUAnQVPMPGByp4mOmh9ZQMkBAcksUK55LsZj7E5z5XuZoyWCKu6nHmDq22xI/9Z8YdxJy4kWpD16jLVrpwGLWfyOD0Wd+cBzFBxVaGv7S5k9qwh/5t/LQEXsRqI3Q9Rm3QIoaZW9GlsDaKOUyykyWuhNOprSEi0s1G4rgoiX1V743EELti+pJu5og6X0g6oTynUqlhH9k6ezyRi05NGZHz0nvp3HOJr7ebrAUFrDjbkFBObEvdQWkkUbL0pEvMU46X58vF9j9F3j6kpyetNUBItrEubW9ZvMPM4qNqLlsSBJqOH3XbNwv/cXDXNxN8iFLzUhteisYY+RlHYOuP29/Cb+L+xv+35Rv7xudnZ6ohK4cMPfCG8KI7dNmjNk/H4e84pOxn/sZHK9psfvj8ncA8qJz7O8xqbxESDivGJOZzF7o5PJLQ7g34qAWoyuA+x3btU98LT6ZyGyceIXjrqob2CAVql4VOTQPUQYvHV/g4zAuCZGvYQBtf0wmd5lilrvuEn1BXLny01B4h4SMDlYsnNpm9d7m9h578ufpef9Z4WplqWQvqo52fyUA7J24eZD5av6SyGIV9kpmHNqyvdfzcpEMw97BvknV2fq+MFHun9BT3Lsf8pbzvisWiIQvYkng+8Vxk1V+dli1u56kY50LRjaPdotvT5BwqtwyF+emo/z9J3yVUVGfKrxQtJMOAQWoQii/4dp9wgybSa5mkucmRLtEQZ/pz0tL/NVcgWAd95nEQ3Tg6tNbuyn3Iepz65L3huMUUBntllWuu4DbtOFSMSbpILV4fy6wlM0SOvi6CpLh81c1LreIvKd61uEWBcDw1lUBUW1I0Z+m/PaRlX+PQ/oxg0Ye6KUiIiTF4ADNk59Ydpt5/rkxmq9tV5Kcp/eQLUVVmBzQNVuytQCP6Ezd0G8eLxWyHpmZWJ3bAzkWTtg4lZlw42SQezEmiUPaJUuR/qklVA/87S4ArFCpALdY3QRdUw3G3XbWUp6aq9z0zUizcPa7351p9JXOZyfdZBFnqt90VzQndXB/mwf8LC9STj5kenVpNuqOQQP3mIRJj7eV21FxG8VAxKrEn3c+XfmZ800EPb9/5lIlijscUbB6da0RQaMook0zug1G0tKi/JBC4rw7/D3m4ARzAkzMcVrDcT2SyFtUdWAsFlsPDFqV3N+EjyXaoEePwroaZCiLqEzb8MW+PNE9TmTC01EzWli51PzZvUqkmyuROU+V6ik+Le/9qT6nwzUzf9tP68tYei0YaDGx6kAd7jn1cKqOCuYbiELH9zYqcc4MnRJjkeGiqaGwLImhyeKs+xKJMBlOJ05ow9gGCKZ1VpnMKoSCTbMS+X+23y042zOb5MtcY/6oBeAo1Vy89OTyhpavFP78jXCcFH0t7Gx24hMEOm2gsEfGabVpQgvFqbQKMsknFRRmuPHcZu0Su/WMFphZvB2r/EGbG72rpGGho3h+Msz0uGzJ7hNK2uqQiE1qmn0zgacKYYZBCqsxV+sjbpoVdSilW/b94n2xNb648VmNIoizqEWhBnsen+d0kbCPmRItfWqSBeOd9Wne3c6bcd6uvXOJ6WdiSsuXq0ndhqrQ4QoWUjCjYtZ0EAhnSOP1m44xkf0O7jXghrzSJWxP4a/t72jU29Vu2rvu4n7HfHkkmQOMGSS+NPeLGO5I73mC2B7+lMiBQQZRM9/9liLIfowupUFAbPBbR+lxDM6M8Ptgh1paJq5Rvs7yEuLQv/7d1oU2woFSb3FMPWQOKMuCuJ7pDDjpIclus5TeEoMBy2YdVB4fxmesaCeMNsEgTHKS5WDSGyNUOoEpcC2OFWtIRf0w27ck34/DjxRTVIcc9+kqZE6iMSiVDsiKdP/Xz5XfEhm/sBhO50p1rvJDlkyyxuJ9SPgs7YeUJBjXdeAkE+P9OQJm6SZnn1svcduI78dYmbkE2mtziPrcjVisXG78spLvbZaSFx/Rks9zP4LKn0Cdz/3JsetkT06A8f/yCgMO6Mb1Hme0JJ7b2wZz1qleqTuKBGokhPVUZ0dVu+tnQYNEY1fmkZSz6+EGZ5EzL7657mreZGR3jUfaEk458PDniBzsSmBKhDRzfXameryJv9/D5m6HIqZ0R+ouCE54Dzp4IJuuD1e4Dc5i+PpSORJfG23uVgqixAMDvchMR0nZdH5brclYwRoJRWv/rlxGRI5ffD5NPGmIDt7vDE1434pYdVZIFh89Bs94HGGJbTwrN8T6lh1HZFTOB4lWzWj6EVqxSMvC0/ljWBQ3F2kc/mO2b6tWonT2JEqEwFts8rz2h+oWNds9ceR2cb7zZvJTDppHaEhK5avWqsseWa2Dt5BBhabdWSktS80oMQrL4TvAM9b5HMmyDnO+OkkbMXfUJG7eXqTIG6lqSOEbqVR+qYdP7uWb57WEJqzyh411GAVsDinPs7KvUeXItlcMdOUWzXBH6zscymV1LLVCtc8IePojzXHF9m5b5zGwBRdzcyUJkiu938ApmAayRdJrX1PmVguWUvt2ThQ62czItTyWJMW2An/hdDfMK7SiFQlGIdAbltHz3ycoh7j9V7GxNWBpbtcSdqm4XxRwTawc3cbZ+xfSv9qQfEkDKfZTwCkqWGI/ur250ItXlMlh6vUNWEYIg9A3GzbgmbqvTN8js2YMo87CU5y6nZ4dbJLDQJj9fc7yM7tZzJDZFtqOcU8+mZjYlq4VmifI23iHb1ZoT9E+kT2dolnP1AfiOkt7PQCSykBiXy5mv637IegWSKj9IKrYZf4Lu9+I7ub+mkRdlvYzehh/jaJ9n7HUH5b2IbgeNdkY7wx1yVzxS7pbvky6+nmVUtRllEFfweUQ0/nG017WoUYSxs+j2B4FV/F62EtHlMWZXYrjGHpthnNb1x66LKZ0Qe92INWHdfR/vqp02wMS8r1G4dJqHok8KmQ7947G13a4YXbsGgHcBvRuVu1eAi4/A5+ZixmdSXM73LupB/LH7O9yxLTVXJTyBbI1S49TIROrfVCOb/czZ9pM4JsZx8kUz8dQGv7gUWKxXvTH7QM/3J2OuXXgciUhqY+cgtaOliQQVOYthBLV3xpESZT3rmfEYNZxmpBbb24CRao86prn+i9TNOh8VxRJGXJfXHATJHs1T5txgc/opYrY8XjlGQQbRcoxIBcnVsMjmU1ymmIUL4dviJXndMAJ0Yet+c7O52/p98ytlmAsGBaTAmMhimAnvp1TWNGM9BpuitGj+t810CU2UhorrjPKGtThVC8WaXw04WFnT5fTjqmPyrQ0tN3CkLsctVy2xr0ZWgiWVZ1OrlFjjxJYsOiZv2cAoOvE+7sY0I/TwWcZqMoyIKNOftwP7w++Rfg67ljfovKYa50if3fzE/8aPYVey/Nq35+nH2sLPh/fP5TsylSKGOZ4k69d2PnH43+kq++sRXHQqGArWdwhx+hpwQC6JgT2uxehYU4Zbw7oNb6/HLikPyJROGK2ouyr+vzseESp9G50T4AyFrSqOQ0rroCYP4sMDFBrHn342EyZTMlSyk47rHSq89Y9/nI3zG5lX16Z5lxphguLOcZUndL8wNcrkyjH82jqg8Bo8OYkynrxZvbFno5lUS3OPr8Ko3mX9NoRPdYOKKjD07bvgFgpZ/RF+YzkWvJ/Hs/tUbfeGzGWLxNAjfDzHHMVSDwB5SabQLsIZHiBp43FjGkaienYoDd18hu2BGwOK7U3o70K/WY/kuuKdmdrykIBUdG2mvE91L1JtTbh20mOLbk1vCAamu7utlXeGU2ooVikbU/actcgmsC1FKk2qmj3GWeIWbj4tGIxE7BLcBWUvvcnd/lYxsMV4F917fWeFB/XbINN3qGvIyTpCalz1lVewdIGqeAS/gB8Mi+sA+BqDiX3VGD2eUunTRbSY+AuDy4E3Qx3hAhwnSXX+B0zuj3eQ1miS8Vux2z/l6/BkWtjKGU72aJkOCWhGcSf3+kFkkB15vGOsQrSdFr6qTj0gBYiOlnBO41170gOWHSUoBVRU2JjwppYdhIFDfu7tIRHccSNM5KZOFDPz0TGMAjzzEpeLwTWp+kn201kU6NjbiMQJx83+LX1e1tZ10kuChJZ/XBUQ1dwaBHjTDJDqOympEk8X2M3VtVw21JksChA8w1tTefO3RJ1FMbqZ01bHHkudDB/OhLfe7P5GOHaI28ZXKTMuqo0hLWQ4HabBsGG7NbP1RiXtETz074er6w/OerJWEqjmkq2y51q1BVI+JUudnVa3ogBpzdhFE7fC7kybrAt2Z6RqDjATAUEYeYK45WMupBKQRtQlU+uNsjnzj6ZmGrezA+ASrWxQ6LMkHRXqXwNq7ftv28dUx/ZSJciDXP2SWJsWaN0FjPX9Yko6LobZ7aYW/IdUktI9apTLyHS8DyWPyuoZyxN1TK/vtfxk3HwWh6JczZC8Ftn0bIJay2g+n5wd7lm9rEsKO+svqVmi+c1j88hSCxbzrg4+HEP0Nt1/B6YW1XVm09T1CpAKjc9n18hjqsaFGdfyva1ZG0Xu3ip6N6JGpyTSqY5h4BOlpLPaOnyw45PdXTN+DtAKg7DLrLFTnWusoSBHk3s0d7YouJHq85/R09Tfc37ENXZF48eAYLnq9GLioNcwDZrC6FW6godB8JnqYUPvn0pWLfQz0lM0Yy8Mybgn84Ds3Q9bDP10bLyOV+qzxa4Rd9Dhu7cju8mMaONXK3UqmBQ9qIg7etIwEqM/kECk/Dzja4Bs1xR+Q/tCbc8IKrSGsTdJJ0vge7IG20W687uVmK6icWQ6cD3lwFzgNMGtFvO5qyJeKflGLAAcQZOrkxVwy3cWvqlGpvjmf9Qe6Ap20MPbV92DPV0OhFM4kz8Yr0ffC2zLWSQ1kqY6QdQrttR3kh1YLtQd1kCEv5hVoPIRWl5ERcUTttBIrWp6Xs5Ehh5OUUwI5aEBvuiDmUoENmnVw1FohCrbRp1A1E+XSlWVOTi7ADW+5Ohb9z1vK4qx5R5lPdGCPBJZ00mC+Ssp8VUbgpGAvXWMuWQQRbCqI6Rr2jtxZxtfP7W/8onz+yz0Gs76LaT5HX9ecyiZCB/ZR/gFtMxPsDwohoeCRtiuLxE1GM1vUEUgBv86+eehL58/P56QFGQ/MqOe/vC76L63jzmeax4exd/OKTUvkXg+fOJUHych9xt/9goJMrapSgvXrj8+8vk/N80f22Sewj6cyGqt1B6mztoeklVHHraouhvHJaG/OuBz6DHKMpFmQULU1bRWlyYE0RPXYYkUycIemN7TLtgNCJX6BqdyxDKkegO7nJK5xQ7OVYDZTMf9bVHidtk6DQX9Et+V9M7esgbsYBdEeUpsB0Xvw2kd9+rI7V+m47u+O/tq7mw7262HU1WlS9uFzsV6JxIHNmUCy0QS9e077JGRFbG65z3/dOKB/Zk+yDdKpUmdXjn/aS3N5nv4fK7bMHHmPlHd4E2+iTbV5rpzScRnxk6KARuDTJ8Q1LpK2mP8gj1EbuJ9RIyY+EWK4hCiIDBAS1Tm2IEXAFfgKPgdL9O6mAa06wjCcUAL6EsxPQWO9VNegBPm/0GgkZbDxCynxujX/92vmGcjZRMAY45puak2sFLCLSwXpEsyy5fnF0jGJBhm+fNSHKKUUfy+276A7/feLOFxxUuHRNJI2Osenxyvf8DAGObT60pfTTlhEg9u/KKkhJqm5U1/+BEcSkpFDA5XeCqxwXmPac1jcuZ3JWQ+p0NdWzb/5v1ZvF8GtMTFFEdQjpLO0bwPb0BHNWnip3liDXI2fXf05jjvfJ0NpjLCUgfTh9CMFYVFKEd4Z/OG/2C+N435mnK+9t1gvCiVcaaH7rK4+PjCvpVNiz+t2QyqH1O8x3JKZVl6Q+Lp/XK8wMjVMslOq9FdSw5FtUs/CptXH9PW+wbWHgrV17R5jTVOtGtKFu3nb80T+E0tv9QkzW3J2dbaw/8ddAKZ0pxIaEqLjlPrji3VgJ3GvdFvlqD8075woxh4fVt0JZE0KVFsAvqhe0dqN9b35jtSpnYMXkU+vZq+IAHad3IHc2s/LYrnD1anfG46IFiMIr9oNbZDWvwthqYNqOigaKd/XlLU4XHfk/PXIjPsLy/9/kAtQ+/wKH+hI/IROWj5FPvTZAT9f7j4ZXQyG4M0TujMAFXYkKvEHv1xhySekgXGGqNxWeWKlf8dDAlLuB1cb/qOD+rk7cmwt+1yKpk9cudqBanTi6zTbXRtV8qylNtjyOVKy1HTz0GW9rjt6sSjAZcT5R+KdtyYb0zyqG9pSLuCw5WBwAn7fjBjKLLoxLXMI+52L9cLwIR2B6OllJZLHJ8vDxmWdtF+QJnmt1rsHPIWY20lftk8fYePkAIg6Hgn532QoIpegMxiWgAOfe5/U44APR8Ac0NeZrVh3gEhs12W+tVSiWiUQekf/YBECUy5fdYbA08dd7VzPAP9aiVcIB9k6tY7WdJ1wNV+bHeydNtmC6G5ICtFC1ZwmJU/j8hf0I8TRVKSiz5oYIa93EpUI78X8GYIAZabx47/n8LDAAJ0nNtP1rpROprqKMBRecShca6qXuTSI3jZBLOB3Vp381B5rCGhjSvh/NSVkYp2qIdP/Bg="},7887:(e,t,A)=>{var r=A(4814);t.init=function(){t.dictionary=r.init()},t.offsetsByLength=new Uint32Array([0,0,0,0,0,4096,9216,21504,35840,44032,53248,63488,74752,87040,93696,100864,104704,106752,108928,113536,115968,118528,119872,121280,122016]),t.sizeBitsByLength=new Uint8Array([0,0,0,0,10,10,11,11,10,10,10,10,10,9,9,8,7,7,8,7,7,6,6,5,5]),t.minDictionaryWordLength=4,t.maxDictionaryWordLength=24},9518:(e,t)=>{function A(e,t){this.bits=e,this.value=t}t.z=A;var r=15;function n(e,t){for(var A=1<<t-1;e&A;)A>>=1;return(e&A-1)+A}function s(e,t,r,n,s){do{e[t+(n-=r)]=new A(s.bits,s.value)}while(n>0)}function i(e,t,A){for(var n=1<<t-A;t<r&&!((n-=e[t])<=0);)++t,n<<=1;return t-A}t.u=function(e,t,o,a,l){var u,c,d,f,h,g,p,b,m,v,y=t,w=new Int32Array(16),B=new Int32Array(16);for(v=new Int32Array(l),c=0;c<l;c++)w[a[c]]++;for(B[1]=0,u=1;u<r;u++)B[u+1]=B[u]+w[u];for(c=0;c<l;c++)0!==a[c]&&(v[B[a[c]]++]=c);if(m=b=1<<(p=o),1===B[15]){for(d=0;d<m;++d)e[t+d]=new A(0,65535&v[0]);return m}for(d=0,c=0,u=1,f=2;u<=o;++u,f<<=1)for(;w[u]>0;--w[u])s(e,t+d,f,b,new A(255&u,65535&v[c++])),d=n(d,u);for(g=m-1,h=-1,u=o+1,f=2;u<=r;++u,f<<=1)for(;w[u]>0;--w[u])(d&g)!==h&&(t+=b,m+=b=1<<(p=i(w,u,o)),e[y+(h=d&g)]=new A(p+o&255,t-y-h&65535)),s(e,t+(d>>o),f,b,new A(u-o&255,65535&v[c++])),d=n(d,u);return m}},7479:(e,t)=>{function A(e,t){this.offset=e,this.nbits=t}t.kBlockLengthPrefixCode=[new A(1,2),new A(5,2),new A(9,2),new A(13,2),new A(17,3),new A(25,3),new A(33,3),new A(41,3),new A(49,4),new A(65,4),new A(81,4),new A(97,4),new A(113,5),new A(145,5),new A(177,5),new A(209,5),new A(241,6),new A(305,6),new A(369,7),new A(497,8),new A(753,9),new A(1265,10),new A(2289,11),new A(4337,12),new A(8433,13),new A(16625,24)],t.kInsertLengthPrefixCode=[new A(0,0),new A(1,0),new A(2,0),new A(3,0),new A(4,0),new A(5,0),new A(6,1),new A(8,1),new A(10,2),new A(14,2),new A(18,3),new A(26,3),new A(34,4),new A(50,4),new A(66,5),new A(98,5),new A(130,6),new A(194,7),new A(322,8),new A(578,9),new A(1090,10),new A(2114,12),new A(6210,14),new A(22594,24)],t.kCopyLengthPrefixCode=[new A(2,0),new A(3,0),new A(4,0),new A(5,0),new A(6,0),new A(7,0),new A(8,0),new A(9,0),new A(10,1),new A(12,1),new A(14,2),new A(18,2),new A(22,3),new A(30,3),new A(38,4),new A(54,4),new A(70,5),new A(102,5),new A(134,6),new A(198,7),new A(326,8),new A(582,9),new A(1094,10),new A(2118,24)],t.kInsertRangeLut=[0,0,8,8,0,16,8,16,16],t.kCopyRangeLut=[0,8,0,8,16,0,16,8,16]},9094:(e,t)=>{function A(e){this.buffer=e,this.pos=0}function r(e){this.buffer=e,this.pos=0}A.prototype.read=function(e,t,A){this.pos+A>this.buffer.length&&(A=this.buffer.length-this.pos);for(var r=0;r<A;r++)e[t+r]=this.buffer[this.pos+r];return this.pos+=A,A},t.z=A,r.prototype.write=function(e,t){if(this.pos+t>this.buffer.length)throw new Error("Output buffer is not large enough");return this.buffer.set(e.subarray(0,t),this.pos),this.pos+=t,t},t.y=r},615:(e,t,A)=>{var r=A(7887),n=10,s=11;function i(e,t,A){this.prefix=new Uint8Array(e.length),this.transform=t,this.suffix=new Uint8Array(A.length);for(var r=0;r<e.length;r++)this.prefix[r]=e.charCodeAt(r);for(r=0;r<A.length;r++)this.suffix[r]=A.charCodeAt(r)}var o=[new i("",0,""),new i("",0," "),new i(" ",0," "),new i("",12,""),new i("",n," "),new i("",0," the "),new i(" ",0,""),new i("s ",0," "),new i("",0," of "),new i("",n,""),new i("",0," and "),new i("",13,""),new i("",1,""),new i(", ",0," "),new i("",0,", "),new i(" ",n," "),new i("",0," in "),new i("",0," to "),new i("e ",0," "),new i("",0,'"'),new i("",0,"."),new i("",0,'">'),new i("",0,"\n"),new i("",3,""),new i("",0,"]"),new i("",0," for "),new i("",14,""),new i("",2,""),new i("",0," a "),new i("",0," that "),new i(" ",n,""),new i("",0,". "),new i(".",0,""),new i(" ",0,", "),new i("",15,""),new i("",0," with "),new i("",0,"'"),new i("",0," from "),new i("",0," by "),new i("",16,""),new i("",17,""),new i(" the ",0,""),new i("",4,""),new i("",0,". The "),new i("",s,""),new i("",0," on "),new i("",0," as "),new i("",0," is "),new i("",7,""),new i("",1,"ing "),new i("",0,"\n\t"),new i("",0,":"),new i(" ",0,". "),new i("",0,"ed "),new i("",20,""),new i("",18,""),new i("",6,""),new i("",0,"("),new i("",n,", "),new i("",8,""),new i("",0," at "),new i("",0,"ly "),new i(" the ",0," of "),new i("",5,""),new i("",9,""),new i(" ",n,", "),new i("",n,'"'),new i(".",0,"("),new i("",s," "),new i("",n,'">'),new i("",0,'="'),new i(" ",0,"."),new i(".com/",0,""),new i(" the ",0," of the "),new i("",n,"'"),new i("",0,". This "),new i("",0,","),new i(".",0," "),new i("",n,"("),new i("",n,"."),new i("",0," not "),new i(" ",0,'="'),new i("",0,"er "),new i(" ",s," "),new i("",0,"al "),new i(" ",s,""),new i("",0,"='"),new i("",s,'"'),new i("",n,". "),new i(" ",0,"("),new i("",0,"ful "),new i(" ",n,". "),new i("",0,"ive "),new i("",0,"less "),new i("",s,"'"),new i("",0,"est "),new i(" ",n,"."),new i("",s,'">'),new i(" ",0,"='"),new i("",n,","),new i("",0,"ize "),new i("",s,"."),new i("\xc2\xa0",0,""),new i(" ",0,","),new i("",n,'="'),new i("",s,'="'),new i("",0,"ous "),new i("",s,", "),new i("",n,"='"),new i(" ",n,","),new i(" ",s,'="'),new i(" ",s,", "),new i("",s,","),new i("",s,"("),new i("",s,". "),new i(" ",s,"."),new i("",s,"='"),new i(" ",s,". "),new i(" ",n,'="'),new i(" ",s,"='"),new i(" ",n,"='")];function a(e,t){return e[t]<192?(e[t]>=97&&e[t]<=122&&(e[t]^=32),1):e[t]<224?(e[t+1]^=32,2):(e[t+2]^=5,3)}t.kTransforms=o,t.kNumTransforms=o.length,t.transformDictionaryWord=function(e,t,A,i,l){var u,c=o[l].prefix,d=o[l].suffix,f=o[l].transform,h=f<12?0:f-11,g=0,p=t;h>i&&(h=i);for(var b=0;b<c.length;)e[t++]=c[b++];for(A+=h,i-=h,f<=9&&(i-=f),g=0;g<i;g++)e[t++]=r.dictionary[A+g];if(u=t-i,f===n)a(e,u);else if(f===s)for(;i>0;){var m=a(e,u);u+=m,i-=m}for(var v=0;v<d.length;)e[t++]=d[v++];return t-p}},3245:(e,t,A)=>{e.exports=A(4393).BrotliDecompressBuffer},6382:(e,t,A)=>{"use strict";const r=A(4445),n=A(6900),s="function"===typeof Symbol&&"function"===typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.hp=a,t.IS=50;const i=2147483647;function o(e){if(e>i)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,a.prototype),t}function a(e,t,A){if("number"===typeof e){if("string"===typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return c(e)}return l(e,t,A)}function l(e,t,A){if("string"===typeof e)return function(e,t){"string"===typeof t&&""!==t||(t="utf8");if(!a.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const A=0|g(e,t);let r=o(A);const n=r.write(e,t);n!==A&&(r=r.slice(0,n));return r}(e,t);if(ArrayBuffer.isView(e))return function(e){if(K(e,Uint8Array)){const t=new Uint8Array(e);return f(t.buffer,t.byteOffset,t.byteLength)}return d(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(K(e,ArrayBuffer)||e&&K(e.buffer,ArrayBuffer))return f(e,t,A);if("undefined"!==typeof SharedArrayBuffer&&(K(e,SharedArrayBuffer)||e&&K(e.buffer,SharedArrayBuffer)))return f(e,t,A);if("number"===typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return a.from(r,t,A);const n=function(e){if(a.isBuffer(e)){const t=0|h(e.length),A=o(t);return 0===A.length||e.copy(A,0,0,t),A}if(void 0!==e.length)return"number"!==typeof e.length||q(e.length)?o(0):d(e);if("Buffer"===e.type&&Array.isArray(e.data))return d(e.data)}(e);if(n)return n;if("undefined"!==typeof Symbol&&null!=Symbol.toPrimitive&&"function"===typeof e[Symbol.toPrimitive])return a.from(e[Symbol.toPrimitive]("string"),t,A);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function u(e){if("number"!==typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function c(e){return u(e),o(e<0?0:0|h(e))}function d(e){const t=e.length<0?0:0|h(e.length),A=o(t);for(let r=0;r<t;r+=1)A[r]=255&e[r];return A}function f(e,t,A){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(A||0))throw new RangeError('"length" is outside of buffer bounds');let r;return r=void 0===t&&void 0===A?new Uint8Array(e):void 0===A?new Uint8Array(e,t):new Uint8Array(e,t,A),Object.setPrototypeOf(r,a.prototype),r}function h(e){if(e>=i)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i.toString(16)+" bytes");return 0|e}function g(e,t){if(a.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||K(e,ArrayBuffer))return e.byteLength;if("string"!==typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const A=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===A)return 0;let n=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return A;case"utf8":case"utf-8":return O(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*A;case"hex":return A>>>1;case"base64":return Y(e).length;default:if(n)return r?-1:O(e).length;t=(""+t).toLowerCase(),n=!0}}function p(e,t,A){let r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===A||A>this.length)&&(A=this.length),A<=0)return"";if((A>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return I(this,t,A);case"utf8":case"utf-8":return N(this,t,A);case"ascii":return Q(this,t,A);case"latin1":case"binary":return P(this,t,A);case"base64":return E(this,t,A);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return L(this,t,A);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function b(e,t,A){const r=e[t];e[t]=e[A],e[A]=r}function m(e,t,A,r,n){if(0===e.length)return-1;if("string"===typeof A?(r=A,A=0):A>2147483647?A=2147483647:A<-2147483648&&(A=-2147483648),q(A=+A)&&(A=n?0:e.length-1),A<0&&(A=e.length+A),A>=e.length){if(n)return-1;A=e.length-1}else if(A<0){if(!n)return-1;A=0}if("string"===typeof t&&(t=a.from(t,r)),a.isBuffer(t))return 0===t.length?-1:v(e,t,A,r,n);if("number"===typeof t)return t&=255,"function"===typeof Uint8Array.prototype.indexOf?n?Uint8Array.prototype.indexOf.call(e,t,A):Uint8Array.prototype.lastIndexOf.call(e,t,A):v(e,[t],A,r,n);throw new TypeError("val must be string, number or Buffer")}function v(e,t,A,r,n){let s,i=1,o=e.length,a=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;i=2,o/=2,a/=2,A/=2}function l(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(n){let r=-1;for(s=A;s<o;s++)if(l(e,s)===l(t,-1===r?0:s-r)){if(-1===r&&(r=s),s-r+1===a)return r*i}else-1!==r&&(s-=s-r),r=-1}else for(A+a>o&&(A=o-a),s=A;s>=0;s--){let A=!0;for(let r=0;r<a;r++)if(l(e,s+r)!==l(t,r)){A=!1;break}if(A)return s}return-1}function y(e,t,A,r){A=Number(A)||0;const n=e.length-A;r?(r=Number(r))>n&&(r=n):r=n;const s=t.length;let i;for(r>s/2&&(r=s/2),i=0;i<r;++i){const r=parseInt(t.substr(2*i,2),16);if(q(r))return i;e[A+i]=r}return i}function w(e,t,A,r){return H(O(t,e.length-A),e,A,r)}function B(e,t,A,r){return H(function(e){const t=[];for(let A=0;A<e.length;++A)t.push(255&e.charCodeAt(A));return t}(t),e,A,r)}function x(e,t,A,r){return H(Y(t),e,A,r)}function C(e,t,A,r){return H(function(e,t){let A,r,n;const s=[];for(let i=0;i<e.length&&!((t-=2)<0);++i)A=e.charCodeAt(i),r=A>>8,n=A%256,s.push(n),s.push(r);return s}(t,e.length-A),e,A,r)}function E(e,t,A){return 0===t&&A===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,A))}function N(e,t,A){A=Math.min(e.length,A);const r=[];let n=t;for(;n<A;){const t=e[n];let s=null,i=t>239?4:t>223?3:t>191?2:1;if(n+i<=A){let A,r,o,a;switch(i){case 1:t<128&&(s=t);break;case 2:A=e[n+1],128===(192&A)&&(a=(31&t)<<6|63&A,a>127&&(s=a));break;case 3:A=e[n+1],r=e[n+2],128===(192&A)&&128===(192&r)&&(a=(15&t)<<12|(63&A)<<6|63&r,a>2047&&(a<55296||a>57343)&&(s=a));break;case 4:A=e[n+1],r=e[n+2],o=e[n+3],128===(192&A)&&128===(192&r)&&128===(192&o)&&(a=(15&t)<<18|(63&A)<<12|(63&r)<<6|63&o,a>65535&&a<1114112&&(s=a))}}null===s?(s=65533,i=1):s>65535&&(s-=65536,r.push(s>>>10&1023|55296),s=56320|1023&s),r.push(s),n+=i}return function(e){const t=e.length;if(t<=D)return String.fromCharCode.apply(String,e);let A="",r=0;for(;r<t;)A+=String.fromCharCode.apply(String,e.slice(r,r+=D));return A}(r)}a.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),a.TYPED_ARRAY_SUPPORT||"undefined"===typeof console||"function"!==typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(a.prototype,"parent",{enumerable:!0,get:function(){if(a.isBuffer(this))return this.buffer}}),Object.defineProperty(a.prototype,"offset",{enumerable:!0,get:function(){if(a.isBuffer(this))return this.byteOffset}}),a.poolSize=8192,a.from=function(e,t,A){return l(e,t,A)},Object.setPrototypeOf(a.prototype,Uint8Array.prototype),Object.setPrototypeOf(a,Uint8Array),a.alloc=function(e,t,A){return function(e,t,A){return u(e),e<=0?o(e):void 0!==t?"string"===typeof A?o(e).fill(t,A):o(e).fill(t):o(e)}(e,t,A)},a.allocUnsafe=function(e){return c(e)},a.allocUnsafeSlow=function(e){return c(e)},a.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==a.prototype},a.compare=function(e,t){if(K(e,Uint8Array)&&(e=a.from(e,e.offset,e.byteLength)),K(t,Uint8Array)&&(t=a.from(t,t.offset,t.byteLength)),!a.isBuffer(e)||!a.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let A=e.length,r=t.length;for(let n=0,s=Math.min(A,r);n<s;++n)if(e[n]!==t[n]){A=e[n],r=t[n];break}return A<r?-1:r<A?1:0},a.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},a.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return a.alloc(0);let A;if(void 0===t)for(t=0,A=0;A<e.length;++A)t+=e[A].length;const r=a.allocUnsafe(t);let n=0;for(A=0;A<e.length;++A){let t=e[A];if(K(t,Uint8Array))n+t.length>r.length?(a.isBuffer(t)||(t=a.from(t)),t.copy(r,n)):Uint8Array.prototype.set.call(r,t,n);else{if(!a.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(r,n)}n+=t.length}return r},a.byteLength=g,a.prototype._isBuffer=!0,a.prototype.swap16=function(){const e=this.length;if(e%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)b(this,t,t+1);return this},a.prototype.swap32=function(){const e=this.length;if(e%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)b(this,t,t+3),b(this,t+1,t+2);return this},a.prototype.swap64=function(){const e=this.length;if(e%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)b(this,t,t+7),b(this,t+1,t+6),b(this,t+2,t+5),b(this,t+3,t+4);return this},a.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?N(this,0,e):p.apply(this,arguments)},a.prototype.toLocaleString=a.prototype.toString,a.prototype.equals=function(e){if(!a.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===a.compare(this,e)},a.prototype.inspect=function(){let e="";const A=t.IS;return e=this.toString("hex",0,A).replace(/(.{2})/g,"$1 ").trim(),this.length>A&&(e+=" ... "),"<Buffer "+e+">"},s&&(a.prototype[s]=a.prototype.inspect),a.prototype.compare=function(e,t,A,r,n){if(K(e,Uint8Array)&&(e=a.from(e,e.offset,e.byteLength)),!a.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===A&&(A=e?e.length:0),void 0===r&&(r=0),void 0===n&&(n=this.length),t<0||A>e.length||r<0||n>this.length)throw new RangeError("out of range index");if(r>=n&&t>=A)return 0;if(r>=n)return-1;if(t>=A)return 1;if(this===e)return 0;let s=(n>>>=0)-(r>>>=0),i=(A>>>=0)-(t>>>=0);const o=Math.min(s,i),l=this.slice(r,n),u=e.slice(t,A);for(let a=0;a<o;++a)if(l[a]!==u[a]){s=l[a],i=u[a];break}return s<i?-1:i<s?1:0},a.prototype.includes=function(e,t,A){return-1!==this.indexOf(e,t,A)},a.prototype.indexOf=function(e,t,A){return m(this,e,t,A,!0)},a.prototype.lastIndexOf=function(e,t,A){return m(this,e,t,A,!1)},a.prototype.write=function(e,t,A,r){if(void 0===t)r="utf8",A=this.length,t=0;else if(void 0===A&&"string"===typeof t)r=t,A=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(A)?(A>>>=0,void 0===r&&(r="utf8")):(r=A,A=void 0)}const n=this.length-t;if((void 0===A||A>n)&&(A=n),e.length>0&&(A<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");let s=!1;for(;;)switch(r){case"hex":return y(this,e,t,A);case"utf8":case"utf-8":return w(this,e,t,A);case"ascii":case"latin1":case"binary":return B(this,e,t,A);case"base64":return x(this,e,t,A);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,e,t,A);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},a.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const D=4096;function Q(e,t,A){let r="";A=Math.min(e.length,A);for(let n=t;n<A;++n)r+=String.fromCharCode(127&e[n]);return r}function P(e,t,A){let r="";A=Math.min(e.length,A);for(let n=t;n<A;++n)r+=String.fromCharCode(e[n]);return r}function I(e,t,A){const r=e.length;(!t||t<0)&&(t=0),(!A||A<0||A>r)&&(A=r);let n="";for(let s=t;s<A;++s)n+=J[e[s]];return n}function L(e,t,A){const r=e.slice(t,A);let n="";for(let s=0;s<r.length-1;s+=2)n+=String.fromCharCode(r[s]+256*r[s+1]);return n}function k(e,t,A){if(e%1!==0||e<0)throw new RangeError("offset is not uint");if(e+t>A)throw new RangeError("Trying to access beyond buffer length")}function G(e,t,A,r,n,s){if(!a.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>n||t<s)throw new RangeError('"value" argument is out of bounds');if(A+r>e.length)throw new RangeError("Index out of range")}function F(e,t,A,r,n){j(t,r,n,e,A,7);let s=Number(t&BigInt(4294967295));e[A++]=s,s>>=8,e[A++]=s,s>>=8,e[A++]=s,s>>=8,e[A++]=s;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[A++]=i,i>>=8,e[A++]=i,i>>=8,e[A++]=i,i>>=8,e[A++]=i,A}function S(e,t,A,r,n){j(t,r,n,e,A,7);let s=Number(t&BigInt(4294967295));e[A+7]=s,s>>=8,e[A+6]=s,s>>=8,e[A+5]=s,s>>=8,e[A+4]=s;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[A+3]=i,i>>=8,e[A+2]=i,i>>=8,e[A+1]=i,i>>=8,e[A]=i,A+8}function W(e,t,A,r,n,s){if(A+r>e.length)throw new RangeError("Index out of range");if(A<0)throw new RangeError("Index out of range")}function Z(e,t,A,r,s){return t=+t,A>>>=0,s||W(e,0,A,4),n.write(e,t,A,r,23,4),A+4}function X(e,t,A,r,s){return t=+t,A>>>=0,s||W(e,0,A,8),n.write(e,t,A,r,52,8),A+8}a.prototype.slice=function(e,t){const A=this.length;(e=~~e)<0?(e+=A)<0&&(e=0):e>A&&(e=A),(t=void 0===t?A:~~t)<0?(t+=A)<0&&(t=0):t>A&&(t=A),t<e&&(t=e);const r=this.subarray(e,t);return Object.setPrototypeOf(r,a.prototype),r},a.prototype.readUintLE=a.prototype.readUIntLE=function(e,t,A){e>>>=0,t>>>=0,A||k(e,t,this.length);let r=this[e],n=1,s=0;for(;++s<t&&(n*=256);)r+=this[e+s]*n;return r},a.prototype.readUintBE=a.prototype.readUIntBE=function(e,t,A){e>>>=0,t>>>=0,A||k(e,t,this.length);let r=this[e+--t],n=1;for(;t>0&&(n*=256);)r+=this[e+--t]*n;return r},a.prototype.readUint8=a.prototype.readUInt8=function(e,t){return e>>>=0,t||k(e,1,this.length),this[e]},a.prototype.readUint16LE=a.prototype.readUInt16LE=function(e,t){return e>>>=0,t||k(e,2,this.length),this[e]|this[e+1]<<8},a.prototype.readUint16BE=a.prototype.readUInt16BE=function(e,t){return e>>>=0,t||k(e,2,this.length),this[e]<<8|this[e+1]},a.prototype.readUint32LE=a.prototype.readUInt32LE=function(e,t){return e>>>=0,t||k(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},a.prototype.readUint32BE=a.prototype.readUInt32BE=function(e,t){return e>>>=0,t||k(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},a.prototype.readBigUInt64LE=_((function(e){T(e>>>=0,"offset");const t=this[e],A=this[e+7];void 0!==t&&void 0!==A||U(e,this.length-8);const r=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,n=this[++e]+256*this[++e]+65536*this[++e]+A*2**24;return BigInt(r)+(BigInt(n)<<BigInt(32))})),a.prototype.readBigUInt64BE=_((function(e){T(e>>>=0,"offset");const t=this[e],A=this[e+7];void 0!==t&&void 0!==A||U(e,this.length-8);const r=t*2**24+65536*this[++e]+256*this[++e]+this[++e],n=this[++e]*2**24+65536*this[++e]+256*this[++e]+A;return(BigInt(r)<<BigInt(32))+BigInt(n)})),a.prototype.readIntLE=function(e,t,A){e>>>=0,t>>>=0,A||k(e,t,this.length);let r=this[e],n=1,s=0;for(;++s<t&&(n*=256);)r+=this[e+s]*n;return n*=128,r>=n&&(r-=Math.pow(2,8*t)),r},a.prototype.readIntBE=function(e,t,A){e>>>=0,t>>>=0,A||k(e,t,this.length);let r=t,n=1,s=this[e+--r];for(;r>0&&(n*=256);)s+=this[e+--r]*n;return n*=128,s>=n&&(s-=Math.pow(2,8*t)),s},a.prototype.readInt8=function(e,t){return e>>>=0,t||k(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},a.prototype.readInt16LE=function(e,t){e>>>=0,t||k(e,2,this.length);const A=this[e]|this[e+1]<<8;return 32768&A?4294901760|A:A},a.prototype.readInt16BE=function(e,t){e>>>=0,t||k(e,2,this.length);const A=this[e+1]|this[e]<<8;return 32768&A?4294901760|A:A},a.prototype.readInt32LE=function(e,t){return e>>>=0,t||k(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},a.prototype.readInt32BE=function(e,t){return e>>>=0,t||k(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},a.prototype.readBigInt64LE=_((function(e){T(e>>>=0,"offset");const t=this[e],A=this[e+7];void 0!==t&&void 0!==A||U(e,this.length-8);const r=this[e+4]+256*this[e+5]+65536*this[e+6]+(A<<24);return(BigInt(r)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),a.prototype.readBigInt64BE=_((function(e){T(e>>>=0,"offset");const t=this[e],A=this[e+7];void 0!==t&&void 0!==A||U(e,this.length-8);const r=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(r)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+A)})),a.prototype.readFloatLE=function(e,t){return e>>>=0,t||k(e,4,this.length),n.read(this,e,!0,23,4)},a.prototype.readFloatBE=function(e,t){return e>>>=0,t||k(e,4,this.length),n.read(this,e,!1,23,4)},a.prototype.readDoubleLE=function(e,t){return e>>>=0,t||k(e,8,this.length),n.read(this,e,!0,52,8)},a.prototype.readDoubleBE=function(e,t){return e>>>=0,t||k(e,8,this.length),n.read(this,e,!1,52,8)},a.prototype.writeUintLE=a.prototype.writeUIntLE=function(e,t,A,r){if(e=+e,t>>>=0,A>>>=0,!r){G(this,e,t,A,Math.pow(2,8*A)-1,0)}let n=1,s=0;for(this[t]=255&e;++s<A&&(n*=256);)this[t+s]=e/n&255;return t+A},a.prototype.writeUintBE=a.prototype.writeUIntBE=function(e,t,A,r){if(e=+e,t>>>=0,A>>>=0,!r){G(this,e,t,A,Math.pow(2,8*A)-1,0)}let n=A-1,s=1;for(this[t+n]=255&e;--n>=0&&(s*=256);)this[t+n]=e/s&255;return t+A},a.prototype.writeUint8=a.prototype.writeUInt8=function(e,t,A){return e=+e,t>>>=0,A||G(this,e,t,1,255,0),this[t]=255&e,t+1},a.prototype.writeUint16LE=a.prototype.writeUInt16LE=function(e,t,A){return e=+e,t>>>=0,A||G(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},a.prototype.writeUint16BE=a.prototype.writeUInt16BE=function(e,t,A){return e=+e,t>>>=0,A||G(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},a.prototype.writeUint32LE=a.prototype.writeUInt32LE=function(e,t,A){return e=+e,t>>>=0,A||G(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},a.prototype.writeUint32BE=a.prototype.writeUInt32BE=function(e,t,A){return e=+e,t>>>=0,A||G(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},a.prototype.writeBigUInt64LE=_((function(e){return F(this,e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,BigInt(0),BigInt("0xffffffffffffffff"))})),a.prototype.writeBigUInt64BE=_((function(e){return S(this,e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,BigInt(0),BigInt("0xffffffffffffffff"))})),a.prototype.writeIntLE=function(e,t,A,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*A-1);G(this,e,t,A,r-1,-r)}let n=0,s=1,i=0;for(this[t]=255&e;++n<A&&(s*=256);)e<0&&0===i&&0!==this[t+n-1]&&(i=1),this[t+n]=(e/s|0)-i&255;return t+A},a.prototype.writeIntBE=function(e,t,A,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*A-1);G(this,e,t,A,r-1,-r)}let n=A-1,s=1,i=0;for(this[t+n]=255&e;--n>=0&&(s*=256);)e<0&&0===i&&0!==this[t+n+1]&&(i=1),this[t+n]=(e/s|0)-i&255;return t+A},a.prototype.writeInt8=function(e,t,A){return e=+e,t>>>=0,A||G(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},a.prototype.writeInt16LE=function(e,t,A){return e=+e,t>>>=0,A||G(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},a.prototype.writeInt16BE=function(e,t,A){return e=+e,t>>>=0,A||G(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},a.prototype.writeInt32LE=function(e,t,A){return e=+e,t>>>=0,A||G(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},a.prototype.writeInt32BE=function(e,t,A){return e=+e,t>>>=0,A||G(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},a.prototype.writeBigInt64LE=_((function(e){return F(this,e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),a.prototype.writeBigInt64BE=_((function(e){return S(this,e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),a.prototype.writeFloatLE=function(e,t,A){return Z(this,e,t,!0,A)},a.prototype.writeFloatBE=function(e,t,A){return Z(this,e,t,!1,A)},a.prototype.writeDoubleLE=function(e,t,A){return X(this,e,t,!0,A)},a.prototype.writeDoubleBE=function(e,t,A){return X(this,e,t,!1,A)},a.prototype.copy=function(e,t,A,r){if(!a.isBuffer(e))throw new TypeError("argument should be a Buffer");if(A||(A=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<A&&(r=A),r===A)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(A<0||A>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-A&&(r=e.length-t+A);const n=r-A;return this===e&&"function"===typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,A,r):Uint8Array.prototype.set.call(e,this.subarray(A,r),t),n},a.prototype.fill=function(e,t,A,r){if("string"===typeof e){if("string"===typeof t?(r=t,t=0,A=this.length):"string"===typeof A&&(r=A,A=this.length),void 0!==r&&"string"!==typeof r)throw new TypeError("encoding must be a string");if("string"===typeof r&&!a.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){const t=e.charCodeAt(0);("utf8"===r&&t<128||"latin1"===r)&&(e=t)}}else"number"===typeof e?e&=255:"boolean"===typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<A)throw new RangeError("Out of range index");if(A<=t)return this;let n;if(t>>>=0,A=void 0===A?this.length:A>>>0,e||(e=0),"number"===typeof e)for(n=t;n<A;++n)this[n]=e;else{const s=a.isBuffer(e)?e:a.from(e,r),i=s.length;if(0===i)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(n=0;n<A-t;++n)this[n+t]=s[n%i]}return this};const M={};function z(e,t,A){M[e]=class extends A{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function R(e){let t="",A=e.length;const r="-"===e[0]?1:0;for(;A>=r+4;A-=3)t=`_${e.slice(A-3,A)}${t}`;return`${e.slice(0,A)}${t}`}function j(e,t,A,r,n,s){if(e>A||e<t){const r="bigint"===typeof t?"n":"";let n;throw n=s>3?0===t||t===BigInt(0)?`>= 0${r} and < 2${r} ** ${8*(s+1)}${r}`:`>= -(2${r} ** ${8*(s+1)-1}${r}) and < 2 ** ${8*(s+1)-1}${r}`:`>= ${t}${r} and <= ${A}${r}`,new M.ERR_OUT_OF_RANGE("value",n,e)}!function(e,t,A){T(t,"offset"),void 0!==e[t]&&void 0!==e[t+A]||U(t,e.length-(A+1))}(r,n,s)}function T(e,t){if("number"!==typeof e)throw new M.ERR_INVALID_ARG_TYPE(t,"number",e)}function U(e,t,A){if(Math.floor(e)!==e)throw T(e,A),new M.ERR_OUT_OF_RANGE(A||"offset","an integer",e);if(t<0)throw new M.ERR_BUFFER_OUT_OF_BOUNDS;throw new M.ERR_OUT_OF_RANGE(A||"offset",`>= ${A?1:0} and <= ${t}`,e)}z("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),z("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),z("ERR_OUT_OF_RANGE",(function(e,t,A){let r=`The value of "${e}" is out of range.`,n=A;return Number.isInteger(A)&&Math.abs(A)>2**32?n=R(String(A)):"bigint"===typeof A&&(n=String(A),(A>BigInt(2)**BigInt(32)||A<-(BigInt(2)**BigInt(32)))&&(n=R(n)),n+="n"),r+=` It must be ${t}. Received ${n}`,r}),RangeError);const V=/[^+/0-9A-Za-z-_]/g;function O(e,t){let A;t=t||1/0;const r=e.length;let n=null;const s=[];for(let i=0;i<r;++i){if(A=e.charCodeAt(i),A>55295&&A<57344){if(!n){if(A>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&s.push(239,191,189);continue}n=A;continue}if(A<56320){(t-=3)>-1&&s.push(239,191,189),n=A;continue}A=65536+(n-55296<<10|A-56320)}else n&&(t-=3)>-1&&s.push(239,191,189);if(n=null,A<128){if((t-=1)<0)break;s.push(A)}else if(A<2048){if((t-=2)<0)break;s.push(A>>6|192,63&A|128)}else if(A<65536){if((t-=3)<0)break;s.push(A>>12|224,A>>6&63|128,63&A|128)}else{if(!(A<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;s.push(A>>18|240,A>>12&63|128,A>>6&63|128,63&A|128)}}return s}function Y(e){return r.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(V,"")).length<2)return"";for(;e.length%4!==0;)e+="=";return e}(e))}function H(e,t,A,r){let n;for(n=0;n<r&&!(n+A>=t.length||n>=e.length);++n)t[n+A]=e[n];return n}function K(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function q(e){return e!==e}const J=function(){const e="0123456789abcdef",t=new Array(256);for(let A=0;A<16;++A){const r=16*A;for(let n=0;n<16;++n)t[r+n]=e[A]+e[n]}return t}();function _(e){return"undefined"===typeof BigInt?$:e}function $(){throw new Error("BigInt not supported")}},224:e=>{var t=function(){"use strict";function e(e,t){return null!=t&&e instanceof t}var t,A,r;try{t=Map}catch(o){t=function(){}}try{A=Set}catch(o){A=function(){}}try{r=Promise}catch(o){r=function(){}}function n(s,o,a,l,u){"object"===typeof o&&(a=o.depth,l=o.prototype,u=o.includeNonEnumerable,o=o.circular);var c=[],d=[],f="undefined"!=typeof Buffer;return"undefined"==typeof o&&(o=!0),"undefined"==typeof a&&(a=1/0),function s(a,h){if(null===a)return null;if(0===h)return a;var g,p;if("object"!=typeof a)return a;if(e(a,t))g=new t;else if(e(a,A))g=new A;else if(e(a,r))g=new r((function(e,t){a.then((function(t){e(s(t,h-1))}),(function(e){t(s(e,h-1))}))}));else if(n.__isArray(a))g=[];else if(n.__isRegExp(a))g=new RegExp(a.source,i(a)),a.lastIndex&&(g.lastIndex=a.lastIndex);else if(n.__isDate(a))g=new Date(a.getTime());else{if(f&&Buffer.isBuffer(a))return g=Buffer.allocUnsafe?Buffer.allocUnsafe(a.length):new Buffer(a.length),a.copy(g),g;e(a,Error)?g=Object.create(a):"undefined"==typeof l?(p=Object.getPrototypeOf(a),g=Object.create(p)):(g=Object.create(l),p=l)}if(o){var b=c.indexOf(a);if(-1!=b)return d[b];c.push(a),d.push(g)}for(var m in e(a,t)&&a.forEach((function(e,t){var A=s(t,h-1),r=s(e,h-1);g.set(A,r)})),e(a,A)&&a.forEach((function(e){var t=s(e,h-1);g.add(t)})),a){var v;p&&(v=Object.getOwnPropertyDescriptor(p,m)),v&&null==v.set||(g[m]=s(a[m],h-1))}if(Object.getOwnPropertySymbols){var y=Object.getOwnPropertySymbols(a);for(m=0;m<y.length;m++){var w=y[m];(!(x=Object.getOwnPropertyDescriptor(a,w))||x.enumerable||u)&&(g[w]=s(a[w],h-1),x.enumerable||Object.defineProperty(g,w,{enumerable:!1}))}}if(u){var B=Object.getOwnPropertyNames(a);for(m=0;m<B.length;m++){var x,C=B[m];(x=Object.getOwnPropertyDescriptor(a,C))&&x.enumerable||(g[C]=s(a[C],h-1),Object.defineProperty(g,C,{enumerable:!1}))}}return g}(s,a)}function s(e){return Object.prototype.toString.call(e)}function i(e){var t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),t}return n.clonePrototype=function(e){if(null===e)return null;var t=function(){};return t.prototype=e,new t},n.__objToStr=s,n.__isDate=function(e){return"object"===typeof e&&"[object Date]"===s(e)},n.__isArray=function(e){return"object"===typeof e&&"[object Array]"===s(e)},n.__isRegExp=function(e){return"object"===typeof e&&"[object RegExp]"===s(e)},n.__getRegExpFlags=i,n}();e.exports&&(e.exports=t)},8301:e=>{"use strict";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},1139:(e,t,A)=>{var r=A(8301),n=A(9849),s=Object.hasOwnProperty,i=Object.create(null);for(var o in r)s.call(r,o)&&(i[r[o]]=o);var a=e.exports={to:{},get:{}};function l(e,t,A){return Math.min(Math.max(t,e),A)}function u(e){var t=Math.round(e).toString(16).toUpperCase();return t.length<2?"0"+t:t}a.get=function(e){var t,A;switch(e.substring(0,3).toLowerCase()){case"hsl":t=a.get.hsl(e),A="hsl";break;case"hwb":t=a.get.hwb(e),A="hwb";break;default:t=a.get.rgb(e),A="rgb"}return t?{model:A,value:t}:null},a.get.rgb=function(e){if(!e)return null;var t,A,n,i=[0,0,0,1];if(t=e.match(/^#([a-f0-9]{6})([a-f0-9]{2})?$/i)){for(n=t[2],t=t[1],A=0;A<3;A++){var o=2*A;i[A]=parseInt(t.slice(o,o+2),16)}n&&(i[3]=parseInt(n,16)/255)}else if(t=e.match(/^#([a-f0-9]{3,4})$/i)){for(n=(t=t[1])[3],A=0;A<3;A++)i[A]=parseInt(t[A]+t[A],16);n&&(i[3]=parseInt(n+n,16)/255)}else if(t=e.match(/^rgba?\(\s*([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/)){for(A=0;A<3;A++)i[A]=parseInt(t[A+1],0);t[4]&&(t[5]?i[3]=.01*parseFloat(t[4]):i[3]=parseFloat(t[4]))}else{if(!(t=e.match(/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/)))return(t=e.match(/^(\w+)$/))?"transparent"===t[1]?[0,0,0,0]:s.call(r,t[1])?((i=r[t[1]])[3]=1,i):null:null;for(A=0;A<3;A++)i[A]=Math.round(2.55*parseFloat(t[A+1]));t[4]&&(t[5]?i[3]=.01*parseFloat(t[4]):i[3]=parseFloat(t[4]))}for(A=0;A<3;A++)i[A]=l(i[A],0,255);return i[3]=l(i[3],0,1),i},a.get.hsl=function(e){if(!e)return null;var t=e.match(/^hsla?\(\s*([+-]?(?:\d{0,3}\.)?\d+)(?:deg)?\s*,?\s*([+-]?[\d\.]+)%\s*,?\s*([+-]?[\d\.]+)%\s*(?:[,|\/]\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/);if(t){var A=parseFloat(t[4]);return[(parseFloat(t[1])%360+360)%360,l(parseFloat(t[2]),0,100),l(parseFloat(t[3]),0,100),l(isNaN(A)?1:A,0,1)]}return null},a.get.hwb=function(e){if(!e)return null;var t=e.match(/^hwb\(\s*([+-]?\d{0,3}(?:\.\d+)?)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/);if(t){var A=parseFloat(t[4]);return[(parseFloat(t[1])%360+360)%360,l(parseFloat(t[2]),0,100),l(parseFloat(t[3]),0,100),l(isNaN(A)?1:A,0,1)]}return null},a.to.hex=function(){var e=n(arguments);return"#"+u(e[0])+u(e[1])+u(e[2])+(e[3]<1?u(Math.round(255*e[3])):"")},a.to.rgb=function(){var e=n(arguments);return e.length<4||1===e[3]?"rgb("+Math.round(e[0])+", "+Math.round(e[1])+", "+Math.round(e[2])+")":"rgba("+Math.round(e[0])+", "+Math.round(e[1])+", "+Math.round(e[2])+", "+e[3]+")"},a.to.rgb.percent=function(){var e=n(arguments),t=Math.round(e[0]/255*100),A=Math.round(e[1]/255*100),r=Math.round(e[2]/255*100);return e.length<4||1===e[3]?"rgb("+t+"%, "+A+"%, "+r+"%)":"rgba("+t+"%, "+A+"%, "+r+"%, "+e[3]+")"},a.to.hsl=function(){var e=n(arguments);return e.length<4||1===e[3]?"hsl("+e[0]+", "+e[1]+"%, "+e[2]+"%)":"hsla("+e[0]+", "+e[1]+"%, "+e[2]+"%, "+e[3]+")"},a.to.hwb=function(){var e=n(arguments),t="";return e.length>=4&&1!==e[3]&&(t=", "+e[3]),"hwb("+e[0]+", "+e[1]+"%, "+e[2]+"%"+t+")"},a.to.keyword=function(e){return i[e.slice(0,3)]}},2995:(e,t,A)=>{const r=A(1139),n=A(1256),s=["keyword","gray","hex"],i={};for(const f of Object.keys(n))i[[...n[f].labels].sort().join("")]=f;const o={};function a(e,t){if(!(this instanceof a))return new a(e,t);if(t&&t in s&&(t=null),t&&!(t in n))throw new Error("Unknown model: "+t);let A,l;if(null==e)this.model="rgb",this.color=[0,0,0],this.valpha=1;else if(e instanceof a)this.model=e.model,this.color=[...e.color],this.valpha=e.valpha;else if("string"===typeof e){const t=r.get(e);if(null===t)throw new Error("Unable to parse color from string: "+e);this.model=t.model,l=n[this.model].channels,this.color=t.value.slice(0,l),this.valpha="number"===typeof t.value[l]?t.value[l]:1}else if(e.length>0){this.model=t||"rgb",l=n[this.model].channels;const A=Array.prototype.slice.call(e,0,l);this.color=d(A,l),this.valpha="number"===typeof e[l]?e[l]:1}else if("number"===typeof e)this.model="rgb",this.color=[e>>16&255,e>>8&255,255&e],this.valpha=1;else{this.valpha=1;const t=Object.keys(e);"alpha"in e&&(t.splice(t.indexOf("alpha"),1),this.valpha="number"===typeof e.alpha?e.alpha:0);const r=t.sort().join("");if(!(r in i))throw new Error("Unable to parse color from object: "+JSON.stringify(e));this.model=i[r];const{labels:s}=n[this.model],o=[];for(A=0;A<s.length;A++)o.push(e[s[A]]);this.color=d(o)}if(o[this.model])for(l=n[this.model].channels,A=0;A<l;A++){const e=o[this.model][A];e&&(this.color[A]=e(this.color[A]))}this.valpha=Math.max(0,Math.min(1,this.valpha)),Object.freeze&&Object.freeze(this)}a.prototype={toString(){return this.string()},toJSON(){return this[this.model]()},string(e){let t=this.model in r.to?this:this.rgb();t=t.round("number"===typeof e?e:1);const A=1===t.valpha?t.color:[...t.color,this.valpha];return r.to[t.model](A)},percentString(e){const t=this.rgb().round("number"===typeof e?e:1),A=1===t.valpha?t.color:[...t.color,this.valpha];return r.to.rgb.percent(A)},array(){return 1===this.valpha?[...this.color]:[...this.color,this.valpha]},object(){const e={},{channels:t}=n[this.model],{labels:A}=n[this.model];for(let r=0;r<t;r++)e[A[r]]=this.color[r];return 1!==this.valpha&&(e.alpha=this.valpha),e},unitArray(){const e=this.rgb().color;return e[0]/=255,e[1]/=255,e[2]/=255,1!==this.valpha&&e.push(this.valpha),e},unitObject(){const e=this.rgb().object();return e.r/=255,e.g/=255,e.b/=255,1!==this.valpha&&(e.alpha=this.valpha),e},round(e){return e=Math.max(e||0,0),new a([...this.color.map(l(e)),this.valpha],this.model)},alpha(e){return void 0!==e?new a([...this.color,Math.max(0,Math.min(1,e))],this.model):this.valpha},red:u("rgb",0,c(255)),green:u("rgb",1,c(255)),blue:u("rgb",2,c(255)),hue:u(["hsl","hsv","hsl","hwb","hcg"],0,(e=>(e%360+360)%360)),saturationl:u("hsl",1,c(100)),lightness:u("hsl",2,c(100)),saturationv:u("hsv",1,c(100)),value:u("hsv",2,c(100)),chroma:u("hcg",1,c(100)),gray:u("hcg",2,c(100)),white:u("hwb",1,c(100)),wblack:u("hwb",2,c(100)),cyan:u("cmyk",0,c(100)),magenta:u("cmyk",1,c(100)),yellow:u("cmyk",2,c(100)),black:u("cmyk",3,c(100)),x:u("xyz",0,c(95.047)),y:u("xyz",1,c(100)),z:u("xyz",2,c(108.833)),l:u("lab",0,c(100)),a:u("lab",1),b:u("lab",2),keyword(e){return void 0!==e?new a(e):n[this.model].keyword(this.color)},hex(e){return void 0!==e?new a(e):r.to.hex(this.rgb().round().color)},hexa(e){if(void 0!==e)return new a(e);const t=this.rgb().round().color;let A=Math.round(255*this.valpha).toString(16).toUpperCase();return 1===A.length&&(A="0"+A),r.to.hex(t)+A},rgbNumber(){const e=this.rgb().color;return(255&e[0])<<16|(255&e[1])<<8|255&e[2]},luminosity(){const e=this.rgb().color,t=[];for(const[A,r]of e.entries()){const e=r/255;t[A]=e<=.04045?e/12.92:((e+.055)/1.055)**2.4}return.2126*t[0]+.7152*t[1]+.0722*t[2]},contrast(e){const t=this.luminosity(),A=e.luminosity();return t>A?(t+.05)/(A+.05):(A+.05)/(t+.05)},level(e){const t=this.contrast(e);return t>=7?"AAA":t>=4.5?"AA":""},isDark(){const e=this.rgb().color;return(2126*e[0]+7152*e[1]+722*e[2])/1e4<128},isLight(){return!this.isDark()},negate(){const e=this.rgb();for(let t=0;t<3;t++)e.color[t]=255-e.color[t];return e},lighten(e){const t=this.hsl();return t.color[2]+=t.color[2]*e,t},darken(e){const t=this.hsl();return t.color[2]-=t.color[2]*e,t},saturate(e){const t=this.hsl();return t.color[1]+=t.color[1]*e,t},desaturate(e){const t=this.hsl();return t.color[1]-=t.color[1]*e,t},whiten(e){const t=this.hwb();return t.color[1]+=t.color[1]*e,t},blacken(e){const t=this.hwb();return t.color[2]+=t.color[2]*e,t},grayscale(){const e=this.rgb().color,t=.3*e[0]+.59*e[1]+.11*e[2];return a.rgb(t,t,t)},fade(e){return this.alpha(this.valpha-this.valpha*e)},opaquer(e){return this.alpha(this.valpha+this.valpha*e)},rotate(e){const t=this.hsl();let A=t.color[0];return A=(A+e)%360,A=A<0?360+A:A,t.color[0]=A,t},mix(e,t){if(!e||!e.rgb)throw new Error('Argument to "mix" was not a Color instance, but rather an instance of '+typeof e);const A=e.rgb(),r=this.rgb(),n=void 0===t?.5:t,s=2*n-1,i=A.alpha()-r.alpha(),o=((s*i===-1?s:(s+i)/(1+s*i))+1)/2,l=1-o;return a.rgb(o*A.red()+l*r.red(),o*A.green()+l*r.green(),o*A.blue()+l*r.blue(),A.alpha()*n+r.alpha()*(1-n))}};for(const f of Object.keys(n)){if(s.includes(f))continue;const{channels:e}=n[f];a.prototype[f]=function(){if(this.model===f)return new a(this);for(var e=arguments.length,t=new Array(e),A=0;A<e;A++)t[A]=arguments[A];return t.length>0?new a(t,f):new a([...(r=n[this.model][f].raw(this.color),Array.isArray(r)?r:[r]),this.valpha],f);var r},a[f]=function(){for(var t=arguments.length,A=new Array(t),r=0;r<t;r++)A[r]=arguments[r];let n=A[0];return"number"===typeof n&&(n=d(A,e)),new a(n,f)}}function l(e){return function(t){return function(e,t){return Number(e.toFixed(t))}(t,e)}}function u(e,t,A){e=Array.isArray(e)?e:[e];for(const r of e)(o[r]||(o[r]=[]))[t]=A;return e=e[0],function(r){let n;return void 0!==r?(A&&(r=A(r)),n=this[e](),n.color[t]=r,n):(n=this[e]().color[t],A&&(n=A(n)),n)}}function c(e){return function(t){return Math.max(0,Math.min(e,t))}}function d(e,t){for(let A=0;A<t;A++)"number"!==typeof e[A]&&(e[A]=0);return e}e.exports=a},341:(e,t,A)=>{const r=A(458),n={};for(const i of Object.keys(r))n[r[i]]=i;const s={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};e.exports=s;for(const i of Object.keys(s)){if(!("channels"in s[i]))throw new Error("missing channels property: "+i);if(!("labels"in s[i]))throw new Error("missing channel labels property: "+i);if(s[i].labels.length!==s[i].channels)throw new Error("channel and label counts mismatch: "+i);const{channels:e,labels:t}=s[i];delete s[i].channels,delete s[i].labels,Object.defineProperty(s[i],"channels",{value:e}),Object.defineProperty(s[i],"labels",{value:t})}s.rgb.hsl=function(e){const t=e[0]/255,A=e[1]/255,r=e[2]/255,n=Math.min(t,A,r),s=Math.max(t,A,r),i=s-n;let o,a;s===n?o=0:t===s?o=(A-r)/i:A===s?o=2+(r-t)/i:r===s&&(o=4+(t-A)/i),o=Math.min(60*o,360),o<0&&(o+=360);const l=(n+s)/2;return a=s===n?0:l<=.5?i/(s+n):i/(2-s-n),[o,100*a,100*l]},s.rgb.hsv=function(e){let t,A,r,n,s;const i=e[0]/255,o=e[1]/255,a=e[2]/255,l=Math.max(i,o,a),u=l-Math.min(i,o,a),c=function(e){return(l-e)/6/u+.5};return 0===u?(n=0,s=0):(s=u/l,t=c(i),A=c(o),r=c(a),i===l?n=r-A:o===l?n=1/3+t-r:a===l&&(n=2/3+A-t),n<0?n+=1:n>1&&(n-=1)),[360*n,100*s,100*l]},s.rgb.hwb=function(e){const t=e[0],A=e[1];let r=e[2];const n=s.rgb.hsl(e)[0],i=1/255*Math.min(t,Math.min(A,r));return r=1-1/255*Math.max(t,Math.max(A,r)),[n,100*i,100*r]},s.rgb.cmyk=function(e){const t=e[0]/255,A=e[1]/255,r=e[2]/255,n=Math.min(1-t,1-A,1-r);return[100*((1-t-n)/(1-n)||0),100*((1-A-n)/(1-n)||0),100*((1-r-n)/(1-n)||0),100*n]},s.rgb.keyword=function(e){const t=n[e];if(t)return t;let A,s=1/0;for(const n of Object.keys(r)){const t=r[n],a=(o=t,((i=e)[0]-o[0])**2+(i[1]-o[1])**2+(i[2]-o[2])**2);a<s&&(s=a,A=n)}var i,o;return A},s.keyword.rgb=function(e){return r[e]},s.rgb.xyz=function(e){let t=e[0]/255,A=e[1]/255,r=e[2]/255;t=t>.04045?((t+.055)/1.055)**2.4:t/12.92,A=A>.04045?((A+.055)/1.055)**2.4:A/12.92,r=r>.04045?((r+.055)/1.055)**2.4:r/12.92;return[100*(.4124*t+.3576*A+.1805*r),100*(.2126*t+.7152*A+.0722*r),100*(.0193*t+.1192*A+.9505*r)]},s.rgb.lab=function(e){const t=s.rgb.xyz(e);let A=t[0],r=t[1],n=t[2];A/=95.047,r/=100,n/=108.883,A=A>.008856?A**(1/3):7.787*A+16/116,r=r>.008856?r**(1/3):7.787*r+16/116,n=n>.008856?n**(1/3):7.787*n+16/116;return[116*r-16,500*(A-r),200*(r-n)]},s.hsl.rgb=function(e){const t=e[0]/360,A=e[1]/100,r=e[2]/100;let n,s,i;if(0===A)return i=255*r,[i,i,i];n=r<.5?r*(1+A):r+A-r*A;const o=2*r-n,a=[0,0,0];for(let l=0;l<3;l++)s=t+1/3*-(l-1),s<0&&s++,s>1&&s--,i=6*s<1?o+6*(n-o)*s:2*s<1?n:3*s<2?o+(n-o)*(2/3-s)*6:o,a[l]=255*i;return a},s.hsl.hsv=function(e){const t=e[0];let A=e[1]/100,r=e[2]/100,n=A;const s=Math.max(r,.01);r*=2,A*=r<=1?r:2-r,n*=s<=1?s:2-s;return[t,100*(0===r?2*n/(s+n):2*A/(r+A)),100*((r+A)/2)]},s.hsv.rgb=function(e){const t=e[0]/60,A=e[1]/100;let r=e[2]/100;const n=Math.floor(t)%6,s=t-Math.floor(t),i=255*r*(1-A),o=255*r*(1-A*s),a=255*r*(1-A*(1-s));switch(r*=255,n){case 0:return[r,a,i];case 1:return[o,r,i];case 2:return[i,r,a];case 3:return[i,o,r];case 4:return[a,i,r];case 5:return[r,i,o]}},s.hsv.hsl=function(e){const t=e[0],A=e[1]/100,r=e[2]/100,n=Math.max(r,.01);let s,i;i=(2-A)*r;const o=(2-A)*n;return s=A*n,s/=o<=1?o:2-o,s=s||0,i/=2,[t,100*s,100*i]},s.hwb.rgb=function(e){const t=e[0]/360;let A=e[1]/100,r=e[2]/100;const n=A+r;let s;n>1&&(A/=n,r/=n);const i=Math.floor(6*t),o=1-r;s=6*t-i,0!==(1&i)&&(s=1-s);const a=A+s*(o-A);let l,u,c;switch(i){default:case 6:case 0:l=o,u=a,c=A;break;case 1:l=a,u=o,c=A;break;case 2:l=A,u=o,c=a;break;case 3:l=A,u=a,c=o;break;case 4:l=a,u=A,c=o;break;case 5:l=o,u=A,c=a}return[255*l,255*u,255*c]},s.cmyk.rgb=function(e){const t=e[0]/100,A=e[1]/100,r=e[2]/100,n=e[3]/100;return[255*(1-Math.min(1,t*(1-n)+n)),255*(1-Math.min(1,A*(1-n)+n)),255*(1-Math.min(1,r*(1-n)+n))]},s.xyz.rgb=function(e){const t=e[0]/100,A=e[1]/100,r=e[2]/100;let n,s,i;return n=3.2406*t+-1.5372*A+-.4986*r,s=-.9689*t+1.8758*A+.0415*r,i=.0557*t+-.204*A+1.057*r,n=n>.0031308?1.055*n**(1/2.4)-.055:12.92*n,s=s>.0031308?1.055*s**(1/2.4)-.055:12.92*s,i=i>.0031308?1.055*i**(1/2.4)-.055:12.92*i,n=Math.min(Math.max(0,n),1),s=Math.min(Math.max(0,s),1),i=Math.min(Math.max(0,i),1),[255*n,255*s,255*i]},s.xyz.lab=function(e){let t=e[0],A=e[1],r=e[2];t/=95.047,A/=100,r/=108.883,t=t>.008856?t**(1/3):7.787*t+16/116,A=A>.008856?A**(1/3):7.787*A+16/116,r=r>.008856?r**(1/3):7.787*r+16/116;return[116*A-16,500*(t-A),200*(A-r)]},s.lab.xyz=function(e){let t,A,r;A=(e[0]+16)/116,t=e[1]/500+A,r=A-e[2]/200;const n=A**3,s=t**3,i=r**3;return A=n>.008856?n:(A-16/116)/7.787,t=s>.008856?s:(t-16/116)/7.787,r=i>.008856?i:(r-16/116)/7.787,t*=95.047,A*=100,r*=108.883,[t,A,r]},s.lab.lch=function(e){const t=e[0],A=e[1],r=e[2];let n;n=360*Math.atan2(r,A)/2/Math.PI,n<0&&(n+=360);return[t,Math.sqrt(A*A+r*r),n]},s.lch.lab=function(e){const t=e[0],A=e[1],r=e[2]/360*2*Math.PI;return[t,A*Math.cos(r),A*Math.sin(r)]},s.rgb.ansi16=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const[A,r,n]=e;let i=null===t?s.rgb.hsv(e)[2]:t;if(i=Math.round(i/50),0===i)return 30;let o=30+(Math.round(n/255)<<2|Math.round(r/255)<<1|Math.round(A/255));return 2===i&&(o+=60),o},s.hsv.ansi16=function(e){return s.rgb.ansi16(s.hsv.rgb(e),e[2])},s.rgb.ansi256=function(e){const t=e[0],A=e[1],r=e[2];if(t===A&&A===r)return t<8?16:t>248?231:Math.round((t-8)/247*24)+232;return 16+36*Math.round(t/255*5)+6*Math.round(A/255*5)+Math.round(r/255*5)},s.ansi16.rgb=function(e){let t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),t=t/10.5*255,[t,t,t];const A=.5*(1+~~(e>50));return[(1&t)*A*255,(t>>1&1)*A*255,(t>>2&1)*A*255]},s.ansi256.rgb=function(e){if(e>=232){const t=10*(e-232)+8;return[t,t,t]}let t;e-=16;return[Math.floor(e/36)/5*255,Math.floor((t=e%36)/6)/5*255,t%6/5*255]},s.rgb.hex=function(e){const t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},s.hex.rgb=function(e){const t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];let A=t[0];3===t[0].length&&(A=A.split("").map((e=>e+e)).join(""));const r=parseInt(A,16);return[r>>16&255,r>>8&255,255&r]},s.rgb.hcg=function(e){const t=e[0]/255,A=e[1]/255,r=e[2]/255,n=Math.max(Math.max(t,A),r),s=Math.min(Math.min(t,A),r),i=n-s;let o,a;return o=i<1?s/(1-i):0,a=i<=0?0:n===t?(A-r)/i%6:n===A?2+(r-t)/i:4+(t-A)/i,a/=6,a%=1,[360*a,100*i,100*o]},s.hsl.hcg=function(e){const t=e[1]/100,A=e[2]/100,r=A<.5?2*t*A:2*t*(1-A);let n=0;return r<1&&(n=(A-.5*r)/(1-r)),[e[0],100*r,100*n]},s.hsv.hcg=function(e){const t=e[1]/100,A=e[2]/100,r=t*A;let n=0;return r<1&&(n=(A-r)/(1-r)),[e[0],100*r,100*n]},s.hcg.rgb=function(e){const t=e[0]/360,A=e[1]/100,r=e[2]/100;if(0===A)return[255*r,255*r,255*r];const n=[0,0,0],s=t%1*6,i=s%1,o=1-i;let a=0;switch(Math.floor(s)){case 0:n[0]=1,n[1]=i,n[2]=0;break;case 1:n[0]=o,n[1]=1,n[2]=0;break;case 2:n[0]=0,n[1]=1,n[2]=i;break;case 3:n[0]=0,n[1]=o,n[2]=1;break;case 4:n[0]=i,n[1]=0,n[2]=1;break;default:n[0]=1,n[1]=0,n[2]=o}return a=(1-A)*r,[255*(A*n[0]+a),255*(A*n[1]+a),255*(A*n[2]+a)]},s.hcg.hsv=function(e){const t=e[1]/100,A=t+e[2]/100*(1-t);let r=0;return A>0&&(r=t/A),[e[0],100*r,100*A]},s.hcg.hsl=function(e){const t=e[1]/100,A=e[2]/100*(1-t)+.5*t;let r=0;return A>0&&A<.5?r=t/(2*A):A>=.5&&A<1&&(r=t/(2*(1-A))),[e[0],100*r,100*A]},s.hcg.hwb=function(e){const t=e[1]/100,A=t+e[2]/100*(1-t);return[e[0],100*(A-t),100*(1-A)]},s.hwb.hcg=function(e){const t=e[1]/100,A=1-e[2]/100,r=A-t;let n=0;return r<1&&(n=(A-r)/(1-r)),[e[0],100*r,100*n]},s.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},s.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},s.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},s.gray.hsl=function(e){return[0,0,e[0]]},s.gray.hsv=s.gray.hsl,s.gray.hwb=function(e){return[0,100,e[0]]},s.gray.cmyk=function(e){return[0,0,0,e[0]]},s.gray.lab=function(e){return[e[0],0,0]},s.gray.hex=function(e){const t=255&Math.round(e[0]/100*255),A=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(A.length)+A},s.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}},1256:(e,t,A)=>{const r=A(341),n=A(6729),s={};Object.keys(r).forEach((e=>{s[e]={},Object.defineProperty(s[e],"channels",{value:r[e].channels}),Object.defineProperty(s[e],"labels",{value:r[e].labels});const t=n(e);Object.keys(t).forEach((A=>{const r=t[A];s[e][A]=function(e){const t=function(){for(var t=arguments.length,A=new Array(t),r=0;r<t;r++)A[r]=arguments[r];const n=A[0];if(void 0===n||null===n)return n;n.length>1&&(A=n);const s=e(A);if("object"===typeof s)for(let e=s.length,i=0;i<e;i++)s[i]=Math.round(s[i]);return s};return"conversion"in e&&(t.conversion=e.conversion),t}(r),s[e][A].raw=function(e){const t=function(){for(var t=arguments.length,A=new Array(t),r=0;r<t;r++)A[r]=arguments[r];const n=A[0];return void 0===n||null===n?n:(n.length>1&&(A=n),e(A))};return"conversion"in e&&(t.conversion=e.conversion),t}(r)}))})),e.exports=s},6729:(e,t,A)=>{const r=A(341);function n(e){const t=function(){const e={},t=Object.keys(r);for(let A=t.length,r=0;r<A;r++)e[t[r]]={distance:-1,parent:null};return e}(),A=[e];for(t[e].distance=0;A.length;){const e=A.pop(),n=Object.keys(r[e]);for(let r=n.length,s=0;s<r;s++){const r=n[s],i=t[r];-1===i.distance&&(i.distance=t[e].distance+1,i.parent=e,A.unshift(r))}}return t}function s(e,t){return function(A){return t(e(A))}}function i(e,t){const A=[t[e].parent,e];let n=r[t[e].parent][e],i=t[e].parent;for(;t[i].parent;)A.unshift(t[i].parent),n=s(r[t[i].parent][i],n),i=t[i].parent;return n.conversion=A,n}e.exports=function(e){const t=n(e),A={},r=Object.keys(t);for(let n=r.length,s=0;s<n;s++){const e=r[s];null!==t[e].parent&&(A[e]=i(e,t))}return A}},458:e=>{"use strict";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},8493:e=>{"use strict";e.exports=class{constructor(e){this.stateTable=e.stateTable,this.accepting=e.accepting,this.tags=e.tags}match(e){var t=this;return{*[Symbol.iterator](){for(var A=1,r=null,n=null,s=null,i=0;i<e.length;i++){var o=e[i];s=A,0===(A=t.stateTable[A][o])&&(null!=r&&null!=n&&n>=r&&(yield[r,n,t.tags[s]]),A=t.stateTable[1][o],r=null),0!==A&&null==r&&(r=i),t.accepting[A]&&(n=i),0===A&&(A=1)}null!=r&&null!=n&&n>=r&&(yield[r,n,t.tags[A]])}}}apply(e,t){for(var[A,r,n]of this.match(e))for(var s of n)"function"===typeof t[s]&&t[s](A,r,e.slice(A,r+1))}}},122:e=>{"use strict";e.exports=function e(t,A){if(t===A)return!0;if(t&&A&&"object"==typeof t&&"object"==typeof A){if(t.constructor!==A.constructor)return!1;var r,n,s;if(Array.isArray(t)){if((r=t.length)!=A.length)return!1;for(n=r;0!==n--;)if(!e(t[n],A[n]))return!1;return!0}if(t.constructor===RegExp)return t.source===A.source&&t.flags===A.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===A.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===A.toString();if((r=(s=Object.keys(t)).length)!==Object.keys(A).length)return!1;for(n=r;0!==n--;)if(!Object.prototype.hasOwnProperty.call(A,s[n]))return!1;for(n=r;0!==n--;){var i=s[n];if(!e(t[i],A[i]))return!1}return!0}return t!==t&&A!==A}},4279:function(e,t,A){"use strict";var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,A=1,r=arguments.length;A<r;A++)for(var n in t=arguments[A])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},r.apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var n=A(8137),s=A(5397),i=A(7525),o=r(r({},n.namedReferences),{all:n.namedReferences.html5});function a(e,t,A){t.lastIndex=0;var r,n=t.exec(e);if(n){r="";var s=0;do{s!==n.index&&(r+=e.substring(s,n.index));var i=n[0];r+=A(i),s=n.index+i.length}while(n=t.exec(e));s!==e.length&&(r+=e.substring(s))}else r=e;return r}var l={specialChars:/[<>'"&]/g,nonAscii:/[<>'"&\u0080-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,nonAsciiPrintable:/[<>'"&\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,nonAsciiPrintableOnly:/[\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,extensive:/[\x01-\x0c\x0e-\x1f\x21-\x2c\x2e-\x2f\x3a-\x40\x5b-\x60\x7b-\x7d\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g},u={mode:"specialChars",level:"all",numeric:"decimal"};t.encode=function(e,t){var A=void 0===t?u:t,r=A.mode,n=void 0===r?"specialChars":r,s=A.numeric,c=void 0===s?"decimal":s,d=A.level;if(!e)return"";var f=l[n],h=o[void 0===d?"all":d].characters,g="hexadecimal"===c;return a(e,f,(function(e){var t=h[e];if(!t){var A=e.length>1?i.getCodePoint(e,0):e.charCodeAt(0);t=(g?"&#x"+A.toString(16):"&#"+A)+";"}return t}))};var c={scope:"body",level:"all"},d=/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);/g,f=/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g,h={xml:{strict:d,attribute:f,body:n.bodyRegExps.xml},html4:{strict:d,attribute:f,body:n.bodyRegExps.html4},html5:{strict:d,attribute:f,body:n.bodyRegExps.html5}},g=r(r({},h),{all:h.html5}),p=String.fromCharCode,b=p(65533),m={level:"all"};function v(e,t,A,r){var n=e,o=e[e.length-1];if(A&&"="===o)n=e;else if(r&&";"!==o)n=e;else{var a=t[e];if(a)n=a;else if("&"===e[0]&&"#"===e[1]){var l=e[2],u="x"==l||"X"==l?parseInt(e.substr(3),16):parseInt(e.substr(2));n=u>=1114111?b:u>65535?i.fromCodePoint(u):p(s.numericUnicodeMap[u]||u)}}return n}t.decodeEntity=function(e,t){var A=(void 0===t?m:t).level;return e?v(e,o[void 0===A?"all":A].entities,!1,!1):""},t.decode=function(e,t){var A=void 0===t?c:t,r=A.level,n=void 0===r?"all":r,s=A.scope,i=void 0===s?"xml"===n?"strict":"body":s;if(!e)return"";var l=g[n][i],u=o[n].entities,d="attribute"===i,f="strict"===i;return a(e,l,(function(e){return v(e,u,d,f)}))}},8137:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bodyRegExps={xml:/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&notin;|&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&centerdot;|&copysr;|&divideontimes;|&gtcc;|&gtcir;|&gtdot;|&gtlPar;|&gtquest;|&gtrapprox;|&gtrarr;|&gtrdot;|&gtreqless;|&gtreqqless;|&gtrless;|&gtrsim;|&ltcc;|&ltcir;|&ltdot;|&lthree;|&ltimes;|&ltlarr;|&ltquest;|&ltrPar;|&ltri;|&ltrie;|&ltrif;|&notin;|&notinE;|&notindot;|&notinva;|&notinvb;|&notinvc;|&notni;|&notniva;|&notnivb;|&notnivc;|&parallel;|&timesb;|&timesbar;|&timesd;|&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g},t.namedReferences={xml:{entities:{"&lt;":"<","&gt;":">","&quot;":'"',"&apos;":"'","&amp;":"&"},characters:{"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&apos;","&":"&amp;"}},html4:{entities:{"&apos;":"'","&nbsp":"\xa0","&nbsp;":"\xa0","&iexcl":"\xa1","&iexcl;":"\xa1","&cent":"\xa2","&cent;":"\xa2","&pound":"\xa3","&pound;":"\xa3","&curren":"\xa4","&curren;":"\xa4","&yen":"\xa5","&yen;":"\xa5","&brvbar":"\xa6","&brvbar;":"\xa6","&sect":"\xa7","&sect;":"\xa7","&uml":"\xa8","&uml;":"\xa8","&copy":"\xa9","&copy;":"\xa9","&ordf":"\xaa","&ordf;":"\xaa","&laquo":"\xab","&laquo;":"\xab","&not":"\xac","&not;":"\xac","&shy":"\xad","&shy;":"\xad","&reg":"\xae","&reg;":"\xae","&macr":"\xaf","&macr;":"\xaf","&deg":"\xb0","&deg;":"\xb0","&plusmn":"\xb1","&plusmn;":"\xb1","&sup2":"\xb2","&sup2;":"\xb2","&sup3":"\xb3","&sup3;":"\xb3","&acute":"\xb4","&acute;":"\xb4","&micro":"\xb5","&micro;":"\xb5","&para":"\xb6","&para;":"\xb6","&middot":"\xb7","&middot;":"\xb7","&cedil":"\xb8","&cedil;":"\xb8","&sup1":"\xb9","&sup1;":"\xb9","&ordm":"\xba","&ordm;":"\xba","&raquo":"\xbb","&raquo;":"\xbb","&frac14":"\xbc","&frac14;":"\xbc","&frac12":"\xbd","&frac12;":"\xbd","&frac34":"\xbe","&frac34;":"\xbe","&iquest":"\xbf","&iquest;":"\xbf","&Agrave":"\xc0","&Agrave;":"\xc0","&Aacute":"\xc1","&Aacute;":"\xc1","&Acirc":"\xc2","&Acirc;":"\xc2","&Atilde":"\xc3","&Atilde;":"\xc3","&Auml":"\xc4","&Auml;":"\xc4","&Aring":"\xc5","&Aring;":"\xc5","&AElig":"\xc6","&AElig;":"\xc6","&Ccedil":"\xc7","&Ccedil;":"\xc7","&Egrave":"\xc8","&Egrave;":"\xc8","&Eacute":"\xc9","&Eacute;":"\xc9","&Ecirc":"\xca","&Ecirc;":"\xca","&Euml":"\xcb","&Euml;":"\xcb","&Igrave":"\xcc","&Igrave;":"\xcc","&Iacute":"\xcd","&Iacute;":"\xcd","&Icirc":"\xce","&Icirc;":"\xce","&Iuml":"\xcf","&Iuml;":"\xcf","&ETH":"\xd0","&ETH;":"\xd0","&Ntilde":"\xd1","&Ntilde;":"\xd1","&Ograve":"\xd2","&Ograve;":"\xd2","&Oacute":"\xd3","&Oacute;":"\xd3","&Ocirc":"\xd4","&Ocirc;":"\xd4","&Otilde":"\xd5","&Otilde;":"\xd5","&Ouml":"\xd6","&Ouml;":"\xd6","&times":"\xd7","&times;":"\xd7","&Oslash":"\xd8","&Oslash;":"\xd8","&Ugrave":"\xd9","&Ugrave;":"\xd9","&Uacute":"\xda","&Uacute;":"\xda","&Ucirc":"\xdb","&Ucirc;":"\xdb","&Uuml":"\xdc","&Uuml;":"\xdc","&Yacute":"\xdd","&Yacute;":"\xdd","&THORN":"\xde","&THORN;":"\xde","&szlig":"\xdf","&szlig;":"\xdf","&agrave":"\xe0","&agrave;":"\xe0","&aacute":"\xe1","&aacute;":"\xe1","&acirc":"\xe2","&acirc;":"\xe2","&atilde":"\xe3","&atilde;":"\xe3","&auml":"\xe4","&auml;":"\xe4","&aring":"\xe5","&aring;":"\xe5","&aelig":"\xe6","&aelig;":"\xe6","&ccedil":"\xe7","&ccedil;":"\xe7","&egrave":"\xe8","&egrave;":"\xe8","&eacute":"\xe9","&eacute;":"\xe9","&ecirc":"\xea","&ecirc;":"\xea","&euml":"\xeb","&euml;":"\xeb","&igrave":"\xec","&igrave;":"\xec","&iacute":"\xed","&iacute;":"\xed","&icirc":"\xee","&icirc;":"\xee","&iuml":"\xef","&iuml;":"\xef","&eth":"\xf0","&eth;":"\xf0","&ntilde":"\xf1","&ntilde;":"\xf1","&ograve":"\xf2","&ograve;":"\xf2","&oacute":"\xf3","&oacute;":"\xf3","&ocirc":"\xf4","&ocirc;":"\xf4","&otilde":"\xf5","&otilde;":"\xf5","&ouml":"\xf6","&ouml;":"\xf6","&divide":"\xf7","&divide;":"\xf7","&oslash":"\xf8","&oslash;":"\xf8","&ugrave":"\xf9","&ugrave;":"\xf9","&uacute":"\xfa","&uacute;":"\xfa","&ucirc":"\xfb","&ucirc;":"\xfb","&uuml":"\xfc","&uuml;":"\xfc","&yacute":"\xfd","&yacute;":"\xfd","&thorn":"\xfe","&thorn;":"\xfe","&yuml":"\xff","&yuml;":"\xff","&quot":'"',"&quot;":'"',"&amp":"&","&amp;":"&","&lt":"<","&lt;":"<","&gt":">","&gt;":">","&OElig;":"\u0152","&oelig;":"\u0153","&Scaron;":"\u0160","&scaron;":"\u0161","&Yuml;":"\u0178","&circ;":"\u02c6","&tilde;":"\u02dc","&ensp;":"\u2002","&emsp;":"\u2003","&thinsp;":"\u2009","&zwnj;":"\u200c","&zwj;":"\u200d","&lrm;":"\u200e","&rlm;":"\u200f","&ndash;":"\u2013","&mdash;":"\u2014","&lsquo;":"\u2018","&rsquo;":"\u2019","&sbquo;":"\u201a","&ldquo;":"\u201c","&rdquo;":"\u201d","&bdquo;":"\u201e","&dagger;":"\u2020","&Dagger;":"\u2021","&permil;":"\u2030","&lsaquo;":"\u2039","&rsaquo;":"\u203a","&euro;":"\u20ac","&fnof;":"\u0192","&Alpha;":"\u0391","&Beta;":"\u0392","&Gamma;":"\u0393","&Delta;":"\u0394","&Epsilon;":"\u0395","&Zeta;":"\u0396","&Eta;":"\u0397","&Theta;":"\u0398","&Iota;":"\u0399","&Kappa;":"\u039a","&Lambda;":"\u039b","&Mu;":"\u039c","&Nu;":"\u039d","&Xi;":"\u039e","&Omicron;":"\u039f","&Pi;":"\u03a0","&Rho;":"\u03a1","&Sigma;":"\u03a3","&Tau;":"\u03a4","&Upsilon;":"\u03a5","&Phi;":"\u03a6","&Chi;":"\u03a7","&Psi;":"\u03a8","&Omega;":"\u03a9","&alpha;":"\u03b1","&beta;":"\u03b2","&gamma;":"\u03b3","&delta;":"\u03b4","&epsilon;":"\u03b5","&zeta;":"\u03b6","&eta;":"\u03b7","&theta;":"\u03b8","&iota;":"\u03b9","&kappa;":"\u03ba","&lambda;":"\u03bb","&mu;":"\u03bc","&nu;":"\u03bd","&xi;":"\u03be","&omicron;":"\u03bf","&pi;":"\u03c0","&rho;":"\u03c1","&sigmaf;":"\u03c2","&sigma;":"\u03c3","&tau;":"\u03c4","&upsilon;":"\u03c5","&phi;":"\u03c6","&chi;":"\u03c7","&psi;":"\u03c8","&omega;":"\u03c9","&thetasym;":"\u03d1","&upsih;":"\u03d2","&piv;":"\u03d6","&bull;":"\u2022","&hellip;":"\u2026","&prime;":"\u2032","&Prime;":"\u2033","&oline;":"\u203e","&frasl;":"\u2044","&weierp;":"\u2118","&image;":"\u2111","&real;":"\u211c","&trade;":"\u2122","&alefsym;":"\u2135","&larr;":"\u2190","&uarr;":"\u2191","&rarr;":"\u2192","&darr;":"\u2193","&harr;":"\u2194","&crarr;":"\u21b5","&lArr;":"\u21d0","&uArr;":"\u21d1","&rArr;":"\u21d2","&dArr;":"\u21d3","&hArr;":"\u21d4","&forall;":"\u2200","&part;":"\u2202","&exist;":"\u2203","&empty;":"\u2205","&nabla;":"\u2207","&isin;":"\u2208","&notin;":"\u2209","&ni;":"\u220b","&prod;":"\u220f","&sum;":"\u2211","&minus;":"\u2212","&lowast;":"\u2217","&radic;":"\u221a","&prop;":"\u221d","&infin;":"\u221e","&ang;":"\u2220","&and;":"\u2227","&or;":"\u2228","&cap;":"\u2229","&cup;":"\u222a","&int;":"\u222b","&there4;":"\u2234","&sim;":"\u223c","&cong;":"\u2245","&asymp;":"\u2248","&ne;":"\u2260","&equiv;":"\u2261","&le;":"\u2264","&ge;":"\u2265","&sub;":"\u2282","&sup;":"\u2283","&nsub;":"\u2284","&sube;":"\u2286","&supe;":"\u2287","&oplus;":"\u2295","&otimes;":"\u2297","&perp;":"\u22a5","&sdot;":"\u22c5","&lceil;":"\u2308","&rceil;":"\u2309","&lfloor;":"\u230a","&rfloor;":"\u230b","&lang;":"\u2329","&rang;":"\u232a","&loz;":"\u25ca","&spades;":"\u2660","&clubs;":"\u2663","&hearts;":"\u2665","&diams;":"\u2666"},characters:{"'":"&apos;","\xa0":"&nbsp;","\xa1":"&iexcl;","\xa2":"&cent;","\xa3":"&pound;","\xa4":"&curren;","\xa5":"&yen;","\xa6":"&brvbar;","\xa7":"&sect;","\xa8":"&uml;","\xa9":"&copy;","\xaa":"&ordf;","\xab":"&laquo;","\xac":"&not;","\xad":"&shy;","\xae":"&reg;","\xaf":"&macr;","\xb0":"&deg;","\xb1":"&plusmn;","\xb2":"&sup2;","\xb3":"&sup3;","\xb4":"&acute;","\xb5":"&micro;","\xb6":"&para;","\xb7":"&middot;","\xb8":"&cedil;","\xb9":"&sup1;","\xba":"&ordm;","\xbb":"&raquo;","\xbc":"&frac14;","\xbd":"&frac12;","\xbe":"&frac34;","\xbf":"&iquest;","\xc0":"&Agrave;","\xc1":"&Aacute;","\xc2":"&Acirc;","\xc3":"&Atilde;","\xc4":"&Auml;","\xc5":"&Aring;","\xc6":"&AElig;","\xc7":"&Ccedil;","\xc8":"&Egrave;","\xc9":"&Eacute;","\xca":"&Ecirc;","\xcb":"&Euml;","\xcc":"&Igrave;","\xcd":"&Iacute;","\xce":"&Icirc;","\xcf":"&Iuml;","\xd0":"&ETH;","\xd1":"&Ntilde;","\xd2":"&Ograve;","\xd3":"&Oacute;","\xd4":"&Ocirc;","\xd5":"&Otilde;","\xd6":"&Ouml;","\xd7":"&times;","\xd8":"&Oslash;","\xd9":"&Ugrave;","\xda":"&Uacute;","\xdb":"&Ucirc;","\xdc":"&Uuml;","\xdd":"&Yacute;","\xde":"&THORN;","\xdf":"&szlig;","\xe0":"&agrave;","\xe1":"&aacute;","\xe2":"&acirc;","\xe3":"&atilde;","\xe4":"&auml;","\xe5":"&aring;","\xe6":"&aelig;","\xe7":"&ccedil;","\xe8":"&egrave;","\xe9":"&eacute;","\xea":"&ecirc;","\xeb":"&euml;","\xec":"&igrave;","\xed":"&iacute;","\xee":"&icirc;","\xef":"&iuml;","\xf0":"&eth;","\xf1":"&ntilde;","\xf2":"&ograve;","\xf3":"&oacute;","\xf4":"&ocirc;","\xf5":"&otilde;","\xf6":"&ouml;","\xf7":"&divide;","\xf8":"&oslash;","\xf9":"&ugrave;","\xfa":"&uacute;","\xfb":"&ucirc;","\xfc":"&uuml;","\xfd":"&yacute;","\xfe":"&thorn;","\xff":"&yuml;",'"':"&quot;","&":"&amp;","<":"&lt;",">":"&gt;","\u0152":"&OElig;","\u0153":"&oelig;","\u0160":"&Scaron;","\u0161":"&scaron;","\u0178":"&Yuml;","\u02c6":"&circ;","\u02dc":"&tilde;","\u2002":"&ensp;","\u2003":"&emsp;","\u2009":"&thinsp;","\u200c":"&zwnj;","\u200d":"&zwj;","\u200e":"&lrm;","\u200f":"&rlm;","\u2013":"&ndash;","\u2014":"&mdash;","\u2018":"&lsquo;","\u2019":"&rsquo;","\u201a":"&sbquo;","\u201c":"&ldquo;","\u201d":"&rdquo;","\u201e":"&bdquo;","\u2020":"&dagger;","\u2021":"&Dagger;","\u2030":"&permil;","\u2039":"&lsaquo;","\u203a":"&rsaquo;","\u20ac":"&euro;","\u0192":"&fnof;","\u0391":"&Alpha;","\u0392":"&Beta;","\u0393":"&Gamma;","\u0394":"&Delta;","\u0395":"&Epsilon;","\u0396":"&Zeta;","\u0397":"&Eta;","\u0398":"&Theta;","\u0399":"&Iota;","\u039a":"&Kappa;","\u039b":"&Lambda;","\u039c":"&Mu;","\u039d":"&Nu;","\u039e":"&Xi;","\u039f":"&Omicron;","\u03a0":"&Pi;","\u03a1":"&Rho;","\u03a3":"&Sigma;","\u03a4":"&Tau;","\u03a5":"&Upsilon;","\u03a6":"&Phi;","\u03a7":"&Chi;","\u03a8":"&Psi;","\u03a9":"&Omega;","\u03b1":"&alpha;","\u03b2":"&beta;","\u03b3":"&gamma;","\u03b4":"&delta;","\u03b5":"&epsilon;","\u03b6":"&zeta;","\u03b7":"&eta;","\u03b8":"&theta;","\u03b9":"&iota;","\u03ba":"&kappa;","\u03bb":"&lambda;","\u03bc":"&mu;","\u03bd":"&nu;","\u03be":"&xi;","\u03bf":"&omicron;","\u03c0":"&pi;","\u03c1":"&rho;","\u03c2":"&sigmaf;","\u03c3":"&sigma;","\u03c4":"&tau;","\u03c5":"&upsilon;","\u03c6":"&phi;","\u03c7":"&chi;","\u03c8":"&psi;","\u03c9":"&omega;","\u03d1":"&thetasym;","\u03d2":"&upsih;","\u03d6":"&piv;","\u2022":"&bull;","\u2026":"&hellip;","\u2032":"&prime;","\u2033":"&Prime;","\u203e":"&oline;","\u2044":"&frasl;","\u2118":"&weierp;","\u2111":"&image;","\u211c":"&real;","\u2122":"&trade;","\u2135":"&alefsym;","\u2190":"&larr;","\u2191":"&uarr;","\u2192":"&rarr;","\u2193":"&darr;","\u2194":"&harr;","\u21b5":"&crarr;","\u21d0":"&lArr;","\u21d1":"&uArr;","\u21d2":"&rArr;","\u21d3":"&dArr;","\u21d4":"&hArr;","\u2200":"&forall;","\u2202":"&part;","\u2203":"&exist;","\u2205":"&empty;","\u2207":"&nabla;","\u2208":"&isin;","\u2209":"&notin;","\u220b":"&ni;","\u220f":"&prod;","\u2211":"&sum;","\u2212":"&minus;","\u2217":"&lowast;","\u221a":"&radic;","\u221d":"&prop;","\u221e":"&infin;","\u2220":"&ang;","\u2227":"&and;","\u2228":"&or;","\u2229":"&cap;","\u222a":"&cup;","\u222b":"&int;","\u2234":"&there4;","\u223c":"&sim;","\u2245":"&cong;","\u2248":"&asymp;","\u2260":"&ne;","\u2261":"&equiv;","\u2264":"&le;","\u2265":"&ge;","\u2282":"&sub;","\u2283":"&sup;","\u2284":"&nsub;","\u2286":"&sube;","\u2287":"&supe;","\u2295":"&oplus;","\u2297":"&otimes;","\u22a5":"&perp;","\u22c5":"&sdot;","\u2308":"&lceil;","\u2309":"&rceil;","\u230a":"&lfloor;","\u230b":"&rfloor;","\u2329":"&lang;","\u232a":"&rang;","\u25ca":"&loz;","\u2660":"&spades;","\u2663":"&clubs;","\u2665":"&hearts;","\u2666":"&diams;"}},html5:{entities:{"&AElig":"\xc6","&AElig;":"\xc6","&AMP":"&","&AMP;":"&","&Aacute":"\xc1","&Aacute;":"\xc1","&Abreve;":"\u0102","&Acirc":"\xc2","&Acirc;":"\xc2","&Acy;":"\u0410","&Afr;":"\ud835\udd04","&Agrave":"\xc0","&Agrave;":"\xc0","&Alpha;":"\u0391","&Amacr;":"\u0100","&And;":"\u2a53","&Aogon;":"\u0104","&Aopf;":"\ud835\udd38","&ApplyFunction;":"\u2061","&Aring":"\xc5","&Aring;":"\xc5","&Ascr;":"\ud835\udc9c","&Assign;":"\u2254","&Atilde":"\xc3","&Atilde;":"\xc3","&Auml":"\xc4","&Auml;":"\xc4","&Backslash;":"\u2216","&Barv;":"\u2ae7","&Barwed;":"\u2306","&Bcy;":"\u0411","&Because;":"\u2235","&Bernoullis;":"\u212c","&Beta;":"\u0392","&Bfr;":"\ud835\udd05","&Bopf;":"\ud835\udd39","&Breve;":"\u02d8","&Bscr;":"\u212c","&Bumpeq;":"\u224e","&CHcy;":"\u0427","&COPY":"\xa9","&COPY;":"\xa9","&Cacute;":"\u0106","&Cap;":"\u22d2","&CapitalDifferentialD;":"\u2145","&Cayleys;":"\u212d","&Ccaron;":"\u010c","&Ccedil":"\xc7","&Ccedil;":"\xc7","&Ccirc;":"\u0108","&Cconint;":"\u2230","&Cdot;":"\u010a","&Cedilla;":"\xb8","&CenterDot;":"\xb7","&Cfr;":"\u212d","&Chi;":"\u03a7","&CircleDot;":"\u2299","&CircleMinus;":"\u2296","&CirclePlus;":"\u2295","&CircleTimes;":"\u2297","&ClockwiseContourIntegral;":"\u2232","&CloseCurlyDoubleQuote;":"\u201d","&CloseCurlyQuote;":"\u2019","&Colon;":"\u2237","&Colone;":"\u2a74","&Congruent;":"\u2261","&Conint;":"\u222f","&ContourIntegral;":"\u222e","&Copf;":"\u2102","&Coproduct;":"\u2210","&CounterClockwiseContourIntegral;":"\u2233","&Cross;":"\u2a2f","&Cscr;":"\ud835\udc9e","&Cup;":"\u22d3","&CupCap;":"\u224d","&DD;":"\u2145","&DDotrahd;":"\u2911","&DJcy;":"\u0402","&DScy;":"\u0405","&DZcy;":"\u040f","&Dagger;":"\u2021","&Darr;":"\u21a1","&Dashv;":"\u2ae4","&Dcaron;":"\u010e","&Dcy;":"\u0414","&Del;":"\u2207","&Delta;":"\u0394","&Dfr;":"\ud835\udd07","&DiacriticalAcute;":"\xb4","&DiacriticalDot;":"\u02d9","&DiacriticalDoubleAcute;":"\u02dd","&DiacriticalGrave;":"`","&DiacriticalTilde;":"\u02dc","&Diamond;":"\u22c4","&DifferentialD;":"\u2146","&Dopf;":"\ud835\udd3b","&Dot;":"\xa8","&DotDot;":"\u20dc","&DotEqual;":"\u2250","&DoubleContourIntegral;":"\u222f","&DoubleDot;":"\xa8","&DoubleDownArrow;":"\u21d3","&DoubleLeftArrow;":"\u21d0","&DoubleLeftRightArrow;":"\u21d4","&DoubleLeftTee;":"\u2ae4","&DoubleLongLeftArrow;":"\u27f8","&DoubleLongLeftRightArrow;":"\u27fa","&DoubleLongRightArrow;":"\u27f9","&DoubleRightArrow;":"\u21d2","&DoubleRightTee;":"\u22a8","&DoubleUpArrow;":"\u21d1","&DoubleUpDownArrow;":"\u21d5","&DoubleVerticalBar;":"\u2225","&DownArrow;":"\u2193","&DownArrowBar;":"\u2913","&DownArrowUpArrow;":"\u21f5","&DownBreve;":"\u0311","&DownLeftRightVector;":"\u2950","&DownLeftTeeVector;":"\u295e","&DownLeftVector;":"\u21bd","&DownLeftVectorBar;":"\u2956","&DownRightTeeVector;":"\u295f","&DownRightVector;":"\u21c1","&DownRightVectorBar;":"\u2957","&DownTee;":"\u22a4","&DownTeeArrow;":"\u21a7","&Downarrow;":"\u21d3","&Dscr;":"\ud835\udc9f","&Dstrok;":"\u0110","&ENG;":"\u014a","&ETH":"\xd0","&ETH;":"\xd0","&Eacute":"\xc9","&Eacute;":"\xc9","&Ecaron;":"\u011a","&Ecirc":"\xca","&Ecirc;":"\xca","&Ecy;":"\u042d","&Edot;":"\u0116","&Efr;":"\ud835\udd08","&Egrave":"\xc8","&Egrave;":"\xc8","&Element;":"\u2208","&Emacr;":"\u0112","&EmptySmallSquare;":"\u25fb","&EmptyVerySmallSquare;":"\u25ab","&Eogon;":"\u0118","&Eopf;":"\ud835\udd3c","&Epsilon;":"\u0395","&Equal;":"\u2a75","&EqualTilde;":"\u2242","&Equilibrium;":"\u21cc","&Escr;":"\u2130","&Esim;":"\u2a73","&Eta;":"\u0397","&Euml":"\xcb","&Euml;":"\xcb","&Exists;":"\u2203","&ExponentialE;":"\u2147","&Fcy;":"\u0424","&Ffr;":"\ud835\udd09","&FilledSmallSquare;":"\u25fc","&FilledVerySmallSquare;":"\u25aa","&Fopf;":"\ud835\udd3d","&ForAll;":"\u2200","&Fouriertrf;":"\u2131","&Fscr;":"\u2131","&GJcy;":"\u0403","&GT":">","&GT;":">","&Gamma;":"\u0393","&Gammad;":"\u03dc","&Gbreve;":"\u011e","&Gcedil;":"\u0122","&Gcirc;":"\u011c","&Gcy;":"\u0413","&Gdot;":"\u0120","&Gfr;":"\ud835\udd0a","&Gg;":"\u22d9","&Gopf;":"\ud835\udd3e","&GreaterEqual;":"\u2265","&GreaterEqualLess;":"\u22db","&GreaterFullEqual;":"\u2267","&GreaterGreater;":"\u2aa2","&GreaterLess;":"\u2277","&GreaterSlantEqual;":"\u2a7e","&GreaterTilde;":"\u2273","&Gscr;":"\ud835\udca2","&Gt;":"\u226b","&HARDcy;":"\u042a","&Hacek;":"\u02c7","&Hat;":"^","&Hcirc;":"\u0124","&Hfr;":"\u210c","&HilbertSpace;":"\u210b","&Hopf;":"\u210d","&HorizontalLine;":"\u2500","&Hscr;":"\u210b","&Hstrok;":"\u0126","&HumpDownHump;":"\u224e","&HumpEqual;":"\u224f","&IEcy;":"\u0415","&IJlig;":"\u0132","&IOcy;":"\u0401","&Iacute":"\xcd","&Iacute;":"\xcd","&Icirc":"\xce","&Icirc;":"\xce","&Icy;":"\u0418","&Idot;":"\u0130","&Ifr;":"\u2111","&Igrave":"\xcc","&Igrave;":"\xcc","&Im;":"\u2111","&Imacr;":"\u012a","&ImaginaryI;":"\u2148","&Implies;":"\u21d2","&Int;":"\u222c","&Integral;":"\u222b","&Intersection;":"\u22c2","&InvisibleComma;":"\u2063","&InvisibleTimes;":"\u2062","&Iogon;":"\u012e","&Iopf;":"\ud835\udd40","&Iota;":"\u0399","&Iscr;":"\u2110","&Itilde;":"\u0128","&Iukcy;":"\u0406","&Iuml":"\xcf","&Iuml;":"\xcf","&Jcirc;":"\u0134","&Jcy;":"\u0419","&Jfr;":"\ud835\udd0d","&Jopf;":"\ud835\udd41","&Jscr;":"\ud835\udca5","&Jsercy;":"\u0408","&Jukcy;":"\u0404","&KHcy;":"\u0425","&KJcy;":"\u040c","&Kappa;":"\u039a","&Kcedil;":"\u0136","&Kcy;":"\u041a","&Kfr;":"\ud835\udd0e","&Kopf;":"\ud835\udd42","&Kscr;":"\ud835\udca6","&LJcy;":"\u0409","&LT":"<","&LT;":"<","&Lacute;":"\u0139","&Lambda;":"\u039b","&Lang;":"\u27ea","&Laplacetrf;":"\u2112","&Larr;":"\u219e","&Lcaron;":"\u013d","&Lcedil;":"\u013b","&Lcy;":"\u041b","&LeftAngleBracket;":"\u27e8","&LeftArrow;":"\u2190","&LeftArrowBar;":"\u21e4","&LeftArrowRightArrow;":"\u21c6","&LeftCeiling;":"\u2308","&LeftDoubleBracket;":"\u27e6","&LeftDownTeeVector;":"\u2961","&LeftDownVector;":"\u21c3","&LeftDownVectorBar;":"\u2959","&LeftFloor;":"\u230a","&LeftRightArrow;":"\u2194","&LeftRightVector;":"\u294e","&LeftTee;":"\u22a3","&LeftTeeArrow;":"\u21a4","&LeftTeeVector;":"\u295a","&LeftTriangle;":"\u22b2","&LeftTriangleBar;":"\u29cf","&LeftTriangleEqual;":"\u22b4","&LeftUpDownVector;":"\u2951","&LeftUpTeeVector;":"\u2960","&LeftUpVector;":"\u21bf","&LeftUpVectorBar;":"\u2958","&LeftVector;":"\u21bc","&LeftVectorBar;":"\u2952","&Leftarrow;":"\u21d0","&Leftrightarrow;":"\u21d4","&LessEqualGreater;":"\u22da","&LessFullEqual;":"\u2266","&LessGreater;":"\u2276","&LessLess;":"\u2aa1","&LessSlantEqual;":"\u2a7d","&LessTilde;":"\u2272","&Lfr;":"\ud835\udd0f","&Ll;":"\u22d8","&Lleftarrow;":"\u21da","&Lmidot;":"\u013f","&LongLeftArrow;":"\u27f5","&LongLeftRightArrow;":"\u27f7","&LongRightArrow;":"\u27f6","&Longleftarrow;":"\u27f8","&Longleftrightarrow;":"\u27fa","&Longrightarrow;":"\u27f9","&Lopf;":"\ud835\udd43","&LowerLeftArrow;":"\u2199","&LowerRightArrow;":"\u2198","&Lscr;":"\u2112","&Lsh;":"\u21b0","&Lstrok;":"\u0141","&Lt;":"\u226a","&Map;":"\u2905","&Mcy;":"\u041c","&MediumSpace;":"\u205f","&Mellintrf;":"\u2133","&Mfr;":"\ud835\udd10","&MinusPlus;":"\u2213","&Mopf;":"\ud835\udd44","&Mscr;":"\u2133","&Mu;":"\u039c","&NJcy;":"\u040a","&Nacute;":"\u0143","&Ncaron;":"\u0147","&Ncedil;":"\u0145","&Ncy;":"\u041d","&NegativeMediumSpace;":"\u200b","&NegativeThickSpace;":"\u200b","&NegativeThinSpace;":"\u200b","&NegativeVeryThinSpace;":"\u200b","&NestedGreaterGreater;":"\u226b","&NestedLessLess;":"\u226a","&NewLine;":"\n","&Nfr;":"\ud835\udd11","&NoBreak;":"\u2060","&NonBreakingSpace;":"\xa0","&Nopf;":"\u2115","&Not;":"\u2aec","&NotCongruent;":"\u2262","&NotCupCap;":"\u226d","&NotDoubleVerticalBar;":"\u2226","&NotElement;":"\u2209","&NotEqual;":"\u2260","&NotEqualTilde;":"\u2242\u0338","&NotExists;":"\u2204","&NotGreater;":"\u226f","&NotGreaterEqual;":"\u2271","&NotGreaterFullEqual;":"\u2267\u0338","&NotGreaterGreater;":"\u226b\u0338","&NotGreaterLess;":"\u2279","&NotGreaterSlantEqual;":"\u2a7e\u0338","&NotGreaterTilde;":"\u2275","&NotHumpDownHump;":"\u224e\u0338","&NotHumpEqual;":"\u224f\u0338","&NotLeftTriangle;":"\u22ea","&NotLeftTriangleBar;":"\u29cf\u0338","&NotLeftTriangleEqual;":"\u22ec","&NotLess;":"\u226e","&NotLessEqual;":"\u2270","&NotLessGreater;":"\u2278","&NotLessLess;":"\u226a\u0338","&NotLessSlantEqual;":"\u2a7d\u0338","&NotLessTilde;":"\u2274","&NotNestedGreaterGreater;":"\u2aa2\u0338","&NotNestedLessLess;":"\u2aa1\u0338","&NotPrecedes;":"\u2280","&NotPrecedesEqual;":"\u2aaf\u0338","&NotPrecedesSlantEqual;":"\u22e0","&NotReverseElement;":"\u220c","&NotRightTriangle;":"\u22eb","&NotRightTriangleBar;":"\u29d0\u0338","&NotRightTriangleEqual;":"\u22ed","&NotSquareSubset;":"\u228f\u0338","&NotSquareSubsetEqual;":"\u22e2","&NotSquareSuperset;":"\u2290\u0338","&NotSquareSupersetEqual;":"\u22e3","&NotSubset;":"\u2282\u20d2","&NotSubsetEqual;":"\u2288","&NotSucceeds;":"\u2281","&NotSucceedsEqual;":"\u2ab0\u0338","&NotSucceedsSlantEqual;":"\u22e1","&NotSucceedsTilde;":"\u227f\u0338","&NotSuperset;":"\u2283\u20d2","&NotSupersetEqual;":"\u2289","&NotTilde;":"\u2241","&NotTildeEqual;":"\u2244","&NotTildeFullEqual;":"\u2247","&NotTildeTilde;":"\u2249","&NotVerticalBar;":"\u2224","&Nscr;":"\ud835\udca9","&Ntilde":"\xd1","&Ntilde;":"\xd1","&Nu;":"\u039d","&OElig;":"\u0152","&Oacute":"\xd3","&Oacute;":"\xd3","&Ocirc":"\xd4","&Ocirc;":"\xd4","&Ocy;":"\u041e","&Odblac;":"\u0150","&Ofr;":"\ud835\udd12","&Ograve":"\xd2","&Ograve;":"\xd2","&Omacr;":"\u014c","&Omega;":"\u03a9","&Omicron;":"\u039f","&Oopf;":"\ud835\udd46","&OpenCurlyDoubleQuote;":"\u201c","&OpenCurlyQuote;":"\u2018","&Or;":"\u2a54","&Oscr;":"\ud835\udcaa","&Oslash":"\xd8","&Oslash;":"\xd8","&Otilde":"\xd5","&Otilde;":"\xd5","&Otimes;":"\u2a37","&Ouml":"\xd6","&Ouml;":"\xd6","&OverBar;":"\u203e","&OverBrace;":"\u23de","&OverBracket;":"\u23b4","&OverParenthesis;":"\u23dc","&PartialD;":"\u2202","&Pcy;":"\u041f","&Pfr;":"\ud835\udd13","&Phi;":"\u03a6","&Pi;":"\u03a0","&PlusMinus;":"\xb1","&Poincareplane;":"\u210c","&Popf;":"\u2119","&Pr;":"\u2abb","&Precedes;":"\u227a","&PrecedesEqual;":"\u2aaf","&PrecedesSlantEqual;":"\u227c","&PrecedesTilde;":"\u227e","&Prime;":"\u2033","&Product;":"\u220f","&Proportion;":"\u2237","&Proportional;":"\u221d","&Pscr;":"\ud835\udcab","&Psi;":"\u03a8","&QUOT":'"',"&QUOT;":'"',"&Qfr;":"\ud835\udd14","&Qopf;":"\u211a","&Qscr;":"\ud835\udcac","&RBarr;":"\u2910","&REG":"\xae","&REG;":"\xae","&Racute;":"\u0154","&Rang;":"\u27eb","&Rarr;":"\u21a0","&Rarrtl;":"\u2916","&Rcaron;":"\u0158","&Rcedil;":"\u0156","&Rcy;":"\u0420","&Re;":"\u211c","&ReverseElement;":"\u220b","&ReverseEquilibrium;":"\u21cb","&ReverseUpEquilibrium;":"\u296f","&Rfr;":"\u211c","&Rho;":"\u03a1","&RightAngleBracket;":"\u27e9","&RightArrow;":"\u2192","&RightArrowBar;":"\u21e5","&RightArrowLeftArrow;":"\u21c4","&RightCeiling;":"\u2309","&RightDoubleBracket;":"\u27e7","&RightDownTeeVector;":"\u295d","&RightDownVector;":"\u21c2","&RightDownVectorBar;":"\u2955","&RightFloor;":"\u230b","&RightTee;":"\u22a2","&RightTeeArrow;":"\u21a6","&RightTeeVector;":"\u295b","&RightTriangle;":"\u22b3","&RightTriangleBar;":"\u29d0","&RightTriangleEqual;":"\u22b5","&RightUpDownVector;":"\u294f","&RightUpTeeVector;":"\u295c","&RightUpVector;":"\u21be","&RightUpVectorBar;":"\u2954","&RightVector;":"\u21c0","&RightVectorBar;":"\u2953","&Rightarrow;":"\u21d2","&Ropf;":"\u211d","&RoundImplies;":"\u2970","&Rrightarrow;":"\u21db","&Rscr;":"\u211b","&Rsh;":"\u21b1","&RuleDelayed;":"\u29f4","&SHCHcy;":"\u0429","&SHcy;":"\u0428","&SOFTcy;":"\u042c","&Sacute;":"\u015a","&Sc;":"\u2abc","&Scaron;":"\u0160","&Scedil;":"\u015e","&Scirc;":"\u015c","&Scy;":"\u0421","&Sfr;":"\ud835\udd16","&ShortDownArrow;":"\u2193","&ShortLeftArrow;":"\u2190","&ShortRightArrow;":"\u2192","&ShortUpArrow;":"\u2191","&Sigma;":"\u03a3","&SmallCircle;":"\u2218","&Sopf;":"\ud835\udd4a","&Sqrt;":"\u221a","&Square;":"\u25a1","&SquareIntersection;":"\u2293","&SquareSubset;":"\u228f","&SquareSubsetEqual;":"\u2291","&SquareSuperset;":"\u2290","&SquareSupersetEqual;":"\u2292","&SquareUnion;":"\u2294","&Sscr;":"\ud835\udcae","&Star;":"\u22c6","&Sub;":"\u22d0","&Subset;":"\u22d0","&SubsetEqual;":"\u2286","&Succeeds;":"\u227b","&SucceedsEqual;":"\u2ab0","&SucceedsSlantEqual;":"\u227d","&SucceedsTilde;":"\u227f","&SuchThat;":"\u220b","&Sum;":"\u2211","&Sup;":"\u22d1","&Superset;":"\u2283","&SupersetEqual;":"\u2287","&Supset;":"\u22d1","&THORN":"\xde","&THORN;":"\xde","&TRADE;":"\u2122","&TSHcy;":"\u040b","&TScy;":"\u0426","&Tab;":"\t","&Tau;":"\u03a4","&Tcaron;":"\u0164","&Tcedil;":"\u0162","&Tcy;":"\u0422","&Tfr;":"\ud835\udd17","&Therefore;":"\u2234","&Theta;":"\u0398","&ThickSpace;":"\u205f\u200a","&ThinSpace;":"\u2009","&Tilde;":"\u223c","&TildeEqual;":"\u2243","&TildeFullEqual;":"\u2245","&TildeTilde;":"\u2248","&Topf;":"\ud835\udd4b","&TripleDot;":"\u20db","&Tscr;":"\ud835\udcaf","&Tstrok;":"\u0166","&Uacute":"\xda","&Uacute;":"\xda","&Uarr;":"\u219f","&Uarrocir;":"\u2949","&Ubrcy;":"\u040e","&Ubreve;":"\u016c","&Ucirc":"\xdb","&Ucirc;":"\xdb","&Ucy;":"\u0423","&Udblac;":"\u0170","&Ufr;":"\ud835\udd18","&Ugrave":"\xd9","&Ugrave;":"\xd9","&Umacr;":"\u016a","&UnderBar;":"_","&UnderBrace;":"\u23df","&UnderBracket;":"\u23b5","&UnderParenthesis;":"\u23dd","&Union;":"\u22c3","&UnionPlus;":"\u228e","&Uogon;":"\u0172","&Uopf;":"\ud835\udd4c","&UpArrow;":"\u2191","&UpArrowBar;":"\u2912","&UpArrowDownArrow;":"\u21c5","&UpDownArrow;":"\u2195","&UpEquilibrium;":"\u296e","&UpTee;":"\u22a5","&UpTeeArrow;":"\u21a5","&Uparrow;":"\u21d1","&Updownarrow;":"\u21d5","&UpperLeftArrow;":"\u2196","&UpperRightArrow;":"\u2197","&Upsi;":"\u03d2","&Upsilon;":"\u03a5","&Uring;":"\u016e","&Uscr;":"\ud835\udcb0","&Utilde;":"\u0168","&Uuml":"\xdc","&Uuml;":"\xdc","&VDash;":"\u22ab","&Vbar;":"\u2aeb","&Vcy;":"\u0412","&Vdash;":"\u22a9","&Vdashl;":"\u2ae6","&Vee;":"\u22c1","&Verbar;":"\u2016","&Vert;":"\u2016","&VerticalBar;":"\u2223","&VerticalLine;":"|","&VerticalSeparator;":"\u2758","&VerticalTilde;":"\u2240","&VeryThinSpace;":"\u200a","&Vfr;":"\ud835\udd19","&Vopf;":"\ud835\udd4d","&Vscr;":"\ud835\udcb1","&Vvdash;":"\u22aa","&Wcirc;":"\u0174","&Wedge;":"\u22c0","&Wfr;":"\ud835\udd1a","&Wopf;":"\ud835\udd4e","&Wscr;":"\ud835\udcb2","&Xfr;":"\ud835\udd1b","&Xi;":"\u039e","&Xopf;":"\ud835\udd4f","&Xscr;":"\ud835\udcb3","&YAcy;":"\u042f","&YIcy;":"\u0407","&YUcy;":"\u042e","&Yacute":"\xdd","&Yacute;":"\xdd","&Ycirc;":"\u0176","&Ycy;":"\u042b","&Yfr;":"\ud835\udd1c","&Yopf;":"\ud835\udd50","&Yscr;":"\ud835\udcb4","&Yuml;":"\u0178","&ZHcy;":"\u0416","&Zacute;":"\u0179","&Zcaron;":"\u017d","&Zcy;":"\u0417","&Zdot;":"\u017b","&ZeroWidthSpace;":"\u200b","&Zeta;":"\u0396","&Zfr;":"\u2128","&Zopf;":"\u2124","&Zscr;":"\ud835\udcb5","&aacute":"\xe1","&aacute;":"\xe1","&abreve;":"\u0103","&ac;":"\u223e","&acE;":"\u223e\u0333","&acd;":"\u223f","&acirc":"\xe2","&acirc;":"\xe2","&acute":"\xb4","&acute;":"\xb4","&acy;":"\u0430","&aelig":"\xe6","&aelig;":"\xe6","&af;":"\u2061","&afr;":"\ud835\udd1e","&agrave":"\xe0","&agrave;":"\xe0","&alefsym;":"\u2135","&aleph;":"\u2135","&alpha;":"\u03b1","&amacr;":"\u0101","&amalg;":"\u2a3f","&amp":"&","&amp;":"&","&and;":"\u2227","&andand;":"\u2a55","&andd;":"\u2a5c","&andslope;":"\u2a58","&andv;":"\u2a5a","&ang;":"\u2220","&ange;":"\u29a4","&angle;":"\u2220","&angmsd;":"\u2221","&angmsdaa;":"\u29a8","&angmsdab;":"\u29a9","&angmsdac;":"\u29aa","&angmsdad;":"\u29ab","&angmsdae;":"\u29ac","&angmsdaf;":"\u29ad","&angmsdag;":"\u29ae","&angmsdah;":"\u29af","&angrt;":"\u221f","&angrtvb;":"\u22be","&angrtvbd;":"\u299d","&angsph;":"\u2222","&angst;":"\xc5","&angzarr;":"\u237c","&aogon;":"\u0105","&aopf;":"\ud835\udd52","&ap;":"\u2248","&apE;":"\u2a70","&apacir;":"\u2a6f","&ape;":"\u224a","&apid;":"\u224b","&apos;":"'","&approx;":"\u2248","&approxeq;":"\u224a","&aring":"\xe5","&aring;":"\xe5","&ascr;":"\ud835\udcb6","&ast;":"*","&asymp;":"\u2248","&asympeq;":"\u224d","&atilde":"\xe3","&atilde;":"\xe3","&auml":"\xe4","&auml;":"\xe4","&awconint;":"\u2233","&awint;":"\u2a11","&bNot;":"\u2aed","&backcong;":"\u224c","&backepsilon;":"\u03f6","&backprime;":"\u2035","&backsim;":"\u223d","&backsimeq;":"\u22cd","&barvee;":"\u22bd","&barwed;":"\u2305","&barwedge;":"\u2305","&bbrk;":"\u23b5","&bbrktbrk;":"\u23b6","&bcong;":"\u224c","&bcy;":"\u0431","&bdquo;":"\u201e","&becaus;":"\u2235","&because;":"\u2235","&bemptyv;":"\u29b0","&bepsi;":"\u03f6","&bernou;":"\u212c","&beta;":"\u03b2","&beth;":"\u2136","&between;":"\u226c","&bfr;":"\ud835\udd1f","&bigcap;":"\u22c2","&bigcirc;":"\u25ef","&bigcup;":"\u22c3","&bigodot;":"\u2a00","&bigoplus;":"\u2a01","&bigotimes;":"\u2a02","&bigsqcup;":"\u2a06","&bigstar;":"\u2605","&bigtriangledown;":"\u25bd","&bigtriangleup;":"\u25b3","&biguplus;":"\u2a04","&bigvee;":"\u22c1","&bigwedge;":"\u22c0","&bkarow;":"\u290d","&blacklozenge;":"\u29eb","&blacksquare;":"\u25aa","&blacktriangle;":"\u25b4","&blacktriangledown;":"\u25be","&blacktriangleleft;":"\u25c2","&blacktriangleright;":"\u25b8","&blank;":"\u2423","&blk12;":"\u2592","&blk14;":"\u2591","&blk34;":"\u2593","&block;":"\u2588","&bne;":"=\u20e5","&bnequiv;":"\u2261\u20e5","&bnot;":"\u2310","&bopf;":"\ud835\udd53","&bot;":"\u22a5","&bottom;":"\u22a5","&bowtie;":"\u22c8","&boxDL;":"\u2557","&boxDR;":"\u2554","&boxDl;":"\u2556","&boxDr;":"\u2553","&boxH;":"\u2550","&boxHD;":"\u2566","&boxHU;":"\u2569","&boxHd;":"\u2564","&boxHu;":"\u2567","&boxUL;":"\u255d","&boxUR;":"\u255a","&boxUl;":"\u255c","&boxUr;":"\u2559","&boxV;":"\u2551","&boxVH;":"\u256c","&boxVL;":"\u2563","&boxVR;":"\u2560","&boxVh;":"\u256b","&boxVl;":"\u2562","&boxVr;":"\u255f","&boxbox;":"\u29c9","&boxdL;":"\u2555","&boxdR;":"\u2552","&boxdl;":"\u2510","&boxdr;":"\u250c","&boxh;":"\u2500","&boxhD;":"\u2565","&boxhU;":"\u2568","&boxhd;":"\u252c","&boxhu;":"\u2534","&boxminus;":"\u229f","&boxplus;":"\u229e","&boxtimes;":"\u22a0","&boxuL;":"\u255b","&boxuR;":"\u2558","&boxul;":"\u2518","&boxur;":"\u2514","&boxv;":"\u2502","&boxvH;":"\u256a","&boxvL;":"\u2561","&boxvR;":"\u255e","&boxvh;":"\u253c","&boxvl;":"\u2524","&boxvr;":"\u251c","&bprime;":"\u2035","&breve;":"\u02d8","&brvbar":"\xa6","&brvbar;":"\xa6","&bscr;":"\ud835\udcb7","&bsemi;":"\u204f","&bsim;":"\u223d","&bsime;":"\u22cd","&bsol;":"\\","&bsolb;":"\u29c5","&bsolhsub;":"\u27c8","&bull;":"\u2022","&bullet;":"\u2022","&bump;":"\u224e","&bumpE;":"\u2aae","&bumpe;":"\u224f","&bumpeq;":"\u224f","&cacute;":"\u0107","&cap;":"\u2229","&capand;":"\u2a44","&capbrcup;":"\u2a49","&capcap;":"\u2a4b","&capcup;":"\u2a47","&capdot;":"\u2a40","&caps;":"\u2229\ufe00","&caret;":"\u2041","&caron;":"\u02c7","&ccaps;":"\u2a4d","&ccaron;":"\u010d","&ccedil":"\xe7","&ccedil;":"\xe7","&ccirc;":"\u0109","&ccups;":"\u2a4c","&ccupssm;":"\u2a50","&cdot;":"\u010b","&cedil":"\xb8","&cedil;":"\xb8","&cemptyv;":"\u29b2","&cent":"\xa2","&cent;":"\xa2","&centerdot;":"\xb7","&cfr;":"\ud835\udd20","&chcy;":"\u0447","&check;":"\u2713","&checkmark;":"\u2713","&chi;":"\u03c7","&cir;":"\u25cb","&cirE;":"\u29c3","&circ;":"\u02c6","&circeq;":"\u2257","&circlearrowleft;":"\u21ba","&circlearrowright;":"\u21bb","&circledR;":"\xae","&circledS;":"\u24c8","&circledast;":"\u229b","&circledcirc;":"\u229a","&circleddash;":"\u229d","&cire;":"\u2257","&cirfnint;":"\u2a10","&cirmid;":"\u2aef","&cirscir;":"\u29c2","&clubs;":"\u2663","&clubsuit;":"\u2663","&colon;":":","&colone;":"\u2254","&coloneq;":"\u2254","&comma;":",","&commat;":"@","&comp;":"\u2201","&compfn;":"\u2218","&complement;":"\u2201","&complexes;":"\u2102","&cong;":"\u2245","&congdot;":"\u2a6d","&conint;":"\u222e","&copf;":"\ud835\udd54","&coprod;":"\u2210","&copy":"\xa9","&copy;":"\xa9","&copysr;":"\u2117","&crarr;":"\u21b5","&cross;":"\u2717","&cscr;":"\ud835\udcb8","&csub;":"\u2acf","&csube;":"\u2ad1","&csup;":"\u2ad0","&csupe;":"\u2ad2","&ctdot;":"\u22ef","&cudarrl;":"\u2938","&cudarrr;":"\u2935","&cuepr;":"\u22de","&cuesc;":"\u22df","&cularr;":"\u21b6","&cularrp;":"\u293d","&cup;":"\u222a","&cupbrcap;":"\u2a48","&cupcap;":"\u2a46","&cupcup;":"\u2a4a","&cupdot;":"\u228d","&cupor;":"\u2a45","&cups;":"\u222a\ufe00","&curarr;":"\u21b7","&curarrm;":"\u293c","&curlyeqprec;":"\u22de","&curlyeqsucc;":"\u22df","&curlyvee;":"\u22ce","&curlywedge;":"\u22cf","&curren":"\xa4","&curren;":"\xa4","&curvearrowleft;":"\u21b6","&curvearrowright;":"\u21b7","&cuvee;":"\u22ce","&cuwed;":"\u22cf","&cwconint;":"\u2232","&cwint;":"\u2231","&cylcty;":"\u232d","&dArr;":"\u21d3","&dHar;":"\u2965","&dagger;":"\u2020","&daleth;":"\u2138","&darr;":"\u2193","&dash;":"\u2010","&dashv;":"\u22a3","&dbkarow;":"\u290f","&dblac;":"\u02dd","&dcaron;":"\u010f","&dcy;":"\u0434","&dd;":"\u2146","&ddagger;":"\u2021","&ddarr;":"\u21ca","&ddotseq;":"\u2a77","&deg":"\xb0","&deg;":"\xb0","&delta;":"\u03b4","&demptyv;":"\u29b1","&dfisht;":"\u297f","&dfr;":"\ud835\udd21","&dharl;":"\u21c3","&dharr;":"\u21c2","&diam;":"\u22c4","&diamond;":"\u22c4","&diamondsuit;":"\u2666","&diams;":"\u2666","&die;":"\xa8","&digamma;":"\u03dd","&disin;":"\u22f2","&div;":"\xf7","&divide":"\xf7","&divide;":"\xf7","&divideontimes;":"\u22c7","&divonx;":"\u22c7","&djcy;":"\u0452","&dlcorn;":"\u231e","&dlcrop;":"\u230d","&dollar;":"$","&dopf;":"\ud835\udd55","&dot;":"\u02d9","&doteq;":"\u2250","&doteqdot;":"\u2251","&dotminus;":"\u2238","&dotplus;":"\u2214","&dotsquare;":"\u22a1","&doublebarwedge;":"\u2306","&downarrow;":"\u2193","&downdownarrows;":"\u21ca","&downharpoonleft;":"\u21c3","&downharpoonright;":"\u21c2","&drbkarow;":"\u2910","&drcorn;":"\u231f","&drcrop;":"\u230c","&dscr;":"\ud835\udcb9","&dscy;":"\u0455","&dsol;":"\u29f6","&dstrok;":"\u0111","&dtdot;":"\u22f1","&dtri;":"\u25bf","&dtrif;":"\u25be","&duarr;":"\u21f5","&duhar;":"\u296f","&dwangle;":"\u29a6","&dzcy;":"\u045f","&dzigrarr;":"\u27ff","&eDDot;":"\u2a77","&eDot;":"\u2251","&eacute":"\xe9","&eacute;":"\xe9","&easter;":"\u2a6e","&ecaron;":"\u011b","&ecir;":"\u2256","&ecirc":"\xea","&ecirc;":"\xea","&ecolon;":"\u2255","&ecy;":"\u044d","&edot;":"\u0117","&ee;":"\u2147","&efDot;":"\u2252","&efr;":"\ud835\udd22","&eg;":"\u2a9a","&egrave":"\xe8","&egrave;":"\xe8","&egs;":"\u2a96","&egsdot;":"\u2a98","&el;":"\u2a99","&elinters;":"\u23e7","&ell;":"\u2113","&els;":"\u2a95","&elsdot;":"\u2a97","&emacr;":"\u0113","&empty;":"\u2205","&emptyset;":"\u2205","&emptyv;":"\u2205","&emsp13;":"\u2004","&emsp14;":"\u2005","&emsp;":"\u2003","&eng;":"\u014b","&ensp;":"\u2002","&eogon;":"\u0119","&eopf;":"\ud835\udd56","&epar;":"\u22d5","&eparsl;":"\u29e3","&eplus;":"\u2a71","&epsi;":"\u03b5","&epsilon;":"\u03b5","&epsiv;":"\u03f5","&eqcirc;":"\u2256","&eqcolon;":"\u2255","&eqsim;":"\u2242","&eqslantgtr;":"\u2a96","&eqslantless;":"\u2a95","&equals;":"=","&equest;":"\u225f","&equiv;":"\u2261","&equivDD;":"\u2a78","&eqvparsl;":"\u29e5","&erDot;":"\u2253","&erarr;":"\u2971","&escr;":"\u212f","&esdot;":"\u2250","&esim;":"\u2242","&eta;":"\u03b7","&eth":"\xf0","&eth;":"\xf0","&euml":"\xeb","&euml;":"\xeb","&euro;":"\u20ac","&excl;":"!","&exist;":"\u2203","&expectation;":"\u2130","&exponentiale;":"\u2147","&fallingdotseq;":"\u2252","&fcy;":"\u0444","&female;":"\u2640","&ffilig;":"\ufb03","&fflig;":"\ufb00","&ffllig;":"\ufb04","&ffr;":"\ud835\udd23","&filig;":"\ufb01","&fjlig;":"fj","&flat;":"\u266d","&fllig;":"\ufb02","&fltns;":"\u25b1","&fnof;":"\u0192","&fopf;":"\ud835\udd57","&forall;":"\u2200","&fork;":"\u22d4","&forkv;":"\u2ad9","&fpartint;":"\u2a0d","&frac12":"\xbd","&frac12;":"\xbd","&frac13;":"\u2153","&frac14":"\xbc","&frac14;":"\xbc","&frac15;":"\u2155","&frac16;":"\u2159","&frac18;":"\u215b","&frac23;":"\u2154","&frac25;":"\u2156","&frac34":"\xbe","&frac34;":"\xbe","&frac35;":"\u2157","&frac38;":"\u215c","&frac45;":"\u2158","&frac56;":"\u215a","&frac58;":"\u215d","&frac78;":"\u215e","&frasl;":"\u2044","&frown;":"\u2322","&fscr;":"\ud835\udcbb","&gE;":"\u2267","&gEl;":"\u2a8c","&gacute;":"\u01f5","&gamma;":"\u03b3","&gammad;":"\u03dd","&gap;":"\u2a86","&gbreve;":"\u011f","&gcirc;":"\u011d","&gcy;":"\u0433","&gdot;":"\u0121","&ge;":"\u2265","&gel;":"\u22db","&geq;":"\u2265","&geqq;":"\u2267","&geqslant;":"\u2a7e","&ges;":"\u2a7e","&gescc;":"\u2aa9","&gesdot;":"\u2a80","&gesdoto;":"\u2a82","&gesdotol;":"\u2a84","&gesl;":"\u22db\ufe00","&gesles;":"\u2a94","&gfr;":"\ud835\udd24","&gg;":"\u226b","&ggg;":"\u22d9","&gimel;":"\u2137","&gjcy;":"\u0453","&gl;":"\u2277","&glE;":"\u2a92","&gla;":"\u2aa5","&glj;":"\u2aa4","&gnE;":"\u2269","&gnap;":"\u2a8a","&gnapprox;":"\u2a8a","&gne;":"\u2a88","&gneq;":"\u2a88","&gneqq;":"\u2269","&gnsim;":"\u22e7","&gopf;":"\ud835\udd58","&grave;":"`","&gscr;":"\u210a","&gsim;":"\u2273","&gsime;":"\u2a8e","&gsiml;":"\u2a90","&gt":">","&gt;":">","&gtcc;":"\u2aa7","&gtcir;":"\u2a7a","&gtdot;":"\u22d7","&gtlPar;":"\u2995","&gtquest;":"\u2a7c","&gtrapprox;":"\u2a86","&gtrarr;":"\u2978","&gtrdot;":"\u22d7","&gtreqless;":"\u22db","&gtreqqless;":"\u2a8c","&gtrless;":"\u2277","&gtrsim;":"\u2273","&gvertneqq;":"\u2269\ufe00","&gvnE;":"\u2269\ufe00","&hArr;":"\u21d4","&hairsp;":"\u200a","&half;":"\xbd","&hamilt;":"\u210b","&hardcy;":"\u044a","&harr;":"\u2194","&harrcir;":"\u2948","&harrw;":"\u21ad","&hbar;":"\u210f","&hcirc;":"\u0125","&hearts;":"\u2665","&heartsuit;":"\u2665","&hellip;":"\u2026","&hercon;":"\u22b9","&hfr;":"\ud835\udd25","&hksearow;":"\u2925","&hkswarow;":"\u2926","&hoarr;":"\u21ff","&homtht;":"\u223b","&hookleftarrow;":"\u21a9","&hookrightarrow;":"\u21aa","&hopf;":"\ud835\udd59","&horbar;":"\u2015","&hscr;":"\ud835\udcbd","&hslash;":"\u210f","&hstrok;":"\u0127","&hybull;":"\u2043","&hyphen;":"\u2010","&iacute":"\xed","&iacute;":"\xed","&ic;":"\u2063","&icirc":"\xee","&icirc;":"\xee","&icy;":"\u0438","&iecy;":"\u0435","&iexcl":"\xa1","&iexcl;":"\xa1","&iff;":"\u21d4","&ifr;":"\ud835\udd26","&igrave":"\xec","&igrave;":"\xec","&ii;":"\u2148","&iiiint;":"\u2a0c","&iiint;":"\u222d","&iinfin;":"\u29dc","&iiota;":"\u2129","&ijlig;":"\u0133","&imacr;":"\u012b","&image;":"\u2111","&imagline;":"\u2110","&imagpart;":"\u2111","&imath;":"\u0131","&imof;":"\u22b7","&imped;":"\u01b5","&in;":"\u2208","&incare;":"\u2105","&infin;":"\u221e","&infintie;":"\u29dd","&inodot;":"\u0131","&int;":"\u222b","&intcal;":"\u22ba","&integers;":"\u2124","&intercal;":"\u22ba","&intlarhk;":"\u2a17","&intprod;":"\u2a3c","&iocy;":"\u0451","&iogon;":"\u012f","&iopf;":"\ud835\udd5a","&iota;":"\u03b9","&iprod;":"\u2a3c","&iquest":"\xbf","&iquest;":"\xbf","&iscr;":"\ud835\udcbe","&isin;":"\u2208","&isinE;":"\u22f9","&isindot;":"\u22f5","&isins;":"\u22f4","&isinsv;":"\u22f3","&isinv;":"\u2208","&it;":"\u2062","&itilde;":"\u0129","&iukcy;":"\u0456","&iuml":"\xef","&iuml;":"\xef","&jcirc;":"\u0135","&jcy;":"\u0439","&jfr;":"\ud835\udd27","&jmath;":"\u0237","&jopf;":"\ud835\udd5b","&jscr;":"\ud835\udcbf","&jsercy;":"\u0458","&jukcy;":"\u0454","&kappa;":"\u03ba","&kappav;":"\u03f0","&kcedil;":"\u0137","&kcy;":"\u043a","&kfr;":"\ud835\udd28","&kgreen;":"\u0138","&khcy;":"\u0445","&kjcy;":"\u045c","&kopf;":"\ud835\udd5c","&kscr;":"\ud835\udcc0","&lAarr;":"\u21da","&lArr;":"\u21d0","&lAtail;":"\u291b","&lBarr;":"\u290e","&lE;":"\u2266","&lEg;":"\u2a8b","&lHar;":"\u2962","&lacute;":"\u013a","&laemptyv;":"\u29b4","&lagran;":"\u2112","&lambda;":"\u03bb","&lang;":"\u27e8","&langd;":"\u2991","&langle;":"\u27e8","&lap;":"\u2a85","&laquo":"\xab","&laquo;":"\xab","&larr;":"\u2190","&larrb;":"\u21e4","&larrbfs;":"\u291f","&larrfs;":"\u291d","&larrhk;":"\u21a9","&larrlp;":"\u21ab","&larrpl;":"\u2939","&larrsim;":"\u2973","&larrtl;":"\u21a2","&lat;":"\u2aab","&latail;":"\u2919","&late;":"\u2aad","&lates;":"\u2aad\ufe00","&lbarr;":"\u290c","&lbbrk;":"\u2772","&lbrace;":"{","&lbrack;":"[","&lbrke;":"\u298b","&lbrksld;":"\u298f","&lbrkslu;":"\u298d","&lcaron;":"\u013e","&lcedil;":"\u013c","&lceil;":"\u2308","&lcub;":"{","&lcy;":"\u043b","&ldca;":"\u2936","&ldquo;":"\u201c","&ldquor;":"\u201e","&ldrdhar;":"\u2967","&ldrushar;":"\u294b","&ldsh;":"\u21b2","&le;":"\u2264","&leftarrow;":"\u2190","&leftarrowtail;":"\u21a2","&leftharpoondown;":"\u21bd","&leftharpoonup;":"\u21bc","&leftleftarrows;":"\u21c7","&leftrightarrow;":"\u2194","&leftrightarrows;":"\u21c6","&leftrightharpoons;":"\u21cb","&leftrightsquigarrow;":"\u21ad","&leftthreetimes;":"\u22cb","&leg;":"\u22da","&leq;":"\u2264","&leqq;":"\u2266","&leqslant;":"\u2a7d","&les;":"\u2a7d","&lescc;":"\u2aa8","&lesdot;":"\u2a7f","&lesdoto;":"\u2a81","&lesdotor;":"\u2a83","&lesg;":"\u22da\ufe00","&lesges;":"\u2a93","&lessapprox;":"\u2a85","&lessdot;":"\u22d6","&lesseqgtr;":"\u22da","&lesseqqgtr;":"\u2a8b","&lessgtr;":"\u2276","&lesssim;":"\u2272","&lfisht;":"\u297c","&lfloor;":"\u230a","&lfr;":"\ud835\udd29","&lg;":"\u2276","&lgE;":"\u2a91","&lhard;":"\u21bd","&lharu;":"\u21bc","&lharul;":"\u296a","&lhblk;":"\u2584","&ljcy;":"\u0459","&ll;":"\u226a","&llarr;":"\u21c7","&llcorner;":"\u231e","&llhard;":"\u296b","&lltri;":"\u25fa","&lmidot;":"\u0140","&lmoust;":"\u23b0","&lmoustache;":"\u23b0","&lnE;":"\u2268","&lnap;":"\u2a89","&lnapprox;":"\u2a89","&lne;":"\u2a87","&lneq;":"\u2a87","&lneqq;":"\u2268","&lnsim;":"\u22e6","&loang;":"\u27ec","&loarr;":"\u21fd","&lobrk;":"\u27e6","&longleftarrow;":"\u27f5","&longleftrightarrow;":"\u27f7","&longmapsto;":"\u27fc","&longrightarrow;":"\u27f6","&looparrowleft;":"\u21ab","&looparrowright;":"\u21ac","&lopar;":"\u2985","&lopf;":"\ud835\udd5d","&loplus;":"\u2a2d","&lotimes;":"\u2a34","&lowast;":"\u2217","&lowbar;":"_","&loz;":"\u25ca","&lozenge;":"\u25ca","&lozf;":"\u29eb","&lpar;":"(","&lparlt;":"\u2993","&lrarr;":"\u21c6","&lrcorner;":"\u231f","&lrhar;":"\u21cb","&lrhard;":"\u296d","&lrm;":"\u200e","&lrtri;":"\u22bf","&lsaquo;":"\u2039","&lscr;":"\ud835\udcc1","&lsh;":"\u21b0","&lsim;":"\u2272","&lsime;":"\u2a8d","&lsimg;":"\u2a8f","&lsqb;":"[","&lsquo;":"\u2018","&lsquor;":"\u201a","&lstrok;":"\u0142","&lt":"<","&lt;":"<","&ltcc;":"\u2aa6","&ltcir;":"\u2a79","&ltdot;":"\u22d6","&lthree;":"\u22cb","&ltimes;":"\u22c9","&ltlarr;":"\u2976","&ltquest;":"\u2a7b","&ltrPar;":"\u2996","&ltri;":"\u25c3","&ltrie;":"\u22b4","&ltrif;":"\u25c2","&lurdshar;":"\u294a","&luruhar;":"\u2966","&lvertneqq;":"\u2268\ufe00","&lvnE;":"\u2268\ufe00","&mDDot;":"\u223a","&macr":"\xaf","&macr;":"\xaf","&male;":"\u2642","&malt;":"\u2720","&maltese;":"\u2720","&map;":"\u21a6","&mapsto;":"\u21a6","&mapstodown;":"\u21a7","&mapstoleft;":"\u21a4","&mapstoup;":"\u21a5","&marker;":"\u25ae","&mcomma;":"\u2a29","&mcy;":"\u043c","&mdash;":"\u2014","&measuredangle;":"\u2221","&mfr;":"\ud835\udd2a","&mho;":"\u2127","&micro":"\xb5","&micro;":"\xb5","&mid;":"\u2223","&midast;":"*","&midcir;":"\u2af0","&middot":"\xb7","&middot;":"\xb7","&minus;":"\u2212","&minusb;":"\u229f","&minusd;":"\u2238","&minusdu;":"\u2a2a","&mlcp;":"\u2adb","&mldr;":"\u2026","&mnplus;":"\u2213","&models;":"\u22a7","&mopf;":"\ud835\udd5e","&mp;":"\u2213","&mscr;":"\ud835\udcc2","&mstpos;":"\u223e","&mu;":"\u03bc","&multimap;":"\u22b8","&mumap;":"\u22b8","&nGg;":"\u22d9\u0338","&nGt;":"\u226b\u20d2","&nGtv;":"\u226b\u0338","&nLeftarrow;":"\u21cd","&nLeftrightarrow;":"\u21ce","&nLl;":"\u22d8\u0338","&nLt;":"\u226a\u20d2","&nLtv;":"\u226a\u0338","&nRightarrow;":"\u21cf","&nVDash;":"\u22af","&nVdash;":"\u22ae","&nabla;":"\u2207","&nacute;":"\u0144","&nang;":"\u2220\u20d2","&nap;":"\u2249","&napE;":"\u2a70\u0338","&napid;":"\u224b\u0338","&napos;":"\u0149","&napprox;":"\u2249","&natur;":"\u266e","&natural;":"\u266e","&naturals;":"\u2115","&nbsp":"\xa0","&nbsp;":"\xa0","&nbump;":"\u224e\u0338","&nbumpe;":"\u224f\u0338","&ncap;":"\u2a43","&ncaron;":"\u0148","&ncedil;":"\u0146","&ncong;":"\u2247","&ncongdot;":"\u2a6d\u0338","&ncup;":"\u2a42","&ncy;":"\u043d","&ndash;":"\u2013","&ne;":"\u2260","&neArr;":"\u21d7","&nearhk;":"\u2924","&nearr;":"\u2197","&nearrow;":"\u2197","&nedot;":"\u2250\u0338","&nequiv;":"\u2262","&nesear;":"\u2928","&nesim;":"\u2242\u0338","&nexist;":"\u2204","&nexists;":"\u2204","&nfr;":"\ud835\udd2b","&ngE;":"\u2267\u0338","&nge;":"\u2271","&ngeq;":"\u2271","&ngeqq;":"\u2267\u0338","&ngeqslant;":"\u2a7e\u0338","&nges;":"\u2a7e\u0338","&ngsim;":"\u2275","&ngt;":"\u226f","&ngtr;":"\u226f","&nhArr;":"\u21ce","&nharr;":"\u21ae","&nhpar;":"\u2af2","&ni;":"\u220b","&nis;":"\u22fc","&nisd;":"\u22fa","&niv;":"\u220b","&njcy;":"\u045a","&nlArr;":"\u21cd","&nlE;":"\u2266\u0338","&nlarr;":"\u219a","&nldr;":"\u2025","&nle;":"\u2270","&nleftarrow;":"\u219a","&nleftrightarrow;":"\u21ae","&nleq;":"\u2270","&nleqq;":"\u2266\u0338","&nleqslant;":"\u2a7d\u0338","&nles;":"\u2a7d\u0338","&nless;":"\u226e","&nlsim;":"\u2274","&nlt;":"\u226e","&nltri;":"\u22ea","&nltrie;":"\u22ec","&nmid;":"\u2224","&nopf;":"\ud835\udd5f","&not":"\xac","&not;":"\xac","&notin;":"\u2209","&notinE;":"\u22f9\u0338","&notindot;":"\u22f5\u0338","&notinva;":"\u2209","&notinvb;":"\u22f7","&notinvc;":"\u22f6","&notni;":"\u220c","&notniva;":"\u220c","&notnivb;":"\u22fe","&notnivc;":"\u22fd","&npar;":"\u2226","&nparallel;":"\u2226","&nparsl;":"\u2afd\u20e5","&npart;":"\u2202\u0338","&npolint;":"\u2a14","&npr;":"\u2280","&nprcue;":"\u22e0","&npre;":"\u2aaf\u0338","&nprec;":"\u2280","&npreceq;":"\u2aaf\u0338","&nrArr;":"\u21cf","&nrarr;":"\u219b","&nrarrc;":"\u2933\u0338","&nrarrw;":"\u219d\u0338","&nrightarrow;":"\u219b","&nrtri;":"\u22eb","&nrtrie;":"\u22ed","&nsc;":"\u2281","&nsccue;":"\u22e1","&nsce;":"\u2ab0\u0338","&nscr;":"\ud835\udcc3","&nshortmid;":"\u2224","&nshortparallel;":"\u2226","&nsim;":"\u2241","&nsime;":"\u2244","&nsimeq;":"\u2244","&nsmid;":"\u2224","&nspar;":"\u2226","&nsqsube;":"\u22e2","&nsqsupe;":"\u22e3","&nsub;":"\u2284","&nsubE;":"\u2ac5\u0338","&nsube;":"\u2288","&nsubset;":"\u2282\u20d2","&nsubseteq;":"\u2288","&nsubseteqq;":"\u2ac5\u0338","&nsucc;":"\u2281","&nsucceq;":"\u2ab0\u0338","&nsup;":"\u2285","&nsupE;":"\u2ac6\u0338","&nsupe;":"\u2289","&nsupset;":"\u2283\u20d2","&nsupseteq;":"\u2289","&nsupseteqq;":"\u2ac6\u0338","&ntgl;":"\u2279","&ntilde":"\xf1","&ntilde;":"\xf1","&ntlg;":"\u2278","&ntriangleleft;":"\u22ea","&ntrianglelefteq;":"\u22ec","&ntriangleright;":"\u22eb","&ntrianglerighteq;":"\u22ed","&nu;":"\u03bd","&num;":"#","&numero;":"\u2116","&numsp;":"\u2007","&nvDash;":"\u22ad","&nvHarr;":"\u2904","&nvap;":"\u224d\u20d2","&nvdash;":"\u22ac","&nvge;":"\u2265\u20d2","&nvgt;":">\u20d2","&nvinfin;":"\u29de","&nvlArr;":"\u2902","&nvle;":"\u2264\u20d2","&nvlt;":"<\u20d2","&nvltrie;":"\u22b4\u20d2","&nvrArr;":"\u2903","&nvrtrie;":"\u22b5\u20d2","&nvsim;":"\u223c\u20d2","&nwArr;":"\u21d6","&nwarhk;":"\u2923","&nwarr;":"\u2196","&nwarrow;":"\u2196","&nwnear;":"\u2927","&oS;":"\u24c8","&oacute":"\xf3","&oacute;":"\xf3","&oast;":"\u229b","&ocir;":"\u229a","&ocirc":"\xf4","&ocirc;":"\xf4","&ocy;":"\u043e","&odash;":"\u229d","&odblac;":"\u0151","&odiv;":"\u2a38","&odot;":"\u2299","&odsold;":"\u29bc","&oelig;":"\u0153","&ofcir;":"\u29bf","&ofr;":"\ud835\udd2c","&ogon;":"\u02db","&ograve":"\xf2","&ograve;":"\xf2","&ogt;":"\u29c1","&ohbar;":"\u29b5","&ohm;":"\u03a9","&oint;":"\u222e","&olarr;":"\u21ba","&olcir;":"\u29be","&olcross;":"\u29bb","&oline;":"\u203e","&olt;":"\u29c0","&omacr;":"\u014d","&omega;":"\u03c9","&omicron;":"\u03bf","&omid;":"\u29b6","&ominus;":"\u2296","&oopf;":"\ud835\udd60","&opar;":"\u29b7","&operp;":"\u29b9","&oplus;":"\u2295","&or;":"\u2228","&orarr;":"\u21bb","&ord;":"\u2a5d","&order;":"\u2134","&orderof;":"\u2134","&ordf":"\xaa","&ordf;":"\xaa","&ordm":"\xba","&ordm;":"\xba","&origof;":"\u22b6","&oror;":"\u2a56","&orslope;":"\u2a57","&orv;":"\u2a5b","&oscr;":"\u2134","&oslash":"\xf8","&oslash;":"\xf8","&osol;":"\u2298","&otilde":"\xf5","&otilde;":"\xf5","&otimes;":"\u2297","&otimesas;":"\u2a36","&ouml":"\xf6","&ouml;":"\xf6","&ovbar;":"\u233d","&par;":"\u2225","&para":"\xb6","&para;":"\xb6","&parallel;":"\u2225","&parsim;":"\u2af3","&parsl;":"\u2afd","&part;":"\u2202","&pcy;":"\u043f","&percnt;":"%","&period;":".","&permil;":"\u2030","&perp;":"\u22a5","&pertenk;":"\u2031","&pfr;":"\ud835\udd2d","&phi;":"\u03c6","&phiv;":"\u03d5","&phmmat;":"\u2133","&phone;":"\u260e","&pi;":"\u03c0","&pitchfork;":"\u22d4","&piv;":"\u03d6","&planck;":"\u210f","&planckh;":"\u210e","&plankv;":"\u210f","&plus;":"+","&plusacir;":"\u2a23","&plusb;":"\u229e","&pluscir;":"\u2a22","&plusdo;":"\u2214","&plusdu;":"\u2a25","&pluse;":"\u2a72","&plusmn":"\xb1","&plusmn;":"\xb1","&plussim;":"\u2a26","&plustwo;":"\u2a27","&pm;":"\xb1","&pointint;":"\u2a15","&popf;":"\ud835\udd61","&pound":"\xa3","&pound;":"\xa3","&pr;":"\u227a","&prE;":"\u2ab3","&prap;":"\u2ab7","&prcue;":"\u227c","&pre;":"\u2aaf","&prec;":"\u227a","&precapprox;":"\u2ab7","&preccurlyeq;":"\u227c","&preceq;":"\u2aaf","&precnapprox;":"\u2ab9","&precneqq;":"\u2ab5","&precnsim;":"\u22e8","&precsim;":"\u227e","&prime;":"\u2032","&primes;":"\u2119","&prnE;":"\u2ab5","&prnap;":"\u2ab9","&prnsim;":"\u22e8","&prod;":"\u220f","&profalar;":"\u232e","&profline;":"\u2312","&profsurf;":"\u2313","&prop;":"\u221d","&propto;":"\u221d","&prsim;":"\u227e","&prurel;":"\u22b0","&pscr;":"\ud835\udcc5","&psi;":"\u03c8","&puncsp;":"\u2008","&qfr;":"\ud835\udd2e","&qint;":"\u2a0c","&qopf;":"\ud835\udd62","&qprime;":"\u2057","&qscr;":"\ud835\udcc6","&quaternions;":"\u210d","&quatint;":"\u2a16","&quest;":"?","&questeq;":"\u225f","&quot":'"',"&quot;":'"',"&rAarr;":"\u21db","&rArr;":"\u21d2","&rAtail;":"\u291c","&rBarr;":"\u290f","&rHar;":"\u2964","&race;":"\u223d\u0331","&racute;":"\u0155","&radic;":"\u221a","&raemptyv;":"\u29b3","&rang;":"\u27e9","&rangd;":"\u2992","&range;":"\u29a5","&rangle;":"\u27e9","&raquo":"\xbb","&raquo;":"\xbb","&rarr;":"\u2192","&rarrap;":"\u2975","&rarrb;":"\u21e5","&rarrbfs;":"\u2920","&rarrc;":"\u2933","&rarrfs;":"\u291e","&rarrhk;":"\u21aa","&rarrlp;":"\u21ac","&rarrpl;":"\u2945","&rarrsim;":"\u2974","&rarrtl;":"\u21a3","&rarrw;":"\u219d","&ratail;":"\u291a","&ratio;":"\u2236","&rationals;":"\u211a","&rbarr;":"\u290d","&rbbrk;":"\u2773","&rbrace;":"}","&rbrack;":"]","&rbrke;":"\u298c","&rbrksld;":"\u298e","&rbrkslu;":"\u2990","&rcaron;":"\u0159","&rcedil;":"\u0157","&rceil;":"\u2309","&rcub;":"}","&rcy;":"\u0440","&rdca;":"\u2937","&rdldhar;":"\u2969","&rdquo;":"\u201d","&rdquor;":"\u201d","&rdsh;":"\u21b3","&real;":"\u211c","&realine;":"\u211b","&realpart;":"\u211c","&reals;":"\u211d","&rect;":"\u25ad","&reg":"\xae","&reg;":"\xae","&rfisht;":"\u297d","&rfloor;":"\u230b","&rfr;":"\ud835\udd2f","&rhard;":"\u21c1","&rharu;":"\u21c0","&rharul;":"\u296c","&rho;":"\u03c1","&rhov;":"\u03f1","&rightarrow;":"\u2192","&rightarrowtail;":"\u21a3","&rightharpoondown;":"\u21c1","&rightharpoonup;":"\u21c0","&rightleftarrows;":"\u21c4","&rightleftharpoons;":"\u21cc","&rightrightarrows;":"\u21c9","&rightsquigarrow;":"\u219d","&rightthreetimes;":"\u22cc","&ring;":"\u02da","&risingdotseq;":"\u2253","&rlarr;":"\u21c4","&rlhar;":"\u21cc","&rlm;":"\u200f","&rmoust;":"\u23b1","&rmoustache;":"\u23b1","&rnmid;":"\u2aee","&roang;":"\u27ed","&roarr;":"\u21fe","&robrk;":"\u27e7","&ropar;":"\u2986","&ropf;":"\ud835\udd63","&roplus;":"\u2a2e","&rotimes;":"\u2a35","&rpar;":")","&rpargt;":"\u2994","&rppolint;":"\u2a12","&rrarr;":"\u21c9","&rsaquo;":"\u203a","&rscr;":"\ud835\udcc7","&rsh;":"\u21b1","&rsqb;":"]","&rsquo;":"\u2019","&rsquor;":"\u2019","&rthree;":"\u22cc","&rtimes;":"\u22ca","&rtri;":"\u25b9","&rtrie;":"\u22b5","&rtrif;":"\u25b8","&rtriltri;":"\u29ce","&ruluhar;":"\u2968","&rx;":"\u211e","&sacute;":"\u015b","&sbquo;":"\u201a","&sc;":"\u227b","&scE;":"\u2ab4","&scap;":"\u2ab8","&scaron;":"\u0161","&sccue;":"\u227d","&sce;":"\u2ab0","&scedil;":"\u015f","&scirc;":"\u015d","&scnE;":"\u2ab6","&scnap;":"\u2aba","&scnsim;":"\u22e9","&scpolint;":"\u2a13","&scsim;":"\u227f","&scy;":"\u0441","&sdot;":"\u22c5","&sdotb;":"\u22a1","&sdote;":"\u2a66","&seArr;":"\u21d8","&searhk;":"\u2925","&searr;":"\u2198","&searrow;":"\u2198","&sect":"\xa7","&sect;":"\xa7","&semi;":";","&seswar;":"\u2929","&setminus;":"\u2216","&setmn;":"\u2216","&sext;":"\u2736","&sfr;":"\ud835\udd30","&sfrown;":"\u2322","&sharp;":"\u266f","&shchcy;":"\u0449","&shcy;":"\u0448","&shortmid;":"\u2223","&shortparallel;":"\u2225","&shy":"\xad","&shy;":"\xad","&sigma;":"\u03c3","&sigmaf;":"\u03c2","&sigmav;":"\u03c2","&sim;":"\u223c","&simdot;":"\u2a6a","&sime;":"\u2243","&simeq;":"\u2243","&simg;":"\u2a9e","&simgE;":"\u2aa0","&siml;":"\u2a9d","&simlE;":"\u2a9f","&simne;":"\u2246","&simplus;":"\u2a24","&simrarr;":"\u2972","&slarr;":"\u2190","&smallsetminus;":"\u2216","&smashp;":"\u2a33","&smeparsl;":"\u29e4","&smid;":"\u2223","&smile;":"\u2323","&smt;":"\u2aaa","&smte;":"\u2aac","&smtes;":"\u2aac\ufe00","&softcy;":"\u044c","&sol;":"/","&solb;":"\u29c4","&solbar;":"\u233f","&sopf;":"\ud835\udd64","&spades;":"\u2660","&spadesuit;":"\u2660","&spar;":"\u2225","&sqcap;":"\u2293","&sqcaps;":"\u2293\ufe00","&sqcup;":"\u2294","&sqcups;":"\u2294\ufe00","&sqsub;":"\u228f","&sqsube;":"\u2291","&sqsubset;":"\u228f","&sqsubseteq;":"\u2291","&sqsup;":"\u2290","&sqsupe;":"\u2292","&sqsupset;":"\u2290","&sqsupseteq;":"\u2292","&squ;":"\u25a1","&square;":"\u25a1","&squarf;":"\u25aa","&squf;":"\u25aa","&srarr;":"\u2192","&sscr;":"\ud835\udcc8","&ssetmn;":"\u2216","&ssmile;":"\u2323","&sstarf;":"\u22c6","&star;":"\u2606","&starf;":"\u2605","&straightepsilon;":"\u03f5","&straightphi;":"\u03d5","&strns;":"\xaf","&sub;":"\u2282","&subE;":"\u2ac5","&subdot;":"\u2abd","&sube;":"\u2286","&subedot;":"\u2ac3","&submult;":"\u2ac1","&subnE;":"\u2acb","&subne;":"\u228a","&subplus;":"\u2abf","&subrarr;":"\u2979","&subset;":"\u2282","&subseteq;":"\u2286","&subseteqq;":"\u2ac5","&subsetneq;":"\u228a","&subsetneqq;":"\u2acb","&subsim;":"\u2ac7","&subsub;":"\u2ad5","&subsup;":"\u2ad3","&succ;":"\u227b","&succapprox;":"\u2ab8","&succcurlyeq;":"\u227d","&succeq;":"\u2ab0","&succnapprox;":"\u2aba","&succneqq;":"\u2ab6","&succnsim;":"\u22e9","&succsim;":"\u227f","&sum;":"\u2211","&sung;":"\u266a","&sup1":"\xb9","&sup1;":"\xb9","&sup2":"\xb2","&sup2;":"\xb2","&sup3":"\xb3","&sup3;":"\xb3","&sup;":"\u2283","&supE;":"\u2ac6","&supdot;":"\u2abe","&supdsub;":"\u2ad8","&supe;":"\u2287","&supedot;":"\u2ac4","&suphsol;":"\u27c9","&suphsub;":"\u2ad7","&suplarr;":"\u297b","&supmult;":"\u2ac2","&supnE;":"\u2acc","&supne;":"\u228b","&supplus;":"\u2ac0","&supset;":"\u2283","&supseteq;":"\u2287","&supseteqq;":"\u2ac6","&supsetneq;":"\u228b","&supsetneqq;":"\u2acc","&supsim;":"\u2ac8","&supsub;":"\u2ad4","&supsup;":"\u2ad6","&swArr;":"\u21d9","&swarhk;":"\u2926","&swarr;":"\u2199","&swarrow;":"\u2199","&swnwar;":"\u292a","&szlig":"\xdf","&szlig;":"\xdf","&target;":"\u2316","&tau;":"\u03c4","&tbrk;":"\u23b4","&tcaron;":"\u0165","&tcedil;":"\u0163","&tcy;":"\u0442","&tdot;":"\u20db","&telrec;":"\u2315","&tfr;":"\ud835\udd31","&there4;":"\u2234","&therefore;":"\u2234","&theta;":"\u03b8","&thetasym;":"\u03d1","&thetav;":"\u03d1","&thickapprox;":"\u2248","&thicksim;":"\u223c","&thinsp;":"\u2009","&thkap;":"\u2248","&thksim;":"\u223c","&thorn":"\xfe","&thorn;":"\xfe","&tilde;":"\u02dc","&times":"\xd7","&times;":"\xd7","&timesb;":"\u22a0","&timesbar;":"\u2a31","&timesd;":"\u2a30","&tint;":"\u222d","&toea;":"\u2928","&top;":"\u22a4","&topbot;":"\u2336","&topcir;":"\u2af1","&topf;":"\ud835\udd65","&topfork;":"\u2ada","&tosa;":"\u2929","&tprime;":"\u2034","&trade;":"\u2122","&triangle;":"\u25b5","&triangledown;":"\u25bf","&triangleleft;":"\u25c3","&trianglelefteq;":"\u22b4","&triangleq;":"\u225c","&triangleright;":"\u25b9","&trianglerighteq;":"\u22b5","&tridot;":"\u25ec","&trie;":"\u225c","&triminus;":"\u2a3a","&triplus;":"\u2a39","&trisb;":"\u29cd","&tritime;":"\u2a3b","&trpezium;":"\u23e2","&tscr;":"\ud835\udcc9","&tscy;":"\u0446","&tshcy;":"\u045b","&tstrok;":"\u0167","&twixt;":"\u226c","&twoheadleftarrow;":"\u219e","&twoheadrightarrow;":"\u21a0","&uArr;":"\u21d1","&uHar;":"\u2963","&uacute":"\xfa","&uacute;":"\xfa","&uarr;":"\u2191","&ubrcy;":"\u045e","&ubreve;":"\u016d","&ucirc":"\xfb","&ucirc;":"\xfb","&ucy;":"\u0443","&udarr;":"\u21c5","&udblac;":"\u0171","&udhar;":"\u296e","&ufisht;":"\u297e","&ufr;":"\ud835\udd32","&ugrave":"\xf9","&ugrave;":"\xf9","&uharl;":"\u21bf","&uharr;":"\u21be","&uhblk;":"\u2580","&ulcorn;":"\u231c","&ulcorner;":"\u231c","&ulcrop;":"\u230f","&ultri;":"\u25f8","&umacr;":"\u016b","&uml":"\xa8","&uml;":"\xa8","&uogon;":"\u0173","&uopf;":"\ud835\udd66","&uparrow;":"\u2191","&updownarrow;":"\u2195","&upharpoonleft;":"\u21bf","&upharpoonright;":"\u21be","&uplus;":"\u228e","&upsi;":"\u03c5","&upsih;":"\u03d2","&upsilon;":"\u03c5","&upuparrows;":"\u21c8","&urcorn;":"\u231d","&urcorner;":"\u231d","&urcrop;":"\u230e","&uring;":"\u016f","&urtri;":"\u25f9","&uscr;":"\ud835\udcca","&utdot;":"\u22f0","&utilde;":"\u0169","&utri;":"\u25b5","&utrif;":"\u25b4","&uuarr;":"\u21c8","&uuml":"\xfc","&uuml;":"\xfc","&uwangle;":"\u29a7","&vArr;":"\u21d5","&vBar;":"\u2ae8","&vBarv;":"\u2ae9","&vDash;":"\u22a8","&vangrt;":"\u299c","&varepsilon;":"\u03f5","&varkappa;":"\u03f0","&varnothing;":"\u2205","&varphi;":"\u03d5","&varpi;":"\u03d6","&varpropto;":"\u221d","&varr;":"\u2195","&varrho;":"\u03f1","&varsigma;":"\u03c2","&varsubsetneq;":"\u228a\ufe00","&varsubsetneqq;":"\u2acb\ufe00","&varsupsetneq;":"\u228b\ufe00","&varsupsetneqq;":"\u2acc\ufe00","&vartheta;":"\u03d1","&vartriangleleft;":"\u22b2","&vartriangleright;":"\u22b3","&vcy;":"\u0432","&vdash;":"\u22a2","&vee;":"\u2228","&veebar;":"\u22bb","&veeeq;":"\u225a","&vellip;":"\u22ee","&verbar;":"|","&vert;":"|","&vfr;":"\ud835\udd33","&vltri;":"\u22b2","&vnsub;":"\u2282\u20d2","&vnsup;":"\u2283\u20d2","&vopf;":"\ud835\udd67","&vprop;":"\u221d","&vrtri;":"\u22b3","&vscr;":"\ud835\udccb","&vsubnE;":"\u2acb\ufe00","&vsubne;":"\u228a\ufe00","&vsupnE;":"\u2acc\ufe00","&vsupne;":"\u228b\ufe00","&vzigzag;":"\u299a","&wcirc;":"\u0175","&wedbar;":"\u2a5f","&wedge;":"\u2227","&wedgeq;":"\u2259","&weierp;":"\u2118","&wfr;":"\ud835\udd34","&wopf;":"\ud835\udd68","&wp;":"\u2118","&wr;":"\u2240","&wreath;":"\u2240","&wscr;":"\ud835\udccc","&xcap;":"\u22c2","&xcirc;":"\u25ef","&xcup;":"\u22c3","&xdtri;":"\u25bd","&xfr;":"\ud835\udd35","&xhArr;":"\u27fa","&xharr;":"\u27f7","&xi;":"\u03be","&xlArr;":"\u27f8","&xlarr;":"\u27f5","&xmap;":"\u27fc","&xnis;":"\u22fb","&xodot;":"\u2a00","&xopf;":"\ud835\udd69","&xoplus;":"\u2a01","&xotime;":"\u2a02","&xrArr;":"\u27f9","&xrarr;":"\u27f6","&xscr;":"\ud835\udccd","&xsqcup;":"\u2a06","&xuplus;":"\u2a04","&xutri;":"\u25b3","&xvee;":"\u22c1","&xwedge;":"\u22c0","&yacute":"\xfd","&yacute;":"\xfd","&yacy;":"\u044f","&ycirc;":"\u0177","&ycy;":"\u044b","&yen":"\xa5","&yen;":"\xa5","&yfr;":"\ud835\udd36","&yicy;":"\u0457","&yopf;":"\ud835\udd6a","&yscr;":"\ud835\udcce","&yucy;":"\u044e","&yuml":"\xff","&yuml;":"\xff","&zacute;":"\u017a","&zcaron;":"\u017e","&zcy;":"\u0437","&zdot;":"\u017c","&zeetrf;":"\u2128","&zeta;":"\u03b6","&zfr;":"\ud835\udd37","&zhcy;":"\u0436","&zigrarr;":"\u21dd","&zopf;":"\ud835\udd6b","&zscr;":"\ud835\udccf","&zwj;":"\u200d","&zwnj;":"\u200c"},characters:{"\xc6":"&AElig;","&":"&amp;","\xc1":"&Aacute;","\u0102":"&Abreve;","\xc2":"&Acirc;","\u0410":"&Acy;","\ud835\udd04":"&Afr;","\xc0":"&Agrave;","\u0391":"&Alpha;","\u0100":"&Amacr;","\u2a53":"&And;","\u0104":"&Aogon;","\ud835\udd38":"&Aopf;","\u2061":"&af;","\xc5":"&angst;","\ud835\udc9c":"&Ascr;","\u2254":"&coloneq;","\xc3":"&Atilde;","\xc4":"&Auml;","\u2216":"&ssetmn;","\u2ae7":"&Barv;","\u2306":"&doublebarwedge;","\u0411":"&Bcy;","\u2235":"&because;","\u212c":"&bernou;","\u0392":"&Beta;","\ud835\udd05":"&Bfr;","\ud835\udd39":"&Bopf;","\u02d8":"&breve;","\u224e":"&bump;","\u0427":"&CHcy;","\xa9":"&copy;","\u0106":"&Cacute;","\u22d2":"&Cap;","\u2145":"&DD;","\u212d":"&Cfr;","\u010c":"&Ccaron;","\xc7":"&Ccedil;","\u0108":"&Ccirc;","\u2230":"&Cconint;","\u010a":"&Cdot;","\xb8":"&cedil;","\xb7":"&middot;","\u03a7":"&Chi;","\u2299":"&odot;","\u2296":"&ominus;","\u2295":"&oplus;","\u2297":"&otimes;","\u2232":"&cwconint;","\u201d":"&rdquor;","\u2019":"&rsquor;","\u2237":"&Proportion;","\u2a74":"&Colone;","\u2261":"&equiv;","\u222f":"&DoubleContourIntegral;","\u222e":"&oint;","\u2102":"&complexes;","\u2210":"&coprod;","\u2233":"&awconint;","\u2a2f":"&Cross;","\ud835\udc9e":"&Cscr;","\u22d3":"&Cup;","\u224d":"&asympeq;","\u2911":"&DDotrahd;","\u0402":"&DJcy;","\u0405":"&DScy;","\u040f":"&DZcy;","\u2021":"&ddagger;","\u21a1":"&Darr;","\u2ae4":"&DoubleLeftTee;","\u010e":"&Dcaron;","\u0414":"&Dcy;","\u2207":"&nabla;","\u0394":"&Delta;","\ud835\udd07":"&Dfr;","\xb4":"&acute;","\u02d9":"&dot;","\u02dd":"&dblac;","`":"&grave;","\u02dc":"&tilde;","\u22c4":"&diamond;","\u2146":"&dd;","\ud835\udd3b":"&Dopf;","\xa8":"&uml;","\u20dc":"&DotDot;","\u2250":"&esdot;","\u21d3":"&dArr;","\u21d0":"&lArr;","\u21d4":"&iff;","\u27f8":"&xlArr;","\u27fa":"&xhArr;","\u27f9":"&xrArr;","\u21d2":"&rArr;","\u22a8":"&vDash;","\u21d1":"&uArr;","\u21d5":"&vArr;","\u2225":"&spar;","\u2193":"&downarrow;","\u2913":"&DownArrowBar;","\u21f5":"&duarr;","\u0311":"&DownBreve;","\u2950":"&DownLeftRightVector;","\u295e":"&DownLeftTeeVector;","\u21bd":"&lhard;","\u2956":"&DownLeftVectorBar;","\u295f":"&DownRightTeeVector;","\u21c1":"&rightharpoondown;","\u2957":"&DownRightVectorBar;","\u22a4":"&top;","\u21a7":"&mapstodown;","\ud835\udc9f":"&Dscr;","\u0110":"&Dstrok;","\u014a":"&ENG;","\xd0":"&ETH;","\xc9":"&Eacute;","\u011a":"&Ecaron;","\xca":"&Ecirc;","\u042d":"&Ecy;","\u0116":"&Edot;","\ud835\udd08":"&Efr;","\xc8":"&Egrave;","\u2208":"&isinv;","\u0112":"&Emacr;","\u25fb":"&EmptySmallSquare;","\u25ab":"&EmptyVerySmallSquare;","\u0118":"&Eogon;","\ud835\udd3c":"&Eopf;","\u0395":"&Epsilon;","\u2a75":"&Equal;","\u2242":"&esim;","\u21cc":"&rlhar;","\u2130":"&expectation;","\u2a73":"&Esim;","\u0397":"&Eta;","\xcb":"&Euml;","\u2203":"&exist;","\u2147":"&exponentiale;","\u0424":"&Fcy;","\ud835\udd09":"&Ffr;","\u25fc":"&FilledSmallSquare;","\u25aa":"&squf;","\ud835\udd3d":"&Fopf;","\u2200":"&forall;","\u2131":"&Fscr;","\u0403":"&GJcy;",">":"&gt;","\u0393":"&Gamma;","\u03dc":"&Gammad;","\u011e":"&Gbreve;","\u0122":"&Gcedil;","\u011c":"&Gcirc;","\u0413":"&Gcy;","\u0120":"&Gdot;","\ud835\udd0a":"&Gfr;","\u22d9":"&ggg;","\ud835\udd3e":"&Gopf;","\u2265":"&geq;","\u22db":"&gtreqless;","\u2267":"&geqq;","\u2aa2":"&GreaterGreater;","\u2277":"&gtrless;","\u2a7e":"&ges;","\u2273":"&gtrsim;","\ud835\udca2":"&Gscr;","\u226b":"&gg;","\u042a":"&HARDcy;","\u02c7":"&caron;","^":"&Hat;","\u0124":"&Hcirc;","\u210c":"&Poincareplane;","\u210b":"&hamilt;","\u210d":"&quaternions;","\u2500":"&boxh;","\u0126":"&Hstrok;","\u224f":"&bumpeq;","\u0415":"&IEcy;","\u0132":"&IJlig;","\u0401":"&IOcy;","\xcd":"&Iacute;","\xce":"&Icirc;","\u0418":"&Icy;","\u0130":"&Idot;","\u2111":"&imagpart;","\xcc":"&Igrave;","\u012a":"&Imacr;","\u2148":"&ii;","\u222c":"&Int;","\u222b":"&int;","\u22c2":"&xcap;","\u2063":"&ic;","\u2062":"&it;","\u012e":"&Iogon;","\ud835\udd40":"&Iopf;","\u0399":"&Iota;","\u2110":"&imagline;","\u0128":"&Itilde;","\u0406":"&Iukcy;","\xcf":"&Iuml;","\u0134":"&Jcirc;","\u0419":"&Jcy;","\ud835\udd0d":"&Jfr;","\ud835\udd41":"&Jopf;","\ud835\udca5":"&Jscr;","\u0408":"&Jsercy;","\u0404":"&Jukcy;","\u0425":"&KHcy;","\u040c":"&KJcy;","\u039a":"&Kappa;","\u0136":"&Kcedil;","\u041a":"&Kcy;","\ud835\udd0e":"&Kfr;","\ud835\udd42":"&Kopf;","\ud835\udca6":"&Kscr;","\u0409":"&LJcy;","<":"&lt;","\u0139":"&Lacute;","\u039b":"&Lambda;","\u27ea":"&Lang;","\u2112":"&lagran;","\u219e":"&twoheadleftarrow;","\u013d":"&Lcaron;","\u013b":"&Lcedil;","\u041b":"&Lcy;","\u27e8":"&langle;","\u2190":"&slarr;","\u21e4":"&larrb;","\u21c6":"&lrarr;","\u2308":"&lceil;","\u27e6":"&lobrk;","\u2961":"&LeftDownTeeVector;","\u21c3":"&downharpoonleft;","\u2959":"&LeftDownVectorBar;","\u230a":"&lfloor;","\u2194":"&leftrightarrow;","\u294e":"&LeftRightVector;","\u22a3":"&dashv;","\u21a4":"&mapstoleft;","\u295a":"&LeftTeeVector;","\u22b2":"&vltri;","\u29cf":"&LeftTriangleBar;","\u22b4":"&trianglelefteq;","\u2951":"&LeftUpDownVector;","\u2960":"&LeftUpTeeVector;","\u21bf":"&upharpoonleft;","\u2958":"&LeftUpVectorBar;","\u21bc":"&lharu;","\u2952":"&LeftVectorBar;","\u22da":"&lesseqgtr;","\u2266":"&leqq;","\u2276":"&lg;","\u2aa1":"&LessLess;","\u2a7d":"&les;","\u2272":"&lsim;","\ud835\udd0f":"&Lfr;","\u22d8":"&Ll;","\u21da":"&lAarr;","\u013f":"&Lmidot;","\u27f5":"&xlarr;","\u27f7":"&xharr;","\u27f6":"&xrarr;","\ud835\udd43":"&Lopf;","\u2199":"&swarrow;","\u2198":"&searrow;","\u21b0":"&lsh;","\u0141":"&Lstrok;","\u226a":"&ll;","\u2905":"&Map;","\u041c":"&Mcy;","\u205f":"&MediumSpace;","\u2133":"&phmmat;","\ud835\udd10":"&Mfr;","\u2213":"&mp;","\ud835\udd44":"&Mopf;","\u039c":"&Mu;","\u040a":"&NJcy;","\u0143":"&Nacute;","\u0147":"&Ncaron;","\u0145":"&Ncedil;","\u041d":"&Ncy;","\u200b":"&ZeroWidthSpace;","\n":"&NewLine;","\ud835\udd11":"&Nfr;","\u2060":"&NoBreak;","\xa0":"&nbsp;","\u2115":"&naturals;","\u2aec":"&Not;","\u2262":"&nequiv;","\u226d":"&NotCupCap;","\u2226":"&nspar;","\u2209":"&notinva;","\u2260":"&ne;","\u2242\u0338":"&nesim;","\u2204":"&nexists;","\u226f":"&ngtr;","\u2271":"&ngeq;","\u2267\u0338":"&ngeqq;","\u226b\u0338":"&nGtv;","\u2279":"&ntgl;","\u2a7e\u0338":"&nges;","\u2275":"&ngsim;","\u224e\u0338":"&nbump;","\u224f\u0338":"&nbumpe;","\u22ea":"&ntriangleleft;","\u29cf\u0338":"&NotLeftTriangleBar;","\u22ec":"&ntrianglelefteq;","\u226e":"&nlt;","\u2270":"&nleq;","\u2278":"&ntlg;","\u226a\u0338":"&nLtv;","\u2a7d\u0338":"&nles;","\u2274":"&nlsim;","\u2aa2\u0338":"&NotNestedGreaterGreater;","\u2aa1\u0338":"&NotNestedLessLess;","\u2280":"&nprec;","\u2aaf\u0338":"&npreceq;","\u22e0":"&nprcue;","\u220c":"&notniva;","\u22eb":"&ntriangleright;","\u29d0\u0338":"&NotRightTriangleBar;","\u22ed":"&ntrianglerighteq;","\u228f\u0338":"&NotSquareSubset;","\u22e2":"&nsqsube;","\u2290\u0338":"&NotSquareSuperset;","\u22e3":"&nsqsupe;","\u2282\u20d2":"&vnsub;","\u2288":"&nsubseteq;","\u2281":"&nsucc;","\u2ab0\u0338":"&nsucceq;","\u22e1":"&nsccue;","\u227f\u0338":"&NotSucceedsTilde;","\u2283\u20d2":"&vnsup;","\u2289":"&nsupseteq;","\u2241":"&nsim;","\u2244":"&nsimeq;","\u2247":"&ncong;","\u2249":"&napprox;","\u2224":"&nsmid;","\ud835\udca9":"&Nscr;","\xd1":"&Ntilde;","\u039d":"&Nu;","\u0152":"&OElig;","\xd3":"&Oacute;","\xd4":"&Ocirc;","\u041e":"&Ocy;","\u0150":"&Odblac;","\ud835\udd12":"&Ofr;","\xd2":"&Ograve;","\u014c":"&Omacr;","\u03a9":"&ohm;","\u039f":"&Omicron;","\ud835\udd46":"&Oopf;","\u201c":"&ldquo;","\u2018":"&lsquo;","\u2a54":"&Or;","\ud835\udcaa":"&Oscr;","\xd8":"&Oslash;","\xd5":"&Otilde;","\u2a37":"&Otimes;","\xd6":"&Ouml;","\u203e":"&oline;","\u23de":"&OverBrace;","\u23b4":"&tbrk;","\u23dc":"&OverParenthesis;","\u2202":"&part;","\u041f":"&Pcy;","\ud835\udd13":"&Pfr;","\u03a6":"&Phi;","\u03a0":"&Pi;","\xb1":"&pm;","\u2119":"&primes;","\u2abb":"&Pr;","\u227a":"&prec;","\u2aaf":"&preceq;","\u227c":"&preccurlyeq;","\u227e":"&prsim;","\u2033":"&Prime;","\u220f":"&prod;","\u221d":"&vprop;","\ud835\udcab":"&Pscr;","\u03a8":"&Psi;",'"':"&quot;","\ud835\udd14":"&Qfr;","\u211a":"&rationals;","\ud835\udcac":"&Qscr;","\u2910":"&drbkarow;","\xae":"&reg;","\u0154":"&Racute;","\u27eb":"&Rang;","\u21a0":"&twoheadrightarrow;","\u2916":"&Rarrtl;","\u0158":"&Rcaron;","\u0156":"&Rcedil;","\u0420":"&Rcy;","\u211c":"&realpart;","\u220b":"&niv;","\u21cb":"&lrhar;","\u296f":"&duhar;","\u03a1":"&Rho;","\u27e9":"&rangle;","\u2192":"&srarr;","\u21e5":"&rarrb;","\u21c4":"&rlarr;","\u2309":"&rceil;","\u27e7":"&robrk;","\u295d":"&RightDownTeeVector;","\u21c2":"&downharpoonright;","\u2955":"&RightDownVectorBar;","\u230b":"&rfloor;","\u22a2":"&vdash;","\u21a6":"&mapsto;","\u295b":"&RightTeeVector;","\u22b3":"&vrtri;","\u29d0":"&RightTriangleBar;","\u22b5":"&trianglerighteq;","\u294f":"&RightUpDownVector;","\u295c":"&RightUpTeeVector;","\u21be":"&upharpoonright;","\u2954":"&RightUpVectorBar;","\u21c0":"&rightharpoonup;","\u2953":"&RightVectorBar;","\u211d":"&reals;","\u2970":"&RoundImplies;","\u21db":"&rAarr;","\u211b":"&realine;","\u21b1":"&rsh;","\u29f4":"&RuleDelayed;","\u0429":"&SHCHcy;","\u0428":"&SHcy;","\u042c":"&SOFTcy;","\u015a":"&Sacute;","\u2abc":"&Sc;","\u0160":"&Scaron;","\u015e":"&Scedil;","\u015c":"&Scirc;","\u0421":"&Scy;","\ud835\udd16":"&Sfr;","\u2191":"&uparrow;","\u03a3":"&Sigma;","\u2218":"&compfn;","\ud835\udd4a":"&Sopf;","\u221a":"&radic;","\u25a1":"&square;","\u2293":"&sqcap;","\u228f":"&sqsubset;","\u2291":"&sqsubseteq;","\u2290":"&sqsupset;","\u2292":"&sqsupseteq;","\u2294":"&sqcup;","\ud835\udcae":"&Sscr;","\u22c6":"&sstarf;","\u22d0":"&Subset;","\u2286":"&subseteq;","\u227b":"&succ;","\u2ab0":"&succeq;","\u227d":"&succcurlyeq;","\u227f":"&succsim;","\u2211":"&sum;","\u22d1":"&Supset;","\u2283":"&supset;","\u2287":"&supseteq;","\xde":"&THORN;","\u2122":"&trade;","\u040b":"&TSHcy;","\u0426":"&TScy;","\t":"&Tab;","\u03a4":"&Tau;","\u0164":"&Tcaron;","\u0162":"&Tcedil;","\u0422":"&Tcy;","\ud835\udd17":"&Tfr;","\u2234":"&therefore;","\u0398":"&Theta;","\u205f\u200a":"&ThickSpace;","\u2009":"&thinsp;","\u223c":"&thksim;","\u2243":"&simeq;","\u2245":"&cong;","\u2248":"&thkap;","\ud835\udd4b":"&Topf;","\u20db":"&tdot;","\ud835\udcaf":"&Tscr;","\u0166":"&Tstrok;","\xda":"&Uacute;","\u219f":"&Uarr;","\u2949":"&Uarrocir;","\u040e":"&Ubrcy;","\u016c":"&Ubreve;","\xdb":"&Ucirc;","\u0423":"&Ucy;","\u0170":"&Udblac;","\ud835\udd18":"&Ufr;","\xd9":"&Ugrave;","\u016a":"&Umacr;",_:"&lowbar;","\u23df":"&UnderBrace;","\u23b5":"&bbrk;","\u23dd":"&UnderParenthesis;","\u22c3":"&xcup;","\u228e":"&uplus;","\u0172":"&Uogon;","\ud835\udd4c":"&Uopf;","\u2912":"&UpArrowBar;","\u21c5":"&udarr;","\u2195":"&varr;","\u296e":"&udhar;","\u22a5":"&perp;","\u21a5":"&mapstoup;","\u2196":"&nwarrow;","\u2197":"&nearrow;","\u03d2":"&upsih;","\u03a5":"&Upsilon;","\u016e":"&Uring;","\ud835\udcb0":"&Uscr;","\u0168":"&Utilde;","\xdc":"&Uuml;","\u22ab":"&VDash;","\u2aeb":"&Vbar;","\u0412":"&Vcy;","\u22a9":"&Vdash;","\u2ae6":"&Vdashl;","\u22c1":"&xvee;","\u2016":"&Vert;","\u2223":"&smid;","|":"&vert;","\u2758":"&VerticalSeparator;","\u2240":"&wreath;","\u200a":"&hairsp;","\ud835\udd19":"&Vfr;","\ud835\udd4d":"&Vopf;","\ud835\udcb1":"&Vscr;","\u22aa":"&Vvdash;","\u0174":"&Wcirc;","\u22c0":"&xwedge;","\ud835\udd1a":"&Wfr;","\ud835\udd4e":"&Wopf;","\ud835\udcb2":"&Wscr;","\ud835\udd1b":"&Xfr;","\u039e":"&Xi;","\ud835\udd4f":"&Xopf;","\ud835\udcb3":"&Xscr;","\u042f":"&YAcy;","\u0407":"&YIcy;","\u042e":"&YUcy;","\xdd":"&Yacute;","\u0176":"&Ycirc;","\u042b":"&Ycy;","\ud835\udd1c":"&Yfr;","\ud835\udd50":"&Yopf;","\ud835\udcb4":"&Yscr;","\u0178":"&Yuml;","\u0416":"&ZHcy;","\u0179":"&Zacute;","\u017d":"&Zcaron;","\u0417":"&Zcy;","\u017b":"&Zdot;","\u0396":"&Zeta;","\u2128":"&zeetrf;","\u2124":"&integers;","\ud835\udcb5":"&Zscr;","\xe1":"&aacute;","\u0103":"&abreve;","\u223e":"&mstpos;","\u223e\u0333":"&acE;","\u223f":"&acd;","\xe2":"&acirc;","\u0430":"&acy;","\xe6":"&aelig;","\ud835\udd1e":"&afr;","\xe0":"&agrave;","\u2135":"&aleph;","\u03b1":"&alpha;","\u0101":"&amacr;","\u2a3f":"&amalg;","\u2227":"&wedge;","\u2a55":"&andand;","\u2a5c":"&andd;","\u2a58":"&andslope;","\u2a5a":"&andv;","\u2220":"&angle;","\u29a4":"&ange;","\u2221":"&measuredangle;","\u29a8":"&angmsdaa;","\u29a9":"&angmsdab;","\u29aa":"&angmsdac;","\u29ab":"&angmsdad;","\u29ac":"&angmsdae;","\u29ad":"&angmsdaf;","\u29ae":"&angmsdag;","\u29af":"&angmsdah;","\u221f":"&angrt;","\u22be":"&angrtvb;","\u299d":"&angrtvbd;","\u2222":"&angsph;","\u237c":"&angzarr;","\u0105":"&aogon;","\ud835\udd52":"&aopf;","\u2a70":"&apE;","\u2a6f":"&apacir;","\u224a":"&approxeq;","\u224b":"&apid;","'":"&apos;","\xe5":"&aring;","\ud835\udcb6":"&ascr;","*":"&midast;","\xe3":"&atilde;","\xe4":"&auml;","\u2a11":"&awint;","\u2aed":"&bNot;","\u224c":"&bcong;","\u03f6":"&bepsi;","\u2035":"&bprime;","\u223d":"&bsim;","\u22cd":"&bsime;","\u22bd":"&barvee;","\u2305":"&barwedge;","\u23b6":"&bbrktbrk;","\u0431":"&bcy;","\u201e":"&ldquor;","\u29b0":"&bemptyv;","\u03b2":"&beta;","\u2136":"&beth;","\u226c":"&twixt;","\ud835\udd1f":"&bfr;","\u25ef":"&xcirc;","\u2a00":"&xodot;","\u2a01":"&xoplus;","\u2a02":"&xotime;","\u2a06":"&xsqcup;","\u2605":"&starf;","\u25bd":"&xdtri;","\u25b3":"&xutri;","\u2a04":"&xuplus;","\u290d":"&rbarr;","\u29eb":"&lozf;","\u25b4":"&utrif;","\u25be":"&dtrif;","\u25c2":"&ltrif;","\u25b8":"&rtrif;","\u2423":"&blank;","\u2592":"&blk12;","\u2591":"&blk14;","\u2593":"&blk34;","\u2588":"&block;","=\u20e5":"&bne;","\u2261\u20e5":"&bnequiv;","\u2310":"&bnot;","\ud835\udd53":"&bopf;","\u22c8":"&bowtie;","\u2557":"&boxDL;","\u2554":"&boxDR;","\u2556":"&boxDl;","\u2553":"&boxDr;","\u2550":"&boxH;","\u2566":"&boxHD;","\u2569":"&boxHU;","\u2564":"&boxHd;","\u2567":"&boxHu;","\u255d":"&boxUL;","\u255a":"&boxUR;","\u255c":"&boxUl;","\u2559":"&boxUr;","\u2551":"&boxV;","\u256c":"&boxVH;","\u2563":"&boxVL;","\u2560":"&boxVR;","\u256b":"&boxVh;","\u2562":"&boxVl;","\u255f":"&boxVr;","\u29c9":"&boxbox;","\u2555":"&boxdL;","\u2552":"&boxdR;","\u2510":"&boxdl;","\u250c":"&boxdr;","\u2565":"&boxhD;","\u2568":"&boxhU;","\u252c":"&boxhd;","\u2534":"&boxhu;","\u229f":"&minusb;","\u229e":"&plusb;","\u22a0":"&timesb;","\u255b":"&boxuL;","\u2558":"&boxuR;","\u2518":"&boxul;","\u2514":"&boxur;","\u2502":"&boxv;","\u256a":"&boxvH;","\u2561":"&boxvL;","\u255e":"&boxvR;","\u253c":"&boxvh;","\u2524":"&boxvl;","\u251c":"&boxvr;","\xa6":"&brvbar;","\ud835\udcb7":"&bscr;","\u204f":"&bsemi;","\\":"&bsol;","\u29c5":"&bsolb;","\u27c8":"&bsolhsub;","\u2022":"&bullet;","\u2aae":"&bumpE;","\u0107":"&cacute;","\u2229":"&cap;","\u2a44":"&capand;","\u2a49":"&capbrcup;","\u2a4b":"&capcap;","\u2a47":"&capcup;","\u2a40":"&capdot;","\u2229\ufe00":"&caps;","\u2041":"&caret;","\u2a4d":"&ccaps;","\u010d":"&ccaron;","\xe7":"&ccedil;","\u0109":"&ccirc;","\u2a4c":"&ccups;","\u2a50":"&ccupssm;","\u010b":"&cdot;","\u29b2":"&cemptyv;","\xa2":"&cent;","\ud835\udd20":"&cfr;","\u0447":"&chcy;","\u2713":"&checkmark;","\u03c7":"&chi;","\u25cb":"&cir;","\u29c3":"&cirE;","\u02c6":"&circ;","\u2257":"&cire;","\u21ba":"&olarr;","\u21bb":"&orarr;","\u24c8":"&oS;","\u229b":"&oast;","\u229a":"&ocir;","\u229d":"&odash;","\u2a10":"&cirfnint;","\u2aef":"&cirmid;","\u29c2":"&cirscir;","\u2663":"&clubsuit;",":":"&colon;",",":"&comma;","@":"&commat;","\u2201":"&complement;","\u2a6d":"&congdot;","\ud835\udd54":"&copf;","\u2117":"&copysr;","\u21b5":"&crarr;","\u2717":"&cross;","\ud835\udcb8":"&cscr;","\u2acf":"&csub;","\u2ad1":"&csube;","\u2ad0":"&csup;","\u2ad2":"&csupe;","\u22ef":"&ctdot;","\u2938":"&cudarrl;","\u2935":"&cudarrr;","\u22de":"&curlyeqprec;","\u22df":"&curlyeqsucc;","\u21b6":"&curvearrowleft;","\u293d":"&cularrp;","\u222a":"&cup;","\u2a48":"&cupbrcap;","\u2a46":"&cupcap;","\u2a4a":"&cupcup;","\u228d":"&cupdot;","\u2a45":"&cupor;","\u222a\ufe00":"&cups;","\u21b7":"&curvearrowright;","\u293c":"&curarrm;","\u22ce":"&cuvee;","\u22cf":"&cuwed;","\xa4":"&curren;","\u2231":"&cwint;","\u232d":"&cylcty;","\u2965":"&dHar;","\u2020":"&dagger;","\u2138":"&daleth;","\u2010":"&hyphen;","\u290f":"&rBarr;","\u010f":"&dcaron;","\u0434":"&dcy;","\u21ca":"&downdownarrows;","\u2a77":"&eDDot;","\xb0":"&deg;","\u03b4":"&delta;","\u29b1":"&demptyv;","\u297f":"&dfisht;","\ud835\udd21":"&dfr;","\u2666":"&diams;","\u03dd":"&gammad;","\u22f2":"&disin;","\xf7":"&divide;","\u22c7":"&divonx;","\u0452":"&djcy;","\u231e":"&llcorner;","\u230d":"&dlcrop;",$:"&dollar;","\ud835\udd55":"&dopf;","\u2251":"&eDot;","\u2238":"&minusd;","\u2214":"&plusdo;","\u22a1":"&sdotb;","\u231f":"&lrcorner;","\u230c":"&drcrop;","\ud835\udcb9":"&dscr;","\u0455":"&dscy;","\u29f6":"&dsol;","\u0111":"&dstrok;","\u22f1":"&dtdot;","\u25bf":"&triangledown;","\u29a6":"&dwangle;","\u045f":"&dzcy;","\u27ff":"&dzigrarr;","\xe9":"&eacute;","\u2a6e":"&easter;","\u011b":"&ecaron;","\u2256":"&eqcirc;","\xea":"&ecirc;","\u2255":"&eqcolon;","\u044d":"&ecy;","\u0117":"&edot;","\u2252":"&fallingdotseq;","\ud835\udd22":"&efr;","\u2a9a":"&eg;","\xe8":"&egrave;","\u2a96":"&eqslantgtr;","\u2a98":"&egsdot;","\u2a99":"&el;","\u23e7":"&elinters;","\u2113":"&ell;","\u2a95":"&eqslantless;","\u2a97":"&elsdot;","\u0113":"&emacr;","\u2205":"&varnothing;","\u2004":"&emsp13;","\u2005":"&emsp14;","\u2003":"&emsp;","\u014b":"&eng;","\u2002":"&ensp;","\u0119":"&eogon;","\ud835\udd56":"&eopf;","\u22d5":"&epar;","\u29e3":"&eparsl;","\u2a71":"&eplus;","\u03b5":"&epsilon;","\u03f5":"&varepsilon;","=":"&equals;","\u225f":"&questeq;","\u2a78":"&equivDD;","\u29e5":"&eqvparsl;","\u2253":"&risingdotseq;","\u2971":"&erarr;","\u212f":"&escr;","\u03b7":"&eta;","\xf0":"&eth;","\xeb":"&euml;","\u20ac":"&euro;","!":"&excl;","\u0444":"&fcy;","\u2640":"&female;","\ufb03":"&ffilig;","\ufb00":"&fflig;","\ufb04":"&ffllig;","\ud835\udd23":"&ffr;","\ufb01":"&filig;",fj:"&fjlig;","\u266d":"&flat;","\ufb02":"&fllig;","\u25b1":"&fltns;","\u0192":"&fnof;","\ud835\udd57":"&fopf;","\u22d4":"&pitchfork;","\u2ad9":"&forkv;","\u2a0d":"&fpartint;","\xbd":"&half;","\u2153":"&frac13;","\xbc":"&frac14;","\u2155":"&frac15;","\u2159":"&frac16;","\u215b":"&frac18;","\u2154":"&frac23;","\u2156":"&frac25;","\xbe":"&frac34;","\u2157":"&frac35;","\u215c":"&frac38;","\u2158":"&frac45;","\u215a":"&frac56;","\u215d":"&frac58;","\u215e":"&frac78;","\u2044":"&frasl;","\u2322":"&sfrown;","\ud835\udcbb":"&fscr;","\u2a8c":"&gtreqqless;","\u01f5":"&gacute;","\u03b3":"&gamma;","\u2a86":"&gtrapprox;","\u011f":"&gbreve;","\u011d":"&gcirc;","\u0433":"&gcy;","\u0121":"&gdot;","\u2aa9":"&gescc;","\u2a80":"&gesdot;","\u2a82":"&gesdoto;","\u2a84":"&gesdotol;","\u22db\ufe00":"&gesl;","\u2a94":"&gesles;","\ud835\udd24":"&gfr;","\u2137":"&gimel;","\u0453":"&gjcy;","\u2a92":"&glE;","\u2aa5":"&gla;","\u2aa4":"&glj;","\u2269":"&gneqq;","\u2a8a":"&gnapprox;","\u2a88":"&gneq;","\u22e7":"&gnsim;","\ud835\udd58":"&gopf;","\u210a":"&gscr;","\u2a8e":"&gsime;","\u2a90":"&gsiml;","\u2aa7":"&gtcc;","\u2a7a":"&gtcir;","\u22d7":"&gtrdot;","\u2995":"&gtlPar;","\u2a7c":"&gtquest;","\u2978":"&gtrarr;","\u2269\ufe00":"&gvnE;","\u044a":"&hardcy;","\u2948":"&harrcir;","\u21ad":"&leftrightsquigarrow;","\u210f":"&plankv;","\u0125":"&hcirc;","\u2665":"&heartsuit;","\u2026":"&mldr;","\u22b9":"&hercon;","\ud835\udd25":"&hfr;","\u2925":"&searhk;","\u2926":"&swarhk;","\u21ff":"&hoarr;","\u223b":"&homtht;","\u21a9":"&larrhk;","\u21aa":"&rarrhk;","\ud835\udd59":"&hopf;","\u2015":"&horbar;","\ud835\udcbd":"&hscr;","\u0127":"&hstrok;","\u2043":"&hybull;","\xed":"&iacute;","\xee":"&icirc;","\u0438":"&icy;","\u0435":"&iecy;","\xa1":"&iexcl;","\ud835\udd26":"&ifr;","\xec":"&igrave;","\u2a0c":"&qint;","\u222d":"&tint;","\u29dc":"&iinfin;","\u2129":"&iiota;","\u0133":"&ijlig;","\u012b":"&imacr;","\u0131":"&inodot;","\u22b7":"&imof;","\u01b5":"&imped;","\u2105":"&incare;","\u221e":"&infin;","\u29dd":"&infintie;","\u22ba":"&intercal;","\u2a17":"&intlarhk;","\u2a3c":"&iprod;","\u0451":"&iocy;","\u012f":"&iogon;","\ud835\udd5a":"&iopf;","\u03b9":"&iota;","\xbf":"&iquest;","\ud835\udcbe":"&iscr;","\u22f9":"&isinE;","\u22f5":"&isindot;","\u22f4":"&isins;","\u22f3":"&isinsv;","\u0129":"&itilde;","\u0456":"&iukcy;","\xef":"&iuml;","\u0135":"&jcirc;","\u0439":"&jcy;","\ud835\udd27":"&jfr;","\u0237":"&jmath;","\ud835\udd5b":"&jopf;","\ud835\udcbf":"&jscr;","\u0458":"&jsercy;","\u0454":"&jukcy;","\u03ba":"&kappa;","\u03f0":"&varkappa;","\u0137":"&kcedil;","\u043a":"&kcy;","\ud835\udd28":"&kfr;","\u0138":"&kgreen;","\u0445":"&khcy;","\u045c":"&kjcy;","\ud835\udd5c":"&kopf;","\ud835\udcc0":"&kscr;","\u291b":"&lAtail;","\u290e":"&lBarr;","\u2a8b":"&lesseqqgtr;","\u2962":"&lHar;","\u013a":"&lacute;","\u29b4":"&laemptyv;","\u03bb":"&lambda;","\u2991":"&langd;","\u2a85":"&lessapprox;","\xab":"&laquo;","\u291f":"&larrbfs;","\u291d":"&larrfs;","\u21ab":"&looparrowleft;","\u2939":"&larrpl;","\u2973":"&larrsim;","\u21a2":"&leftarrowtail;","\u2aab":"&lat;","\u2919":"&latail;","\u2aad":"&late;","\u2aad\ufe00":"&lates;","\u290c":"&lbarr;","\u2772":"&lbbrk;","{":"&lcub;","[":"&lsqb;","\u298b":"&lbrke;","\u298f":"&lbrksld;","\u298d":"&lbrkslu;","\u013e":"&lcaron;","\u013c":"&lcedil;","\u043b":"&lcy;","\u2936":"&ldca;","\u2967":"&ldrdhar;","\u294b":"&ldrushar;","\u21b2":"&ldsh;","\u2264":"&leq;","\u21c7":"&llarr;","\u22cb":"&lthree;","\u2aa8":"&lescc;","\u2a7f":"&lesdot;","\u2a81":"&lesdoto;","\u2a83":"&lesdotor;","\u22da\ufe00":"&lesg;","\u2a93":"&lesges;","\u22d6":"&ltdot;","\u297c":"&lfisht;","\ud835\udd29":"&lfr;","\u2a91":"&lgE;","\u296a":"&lharul;","\u2584":"&lhblk;","\u0459":"&ljcy;","\u296b":"&llhard;","\u25fa":"&lltri;","\u0140":"&lmidot;","\u23b0":"&lmoustache;","\u2268":"&lneqq;","\u2a89":"&lnapprox;","\u2a87":"&lneq;","\u22e6":"&lnsim;","\u27ec":"&loang;","\u21fd":"&loarr;","\u27fc":"&xmap;","\u21ac":"&rarrlp;","\u2985":"&lopar;","\ud835\udd5d":"&lopf;","\u2a2d":"&loplus;","\u2a34":"&lotimes;","\u2217":"&lowast;","\u25ca":"&lozenge;","(":"&lpar;","\u2993":"&lparlt;","\u296d":"&lrhard;","\u200e":"&lrm;","\u22bf":"&lrtri;","\u2039":"&lsaquo;","\ud835\udcc1":"&lscr;","\u2a8d":"&lsime;","\u2a8f":"&lsimg;","\u201a":"&sbquo;","\u0142":"&lstrok;","\u2aa6":"&ltcc;","\u2a79":"&ltcir;","\u22c9":"&ltimes;","\u2976":"&ltlarr;","\u2a7b":"&ltquest;","\u2996":"&ltrPar;","\u25c3":"&triangleleft;","\u294a":"&lurdshar;","\u2966":"&luruhar;","\u2268\ufe00":"&lvnE;","\u223a":"&mDDot;","\xaf":"&strns;","\u2642":"&male;","\u2720":"&maltese;","\u25ae":"&marker;","\u2a29":"&mcomma;","\u043c":"&mcy;","\u2014":"&mdash;","\ud835\udd2a":"&mfr;","\u2127":"&mho;","\xb5":"&micro;","\u2af0":"&midcir;","\u2212":"&minus;","\u2a2a":"&minusdu;","\u2adb":"&mlcp;","\u22a7":"&models;","\ud835\udd5e":"&mopf;","\ud835\udcc2":"&mscr;","\u03bc":"&mu;","\u22b8":"&mumap;","\u22d9\u0338":"&nGg;","\u226b\u20d2":"&nGt;","\u21cd":"&nlArr;","\u21ce":"&nhArr;","\u22d8\u0338":"&nLl;","\u226a\u20d2":"&nLt;","\u21cf":"&nrArr;","\u22af":"&nVDash;","\u22ae":"&nVdash;","\u0144":"&nacute;","\u2220\u20d2":"&nang;","\u2a70\u0338":"&napE;","\u224b\u0338":"&napid;","\u0149":"&napos;","\u266e":"&natural;","\u2a43":"&ncap;","\u0148":"&ncaron;","\u0146":"&ncedil;","\u2a6d\u0338":"&ncongdot;","\u2a42":"&ncup;","\u043d":"&ncy;","\u2013":"&ndash;","\u21d7":"&neArr;","\u2924":"&nearhk;","\u2250\u0338":"&nedot;","\u2928":"&toea;","\ud835\udd2b":"&nfr;","\u21ae":"&nleftrightarrow;","\u2af2":"&nhpar;","\u22fc":"&nis;","\u22fa":"&nisd;","\u045a":"&njcy;","\u2266\u0338":"&nleqq;","\u219a":"&nleftarrow;","\u2025":"&nldr;","\ud835\udd5f":"&nopf;","\xac":"&not;","\u22f9\u0338":"&notinE;","\u22f5\u0338":"&notindot;","\u22f7":"&notinvb;","\u22f6":"&notinvc;","\u22fe":"&notnivb;","\u22fd":"&notnivc;","\u2afd\u20e5":"&nparsl;","\u2202\u0338":"&npart;","\u2a14":"&npolint;","\u219b":"&nrightarrow;","\u2933\u0338":"&nrarrc;","\u219d\u0338":"&nrarrw;","\ud835\udcc3":"&nscr;","\u2284":"&nsub;","\u2ac5\u0338":"&nsubseteqq;","\u2285":"&nsup;","\u2ac6\u0338":"&nsupseteqq;","\xf1":"&ntilde;","\u03bd":"&nu;","#":"&num;","\u2116":"&numero;","\u2007":"&numsp;","\u22ad":"&nvDash;","\u2904":"&nvHarr;","\u224d\u20d2":"&nvap;","\u22ac":"&nvdash;","\u2265\u20d2":"&nvge;",">\u20d2":"&nvgt;","\u29de":"&nvinfin;","\u2902":"&nvlArr;","\u2264\u20d2":"&nvle;","<\u20d2":"&nvlt;","\u22b4\u20d2":"&nvltrie;","\u2903":"&nvrArr;","\u22b5\u20d2":"&nvrtrie;","\u223c\u20d2":"&nvsim;","\u21d6":"&nwArr;","\u2923":"&nwarhk;","\u2927":"&nwnear;","\xf3":"&oacute;","\xf4":"&ocirc;","\u043e":"&ocy;","\u0151":"&odblac;","\u2a38":"&odiv;","\u29bc":"&odsold;","\u0153":"&oelig;","\u29bf":"&ofcir;","\ud835\udd2c":"&ofr;","\u02db":"&ogon;","\xf2":"&ograve;","\u29c1":"&ogt;","\u29b5":"&ohbar;","\u29be":"&olcir;","\u29bb":"&olcross;","\u29c0":"&olt;","\u014d":"&omacr;","\u03c9":"&omega;","\u03bf":"&omicron;","\u29b6":"&omid;","\ud835\udd60":"&oopf;","\u29b7":"&opar;","\u29b9":"&operp;","\u2228":"&vee;","\u2a5d":"&ord;","\u2134":"&oscr;","\xaa":"&ordf;","\xba":"&ordm;","\u22b6":"&origof;","\u2a56":"&oror;","\u2a57":"&orslope;","\u2a5b":"&orv;","\xf8":"&oslash;","\u2298":"&osol;","\xf5":"&otilde;","\u2a36":"&otimesas;","\xf6":"&ouml;","\u233d":"&ovbar;","\xb6":"&para;","\u2af3":"&parsim;","\u2afd":"&parsl;","\u043f":"&pcy;","%":"&percnt;",".":"&period;","\u2030":"&permil;","\u2031":"&pertenk;","\ud835\udd2d":"&pfr;","\u03c6":"&phi;","\u03d5":"&varphi;","\u260e":"&phone;","\u03c0":"&pi;","\u03d6":"&varpi;","\u210e":"&planckh;","+":"&plus;","\u2a23":"&plusacir;","\u2a22":"&pluscir;","\u2a25":"&plusdu;","\u2a72":"&pluse;","\u2a26":"&plussim;","\u2a27":"&plustwo;","\u2a15":"&pointint;","\ud835\udd61":"&popf;","\xa3":"&pound;","\u2ab3":"&prE;","\u2ab7":"&precapprox;","\u2ab9":"&prnap;","\u2ab5":"&prnE;","\u22e8":"&prnsim;","\u2032":"&prime;","\u232e":"&profalar;","\u2312":"&profline;","\u2313":"&profsurf;","\u22b0":"&prurel;","\ud835\udcc5":"&pscr;","\u03c8":"&psi;","\u2008":"&puncsp;","\ud835\udd2e":"&qfr;","\ud835\udd62":"&qopf;","\u2057":"&qprime;","\ud835\udcc6":"&qscr;","\u2a16":"&quatint;","?":"&quest;","\u291c":"&rAtail;","\u2964":"&rHar;","\u223d\u0331":"&race;","\u0155":"&racute;","\u29b3":"&raemptyv;","\u2992":"&rangd;","\u29a5":"&range;","\xbb":"&raquo;","\u2975":"&rarrap;","\u2920":"&rarrbfs;","\u2933":"&rarrc;","\u291e":"&rarrfs;","\u2945":"&rarrpl;","\u2974":"&rarrsim;","\u21a3":"&rightarrowtail;","\u219d":"&rightsquigarrow;","\u291a":"&ratail;","\u2236":"&ratio;","\u2773":"&rbbrk;","}":"&rcub;","]":"&rsqb;","\u298c":"&rbrke;","\u298e":"&rbrksld;","\u2990":"&rbrkslu;","\u0159":"&rcaron;","\u0157":"&rcedil;","\u0440":"&rcy;","\u2937":"&rdca;","\u2969":"&rdldhar;","\u21b3":"&rdsh;","\u25ad":"&rect;","\u297d":"&rfisht;","\ud835\udd2f":"&rfr;","\u296c":"&rharul;","\u03c1":"&rho;","\u03f1":"&varrho;","\u21c9":"&rrarr;","\u22cc":"&rthree;","\u02da":"&ring;","\u200f":"&rlm;","\u23b1":"&rmoustache;","\u2aee":"&rnmid;","\u27ed":"&roang;","\u21fe":"&roarr;","\u2986":"&ropar;","\ud835\udd63":"&ropf;","\u2a2e":"&roplus;","\u2a35":"&rotimes;",")":"&rpar;","\u2994":"&rpargt;","\u2a12":"&rppolint;","\u203a":"&rsaquo;","\ud835\udcc7":"&rscr;","\u22ca":"&rtimes;","\u25b9":"&triangleright;","\u29ce":"&rtriltri;","\u2968":"&ruluhar;","\u211e":"&rx;","\u015b":"&sacute;","\u2ab4":"&scE;","\u2ab8":"&succapprox;","\u0161":"&scaron;","\u015f":"&scedil;","\u015d":"&scirc;","\u2ab6":"&succneqq;","\u2aba":"&succnapprox;","\u22e9":"&succnsim;","\u2a13":"&scpolint;","\u0441":"&scy;","\u22c5":"&sdot;","\u2a66":"&sdote;","\u21d8":"&seArr;","\xa7":"&sect;",";":"&semi;","\u2929":"&tosa;","\u2736":"&sext;","\ud835\udd30":"&sfr;","\u266f":"&sharp;","\u0449":"&shchcy;","\u0448":"&shcy;","\xad":"&shy;","\u03c3":"&sigma;","\u03c2":"&varsigma;","\u2a6a":"&simdot;","\u2a9e":"&simg;","\u2aa0":"&simgE;","\u2a9d":"&siml;","\u2a9f":"&simlE;","\u2246":"&simne;","\u2a24":"&simplus;","\u2972":"&simrarr;","\u2a33":"&smashp;","\u29e4":"&smeparsl;","\u2323":"&ssmile;","\u2aaa":"&smt;","\u2aac":"&smte;","\u2aac\ufe00":"&smtes;","\u044c":"&softcy;","/":"&sol;","\u29c4":"&solb;","\u233f":"&solbar;","\ud835\udd64":"&sopf;","\u2660":"&spadesuit;","\u2293\ufe00":"&sqcaps;","\u2294\ufe00":"&sqcups;","\ud835\udcc8":"&sscr;","\u2606":"&star;","\u2282":"&subset;","\u2ac5":"&subseteqq;","\u2abd":"&subdot;","\u2ac3":"&subedot;","\u2ac1":"&submult;","\u2acb":"&subsetneqq;","\u228a":"&subsetneq;","\u2abf":"&subplus;","\u2979":"&subrarr;","\u2ac7":"&subsim;","\u2ad5":"&subsub;","\u2ad3":"&subsup;","\u266a":"&sung;","\xb9":"&sup1;","\xb2":"&sup2;","\xb3":"&sup3;","\u2ac6":"&supseteqq;","\u2abe":"&supdot;","\u2ad8":"&supdsub;","\u2ac4":"&supedot;","\u27c9":"&suphsol;","\u2ad7":"&suphsub;","\u297b":"&suplarr;","\u2ac2":"&supmult;","\u2acc":"&supsetneqq;","\u228b":"&supsetneq;","\u2ac0":"&supplus;","\u2ac8":"&supsim;","\u2ad4":"&supsub;","\u2ad6":"&supsup;","\u21d9":"&swArr;","\u292a":"&swnwar;","\xdf":"&szlig;","\u2316":"&target;","\u03c4":"&tau;","\u0165":"&tcaron;","\u0163":"&tcedil;","\u0442":"&tcy;","\u2315":"&telrec;","\ud835\udd31":"&tfr;","\u03b8":"&theta;","\u03d1":"&vartheta;","\xfe":"&thorn;","\xd7":"&times;","\u2a31":"&timesbar;","\u2a30":"&timesd;","\u2336":"&topbot;","\u2af1":"&topcir;","\ud835\udd65":"&topf;","\u2ada":"&topfork;","\u2034":"&tprime;","\u25b5":"&utri;","\u225c":"&trie;","\u25ec":"&tridot;","\u2a3a":"&triminus;","\u2a39":"&triplus;","\u29cd":"&trisb;","\u2a3b":"&tritime;","\u23e2":"&trpezium;","\ud835\udcc9":"&tscr;","\u0446":"&tscy;","\u045b":"&tshcy;","\u0167":"&tstrok;","\u2963":"&uHar;","\xfa":"&uacute;","\u045e":"&ubrcy;","\u016d":"&ubreve;","\xfb":"&ucirc;","\u0443":"&ucy;","\u0171":"&udblac;","\u297e":"&ufisht;","\ud835\udd32":"&ufr;","\xf9":"&ugrave;","\u2580":"&uhblk;","\u231c":"&ulcorner;","\u230f":"&ulcrop;","\u25f8":"&ultri;","\u016b":"&umacr;","\u0173":"&uogon;","\ud835\udd66":"&uopf;","\u03c5":"&upsilon;","\u21c8":"&uuarr;","\u231d":"&urcorner;","\u230e":"&urcrop;","\u016f":"&uring;","\u25f9":"&urtri;","\ud835\udcca":"&uscr;","\u22f0":"&utdot;","\u0169":"&utilde;","\xfc":"&uuml;","\u29a7":"&uwangle;","\u2ae8":"&vBar;","\u2ae9":"&vBarv;","\u299c":"&vangrt;","\u228a\ufe00":"&vsubne;","\u2acb\ufe00":"&vsubnE;","\u228b\ufe00":"&vsupne;","\u2acc\ufe00":"&vsupnE;","\u0432":"&vcy;","\u22bb":"&veebar;","\u225a":"&veeeq;","\u22ee":"&vellip;","\ud835\udd33":"&vfr;","\ud835\udd67":"&vopf;","\ud835\udccb":"&vscr;","\u299a":"&vzigzag;","\u0175":"&wcirc;","\u2a5f":"&wedbar;","\u2259":"&wedgeq;","\u2118":"&wp;","\ud835\udd34":"&wfr;","\ud835\udd68":"&wopf;","\ud835\udccc":"&wscr;","\ud835\udd35":"&xfr;","\u03be":"&xi;","\u22fb":"&xnis;","\ud835\udd69":"&xopf;","\ud835\udccd":"&xscr;","\xfd":"&yacute;","\u044f":"&yacy;","\u0177":"&ycirc;","\u044b":"&ycy;","\xa5":"&yen;","\ud835\udd36":"&yfr;","\u0457":"&yicy;","\ud835\udd6a":"&yopf;","\ud835\udcce":"&yscr;","\u044e":"&yucy;","\xff":"&yuml;","\u017a":"&zacute;","\u017e":"&zcaron;","\u0437":"&zcy;","\u017c":"&zdot;","\u03b6":"&zeta;","\ud835\udd37":"&zfr;","\u0436":"&zhcy;","\u21dd":"&zigrarr;","\ud835\udd6b":"&zopf;","\ud835\udccf":"&zscr;","\u200d":"&zwj;","\u200c":"&zwnj;"}}}},5397:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376}},7525:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fromCodePoint=String.fromCodePoint||function(e){return String.fromCharCode(Math.floor((e-65536)/1024)+55296,(e-65536)%1024+56320)},t.getCodePoint=String.prototype.codePointAt?function(e,t){return e.codePointAt(t)}:function(e,t){return 1024*(e.charCodeAt(t)-55296)+e.charCodeAt(t+1)-56320+65536},t.highSurrogateFrom=55296,t.highSurrogateTo=56319},6900:(e,t)=>{t.read=function(e,t,A,r,n){var s,i,o=8*n-r-1,a=(1<<o)-1,l=a>>1,u=-7,c=A?n-1:0,d=A?-1:1,f=e[t+c];for(c+=d,s=f&(1<<-u)-1,f>>=-u,u+=o;u>0;s=256*s+e[t+c],c+=d,u-=8);for(i=s&(1<<-u)-1,s>>=-u,u+=r;u>0;i=256*i+e[t+c],c+=d,u-=8);if(0===s)s=1-l;else{if(s===a)return i?NaN:1/0*(f?-1:1);i+=Math.pow(2,r),s-=l}return(f?-1:1)*i*Math.pow(2,s-r)},t.write=function(e,t,A,r,n,s){var i,o,a,l=8*s-n-1,u=(1<<l)-1,c=u>>1,d=23===n?Math.pow(2,-24)-Math.pow(2,-77):0,f=r?0:s-1,h=r?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,i=u):(i=Math.floor(Math.log(t)/Math.LN2),t*(a=Math.pow(2,-i))<1&&(i--,a*=2),(t+=i+c>=1?d/a:d*Math.pow(2,1-c))*a>=2&&(i++,a/=2),i+c>=u?(o=0,i=u):i+c>=1?(o=(t*a-1)*Math.pow(2,n),i+=c):(o=t*Math.pow(2,c-1)*Math.pow(2,n),i=0));n>=8;e[A+f]=255&o,f+=h,o/=256,n-=8);for(i=i<<n|o,l+=n;l>0;e[A+f]=255&i,f+=h,i/=256,l-=8);e[A+f-h]|=128*g}},2927:(e,t,A)=>{"use strict";t.qg=t.Z6=void 0;const r=A(4279);let n=!1;var s;!function(e){e[e.ELEMENT_NODE=1]="ELEMENT_NODE",e[e.TEXT_NODE=3]="TEXT_NODE",e[e.COMMENT_NODE=8]="COMMENT_NODE"}(s||(t.Z6=s={}));class i{constructor(){this.childNodes=[]}get text(){return(0,r.decode)(this.rawText)}remove(){return this.parentNode&&this.parentNode.removeChild(this),this}}class o extends i{constructor(e){super(),this.nodeType=s.TEXT_NODE,this.value=e}get rawText(){return this.value}get isWhitespace(){return/^(\s|&nbsp;)*$/.test(this.rawText)}toString(){return this.rawText}}class a extends i{constructor(e){super(),this.nodeType=s.COMMENT_NODE,this.value=e}get rawText(){return this.value}toString(){return`\x3c!--${this.rawText}--\x3e`}}const l={div:!0,p:!0,li:!0,td:!0,section:!0,br:!0};function u(e){return e[e.length-1]}class c extends i{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.tagName=e,this.rawAttrs=t,this.classNames=[],this.nodeType=s.ELEMENT_NODE,this.rawAttrs=t,this.parentNode=A,this.childNodes=[];let r={};for(let n;n=p.exec(t);)r[n[2]]=n[4]||n[5]||n[6];r.id&&(this.id=r.id),r.class&&(this.classNames=r.class.split(/\s+/))}removeChild(e){this.childNodes=this.childNodes.filter((t=>t!==e)),e instanceof c&&(e.parentNode=null)}exchangeChild(e,t){const A=this.childNodes.findIndex((t=>t===e));A>=0&&(this.childNodes[A]=t,e instanceof c&&(e.parentNode=null))}get rawText(){let e="";for(let t=0;t<this.childNodes.length;t++)e+=this.childNodes[t].rawText;return e}get structuredText(){let e=[];const t=[e];return function A(r){if(r.nodeType===s.ELEMENT_NODE)l[r.tagName]?(e.length>0&&t.push(e=[]),r.childNodes.forEach(A),e.length>0&&t.push(e=[])):r.childNodes.forEach(A);else if(r.nodeType===s.TEXT_NODE)if(r.isWhitespace)e.prependWhitespace=!0;else{let t=r.text;e.prependWhitespace&&(t=" "+t,e.prependWhitespace=!1),e.push(t)}}(this),t.map((function(e){return e.join("").trim().replace(/\s{2,}/g," ")})).join("\n").replace(/\s+$/,"")}get children(){return this.childNodes.filter((e=>e instanceof c))}toString(){const e=this.tagName;if(e){const t=/^(img|br|hr|area|base|input|doctype|link|meta)$/i.test(e),A=this.rawAttrs?" "+this.rawAttrs:"";return t?`<${e}${A} />`:`<${e}${A}>${this.innerHTML}</${e}>`}return this.innerHTML}get innerHTML(){return this.childNodes.map((e=>e.toString())).join("")}set innerHTML(e){const t=B(e);this.childNodes.forEach((e=>e.remove())),t.childNodes.forEach((e=>this.appendChild(e)))}set_content(e){if(e instanceof i)e=[e];else if("string"==typeof e){const t=B(e);e=t.childNodes.length?t.childNodes:[new o(e)]}this.childNodes=e}get outerHTML(){return this.toString()}trimRight(e){for(let t=0;t<this.childNodes.length;t++){const A=this.childNodes[t];if(A.nodeType===s.ELEMENT_NODE)A.trimRight(e);else{const r=A.rawText.search(e);r>-1&&(A.value=A.rawText.substr(0,r),this.childNodes.length=t+1)}}return this}get structure(){const e=[];let t=0;function A(A){e.push("  ".repeat(t)+A)}return function e(r){const n=r.id?"#"+r.id:"",i=r.classNames.length?"."+r.classNames.join("."):"";A(r.tagName+n+i),t++;for(let t=0;t<r.childNodes.length;t++){const n=r.childNodes[t];n.nodeType===s.ELEMENT_NODE?e(n):n.nodeType===s.TEXT_NODE&&(n.isWhitespace||A("#text"))}t--}(this),e.join("\n")}removeWhitespace(){let e=0;for(let t=0;t<this.childNodes.length;t++){const A=this.childNodes[t];if(A.nodeType===s.TEXT_NODE){if(A.isWhitespace)continue;A.value=A.rawText.trim()}else A.nodeType===s.ELEMENT_NODE&&A.removeWhitespace();this.childNodes[e++]=A}return this.childNodes.length=e,this}querySelectorAll(e){if(!(e instanceof h)){if(e.includes(",")){const t=e.split(","),A=new Set(t.map((e=>this.querySelectorAll(e.trim()))).flat());return Array.from(A)}return this.querySelectorAll(new h(e))}const t=e,A=new Set,r=[];for(this.childNodes.forEach((e=>r.push(e)));r.length>0;){const e=r.shift();e.nodeType===s.ELEMENT_NODE&&(t.advance(e)&&t.matched&&(A.add(e),t.rewind()),e.childNodes.forEach((e=>{r.push(e)})))}return Array.from(A)}querySelector(e){let t;e instanceof h?(t=e,t.reset()):t=new h(e);const A=[];for(let r=0;r<this.childNodes.length;r++)for(A.push([this.childNodes[r],0,!1]);A.length;){const e=u(A),r=e[0];if(0===e[1]){if(r.nodeType!==s.ELEMENT_NODE){A.pop();continue}if((e[2]=t.advance(r))&&t.matched)return r}e[1]<r.childNodes.length?A.push([r.childNodes[e[1]++],0,!1]):(e[2]&&t.rewind(),A.pop())}return null}appendChild(e){return this.childNodes.push(e),e instanceof c&&(e.parentNode=this),e}prependChild(e){return this.childNodes.unshift(e),e instanceof c&&(e.parentNode=this),e}get firstChild(){return this.childNodes[0]}get lastChild(){return u(this.childNodes)}get attributes(){if(this._attrs)return this._attrs;this._attrs={};const e=this.rawAttributes;for(const t in e)this._attrs[t]=(0,r.decode)(e[t]);return this._attrs}get rawAttributes(){if(this._rawAttrs)return this._rawAttrs;const e={};if(this.rawAttrs){let t;for(;t=b.exec(this.rawAttrs);)e[t[1]]=t[4]||t[5]||t[6]||""}return this._rawAttrs=e,e}setAttribute(e,t){"id"===e?this.id=t:"class"===e&&(this.classNames=t.split(/\s+/));const A=this.attributes;void 0===t?delete A[e]:A[e]=t+"",this._rawAttrs&&(void 0===t?delete this._rawAttrs[e]:this._rawAttrs[e]=(0,r.encode)(t+"")),this.rawAttrs=Object.keys(A).map((e=>e+(""===A[e]?"":'="'+(0,r.encode)(A[e])+'"'))).join(" ")}removeAttribute(e){this.setAttribute(e,void 0)}setAttributes(e){e.id?this.id=e.id:e.class&&(this.classNames=e.class.split(/\s+/)),this.attributes&&(Object.keys(this.attributes).forEach((e=>delete this.attributes[e])),Object.keys(e).forEach((t=>this.attributes[t]=e[t]+""))),this.rawAttributes&&(Object.keys(this.rawAttributes).forEach((e=>delete this.rawAttributes[e])),Object.keys(e).forEach((t=>this.rawAttributes[t]=(0,r.encode)(e[t]+"")))),this.rawAttrs=Object.keys(e).map((t=>t+(""===e[t]?"":'="'+(0,r.encode)(e[t]+"")+'"'))).join(" ")}}let d={};const f={f145:function(e,t,A,r,n){if(t=t||"",A=A||[],r=r||"",n=n||"",e.id!=t.substr(1))return!1;for(let s=A,i=0;i<s.length;i++)if(-1===e.classNames.indexOf(s[i]))return!1;return!0},f45:function(e,t,A,r,n){t=t||"",r=r||"",n=n||"";for(let s=A=A||[],i=0;i<s.length;i++)if(-1===e.classNames.indexOf(s[i]))return!1;return!0},f15:function(e,t,A,r,n){return t=t||"",A=A||[],r=r||"",n=n||"",e.id==t.substr(1)},f1:function(e,t,A,r,n){if(t=t||"",A=A||[],r=r||"",n=n||"",e.id!=t.substr(1))return!1},f5:function(e,t,A,r,n){return e=e||{},t=t||"",A=A||[],r=r||"",n=n||"",!0},f245:function(e,t,A,r,n){t=t||"",A=A||[],r=r||"",n=n||"";let s=e.attributes;for(let i in s){const e=s[i];if(i==r&&e==n)return!0}return!1},f25:function(e,t,A,r,n){t=t||"",A=A||[],r=r||"",n=n||"";let s=e.attributes;for(let i in s){const e=s[i];if(i==r&&e==n)return!0}return!1},f2:function(e,t,A,r,n){t=t||"",A=A||[],r=r||"",n=n||"";let s=e.attributes;for(let i in s){const e=s[i];if(i==r&&e==n)return!0}return!1},f345:function(e,t,A,r,n){if(t=t||"",A=A||[],r=r||"",n=n||"",e.tagName!=t)return!1;for(let s=A,i=0;i<s.length;i++)if(-1===e.classNames.indexOf(s[i]))return!1;return!0},f35:function(e,t,A,r,n){return t=t||"",A=A||[],r=r||"",n=n||"",e.tagName==t},f3:function(e,t,A,r,n){if(t=t||"",A=A||[],r=r||"",n=n||"",e.tagName!=t)return!1}};class h{constructor(e){this.nextMatch=0,f.f5=f.f5,this.matchers=e.split(" ").map((e=>{if(d[e])return d[e];const t=e.split("."),A=t[0],r=t.slice(1).sort();let n='"use strict";',s="f",i="",o="";if(A&&"*"!=A){let e;if("#"==A[0])n+="if (el.id != "+JSON.stringify(A.substr(1))+") return false;",s+="1";else if(e=A.match(/^\[\s*(\S+)\s*(=|!=)\s*((((["'])([^\6]*)\6))|(\S*?))\]\s*/)){i=e[1];let t=e[2];if("="!==t&&"!="!==t)throw new Error("Selector not supported, Expect [key${op}value].op must be =,!=");"="===t&&(t="=="),o=e[7]||e[8],n+=`let attrs = el.attributes;for (let key in attrs){const val = attrs[key]; if (key == "${i}" && val == "${o}"){return true;}} return false;`,s+="2"}else n+="if (el.tagName != "+JSON.stringify(A)+") return false;",s+="3"}r.length>0&&(n+="for (let cls = "+JSON.stringify(r)+", i = 0; i < cls.length; i++) if (el.classNames.indexOf(cls[i]) === -1) return false;",s+="4"),n+="return true;",s+="5";let a={func:f[s],tagName:A||"",classes:r||"",attr_key:i||"",value:o||""};return n=n||"",d[e]=a}))}advance(e){return!!(this.nextMatch<this.matchers.length&&this.matchers[this.nextMatch].func(e,this.matchers[this.nextMatch].tagName,this.matchers[this.nextMatch].classes,this.matchers[this.nextMatch].attr_key,this.matchers[this.nextMatch].value))&&(this.nextMatch++,!0)}rewind(){this.nextMatch--}get matched(){return this.nextMatch==this.matchers.length}reset(){this.nextMatch=0}flushCache(){d={}}}const g=/<!--[^]*?(?=-->)-->|<(\/?)([a-z][-.:0-9_a-z]*)((\s+[a-z][-.:0-9_a-z]*(\s*=\s*("[^"]*"|'([^']*')|([^\s\/>]+)))?)*)\s*(\/?)>/gi,p=/(^|\s)(id|class)\s*=\s*("([^"]+)"|'([^']+)'|(\S+))/gi,b=/([a-z][-.:0-9_a-z]*)(\s*=\s*("([^"]*)"|'([^']*)'|(\S+)))?/gi,m={area:!0,base:!0,br:!0,col:!0,hr:!0,img:!0,input:!0,link:!0,meta:!0,source:!0},v={li:{li:!0},p:{p:!0,div:!0},b:{div:!0},td:{td:!0,th:!0},th:{td:!0,th:!0},h1:{h1:!0},h2:{h2:!0},h3:{h3:!0},h4:{h4:!0},h5:{h5:!0},h6:{h6:!0}},y={li:{ul:!0,ol:!0},a:{div:!0},b:{div:!0},i:{div:!0},p:{div:!0},td:{tr:!0,table:!0},th:{tr:!0,table:!0}},w={script:!0,noscript:!0,style:!0,pre:!0};function B(e,t){const A=new c(null);let r=A;const s=[A];let i,l=0;for(t=t||{};i=g.exec(e);){if(l+i[0].length<g.lastIndex){const t=e.substring(l,g.lastIndex-i[0].length);n,r.appendChild(new o(t))}if(l=g.lastIndex,"!"!=i[0][1]){if(t.lowerCaseTagName&&(i[2]=i[2].toLowerCase()),!i[1]&&(!i[9]&&v[r.tagName]&&v[r.tagName][i[2]]&&(s.pop(),r=u(s)),r=r.appendChild(new c(i[2],i[3].trim())),s.push(r),w[i[2]])){let A="</"+i[2]+">",n=e.indexOf(A,g.lastIndex);if(t[i[2]]){let t;t=-1==n?e.substr(g.lastIndex):e.substring(g.lastIndex,n),t.length>0&&r.appendChild(new o(t))}-1==n?l=g.lastIndex=e.length+1:(l=g.lastIndex=n+A.length,i[1]="true")}if(i[1]||i[9]||m[i[2]])for(;;){if(r.tagName==i[2]){n,s.pop(),r=u(s);break}if(!y[r.tagName]||!y[r.tagName][i[2]])break;s.pop(),r=u(s)}}else if(t.comment){const t=e.substring(l-3,l-i[0].length+4);n,r.appendChild(new a(t))}}for(l<e.length&&A.appendChild(new o(e.substring(l))),A.valid=1===s.length;s.length>1;){const e=s.pop(),t=u(s);e.parentNode&&e.parentNode instanceof c&&e.parentNode.parentNode&&(e.parentNode===t&&e.tagName===t.tagName?(t.removeChild(e),e.childNodes.forEach((e=>{t.parentNode.appendChild(e)})),s.pop()):(t.removeChild(e),e.childNodes.forEach((e=>{t.appendChild(e)}))))}return A}t.qg=B;const x=["html","body","address","article","aside","blockquote","canvas","dd","div","dl","dt","fieldset","figcaption","figure","footer","form","header","hr","li","main","nav","noscript","ol","p","pre","section","tfoot","table","tbody","ul","video","th","td","tr","h1","h2","h3","h4","h5","h6"]},7717:(e,t,A)=>{"use strict";var r={};(0,A(5886).assign)(r,A(3706),A(898),A(4266)),e.exports=r},3706:(e,t,A)=>{"use strict";var r=A(9140),n=A(5886),s=A(7813),i=A(8135),o=A(301),a=Object.prototype.toString,l=0,u=-1,c=0,d=8;function f(e){if(!(this instanceof f))return new f(e);this.options=n.assign({level:u,method:d,chunkSize:16384,windowBits:15,memLevel:8,strategy:c,to:""},e||{});var t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new o,this.strm.avail_out=0;var A=r.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(A!==l)throw new Error(i[A]);if(t.header&&r.deflateSetHeader(this.strm,t.header),t.dictionary){var h;if(h="string"===typeof t.dictionary?s.string2buf(t.dictionary):"[object ArrayBuffer]"===a.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,(A=r.deflateSetDictionary(this.strm,h))!==l)throw new Error(i[A]);this._dict_set=!0}}function h(e,t){var A=new f(t);if(A.push(e,!0),A.err)throw A.msg||i[A.err];return A.result}f.prototype.push=function(e,t){var A,i,o=this.strm,u=this.options.chunkSize;if(this.ended)return!1;i=t===~~t?t:!0===t?4:0,"string"===typeof e?o.input=s.string2buf(e):"[object ArrayBuffer]"===a.call(e)?o.input=new Uint8Array(e):o.input=e,o.next_in=0,o.avail_in=o.input.length;do{if(0===o.avail_out&&(o.output=new n.Buf8(u),o.next_out=0,o.avail_out=u),1!==(A=r.deflate(o,i))&&A!==l)return this.onEnd(A),this.ended=!0,!1;0!==o.avail_out&&(0!==o.avail_in||4!==i&&2!==i)||("string"===this.options.to?this.onData(s.buf2binstring(n.shrinkBuf(o.output,o.next_out))):this.onData(n.shrinkBuf(o.output,o.next_out)))}while((o.avail_in>0||0===o.avail_out)&&1!==A);return 4===i?(A=r.deflateEnd(this.strm),this.onEnd(A),this.ended=!0,A===l):2!==i||(this.onEnd(l),o.avail_out=0,!0)},f.prototype.onData=function(e){this.chunks.push(e)},f.prototype.onEnd=function(e){e===l&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=n.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},t.Deflate=f,t.deflate=h,t.deflateRaw=function(e,t){return(t=t||{}).raw=!0,h(e,t)},t.gzip=function(e,t){return(t=t||{}).gzip=!0,h(e,t)}},898:(e,t,A)=>{"use strict";var r=A(5960),n=A(5886),s=A(7813),i=A(4266),o=A(8135),a=A(301),l=A(4251),u=Object.prototype.toString;function c(e){if(!(this instanceof c))return new c(e);this.options=n.assign({chunkSize:16384,windowBits:0,to:""},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0===(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new a,this.strm.avail_out=0;var A=r.inflateInit2(this.strm,t.windowBits);if(A!==i.Z_OK)throw new Error(o[A]);if(this.header=new l,r.inflateGetHeader(this.strm,this.header),t.dictionary&&("string"===typeof t.dictionary?t.dictionary=s.string2buf(t.dictionary):"[object ArrayBuffer]"===u.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(A=r.inflateSetDictionary(this.strm,t.dictionary))!==i.Z_OK))throw new Error(o[A])}function d(e,t){var A=new c(t);if(A.push(e,!0),A.err)throw A.msg||o[A.err];return A.result}c.prototype.push=function(e,t){var A,o,a,l,c,d=this.strm,f=this.options.chunkSize,h=this.options.dictionary,g=!1;if(this.ended)return!1;o=t===~~t?t:!0===t?i.Z_FINISH:i.Z_NO_FLUSH,"string"===typeof e?d.input=s.binstring2buf(e):"[object ArrayBuffer]"===u.call(e)?d.input=new Uint8Array(e):d.input=e,d.next_in=0,d.avail_in=d.input.length;do{if(0===d.avail_out&&(d.output=new n.Buf8(f),d.next_out=0,d.avail_out=f),(A=r.inflate(d,i.Z_NO_FLUSH))===i.Z_NEED_DICT&&h&&(A=r.inflateSetDictionary(this.strm,h)),A===i.Z_BUF_ERROR&&!0===g&&(A=i.Z_OK,g=!1),A!==i.Z_STREAM_END&&A!==i.Z_OK)return this.onEnd(A),this.ended=!0,!1;d.next_out&&(0!==d.avail_out&&A!==i.Z_STREAM_END&&(0!==d.avail_in||o!==i.Z_FINISH&&o!==i.Z_SYNC_FLUSH)||("string"===this.options.to?(a=s.utf8border(d.output,d.next_out),l=d.next_out-a,c=s.buf2string(d.output,a),d.next_out=l,d.avail_out=f-l,l&&n.arraySet(d.output,d.output,a,l,0),this.onData(c)):this.onData(n.shrinkBuf(d.output,d.next_out)))),0===d.avail_in&&0===d.avail_out&&(g=!0)}while((d.avail_in>0||0===d.avail_out)&&A!==i.Z_STREAM_END);return A===i.Z_STREAM_END&&(o=i.Z_FINISH),o===i.Z_FINISH?(A=r.inflateEnd(this.strm),this.onEnd(A),this.ended=!0,A===i.Z_OK):o!==i.Z_SYNC_FLUSH||(this.onEnd(i.Z_OK),d.avail_out=0,!0)},c.prototype.onData=function(e){this.chunks.push(e)},c.prototype.onEnd=function(e){e===i.Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=n.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},t.Inflate=c,t.inflate=d,t.inflateRaw=function(e,t){return(t=t||{}).raw=!0,d(e,t)},t.ungzip=d},5886:(e,t)=>{"use strict";var A="undefined"!==typeof Uint8Array&&"undefined"!==typeof Uint16Array&&"undefined"!==typeof Int32Array;function r(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var A=t.shift();if(A){if("object"!==typeof A)throw new TypeError(A+"must be non-object");for(var n in A)r(A,n)&&(e[n]=A[n])}}return e},t.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var n={arraySet:function(e,t,A,r,n){if(t.subarray&&e.subarray)e.set(t.subarray(A,A+r),n);else for(var s=0;s<r;s++)e[n+s]=t[A+s]},flattenChunks:function(e){var t,A,r,n,s,i;for(r=0,t=0,A=e.length;t<A;t++)r+=e[t].length;for(i=new Uint8Array(r),n=0,t=0,A=e.length;t<A;t++)s=e[t],i.set(s,n),n+=s.length;return i}},s={arraySet:function(e,t,A,r,n){for(var s=0;s<r;s++)e[n+s]=t[A+s]},flattenChunks:function(e){return[].concat.apply([],e)}};t.setTyped=function(e){e?(t.Buf8=Uint8Array,t.Buf16=Uint16Array,t.Buf32=Int32Array,t.assign(t,n)):(t.Buf8=Array,t.Buf16=Array,t.Buf32=Array,t.assign(t,s))},t.setTyped(A)},7813:(e,t,A)=>{"use strict";var r=A(5886),n=!0,s=!0;try{String.fromCharCode.apply(null,[0])}catch(l){n=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(l){s=!1}for(var i=new r.Buf8(256),o=0;o<256;o++)i[o]=o>=252?6:o>=248?5:o>=240?4:o>=224?3:o>=192?2:1;function a(e,t){if(t<65534&&(e.subarray&&s||!e.subarray&&n))return String.fromCharCode.apply(null,r.shrinkBuf(e,t));for(var A="",i=0;i<t;i++)A+=String.fromCharCode(e[i]);return A}i[254]=i[254]=1,t.string2buf=function(e){var t,A,n,s,i,o=e.length,a=0;for(s=0;s<o;s++)55296===(64512&(A=e.charCodeAt(s)))&&s+1<o&&56320===(64512&(n=e.charCodeAt(s+1)))&&(A=65536+(A-55296<<10)+(n-56320),s++),a+=A<128?1:A<2048?2:A<65536?3:4;for(t=new r.Buf8(a),i=0,s=0;i<a;s++)55296===(64512&(A=e.charCodeAt(s)))&&s+1<o&&56320===(64512&(n=e.charCodeAt(s+1)))&&(A=65536+(A-55296<<10)+(n-56320),s++),A<128?t[i++]=A:A<2048?(t[i++]=192|A>>>6,t[i++]=128|63&A):A<65536?(t[i++]=224|A>>>12,t[i++]=128|A>>>6&63,t[i++]=128|63&A):(t[i++]=240|A>>>18,t[i++]=128|A>>>12&63,t[i++]=128|A>>>6&63,t[i++]=128|63&A);return t},t.buf2binstring=function(e){return a(e,e.length)},t.binstring2buf=function(e){for(var t=new r.Buf8(e.length),A=0,n=t.length;A<n;A++)t[A]=e.charCodeAt(A);return t},t.buf2string=function(e,t){var A,r,n,s,o=t||e.length,l=new Array(2*o);for(r=0,A=0;A<o;)if((n=e[A++])<128)l[r++]=n;else if((s=i[n])>4)l[r++]=65533,A+=s-1;else{for(n&=2===s?31:3===s?15:7;s>1&&A<o;)n=n<<6|63&e[A++],s--;s>1?l[r++]=65533:n<65536?l[r++]=n:(n-=65536,l[r++]=55296|n>>10&1023,l[r++]=56320|1023&n)}return a(l,r)},t.utf8border=function(e,t){var A;for((t=t||e.length)>e.length&&(t=e.length),A=t-1;A>=0&&128===(192&e[A]);)A--;return A<0||0===A?t:A+i[e[A]]>t?A:t}},8374:e=>{"use strict";e.exports=function(e,t,A,r){for(var n=65535&e,s=e>>>16&65535,i=0;0!==A;){A-=i=A>2e3?2e3:A;do{s=s+(n=n+t[r++]|0)|0}while(--i);n%=65521,s%=65521}return n|s<<16}},4266:e=>{"use strict";e.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},5592:e=>{"use strict";var t=function(){for(var e,t=[],A=0;A<256;A++){e=A;for(var r=0;r<8;r++)e=1&e?3988292384^e>>>1:e>>>1;t[A]=e}return t}();e.exports=function(e,A,r,n){var s=t,i=n+r;e^=-1;for(var o=n;o<i;o++)e=e>>>8^s[255&(e^A[o])];return~e}},9140:(e,t,A)=>{"use strict";var r,n=A(5886),s=A(3422),i=A(8374),o=A(5592),a=A(8135),l=0,u=4,c=0,d=-2,f=-1,h=4,g=2,p=8,b=9,m=286,v=30,y=19,w=2*m+1,B=15,x=3,C=258,E=C+x+1,N=42,D=103,Q=113,P=666,I=1,L=2,k=3,G=4;function F(e,t){return e.msg=a[t],t}function S(e){return(e<<1)-(e>4?9:0)}function W(e){for(var t=e.length;--t>=0;)e[t]=0}function Z(e){var t=e.state,A=t.pending;A>e.avail_out&&(A=e.avail_out),0!==A&&(n.arraySet(e.output,t.pending_buf,t.pending_out,A,e.next_out),e.next_out+=A,t.pending_out+=A,e.total_out+=A,e.avail_out-=A,t.pending-=A,0===t.pending&&(t.pending_out=0))}function X(e,t){s._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,Z(e.strm)}function M(e,t){e.pending_buf[e.pending++]=t}function z(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t}function R(e,t,A,r){var s=e.avail_in;return s>r&&(s=r),0===s?0:(e.avail_in-=s,n.arraySet(t,e.input,e.next_in,s,A),1===e.state.wrap?e.adler=i(e.adler,t,s,A):2===e.state.wrap&&(e.adler=o(e.adler,t,s,A)),e.next_in+=s,e.total_in+=s,s)}function j(e,t){var A,r,n=e.max_chain_length,s=e.strstart,i=e.prev_length,o=e.nice_match,a=e.strstart>e.w_size-E?e.strstart-(e.w_size-E):0,l=e.window,u=e.w_mask,c=e.prev,d=e.strstart+C,f=l[s+i-1],h=l[s+i];e.prev_length>=e.good_match&&(n>>=2),o>e.lookahead&&(o=e.lookahead);do{if(l[(A=t)+i]===h&&l[A+i-1]===f&&l[A]===l[s]&&l[++A]===l[s+1]){s+=2,A++;do{}while(l[++s]===l[++A]&&l[++s]===l[++A]&&l[++s]===l[++A]&&l[++s]===l[++A]&&l[++s]===l[++A]&&l[++s]===l[++A]&&l[++s]===l[++A]&&l[++s]===l[++A]&&s<d);if(r=C-(d-s),s=d-C,r>i){if(e.match_start=t,i=r,r>=o)break;f=l[s+i-1],h=l[s+i]}}}while((t=c[t&u])>a&&0!==--n);return i<=e.lookahead?i:e.lookahead}function T(e){var t,A,r,s,i,o=e.w_size;do{if(s=e.window_size-e.lookahead-e.strstart,e.strstart>=o+(o-E)){n.arraySet(e.window,e.window,o,o,0),e.match_start-=o,e.strstart-=o,e.block_start-=o,t=A=e.hash_size;do{r=e.head[--t],e.head[t]=r>=o?r-o:0}while(--A);t=A=o;do{r=e.prev[--t],e.prev[t]=r>=o?r-o:0}while(--A);s+=o}if(0===e.strm.avail_in)break;if(A=R(e.strm,e.window,e.strstart+e.lookahead,s),e.lookahead+=A,e.lookahead+e.insert>=x)for(i=e.strstart-e.insert,e.ins_h=e.window[i],e.ins_h=(e.ins_h<<e.hash_shift^e.window[i+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[i+x-1])&e.hash_mask,e.prev[i&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=i,i++,e.insert--,!(e.lookahead+e.insert<x)););}while(e.lookahead<E&&0!==e.strm.avail_in)}function U(e,t){for(var A,r;;){if(e.lookahead<E){if(T(e),e.lookahead<E&&t===l)return I;if(0===e.lookahead)break}if(A=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,A=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==A&&e.strstart-A<=e.w_size-E&&(e.match_length=j(e,A)),e.match_length>=x)if(r=s._tr_tally(e,e.strstart-e.match_start,e.match_length-x),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=x){e.match_length--;do{e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,A=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!==--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else r=s._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(X(e,!1),0===e.strm.avail_out))return I}return e.insert=e.strstart<x-1?e.strstart:x-1,t===u?(X(e,!0),0===e.strm.avail_out?k:G):e.last_lit&&(X(e,!1),0===e.strm.avail_out)?I:L}function V(e,t){for(var A,r,n;;){if(e.lookahead<E){if(T(e),e.lookahead<E&&t===l)return I;if(0===e.lookahead)break}if(A=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,A=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=x-1,0!==A&&e.prev_length<e.max_lazy_match&&e.strstart-A<=e.w_size-E&&(e.match_length=j(e,A),e.match_length<=5&&(1===e.strategy||e.match_length===x&&e.strstart-e.match_start>4096)&&(e.match_length=x-1)),e.prev_length>=x&&e.match_length<=e.prev_length){n=e.strstart+e.lookahead-x,r=s._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-x),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=n&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,A=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!==--e.prev_length);if(e.match_available=0,e.match_length=x-1,e.strstart++,r&&(X(e,!1),0===e.strm.avail_out))return I}else if(e.match_available){if((r=s._tr_tally(e,0,e.window[e.strstart-1]))&&X(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return I}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=s._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<x-1?e.strstart:x-1,t===u?(X(e,!0),0===e.strm.avail_out?k:G):e.last_lit&&(X(e,!1),0===e.strm.avail_out)?I:L}function O(e,t,A,r,n){this.good_length=e,this.max_lazy=t,this.nice_length=A,this.max_chain=r,this.func=n}function Y(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=p,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new n.Buf16(2*w),this.dyn_dtree=new n.Buf16(2*(2*v+1)),this.bl_tree=new n.Buf16(2*(2*y+1)),W(this.dyn_ltree),W(this.dyn_dtree),W(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new n.Buf16(B+1),this.heap=new n.Buf16(2*m+1),W(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new n.Buf16(2*m+1),W(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function H(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=g,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?N:Q,e.adler=2===t.wrap?0:1,t.last_flush=l,s._tr_init(t),c):F(e,d)}function K(e){var t,A=H(e);return A===c&&((t=e.state).window_size=2*t.w_size,W(t.head),t.max_lazy_match=r[t.level].max_lazy,t.good_match=r[t.level].good_length,t.nice_match=r[t.level].nice_length,t.max_chain_length=r[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=x-1,t.match_available=0,t.ins_h=0),A}function q(e,t,A,r,s,i){if(!e)return d;var o=1;if(t===f&&(t=6),r<0?(o=0,r=-r):r>15&&(o=2,r-=16),s<1||s>b||A!==p||r<8||r>15||t<0||t>9||i<0||i>h)return F(e,d);8===r&&(r=9);var a=new Y;return e.state=a,a.strm=e,a.wrap=o,a.gzhead=null,a.w_bits=r,a.w_size=1<<a.w_bits,a.w_mask=a.w_size-1,a.hash_bits=s+7,a.hash_size=1<<a.hash_bits,a.hash_mask=a.hash_size-1,a.hash_shift=~~((a.hash_bits+x-1)/x),a.window=new n.Buf8(2*a.w_size),a.head=new n.Buf16(a.hash_size),a.prev=new n.Buf16(a.w_size),a.lit_bufsize=1<<s+6,a.pending_buf_size=4*a.lit_bufsize,a.pending_buf=new n.Buf8(a.pending_buf_size),a.d_buf=1*a.lit_bufsize,a.l_buf=3*a.lit_bufsize,a.level=t,a.strategy=i,a.method=A,K(e)}r=[new O(0,0,0,0,(function(e,t){var A=65535;for(A>e.pending_buf_size-5&&(A=e.pending_buf_size-5);;){if(e.lookahead<=1){if(T(e),0===e.lookahead&&t===l)return I;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var r=e.block_start+A;if((0===e.strstart||e.strstart>=r)&&(e.lookahead=e.strstart-r,e.strstart=r,X(e,!1),0===e.strm.avail_out))return I;if(e.strstart-e.block_start>=e.w_size-E&&(X(e,!1),0===e.strm.avail_out))return I}return e.insert=0,t===u?(X(e,!0),0===e.strm.avail_out?k:G):(e.strstart>e.block_start&&(X(e,!1),e.strm.avail_out),I)})),new O(4,4,8,4,U),new O(4,5,16,8,U),new O(4,6,32,32,U),new O(4,4,16,16,V),new O(8,16,32,32,V),new O(8,16,128,128,V),new O(8,32,128,256,V),new O(32,128,258,1024,V),new O(32,258,258,4096,V)],t.deflateInit=function(e,t){return q(e,t,p,15,8,0)},t.deflateInit2=q,t.deflateReset=K,t.deflateResetKeep=H,t.deflateSetHeader=function(e,t){return e&&e.state?2!==e.state.wrap?d:(e.state.gzhead=t,c):d},t.deflate=function(e,t){var A,n,i,a;if(!e||!e.state||t>5||t<0)return e?F(e,d):d;if(n=e.state,!e.output||!e.input&&0!==e.avail_in||n.status===P&&t!==u)return F(e,0===e.avail_out?-5:d);if(n.strm=e,A=n.last_flush,n.last_flush=t,n.status===N)if(2===n.wrap)e.adler=0,M(n,31),M(n,139),M(n,8),n.gzhead?(M(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),M(n,255&n.gzhead.time),M(n,n.gzhead.time>>8&255),M(n,n.gzhead.time>>16&255),M(n,n.gzhead.time>>24&255),M(n,9===n.level?2:n.strategy>=2||n.level<2?4:0),M(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(M(n,255&n.gzhead.extra.length),M(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(e.adler=o(e.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=69):(M(n,0),M(n,0),M(n,0),M(n,0),M(n,0),M(n,9===n.level?2:n.strategy>=2||n.level<2?4:0),M(n,3),n.status=Q);else{var f=p+(n.w_bits-8<<4)<<8;f|=(n.strategy>=2||n.level<2?0:n.level<6?1:6===n.level?2:3)<<6,0!==n.strstart&&(f|=32),f+=31-f%31,n.status=Q,z(n,f),0!==n.strstart&&(z(n,e.adler>>>16),z(n,65535&e.adler)),e.adler=1}if(69===n.status)if(n.gzhead.extra){for(i=n.pending;n.gzindex<(65535&n.gzhead.extra.length)&&(n.pending!==n.pending_buf_size||(n.gzhead.hcrc&&n.pending>i&&(e.adler=o(e.adler,n.pending_buf,n.pending-i,i)),Z(e),i=n.pending,n.pending!==n.pending_buf_size));)M(n,255&n.gzhead.extra[n.gzindex]),n.gzindex++;n.gzhead.hcrc&&n.pending>i&&(e.adler=o(e.adler,n.pending_buf,n.pending-i,i)),n.gzindex===n.gzhead.extra.length&&(n.gzindex=0,n.status=73)}else n.status=73;if(73===n.status)if(n.gzhead.name){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=o(e.adler,n.pending_buf,n.pending-i,i)),Z(e),i=n.pending,n.pending===n.pending_buf_size)){a=1;break}a=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,M(n,a)}while(0!==a);n.gzhead.hcrc&&n.pending>i&&(e.adler=o(e.adler,n.pending_buf,n.pending-i,i)),0===a&&(n.gzindex=0,n.status=91)}else n.status=91;if(91===n.status)if(n.gzhead.comment){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=o(e.adler,n.pending_buf,n.pending-i,i)),Z(e),i=n.pending,n.pending===n.pending_buf_size)){a=1;break}a=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,M(n,a)}while(0!==a);n.gzhead.hcrc&&n.pending>i&&(e.adler=o(e.adler,n.pending_buf,n.pending-i,i)),0===a&&(n.status=D)}else n.status=D;if(n.status===D&&(n.gzhead.hcrc?(n.pending+2>n.pending_buf_size&&Z(e),n.pending+2<=n.pending_buf_size&&(M(n,255&e.adler),M(n,e.adler>>8&255),e.adler=0,n.status=Q)):n.status=Q),0!==n.pending){if(Z(e),0===e.avail_out)return n.last_flush=-1,c}else if(0===e.avail_in&&S(t)<=S(A)&&t!==u)return F(e,-5);if(n.status===P&&0!==e.avail_in)return F(e,-5);if(0!==e.avail_in||0!==n.lookahead||t!==l&&n.status!==P){var h=2===n.strategy?function(e,t){for(var A;;){if(0===e.lookahead&&(T(e),0===e.lookahead)){if(t===l)return I;break}if(e.match_length=0,A=s._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,A&&(X(e,!1),0===e.strm.avail_out))return I}return e.insert=0,t===u?(X(e,!0),0===e.strm.avail_out?k:G):e.last_lit&&(X(e,!1),0===e.strm.avail_out)?I:L}(n,t):3===n.strategy?function(e,t){for(var A,r,n,i,o=e.window;;){if(e.lookahead<=C){if(T(e),e.lookahead<=C&&t===l)return I;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=x&&e.strstart>0&&(r=o[n=e.strstart-1])===o[++n]&&r===o[++n]&&r===o[++n]){i=e.strstart+C;do{}while(r===o[++n]&&r===o[++n]&&r===o[++n]&&r===o[++n]&&r===o[++n]&&r===o[++n]&&r===o[++n]&&r===o[++n]&&n<i);e.match_length=C-(i-n),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=x?(A=s._tr_tally(e,1,e.match_length-x),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(A=s._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),A&&(X(e,!1),0===e.strm.avail_out))return I}return e.insert=0,t===u?(X(e,!0),0===e.strm.avail_out?k:G):e.last_lit&&(X(e,!1),0===e.strm.avail_out)?I:L}(n,t):r[n.level].func(n,t);if(h!==k&&h!==G||(n.status=P),h===I||h===k)return 0===e.avail_out&&(n.last_flush=-1),c;if(h===L&&(1===t?s._tr_align(n):5!==t&&(s._tr_stored_block(n,0,0,!1),3===t&&(W(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),Z(e),0===e.avail_out))return n.last_flush=-1,c}return t!==u?c:n.wrap<=0?1:(2===n.wrap?(M(n,255&e.adler),M(n,e.adler>>8&255),M(n,e.adler>>16&255),M(n,e.adler>>24&255),M(n,255&e.total_in),M(n,e.total_in>>8&255),M(n,e.total_in>>16&255),M(n,e.total_in>>24&255)):(z(n,e.adler>>>16),z(n,65535&e.adler)),Z(e),n.wrap>0&&(n.wrap=-n.wrap),0!==n.pending?c:1)},t.deflateEnd=function(e){var t;return e&&e.state?(t=e.state.status)!==N&&69!==t&&73!==t&&91!==t&&t!==D&&t!==Q&&t!==P?F(e,d):(e.state=null,t===Q?F(e,-3):c):d},t.deflateSetDictionary=function(e,t){var A,r,s,o,a,l,u,f,h=t.length;if(!e||!e.state)return d;if(2===(o=(A=e.state).wrap)||1===o&&A.status!==N||A.lookahead)return d;for(1===o&&(e.adler=i(e.adler,t,h,0)),A.wrap=0,h>=A.w_size&&(0===o&&(W(A.head),A.strstart=0,A.block_start=0,A.insert=0),f=new n.Buf8(A.w_size),n.arraySet(f,t,h-A.w_size,A.w_size,0),t=f,h=A.w_size),a=e.avail_in,l=e.next_in,u=e.input,e.avail_in=h,e.next_in=0,e.input=t,T(A);A.lookahead>=x;){r=A.strstart,s=A.lookahead-(x-1);do{A.ins_h=(A.ins_h<<A.hash_shift^A.window[r+x-1])&A.hash_mask,A.prev[r&A.w_mask]=A.head[A.ins_h],A.head[A.ins_h]=r,r++}while(--s);A.strstart=r,A.lookahead=x-1,T(A)}return A.strstart+=A.lookahead,A.block_start=A.strstart,A.insert=A.lookahead,A.lookahead=0,A.match_length=A.prev_length=x-1,A.match_available=0,e.next_in=l,e.input=u,e.avail_in=a,A.wrap=o,c},t.deflateInfo="pako deflate (from Nodeca project)"},4251:e=>{"use strict";e.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},9946:e=>{"use strict";e.exports=function(e,t){var A,r,n,s,i,o,a,l,u,c,d,f,h,g,p,b,m,v,y,w,B,x,C,E,N;A=e.state,r=e.next_in,E=e.input,n=r+(e.avail_in-5),s=e.next_out,N=e.output,i=s-(t-e.avail_out),o=s+(e.avail_out-257),a=A.dmax,l=A.wsize,u=A.whave,c=A.wnext,d=A.window,f=A.hold,h=A.bits,g=A.lencode,p=A.distcode,b=(1<<A.lenbits)-1,m=(1<<A.distbits)-1;e:do{h<15&&(f+=E[r++]<<h,h+=8,f+=E[r++]<<h,h+=8),v=g[f&b];t:for(;;){if(f>>>=y=v>>>24,h-=y,0===(y=v>>>16&255))N[s++]=65535&v;else{if(!(16&y)){if(0===(64&y)){v=g[(65535&v)+(f&(1<<y)-1)];continue t}if(32&y){A.mode=12;break e}e.msg="invalid literal/length code",A.mode=30;break e}w=65535&v,(y&=15)&&(h<y&&(f+=E[r++]<<h,h+=8),w+=f&(1<<y)-1,f>>>=y,h-=y),h<15&&(f+=E[r++]<<h,h+=8,f+=E[r++]<<h,h+=8),v=p[f&m];A:for(;;){if(f>>>=y=v>>>24,h-=y,!(16&(y=v>>>16&255))){if(0===(64&y)){v=p[(65535&v)+(f&(1<<y)-1)];continue A}e.msg="invalid distance code",A.mode=30;break e}if(B=65535&v,h<(y&=15)&&(f+=E[r++]<<h,(h+=8)<y&&(f+=E[r++]<<h,h+=8)),(B+=f&(1<<y)-1)>a){e.msg="invalid distance too far back",A.mode=30;break e}if(f>>>=y,h-=y,B>(y=s-i)){if((y=B-y)>u&&A.sane){e.msg="invalid distance too far back",A.mode=30;break e}if(x=0,C=d,0===c){if(x+=l-y,y<w){w-=y;do{N[s++]=d[x++]}while(--y);x=s-B,C=N}}else if(c<y){if(x+=l+c-y,(y-=c)<w){w-=y;do{N[s++]=d[x++]}while(--y);if(x=0,c<w){w-=y=c;do{N[s++]=d[x++]}while(--y);x=s-B,C=N}}}else if(x+=c-y,y<w){w-=y;do{N[s++]=d[x++]}while(--y);x=s-B,C=N}for(;w>2;)N[s++]=C[x++],N[s++]=C[x++],N[s++]=C[x++],w-=3;w&&(N[s++]=C[x++],w>1&&(N[s++]=C[x++]))}else{x=s-B;do{N[s++]=N[x++],N[s++]=N[x++],N[s++]=N[x++],w-=3}while(w>2);w&&(N[s++]=N[x++],w>1&&(N[s++]=N[x++]))}break}}break}}while(r<n&&s<o);r-=w=h>>3,f&=(1<<(h-=w<<3))-1,e.next_in=r,e.next_out=s,e.avail_in=r<n?n-r+5:5-(r-n),e.avail_out=s<o?o-s+257:257-(s-o),A.hold=f,A.bits=h}},5960:(e,t,A)=>{"use strict";var r=A(5886),n=A(8374),s=A(5592),i=A(9946),o=A(5415),a=1,l=2,u=0,c=-2,d=1,f=12,h=30,g=852,p=592;function b(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function m(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new r.Buf16(320),this.work=new r.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function v(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=d,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new r.Buf32(g),t.distcode=t.distdyn=new r.Buf32(p),t.sane=1,t.back=-1,u):c}function y(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,v(e)):c}function w(e,t){var A,r;return e&&e.state?(r=e.state,t<0?(A=0,t=-t):(A=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?c:(null!==r.window&&r.wbits!==t&&(r.window=null),r.wrap=A,r.wbits=t,y(e))):c}function B(e,t){var A,r;return e?(r=new m,e.state=r,r.window=null,(A=w(e,t))!==u&&(e.state=null),A):c}var x,C,E=!0;function N(e){if(E){var t;for(x=new r.Buf32(512),C=new r.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(o(a,e.lens,0,288,x,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;o(l,e.lens,0,32,C,0,e.work,{bits:5}),E=!1}e.lencode=x,e.lenbits=9,e.distcode=C,e.distbits=5}function D(e,t,A,n){var s,i=e.state;return null===i.window&&(i.wsize=1<<i.wbits,i.wnext=0,i.whave=0,i.window=new r.Buf8(i.wsize)),n>=i.wsize?(r.arraySet(i.window,t,A-i.wsize,i.wsize,0),i.wnext=0,i.whave=i.wsize):((s=i.wsize-i.wnext)>n&&(s=n),r.arraySet(i.window,t,A-n,s,i.wnext),(n-=s)?(r.arraySet(i.window,t,A-n,n,0),i.wnext=n,i.whave=i.wsize):(i.wnext+=s,i.wnext===i.wsize&&(i.wnext=0),i.whave<i.wsize&&(i.whave+=s))),0}t.inflateReset=y,t.inflateReset2=w,t.inflateResetKeep=v,t.inflateInit=function(e){return B(e,15)},t.inflateInit2=B,t.inflate=function(e,t){var A,g,p,m,v,y,w,B,x,C,E,Q,P,I,L,k,G,F,S,W,Z,X,M,z,R=0,j=new r.Buf8(4),T=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return c;(A=e.state).mode===f&&(A.mode=13),v=e.next_out,p=e.output,w=e.avail_out,m=e.next_in,g=e.input,y=e.avail_in,B=A.hold,x=A.bits,C=y,E=w,X=u;e:for(;;)switch(A.mode){case d:if(0===A.wrap){A.mode=13;break}for(;x<16;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}if(2&A.wrap&&35615===B){A.check=0,j[0]=255&B,j[1]=B>>>8&255,A.check=s(A.check,j,2,0),B=0,x=0,A.mode=2;break}if(A.flags=0,A.head&&(A.head.done=!1),!(1&A.wrap)||(((255&B)<<8)+(B>>8))%31){e.msg="incorrect header check",A.mode=h;break}if(8!==(15&B)){e.msg="unknown compression method",A.mode=h;break}if(x-=4,Z=8+(15&(B>>>=4)),0===A.wbits)A.wbits=Z;else if(Z>A.wbits){e.msg="invalid window size",A.mode=h;break}A.dmax=1<<Z,e.adler=A.check=1,A.mode=512&B?10:f,B=0,x=0;break;case 2:for(;x<16;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}if(A.flags=B,8!==(255&A.flags)){e.msg="unknown compression method",A.mode=h;break}if(57344&A.flags){e.msg="unknown header flags set",A.mode=h;break}A.head&&(A.head.text=B>>8&1),512&A.flags&&(j[0]=255&B,j[1]=B>>>8&255,A.check=s(A.check,j,2,0)),B=0,x=0,A.mode=3;case 3:for(;x<32;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}A.head&&(A.head.time=B),512&A.flags&&(j[0]=255&B,j[1]=B>>>8&255,j[2]=B>>>16&255,j[3]=B>>>24&255,A.check=s(A.check,j,4,0)),B=0,x=0,A.mode=4;case 4:for(;x<16;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}A.head&&(A.head.xflags=255&B,A.head.os=B>>8),512&A.flags&&(j[0]=255&B,j[1]=B>>>8&255,A.check=s(A.check,j,2,0)),B=0,x=0,A.mode=5;case 5:if(1024&A.flags){for(;x<16;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}A.length=B,A.head&&(A.head.extra_len=B),512&A.flags&&(j[0]=255&B,j[1]=B>>>8&255,A.check=s(A.check,j,2,0)),B=0,x=0}else A.head&&(A.head.extra=null);A.mode=6;case 6:if(1024&A.flags&&((Q=A.length)>y&&(Q=y),Q&&(A.head&&(Z=A.head.extra_len-A.length,A.head.extra||(A.head.extra=new Array(A.head.extra_len)),r.arraySet(A.head.extra,g,m,Q,Z)),512&A.flags&&(A.check=s(A.check,g,Q,m)),y-=Q,m+=Q,A.length-=Q),A.length))break e;A.length=0,A.mode=7;case 7:if(2048&A.flags){if(0===y)break e;Q=0;do{Z=g[m+Q++],A.head&&Z&&A.length<65536&&(A.head.name+=String.fromCharCode(Z))}while(Z&&Q<y);if(512&A.flags&&(A.check=s(A.check,g,Q,m)),y-=Q,m+=Q,Z)break e}else A.head&&(A.head.name=null);A.length=0,A.mode=8;case 8:if(4096&A.flags){if(0===y)break e;Q=0;do{Z=g[m+Q++],A.head&&Z&&A.length<65536&&(A.head.comment+=String.fromCharCode(Z))}while(Z&&Q<y);if(512&A.flags&&(A.check=s(A.check,g,Q,m)),y-=Q,m+=Q,Z)break e}else A.head&&(A.head.comment=null);A.mode=9;case 9:if(512&A.flags){for(;x<16;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}if(B!==(65535&A.check)){e.msg="header crc mismatch",A.mode=h;break}B=0,x=0}A.head&&(A.head.hcrc=A.flags>>9&1,A.head.done=!0),e.adler=A.check=0,A.mode=f;break;case 10:for(;x<32;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}e.adler=A.check=b(B),B=0,x=0,A.mode=11;case 11:if(0===A.havedict)return e.next_out=v,e.avail_out=w,e.next_in=m,e.avail_in=y,A.hold=B,A.bits=x,2;e.adler=A.check=1,A.mode=f;case f:if(5===t||6===t)break e;case 13:if(A.last){B>>>=7&x,x-=7&x,A.mode=27;break}for(;x<3;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}switch(A.last=1&B,x-=1,3&(B>>>=1)){case 0:A.mode=14;break;case 1:if(N(A),A.mode=20,6===t){B>>>=2,x-=2;break e}break;case 2:A.mode=17;break;case 3:e.msg="invalid block type",A.mode=h}B>>>=2,x-=2;break;case 14:for(B>>>=7&x,x-=7&x;x<32;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}if((65535&B)!==(B>>>16^65535)){e.msg="invalid stored block lengths",A.mode=h;break}if(A.length=65535&B,B=0,x=0,A.mode=15,6===t)break e;case 15:A.mode=16;case 16:if(Q=A.length){if(Q>y&&(Q=y),Q>w&&(Q=w),0===Q)break e;r.arraySet(p,g,m,Q,v),y-=Q,m+=Q,w-=Q,v+=Q,A.length-=Q;break}A.mode=f;break;case 17:for(;x<14;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}if(A.nlen=257+(31&B),B>>>=5,x-=5,A.ndist=1+(31&B),B>>>=5,x-=5,A.ncode=4+(15&B),B>>>=4,x-=4,A.nlen>286||A.ndist>30){e.msg="too many length or distance symbols",A.mode=h;break}A.have=0,A.mode=18;case 18:for(;A.have<A.ncode;){for(;x<3;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}A.lens[T[A.have++]]=7&B,B>>>=3,x-=3}for(;A.have<19;)A.lens[T[A.have++]]=0;if(A.lencode=A.lendyn,A.lenbits=7,M={bits:A.lenbits},X=o(0,A.lens,0,19,A.lencode,0,A.work,M),A.lenbits=M.bits,X){e.msg="invalid code lengths set",A.mode=h;break}A.have=0,A.mode=19;case 19:for(;A.have<A.nlen+A.ndist;){for(;k=(R=A.lencode[B&(1<<A.lenbits)-1])>>>16&255,G=65535&R,!((L=R>>>24)<=x);){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}if(G<16)B>>>=L,x-=L,A.lens[A.have++]=G;else{if(16===G){for(z=L+2;x<z;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}if(B>>>=L,x-=L,0===A.have){e.msg="invalid bit length repeat",A.mode=h;break}Z=A.lens[A.have-1],Q=3+(3&B),B>>>=2,x-=2}else if(17===G){for(z=L+3;x<z;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}x-=L,Z=0,Q=3+(7&(B>>>=L)),B>>>=3,x-=3}else{for(z=L+7;x<z;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}x-=L,Z=0,Q=11+(127&(B>>>=L)),B>>>=7,x-=7}if(A.have+Q>A.nlen+A.ndist){e.msg="invalid bit length repeat",A.mode=h;break}for(;Q--;)A.lens[A.have++]=Z}}if(A.mode===h)break;if(0===A.lens[256]){e.msg="invalid code -- missing end-of-block",A.mode=h;break}if(A.lenbits=9,M={bits:A.lenbits},X=o(a,A.lens,0,A.nlen,A.lencode,0,A.work,M),A.lenbits=M.bits,X){e.msg="invalid literal/lengths set",A.mode=h;break}if(A.distbits=6,A.distcode=A.distdyn,M={bits:A.distbits},X=o(l,A.lens,A.nlen,A.ndist,A.distcode,0,A.work,M),A.distbits=M.bits,X){e.msg="invalid distances set",A.mode=h;break}if(A.mode=20,6===t)break e;case 20:A.mode=21;case 21:if(y>=6&&w>=258){e.next_out=v,e.avail_out=w,e.next_in=m,e.avail_in=y,A.hold=B,A.bits=x,i(e,E),v=e.next_out,p=e.output,w=e.avail_out,m=e.next_in,g=e.input,y=e.avail_in,B=A.hold,x=A.bits,A.mode===f&&(A.back=-1);break}for(A.back=0;k=(R=A.lencode[B&(1<<A.lenbits)-1])>>>16&255,G=65535&R,!((L=R>>>24)<=x);){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}if(k&&0===(240&k)){for(F=L,S=k,W=G;k=(R=A.lencode[W+((B&(1<<F+S)-1)>>F)])>>>16&255,G=65535&R,!(F+(L=R>>>24)<=x);){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}B>>>=F,x-=F,A.back+=F}if(B>>>=L,x-=L,A.back+=L,A.length=G,0===k){A.mode=26;break}if(32&k){A.back=-1,A.mode=f;break}if(64&k){e.msg="invalid literal/length code",A.mode=h;break}A.extra=15&k,A.mode=22;case 22:if(A.extra){for(z=A.extra;x<z;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}A.length+=B&(1<<A.extra)-1,B>>>=A.extra,x-=A.extra,A.back+=A.extra}A.was=A.length,A.mode=23;case 23:for(;k=(R=A.distcode[B&(1<<A.distbits)-1])>>>16&255,G=65535&R,!((L=R>>>24)<=x);){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}if(0===(240&k)){for(F=L,S=k,W=G;k=(R=A.distcode[W+((B&(1<<F+S)-1)>>F)])>>>16&255,G=65535&R,!(F+(L=R>>>24)<=x);){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}B>>>=F,x-=F,A.back+=F}if(B>>>=L,x-=L,A.back+=L,64&k){e.msg="invalid distance code",A.mode=h;break}A.offset=G,A.extra=15&k,A.mode=24;case 24:if(A.extra){for(z=A.extra;x<z;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}A.offset+=B&(1<<A.extra)-1,B>>>=A.extra,x-=A.extra,A.back+=A.extra}if(A.offset>A.dmax){e.msg="invalid distance too far back",A.mode=h;break}A.mode=25;case 25:if(0===w)break e;if(Q=E-w,A.offset>Q){if((Q=A.offset-Q)>A.whave&&A.sane){e.msg="invalid distance too far back",A.mode=h;break}Q>A.wnext?(Q-=A.wnext,P=A.wsize-Q):P=A.wnext-Q,Q>A.length&&(Q=A.length),I=A.window}else I=p,P=v-A.offset,Q=A.length;Q>w&&(Q=w),w-=Q,A.length-=Q;do{p[v++]=I[P++]}while(--Q);0===A.length&&(A.mode=21);break;case 26:if(0===w)break e;p[v++]=A.length,w--,A.mode=21;break;case 27:if(A.wrap){for(;x<32;){if(0===y)break e;y--,B|=g[m++]<<x,x+=8}if(E-=w,e.total_out+=E,A.total+=E,E&&(e.adler=A.check=A.flags?s(A.check,p,E,v-E):n(A.check,p,E,v-E)),E=w,(A.flags?B:b(B))!==A.check){e.msg="incorrect data check",A.mode=h;break}B=0,x=0}A.mode=28;case 28:if(A.wrap&&A.flags){for(;x<32;){if(0===y)break e;y--,B+=g[m++]<<x,x+=8}if(B!==(4294967295&A.total)){e.msg="incorrect length check",A.mode=h;break}B=0,x=0}A.mode=29;case 29:X=1;break e;case h:X=-3;break e;case 31:return-4;default:return c}return e.next_out=v,e.avail_out=w,e.next_in=m,e.avail_in=y,A.hold=B,A.bits=x,(A.wsize||E!==e.avail_out&&A.mode<h&&(A.mode<27||4!==t))&&D(e,e.output,e.next_out,E-e.avail_out)?(A.mode=31,-4):(C-=e.avail_in,E-=e.avail_out,e.total_in+=C,e.total_out+=E,A.total+=E,A.wrap&&E&&(e.adler=A.check=A.flags?s(A.check,p,E,e.next_out-E):n(A.check,p,E,e.next_out-E)),e.data_type=A.bits+(A.last?64:0)+(A.mode===f?128:0)+(20===A.mode||15===A.mode?256:0),(0===C&&0===E||4===t)&&X===u&&(X=-5),X)},t.inflateEnd=function(e){if(!e||!e.state)return c;var t=e.state;return t.window&&(t.window=null),e.state=null,u},t.inflateGetHeader=function(e,t){var A;return e&&e.state?0===(2&(A=e.state).wrap)?c:(A.head=t,t.done=!1,u):c},t.inflateSetDictionary=function(e,t){var A,r=t.length;return e&&e.state?0!==(A=e.state).wrap&&11!==A.mode?c:11===A.mode&&n(1,t,r,0)!==A.check?-3:D(e,t,r,r)?(A.mode=31,-4):(A.havedict=1,u):c},t.inflateInfo="pako inflate (from Nodeca project)"},5415:(e,t,A)=>{"use strict";var r=A(5886),n=15,s=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],i=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],o=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],a=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];e.exports=function(e,t,A,l,u,c,d,f){var h,g,p,b,m,v,y,w,B,x=f.bits,C=0,E=0,N=0,D=0,Q=0,P=0,I=0,L=0,k=0,G=0,F=null,S=0,W=new r.Buf16(16),Z=new r.Buf16(16),X=null,M=0;for(C=0;C<=n;C++)W[C]=0;for(E=0;E<l;E++)W[t[A+E]]++;for(Q=x,D=n;D>=1&&0===W[D];D--);if(Q>D&&(Q=D),0===D)return u[c++]=20971520,u[c++]=20971520,f.bits=1,0;for(N=1;N<D&&0===W[N];N++);for(Q<N&&(Q=N),L=1,C=1;C<=n;C++)if(L<<=1,(L-=W[C])<0)return-1;if(L>0&&(0===e||1!==D))return-1;for(Z[1]=0,C=1;C<n;C++)Z[C+1]=Z[C]+W[C];for(E=0;E<l;E++)0!==t[A+E]&&(d[Z[t[A+E]]++]=E);if(0===e?(F=X=d,v=19):1===e?(F=s,S-=257,X=i,M-=257,v=256):(F=o,X=a,v=-1),G=0,E=0,C=N,m=c,P=Q,I=0,p=-1,b=(k=1<<Q)-1,1===e&&k>852||2===e&&k>592)return 1;for(;;){y=C-I,d[E]<v?(w=0,B=d[E]):d[E]>v?(w=X[M+d[E]],B=F[S+d[E]]):(w=96,B=0),h=1<<C-I,N=g=1<<P;do{u[m+(G>>I)+(g-=h)]=y<<24|w<<16|B}while(0!==g);for(h=1<<C-1;G&h;)h>>=1;if(0!==h?(G&=h-1,G+=h):G=0,E++,0===--W[C]){if(C===D)break;C=t[A+d[E]]}if(C>Q&&(G&b)!==p){for(0===I&&(I=Q),m+=N,L=1<<(P=C-I);P+I<D&&!((L-=W[P+I])<=0);)P++,L<<=1;if(k+=1<<P,1===e&&k>852||2===e&&k>592)return 1;u[p=G&b]=Q<<24|P<<16|m-c}}return 0!==G&&(u[m+G]=C-I<<24|64<<16),f.bits=Q,0}},8135:e=>{"use strict";e.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},3422:(e,t,A)=>{"use strict";var r=A(5886),n=0,s=1;function i(e){for(var t=e.length;--t>=0;)e[t]=0}var o=0,a=29,l=256,u=l+1+a,c=30,d=19,f=2*u+1,h=15,g=16,p=7,b=256,m=16,v=17,y=18,w=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],B=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],x=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],C=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],E=new Array(2*(u+2));i(E);var N=new Array(2*c);i(N);var D=new Array(512);i(D);var Q=new Array(256);i(Q);var P=new Array(a);i(P);var I,L,k,G=new Array(c);function F(e,t,A,r,n){this.static_tree=e,this.extra_bits=t,this.extra_base=A,this.elems=r,this.max_length=n,this.has_stree=e&&e.length}function S(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function W(e){return e<256?D[e]:D[256+(e>>>7)]}function Z(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255}function X(e,t,A){e.bi_valid>g-A?(e.bi_buf|=t<<e.bi_valid&65535,Z(e,e.bi_buf),e.bi_buf=t>>g-e.bi_valid,e.bi_valid+=A-g):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=A)}function M(e,t,A){X(e,A[2*t],A[2*t+1])}function z(e,t){var A=0;do{A|=1&e,e>>>=1,A<<=1}while(--t>0);return A>>>1}function R(e,t,A){var r,n,s=new Array(h+1),i=0;for(r=1;r<=h;r++)s[r]=i=i+A[r-1]<<1;for(n=0;n<=t;n++){var o=e[2*n+1];0!==o&&(e[2*n]=z(s[o]++,o))}}function j(e){var t;for(t=0;t<u;t++)e.dyn_ltree[2*t]=0;for(t=0;t<c;t++)e.dyn_dtree[2*t]=0;for(t=0;t<d;t++)e.bl_tree[2*t]=0;e.dyn_ltree[2*b]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function T(e){e.bi_valid>8?Z(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function U(e,t,A,r){var n=2*t,s=2*A;return e[n]<e[s]||e[n]===e[s]&&r[t]<=r[A]}function V(e,t,A){for(var r=e.heap[A],n=A<<1;n<=e.heap_len&&(n<e.heap_len&&U(t,e.heap[n+1],e.heap[n],e.depth)&&n++,!U(t,r,e.heap[n],e.depth));)e.heap[A]=e.heap[n],A=n,n<<=1;e.heap[A]=r}function O(e,t,A){var r,n,s,i,o=0;if(0!==e.last_lit)do{r=e.pending_buf[e.d_buf+2*o]<<8|e.pending_buf[e.d_buf+2*o+1],n=e.pending_buf[e.l_buf+o],o++,0===r?M(e,n,t):(M(e,(s=Q[n])+l+1,t),0!==(i=w[s])&&X(e,n-=P[s],i),M(e,s=W(--r),A),0!==(i=B[s])&&X(e,r-=G[s],i))}while(o<e.last_lit);M(e,b,t)}function Y(e,t){var A,r,n,s=t.dyn_tree,i=t.stat_desc.static_tree,o=t.stat_desc.has_stree,a=t.stat_desc.elems,l=-1;for(e.heap_len=0,e.heap_max=f,A=0;A<a;A++)0!==s[2*A]?(e.heap[++e.heap_len]=l=A,e.depth[A]=0):s[2*A+1]=0;for(;e.heap_len<2;)s[2*(n=e.heap[++e.heap_len]=l<2?++l:0)]=1,e.depth[n]=0,e.opt_len--,o&&(e.static_len-=i[2*n+1]);for(t.max_code=l,A=e.heap_len>>1;A>=1;A--)V(e,s,A);n=a;do{A=e.heap[1],e.heap[1]=e.heap[e.heap_len--],V(e,s,1),r=e.heap[1],e.heap[--e.heap_max]=A,e.heap[--e.heap_max]=r,s[2*n]=s[2*A]+s[2*r],e.depth[n]=(e.depth[A]>=e.depth[r]?e.depth[A]:e.depth[r])+1,s[2*A+1]=s[2*r+1]=n,e.heap[1]=n++,V(e,s,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],function(e,t){var A,r,n,s,i,o,a=t.dyn_tree,l=t.max_code,u=t.stat_desc.static_tree,c=t.stat_desc.has_stree,d=t.stat_desc.extra_bits,g=t.stat_desc.extra_base,p=t.stat_desc.max_length,b=0;for(s=0;s<=h;s++)e.bl_count[s]=0;for(a[2*e.heap[e.heap_max]+1]=0,A=e.heap_max+1;A<f;A++)(s=a[2*a[2*(r=e.heap[A])+1]+1]+1)>p&&(s=p,b++),a[2*r+1]=s,r>l||(e.bl_count[s]++,i=0,r>=g&&(i=d[r-g]),o=a[2*r],e.opt_len+=o*(s+i),c&&(e.static_len+=o*(u[2*r+1]+i)));if(0!==b){do{for(s=p-1;0===e.bl_count[s];)s--;e.bl_count[s]--,e.bl_count[s+1]+=2,e.bl_count[p]--,b-=2}while(b>0);for(s=p;0!==s;s--)for(r=e.bl_count[s];0!==r;)(n=e.heap[--A])>l||(a[2*n+1]!==s&&(e.opt_len+=(s-a[2*n+1])*a[2*n],a[2*n+1]=s),r--)}}(e,t),R(s,l,e.bl_count)}function H(e,t,A){var r,n,s=-1,i=t[1],o=0,a=7,l=4;for(0===i&&(a=138,l=3),t[2*(A+1)+1]=65535,r=0;r<=A;r++)n=i,i=t[2*(r+1)+1],++o<a&&n===i||(o<l?e.bl_tree[2*n]+=o:0!==n?(n!==s&&e.bl_tree[2*n]++,e.bl_tree[2*m]++):o<=10?e.bl_tree[2*v]++:e.bl_tree[2*y]++,o=0,s=n,0===i?(a=138,l=3):n===i?(a=6,l=3):(a=7,l=4))}function K(e,t,A){var r,n,s=-1,i=t[1],o=0,a=7,l=4;for(0===i&&(a=138,l=3),r=0;r<=A;r++)if(n=i,i=t[2*(r+1)+1],!(++o<a&&n===i)){if(o<l)do{M(e,n,e.bl_tree)}while(0!==--o);else 0!==n?(n!==s&&(M(e,n,e.bl_tree),o--),M(e,m,e.bl_tree),X(e,o-3,2)):o<=10?(M(e,v,e.bl_tree),X(e,o-3,3)):(M(e,y,e.bl_tree),X(e,o-11,7));o=0,s=n,0===i?(a=138,l=3):n===i?(a=6,l=3):(a=7,l=4)}}i(G);var q=!1;function J(e,t,A,n){X(e,(o<<1)+(n?1:0),3),function(e,t,A,n){T(e),n&&(Z(e,A),Z(e,~A)),r.arraySet(e.pending_buf,e.window,t,A,e.pending),e.pending+=A}(e,t,A,!0)}t._tr_init=function(e){q||(!function(){var e,t,A,r,n,s=new Array(h+1);for(A=0,r=0;r<a-1;r++)for(P[r]=A,e=0;e<1<<w[r];e++)Q[A++]=r;for(Q[A-1]=r,n=0,r=0;r<16;r++)for(G[r]=n,e=0;e<1<<B[r];e++)D[n++]=r;for(n>>=7;r<c;r++)for(G[r]=n<<7,e=0;e<1<<B[r]-7;e++)D[256+n++]=r;for(t=0;t<=h;t++)s[t]=0;for(e=0;e<=143;)E[2*e+1]=8,e++,s[8]++;for(;e<=255;)E[2*e+1]=9,e++,s[9]++;for(;e<=279;)E[2*e+1]=7,e++,s[7]++;for(;e<=287;)E[2*e+1]=8,e++,s[8]++;for(R(E,u+1,s),e=0;e<c;e++)N[2*e+1]=5,N[2*e]=z(e,5);I=new F(E,w,l+1,u,h),L=new F(N,B,0,c,h),k=new F(new Array(0),x,0,d,p)}(),q=!0),e.l_desc=new S(e.dyn_ltree,I),e.d_desc=new S(e.dyn_dtree,L),e.bl_desc=new S(e.bl_tree,k),e.bi_buf=0,e.bi_valid=0,j(e)},t._tr_stored_block=J,t._tr_flush_block=function(e,t,A,r){var i,o,a=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=function(e){var t,A=4093624447;for(t=0;t<=31;t++,A>>>=1)if(1&A&&0!==e.dyn_ltree[2*t])return n;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return s;for(t=32;t<l;t++)if(0!==e.dyn_ltree[2*t])return s;return n}(e)),Y(e,e.l_desc),Y(e,e.d_desc),a=function(e){var t;for(H(e,e.dyn_ltree,e.l_desc.max_code),H(e,e.dyn_dtree,e.d_desc.max_code),Y(e,e.bl_desc),t=d-1;t>=3&&0===e.bl_tree[2*C[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),i=e.opt_len+3+7>>>3,(o=e.static_len+3+7>>>3)<=i&&(i=o)):i=o=A+5,A+4<=i&&-1!==t?J(e,t,A,r):4===e.strategy||o===i?(X(e,2+(r?1:0),3),O(e,E,N)):(X(e,4+(r?1:0),3),function(e,t,A,r){var n;for(X(e,t-257,5),X(e,A-1,5),X(e,r-4,4),n=0;n<r;n++)X(e,e.bl_tree[2*C[n]+1],3);K(e,e.dyn_ltree,t-1),K(e,e.dyn_dtree,A-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,a+1),O(e,e.dyn_ltree,e.dyn_dtree)),j(e),r&&T(e)},t._tr_tally=function(e,t,A){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&A,e.last_lit++,0===t?e.dyn_ltree[2*A]++:(e.matches++,t--,e.dyn_ltree[2*(Q[A]+l+1)]++,e.dyn_dtree[2*W(t)]++),e.last_lit===e.lit_bufsize-1},t._tr_align=function(e){X(e,2,3),M(e,b,E),function(e){16===e.bi_valid?(Z(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},301:e=>{"use strict";e.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},2730:(e,t,A)=>{"use strict";var r=A(5043),n=A(8853);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,A=1;A<arguments.length;A++)t+="&args[]="+encodeURIComponent(arguments[A]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,o={};function a(e,t){l(e,t),l(e+"Capture",t)}function l(e,t){for(o[e]=t,e=0;e<t.length;e++)i.add(t[e])}var u=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),c=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,f={},h={};function g(e,t,A,r,n,s,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=n,this.mustUseProperty=A,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=i}var p={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){p[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];p[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){p[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){p[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){p[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){p[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){p[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){p[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){p[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var b=/[\-:]([a-z])/g;function m(e){return e[1].toUpperCase()}function v(e,t,A,r){var n=p.hasOwnProperty(t)?p[t]:null;(null!==n?0!==n.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,A,r){if(null===t||"undefined"===typeof t||function(e,t,A,r){if(null!==A&&0===A.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==A?!A.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,A,r))return!0;if(r)return!1;if(null!==A)switch(A.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,A,n,r)&&(A=null),r||null===n?function(e){return!!c.call(h,e)||!c.call(f,e)&&(d.test(e)?h[e]=!0:(f[e]=!0,!1))}(t)&&(null===A?e.removeAttribute(t):e.setAttribute(t,""+A)):n.mustUseProperty?e[n.propertyName]=null===A?3!==n.type&&"":A:(t=n.attributeName,r=n.attributeNamespace,null===A?e.removeAttribute(t):(A=3===(n=n.type)||4===n&&!0===A?"":""+A,r?e.setAttributeNS(r,t,A):e.setAttribute(t,A))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(b,m);p[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(b,m);p[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(b,m);p[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){p[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),p.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){p[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var y=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),B=Symbol.for("react.portal"),x=Symbol.for("react.fragment"),C=Symbol.for("react.strict_mode"),E=Symbol.for("react.profiler"),N=Symbol.for("react.provider"),D=Symbol.for("react.context"),Q=Symbol.for("react.forward_ref"),P=Symbol.for("react.suspense"),I=Symbol.for("react.suspense_list"),L=Symbol.for("react.memo"),k=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var G=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var F=Symbol.iterator;function S(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=F&&e[F]||e["@@iterator"])?e:null}var W,Z=Object.assign;function X(e){if(void 0===W)try{throw Error()}catch(A){var t=A.stack.trim().match(/\n( *(at )?)/);W=t&&t[1]||""}return"\n"+W+e}var M=!1;function z(e,t){if(!e||M)return"";M=!0;var A=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(l){var r=l}Reflect.construct(e,[],t)}else{try{t.call()}catch(l){r=l}e.call(t.prototype)}else{try{throw Error()}catch(l){r=l}e()}}catch(l){if(l&&r&&"string"===typeof l.stack){for(var n=l.stack.split("\n"),s=r.stack.split("\n"),i=n.length-1,o=s.length-1;1<=i&&0<=o&&n[i]!==s[o];)o--;for(;1<=i&&0<=o;i--,o--)if(n[i]!==s[o]){if(1!==i||1!==o)do{if(i--,0>--o||n[i]!==s[o]){var a="\n"+n[i].replace(" at new "," at ");return e.displayName&&a.includes("<anonymous>")&&(a=a.replace("<anonymous>",e.displayName)),a}}while(1<=i&&0<=o);break}}}finally{M=!1,Error.prepareStackTrace=A}return(e=e?e.displayName||e.name:"")?X(e):""}function R(e){switch(e.tag){case 5:return X(e.type);case 16:return X("Lazy");case 13:return X("Suspense");case 19:return X("SuspenseList");case 0:case 2:case 15:return e=z(e.type,!1);case 11:return e=z(e.type.render,!1);case 1:return e=z(e.type,!0);default:return""}}function j(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case x:return"Fragment";case B:return"Portal";case E:return"Profiler";case C:return"StrictMode";case P:return"Suspense";case I:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case D:return(e.displayName||"Context")+".Consumer";case N:return(e._context.displayName||"Context")+".Provider";case Q:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case L:return null!==(t=e.displayName||null)?t:j(e.type)||"Memo";case k:t=e._payload,e=e._init;try{return j(e(t))}catch(A){}}return null}function T(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return j(t);case 8:return t===C?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function U(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function V(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function O(e){e._valueTracker||(e._valueTracker=function(e){var t=V(e)?"checked":"value",A=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof A&&"function"===typeof A.get&&"function"===typeof A.set){var n=A.get,s=A.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return n.call(this)},set:function(e){r=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:A.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Y(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var A=t.getValue(),r="";return e&&(r=V(e)?e.checked?"true":"false":e.value),(e=r)!==A&&(t.setValue(e),!0)}function H(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function K(e,t){var A=t.checked;return Z({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=A?A:e._wrapperState.initialChecked})}function q(e,t){var A=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;A=U(null!=t.value?t.value:A),e._wrapperState={initialChecked:r,initialValue:A,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function J(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function _(e,t){J(e,t);var A=U(t.value),r=t.type;if(null!=A)"number"===r?(0===A&&""===e.value||e.value!=A)&&(e.value=""+A):e.value!==""+A&&(e.value=""+A);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,A):t.hasOwnProperty("defaultValue")&&ee(e,t.type,U(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function $(e,t,A){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,A||t===e.value||(e.value=t),e.defaultValue=t}""!==(A=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==A&&(e.name=A)}function ee(e,t,A){"number"===t&&H(e.ownerDocument)===e||(null==A?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+A&&(e.defaultValue=""+A))}var te=Array.isArray;function Ae(e,t,A,r){if(e=e.options,t){t={};for(var n=0;n<A.length;n++)t["$"+A[n]]=!0;for(A=0;A<e.length;A++)n=t.hasOwnProperty("$"+e[A].value),e[A].selected!==n&&(e[A].selected=n),n&&r&&(e[A].defaultSelected=!0)}else{for(A=""+U(A),t=null,n=0;n<e.length;n++){if(e[n].value===A)return e[n].selected=!0,void(r&&(e[n].defaultSelected=!0));null!==t||e[n].disabled||(t=e[n])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return Z({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ne(e,t){var A=t.value;if(null==A){if(A=t.children,t=t.defaultValue,null!=A){if(null!=t)throw Error(s(92));if(te(A)){if(1<A.length)throw Error(s(93));A=A[0]}t=A}null==t&&(t=""),A=t}e._wrapperState={initialValue:U(A)}}function se(e,t){var A=U(t.value),r=U(t.defaultValue);null!=A&&((A=""+A)!==e.value&&(e.value=A),null==t.defaultValue&&e.defaultValue!==A&&(e.defaultValue=A)),null!=r&&(e.defaultValue=""+r)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ae(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var le,ue,ce=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((le=le||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=le.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,A,r){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function de(e,t){if(t){var A=e.firstChild;if(A&&A===e.lastChild&&3===A.nodeType)return void(A.nodeValue=t)}e.textContent=t}var fe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function ge(e,t,A){return null==t||"boolean"===typeof t||""===t?"":A||"number"!==typeof t||0===t||fe.hasOwnProperty(e)&&fe[e]?(""+t).trim():t+"px"}function pe(e,t){for(var A in e=e.style,t)if(t.hasOwnProperty(A)){var r=0===A.indexOf("--"),n=ge(A,t[A],r);"float"===A&&(A="cssFloat"),r?e.setProperty(A,n):e[A]=n}}Object.keys(fe).forEach((function(e){he.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),fe[t]=fe[e]}))}));var be=Z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function me(e,t){if(t){if(be[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(s(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ye=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Be=null,xe=null,Ce=null;function Ee(e){if(e=vn(e)){if("function"!==typeof Be)throw Error(s(280));var t=e.stateNode;t&&(t=wn(t),Be(e.stateNode,e.type,t))}}function Ne(e){xe?Ce?Ce.push(e):Ce=[e]:xe=e}function De(){if(xe){var e=xe,t=Ce;if(Ce=xe=null,Ee(e),t)for(e=0;e<t.length;e++)Ee(t[e])}}function Qe(e,t){return e(t)}function Pe(){}var Ie=!1;function Le(e,t,A){if(Ie)return e(t,A);Ie=!0;try{return Qe(e,t,A)}finally{Ie=!1,(null!==xe||null!==Ce)&&(Pe(),De())}}function ke(e,t){var A=e.stateNode;if(null===A)return null;var r=wn(A);if(null===r)return null;A=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(A&&"function"!==typeof A)throw Error(s(231,t,typeof A));return A}var Ge=!1;if(u)try{var Fe={};Object.defineProperty(Fe,"passive",{get:function(){Ge=!0}}),window.addEventListener("test",Fe,Fe),window.removeEventListener("test",Fe,Fe)}catch(ue){Ge=!1}function Se(e,t,A,r,n,s,i,o,a){var l=Array.prototype.slice.call(arguments,3);try{t.apply(A,l)}catch(u){this.onError(u)}}var We=!1,Ze=null,Xe=!1,Me=null,ze={onError:function(e){We=!0,Ze=e}};function Re(e,t,A,r,n,s,i,o,a){We=!1,Ze=null,Se.apply(ze,arguments)}function je(e){var t=e,A=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(A=t.return),e=t.return}while(e)}return 3===t.tag?A:null}function Te(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Ue(e){if(je(e)!==e)throw Error(s(188))}function Ve(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=je(e)))throw Error(s(188));return t!==e?null:e}for(var A=e,r=t;;){var n=A.return;if(null===n)break;var i=n.alternate;if(null===i){if(null!==(r=n.return)){A=r;continue}break}if(n.child===i.child){for(i=n.child;i;){if(i===A)return Ue(n),e;if(i===r)return Ue(n),t;i=i.sibling}throw Error(s(188))}if(A.return!==r.return)A=n,r=i;else{for(var o=!1,a=n.child;a;){if(a===A){o=!0,A=n,r=i;break}if(a===r){o=!0,r=n,A=i;break}a=a.sibling}if(!o){for(a=i.child;a;){if(a===A){o=!0,A=i,r=n;break}if(a===r){o=!0,r=i,A=n;break}a=a.sibling}if(!o)throw Error(s(189))}}if(A.alternate!==r)throw Error(s(190))}if(3!==A.tag)throw Error(s(188));return A.stateNode.current===A?e:t}(e))?Oe(e):null}function Oe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Oe(e);if(null!==t)return t;e=e.sibling}return null}var Ye=n.unstable_scheduleCallback,He=n.unstable_cancelCallback,Ke=n.unstable_shouldYield,qe=n.unstable_requestPaint,Je=n.unstable_now,_e=n.unstable_getCurrentPriorityLevel,$e=n.unstable_ImmediatePriority,et=n.unstable_UserBlockingPriority,tt=n.unstable_NormalPriority,At=n.unstable_LowPriority,rt=n.unstable_IdlePriority,nt=null,st=null;var it=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(ot(e)/at|0)|0},ot=Math.log,at=Math.LN2;var lt=64,ut=4194304;function ct(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var A=e.pendingLanes;if(0===A)return 0;var r=0,n=e.suspendedLanes,s=e.pingedLanes,i=268435455&A;if(0!==i){var o=i&~n;0!==o?r=ct(o):0!==(s&=i)&&(r=ct(s))}else 0!==(i=A&~n)?r=ct(i):0!==s&&(r=ct(s));if(0===r)return 0;if(0!==t&&t!==r&&0===(t&n)&&((n=r&-r)>=(s=t&-t)||16===n&&0!==(4194240&s)))return t;if(0!==(4&r)&&(r|=16&A),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)n=1<<(A=31-it(t)),r|=e[A],t&=~n;return r}function ft(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ht(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function gt(){var e=lt;return 0===(4194240&(lt<<=1))&&(lt=64),e}function pt(e){for(var t=[],A=0;31>A;A++)t.push(e);return t}function bt(e,t,A){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=A}function mt(e,t){var A=e.entangledLanes|=t;for(e=e.entanglements;A;){var r=31-it(A),n=1<<r;n&t|e[r]&t&&(e[r]|=t),A&=~n}}var vt=0;function yt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,Bt,xt,Ct,Et,Nt=!1,Dt=[],Qt=null,Pt=null,It=null,Lt=new Map,kt=new Map,Gt=[],Ft="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function St(e,t){switch(e){case"focusin":case"focusout":Qt=null;break;case"dragenter":case"dragleave":Pt=null;break;case"mouseover":case"mouseout":It=null;break;case"pointerover":case"pointerout":Lt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":kt.delete(t.pointerId)}}function Wt(e,t,A,r,n,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:A,eventSystemFlags:r,nativeEvent:s,targetContainers:[n]},null!==t&&(null!==(t=vn(t))&&Bt(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==n&&-1===t.indexOf(n)&&t.push(n),e)}function Zt(e){var t=mn(e.target);if(null!==t){var A=je(t);if(null!==A)if(13===(t=A.tag)){if(null!==(t=Te(A)))return e.blockedOn=t,void Et(e.priority,(function(){xt(A)}))}else if(3===t&&A.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===A.tag?A.stateNode.containerInfo:null)}e.blockedOn=null}function Xt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var A=Kt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==A)return null!==(t=vn(A))&&Bt(t),e.blockedOn=A,!1;var r=new(A=e.nativeEvent).constructor(A.type,A);ye=r,A.target.dispatchEvent(r),ye=null,t.shift()}return!0}function Mt(e,t,A){Xt(e)&&A.delete(t)}function zt(){Nt=!1,null!==Qt&&Xt(Qt)&&(Qt=null),null!==Pt&&Xt(Pt)&&(Pt=null),null!==It&&Xt(It)&&(It=null),Lt.forEach(Mt),kt.forEach(Mt)}function Rt(e,t){e.blockedOn===t&&(e.blockedOn=null,Nt||(Nt=!0,n.unstable_scheduleCallback(n.unstable_NormalPriority,zt)))}function jt(e){function t(t){return Rt(t,e)}if(0<Dt.length){Rt(Dt[0],e);for(var A=1;A<Dt.length;A++){var r=Dt[A];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Qt&&Rt(Qt,e),null!==Pt&&Rt(Pt,e),null!==It&&Rt(It,e),Lt.forEach(t),kt.forEach(t),A=0;A<Gt.length;A++)(r=Gt[A]).blockedOn===e&&(r.blockedOn=null);for(;0<Gt.length&&null===(A=Gt[0]).blockedOn;)Zt(A),null===A.blockedOn&&Gt.shift()}var Tt=y.ReactCurrentBatchConfig,Ut=!0;function Vt(e,t,A,r){var n=vt,s=Tt.transition;Tt.transition=null;try{vt=1,Yt(e,t,A,r)}finally{vt=n,Tt.transition=s}}function Ot(e,t,A,r){var n=vt,s=Tt.transition;Tt.transition=null;try{vt=4,Yt(e,t,A,r)}finally{vt=n,Tt.transition=s}}function Yt(e,t,A,r){if(Ut){var n=Kt(e,t,A,r);if(null===n)Tr(e,t,r,Ht,A),St(e,r);else if(function(e,t,A,r,n){switch(t){case"focusin":return Qt=Wt(Qt,e,t,A,r,n),!0;case"dragenter":return Pt=Wt(Pt,e,t,A,r,n),!0;case"mouseover":return It=Wt(It,e,t,A,r,n),!0;case"pointerover":var s=n.pointerId;return Lt.set(s,Wt(Lt.get(s)||null,e,t,A,r,n)),!0;case"gotpointercapture":return s=n.pointerId,kt.set(s,Wt(kt.get(s)||null,e,t,A,r,n)),!0}return!1}(n,e,t,A,r))r.stopPropagation();else if(St(e,r),4&t&&-1<Ft.indexOf(e)){for(;null!==n;){var s=vn(n);if(null!==s&&wt(s),null===(s=Kt(e,t,A,r))&&Tr(e,t,r,Ht,A),s===n)break;n=s}null!==n&&r.stopPropagation()}else Tr(e,t,r,null,A)}}var Ht=null;function Kt(e,t,A,r){if(Ht=null,null!==(e=mn(e=we(r))))if(null===(t=je(e)))e=null;else if(13===(A=t.tag)){if(null!==(e=Te(t)))return e;e=null}else if(3===A){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Ht=e,null}function qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(_e()){case $e:return 1;case et:return 4;case tt:case At:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Jt=null,_t=null,$t=null;function eA(){if($t)return $t;var e,t,A=_t,r=A.length,n="value"in Jt?Jt.value:Jt.textContent,s=n.length;for(e=0;e<r&&A[e]===n[e];e++);var i=r-e;for(t=1;t<=i&&A[r-t]===n[s-t];t++);return $t=n.slice(e,1<t?1-t:void 0)}function tA(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function AA(){return!0}function rA(){return!1}function nA(e){function t(t,A,r,n,s){for(var i in this._reactName=t,this._targetInst=r,this.type=A,this.nativeEvent=n,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(n):n[i]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?AA:rA,this.isPropagationStopped=rA,this}return Z(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=AA)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=AA)},persist:function(){},isPersistent:AA}),t}var sA,iA,oA,aA={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},lA=nA(aA),uA=Z({},aA,{view:0,detail:0}),cA=nA(uA),dA=Z({},uA,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:CA,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==oA&&(oA&&"mousemove"===e.type?(sA=e.screenX-oA.screenX,iA=e.screenY-oA.screenY):iA=sA=0,oA=e),sA)},movementY:function(e){return"movementY"in e?e.movementY:iA}}),fA=nA(dA),hA=nA(Z({},dA,{dataTransfer:0})),gA=nA(Z({},uA,{relatedTarget:0})),pA=nA(Z({},aA,{animationName:0,elapsedTime:0,pseudoElement:0})),bA=Z({},aA,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),mA=nA(bA),vA=nA(Z({},aA,{data:0})),yA={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},wA={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},BA={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xA(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=BA[e])&&!!t[e]}function CA(){return xA}var EA=Z({},uA,{key:function(e){if(e.key){var t=yA[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tA(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?wA[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:CA,charCode:function(e){return"keypress"===e.type?tA(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tA(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),NA=nA(EA),DA=nA(Z({},dA,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),QA=nA(Z({},uA,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:CA})),PA=nA(Z({},aA,{propertyName:0,elapsedTime:0,pseudoElement:0})),IA=Z({},dA,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),LA=nA(IA),kA=[9,13,27,32],GA=u&&"CompositionEvent"in window,FA=null;u&&"documentMode"in document&&(FA=document.documentMode);var SA=u&&"TextEvent"in window&&!FA,WA=u&&(!GA||FA&&8<FA&&11>=FA),ZA=String.fromCharCode(32),XA=!1;function MA(e,t){switch(e){case"keyup":return-1!==kA.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function zA(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var RA=!1;var jA={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function TA(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!jA[e.type]:"textarea"===t}function UA(e,t,A,r){Ne(r),0<(t=Vr(t,"onChange")).length&&(A=new lA("onChange","change",null,A,r),e.push({event:A,listeners:t}))}var VA=null,OA=null;function YA(e){Zr(e,0)}function HA(e){if(Y(yn(e)))return e}function KA(e,t){if("change"===e)return t}var qA=!1;if(u){var JA;if(u){var _A="oninput"in document;if(!_A){var $A=document.createElement("div");$A.setAttribute("oninput","return;"),_A="function"===typeof $A.oninput}JA=_A}else JA=!1;qA=JA&&(!document.documentMode||9<document.documentMode)}function er(){VA&&(VA.detachEvent("onpropertychange",tr),OA=VA=null)}function tr(e){if("value"===e.propertyName&&HA(OA)){var t=[];UA(t,OA,e,we(e)),Le(YA,t)}}function Ar(e,t,A){"focusin"===e?(er(),OA=A,(VA=t).attachEvent("onpropertychange",tr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return HA(OA)}function nr(e,t){if("click"===e)return HA(t)}function sr(e,t){if("input"===e||"change"===e)return HA(t)}var ir="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function or(e,t){if(ir(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var A=Object.keys(e),r=Object.keys(t);if(A.length!==r.length)return!1;for(r=0;r<A.length;r++){var n=A[r];if(!c.call(t,n)||!ir(e[n],t[n]))return!1}return!0}function ar(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function lr(e,t){var A,r=ar(e);for(e=0;r;){if(3===r.nodeType){if(A=e+r.textContent.length,e<=t&&A>=t)return{node:r,offset:t-e};e=A}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ar(r)}}function ur(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?ur(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function cr(){for(var e=window,t=H();t instanceof e.HTMLIFrameElement;){try{var A="string"===typeof t.contentWindow.location.href}catch(r){A=!1}if(!A)break;t=H((e=t.contentWindow).document)}return t}function dr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fr(e){var t=cr(),A=e.focusedElem,r=e.selectionRange;if(t!==A&&A&&A.ownerDocument&&ur(A.ownerDocument.documentElement,A)){if(null!==r&&dr(A))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in A)A.selectionStart=t,A.selectionEnd=Math.min(e,A.value.length);else if((e=(t=A.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var n=A.textContent.length,s=Math.min(r.start,n);r=void 0===r.end?s:Math.min(r.end,n),!e.extend&&s>r&&(n=r,r=s,s=n),n=lr(A,s);var i=lr(A,r);n&&i&&(1!==e.rangeCount||e.anchorNode!==n.node||e.anchorOffset!==n.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(n.node,n.offset),e.removeAllRanges(),s>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=A;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof A.focus&&A.focus(),A=0;A<t.length;A++)(e=t[A]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var hr=u&&"documentMode"in document&&11>=document.documentMode,gr=null,pr=null,br=null,mr=!1;function vr(e,t,A){var r=A.window===A?A.document:9===A.nodeType?A:A.ownerDocument;mr||null==gr||gr!==H(r)||("selectionStart"in(r=gr)&&dr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},br&&or(br,r)||(br=r,0<(r=Vr(pr,"onSelect")).length&&(t=new lA("onSelect","select",null,t,A),e.push({event:t,listeners:r}),t.target=gr)))}function yr(e,t){var A={};return A[e.toLowerCase()]=t.toLowerCase(),A["Webkit"+e]="webkit"+t,A["Moz"+e]="moz"+t,A}var wr={animationend:yr("Animation","AnimationEnd"),animationiteration:yr("Animation","AnimationIteration"),animationstart:yr("Animation","AnimationStart"),transitionend:yr("Transition","TransitionEnd")},Br={},xr={};function Cr(e){if(Br[e])return Br[e];if(!wr[e])return e;var t,A=wr[e];for(t in A)if(A.hasOwnProperty(t)&&t in xr)return Br[e]=A[t];return e}u&&(xr=document.createElement("div").style,"AnimationEvent"in window||(delete wr.animationend.animation,delete wr.animationiteration.animation,delete wr.animationstart.animation),"TransitionEvent"in window||delete wr.transitionend.transition);var Er=Cr("animationend"),Nr=Cr("animationiteration"),Dr=Cr("animationstart"),Qr=Cr("transitionend"),Pr=new Map,Ir="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Lr(e,t){Pr.set(e,t),a(t,[e])}for(var kr=0;kr<Ir.length;kr++){var Gr=Ir[kr];Lr(Gr.toLowerCase(),"on"+(Gr[0].toUpperCase()+Gr.slice(1)))}Lr(Er,"onAnimationEnd"),Lr(Nr,"onAnimationIteration"),Lr(Dr,"onAnimationStart"),Lr("dblclick","onDoubleClick"),Lr("focusin","onFocus"),Lr("focusout","onBlur"),Lr(Qr,"onTransitionEnd"),l("onMouseEnter",["mouseout","mouseover"]),l("onMouseLeave",["mouseout","mouseover"]),l("onPointerEnter",["pointerout","pointerover"]),l("onPointerLeave",["pointerout","pointerover"]),a("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),a("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),a("onBeforeInput",["compositionend","keypress","textInput","paste"]),a("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),a("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),a("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Fr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Sr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Fr));function Wr(e,t,A){var r=e.type||"unknown-event";e.currentTarget=A,function(e,t,A,r,n,i,o,a,l){if(Re.apply(this,arguments),We){if(!We)throw Error(s(198));var u=Ze;We=!1,Ze=null,Xe||(Xe=!0,Me=u)}}(r,t,void 0,e),e.currentTarget=null}function Zr(e,t){t=0!==(4&t);for(var A=0;A<e.length;A++){var r=e[A],n=r.event;r=r.listeners;e:{var s=void 0;if(t)for(var i=r.length-1;0<=i;i--){var o=r[i],a=o.instance,l=o.currentTarget;if(o=o.listener,a!==s&&n.isPropagationStopped())break e;Wr(n,o,l),s=a}else for(i=0;i<r.length;i++){if(a=(o=r[i]).instance,l=o.currentTarget,o=o.listener,a!==s&&n.isPropagationStopped())break e;Wr(n,o,l),s=a}}}if(Xe)throw e=Me,Xe=!1,Me=null,e}function Xr(e,t){var A=t[gn];void 0===A&&(A=t[gn]=new Set);var r=e+"__bubble";A.has(r)||(jr(t,e,2,!1),A.add(r))}function Mr(e,t,A){var r=0;t&&(r|=4),jr(A,e,r,t)}var zr="_reactListening"+Math.random().toString(36).slice(2);function Rr(e){if(!e[zr]){e[zr]=!0,i.forEach((function(t){"selectionchange"!==t&&(Sr.has(t)||Mr(t,!1,e),Mr(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[zr]||(t[zr]=!0,Mr("selectionchange",!1,t))}}function jr(e,t,A,r){switch(qt(t)){case 1:var n=Vt;break;case 4:n=Ot;break;default:n=Yt}A=n.bind(null,t,A,e),n=void 0,!Ge||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(n=!0),r?void 0!==n?e.addEventListener(t,A,{capture:!0,passive:n}):e.addEventListener(t,A,!0):void 0!==n?e.addEventListener(t,A,{passive:n}):e.addEventListener(t,A,!1)}function Tr(e,t,A,r,n){var s=r;if(0===(1&t)&&0===(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var o=r.stateNode.containerInfo;if(o===n||8===o.nodeType&&o.parentNode===n)break;if(4===i)for(i=r.return;null!==i;){var a=i.tag;if((3===a||4===a)&&((a=i.stateNode.containerInfo)===n||8===a.nodeType&&a.parentNode===n))return;i=i.return}for(;null!==o;){if(null===(i=mn(o)))return;if(5===(a=i.tag)||6===a){r=s=i;continue e}o=o.parentNode}}r=r.return}Le((function(){var r=s,n=we(A),i=[];e:{var o=Pr.get(e);if(void 0!==o){var a=lA,l=e;switch(e){case"keypress":if(0===tA(A))break e;case"keydown":case"keyup":a=NA;break;case"focusin":l="focus",a=gA;break;case"focusout":l="blur",a=gA;break;case"beforeblur":case"afterblur":a=gA;break;case"click":if(2===A.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":a=fA;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":a=hA;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":a=QA;break;case Er:case Nr:case Dr:a=pA;break;case Qr:a=PA;break;case"scroll":a=cA;break;case"wheel":a=LA;break;case"copy":case"cut":case"paste":a=mA;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":a=DA}var u=0!==(4&t),c=!u&&"scroll"===e,d=u?null!==o?o+"Capture":null:o;u=[];for(var f,h=r;null!==h;){var g=(f=h).stateNode;if(5===f.tag&&null!==g&&(f=g,null!==d&&(null!=(g=ke(h,d))&&u.push(Ur(h,g,f)))),c)break;h=h.return}0<u.length&&(o=new a(o,l,null,A,n),i.push({event:o,listeners:u}))}}if(0===(7&t)){if(a="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||A===ye||!(l=A.relatedTarget||A.fromElement)||!mn(l)&&!l[hn])&&(a||o)&&(o=n.window===n?n:(o=n.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=r,null!==(l=(l=A.relatedTarget||A.toElement)?mn(l):null)&&(l!==(c=je(l))||5!==l.tag&&6!==l.tag)&&(l=null)):(a=null,l=r),a!==l)){if(u=fA,g="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(u=DA,g="onPointerLeave",d="onPointerEnter",h="pointer"),c=null==a?o:yn(a),f=null==l?o:yn(l),(o=new u(g,h+"leave",a,A,n)).target=c,o.relatedTarget=f,g=null,mn(n)===r&&((u=new u(d,h+"enter",l,A,n)).target=f,u.relatedTarget=c,g=u),c=g,a&&l)e:{for(d=l,h=0,f=u=a;f;f=Or(f))h++;for(f=0,g=d;g;g=Or(g))f++;for(;0<h-f;)u=Or(u),h--;for(;0<f-h;)d=Or(d),f--;for(;h--;){if(u===d||null!==d&&u===d.alternate)break e;u=Or(u),d=Or(d)}u=null}else u=null;null!==a&&Yr(i,o,a,u,!1),null!==l&&null!==c&&Yr(i,c,l,u,!0)}if("select"===(a=(o=r?yn(r):window).nodeName&&o.nodeName.toLowerCase())||"input"===a&&"file"===o.type)var p=KA;else if(TA(o))if(qA)p=sr;else{p=rr;var b=Ar}else(a=o.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(p=nr);switch(p&&(p=p(e,r))?UA(i,p,A,n):(b&&b(e,o,r),"focusout"===e&&(b=o._wrapperState)&&b.controlled&&"number"===o.type&&ee(o,"number",o.value)),b=r?yn(r):window,e){case"focusin":(TA(b)||"true"===b.contentEditable)&&(gr=b,pr=r,br=null);break;case"focusout":br=pr=gr=null;break;case"mousedown":mr=!0;break;case"contextmenu":case"mouseup":case"dragend":mr=!1,vr(i,A,n);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":vr(i,A,n)}var m;if(GA)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else RA?MA(e,A)&&(v="onCompositionEnd"):"keydown"===e&&229===A.keyCode&&(v="onCompositionStart");v&&(WA&&"ko"!==A.locale&&(RA||"onCompositionStart"!==v?"onCompositionEnd"===v&&RA&&(m=eA()):(_t="value"in(Jt=n)?Jt.value:Jt.textContent,RA=!0)),0<(b=Vr(r,v)).length&&(v=new vA(v,e,null,A,n),i.push({event:v,listeners:b}),m?v.data=m:null!==(m=zA(A))&&(v.data=m))),(m=SA?function(e,t){switch(e){case"compositionend":return zA(t);case"keypress":return 32!==t.which?null:(XA=!0,ZA);case"textInput":return(e=t.data)===ZA&&XA?null:e;default:return null}}(e,A):function(e,t){if(RA)return"compositionend"===e||!GA&&MA(e,t)?(e=eA(),$t=_t=Jt=null,RA=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return WA&&"ko"!==t.locale?null:t.data}}(e,A))&&(0<(r=Vr(r,"onBeforeInput")).length&&(n=new vA("onBeforeInput","beforeinput",null,A,n),i.push({event:n,listeners:r}),n.data=m))}Zr(i,t)}))}function Ur(e,t,A){return{instance:e,listener:t,currentTarget:A}}function Vr(e,t){for(var A=t+"Capture",r=[];null!==e;){var n=e,s=n.stateNode;5===n.tag&&null!==s&&(n=s,null!=(s=ke(e,A))&&r.unshift(Ur(e,s,n)),null!=(s=ke(e,t))&&r.push(Ur(e,s,n))),e=e.return}return r}function Or(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Yr(e,t,A,r,n){for(var s=t._reactName,i=[];null!==A&&A!==r;){var o=A,a=o.alternate,l=o.stateNode;if(null!==a&&a===r)break;5===o.tag&&null!==l&&(o=l,n?null!=(a=ke(A,s))&&i.unshift(Ur(A,a,o)):n||null!=(a=ke(A,s))&&i.push(Ur(A,a,o))),A=A.return}0!==i.length&&e.push({event:t,listeners:i})}var Hr=/\r\n?/g,Kr=/\u0000|\uFFFD/g;function qr(e){return("string"===typeof e?e:""+e).replace(Hr,"\n").replace(Kr,"")}function Jr(e,t,A){if(t=qr(t),qr(e)!==t&&A)throw Error(s(425))}function _r(){}var $r=null,en=null;function tn(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var An="function"===typeof setTimeout?setTimeout:void 0,rn="function"===typeof clearTimeout?clearTimeout:void 0,nn="function"===typeof Promise?Promise:void 0,sn="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof nn?function(e){return nn.resolve(null).then(e).catch(on)}:An;function on(e){setTimeout((function(){throw e}))}function an(e,t){var A=t,r=0;do{var n=A.nextSibling;if(e.removeChild(A),n&&8===n.nodeType)if("/$"===(A=n.data)){if(0===r)return e.removeChild(n),void jt(t);r--}else"$"!==A&&"$?"!==A&&"$!"!==A||r++;A=n}while(A);jt(t)}function ln(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function un(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var A=e.data;if("$"===A||"$!"===A||"$?"===A){if(0===t)return e;t--}else"/$"===A&&t++}e=e.previousSibling}return null}var cn=Math.random().toString(36).slice(2),dn="__reactFiber$"+cn,fn="__reactProps$"+cn,hn="__reactContainer$"+cn,gn="__reactEvents$"+cn,pn="__reactListeners$"+cn,bn="__reactHandles$"+cn;function mn(e){var t=e[dn];if(t)return t;for(var A=e.parentNode;A;){if(t=A[hn]||A[dn]){if(A=t.alternate,null!==t.child||null!==A&&null!==A.child)for(e=un(e);null!==e;){if(A=e[dn])return A;e=un(e)}return t}A=(e=A).parentNode}return null}function vn(e){return!(e=e[dn]||e[hn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function yn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function wn(e){return e[fn]||null}var Bn=[],xn=-1;function Cn(e){return{current:e}}function En(e){0>xn||(e.current=Bn[xn],Bn[xn]=null,xn--)}function Nn(e,t){xn++,Bn[xn]=e.current,e.current=t}var Dn={},Qn=Cn(Dn),Pn=Cn(!1),In=Dn;function Ln(e,t){var A=e.type.contextTypes;if(!A)return Dn;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var n,s={};for(n in A)s[n]=t[n];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function kn(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Gn(){En(Pn),En(Qn)}function Fn(e,t,A){if(Qn.current!==Dn)throw Error(s(168));Nn(Qn,t),Nn(Pn,A)}function Sn(e,t,A){var r=e.stateNode;if(t=t.childContextTypes,"function"!==typeof r.getChildContext)return A;for(var n in r=r.getChildContext())if(!(n in t))throw Error(s(108,T(e)||"Unknown",n));return Z({},A,r)}function Wn(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Dn,In=Qn.current,Nn(Qn,e),Nn(Pn,Pn.current),!0}function Zn(e,t,A){var r=e.stateNode;if(!r)throw Error(s(169));A?(e=Sn(e,t,In),r.__reactInternalMemoizedMergedChildContext=e,En(Pn),En(Qn),Nn(Qn,e)):En(Pn),Nn(Pn,A)}var Xn=null,Mn=!1,zn=!1;function Rn(e){null===Xn?Xn=[e]:Xn.push(e)}function jn(){if(!zn&&null!==Xn){zn=!0;var e=0,t=vt;try{var A=Xn;for(vt=1;e<A.length;e++){var r=A[e];do{r=r(!0)}while(null!==r)}Xn=null,Mn=!1}catch(n){throw null!==Xn&&(Xn=Xn.slice(e+1)),Ye($e,jn),n}finally{vt=t,zn=!1}}return null}var Tn=[],Un=0,Vn=null,On=0,Yn=[],Hn=0,Kn=null,qn=1,Jn="";function _n(e,t){Tn[Un++]=On,Tn[Un++]=Vn,Vn=e,On=t}function $n(e,t,A){Yn[Hn++]=qn,Yn[Hn++]=Jn,Yn[Hn++]=Kn,Kn=e;var r=qn;e=Jn;var n=32-it(r)-1;r&=~(1<<n),A+=1;var s=32-it(t)+n;if(30<s){var i=n-n%5;s=(r&(1<<i)-1).toString(32),r>>=i,n-=i,qn=1<<32-it(t)+n|A<<n|r,Jn=s+e}else qn=1<<s|A<<n|r,Jn=e}function es(e){null!==e.return&&(_n(e,1),$n(e,1,0))}function ts(e){for(;e===Vn;)Vn=Tn[--Un],Tn[Un]=null,On=Tn[--Un],Tn[Un]=null;for(;e===Kn;)Kn=Yn[--Hn],Yn[Hn]=null,Jn=Yn[--Hn],Yn[Hn]=null,qn=Yn[--Hn],Yn[Hn]=null}var As=null,rs=null,ns=!1,ss=null;function is(e,t){var A=Ll(5,null,null,0);A.elementType="DELETED",A.stateNode=t,A.return=e,null===(t=e.deletions)?(e.deletions=[A],e.flags|=16):t.push(A)}function os(e,t){switch(e.tag){case 5:var A=e.type;return null!==(t=1!==t.nodeType||A.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,As=e,rs=ln(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,As=e,rs=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(A=null!==Kn?{id:qn,overflow:Jn}:null,e.memoizedState={dehydrated:t,treeContext:A,retryLane:1073741824},(A=Ll(18,null,null,0)).stateNode=t,A.return=e,e.child=A,As=e,rs=null,!0);default:return!1}}function as(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ls(e){if(ns){var t=rs;if(t){var A=t;if(!os(e,t)){if(as(e))throw Error(s(418));t=ln(A.nextSibling);var r=As;t&&os(e,t)?is(r,A):(e.flags=-4097&e.flags|2,ns=!1,As=e)}}else{if(as(e))throw Error(s(418));e.flags=-4097&e.flags|2,ns=!1,As=e}}}function us(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;As=e}function cs(e){if(e!==As)return!1;if(!ns)return us(e),ns=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!tn(e.type,e.memoizedProps)),t&&(t=rs)){if(as(e))throw ds(),Error(s(418));for(;t;)is(e,t),t=ln(t.nextSibling)}if(us(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var A=e.data;if("/$"===A){if(0===t){rs=ln(e.nextSibling);break e}t--}else"$"!==A&&"$!"!==A&&"$?"!==A||t++}e=e.nextSibling}rs=null}}else rs=As?ln(e.stateNode.nextSibling):null;return!0}function ds(){for(var e=rs;e;)e=ln(e.nextSibling)}function fs(){rs=As=null,ns=!1}function hs(e){null===ss?ss=[e]:ss.push(e)}var gs=y.ReactCurrentBatchConfig;function ps(e,t,A){if(null!==(e=A.ref)&&"function"!==typeof e&&"object"!==typeof e){if(A._owner){if(A=A._owner){if(1!==A.tag)throw Error(s(309));var r=A.stateNode}if(!r)throw Error(s(147,e));var n=r,i=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=n.refs;null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!==typeof e)throw Error(s(284));if(!A._owner)throw Error(s(290,e))}return e}function bs(e,t){throw e=Object.prototype.toString.call(t),Error(s(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function ms(e){return(0,e._init)(e._payload)}function vs(e){function t(t,A){if(e){var r=t.deletions;null===r?(t.deletions=[A],t.flags|=16):r.push(A)}}function A(A,r){if(!e)return null;for(;null!==r;)t(A,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function n(e,t){return(e=Gl(e,t)).index=0,e.sibling=null,e}function i(t,A,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<A?(t.flags|=2,A):r:(t.flags|=2,A):(t.flags|=1048576,A)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function a(e,t,A,r){return null===t||6!==t.tag?((t=Zl(A,e.mode,r)).return=e,t):((t=n(t,A)).return=e,t)}function l(e,t,A,r){var s=A.type;return s===x?c(e,t,A.props.children,r,A.key):null!==t&&(t.elementType===s||"object"===typeof s&&null!==s&&s.$$typeof===k&&ms(s)===t.type)?((r=n(t,A.props)).ref=ps(e,t,A),r.return=e,r):((r=Fl(A.type,A.key,A.props,null,e.mode,r)).ref=ps(e,t,A),r.return=e,r)}function u(e,t,A,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==A.containerInfo||t.stateNode.implementation!==A.implementation?((t=Xl(A,e.mode,r)).return=e,t):((t=n(t,A.children||[])).return=e,t)}function c(e,t,A,r,s){return null===t||7!==t.tag?((t=Sl(A,e.mode,r,s)).return=e,t):((t=n(t,A)).return=e,t)}function d(e,t,A){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Zl(""+t,e.mode,A)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(A=Fl(t.type,t.key,t.props,null,e.mode,A)).ref=ps(e,null,t),A.return=e,A;case B:return(t=Xl(t,e.mode,A)).return=e,t;case k:return d(e,(0,t._init)(t._payload),A)}if(te(t)||S(t))return(t=Sl(t,e.mode,A,null)).return=e,t;bs(e,t)}return null}function f(e,t,A,r){var n=null!==t?t.key:null;if("string"===typeof A&&""!==A||"number"===typeof A)return null!==n?null:a(e,t,""+A,r);if("object"===typeof A&&null!==A){switch(A.$$typeof){case w:return A.key===n?l(e,t,A,r):null;case B:return A.key===n?u(e,t,A,r):null;case k:return f(e,t,(n=A._init)(A._payload),r)}if(te(A)||S(A))return null!==n?null:c(e,t,A,r,null);bs(e,A)}return null}function h(e,t,A,r,n){if("string"===typeof r&&""!==r||"number"===typeof r)return a(t,e=e.get(A)||null,""+r,n);if("object"===typeof r&&null!==r){switch(r.$$typeof){case w:return l(t,e=e.get(null===r.key?A:r.key)||null,r,n);case B:return u(t,e=e.get(null===r.key?A:r.key)||null,r,n);case k:return h(e,t,A,(0,r._init)(r._payload),n)}if(te(r)||S(r))return c(t,e=e.get(A)||null,r,n,null);bs(t,r)}return null}function g(n,s,o,a){for(var l=null,u=null,c=s,g=s=0,p=null;null!==c&&g<o.length;g++){c.index>g?(p=c,c=null):p=c.sibling;var b=f(n,c,o[g],a);if(null===b){null===c&&(c=p);break}e&&c&&null===b.alternate&&t(n,c),s=i(b,s,g),null===u?l=b:u.sibling=b,u=b,c=p}if(g===o.length)return A(n,c),ns&&_n(n,g),l;if(null===c){for(;g<o.length;g++)null!==(c=d(n,o[g],a))&&(s=i(c,s,g),null===u?l=c:u.sibling=c,u=c);return ns&&_n(n,g),l}for(c=r(n,c);g<o.length;g++)null!==(p=h(c,n,g,o[g],a))&&(e&&null!==p.alternate&&c.delete(null===p.key?g:p.key),s=i(p,s,g),null===u?l=p:u.sibling=p,u=p);return e&&c.forEach((function(e){return t(n,e)})),ns&&_n(n,g),l}function p(n,o,a,l){var u=S(a);if("function"!==typeof u)throw Error(s(150));if(null==(a=u.call(a)))throw Error(s(151));for(var c=u=null,g=o,p=o=0,b=null,m=a.next();null!==g&&!m.done;p++,m=a.next()){g.index>p?(b=g,g=null):b=g.sibling;var v=f(n,g,m.value,l);if(null===v){null===g&&(g=b);break}e&&g&&null===v.alternate&&t(n,g),o=i(v,o,p),null===c?u=v:c.sibling=v,c=v,g=b}if(m.done)return A(n,g),ns&&_n(n,p),u;if(null===g){for(;!m.done;p++,m=a.next())null!==(m=d(n,m.value,l))&&(o=i(m,o,p),null===c?u=m:c.sibling=m,c=m);return ns&&_n(n,p),u}for(g=r(n,g);!m.done;p++,m=a.next())null!==(m=h(g,n,p,m.value,l))&&(e&&null!==m.alternate&&g.delete(null===m.key?p:m.key),o=i(m,o,p),null===c?u=m:c.sibling=m,c=m);return e&&g.forEach((function(e){return t(n,e)})),ns&&_n(n,p),u}return function e(r,s,i,a){if("object"===typeof i&&null!==i&&i.type===x&&null===i.key&&(i=i.props.children),"object"===typeof i&&null!==i){switch(i.$$typeof){case w:e:{for(var l=i.key,u=s;null!==u;){if(u.key===l){if((l=i.type)===x){if(7===u.tag){A(r,u.sibling),(s=n(u,i.props.children)).return=r,r=s;break e}}else if(u.elementType===l||"object"===typeof l&&null!==l&&l.$$typeof===k&&ms(l)===u.type){A(r,u.sibling),(s=n(u,i.props)).ref=ps(r,u,i),s.return=r,r=s;break e}A(r,u);break}t(r,u),u=u.sibling}i.type===x?((s=Sl(i.props.children,r.mode,a,i.key)).return=r,r=s):((a=Fl(i.type,i.key,i.props,null,r.mode,a)).ref=ps(r,s,i),a.return=r,r=a)}return o(r);case B:e:{for(u=i.key;null!==s;){if(s.key===u){if(4===s.tag&&s.stateNode.containerInfo===i.containerInfo&&s.stateNode.implementation===i.implementation){A(r,s.sibling),(s=n(s,i.children||[])).return=r,r=s;break e}A(r,s);break}t(r,s),s=s.sibling}(s=Xl(i,r.mode,a)).return=r,r=s}return o(r);case k:return e(r,s,(u=i._init)(i._payload),a)}if(te(i))return g(r,s,i,a);if(S(i))return p(r,s,i,a);bs(r,i)}return"string"===typeof i&&""!==i||"number"===typeof i?(i=""+i,null!==s&&6===s.tag?(A(r,s.sibling),(s=n(s,i)).return=r,r=s):(A(r,s),(s=Zl(i,r.mode,a)).return=r,r=s),o(r)):A(r,s)}}var ys=vs(!0),ws=vs(!1),Bs=Cn(null),xs=null,Cs=null,Es=null;function Ns(){Es=Cs=xs=null}function Ds(e){var t=Bs.current;En(Bs),e._currentValue=t}function Qs(e,t,A){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===A)break;e=e.return}}function Ps(e,t){xs=e,Es=Cs=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(vo=!0),e.firstContext=null)}function Is(e){var t=e._currentValue;if(Es!==e)if(e={context:e,memoizedValue:t,next:null},null===Cs){if(null===xs)throw Error(s(308));Cs=e,xs.dependencies={lanes:0,firstContext:e}}else Cs=Cs.next=e;return t}var Ls=null;function ks(e){null===Ls?Ls=[e]:Ls.push(e)}function Gs(e,t,A,r){var n=t.interleaved;return null===n?(A.next=A,ks(t)):(A.next=n.next,n.next=A),t.interleaved=A,Fs(e,r)}function Fs(e,t){e.lanes|=t;var A=e.alternate;for(null!==A&&(A.lanes|=t),A=e,e=e.return;null!==e;)e.childLanes|=t,null!==(A=e.alternate)&&(A.childLanes|=t),A=e,e=e.return;return 3===A.tag?A.stateNode:null}var Ss=!1;function Ws(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Zs(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Xs(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Ms(e,t,A){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!==(2&Qa)){var n=r.pending;return null===n?t.next=t:(t.next=n.next,n.next=t),r.pending=t,Fs(e,A)}return null===(n=r.interleaved)?(t.next=t,ks(r)):(t.next=n.next,n.next=t),r.interleaved=t,Fs(e,A)}function zs(e,t,A){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&A))){var r=t.lanes;A|=r&=e.pendingLanes,t.lanes=A,mt(e,A)}}function Rs(e,t){var A=e.updateQueue,r=e.alternate;if(null!==r&&A===(r=r.updateQueue)){var n=null,s=null;if(null!==(A=A.firstBaseUpdate)){do{var i={eventTime:A.eventTime,lane:A.lane,tag:A.tag,payload:A.payload,callback:A.callback,next:null};null===s?n=s=i:s=s.next=i,A=A.next}while(null!==A);null===s?n=s=t:s=s.next=t}else n=s=t;return A={baseState:r.baseState,firstBaseUpdate:n,lastBaseUpdate:s,shared:r.shared,effects:r.effects},void(e.updateQueue=A)}null===(e=A.lastBaseUpdate)?A.firstBaseUpdate=t:e.next=t,A.lastBaseUpdate=t}function js(e,t,A,r){var n=e.updateQueue;Ss=!1;var s=n.firstBaseUpdate,i=n.lastBaseUpdate,o=n.shared.pending;if(null!==o){n.shared.pending=null;var a=o,l=a.next;a.next=null,null===i?s=l:i.next=l,i=a;var u=e.alternate;null!==u&&((o=(u=u.updateQueue).lastBaseUpdate)!==i&&(null===o?u.firstBaseUpdate=l:o.next=l,u.lastBaseUpdate=a))}if(null!==s){var c=n.baseState;for(i=0,u=l=a=null,o=s;;){var d=o.lane,f=o.eventTime;if((r&d)===d){null!==u&&(u=u.next={eventTime:f,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var h=e,g=o;switch(d=t,f=A,g.tag){case 1:if("function"===typeof(h=g.payload)){c=h.call(f,c,d);break e}c=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null===(d="function"===typeof(h=g.payload)?h.call(f,c,d):h)||void 0===d)break e;c=Z({},c,d);break e;case 2:Ss=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(d=n.effects)?n.effects=[o]:d.push(o))}else f={eventTime:f,lane:d,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===u?(l=u=f,a=c):u=u.next=f,i|=d;if(null===(o=o.next)){if(null===(o=n.shared.pending))break;o=(d=o).next,d.next=null,n.lastBaseUpdate=d,n.shared.pending=null}}if(null===u&&(a=c),n.baseState=a,n.firstBaseUpdate=l,n.lastBaseUpdate=u,null!==(t=n.shared.interleaved)){n=t;do{i|=n.lane,n=n.next}while(n!==t)}else null===s&&(n.shared.lanes=0);Wa|=i,e.lanes=i,e.memoizedState=c}}function Ts(e,t,A){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],n=r.callback;if(null!==n){if(r.callback=null,r=A,"function"!==typeof n)throw Error(s(191,n));n.call(r)}}}var Us={},Vs=Cn(Us),Os=Cn(Us),Ys=Cn(Us);function Hs(e){if(e===Us)throw Error(s(174));return e}function Ks(e,t){switch(Nn(Ys,t),Nn(Os,e),Nn(Vs,Us),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ae(null,"");break;default:t=ae(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}En(Vs),Nn(Vs,t)}function qs(){En(Vs),En(Os),En(Ys)}function Js(e){Hs(Ys.current);var t=Hs(Vs.current),A=ae(t,e.type);t!==A&&(Nn(Os,e),Nn(Vs,A))}function _s(e){Os.current===e&&(En(Vs),En(Os))}var $s=Cn(0);function ei(e){for(var t=e;null!==t;){if(13===t.tag){var A=t.memoizedState;if(null!==A&&(null===(A=A.dehydrated)||"$?"===A.data||"$!"===A.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ti=[];function Ai(){for(var e=0;e<ti.length;e++)ti[e]._workInProgressVersionPrimary=null;ti.length=0}var ri=y.ReactCurrentDispatcher,ni=y.ReactCurrentBatchConfig,si=0,ii=null,oi=null,ai=null,li=!1,ui=!1,ci=0,di=0;function fi(){throw Error(s(321))}function hi(e,t){if(null===t)return!1;for(var A=0;A<t.length&&A<e.length;A++)if(!ir(e[A],t[A]))return!1;return!0}function gi(e,t,A,r,n,i){if(si=i,ii=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ri.current=null===e||null===e.memoizedState?_i:$i,e=A(r,n),ui){i=0;do{if(ui=!1,ci=0,25<=i)throw Error(s(301));i+=1,ai=oi=null,t.updateQueue=null,ri.current=eo,e=A(r,n)}while(ui)}if(ri.current=Ji,t=null!==oi&&null!==oi.next,si=0,ai=oi=ii=null,li=!1,t)throw Error(s(300));return e}function pi(){var e=0!==ci;return ci=0,e}function bi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ai?ii.memoizedState=ai=e:ai=ai.next=e,ai}function mi(){if(null===oi){var e=ii.alternate;e=null!==e?e.memoizedState:null}else e=oi.next;var t=null===ai?ii.memoizedState:ai.next;if(null!==t)ai=t,oi=e;else{if(null===e)throw Error(s(310));e={memoizedState:(oi=e).memoizedState,baseState:oi.baseState,baseQueue:oi.baseQueue,queue:oi.queue,next:null},null===ai?ii.memoizedState=ai=e:ai=ai.next=e}return ai}function vi(e,t){return"function"===typeof t?t(e):t}function yi(e){var t=mi(),A=t.queue;if(null===A)throw Error(s(311));A.lastRenderedReducer=e;var r=oi,n=r.baseQueue,i=A.pending;if(null!==i){if(null!==n){var o=n.next;n.next=i.next,i.next=o}r.baseQueue=n=i,A.pending=null}if(null!==n){i=n.next,r=r.baseState;var a=o=null,l=null,u=i;do{var c=u.lane;if((si&c)===c)null!==l&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),r=u.hasEagerState?u.eagerState:e(r,u.action);else{var d={lane:c,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===l?(a=l=d,o=r):l=l.next=d,ii.lanes|=c,Wa|=c}u=u.next}while(null!==u&&u!==i);null===l?o=r:l.next=a,ir(r,t.memoizedState)||(vo=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=l,A.lastRenderedState=r}if(null!==(e=A.interleaved)){n=e;do{i=n.lane,ii.lanes|=i,Wa|=i,n=n.next}while(n!==e)}else null===n&&(A.lanes=0);return[t.memoizedState,A.dispatch]}function wi(e){var t=mi(),A=t.queue;if(null===A)throw Error(s(311));A.lastRenderedReducer=e;var r=A.dispatch,n=A.pending,i=t.memoizedState;if(null!==n){A.pending=null;var o=n=n.next;do{i=e(i,o.action),o=o.next}while(o!==n);ir(i,t.memoizedState)||(vo=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),A.lastRenderedState=i}return[i,r]}function Bi(){}function xi(e,t){var A=ii,r=mi(),n=t(),i=!ir(r.memoizedState,n);if(i&&(r.memoizedState=n,vo=!0),r=r.queue,Si(Ni.bind(null,A,r,e),[e]),r.getSnapshot!==t||i||null!==ai&&1&ai.memoizedState.tag){if(A.flags|=2048,Ii(9,Ei.bind(null,A,r,n,t),void 0,null),null===Pa)throw Error(s(349));0!==(30&si)||Ci(A,t,n)}return n}function Ci(e,t,A){e.flags|=16384,e={getSnapshot:t,value:A},null===(t=ii.updateQueue)?(t={lastEffect:null,stores:null},ii.updateQueue=t,t.stores=[e]):null===(A=t.stores)?t.stores=[e]:A.push(e)}function Ei(e,t,A,r){t.value=A,t.getSnapshot=r,Di(t)&&Qi(e)}function Ni(e,t,A){return A((function(){Di(t)&&Qi(e)}))}function Di(e){var t=e.getSnapshot;e=e.value;try{var A=t();return!ir(e,A)}catch(r){return!0}}function Qi(e){var t=Fs(e,1);null!==t&&Al(t,e,1,-1)}function Pi(e){var t=bi();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:vi,lastRenderedState:e},t.queue=e,e=e.dispatch=Yi.bind(null,ii,e),[t.memoizedState,e]}function Ii(e,t,A,r){return e={tag:e,create:t,destroy:A,deps:r,next:null},null===(t=ii.updateQueue)?(t={lastEffect:null,stores:null},ii.updateQueue=t,t.lastEffect=e.next=e):null===(A=t.lastEffect)?t.lastEffect=e.next=e:(r=A.next,A.next=e,e.next=r,t.lastEffect=e),e}function Li(){return mi().memoizedState}function ki(e,t,A,r){var n=bi();ii.flags|=e,n.memoizedState=Ii(1|t,A,void 0,void 0===r?null:r)}function Gi(e,t,A,r){var n=mi();r=void 0===r?null:r;var s=void 0;if(null!==oi){var i=oi.memoizedState;if(s=i.destroy,null!==r&&hi(r,i.deps))return void(n.memoizedState=Ii(t,A,s,r))}ii.flags|=e,n.memoizedState=Ii(1|t,A,s,r)}function Fi(e,t){return ki(8390656,8,e,t)}function Si(e,t){return Gi(2048,8,e,t)}function Wi(e,t){return Gi(4,2,e,t)}function Zi(e,t){return Gi(4,4,e,t)}function Xi(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Mi(e,t,A){return A=null!==A&&void 0!==A?A.concat([e]):null,Gi(4,4,Xi.bind(null,t,e),A)}function zi(){}function Ri(e,t){var A=mi();t=void 0===t?null:t;var r=A.memoizedState;return null!==r&&null!==t&&hi(t,r[1])?r[0]:(A.memoizedState=[e,t],e)}function ji(e,t){var A=mi();t=void 0===t?null:t;var r=A.memoizedState;return null!==r&&null!==t&&hi(t,r[1])?r[0]:(e=e(),A.memoizedState=[e,t],e)}function Ti(e,t,A){return 0===(21&si)?(e.baseState&&(e.baseState=!1,vo=!0),e.memoizedState=A):(ir(A,t)||(A=gt(),ii.lanes|=A,Wa|=A,e.baseState=!0),t)}function Ui(e,t){var A=vt;vt=0!==A&&4>A?A:4,e(!0);var r=ni.transition;ni.transition={};try{e(!1),t()}finally{vt=A,ni.transition=r}}function Vi(){return mi().memoizedState}function Oi(e,t,A){var r=tl(e);if(A={lane:r,action:A,hasEagerState:!1,eagerState:null,next:null},Hi(e))Ki(t,A);else if(null!==(A=Gs(e,t,A,r))){Al(A,e,r,el()),qi(A,t,r)}}function Yi(e,t,A){var r=tl(e),n={lane:r,action:A,hasEagerState:!1,eagerState:null,next:null};if(Hi(e))Ki(t,n);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var i=t.lastRenderedState,o=s(i,A);if(n.hasEagerState=!0,n.eagerState=o,ir(o,i)){var a=t.interleaved;return null===a?(n.next=n,ks(t)):(n.next=a.next,a.next=n),void(t.interleaved=n)}}catch(l){}null!==(A=Gs(e,t,n,r))&&(Al(A,e,r,n=el()),qi(A,t,r))}}function Hi(e){var t=e.alternate;return e===ii||null!==t&&t===ii}function Ki(e,t){ui=li=!0;var A=e.pending;null===A?t.next=t:(t.next=A.next,A.next=t),e.pending=t}function qi(e,t,A){if(0!==(4194240&A)){var r=t.lanes;A|=r&=e.pendingLanes,t.lanes=A,mt(e,A)}}var Ji={readContext:Is,useCallback:fi,useContext:fi,useEffect:fi,useImperativeHandle:fi,useInsertionEffect:fi,useLayoutEffect:fi,useMemo:fi,useReducer:fi,useRef:fi,useState:fi,useDebugValue:fi,useDeferredValue:fi,useTransition:fi,useMutableSource:fi,useSyncExternalStore:fi,useId:fi,unstable_isNewReconciler:!1},_i={readContext:Is,useCallback:function(e,t){return bi().memoizedState=[e,void 0===t?null:t],e},useContext:Is,useEffect:Fi,useImperativeHandle:function(e,t,A){return A=null!==A&&void 0!==A?A.concat([e]):null,ki(4194308,4,Xi.bind(null,t,e),A)},useLayoutEffect:function(e,t){return ki(4194308,4,e,t)},useInsertionEffect:function(e,t){return ki(4,2,e,t)},useMemo:function(e,t){var A=bi();return t=void 0===t?null:t,e=e(),A.memoizedState=[e,t],e},useReducer:function(e,t,A){var r=bi();return t=void 0!==A?A(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=Oi.bind(null,ii,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},bi().memoizedState=e},useState:Pi,useDebugValue:zi,useDeferredValue:function(e){return bi().memoizedState=e},useTransition:function(){var e=Pi(!1),t=e[0];return e=Ui.bind(null,e[1]),bi().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,A){var r=ii,n=bi();if(ns){if(void 0===A)throw Error(s(407));A=A()}else{if(A=t(),null===Pa)throw Error(s(349));0!==(30&si)||Ci(r,t,A)}n.memoizedState=A;var i={value:A,getSnapshot:t};return n.queue=i,Fi(Ni.bind(null,r,i,e),[e]),r.flags|=2048,Ii(9,Ei.bind(null,r,i,A,t),void 0,null),A},useId:function(){var e=bi(),t=Pa.identifierPrefix;if(ns){var A=Jn;t=":"+t+"R"+(A=(qn&~(1<<32-it(qn)-1)).toString(32)+A),0<(A=ci++)&&(t+="H"+A.toString(32)),t+=":"}else t=":"+t+"r"+(A=di++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},$i={readContext:Is,useCallback:Ri,useContext:Is,useEffect:Si,useImperativeHandle:Mi,useInsertionEffect:Wi,useLayoutEffect:Zi,useMemo:ji,useReducer:yi,useRef:Li,useState:function(){return yi(vi)},useDebugValue:zi,useDeferredValue:function(e){return Ti(mi(),oi.memoizedState,e)},useTransition:function(){return[yi(vi)[0],mi().memoizedState]},useMutableSource:Bi,useSyncExternalStore:xi,useId:Vi,unstable_isNewReconciler:!1},eo={readContext:Is,useCallback:Ri,useContext:Is,useEffect:Si,useImperativeHandle:Mi,useInsertionEffect:Wi,useLayoutEffect:Zi,useMemo:ji,useReducer:wi,useRef:Li,useState:function(){return wi(vi)},useDebugValue:zi,useDeferredValue:function(e){var t=mi();return null===oi?t.memoizedState=e:Ti(t,oi.memoizedState,e)},useTransition:function(){return[wi(vi)[0],mi().memoizedState]},useMutableSource:Bi,useSyncExternalStore:xi,useId:Vi,unstable_isNewReconciler:!1};function to(e,t){if(e&&e.defaultProps){for(var A in t=Z({},t),e=e.defaultProps)void 0===t[A]&&(t[A]=e[A]);return t}return t}function Ao(e,t,A,r){A=null===(A=A(r,t=e.memoizedState))||void 0===A?t:Z({},t,A),e.memoizedState=A,0===e.lanes&&(e.updateQueue.baseState=A)}var ro={isMounted:function(e){return!!(e=e._reactInternals)&&je(e)===e},enqueueSetState:function(e,t,A){e=e._reactInternals;var r=el(),n=tl(e),s=Xs(r,n);s.payload=t,void 0!==A&&null!==A&&(s.callback=A),null!==(t=Ms(e,s,n))&&(Al(t,e,n,r),zs(t,e,n))},enqueueReplaceState:function(e,t,A){e=e._reactInternals;var r=el(),n=tl(e),s=Xs(r,n);s.tag=1,s.payload=t,void 0!==A&&null!==A&&(s.callback=A),null!==(t=Ms(e,s,n))&&(Al(t,e,n,r),zs(t,e,n))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var A=el(),r=tl(e),n=Xs(A,r);n.tag=2,void 0!==t&&null!==t&&(n.callback=t),null!==(t=Ms(e,n,r))&&(Al(t,e,r,A),zs(t,e,r))}};function no(e,t,A,r,n,s,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,s,i):!t.prototype||!t.prototype.isPureReactComponent||(!or(A,r)||!or(n,s))}function so(e,t,A){var r=!1,n=Dn,s=t.contextType;return"object"===typeof s&&null!==s?s=Is(s):(n=kn(t)?In:Qn.current,s=(r=null!==(r=t.contextTypes)&&void 0!==r)?Ln(e,n):Dn),t=new t(A,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ro,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=s),t}function io(e,t,A,r){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(A,r),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(A,r),t.state!==e&&ro.enqueueReplaceState(t,t.state,null)}function oo(e,t,A,r){var n=e.stateNode;n.props=A,n.state=e.memoizedState,n.refs={},Ws(e);var s=t.contextType;"object"===typeof s&&null!==s?n.context=Is(s):(s=kn(t)?In:Qn.current,n.context=Ln(e,s)),n.state=e.memoizedState,"function"===typeof(s=t.getDerivedStateFromProps)&&(Ao(e,t,s,A),n.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof n.getSnapshotBeforeUpdate||"function"!==typeof n.UNSAFE_componentWillMount&&"function"!==typeof n.componentWillMount||(t=n.state,"function"===typeof n.componentWillMount&&n.componentWillMount(),"function"===typeof n.UNSAFE_componentWillMount&&n.UNSAFE_componentWillMount(),t!==n.state&&ro.enqueueReplaceState(n,n.state,null),js(e,A,n,r),n.state=e.memoizedState),"function"===typeof n.componentDidMount&&(e.flags|=4194308)}function ao(e,t){try{var A="",r=t;do{A+=R(r),r=r.return}while(r);var n=A}catch(s){n="\nError generating stack: "+s.message+"\n"+s.stack}return{value:e,source:t,stack:n,digest:null}}function lo(e,t,A){return{value:e,source:null,stack:null!=A?A:null,digest:null!=t?t:null}}function uo(e,t){try{console.error(t.value)}catch(A){setTimeout((function(){throw A}))}}var co="function"===typeof WeakMap?WeakMap:Map;function fo(e,t,A){(A=Xs(-1,A)).tag=3,A.payload={element:null};var r=t.value;return A.callback=function(){Ua||(Ua=!0,Va=r),uo(0,t)},A}function ho(e,t,A){(A=Xs(-1,A)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var n=t.value;A.payload=function(){return r(n)},A.callback=function(){uo(0,t)}}var s=e.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(A.callback=function(){uo(0,t),"function"!==typeof r&&(null===Oa?Oa=new Set([this]):Oa.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),A}function go(e,t,A){var r=e.pingCache;if(null===r){r=e.pingCache=new co;var n=new Set;r.set(t,n)}else void 0===(n=r.get(t))&&(n=new Set,r.set(t,n));n.has(A)||(n.add(A),e=El.bind(null,e,t,A),t.then(e,e))}function po(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function bo(e,t,A,r,n){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,A.flags|=131072,A.flags&=-52805,1===A.tag&&(null===A.alternate?A.tag=17:((t=Xs(-1,1)).tag=2,Ms(A,t,1))),A.lanes|=1),e):(e.flags|=65536,e.lanes=n,e)}var mo=y.ReactCurrentOwner,vo=!1;function yo(e,t,A,r){t.child=null===e?ws(t,null,A,r):ys(t,e.child,A,r)}function wo(e,t,A,r,n){A=A.render;var s=t.ref;return Ps(t,n),r=gi(e,t,A,r,s,n),A=pi(),null===e||vo?(ns&&A&&es(t),t.flags|=1,yo(e,t,r,n),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~n,Uo(e,t,n))}function Bo(e,t,A,r,n){if(null===e){var s=A.type;return"function"!==typeof s||kl(s)||void 0!==s.defaultProps||null!==A.compare||void 0!==A.defaultProps?((e=Fl(A.type,null,r,t,t.mode,n)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,xo(e,t,s,r,n))}if(s=e.child,0===(e.lanes&n)){var i=s.memoizedProps;if((A=null!==(A=A.compare)?A:or)(i,r)&&e.ref===t.ref)return Uo(e,t,n)}return t.flags|=1,(e=Gl(s,r)).ref=t.ref,e.return=t,t.child=e}function xo(e,t,A,r,n){if(null!==e){var s=e.memoizedProps;if(or(s,r)&&e.ref===t.ref){if(vo=!1,t.pendingProps=r=s,0===(e.lanes&n))return t.lanes=e.lanes,Uo(e,t,n);0!==(131072&e.flags)&&(vo=!0)}}return No(e,t,A,r,n)}function Co(e,t,A){var r=t.pendingProps,n=r.children,s=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Nn(Ga,ka),ka|=A;else{if(0===(1073741824&A))return e=null!==s?s.baseLanes|A:A,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Nn(Ga,ka),ka|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==s?s.baseLanes:A,Nn(Ga,ka),ka|=r}else null!==s?(r=s.baseLanes|A,t.memoizedState=null):r=A,Nn(Ga,ka),ka|=r;return yo(e,t,n,A),t.child}function Eo(e,t){var A=t.ref;(null===e&&null!==A||null!==e&&e.ref!==A)&&(t.flags|=512,t.flags|=2097152)}function No(e,t,A,r,n){var s=kn(A)?In:Qn.current;return s=Ln(t,s),Ps(t,n),A=gi(e,t,A,r,s,n),r=pi(),null===e||vo?(ns&&r&&es(t),t.flags|=1,yo(e,t,A,n),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~n,Uo(e,t,n))}function Do(e,t,A,r,n){if(kn(A)){var s=!0;Wn(t)}else s=!1;if(Ps(t,n),null===t.stateNode)To(e,t),so(t,A,r),oo(t,A,r,n),r=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var a=i.context,l=A.contextType;"object"===typeof l&&null!==l?l=Is(l):l=Ln(t,l=kn(A)?In:Qn.current);var u=A.getDerivedStateFromProps,c="function"===typeof u||"function"===typeof i.getSnapshotBeforeUpdate;c||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(o!==r||a!==l)&&io(t,i,r,l),Ss=!1;var d=t.memoizedState;i.state=d,js(t,r,i,n),a=t.memoizedState,o!==r||d!==a||Pn.current||Ss?("function"===typeof u&&(Ao(t,A,u,r),a=t.memoizedState),(o=Ss||no(t,A,o,r,d,a,l))?(c||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.flags|=4194308)):("function"===typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=a),i.props=r,i.state=a,i.context=l,r=o):("function"===typeof i.componentDidMount&&(t.flags|=4194308),r=!1)}else{i=t.stateNode,Zs(e,t),o=t.memoizedProps,l=t.type===t.elementType?o:to(t.type,o),i.props=l,c=t.pendingProps,d=i.context,"object"===typeof(a=A.contextType)&&null!==a?a=Is(a):a=Ln(t,a=kn(A)?In:Qn.current);var f=A.getDerivedStateFromProps;(u="function"===typeof f||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(o!==c||d!==a)&&io(t,i,r,a),Ss=!1,d=t.memoizedState,i.state=d,js(t,r,i,n);var h=t.memoizedState;o!==c||d!==h||Pn.current||Ss?("function"===typeof f&&(Ao(t,A,f,r),h=t.memoizedState),(l=Ss||no(t,A,l,r,d,h,a)||!1)?(u||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(r,h,a),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,h,a)),"function"===typeof i.componentDidUpdate&&(t.flags|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof i.componentDidUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=h),i.props=r,i.state=h,i.context=a,r=l):("function"!==typeof i.componentDidUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),r=!1)}return Qo(e,t,A,r,s,n)}function Qo(e,t,A,r,n,s){Eo(e,t);var i=0!==(128&t.flags);if(!r&&!i)return n&&Zn(t,A,!1),Uo(e,t,s);r=t.stateNode,mo.current=t;var o=i&&"function"!==typeof A.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=ys(t,e.child,null,s),t.child=ys(t,null,o,s)):yo(e,t,o,s),t.memoizedState=r.state,n&&Zn(t,A,!0),t.child}function Po(e){var t=e.stateNode;t.pendingContext?Fn(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Fn(0,t.context,!1),Ks(e,t.containerInfo)}function Io(e,t,A,r,n){return fs(),hs(n),t.flags|=256,yo(e,t,A,r),t.child}var Lo,ko,Go,Fo,So={dehydrated:null,treeContext:null,retryLane:0};function Wo(e){return{baseLanes:e,cachePool:null,transitions:null}}function Zo(e,t,A){var r,n=t.pendingProps,i=$s.current,o=!1,a=0!==(128&t.flags);if((r=a)||(r=(null===e||null!==e.memoizedState)&&0!==(2&i)),r?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),Nn($s,1&i),null===e)return ls(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(a=n.children,e=n.fallback,o?(n=t.mode,o=t.child,a={mode:"hidden",children:a},0===(1&n)&&null!==o?(o.childLanes=0,o.pendingProps=a):o=Wl(a,n,0,null),e=Sl(e,n,A,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Wo(A),t.memoizedState=So,e):Xo(t,a));if(null!==(i=e.memoizedState)&&null!==(r=i.dehydrated))return function(e,t,A,r,n,i,o){if(A)return 256&t.flags?(t.flags&=-257,Mo(e,t,o,r=lo(Error(s(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(i=r.fallback,n=t.mode,r=Wl({mode:"visible",children:r.children},n,0,null),(i=Sl(i,n,o,null)).flags|=2,r.return=t,i.return=t,r.sibling=i,t.child=r,0!==(1&t.mode)&&ys(t,e.child,null,o),t.child.memoizedState=Wo(o),t.memoizedState=So,i);if(0===(1&t.mode))return Mo(e,t,o,null);if("$!"===n.data){if(r=n.nextSibling&&n.nextSibling.dataset)var a=r.dgst;return r=a,Mo(e,t,o,r=lo(i=Error(s(419)),r,void 0))}if(a=0!==(o&e.childLanes),vo||a){if(null!==(r=Pa)){switch(o&-o){case 4:n=2;break;case 16:n=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:n=32;break;case 536870912:n=268435456;break;default:n=0}0!==(n=0!==(n&(r.suspendedLanes|o))?0:n)&&n!==i.retryLane&&(i.retryLane=n,Fs(e,n),Al(r,e,n,-1))}return gl(),Mo(e,t,o,r=lo(Error(s(421))))}return"$?"===n.data?(t.flags|=128,t.child=e.child,t=Dl.bind(null,e),n._reactRetry=t,null):(e=i.treeContext,rs=ln(n.nextSibling),As=t,ns=!0,ss=null,null!==e&&(Yn[Hn++]=qn,Yn[Hn++]=Jn,Yn[Hn++]=Kn,qn=e.id,Jn=e.overflow,Kn=t),t=Xo(t,r.children),t.flags|=4096,t)}(e,t,a,n,r,i,A);if(o){o=n.fallback,a=t.mode,r=(i=e.child).sibling;var l={mode:"hidden",children:n.children};return 0===(1&a)&&t.child!==i?((n=t.child).childLanes=0,n.pendingProps=l,t.deletions=null):(n=Gl(i,l)).subtreeFlags=14680064&i.subtreeFlags,null!==r?o=Gl(r,o):(o=Sl(o,a,A,null)).flags|=2,o.return=t,n.return=t,n.sibling=o,t.child=n,n=o,o=t.child,a=null===(a=e.child.memoizedState)?Wo(A):{baseLanes:a.baseLanes|A,cachePool:null,transitions:a.transitions},o.memoizedState=a,o.childLanes=e.childLanes&~A,t.memoizedState=So,n}return e=(o=e.child).sibling,n=Gl(o,{mode:"visible",children:n.children}),0===(1&t.mode)&&(n.lanes=A),n.return=t,n.sibling=null,null!==e&&(null===(A=t.deletions)?(t.deletions=[e],t.flags|=16):A.push(e)),t.child=n,t.memoizedState=null,n}function Xo(e,t){return(t=Wl({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Mo(e,t,A,r){return null!==r&&hs(r),ys(t,e.child,null,A),(e=Xo(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function zo(e,t,A){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Qs(e.return,t,A)}function Ro(e,t,A,r,n){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:A,tailMode:n}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=r,s.tail=A,s.tailMode=n)}function jo(e,t,A){var r=t.pendingProps,n=r.revealOrder,s=r.tail;if(yo(e,t,r.children,A),0!==(2&(r=$s.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&zo(e,A,t);else if(19===e.tag)zo(e,A,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Nn($s,r),0===(1&t.mode))t.memoizedState=null;else switch(n){case"forwards":for(A=t.child,n=null;null!==A;)null!==(e=A.alternate)&&null===ei(e)&&(n=A),A=A.sibling;null===(A=n)?(n=t.child,t.child=null):(n=A.sibling,A.sibling=null),Ro(t,!1,n,A,s);break;case"backwards":for(A=null,n=t.child,t.child=null;null!==n;){if(null!==(e=n.alternate)&&null===ei(e)){t.child=n;break}e=n.sibling,n.sibling=A,A=n,n=e}Ro(t,!0,A,null,s);break;case"together":Ro(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function To(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Uo(e,t,A){if(null!==e&&(t.dependencies=e.dependencies),Wa|=t.lanes,0===(A&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(A=Gl(e=t.child,e.pendingProps),t.child=A,A.return=t;null!==e.sibling;)e=e.sibling,(A=A.sibling=Gl(e,e.pendingProps)).return=t;A.sibling=null}return t.child}function Vo(e,t){if(!ns)switch(e.tailMode){case"hidden":t=e.tail;for(var A=null;null!==t;)null!==t.alternate&&(A=t),t=t.sibling;null===A?e.tail=null:A.sibling=null;break;case"collapsed":A=e.tail;for(var r=null;null!==A;)null!==A.alternate&&(r=A),A=A.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Oo(e){var t=null!==e.alternate&&e.alternate.child===e.child,A=0,r=0;if(t)for(var n=e.child;null!==n;)A|=n.lanes|n.childLanes,r|=14680064&n.subtreeFlags,r|=14680064&n.flags,n.return=e,n=n.sibling;else for(n=e.child;null!==n;)A|=n.lanes|n.childLanes,r|=n.subtreeFlags,r|=n.flags,n.return=e,n=n.sibling;return e.subtreeFlags|=r,e.childLanes=A,t}function Yo(e,t,A){var r=t.pendingProps;switch(ts(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Oo(t),null;case 1:case 17:return kn(t.type)&&Gn(),Oo(t),null;case 3:return r=t.stateNode,qs(),En(Pn),En(Qn),Ai(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(cs(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ss&&(il(ss),ss=null))),ko(e,t),Oo(t),null;case 5:_s(t);var n=Hs(Ys.current);if(A=t.type,null!==e&&null!=t.stateNode)Go(e,t,A,r,n),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(s(166));return Oo(t),null}if(e=Hs(Vs.current),cs(t)){r=t.stateNode,A=t.type;var i=t.memoizedProps;switch(r[dn]=t,r[fn]=i,e=0!==(1&t.mode),A){case"dialog":Xr("cancel",r),Xr("close",r);break;case"iframe":case"object":case"embed":Xr("load",r);break;case"video":case"audio":for(n=0;n<Fr.length;n++)Xr(Fr[n],r);break;case"source":Xr("error",r);break;case"img":case"image":case"link":Xr("error",r),Xr("load",r);break;case"details":Xr("toggle",r);break;case"input":q(r,i),Xr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Xr("invalid",r);break;case"textarea":ne(r,i),Xr("invalid",r)}for(var a in me(A,i),n=null,i)if(i.hasOwnProperty(a)){var l=i[a];"children"===a?"string"===typeof l?r.textContent!==l&&(!0!==i.suppressHydrationWarning&&Jr(r.textContent,l,e),n=["children",l]):"number"===typeof l&&r.textContent!==""+l&&(!0!==i.suppressHydrationWarning&&Jr(r.textContent,l,e),n=["children",""+l]):o.hasOwnProperty(a)&&null!=l&&"onScroll"===a&&Xr("scroll",r)}switch(A){case"input":O(r),$(r,i,!0);break;case"textarea":O(r),ie(r);break;case"select":case"option":break;default:"function"===typeof i.onClick&&(r.onclick=_r)}r=n,t.updateQueue=r,null!==r&&(t.flags|=4)}else{a=9===n.nodeType?n:n.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=oe(A)),"http://www.w3.org/1999/xhtml"===e?"script"===A?((e=a.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof r.is?e=a.createElement(A,{is:r.is}):(e=a.createElement(A),"select"===A&&(a=e,r.multiple?a.multiple=!0:r.size&&(a.size=r.size))):e=a.createElementNS(e,A),e[dn]=t,e[fn]=r,Lo(e,t,!1,!1),t.stateNode=e;e:{switch(a=ve(A,r),A){case"dialog":Xr("cancel",e),Xr("close",e),n=r;break;case"iframe":case"object":case"embed":Xr("load",e),n=r;break;case"video":case"audio":for(n=0;n<Fr.length;n++)Xr(Fr[n],e);n=r;break;case"source":Xr("error",e),n=r;break;case"img":case"image":case"link":Xr("error",e),Xr("load",e),n=r;break;case"details":Xr("toggle",e),n=r;break;case"input":q(e,r),n=K(e,r),Xr("invalid",e);break;case"option":default:n=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},n=Z({},r,{value:void 0}),Xr("invalid",e);break;case"textarea":ne(e,r),n=re(e,r),Xr("invalid",e)}for(i in me(A,n),l=n)if(l.hasOwnProperty(i)){var u=l[i];"style"===i?pe(e,u):"dangerouslySetInnerHTML"===i?null!=(u=u?u.__html:void 0)&&ce(e,u):"children"===i?"string"===typeof u?("textarea"!==A||""!==u)&&de(e,u):"number"===typeof u&&de(e,""+u):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(o.hasOwnProperty(i)?null!=u&&"onScroll"===i&&Xr("scroll",e):null!=u&&v(e,i,u,a))}switch(A){case"input":O(e),$(e,r,!1);break;case"textarea":O(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+U(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?Ae(e,!!r.multiple,i,!1):null!=r.defaultValue&&Ae(e,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof n.onClick&&(e.onclick=_r)}switch(A){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Oo(t),null;case 6:if(e&&null!=t.stateNode)Fo(e,t,e.memoizedProps,r);else{if("string"!==typeof r&&null===t.stateNode)throw Error(s(166));if(A=Hs(Ys.current),Hs(Vs.current),cs(t)){if(r=t.stateNode,A=t.memoizedProps,r[dn]=t,(i=r.nodeValue!==A)&&null!==(e=As))switch(e.tag){case 3:Jr(r.nodeValue,A,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Jr(r.nodeValue,A,0!==(1&e.mode))}i&&(t.flags|=4)}else(r=(9===A.nodeType?A:A.ownerDocument).createTextNode(r))[dn]=t,t.stateNode=r}return Oo(t),null;case 13:if(En($s),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ns&&null!==rs&&0!==(1&t.mode)&&0===(128&t.flags))ds(),fs(),t.flags|=98560,i=!1;else if(i=cs(t),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(s(318));if(!(i=null!==(i=t.memoizedState)?i.dehydrated:null))throw Error(s(317));i[dn]=t}else fs(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Oo(t),i=!1}else null!==ss&&(il(ss),ss=null),i=!0;if(!i)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=A,t):((r=null!==r)!==(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&$s.current)?0===Fa&&(Fa=3):gl())),null!==t.updateQueue&&(t.flags|=4),Oo(t),null);case 4:return qs(),ko(e,t),null===e&&Rr(t.stateNode.containerInfo),Oo(t),null;case 10:return Ds(t.type._context),Oo(t),null;case 19:if(En($s),null===(i=t.memoizedState))return Oo(t),null;if(r=0!==(128&t.flags),null===(a=i.rendering))if(r)Vo(i,!1);else{if(0!==Fa||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(a=ei(e))){for(t.flags|=128,Vo(i,!1),null!==(r=a.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=A,A=t.child;null!==A;)e=r,(i=A).flags&=14680066,null===(a=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=a.childLanes,i.lanes=a.lanes,i.child=a.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=a.memoizedProps,i.memoizedState=a.memoizedState,i.updateQueue=a.updateQueue,i.type=a.type,e=a.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),A=A.sibling;return Nn($s,1&$s.current|2),t.child}e=e.sibling}null!==i.tail&&Je()>ja&&(t.flags|=128,r=!0,Vo(i,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ei(a))){if(t.flags|=128,r=!0,null!==(A=e.updateQueue)&&(t.updateQueue=A,t.flags|=4),Vo(i,!0),null===i.tail&&"hidden"===i.tailMode&&!a.alternate&&!ns)return Oo(t),null}else 2*Je()-i.renderingStartTime>ja&&1073741824!==A&&(t.flags|=128,r=!0,Vo(i,!1),t.lanes=4194304);i.isBackwards?(a.sibling=t.child,t.child=a):(null!==(A=i.last)?A.sibling=a:t.child=a,i.last=a)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Je(),t.sibling=null,A=$s.current,Nn($s,r?1&A|2:1&A),t):(Oo(t),null);case 22:case 23:return cl(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!==(1&t.mode)?0!==(1073741824&ka)&&(Oo(t),6&t.subtreeFlags&&(t.flags|=8192)):Oo(t),null;case 24:case 25:return null}throw Error(s(156,t.tag))}function Ho(e,t){switch(ts(t),t.tag){case 1:return kn(t.type)&&Gn(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return qs(),En(Pn),En(Qn),Ai(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return _s(t),null;case 13:if(En($s),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(s(340));fs()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return En($s),null;case 4:return qs(),null;case 10:return Ds(t.type._context),null;case 22:case 23:return cl(),null;default:return null}}Lo=function(e,t){for(var A=t.child;null!==A;){if(5===A.tag||6===A.tag)e.appendChild(A.stateNode);else if(4!==A.tag&&null!==A.child){A.child.return=A,A=A.child;continue}if(A===t)break;for(;null===A.sibling;){if(null===A.return||A.return===t)return;A=A.return}A.sibling.return=A.return,A=A.sibling}},ko=function(){},Go=function(e,t,A,r){var n=e.memoizedProps;if(n!==r){e=t.stateNode,Hs(Vs.current);var s,i=null;switch(A){case"input":n=K(e,n),r=K(e,r),i=[];break;case"select":n=Z({},n,{value:void 0}),r=Z({},r,{value:void 0}),i=[];break;case"textarea":n=re(e,n),r=re(e,r),i=[];break;default:"function"!==typeof n.onClick&&"function"===typeof r.onClick&&(e.onclick=_r)}for(u in me(A,r),A=null,n)if(!r.hasOwnProperty(u)&&n.hasOwnProperty(u)&&null!=n[u])if("style"===u){var a=n[u];for(s in a)a.hasOwnProperty(s)&&(A||(A={}),A[s]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(o.hasOwnProperty(u)?i||(i=[]):(i=i||[]).push(u,null));for(u in r){var l=r[u];if(a=null!=n?n[u]:void 0,r.hasOwnProperty(u)&&l!==a&&(null!=l||null!=a))if("style"===u)if(a){for(s in a)!a.hasOwnProperty(s)||l&&l.hasOwnProperty(s)||(A||(A={}),A[s]="");for(s in l)l.hasOwnProperty(s)&&a[s]!==l[s]&&(A||(A={}),A[s]=l[s])}else A||(i||(i=[]),i.push(u,A)),A=l;else"dangerouslySetInnerHTML"===u?(l=l?l.__html:void 0,a=a?a.__html:void 0,null!=l&&a!==l&&(i=i||[]).push(u,l)):"children"===u?"string"!==typeof l&&"number"!==typeof l||(i=i||[]).push(u,""+l):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(o.hasOwnProperty(u)?(null!=l&&"onScroll"===u&&Xr("scroll",e),i||a===l||(i=[])):(i=i||[]).push(u,l))}A&&(i=i||[]).push("style",A);var u=i;(t.updateQueue=u)&&(t.flags|=4)}},Fo=function(e,t,A,r){A!==r&&(t.flags|=4)};var Ko=!1,qo=!1,Jo="function"===typeof WeakSet?WeakSet:Set,_o=null;function $o(e,t){var A=e.ref;if(null!==A)if("function"===typeof A)try{A(null)}catch(r){Cl(e,t,r)}else A.current=null}function ea(e,t,A){try{A()}catch(r){Cl(e,t,r)}}var ta=!1;function Aa(e,t,A){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var n=r=r.next;do{if((n.tag&e)===e){var s=n.destroy;n.destroy=void 0,void 0!==s&&ea(t,A,s)}n=n.next}while(n!==r)}}function ra(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var A=t=t.next;do{if((A.tag&e)===e){var r=A.create;A.destroy=r()}A=A.next}while(A!==t)}}function na(e){var t=e.ref;if(null!==t){var A=e.stateNode;e.tag,e=A,"function"===typeof t?t(e):t.current=e}}function sa(e){var t=e.alternate;null!==t&&(e.alternate=null,sa(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[dn],delete t[fn],delete t[gn],delete t[pn],delete t[bn])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ia(e){return 5===e.tag||3===e.tag||4===e.tag}function oa(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ia(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function aa(e,t,A){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===A.nodeType?A.parentNode.insertBefore(e,t):A.insertBefore(e,t):(8===A.nodeType?(t=A.parentNode).insertBefore(e,A):(t=A).appendChild(e),null!==(A=A._reactRootContainer)&&void 0!==A||null!==t.onclick||(t.onclick=_r));else if(4!==r&&null!==(e=e.child))for(aa(e,t,A),e=e.sibling;null!==e;)aa(e,t,A),e=e.sibling}function la(e,t,A){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?A.insertBefore(e,t):A.appendChild(e);else if(4!==r&&null!==(e=e.child))for(la(e,t,A),e=e.sibling;null!==e;)la(e,t,A),e=e.sibling}var ua=null,ca=!1;function da(e,t,A){for(A=A.child;null!==A;)fa(e,t,A),A=A.sibling}function fa(e,t,A){if(st&&"function"===typeof st.onCommitFiberUnmount)try{st.onCommitFiberUnmount(nt,A)}catch(o){}switch(A.tag){case 5:qo||$o(A,t);case 6:var r=ua,n=ca;ua=null,da(e,t,A),ca=n,null!==(ua=r)&&(ca?(e=ua,A=A.stateNode,8===e.nodeType?e.parentNode.removeChild(A):e.removeChild(A)):ua.removeChild(A.stateNode));break;case 18:null!==ua&&(ca?(e=ua,A=A.stateNode,8===e.nodeType?an(e.parentNode,A):1===e.nodeType&&an(e,A),jt(e)):an(ua,A.stateNode));break;case 4:r=ua,n=ca,ua=A.stateNode.containerInfo,ca=!0,da(e,t,A),ua=r,ca=n;break;case 0:case 11:case 14:case 15:if(!qo&&(null!==(r=A.updateQueue)&&null!==(r=r.lastEffect))){n=r=r.next;do{var s=n,i=s.destroy;s=s.tag,void 0!==i&&(0!==(2&s)||0!==(4&s))&&ea(A,t,i),n=n.next}while(n!==r)}da(e,t,A);break;case 1:if(!qo&&($o(A,t),"function"===typeof(r=A.stateNode).componentWillUnmount))try{r.props=A.memoizedProps,r.state=A.memoizedState,r.componentWillUnmount()}catch(o){Cl(A,t,o)}da(e,t,A);break;case 21:da(e,t,A);break;case 22:1&A.mode?(qo=(r=qo)||null!==A.memoizedState,da(e,t,A),qo=r):da(e,t,A);break;default:da(e,t,A)}}function ha(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var A=e.stateNode;null===A&&(A=e.stateNode=new Jo),t.forEach((function(t){var r=Ql.bind(null,e,t);A.has(t)||(A.add(t),t.then(r,r))}))}}function ga(e,t){var A=t.deletions;if(null!==A)for(var r=0;r<A.length;r++){var n=A[r];try{var i=e,o=t,a=o;e:for(;null!==a;){switch(a.tag){case 5:ua=a.stateNode,ca=!1;break e;case 3:case 4:ua=a.stateNode.containerInfo,ca=!0;break e}a=a.return}if(null===ua)throw Error(s(160));fa(i,o,n),ua=null,ca=!1;var l=n.alternate;null!==l&&(l.return=null),n.return=null}catch(u){Cl(n,t,u)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)pa(t,e),t=t.sibling}function pa(e,t){var A=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ga(t,e),ba(e),4&r){try{Aa(3,e,e.return),ra(3,e)}catch(p){Cl(e,e.return,p)}try{Aa(5,e,e.return)}catch(p){Cl(e,e.return,p)}}break;case 1:ga(t,e),ba(e),512&r&&null!==A&&$o(A,A.return);break;case 5:if(ga(t,e),ba(e),512&r&&null!==A&&$o(A,A.return),32&e.flags){var n=e.stateNode;try{de(n,"")}catch(p){Cl(e,e.return,p)}}if(4&r&&null!=(n=e.stateNode)){var i=e.memoizedProps,o=null!==A?A.memoizedProps:i,a=e.type,l=e.updateQueue;if(e.updateQueue=null,null!==l)try{"input"===a&&"radio"===i.type&&null!=i.name&&J(n,i),ve(a,o);var u=ve(a,i);for(o=0;o<l.length;o+=2){var c=l[o],d=l[o+1];"style"===c?pe(n,d):"dangerouslySetInnerHTML"===c?ce(n,d):"children"===c?de(n,d):v(n,c,d,u)}switch(a){case"input":_(n,i);break;case"textarea":se(n,i);break;case"select":var f=n._wrapperState.wasMultiple;n._wrapperState.wasMultiple=!!i.multiple;var h=i.value;null!=h?Ae(n,!!i.multiple,h,!1):f!==!!i.multiple&&(null!=i.defaultValue?Ae(n,!!i.multiple,i.defaultValue,!0):Ae(n,!!i.multiple,i.multiple?[]:"",!1))}n[fn]=i}catch(p){Cl(e,e.return,p)}}break;case 6:if(ga(t,e),ba(e),4&r){if(null===e.stateNode)throw Error(s(162));n=e.stateNode,i=e.memoizedProps;try{n.nodeValue=i}catch(p){Cl(e,e.return,p)}}break;case 3:if(ga(t,e),ba(e),4&r&&null!==A&&A.memoizedState.isDehydrated)try{jt(t.containerInfo)}catch(p){Cl(e,e.return,p)}break;case 4:default:ga(t,e),ba(e);break;case 13:ga(t,e),ba(e),8192&(n=e.child).flags&&(i=null!==n.memoizedState,n.stateNode.isHidden=i,!i||null!==n.alternate&&null!==n.alternate.memoizedState||(Ra=Je())),4&r&&ha(e);break;case 22:if(c=null!==A&&null!==A.memoizedState,1&e.mode?(qo=(u=qo)||c,ga(t,e),qo=u):ga(t,e),ba(e),8192&r){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!c&&0!==(1&e.mode))for(_o=e,c=e.child;null!==c;){for(d=_o=c;null!==_o;){switch(h=(f=_o).child,f.tag){case 0:case 11:case 14:case 15:Aa(4,f,f.return);break;case 1:$o(f,f.return);var g=f.stateNode;if("function"===typeof g.componentWillUnmount){r=f,A=f.return;try{t=r,g.props=t.memoizedProps,g.state=t.memoizedState,g.componentWillUnmount()}catch(p){Cl(r,A,p)}}break;case 5:$o(f,f.return);break;case 22:if(null!==f.memoizedState){wa(d);continue}}null!==h?(h.return=f,_o=h):wa(d)}c=c.sibling}e:for(c=null,d=e;;){if(5===d.tag){if(null===c){c=d;try{n=d.stateNode,u?"function"===typeof(i=n.style).setProperty?i.setProperty("display","none","important"):i.display="none":(a=d.stateNode,o=void 0!==(l=d.memoizedProps.style)&&null!==l&&l.hasOwnProperty("display")?l.display:null,a.style.display=ge("display",o))}catch(p){Cl(e,e.return,p)}}}else if(6===d.tag){if(null===c)try{d.stateNode.nodeValue=u?"":d.memoizedProps}catch(p){Cl(e,e.return,p)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;c===d&&(c=null),d=d.return}c===d&&(c=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:ga(t,e),ba(e),4&r&&ha(e);case 21:}}function ba(e){var t=e.flags;if(2&t){try{e:{for(var A=e.return;null!==A;){if(ia(A)){var r=A;break e}A=A.return}throw Error(s(160))}switch(r.tag){case 5:var n=r.stateNode;32&r.flags&&(de(n,""),r.flags&=-33),la(e,oa(e),n);break;case 3:case 4:var i=r.stateNode.containerInfo;aa(e,oa(e),i);break;default:throw Error(s(161))}}catch(o){Cl(e,e.return,o)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function ma(e,t,A){_o=e,va(e,t,A)}function va(e,t,A){for(var r=0!==(1&e.mode);null!==_o;){var n=_o,s=n.child;if(22===n.tag&&r){var i=null!==n.memoizedState||Ko;if(!i){var o=n.alternate,a=null!==o&&null!==o.memoizedState||qo;o=Ko;var l=qo;if(Ko=i,(qo=a)&&!l)for(_o=n;null!==_o;)a=(i=_o).child,22===i.tag&&null!==i.memoizedState?Ba(n):null!==a?(a.return=i,_o=a):Ba(n);for(;null!==s;)_o=s,va(s,t,A),s=s.sibling;_o=n,Ko=o,qo=l}ya(e)}else 0!==(8772&n.subtreeFlags)&&null!==s?(s.return=n,_o=s):ya(e)}}function ya(e){for(;null!==_o;){var t=_o;if(0!==(8772&t.flags)){var A=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:qo||ra(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!qo)if(null===A)r.componentDidMount();else{var n=t.elementType===t.type?A.memoizedProps:to(t.type,A.memoizedProps);r.componentDidUpdate(n,A.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&Ts(t,i,r);break;case 3:var o=t.updateQueue;if(null!==o){if(A=null,null!==t.child)switch(t.child.tag){case 5:case 1:A=t.child.stateNode}Ts(t,o,A)}break;case 5:var a=t.stateNode;if(null===A&&4&t.flags){A=a;var l=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&A.focus();break;case"img":l.src&&(A.src=l.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var c=u.memoizedState;if(null!==c){var d=c.dehydrated;null!==d&&jt(d)}}}break;default:throw Error(s(163))}qo||512&t.flags&&na(t)}catch(f){Cl(t,t.return,f)}}if(t===e){_o=null;break}if(null!==(A=t.sibling)){A.return=t.return,_o=A;break}_o=t.return}}function wa(e){for(;null!==_o;){var t=_o;if(t===e){_o=null;break}var A=t.sibling;if(null!==A){A.return=t.return,_o=A;break}_o=t.return}}function Ba(e){for(;null!==_o;){var t=_o;try{switch(t.tag){case 0:case 11:case 15:var A=t.return;try{ra(4,t)}catch(a){Cl(t,A,a)}break;case 1:var r=t.stateNode;if("function"===typeof r.componentDidMount){var n=t.return;try{r.componentDidMount()}catch(a){Cl(t,n,a)}}var s=t.return;try{na(t)}catch(a){Cl(t,s,a)}break;case 5:var i=t.return;try{na(t)}catch(a){Cl(t,i,a)}}}catch(a){Cl(t,t.return,a)}if(t===e){_o=null;break}var o=t.sibling;if(null!==o){o.return=t.return,_o=o;break}_o=t.return}}var xa,Ca=Math.ceil,Ea=y.ReactCurrentDispatcher,Na=y.ReactCurrentOwner,Da=y.ReactCurrentBatchConfig,Qa=0,Pa=null,Ia=null,La=0,ka=0,Ga=Cn(0),Fa=0,Sa=null,Wa=0,Za=0,Xa=0,Ma=null,za=null,Ra=0,ja=1/0,Ta=null,Ua=!1,Va=null,Oa=null,Ya=!1,Ha=null,Ka=0,qa=0,Ja=null,_a=-1,$a=0;function el(){return 0!==(6&Qa)?Je():-1!==_a?_a:_a=Je()}function tl(e){return 0===(1&e.mode)?1:0!==(2&Qa)&&0!==La?La&-La:null!==gs.transition?(0===$a&&($a=gt()),$a):0!==(e=vt)?e:e=void 0===(e=window.event)?16:qt(e.type)}function Al(e,t,A,r){if(50<qa)throw qa=0,Ja=null,Error(s(185));bt(e,A,r),0!==(2&Qa)&&e===Pa||(e===Pa&&(0===(2&Qa)&&(Za|=A),4===Fa&&ol(e,La)),rl(e,r),1===A&&0===Qa&&0===(1&t.mode)&&(ja=Je()+500,Mn&&jn()))}function rl(e,t){var A=e.callbackNode;!function(e,t){for(var A=e.suspendedLanes,r=e.pingedLanes,n=e.expirationTimes,s=e.pendingLanes;0<s;){var i=31-it(s),o=1<<i,a=n[i];-1===a?0!==(o&A)&&0===(o&r)||(n[i]=ft(o,t)):a<=t&&(e.expiredLanes|=o),s&=~o}}(e,t);var r=dt(e,e===Pa?La:0);if(0===r)null!==A&&He(A),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=A&&He(A),1===t)0===e.tag?function(e){Mn=!0,Rn(e)}(al.bind(null,e)):Rn(al.bind(null,e)),sn((function(){0===(6&Qa)&&jn()})),A=null;else{switch(yt(r)){case 1:A=$e;break;case 4:A=et;break;case 16:default:A=tt;break;case 536870912:A=rt}A=Pl(A,nl.bind(null,e))}e.callbackPriority=t,e.callbackNode=A}}function nl(e,t){if(_a=-1,$a=0,0!==(6&Qa))throw Error(s(327));var A=e.callbackNode;if(Bl()&&e.callbackNode!==A)return null;var r=dt(e,e===Pa?La:0);if(0===r)return null;if(0!==(30&r)||0!==(r&e.expiredLanes)||t)t=pl(e,r);else{t=r;var n=Qa;Qa|=2;var i=hl();for(Pa===e&&La===t||(Ta=null,ja=Je()+500,dl(e,t));;)try{ml();break}catch(a){fl(e,a)}Ns(),Ea.current=i,Qa=n,null!==Ia?t=0:(Pa=null,La=0,t=Fa)}if(0!==t){if(2===t&&(0!==(n=ht(e))&&(r=n,t=sl(e,n))),1===t)throw A=Sa,dl(e,0),ol(e,r),rl(e,Je()),A;if(6===t)ol(e,r);else{if(n=e.current.alternate,0===(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var A=t.updateQueue;if(null!==A&&null!==(A=A.stores))for(var r=0;r<A.length;r++){var n=A[r],s=n.getSnapshot;n=n.value;try{if(!ir(s(),n))return!1}catch(o){return!1}}}if(A=t.child,16384&t.subtreeFlags&&null!==A)A.return=t,t=A;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(n)&&(2===(t=pl(e,r))&&(0!==(i=ht(e))&&(r=i,t=sl(e,i))),1===t))throw A=Sa,dl(e,0),ol(e,r),rl(e,Je()),A;switch(e.finishedWork=n,e.finishedLanes=r,t){case 0:case 1:throw Error(s(345));case 2:case 5:wl(e,za,Ta);break;case 3:if(ol(e,r),(130023424&r)===r&&10<(t=Ra+500-Je())){if(0!==dt(e,0))break;if(((n=e.suspendedLanes)&r)!==r){el(),e.pingedLanes|=e.suspendedLanes&n;break}e.timeoutHandle=An(wl.bind(null,e,za,Ta),t);break}wl(e,za,Ta);break;case 4:if(ol(e,r),(4194240&r)===r)break;for(t=e.eventTimes,n=-1;0<r;){var o=31-it(r);i=1<<o,(o=t[o])>n&&(n=o),r&=~i}if(r=n,10<(r=(120>(r=Je()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Ca(r/1960))-r)){e.timeoutHandle=An(wl.bind(null,e,za,Ta),r);break}wl(e,za,Ta);break;default:throw Error(s(329))}}}return rl(e,Je()),e.callbackNode===A?nl.bind(null,e):null}function sl(e,t){var A=Ma;return e.current.memoizedState.isDehydrated&&(dl(e,t).flags|=256),2!==(e=pl(e,t))&&(t=za,za=A,null!==t&&il(t)),e}function il(e){null===za?za=e:za.push.apply(za,e)}function ol(e,t){for(t&=~Xa,t&=~Za,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var A=31-it(t),r=1<<A;e[A]=-1,t&=~r}}function al(e){if(0!==(6&Qa))throw Error(s(327));Bl();var t=dt(e,0);if(0===(1&t))return rl(e,Je()),null;var A=pl(e,t);if(0!==e.tag&&2===A){var r=ht(e);0!==r&&(t=r,A=sl(e,r))}if(1===A)throw A=Sa,dl(e,0),ol(e,t),rl(e,Je()),A;if(6===A)throw Error(s(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,wl(e,za,Ta),rl(e,Je()),null}function ll(e,t){var A=Qa;Qa|=1;try{return e(t)}finally{0===(Qa=A)&&(ja=Je()+500,Mn&&jn())}}function ul(e){null!==Ha&&0===Ha.tag&&0===(6&Qa)&&Bl();var t=Qa;Qa|=1;var A=Da.transition,r=vt;try{if(Da.transition=null,vt=1,e)return e()}finally{vt=r,Da.transition=A,0===(6&(Qa=t))&&jn()}}function cl(){ka=Ga.current,En(Ga)}function dl(e,t){e.finishedWork=null,e.finishedLanes=0;var A=e.timeoutHandle;if(-1!==A&&(e.timeoutHandle=-1,rn(A)),null!==Ia)for(A=Ia.return;null!==A;){var r=A;switch(ts(r),r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&Gn();break;case 3:qs(),En(Pn),En(Qn),Ai();break;case 5:_s(r);break;case 4:qs();break;case 13:case 19:En($s);break;case 10:Ds(r.type._context);break;case 22:case 23:cl()}A=A.return}if(Pa=e,Ia=e=Gl(e.current,null),La=ka=t,Fa=0,Sa=null,Xa=Za=Wa=0,za=Ma=null,null!==Ls){for(t=0;t<Ls.length;t++)if(null!==(r=(A=Ls[t]).interleaved)){A.interleaved=null;var n=r.next,s=A.pending;if(null!==s){var i=s.next;s.next=n,r.next=i}A.pending=r}Ls=null}return e}function fl(e,t){for(;;){var A=Ia;try{if(Ns(),ri.current=Ji,li){for(var r=ii.memoizedState;null!==r;){var n=r.queue;null!==n&&(n.pending=null),r=r.next}li=!1}if(si=0,ai=oi=ii=null,ui=!1,ci=0,Na.current=null,null===A||null===A.return){Fa=1,Sa=t,Ia=null;break}e:{var i=e,o=A.return,a=A,l=t;if(t=La,a.flags|=32768,null!==l&&"object"===typeof l&&"function"===typeof l.then){var u=l,c=a,d=c.tag;if(0===(1&c.mode)&&(0===d||11===d||15===d)){var f=c.alternate;f?(c.updateQueue=f.updateQueue,c.memoizedState=f.memoizedState,c.lanes=f.lanes):(c.updateQueue=null,c.memoizedState=null)}var h=po(o);if(null!==h){h.flags&=-257,bo(h,o,a,0,t),1&h.mode&&go(i,u,t),l=u;var g=(t=h).updateQueue;if(null===g){var p=new Set;p.add(l),t.updateQueue=p}else g.add(l);break e}if(0===(1&t)){go(i,u,t),gl();break e}l=Error(s(426))}else if(ns&&1&a.mode){var b=po(o);if(null!==b){0===(65536&b.flags)&&(b.flags|=256),bo(b,o,a,0,t),hs(ao(l,a));break e}}i=l=ao(l,a),4!==Fa&&(Fa=2),null===Ma?Ma=[i]:Ma.push(i),i=o;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t,Rs(i,fo(0,l,t));break e;case 1:a=l;var m=i.type,v=i.stateNode;if(0===(128&i.flags)&&("function"===typeof m.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===Oa||!Oa.has(v)))){i.flags|=65536,t&=-t,i.lanes|=t,Rs(i,ho(i,a,t));break e}}i=i.return}while(null!==i)}yl(A)}catch(y){t=y,Ia===A&&null!==A&&(Ia=A=A.return);continue}break}}function hl(){var e=Ea.current;return Ea.current=Ji,null===e?Ji:e}function gl(){0!==Fa&&3!==Fa&&2!==Fa||(Fa=4),null===Pa||0===(268435455&Wa)&&0===(268435455&Za)||ol(Pa,La)}function pl(e,t){var A=Qa;Qa|=2;var r=hl();for(Pa===e&&La===t||(Ta=null,dl(e,t));;)try{bl();break}catch(n){fl(e,n)}if(Ns(),Qa=A,Ea.current=r,null!==Ia)throw Error(s(261));return Pa=null,La=0,Fa}function bl(){for(;null!==Ia;)vl(Ia)}function ml(){for(;null!==Ia&&!Ke();)vl(Ia)}function vl(e){var t=xa(e.alternate,e,ka);e.memoizedProps=e.pendingProps,null===t?yl(e):Ia=t,Na.current=null}function yl(e){var t=e;do{var A=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(A=Yo(A,t,ka)))return void(Ia=A)}else{if(null!==(A=Ho(A,t)))return A.flags&=32767,void(Ia=A);if(null===e)return Fa=6,void(Ia=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Ia=t);Ia=t=e}while(null!==t);0===Fa&&(Fa=5)}function wl(e,t,A){var r=vt,n=Da.transition;try{Da.transition=null,vt=1,function(e,t,A,r){do{Bl()}while(null!==Ha);if(0!==(6&Qa))throw Error(s(327));A=e.finishedWork;var n=e.finishedLanes;if(null===A)return null;if(e.finishedWork=null,e.finishedLanes=0,A===e.current)throw Error(s(177));e.callbackNode=null,e.callbackPriority=0;var i=A.lanes|A.childLanes;if(function(e,t){var A=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<A;){var n=31-it(A),s=1<<n;t[n]=0,r[n]=-1,e[n]=-1,A&=~s}}(e,i),e===Pa&&(Ia=Pa=null,La=0),0===(2064&A.subtreeFlags)&&0===(2064&A.flags)||Ya||(Ya=!0,Pl(tt,(function(){return Bl(),null}))),i=0!==(15990&A.flags),0!==(15990&A.subtreeFlags)||i){i=Da.transition,Da.transition=null;var o=vt;vt=1;var a=Qa;Qa|=4,Na.current=null,function(e,t){if($r=Ut,dr(e=cr())){if("selectionStart"in e)var A={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(A=(A=e.ownerDocument)&&A.defaultView||window).getSelection&&A.getSelection();if(r&&0!==r.rangeCount){A=r.anchorNode;var n=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{A.nodeType,i.nodeType}catch(w){A=null;break e}var o=0,a=-1,l=-1,u=0,c=0,d=e,f=null;t:for(;;){for(var h;d!==A||0!==n&&3!==d.nodeType||(a=o+n),d!==i||0!==r&&3!==d.nodeType||(l=o+r),3===d.nodeType&&(o+=d.nodeValue.length),null!==(h=d.firstChild);)f=d,d=h;for(;;){if(d===e)break t;if(f===A&&++u===n&&(a=o),f===i&&++c===r&&(l=o),null!==(h=d.nextSibling))break;f=(d=f).parentNode}d=h}A=-1===a||-1===l?null:{start:a,end:l}}else A=null}A=A||{start:0,end:0}}else A=null;for(en={focusedElem:e,selectionRange:A},Ut=!1,_o=t;null!==_o;)if(e=(t=_o).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,_o=e;else for(;null!==_o;){t=_o;try{var g=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==g){var p=g.memoizedProps,b=g.memoizedState,m=t.stateNode,v=m.getSnapshotBeforeUpdate(t.elementType===t.type?p:to(t.type,p),b);m.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var y=t.stateNode.containerInfo;1===y.nodeType?y.textContent="":9===y.nodeType&&y.documentElement&&y.removeChild(y.documentElement);break;default:throw Error(s(163))}}catch(w){Cl(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,_o=e;break}_o=t.return}g=ta,ta=!1}(e,A),pa(A,e),fr(en),Ut=!!$r,en=$r=null,e.current=A,ma(A,e,n),qe(),Qa=a,vt=o,Da.transition=i}else e.current=A;if(Ya&&(Ya=!1,Ha=e,Ka=n),i=e.pendingLanes,0===i&&(Oa=null),function(e){if(st&&"function"===typeof st.onCommitFiberRoot)try{st.onCommitFiberRoot(nt,e,void 0,128===(128&e.current.flags))}catch(t){}}(A.stateNode),rl(e,Je()),null!==t)for(r=e.onRecoverableError,A=0;A<t.length;A++)n=t[A],r(n.value,{componentStack:n.stack,digest:n.digest});if(Ua)throw Ua=!1,e=Va,Va=null,e;0!==(1&Ka)&&0!==e.tag&&Bl(),i=e.pendingLanes,0!==(1&i)?e===Ja?qa++:(qa=0,Ja=e):qa=0,jn()}(e,t,A,r)}finally{Da.transition=n,vt=r}return null}function Bl(){if(null!==Ha){var e=yt(Ka),t=Da.transition,A=vt;try{if(Da.transition=null,vt=16>e?16:e,null===Ha)var r=!1;else{if(e=Ha,Ha=null,Ka=0,0!==(6&Qa))throw Error(s(331));var n=Qa;for(Qa|=4,_o=e.current;null!==_o;){var i=_o,o=i.child;if(0!==(16&_o.flags)){var a=i.deletions;if(null!==a){for(var l=0;l<a.length;l++){var u=a[l];for(_o=u;null!==_o;){var c=_o;switch(c.tag){case 0:case 11:case 15:Aa(8,c,i)}var d=c.child;if(null!==d)d.return=c,_o=d;else for(;null!==_o;){var f=(c=_o).sibling,h=c.return;if(sa(c),c===u){_o=null;break}if(null!==f){f.return=h,_o=f;break}_o=h}}}var g=i.alternate;if(null!==g){var p=g.child;if(null!==p){g.child=null;do{var b=p.sibling;p.sibling=null,p=b}while(null!==p)}}_o=i}}if(0!==(2064&i.subtreeFlags)&&null!==o)o.return=i,_o=o;else e:for(;null!==_o;){if(0!==(2048&(i=_o).flags))switch(i.tag){case 0:case 11:case 15:Aa(9,i,i.return)}var m=i.sibling;if(null!==m){m.return=i.return,_o=m;break e}_o=i.return}}var v=e.current;for(_o=v;null!==_o;){var y=(o=_o).child;if(0!==(2064&o.subtreeFlags)&&null!==y)y.return=o,_o=y;else e:for(o=v;null!==_o;){if(0!==(2048&(a=_o).flags))try{switch(a.tag){case 0:case 11:case 15:ra(9,a)}}catch(B){Cl(a,a.return,B)}if(a===o){_o=null;break e}var w=a.sibling;if(null!==w){w.return=a.return,_o=w;break e}_o=a.return}}if(Qa=n,jn(),st&&"function"===typeof st.onPostCommitFiberRoot)try{st.onPostCommitFiberRoot(nt,e)}catch(B){}r=!0}return r}finally{vt=A,Da.transition=t}}return!1}function xl(e,t,A){e=Ms(e,t=fo(0,t=ao(A,t),1),1),t=el(),null!==e&&(bt(e,1,t),rl(e,t))}function Cl(e,t,A){if(3===e.tag)xl(e,e,A);else for(;null!==t;){if(3===t.tag){xl(t,e,A);break}if(1===t.tag){var r=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===Oa||!Oa.has(r))){t=Ms(t,e=ho(t,e=ao(A,e),1),1),e=el(),null!==t&&(bt(t,1,e),rl(t,e));break}}t=t.return}}function El(e,t,A){var r=e.pingCache;null!==r&&r.delete(t),t=el(),e.pingedLanes|=e.suspendedLanes&A,Pa===e&&(La&A)===A&&(4===Fa||3===Fa&&(130023424&La)===La&&500>Je()-Ra?dl(e,0):Xa|=A),rl(e,t)}function Nl(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ut,0===(130023424&(ut<<=1))&&(ut=4194304)));var A=el();null!==(e=Fs(e,t))&&(bt(e,t,A),rl(e,A))}function Dl(e){var t=e.memoizedState,A=0;null!==t&&(A=t.retryLane),Nl(e,A)}function Ql(e,t){var A=0;switch(e.tag){case 13:var r=e.stateNode,n=e.memoizedState;null!==n&&(A=n.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(s(314))}null!==r&&r.delete(t),Nl(e,A)}function Pl(e,t){return Ye(e,t)}function Il(e,t,A,r){this.tag=e,this.key=A,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ll(e,t,A,r){return new Il(e,t,A,r)}function kl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Gl(e,t){var A=e.alternate;return null===A?((A=Ll(e.tag,t,e.key,e.mode)).elementType=e.elementType,A.type=e.type,A.stateNode=e.stateNode,A.alternate=e,e.alternate=A):(A.pendingProps=t,A.type=e.type,A.flags=0,A.subtreeFlags=0,A.deletions=null),A.flags=14680064&e.flags,A.childLanes=e.childLanes,A.lanes=e.lanes,A.child=e.child,A.memoizedProps=e.memoizedProps,A.memoizedState=e.memoizedState,A.updateQueue=e.updateQueue,t=e.dependencies,A.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},A.sibling=e.sibling,A.index=e.index,A.ref=e.ref,A}function Fl(e,t,A,r,n,i){var o=2;if(r=e,"function"===typeof e)kl(e)&&(o=1);else if("string"===typeof e)o=5;else e:switch(e){case x:return Sl(A.children,n,i,t);case C:o=8,n|=8;break;case E:return(e=Ll(12,A,t,2|n)).elementType=E,e.lanes=i,e;case P:return(e=Ll(13,A,t,n)).elementType=P,e.lanes=i,e;case I:return(e=Ll(19,A,t,n)).elementType=I,e.lanes=i,e;case G:return Wl(A,n,i,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case N:o=10;break e;case D:o=9;break e;case Q:o=11;break e;case L:o=14;break e;case k:o=16,r=null;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=Ll(o,A,t,n)).elementType=e,t.type=r,t.lanes=i,t}function Sl(e,t,A,r){return(e=Ll(7,e,r,t)).lanes=A,e}function Wl(e,t,A,r){return(e=Ll(22,e,r,t)).elementType=G,e.lanes=A,e.stateNode={isHidden:!1},e}function Zl(e,t,A){return(e=Ll(6,e,null,t)).lanes=A,e}function Xl(e,t,A){return(t=Ll(4,null!==e.children?e.children:[],e.key,t)).lanes=A,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ml(e,t,A,r,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=pt(0),this.expirationTimes=pt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=pt(0),this.identifierPrefix=r,this.onRecoverableError=n,this.mutableSourceEagerHydrationData=null}function zl(e,t,A,r,n,s,i,o,a){return e=new Ml(e,t,A,o,a),1===t?(t=1,!0===s&&(t|=8)):t=0,s=Ll(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:r,isDehydrated:A,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ws(s),e}function Rl(e){if(!e)return Dn;e:{if(je(e=e._reactInternals)!==e||1!==e.tag)throw Error(s(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(kn(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(s(171))}if(1===e.tag){var A=e.type;if(kn(A))return Sn(e,A,t)}return t}function jl(e,t,A,r,n,s,i,o,a){return(e=zl(A,r,!0,e,0,s,0,o,a)).context=Rl(null),A=e.current,(s=Xs(r=el(),n=tl(A))).callback=void 0!==t&&null!==t?t:null,Ms(A,s,n),e.current.lanes=n,bt(e,n,r),rl(e,r),e}function Tl(e,t,A,r){var n=t.current,s=el(),i=tl(n);return A=Rl(A),null===t.context?t.context=A:t.pendingContext=A,(t=Xs(s,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=Ms(n,t,i))&&(Al(e,n,i,s),zs(e,n,i)),i}function Ul(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Vl(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var A=e.retryLane;e.retryLane=0!==A&&A<t?A:t}}function Ol(e,t){Vl(e,t),(e=e.alternate)&&Vl(e,t)}xa=function(e,t,A){if(null!==e)if(e.memoizedProps!==t.pendingProps||Pn.current)vo=!0;else{if(0===(e.lanes&A)&&0===(128&t.flags))return vo=!1,function(e,t,A){switch(t.tag){case 3:Po(t),fs();break;case 5:Js(t);break;case 1:kn(t.type)&&Wn(t);break;case 4:Ks(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,n=t.memoizedProps.value;Nn(Bs,r._currentValue),r._currentValue=n;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(Nn($s,1&$s.current),t.flags|=128,null):0!==(A&t.child.childLanes)?Zo(e,t,A):(Nn($s,1&$s.current),null!==(e=Uo(e,t,A))?e.sibling:null);Nn($s,1&$s.current);break;case 19:if(r=0!==(A&t.childLanes),0!==(128&e.flags)){if(r)return jo(e,t,A);t.flags|=128}if(null!==(n=t.memoizedState)&&(n.rendering=null,n.tail=null,n.lastEffect=null),Nn($s,$s.current),r)break;return null;case 22:case 23:return t.lanes=0,Co(e,t,A)}return Uo(e,t,A)}(e,t,A);vo=0!==(131072&e.flags)}else vo=!1,ns&&0!==(1048576&t.flags)&&$n(t,On,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;To(e,t),e=t.pendingProps;var n=Ln(t,Qn.current);Ps(t,A),n=gi(null,t,r,e,n,A);var i=pi();return t.flags|=1,"object"===typeof n&&null!==n&&"function"===typeof n.render&&void 0===n.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,kn(r)?(i=!0,Wn(t)):i=!1,t.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,Ws(t),n.updater=ro,t.stateNode=n,n._reactInternals=t,oo(t,r,e,A),t=Qo(null,t,r,!0,i,A)):(t.tag=0,ns&&i&&es(t),yo(null,t,n,A),t=t.child),t;case 16:r=t.elementType;e:{switch(To(e,t),e=t.pendingProps,r=(n=r._init)(r._payload),t.type=r,n=t.tag=function(e){if("function"===typeof e)return kl(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===Q)return 11;if(e===L)return 14}return 2}(r),e=to(r,e),n){case 0:t=No(null,t,r,e,A);break e;case 1:t=Do(null,t,r,e,A);break e;case 11:t=wo(null,t,r,e,A);break e;case 14:t=Bo(null,t,r,to(r.type,e),A);break e}throw Error(s(306,r,""))}return t;case 0:return r=t.type,n=t.pendingProps,No(e,t,r,n=t.elementType===r?n:to(r,n),A);case 1:return r=t.type,n=t.pendingProps,Do(e,t,r,n=t.elementType===r?n:to(r,n),A);case 3:e:{if(Po(t),null===e)throw Error(s(387));r=t.pendingProps,n=(i=t.memoizedState).element,Zs(e,t),js(t,r,null,A);var o=t.memoizedState;if(r=o.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=Io(e,t,r,A,n=ao(Error(s(423)),t));break e}if(r!==n){t=Io(e,t,r,A,n=ao(Error(s(424)),t));break e}for(rs=ln(t.stateNode.containerInfo.firstChild),As=t,ns=!0,ss=null,A=ws(t,null,r,A),t.child=A;A;)A.flags=-3&A.flags|4096,A=A.sibling}else{if(fs(),r===n){t=Uo(e,t,A);break e}yo(e,t,r,A)}t=t.child}return t;case 5:return Js(t),null===e&&ls(t),r=t.type,n=t.pendingProps,i=null!==e?e.memoizedProps:null,o=n.children,tn(r,n)?o=null:null!==i&&tn(r,i)&&(t.flags|=32),Eo(e,t),yo(e,t,o,A),t.child;case 6:return null===e&&ls(t),null;case 13:return Zo(e,t,A);case 4:return Ks(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=ys(t,null,r,A):yo(e,t,r,A),t.child;case 11:return r=t.type,n=t.pendingProps,wo(e,t,r,n=t.elementType===r?n:to(r,n),A);case 7:return yo(e,t,t.pendingProps,A),t.child;case 8:case 12:return yo(e,t,t.pendingProps.children,A),t.child;case 10:e:{if(r=t.type._context,n=t.pendingProps,i=t.memoizedProps,o=n.value,Nn(Bs,r._currentValue),r._currentValue=o,null!==i)if(ir(i.value,o)){if(i.children===n.children&&!Pn.current){t=Uo(e,t,A);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var a=i.dependencies;if(null!==a){o=i.child;for(var l=a.firstContext;null!==l;){if(l.context===r){if(1===i.tag){(l=Xs(-1,A&-A)).tag=2;var u=i.updateQueue;if(null!==u){var c=(u=u.shared).pending;null===c?l.next=l:(l.next=c.next,c.next=l),u.pending=l}}i.lanes|=A,null!==(l=i.alternate)&&(l.lanes|=A),Qs(i.return,A,t),a.lanes|=A;break}l=l.next}}else if(10===i.tag)o=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(o=i.return))throw Error(s(341));o.lanes|=A,null!==(a=o.alternate)&&(a.lanes|=A),Qs(o,A,t),o=i.sibling}else o=i.child;if(null!==o)o.return=i;else for(o=i;null!==o;){if(o===t){o=null;break}if(null!==(i=o.sibling)){i.return=o.return,o=i;break}o=o.return}i=o}yo(e,t,n.children,A),t=t.child}return t;case 9:return n=t.type,r=t.pendingProps.children,Ps(t,A),r=r(n=Is(n)),t.flags|=1,yo(e,t,r,A),t.child;case 14:return n=to(r=t.type,t.pendingProps),Bo(e,t,r,n=to(r.type,n),A);case 15:return xo(e,t,t.type,t.pendingProps,A);case 17:return r=t.type,n=t.pendingProps,n=t.elementType===r?n:to(r,n),To(e,t),t.tag=1,kn(r)?(e=!0,Wn(t)):e=!1,Ps(t,A),so(t,r,n),oo(t,r,n,A),Qo(null,t,r,!0,e,A);case 19:return jo(e,t,A);case 22:return Co(e,t,A)}throw Error(s(156,t.tag))};var Yl="function"===typeof reportError?reportError:function(e){console.error(e)};function Hl(e){this._internalRoot=e}function Kl(e){this._internalRoot=e}function ql(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Jl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function _l(){}function $l(e,t,A,r,n){var s=A._reactRootContainer;if(s){var i=s;if("function"===typeof n){var o=n;n=function(){var e=Ul(i);o.call(e)}}Tl(t,i,e,n)}else i=function(e,t,A,r,n){if(n){if("function"===typeof r){var s=r;r=function(){var e=Ul(i);s.call(e)}}var i=jl(t,r,e,0,null,!1,0,"",_l);return e._reactRootContainer=i,e[hn]=i.current,Rr(8===e.nodeType?e.parentNode:e),ul(),i}for(;n=e.lastChild;)e.removeChild(n);if("function"===typeof r){var o=r;r=function(){var e=Ul(a);o.call(e)}}var a=zl(e,0,!1,null,0,!1,0,"",_l);return e._reactRootContainer=a,e[hn]=a.current,Rr(8===e.nodeType?e.parentNode:e),ul((function(){Tl(t,a,A,r)})),a}(A,t,e,n,r);return Ul(i)}Kl.prototype.render=Hl.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(s(409));Tl(e,t,null,null)},Kl.prototype.unmount=Hl.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;ul((function(){Tl(null,e,null,null)})),t[hn]=null}},Kl.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ct();e={blockedOn:null,target:e,priority:t};for(var A=0;A<Gt.length&&0!==t&&t<Gt[A].priority;A++);Gt.splice(A,0,e),0===A&&Zt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var A=ct(t.pendingLanes);0!==A&&(mt(t,1|A),rl(t,Je()),0===(6&Qa)&&(ja=Je()+500,jn()))}break;case 13:ul((function(){var t=Fs(e,1);if(null!==t){var A=el();Al(t,e,1,A)}})),Ol(e,1)}},Bt=function(e){if(13===e.tag){var t=Fs(e,134217728);if(null!==t)Al(t,e,134217728,el());Ol(e,134217728)}},xt=function(e){if(13===e.tag){var t=tl(e),A=Fs(e,t);if(null!==A)Al(A,e,t,el());Ol(e,t)}},Ct=function(){return vt},Et=function(e,t){var A=vt;try{return vt=e,t()}finally{vt=A}},Be=function(e,t,A){switch(t){case"input":if(_(e,A),t=A.name,"radio"===A.type&&null!=t){for(A=e;A.parentNode;)A=A.parentNode;for(A=A.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<A.length;t++){var r=A[t];if(r!==e&&r.form===e.form){var n=wn(r);if(!n)throw Error(s(90));Y(r),_(r,n)}}}break;case"textarea":se(e,A);break;case"select":null!=(t=A.value)&&Ae(e,!!A.multiple,t,!1)}},Qe=ll,Pe=ul;var eu={usingClientEntryPoint:!1,Events:[vn,yn,wn,Ne,De,ll]},tu={findFiberByHostInstance:mn,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},Au={bundleType:tu.bundleType,version:tu.version,rendererPackageName:tu.rendererPackageName,rendererConfig:tu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ve(e))?null:e.stateNode},findFiberByHostInstance:tu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ru=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ru.isDisabled&&ru.supportsFiber)try{nt=ru.inject(Au),st=ru}catch(ue){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=eu,t.createPortal=function(e,t){var A=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ql(t))throw Error(s(200));return function(e,t,A){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:B,key:null==r?null:""+r,children:e,containerInfo:t,implementation:A}}(e,t,null,A)},t.createRoot=function(e,t){if(!ql(e))throw Error(s(299));var A=!1,r="",n=Yl;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(A=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(n=t.onRecoverableError)),t=zl(e,1,!1,null,0,A,0,r,n),e[hn]=t.current,Rr(8===e.nodeType?e.parentNode:e),new Hl(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(s(188));throw e=Object.keys(e).join(","),Error(s(268,e))}return e=null===(e=Ve(t))?null:e.stateNode},t.flushSync=function(e){return ul(e)},t.hydrate=function(e,t,A){if(!Jl(t))throw Error(s(200));return $l(null,e,t,!0,A)},t.hydrateRoot=function(e,t,A){if(!ql(e))throw Error(s(405));var r=null!=A&&A.hydratedSources||null,n=!1,i="",o=Yl;if(null!==A&&void 0!==A&&(!0===A.unstable_strictMode&&(n=!0),void 0!==A.identifierPrefix&&(i=A.identifierPrefix),void 0!==A.onRecoverableError&&(o=A.onRecoverableError)),t=jl(t,null,e,1,null!=A?A:null,n,0,i,o),e[hn]=t.current,Rr(e),r)for(e=0;e<r.length;e++)n=(n=(A=r[e])._getVersion)(A._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[A,n]:t.mutableSourceEagerHydrationData.push(A,n);return new Kl(t)},t.render=function(e,t,A){if(!Jl(t))throw Error(s(200));return $l(null,e,t,!1,A)},t.unmountComponentAtNode=function(e){if(!Jl(e))throw Error(s(40));return!!e._reactRootContainer&&(ul((function(){$l(null,null,e,!1,(function(){e._reactRootContainer=null,e[hn]=null}))})),!0)},t.unstable_batchedUpdates=ll,t.unstable_renderSubtreeIntoContainer=function(e,t,A,r){if(!Jl(A))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return $l(e,t,A,!1,r)},t.version="18.3.1-next-f1338f8080-20240426"},7950:(e,t,A)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=A(2730)},1153:(e,t,A)=>{"use strict";var r=A(5043),n=Symbol.for("react.element"),s=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,o=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,A){var r,s={},l=null,u=null;for(r in void 0!==A&&(l=""+A),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(u=t.ref),t)i.call(t,r)&&!a.hasOwnProperty(r)&&(s[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===s[r]&&(s[r]=t[r]);return{$$typeof:n,type:e,key:l,ref:u,props:s,_owner:o.current}}t.Fragment=s,t.jsx=l,t.jsxs=l},4202:(e,t)=>{"use strict";var A=Symbol.for("react.element"),r=Symbol.for("react.portal"),n=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),a=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),c=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),f=Symbol.iterator;var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g=Object.assign,p={};function b(e,t,A){this.props=e,this.context=t,this.refs=p,this.updater=A||h}function m(){}function v(e,t,A){this.props=e,this.context=t,this.refs=p,this.updater=A||h}b.prototype.isReactComponent={},b.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},b.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},m.prototype=b.prototype;var y=v.prototype=new m;y.constructor=v,g(y,b.prototype),y.isPureReactComponent=!0;var w=Array.isArray,B=Object.prototype.hasOwnProperty,x={current:null},C={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,r){var n,s={},i=null,o=null;if(null!=t)for(n in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(i=""+t.key),t)B.call(t,n)&&!C.hasOwnProperty(n)&&(s[n]=t[n]);var a=arguments.length-2;if(1===a)s.children=r;else if(1<a){for(var l=Array(a),u=0;u<a;u++)l[u]=arguments[u+2];s.children=l}if(e&&e.defaultProps)for(n in a=e.defaultProps)void 0===s[n]&&(s[n]=a[n]);return{$$typeof:A,type:e,key:i,ref:o,props:s,_owner:x.current}}function N(e){return"object"===typeof e&&null!==e&&e.$$typeof===A}var D=/\/+/g;function Q(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,n,s,i){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case A:case r:a=!0}}if(a)return i=i(a=e),e=""===s?"."+Q(a,0):s,w(i)?(n="",null!=e&&(n=e.replace(D,"$&/")+"/"),P(i,t,n,"",(function(e){return e}))):null!=i&&(N(i)&&(i=function(e,t){return{$$typeof:A,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,n+(!i.key||a&&a.key===i.key?"":(""+i.key).replace(D,"$&/")+"/")+e)),t.push(i)),1;if(a=0,s=""===s?".":s+":",w(e))for(var l=0;l<e.length;l++){var u=s+Q(o=e[l],l);a+=P(o,t,n,u,i)}else if(u=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e),"function"===typeof u)for(e=u.call(e),l=0;!(o=e.next()).done;)a+=P(o=o.value,t,n,u=s+Q(o,l++),i);else if("object"===o)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return a}function I(e,t,A){if(null==e)return e;var r=[],n=0;return P(e,r,"","",(function(e){return t.call(A,e,n++)})),r}function L(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var k={current:null},G={transition:null},F={ReactCurrentDispatcher:k,ReactCurrentBatchConfig:G,ReactCurrentOwner:x};function S(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:I,forEach:function(e,t,A){I(e,(function(){t.apply(this,arguments)}),A)},count:function(e){var t=0;return I(e,(function(){t++})),t},toArray:function(e){return I(e,(function(e){return e}))||[]},only:function(e){if(!N(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=b,t.Fragment=n,t.Profiler=i,t.PureComponent=v,t.StrictMode=s,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=F,t.act=S,t.cloneElement=function(e,t,r){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var n=g({},e.props),s=e.key,i=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,o=x.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var a=e.type.defaultProps;for(l in t)B.call(t,l)&&!C.hasOwnProperty(l)&&(n[l]=void 0===t[l]&&void 0!==a?a[l]:t[l])}var l=arguments.length-2;if(1===l)n.children=r;else if(1<l){a=Array(l);for(var u=0;u<l;u++)a[u]=arguments[u+2];n.children=a}return{$$typeof:A,type:e.type,key:s,ref:i,props:n,_owner:o}},t.createContext=function(e){return(e={$$typeof:a,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=E,t.createFactory=function(e){var t=E.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=N,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:L}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=G.transition;G.transition={};try{e()}finally{G.transition=t}},t.unstable_act=S,t.useCallback=function(e,t){return k.current.useCallback(e,t)},t.useContext=function(e){return k.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return k.current.useDeferredValue(e)},t.useEffect=function(e,t){return k.current.useEffect(e,t)},t.useId=function(){return k.current.useId()},t.useImperativeHandle=function(e,t,A){return k.current.useImperativeHandle(e,t,A)},t.useInsertionEffect=function(e,t){return k.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return k.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return k.current.useMemo(e,t)},t.useReducer=function(e,t,A){return k.current.useReducer(e,t,A)},t.useRef=function(e){return k.current.useRef(e)},t.useState=function(e){return k.current.useState(e)},t.useSyncExternalStore=function(e,t,A){return k.current.useSyncExternalStore(e,t,A)},t.useTransition=function(){return k.current.useTransition()},t.version="18.3.1"},5043:(e,t,A)=>{"use strict";e.exports=A(4202)},579:(e,t,A)=>{"use strict";e.exports=A(1153)},7234:(e,t)=>{"use strict";function A(e,t){var A=e.length;e.push(t);e:for(;0<A;){var r=A-1>>>1,n=e[r];if(!(0<s(n,t)))break e;e[r]=t,e[A]=n,A=r}}function r(e){return 0===e.length?null:e[0]}function n(e){if(0===e.length)return null;var t=e[0],A=e.pop();if(A!==t){e[0]=A;e:for(var r=0,n=e.length,i=n>>>1;r<i;){var o=2*(r+1)-1,a=e[o],l=o+1,u=e[l];if(0>s(a,A))l<n&&0>s(u,a)?(e[r]=u,e[l]=A,r=l):(e[r]=a,e[o]=A,r=o);else{if(!(l<n&&0>s(u,A)))break e;e[r]=u,e[l]=A,r=l}}}return t}function s(e,t){var A=e.sortIndex-t.sortIndex;return 0!==A?A:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var o=Date,a=o.now();t.unstable_now=function(){return o.now()-a}}var l=[],u=[],c=1,d=null,f=3,h=!1,g=!1,p=!1,b="function"===typeof setTimeout?setTimeout:null,m="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function y(e){for(var t=r(u);null!==t;){if(null===t.callback)n(u);else{if(!(t.startTime<=e))break;n(u),t.sortIndex=t.expirationTime,A(l,t)}t=r(u)}}function w(e){if(p=!1,y(e),!g)if(null!==r(l))g=!0,G(B);else{var t=r(u);null!==t&&F(w,t.startTime-e)}}function B(e,A){g=!1,p&&(p=!1,m(N),N=-1),h=!0;var s=f;try{for(y(A),d=r(l);null!==d&&(!(d.expirationTime>A)||e&&!P());){var i=d.callback;if("function"===typeof i){d.callback=null,f=d.priorityLevel;var o=i(d.expirationTime<=A);A=t.unstable_now(),"function"===typeof o?d.callback=o:d===r(l)&&n(l),y(A)}else n(l);d=r(l)}if(null!==d)var a=!0;else{var c=r(u);null!==c&&F(w,c.startTime-A),a=!1}return a}finally{d=null,f=s,h=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var x,C=!1,E=null,N=-1,D=5,Q=-1;function P(){return!(t.unstable_now()-Q<D)}function I(){if(null!==E){var e=t.unstable_now();Q=e;var A=!0;try{A=E(!0,e)}finally{A?x():(C=!1,E=null)}}else C=!1}if("function"===typeof v)x=function(){v(I)};else if("undefined"!==typeof MessageChannel){var L=new MessageChannel,k=L.port2;L.port1.onmessage=I,x=function(){k.postMessage(null)}}else x=function(){b(I,0)};function G(e){E=e,C||(C=!0,x())}function F(e,A){N=b((function(){e(t.unstable_now())}),A)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){g||h||(g=!0,G(B))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):D=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return f},t.unstable_getFirstCallbackNode=function(){return r(l)},t.unstable_next=function(e){switch(f){case 1:case 2:case 3:var t=3;break;default:t=f}var A=f;f=t;try{return e()}finally{f=A}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var A=f;f=e;try{return t()}finally{f=A}},t.unstable_scheduleCallback=function(e,n,s){var i=t.unstable_now();switch("object"===typeof s&&null!==s?s="number"===typeof(s=s.delay)&&0<s?i+s:i:s=i,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:c++,callback:n,priorityLevel:e,startTime:s,expirationTime:o=s+o,sortIndex:-1},s>i?(e.sortIndex=s,A(u,e),null===r(l)&&e===r(u)&&(p?(m(N),N=-1):p=!0,F(w,s-i))):(e.sortIndex=o,A(l,e),g||h||(g=!0,G(B))),e},t.unstable_shouldYield=P,t.unstable_wrapCallback=function(e){var t=f;return function(){var A=f;f=t;try{return e.apply(this,arguments)}finally{f=A}}}},8853:(e,t,A)=>{"use strict";e.exports=A(7234)},9849:(e,t,A)=>{"use strict";var r=A(7199),n=Array.prototype.concat,s=Array.prototype.slice,i=e.exports=function(e){for(var t=[],A=0,i=e.length;A<i;A++){var o=e[A];r(o)?t=n.call(t,s.call(o)):t.push(o)}return t};i.wrap=function(e){return function(){return e(i(arguments))}}},7199:e=>{e.exports=function(e){return!(!e||"string"===typeof e)&&(e instanceof Array||Array.isArray(e)||e.length>=0&&(e.splice instanceof Function||Object.getOwnPropertyDescriptor(e,e.length-1)&&"String"!==e.constructor.name))}},8680:e=>{var t=0,A=-3;function r(){this.table=new Uint16Array(16),this.trans=new Uint16Array(288)}function n(e,t){this.source=e,this.sourceIndex=0,this.tag=0,this.bitcount=0,this.dest=t,this.destLen=0,this.ltree=new r,this.dtree=new r}var s=new r,i=new r,o=new Uint8Array(30),a=new Uint16Array(30),l=new Uint8Array(30),u=new Uint16Array(30),c=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),d=new r,f=new Uint8Array(320);function h(e,t,A,r){var n,s;for(n=0;n<A;++n)e[n]=0;for(n=0;n<30-A;++n)e[n+A]=n/A|0;for(s=r,n=0;n<30;++n)t[n]=s,s+=1<<e[n]}var g=new Uint16Array(16);function p(e,t,A,r){var n,s;for(n=0;n<16;++n)e.table[n]=0;for(n=0;n<r;++n)e.table[t[A+n]]++;for(e.table[0]=0,s=0,n=0;n<16;++n)g[n]=s,s+=e.table[n];for(n=0;n<r;++n)t[A+n]&&(e.trans[g[t[A+n]]++]=n)}function b(e){e.bitcount--||(e.tag=e.source[e.sourceIndex++],e.bitcount=7);var t=1&e.tag;return e.tag>>>=1,t}function m(e,t,A){if(!t)return A;for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;var r=e.tag&65535>>>16-t;return e.tag>>>=t,e.bitcount-=t,r+A}function v(e,t){for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;var A=0,r=0,n=0,s=e.tag;do{r=2*r+(1&s),s>>>=1,++n,A+=t.table[n],r-=t.table[n]}while(r>=0);return e.tag=s,e.bitcount-=n,t.trans[A+r]}function y(e,t,A){var r,n,s,i,o,a;for(r=m(e,5,257),n=m(e,5,1),s=m(e,4,4),i=0;i<19;++i)f[i]=0;for(i=0;i<s;++i){var l=m(e,3,0);f[c[i]]=l}for(p(d,f,0,19),o=0;o<r+n;){var u=v(e,d);switch(u){case 16:var h=f[o-1];for(a=m(e,2,3);a;--a)f[o++]=h;break;case 17:for(a=m(e,3,3);a;--a)f[o++]=0;break;case 18:for(a=m(e,7,11);a;--a)f[o++]=0;break;default:f[o++]=u}}p(t,f,0,r),p(A,f,r,n)}function w(e,A,r){for(;;){var n,s,i,c,d=v(e,A);if(256===d)return t;if(d<256)e.dest[e.destLen++]=d;else for(n=m(e,o[d-=257],a[d]),s=v(e,r),c=i=e.destLen-m(e,l[s],u[s]);c<i+n;++c)e.dest[e.destLen++]=e.dest[c]}}function B(e){for(var r,n;e.bitcount>8;)e.sourceIndex--,e.bitcount-=8;if((r=256*(r=e.source[e.sourceIndex+1])+e.source[e.sourceIndex])!==(65535&~(256*e.source[e.sourceIndex+3]+e.source[e.sourceIndex+2])))return A;for(e.sourceIndex+=4,n=r;n;--n)e.dest[e.destLen++]=e.source[e.sourceIndex++];return e.bitcount=0,t}!function(e,t){var A;for(A=0;A<7;++A)e.table[A]=0;for(e.table[7]=24,e.table[8]=152,e.table[9]=112,A=0;A<24;++A)e.trans[A]=256+A;for(A=0;A<144;++A)e.trans[24+A]=A;for(A=0;A<8;++A)e.trans[168+A]=280+A;for(A=0;A<112;++A)e.trans[176+A]=144+A;for(A=0;A<5;++A)t.table[A]=0;for(t.table[5]=32,A=0;A<32;++A)t.trans[A]=A}(s,i),h(o,a,4,3),h(l,u,2,1),o[28]=0,a[28]=258,e.exports=function(e,r){var o,a,l=new n(e,r);do{switch(o=b(l),m(l,2,0)){case 0:a=B(l);break;case 1:a=w(l,s,i);break;case 2:y(l,l.ltree,l.dtree),a=w(l,l.ltree,l.dtree);break;default:a=A}if(a!==t)throw new Error("Data error")}while(!o);return l.destLen<l.dest.length?"function"===typeof l.dest.slice?l.dest.slice(0,l.destLen):l.dest.subarray(0,l.destLen):l.dest}},2582:(e,t,A)=>{const r=A(8680),{swap32LE:n}=A(8975);e.exports=class{constructor(e){const t="function"===typeof e.readUInt32BE&&"function"===typeof e.slice;if(t||e instanceof Uint8Array){let A;if(t)this.highStart=e.readUInt32LE(0),this.errorValue=e.readUInt32LE(4),A=e.readUInt32LE(8),e=e.slice(12);else{const t=new DataView(e.buffer);this.highStart=t.getUint32(0,!0),this.errorValue=t.getUint32(4,!0),A=t.getUint32(8,!0),e=e.subarray(12)}e=r(e,new Uint8Array(A)),e=r(e,new Uint8Array(A)),n(e),this.data=new Uint32Array(e.buffer)}else({data:this.data,highStart:this.highStart,errorValue:this.errorValue}=e)}get(e){let t;return e<0||e>1114111?this.errorValue:e<55296||e>56319&&e<=65535?(t=(this.data[e>>5]<<2)+(31&e),this.data[t]):e<=65535?(t=(this.data[2048+(e-55296>>5)]<<2)+(31&e),this.data[t]):e<this.highStart?(t=this.data[2080+(e>>11)],t=this.data[t+(e>>5&63)],t=(t<<2)+(31&e),this.data[t]):this.data[this.data.length-4]}}},8975:e=>{const t=18===new Uint8Array(new Uint32Array([305419896]).buffer)[0],A=(e,t,A)=>{let r=e[t];e[t]=e[A],e[A]=r};e.exports={swap32LE:e=>{t&&(e=>{const t=e.length;for(let r=0;r<t;r+=4)A(e,r,r+3),A(e,r+1,r+2)})(e)}}}},t={};function A(r){var n=t[r];if(void 0!==n)return n.exports;var s=t[r]={exports:{}};return e[r].call(s.exports,s,s.exports,A),s.exports}A.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return A.d(t,{a:t}),t},(()=>{var e,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__;A.t=function(r,n){if(1&n&&(r=this(r)),8&n)return r;if("object"===typeof r&&r){if(4&n&&r.__esModule)return r;if(16&n&&"function"===typeof r.then)return r}var s=Object.create(null);A.r(s);var i={};e=e||[null,t({}),t([]),t(t)];for(var o=2&n&&r;"object"==typeof o&&!~e.indexOf(o);o=t(o))Object.getOwnPropertyNames(o).forEach((e=>i[e]=()=>r[e]));return i.default=()=>r,A.d(s,i),s}})(),A.d=(e,t)=>{for(var r in t)A.o(t,r)&&!A.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},A.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),A.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e={};A.r(e),A.d(e,{AFRelationship:()=>Os,AcroButtonFlags:()=>qi,AcroChoiceFlags:()=>_i,AcroFieldFlags:()=>Ki,AcroTextFlags:()=>Ji,AnnotationFlags:()=>$o,AppearanceCharacteristics:()=>zi,BlendMode:()=>kc,Cache:()=>Hr,CharCodes:()=>En,ColorTypes:()=>wl,CombedTextLayoutError:()=>Cu,CorruptPageTreeError:()=>an,CustomFontEmbedder:()=>Ts,CustomFontSubsetEmbedder:()=>Vs,Duplex:()=>Pi,EncryptedPDFError:()=>fu,ExceededMaxLengthError:()=>Eu,FieldAlreadyExistsError:()=>yu,FieldExistsAsNonTerminalError:()=>Bu,FileEmbedder:()=>Hs,FillRule:()=>Va,FontkitNotRegisteredError:()=>hu,ForeignPageError:()=>gu,ImageAlignment:()=>Ku,IndexOutOfBoundsError:()=>ln,InvalidAcroFieldValueError:()=>un,InvalidFieldNamePartError:()=>wu,InvalidMaxLengthError:()=>Nu,InvalidPDFDateStringError:()=>sn,InvalidTargetIndexError:()=>on,JpegEmbedder:()=>$s,LineCapStyle:()=>Pa,LineJoinStyle:()=>La,MethodNotImplementedError:()=>Kr,MissingCatalogError:()=>en,MissingDAEntryError:()=>dn,MissingKeywordError:()=>xn,MissingOnValueCheckError:()=>vu,MissingPDFHeaderError:()=>Bn,MissingPageContentsEmbeddingError:()=>tn,MissingTfOperatorError:()=>fn,MultiSelectValueError:()=>cn,NextByteAssertionError:()=>pn,NoSuchFieldError:()=>bu,NonFullScreenPageMode:()=>Ni,NumberParsingError:()=>hn,PDFAcroButton:()=>Vi,PDFAcroCheckBox:()=>Yi,PDFAcroChoice:()=>$i,PDFAcroComboBox:()=>to,PDFAcroField:()=>Fi,PDFAcroForm:()=>Eo,PDFAcroListBox:()=>ho,PDFAcroNonTerminal:()=>ro,PDFAcroPushButton:()=>lo,PDFAcroRadioButton:()=>co,PDFAcroSignature:()=>so,PDFAcroTerminal:()=>Ui,PDFAcroText:()=>oo,PDFAnnotation:()=>Xi,PDFArray:()=>kn,PDFArrayIsNotRectangleError:()=>nn,PDFBool:()=>Sn,PDFButton:()=>td,PDFCatalog:()=>Do,PDFCheckBox:()=>_u,PDFContentStream:()=>ss,PDFContext:()=>ls,PDFCrossRefSection:()=>gs,PDFCrossRefStream:()=>Qs,PDFDict:()=>Vn,PDFDocument:()=>Ic,PDFDropdown:()=>$u,PDFEmbeddedPage:()=>Ou,PDFField:()=>Ju,PDFFlateStream:()=>rs,PDFFont:()=>Yu,PDFForm:()=>sc,PDFHeader:()=>Dn,PDFHexString:()=>ks,PDFImage:()=>Hu,PDFInvalidObject:()=>Es,PDFInvalidObjectParsingError:()=>mn,PDFJavaScript:()=>dc,PDFName:()=>jn,PDFNull:()=>Tn,PDFNumber:()=>In,PDFObject:()=>Qn,PDFObjectCopier:()=>fs,PDFObjectParser:()=>Vo,PDFObjectParsingError:()=>bn,PDFObjectStream:()=>ws,PDFObjectStreamParser:()=>Yo,PDFOperator:()=>es,PDFOperatorNames:()=>As,PDFOptionList:()=>ec,PDFPage:()=>ed,PDFPageEmbedder:()=>Ci,PDFPageLeaf:()=>cs,PDFPageTree:()=>Po,PDFParser:()=>Jo,PDFParsingError:()=>gn,PDFRadioGroup:()=>tc,PDFRawStream:()=>Hn,PDFRef:()=>_n,PDFSignature:()=>Ac,PDFStream:()=>On,PDFStreamParsingError:()=>vn,PDFStreamWriter:()=>Is,PDFString:()=>Rs,PDFTextField:()=>rc,PDFTrailer:()=>bs,PDFTrailerDict:()=>vs,PDFWidgetAnnotation:()=>ji,PDFWriter:()=>xs,PDFXRefStreamParser:()=>Ko,PageEmbeddingMismatchedContextError:()=>rn,PageSizes:()=>lc,ParseSpeeds:()=>uc,PngEmbedder:()=>si,PrintScaling:()=>Qi,PrivateConstructorError:()=>qr,ReadingDirection:()=>Di,RemovePageFromEmptyDocumentError:()=>pu,ReparseError:()=>$r,RichTextFieldReadError:()=>xu,RotationTypes:()=>ra,StalledParserError:()=>wn,StandardFontEmbedder:()=>Fs,StandardFontValues:()=>Cr,StandardFonts:()=>nc,TextAlignment:()=>Du,TextRenderingMode:()=>ol,UnbalancedParenthesisError:()=>yn,UnexpectedFieldTypeError:()=>mu,UnexpectedObjectTypeError:()=>Jr,UnrecognizedStreamTypeError:()=>An,UnsupportedEncodingError:()=>_r,ViewerPreferences:()=>Li,addRandomSuffix:()=>hA,adjustDimsForRotation:()=>fa,appendBezierCurve:()=>Za,appendQuadraticCurve:()=>Xa,arrayAsString:()=>kA,asNumber:()=>Aa,asPDFName:()=>ea,asPDFNumber:()=>ta,assertEachIs:()=>Mr,assertInteger:()=>Tr,assertIs:()=>Zr,assertIsOneOf:()=>Lr,assertIsOneOfOrUndefined:()=>kr,assertIsSubset:()=>Gr,assertMultiple:()=>jr,assertOrUndefined:()=>Xr,assertPositive:()=>Ur,assertRange:()=>zr,assertRangeOrUndefined:()=>Rr,backtick:()=>Dr,beginMarkedContent:()=>vl,beginText:()=>$a,breakTextIntoLines:()=>CA,byAscendingId:()=>GA,bytesFor:()=>or,canBeConvertedToUint8Array:()=>zA,charAtIndex:()=>BA,charFromCode:()=>lA,charFromHexCode:()=>uA,charSplit:()=>xA,cleanText:()=>pA,clip:()=>ga,clipEvenOdd:()=>pa,closePath:()=>Ma,cmyk:()=>El,colorString:()=>Nl,colorToComponents:()=>Gl,componentsToColor:()=>kl,concatTransformationMatrix:()=>ya,copyStringIntoBuffer:()=>fA,createPDFAcroField:()=>po,createPDFAcroFields:()=>go,createTypeErrorMsg:()=>Wr,createValueErrorMsg:()=>Ir,decodeFromBase64:()=>AA,decodeFromBase64DataUri:()=>nA,decodePDFRawStream:()=>Bi,defaultButtonAppearanceProvider:()=>ju,defaultCheckBoxAppearanceProvider:()=>zu,defaultDropdownAppearanceProvider:()=>Uu,defaultOptionListAppearanceProvider:()=>Vu,defaultRadioGroupAppearanceProvider:()=>Ru,defaultTextFieldAppearanceProvider:()=>Tu,degrees:()=>sa,degreesToRadians:()=>aa,drawButton:()=>lu,drawCheckBox:()=>ou,drawCheckMark:()=>su,drawEllipse:()=>ru,drawEllipsePath:()=>tu,drawImage:()=>ql,drawLine:()=>_l,drawLinesOfText:()=>Kl,drawObject:()=>dl,drawOptionList:()=>du,drawPage:()=>Jl,drawRadioButton:()=>au,drawRectangle:()=>$l,drawSvgPath:()=>nu,drawText:()=>Hl,drawTextField:()=>cu,drawTextLines:()=>uu,encodeToBase64:()=>tA,endMarkedContent:()=>yl,endPath:()=>Ka,endText:()=>el,error:()=>ar,escapeRegExp:()=>gA,escapedNewlineChars:()=>bA,fill:()=>Oa,fillAndStroke:()=>Ha,fillEvenOdd:()=>Ya,findLastMatch:()=>DA,getType:()=>Fr,grayscale:()=>xl,hasSurrogates:()=>OA,hasUtf16BOM:()=>nr,highSurrogate:()=>YA,isArrayEqual:()=>SA,isNewlineChar:()=>vA,isStandardFont:()=>Er,isType:()=>Sr,isWithinBMP:()=>VA,last:()=>QA,layoutCombedText:()=>ku,layoutMultilineText:()=>Lu,layoutSinglelineText:()=>Gu,lineSplit:()=>yA,lineTo:()=>Ra,lowSurrogate:()=>HA,mergeIntoTypedArray:()=>IA,mergeLines:()=>wA,mergeUint8Arrays:()=>LA,moveText:()=>Ja,moveTo:()=>za,newlineChars:()=>mA,nextLine:()=>qa,normalizeAppearance:()=>Fu,numberToString:()=>sr,padStart:()=>cA,parseDate:()=>NA,pdfDocEncodingDecode:()=>Or,pluckIndices:()=>MA,popGraphicsState:()=>Sa,pushGraphicsState:()=>Fa,radians:()=>na,radiansToDegrees:()=>la,range:()=>XA,rectangle:()=>ja,rectanglesAreEqual:()=>Nr,reduceRotation:()=>da,restoreDashPattern:()=>Qa,reverseArray:()=>WA,rgb:()=>Cl,rotateAndSkewTextDegreesAndTranslate:()=>cl,rotateAndSkewTextRadiansAndTranslate:()=>ul,rotateDegrees:()=>Ca,rotateInPlace:()=>iu,rotateRadians:()=>xa,rotateRectangle:()=>ha,scale:()=>Ba,setCharacterSpacing:()=>Al,setCharacterSqueeze:()=>nl,setDashPattern:()=>Da,setFillingCmykColor:()=>bl,setFillingColor:()=>Il,setFillingGrayscaleColor:()=>fl,setFillingRgbColor:()=>gl,setFontAndSize:()=>tl,setGraphicsState:()=>Ga,setLineCap:()=>Ia,setLineHeight:()=>sl,setLineJoin:()=>ka,setLineWidth:()=>Wa,setStrokingCmykColor:()=>ml,setStrokingColor:()=>Ll,setStrokingGrayscaleColor:()=>hl,setStrokingRgbColor:()=>pl,setTextMatrix:()=>ll,setTextRenderingMode:()=>al,setTextRise:()=>il,setWordSpacing:()=>rl,showText:()=>_a,singleQuote:()=>Qr,sizeInBytes:()=>ir,skewDegrees:()=>Na,skewRadians:()=>Ea,sortedUniq:()=>FA,square:()=>Ta,stringAsByteArray:()=>dA,stroke:()=>Ua,sum:()=>ZA,toCharCode:()=>sA,toCodePoint:()=>iA,toDegrees:()=>ca,toHexString:()=>aA,toHexStringOfMinLength:()=>oA,toRadians:()=>ua,toUint8Array:()=>RA,translate:()=>wa,typedArrayFor:()=>PA,utf16Decode:()=>JA,utf16Encode:()=>UA,utf8Encode:()=>TA,values:()=>xr,waitForTick:()=>jA});var t={};A.r(t),A.d(t,{create:()=>xp,defaultLanguage:()=>Cp,logErrors:()=>yp,registerFormat:()=>Bp,setDefaultLanguage:()=>Ep});var r,n=A(5043),s=A.t(n,2),i=A(7950),o=A.t(i,2);function a(){return a=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var A=arguments[t];for(var r in A)Object.prototype.hasOwnProperty.call(A,r)&&(e[r]=A[r])}return e},a.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(r||(r={}));const l="popstate";function u(e,t){if(!1===e||null===e||"undefined"===typeof e)throw new Error(t)}function c(e,t){if(!e){"undefined"!==typeof console&&console.warn(t);try{throw new Error(t)}catch(A){}}}function d(e,t){return{usr:e.state,key:e.key,idx:t}}function f(e,t,A,r){return void 0===A&&(A=null),a({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof t?g(t):t,{state:A,key:t&&t.key||r||Math.random().toString(36).substr(2,8)})}function h(e){let{pathname:t="/",search:A="",hash:r=""}=e;return A&&"?"!==A&&(t+="?"===A.charAt(0)?A:"?"+A),r&&"#"!==r&&(t+="#"===r.charAt(0)?r:"#"+r),t}function g(e){let t={};if(e){let A=e.indexOf("#");A>=0&&(t.hash=e.substr(A),e=e.substr(0,A));let r=e.indexOf("?");r>=0&&(t.search=e.substr(r),e=e.substr(0,r)),e&&(t.pathname=e)}return t}function p(e,t,A,n){void 0===n&&(n={});let{window:s=document.defaultView,v5Compat:i=!1}=n,o=s.history,c=r.Pop,g=null,p=b();function b(){return(o.state||{idx:null}).idx}function m(){c=r.Pop;let e=b(),t=null==e?null:e-p;p=e,g&&g({action:c,location:y.location,delta:t})}function v(e){let t="null"!==s.location.origin?s.location.origin:s.location.href,A="string"===typeof e?e:h(e);return A=A.replace(/ $/,"%20"),u(t,"No window.location.(origin|href) available to create URL for href: "+A),new URL(A,t)}null==p&&(p=0,o.replaceState(a({},o.state,{idx:p}),""));let y={get action(){return c},get location(){return e(s,o)},listen(e){if(g)throw new Error("A history only accepts one active listener");return s.addEventListener(l,m),g=e,()=>{s.removeEventListener(l,m),g=null}},createHref:e=>t(s,e),createURL:v,encodeLocation(e){let t=v(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(e,t){c=r.Push;let n=f(y.location,e,t);A&&A(n,e),p=b()+1;let a=d(n,p),l=y.createHref(n);try{o.pushState(a,"",l)}catch(ar){if(ar instanceof DOMException&&"DataCloneError"===ar.name)throw ar;s.location.assign(l)}i&&g&&g({action:c,location:y.location,delta:1})},replace:function(e,t){c=r.Replace;let n=f(y.location,e,t);A&&A(n,e),p=b();let s=d(n,p),a=y.createHref(n);o.replaceState(s,"",a),i&&g&&g({action:c,location:y.location,delta:0})},go:e=>o.go(e)};return y}var b;!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(b||(b={}));new Set(["lazy","caseSensitive","path","id","index","children"]);function m(e,t,A){return void 0===A&&(A="/"),v(e,t,A,!1)}function v(e,t,A,r){let n=G(("string"===typeof t?g(t):t).pathname||"/",A);if(null==n)return null;let s=y(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){let A=e.length===t.length&&e.slice(0,-1).every(((e,A)=>e===t[A]));return A?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(s);let i=null;for(let o=0;null==i&&o<s.length;++o){let e=k(n);i=I(s[o],e,r)}return i}function y(e,t,A,r){void 0===t&&(t=[]),void 0===A&&(A=[]),void 0===r&&(r="");let n=(e,n,s)=>{let i={relativePath:void 0===s?e.path||"":s,caseSensitive:!0===e.caseSensitive,childrenIndex:n,route:e};i.relativePath.startsWith("/")&&(u(i.relativePath.startsWith(r),'Absolute route path "'+i.relativePath+'" nested under path "'+r+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),i.relativePath=i.relativePath.slice(r.length));let o=X([r,i.relativePath]),a=A.concat(i);e.children&&e.children.length>0&&(u(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+o+'".'),y(e.children,t,a,o)),(null!=e.path||e.index)&&t.push({path:o,score:P(o,e.index),routesMeta:a})};return e.forEach(((e,t)=>{var A;if(""!==e.path&&null!=(A=e.path)&&A.includes("?"))for(let r of w(e.path))n(e,t,r);else n(e,t)})),t}function w(e){let t=e.split("/");if(0===t.length)return[];let[A,...r]=t,n=A.endsWith("?"),s=A.replace(/\?$/,"");if(0===r.length)return n?[s,""]:[s];let i=w(r.join("/")),o=[];return o.push(...i.map((e=>""===e?s:[s,e].join("/")))),n&&o.push(...i),o.map((t=>e.startsWith("/")&&""===t?"/":t))}const B=/^:[\w-]+$/,x=3,C=2,E=1,N=10,D=-2,Q=e=>"*"===e;function P(e,t){let A=e.split("/"),r=A.length;return A.some(Q)&&(r+=D),t&&(r+=C),A.filter((e=>!Q(e))).reduce(((e,t)=>e+(B.test(t)?x:""===t?E:N)),r)}function I(e,t,A){void 0===A&&(A=!1);let{routesMeta:r}=e,n={},s="/",i=[];for(let o=0;o<r.length;++o){let e=r[o],a=o===r.length-1,l="/"===s?t:t.slice(s.length)||"/",u=L({path:e.relativePath,caseSensitive:e.caseSensitive,end:a},l),c=e.route;if(!u&&a&&A&&!r[r.length-1].route.index&&(u=L({path:e.relativePath,caseSensitive:e.caseSensitive,end:!1},l)),!u)return null;Object.assign(n,u.params),i.push({params:n,pathname:X([s,u.pathname]),pathnameBase:M(X([s,u.pathnameBase])),route:c}),"/"!==u.pathnameBase&&(s=X([s,u.pathnameBase]))}return i}function L(e,t){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[A,r]=function(e,t,A){void 0===t&&(t=!1);void 0===A&&(A=!0);c("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let r=[],n="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,((e,t,A)=>(r.push({paramName:t,isOptional:null!=A}),A?"/?([^\\/]+)?":"/([^\\/]+)")));e.endsWith("*")?(r.push({paramName:"*"}),n+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):A?n+="\\/*$":""!==e&&"/"!==e&&(n+="(?:(?=\\/|$))");let s=new RegExp(n,t?void 0:"i");return[s,r]}(e.path,e.caseSensitive,e.end),n=t.match(A);if(!n)return null;let s=n[0],i=s.replace(/(.)\/+$/,"$1"),o=n.slice(1),a=r.reduce(((e,t,A)=>{let{paramName:r,isOptional:n}=t;if("*"===r){let e=o[A]||"";i=s.slice(0,s.length-e.length).replace(/(.)\/+$/,"$1")}const a=o[A];return e[r]=n&&!a?void 0:(a||"").replace(/%2F/g,"/"),e}),{});return{params:a,pathname:s,pathnameBase:i,pattern:e}}function k(e){try{return e.split("/").map((e=>decodeURIComponent(e).replace(/\//g,"%2F"))).join("/")}catch(ar){return c(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+ar+")."),e}}function G(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let A=t.endsWith("/")?t.length-1:t.length,r=e.charAt(A);return r&&"/"!==r?null:e.slice(A)||"/"}function F(e,t,A,r){return"Cannot include a '"+e+"' character in a manually specified `to."+t+"` field ["+JSON.stringify(r)+"].  Please separate it out to the `to."+A+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}function S(e){return e.filter(((e,t)=>0===t||e.route.path&&e.route.path.length>0))}function W(e,t){let A=S(e);return t?A.map(((e,t)=>t===A.length-1?e.pathname:e.pathnameBase)):A.map((e=>e.pathnameBase))}function Z(e,t,A,r){let n;void 0===r&&(r=!1),"string"===typeof e?n=g(e):(n=a({},e),u(!n.pathname||!n.pathname.includes("?"),F("?","pathname","search",n)),u(!n.pathname||!n.pathname.includes("#"),F("#","pathname","hash",n)),u(!n.search||!n.search.includes("#"),F("#","search","hash",n)));let s,i=""===e||""===n.pathname,o=i?"/":n.pathname;if(null==o)s=A;else{let e=t.length-1;if(!r&&o.startsWith("..")){let t=o.split("/");for(;".."===t[0];)t.shift(),e-=1;n.pathname=t.join("/")}s=e>=0?t[e]:"/"}let l=function(e,t){void 0===t&&(t="/");let{pathname:A,search:r="",hash:n=""}="string"===typeof e?g(e):e,s=A?A.startsWith("/")?A:function(e,t){let A=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?A.length>1&&A.pop():"."!==e&&A.push(e)})),A.length>1?A.join("/"):"/"}(A,t):t;return{pathname:s,search:z(r),hash:R(n)}}(n,s),c=o&&"/"!==o&&o.endsWith("/"),d=(i||"."===o)&&A.endsWith("/");return l.pathname.endsWith("/")||!c&&!d||(l.pathname+="/"),l}const X=e=>e.join("/").replace(/\/\/+/g,"/"),M=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),z=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",R=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";Error;function j(e){return null!=e&&"number"===typeof e.status&&"string"===typeof e.statusText&&"boolean"===typeof e.internal&&"data"in e}const T=["post","put","patch","delete"],U=(new Set(T),["get",...T]);new Set(U),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred");function V(){return V=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var A=arguments[t];for(var r in A)Object.prototype.hasOwnProperty.call(A,r)&&(e[r]=A[r])}return e},V.apply(this,arguments)}const O=n.createContext(null);const Y=n.createContext(null);const H=n.createContext(null);const K=n.createContext(null);const q=n.createContext({outlet:null,matches:[],isDataRoute:!1});const J=n.createContext(null);function _(){return null!=n.useContext(K)}function $(){return _()||u(!1),n.useContext(K).location}function ee(e){n.useContext(H).static||n.useLayoutEffect(e)}function te(){let{isDataRoute:e}=n.useContext(q);return e?function(){let{router:e}=ce(le.UseNavigateStable),t=fe(ue.UseNavigateStable),A=n.useRef(!1);ee((()=>{A.current=!0}));let r=n.useCallback((function(r,n){void 0===n&&(n={}),A.current&&("number"===typeof r?e.navigate(r):e.navigate(r,V({fromRouteId:t},n)))}),[e,t]);return r}():function(){_()||u(!1);let e=n.useContext(O),{basename:t,future:A,navigator:r}=n.useContext(H),{matches:s}=n.useContext(q),{pathname:i}=$(),o=JSON.stringify(W(s,A.v7_relativeSplatPath)),a=n.useRef(!1);return ee((()=>{a.current=!0})),n.useCallback((function(A,n){if(void 0===n&&(n={}),!a.current)return;if("number"===typeof A)return void r.go(A);let s=Z(A,JSON.parse(o),i,"path"===n.relative);null==e&&"/"!==t&&(s.pathname="/"===s.pathname?t:X([t,s.pathname])),(n.replace?r.replace:r.push)(s,n.state,n)}),[t,r,o,i,e])}()}function Ae(e,t){let{relative:A}=void 0===t?{}:t,{future:r}=n.useContext(H),{matches:s}=n.useContext(q),{pathname:i}=$(),o=JSON.stringify(W(s,r.v7_relativeSplatPath));return n.useMemo((()=>Z(e,JSON.parse(o),i,"path"===A)),[e,o,i,A])}function re(e,t,A,s){_()||u(!1);let{navigator:i}=n.useContext(H),{matches:o}=n.useContext(q),a=o[o.length-1],l=a?a.params:{},c=(a&&a.pathname,a?a.pathnameBase:"/");a&&a.route;let d,f=$();if(t){var h;let e="string"===typeof t?g(t):t;"/"===c||(null==(h=e.pathname)?void 0:h.startsWith(c))||u(!1),d=e}else d=f;let p=d.pathname||"/",b=p;if("/"!==c){let e=c.replace(/^\//,"").split("/");b="/"+p.replace(/^\//,"").split("/").slice(e.length).join("/")}let v=m(e,{pathname:b});let y=ae(v&&v.map((e=>Object.assign({},e,{params:Object.assign({},l,e.params),pathname:X([c,i.encodeLocation?i.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?c:X([c,i.encodeLocation?i.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),o,A,s);return t&&y?n.createElement(K.Provider,{value:{location:V({pathname:"/",search:"",hash:"",state:null,key:"default"},d),navigationType:r.Pop}},y):y}function ne(){let e=function(){var e;let t=n.useContext(J),A=de(ue.UseRouteError),r=fe(ue.UseRouteError);if(void 0!==t)return t;return null==(e=A.errors)?void 0:e[r]}(),t=j(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),A=e instanceof Error?e.stack:null,r="rgba(200,200,200, 0.5)",s={padding:"0.5rem",backgroundColor:r};return n.createElement(n.Fragment,null,n.createElement("h2",null,"Unexpected Application Error!"),n.createElement("h3",{style:{fontStyle:"italic"}},t),A?n.createElement("pre",{style:s},A):null,null)}const se=n.createElement(ne,null);class ie extends n.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:void 0!==e.error?e.error:t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return void 0!==this.state.error?n.createElement(q.Provider,{value:this.props.routeContext},n.createElement(J.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function oe(e){let{routeContext:t,match:A,children:r}=e,s=n.useContext(O);return s&&s.static&&s.staticContext&&(A.route.errorElement||A.route.ErrorBoundary)&&(s.staticContext._deepestRenderedBoundaryId=A.route.id),n.createElement(q.Provider,{value:t},r)}function ae(e,t,A,r){var s;if(void 0===t&&(t=[]),void 0===A&&(A=null),void 0===r&&(r=null),null==e){var i;if(!A)return null;if(A.errors)e=A.matches;else{if(!(null!=(i=r)&&i.v7_partialHydration&&0===t.length&&!A.initialized&&A.matches.length>0))return null;e=A.matches}}let o=e,a=null==(s=A)?void 0:s.errors;if(null!=a){let e=o.findIndex((e=>e.route.id&&void 0!==(null==a?void 0:a[e.route.id])));e>=0||u(!1),o=o.slice(0,Math.min(o.length,e+1))}let l=!1,c=-1;if(A&&r&&r.v7_partialHydration)for(let n=0;n<o.length;n++){let e=o[n];if((e.route.HydrateFallback||e.route.hydrateFallbackElement)&&(c=n),e.route.id){let{loaderData:t,errors:r}=A,n=e.route.loader&&void 0===t[e.route.id]&&(!r||void 0===r[e.route.id]);if(e.route.lazy||n){l=!0,o=c>=0?o.slice(0,c+1):[o[0]];break}}}return o.reduceRight(((e,r,s)=>{let i,u=!1,d=null,f=null;var h;A&&(i=a&&r.route.id?a[r.route.id]:void 0,d=r.route.errorElement||se,l&&(c<0&&0===s?(h="route-fallback",!1||he[h]||(he[h]=!0),u=!0,f=null):c===s&&(u=!0,f=r.route.hydrateFallbackElement||null)));let g=t.concat(o.slice(0,s+1)),p=()=>{let t;return t=i?d:u?f:r.route.Component?n.createElement(r.route.Component,null):r.route.element?r.route.element:e,n.createElement(oe,{match:r,routeContext:{outlet:e,matches:g,isDataRoute:null!=A},children:t})};return A&&(r.route.ErrorBoundary||r.route.errorElement||0===s)?n.createElement(ie,{location:A.location,revalidation:A.revalidation,component:d,error:i,children:p(),routeContext:{outlet:null,matches:g,isDataRoute:!0}}):p()}),null)}var le=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(le||{}),ue=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(ue||{});function ce(e){let t=n.useContext(O);return t||u(!1),t}function de(e){let t=n.useContext(Y);return t||u(!1),t}function fe(e){let t=function(){let e=n.useContext(q);return e||u(!1),e}(),A=t.matches[t.matches.length-1];return A.route.id||u(!1),A.route.id}const he={};s.startTransition;function ge(e){u(!1)}function pe(e){let{basename:t="/",children:A=null,location:s,navigationType:i=r.Pop,navigator:o,static:a=!1,future:l}=e;_()&&u(!1);let c=t.replace(/^\/*/,"/"),d=n.useMemo((()=>({basename:c,navigator:o,static:a,future:V({v7_relativeSplatPath:!1},l)})),[c,l,o,a]);"string"===typeof s&&(s=g(s));let{pathname:f="/",search:h="",hash:p="",state:b=null,key:m="default"}=s,v=n.useMemo((()=>{let e=G(f,c);return null==e?null:{location:{pathname:e,search:h,hash:p,state:b,key:m},navigationType:i}}),[c,f,h,p,b,m,i]);return null==v?null:n.createElement(H.Provider,{value:d},n.createElement(K.Provider,{children:A,value:v}))}function be(e){let{children:t,location:A}=e;return re(me(t),A)}new Promise((()=>{}));n.Component;function me(e,t){void 0===t&&(t=[]);let A=[];return n.Children.forEach(e,((e,r)=>{if(!n.isValidElement(e))return;let s=[...t,r];if(e.type===n.Fragment)return void A.push.apply(A,me(e.props.children,s));e.type!==ge&&u(!1),e.props.index&&e.props.children&&u(!1);let i={id:e.props.id||s.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(i.children=me(e.props.children,s)),A.push(i)})),A}var ve=A(579);const ye=(0,n.createContext)(null);function we(e){const t=(0,n.useRef)(null);return null===t.current&&(t.current=e()),t.current}const Be=(0,n.createContext)({transformPagePoint:e=>e,isStatic:!1,reducedMotion:"never"});class xe extends n.Component{getSnapshotBeforeUpdate(e){const t=this.props.childRef.current;if(t&&e.isPresent&&!this.props.isPresent){const e=this.props.sizeRef.current;e.height=t.offsetHeight||0,e.width=t.offsetWidth||0,e.top=t.offsetTop,e.left=t.offsetLeft}return null}componentDidUpdate(){}render(){return this.props.children}}function Ce(e){let{children:t,isPresent:A}=e;const r=(0,n.useId)(),s=(0,n.useRef)(null),i=(0,n.useRef)({width:0,height:0,top:0,left:0}),{nonce:o}=(0,n.useContext)(Be);return(0,n.useInsertionEffect)((()=>{const{width:e,height:t,top:n,left:a}=i.current;if(A||!s.current||!e||!t)return;s.current.dataset.motionPopId=r;const l=document.createElement("style");return o&&(l.nonce=o),document.head.appendChild(l),l.sheet&&l.sheet.insertRule(`\n          [data-motion-pop-id="${r}"] {\n            position: absolute !important;\n            width: ${e}px !important;\n            height: ${t}px !important;\n            top: ${n}px !important;\n            left: ${a}px !important;\n          }\n        `),()=>{document.head.removeChild(l)}}),[A]),(0,ve.jsx)(xe,{isPresent:A,childRef:s,sizeRef:i,children:n.cloneElement(t,{ref:s})})}const Ee=e=>{let{children:t,initial:A,isPresent:r,onExitComplete:s,custom:i,presenceAffectsLayout:o,mode:a}=e;const l=we(Ne),u=(0,n.useId)(),c=(0,n.useMemo)((()=>({id:u,initial:A,isPresent:r,custom:i,onExitComplete:e=>{l.set(e,!0);for(const t of l.values())if(!t)return;s&&s()},register:e=>(l.set(e,!1),()=>l.delete(e))})),o?[Math.random()]:[r]);return(0,n.useMemo)((()=>{l.forEach(((e,t)=>l.set(t,!1)))}),[r]),n.useEffect((()=>{!r&&!l.size&&s&&s()}),[r]),"popLayout"===a&&(t=(0,ve.jsx)(Ce,{isPresent:r,children:t})),(0,ve.jsx)(ye.Provider,{value:c,children:t})};function Ne(){return new Map}const De=(0,n.createContext)({}),Qe=e=>e;let Pe=Qe,Ie=Qe;const Le=e=>e.key||"";function ke(e){const t=[];return n.Children.forEach(e,(e=>{(0,n.isValidElement)(e)&&t.push(e)})),t}const Ge="undefined"!==typeof window,Fe=Ge?n.useLayoutEffect:n.useEffect,Se=e=>{let{children:t,exitBeforeEnter:A,custom:r,initial:s=!0,onExitComplete:i,presenceAffectsLayout:o=!0,mode:a="sync"}=e;Ie(!A,"Replace exitBeforeEnter with mode='wait'");const l=(0,n.useMemo)((()=>ke(t)),[t]),u=l.map(Le),c=(0,n.useRef)(!0),d=(0,n.useRef)(l),f=we((()=>new Map)),[h,g]=(0,n.useState)(l),[p,b]=(0,n.useState)(l);Fe((()=>{c.current=!1,d.current=l;for(let e=0;e<p.length;e++){const t=Le(p[e]);u.includes(t)?f.delete(t):!0!==f.get(t)&&f.set(t,!1)}}),[p,u.length,u.join("-")]);const m=[];if(l!==h){let e=[...l];for(let t=0;t<p.length;t++){const A=p[t],r=Le(A);u.includes(r)||(e.splice(t,0,A),m.push(A))}return"wait"===a&&m.length&&(e=m),b(ke(e)),void g(l)}const{forceRender:v}=(0,n.useContext)(De);return(0,ve.jsx)(ve.Fragment,{children:p.map((e=>{const t=Le(e),A=l===p||u.includes(t);return(0,ve.jsx)(Ee,{isPresent:A,initial:!(c.current&&!s)&&void 0,custom:A?void 0:r,presenceAffectsLayout:o,mode:a,onExitComplete:A?void 0:()=>{if(!f.has(t))return;f.set(t,!0);let e=!0;f.forEach((t=>{t||(e=!1)})),e&&(null===v||void 0===v||v(),b(d.current),i&&i())},children:e},t)}))})};function We(){return We=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var A=arguments[t];for(var r in A)Object.prototype.hasOwnProperty.call(A,r)&&(e[r]=A[r])}return e},We.apply(this,arguments)}function Ze(e,t){if(null==e)return{};var A,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)A=s[r],t.indexOf(A)>=0||(n[A]=e[A]);return n}new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);const Xe=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset","unstable_viewTransition"];try{window.__reactRouterVersion="6"}catch(tF){}new Map;const Me=s.startTransition;o.flushSync,s.useId;function ze(e){let{basename:t,children:A,future:r,window:s}=e,i=n.useRef();var o;null==i.current&&(i.current=(void 0===(o={window:s,v5Compat:!0})&&(o={}),p((function(e,t){let{pathname:A,search:r,hash:n}=e.location;return f("",{pathname:A,search:r,hash:n},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"===typeof t?t:h(t)}),null,o)));let a=i.current,[l,u]=n.useState({action:a.action,location:a.location}),{v7_startTransition:c}=r||{},d=n.useCallback((e=>{c&&Me?Me((()=>u(e))):u(e)}),[u,c]);return n.useLayoutEffect((()=>a.listen(d)),[a,d]),n.createElement(pe,{basename:t,children:A,location:l.location,navigationType:l.action,navigator:a,future:r})}const Re="undefined"!==typeof window&&"undefined"!==typeof window.document&&"undefined"!==typeof window.document.createElement,je=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,Te=n.forwardRef((function(e,t){let A,{onClick:r,relative:s,reloadDocument:i,replace:o,state:a,target:l,to:c,preventScrollReset:d,unstable_viewTransition:f}=e,g=Ze(e,Xe),{basename:p}=n.useContext(H),b=!1;if("string"===typeof c&&je.test(c)&&(A=c,Re))try{let e=new URL(window.location.href),t=c.startsWith("//")?new URL(e.protocol+c):new URL(c),A=G(t.pathname,p);t.origin===e.origin&&null!=A?c=A+t.search+t.hash:b=!0}catch(tF){}let m=function(e,t){let{relative:A}=void 0===t?{}:t;_()||u(!1);let{basename:r,navigator:s}=n.useContext(H),{hash:i,pathname:o,search:a}=Ae(e,{relative:A}),l=o;return"/"!==r&&(l="/"===o?r:X([r,o])),s.createHref({pathname:l,search:a,hash:i})}(c,{relative:s}),v=function(e,t){let{target:A,replace:r,state:s,preventScrollReset:i,relative:o,unstable_viewTransition:a}=void 0===t?{}:t,l=te(),u=$(),c=Ae(e,{relative:o});return n.useCallback((t=>{if(function(e,t){return 0===e.button&&(!t||"_self"===t)&&!function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)}(t,A)){t.preventDefault();let A=void 0!==r?r:h(u)===h(c);l(e,{replace:A,state:s,preventScrollReset:i,relative:o,unstable_viewTransition:a})}}),[u,l,c,r,s,A,e,i,o,a])}(c,{replace:o,state:a,target:l,preventScrollReset:d,relative:s,unstable_viewTransition:f});return n.createElement("a",We({},g,{href:A||m,onClick:b||i?r:function(e){r&&r(e),e.defaultPrevented||v(e)},ref:t,target:l}))}));var Ue,Ve;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"})(Ue||(Ue={})),function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(Ve||(Ve={}));const Oe=()=>(0,ve.jsxs)("header",{className:"py-4 bg-black shadow-md",children:[(0,ve.jsx)("div",{className:"flex items-center justify-between",children:(0,ve.jsxs)("div",{className:"flex items-center space-x-8",children:[(0,ve.jsx)("h1",{className:"pl-4 text-2xl font-bold text-white",children:(0,ve.jsx)(Te,{to:"/",children:"Bryan's Generator"})}),(0,ve.jsx)("nav",{className:"hidden md:block",children:(0,ve.jsxs)("ul",{className:"flex space-x-6",children:[(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(Te,{to:"/",className:"text-white",children:"Home"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(Te,{to:"/cv-parking-permit",className:"text-white",children:"Campus View"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(Te,{to:"/canvas-parking-permit",className:"text-white",children:"Canvas"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(Te,{to:"/placeholder-parking-permit",className:"text-white",children:"Coming Soon"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(Te,{to:"/About",className:"text-white",children:"About"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]})]})})]})}),(0,ve.jsx)("div",{className:"block w-full mt-4 md:hidden",children:(0,ve.jsx)("nav",{children:(0,ve.jsxs)("ul",{className:"flex flex-col items-start pl-4 space-y-2",children:[(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(Te,{to:"/",className:"text-white",children:"Home"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(Te,{to:"/cv-parking-permit",className:"text-white",children:"Campus View"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(Te,{to:"/canvas-parking-permit",className:"text-white",children:"Canvas"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(Te,{to:"/placeholder-parking-permit",className:"text-white",children:"Coming Soon"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(Te,{to:"/About",className:"text-white",children:"About"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]})]})})})]}),Ye=()=>(0,ve.jsxs)("div",{className:"relative flex items-center justify-center min-h-screen text-white bg-gray-800",children:[(0,ve.jsxs)("div",{className:"lines",children:[(0,ve.jsx)("div",{className:"line"}),(0,ve.jsx)("div",{className:"line"}),(0,ve.jsx)("div",{className:"line"})]}),(0,ve.jsx)("h2",{className:"z-10 text-4xl font-bold text-center",children:"Welcome to Bryan's Parking Pass Generator"})]}),He={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function Ke(e){return function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const A=t.width?String(t.width):e.defaultWidth;return e.formats[A]||e.formats[e.defaultWidth]}}const qe={date:Ke({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:Ke({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:Ke({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},Je={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function _e(e){return(t,A)=>{let r;if("formatting"===(A?.context?String(A.context):"standalone")&&e.formattingValues){const t=e.defaultFormattingWidth||e.defaultWidth,n=A?.width?String(A.width):t;r=e.formattingValues[n]||e.formattingValues[t]}else{const t=e.defaultWidth,n=A?.width?String(A.width):e.defaultWidth;r=e.values[n]||e.values[t]}return r[e.argumentCallback?e.argumentCallback(t):t]}}const $e={ordinalNumber:(e,t)=>{const A=Number(e),r=A%100;if(r>20||r<10)switch(r%10){case 1:return A+"st";case 2:return A+"nd";case 3:return A+"rd"}return A+"th"},era:_e({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:_e({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:e=>e-1}),month:_e({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:_e({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:_e({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function et(e){return function(t){let A=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=A.width,n=r&&e.matchPatterns[r]||e.matchPatterns[e.defaultMatchWidth],s=t.match(n);if(!s)return null;const i=s[0],o=r&&e.parsePatterns[r]||e.parsePatterns[e.defaultParseWidth],a=Array.isArray(o)?function(e,t){for(let A=0;A<e.length;A++)if(t(e[A]))return A;return}(o,(e=>e.test(i))):function(e,t){for(const A in e)if(Object.prototype.hasOwnProperty.call(e,A)&&t(e[A]))return A;return}(o,(e=>e.test(i)));let l;l=e.valueCallback?e.valueCallback(a):a,l=A.valueCallback?A.valueCallback(l):l;return{value:l,rest:t.slice(i.length)}}}var tt;const At={code:"en-US",formatDistance:(e,t,A)=>{let r;const n=He[e];return r="string"===typeof n?n:1===t?n.one:n.other.replace("{{count}}",t.toString()),A?.addSuffix?A.comparison&&A.comparison>0?"in "+r:r+" ago":r},formatLong:qe,formatRelative:(e,t,A,r)=>Je[e],localize:$e,match:{ordinalNumber:(tt={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:e=>parseInt(e,10)},function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const A=e.match(tt.matchPattern);if(!A)return null;const r=A[0],n=e.match(tt.parsePattern);if(!n)return null;let s=tt.valueCallback?tt.valueCallback(n[0]):n[0];return s=t.valueCallback?t.valueCallback(s):s,{value:s,rest:e.slice(r.length)}}),era:et({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:et({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:e=>e+1}),month:et({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:et({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:et({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};let rt={};function nt(){return rt}Math.pow(10,8);const st=6048e5,it=864e5;function ot(e){const t=Object.prototype.toString.call(e);return e instanceof Date||"object"===typeof e&&"[object Date]"===t?new e.constructor(+e):"number"===typeof e||"[object Number]"===t||"string"===typeof e||"[object String]"===t?new Date(e):new Date(NaN)}function at(e){const t=ot(e);return t.setHours(0,0,0,0),t}function lt(e){const t=ot(e),A=new Date(Date.UTC(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()));return A.setUTCFullYear(t.getFullYear()),+e-+A}function ut(e,t){const A=at(e),r=at(t),n=+A-lt(A),s=+r-lt(r);return Math.round((n-s)/it)}function ct(e,t){return e instanceof Date?new e.constructor(t):new Date(t)}function dt(e){const t=ot(e),A=ct(e,0);return A.setFullYear(t.getFullYear(),0,1),A.setHours(0,0,0,0),A}function ft(e){const t=ot(e);return ut(t,dt(t))+1}function ht(e,t){const A=nt(),r=t?.weekStartsOn??t?.locale?.options?.weekStartsOn??A.weekStartsOn??A.locale?.options?.weekStartsOn??0,n=ot(e),s=n.getDay(),i=(s<r?7:0)+s-r;return n.setDate(n.getDate()-i),n.setHours(0,0,0,0),n}function gt(e){return ht(e,{weekStartsOn:1})}function pt(e){const t=ot(e),A=t.getFullYear(),r=ct(e,0);r.setFullYear(A+1,0,4),r.setHours(0,0,0,0);const n=gt(r),s=ct(e,0);s.setFullYear(A,0,4),s.setHours(0,0,0,0);const i=gt(s);return t.getTime()>=n.getTime()?A+1:t.getTime()>=i.getTime()?A:A-1}function bt(e){const t=pt(e),A=ct(e,0);return A.setFullYear(t,0,4),A.setHours(0,0,0,0),gt(A)}function mt(e){const t=ot(e),A=+gt(t)-+bt(t);return Math.round(A/st)+1}function vt(e,t){const A=ot(e),r=A.getFullYear(),n=nt(),s=t?.firstWeekContainsDate??t?.locale?.options?.firstWeekContainsDate??n.firstWeekContainsDate??n.locale?.options?.firstWeekContainsDate??1,i=ct(e,0);i.setFullYear(r+1,0,s),i.setHours(0,0,0,0);const o=ht(i,t),a=ct(e,0);a.setFullYear(r,0,s),a.setHours(0,0,0,0);const l=ht(a,t);return A.getTime()>=o.getTime()?r+1:A.getTime()>=l.getTime()?r:r-1}function yt(e,t){const A=nt(),r=t?.firstWeekContainsDate??t?.locale?.options?.firstWeekContainsDate??A.firstWeekContainsDate??A.locale?.options?.firstWeekContainsDate??1,n=vt(e,t),s=ct(e,0);s.setFullYear(n,0,r),s.setHours(0,0,0,0);return ht(s,t)}function wt(e,t){const A=ot(e),r=+ht(A,t)-+yt(A,t);return Math.round(r/st)+1}function Bt(e,t){return(e<0?"-":"")+Math.abs(e).toString().padStart(t,"0")}const xt={y(e,t){const A=e.getFullYear(),r=A>0?A:1-A;return Bt("yy"===t?r%100:r,t.length)},M(e,t){const A=e.getMonth();return"M"===t?String(A+1):Bt(A+1,2)},d:(e,t)=>Bt(e.getDate(),t.length),a(e,t){const A=e.getHours()/12>=1?"pm":"am";switch(t){case"a":case"aa":return A.toUpperCase();case"aaa":return A;case"aaaaa":return A[0];default:return"am"===A?"a.m.":"p.m."}},h:(e,t)=>Bt(e.getHours()%12||12,t.length),H:(e,t)=>Bt(e.getHours(),t.length),m:(e,t)=>Bt(e.getMinutes(),t.length),s:(e,t)=>Bt(e.getSeconds(),t.length),S(e,t){const A=t.length,r=e.getMilliseconds();return Bt(Math.trunc(r*Math.pow(10,A-3)),t.length)}},Ct="midnight",Et="noon",Nt="morning",Dt="afternoon",Qt="evening",Pt="night",It={G:function(e,t,A){const r=e.getFullYear()>0?1:0;switch(t){case"G":case"GG":case"GGG":return A.era(r,{width:"abbreviated"});case"GGGGG":return A.era(r,{width:"narrow"});default:return A.era(r,{width:"wide"})}},y:function(e,t,A){if("yo"===t){const t=e.getFullYear(),r=t>0?t:1-t;return A.ordinalNumber(r,{unit:"year"})}return xt.y(e,t)},Y:function(e,t,A,r){const n=vt(e,r),s=n>0?n:1-n;if("YY"===t){return Bt(s%100,2)}return"Yo"===t?A.ordinalNumber(s,{unit:"year"}):Bt(s,t.length)},R:function(e,t){return Bt(pt(e),t.length)},u:function(e,t){return Bt(e.getFullYear(),t.length)},Q:function(e,t,A){const r=Math.ceil((e.getMonth()+1)/3);switch(t){case"Q":return String(r);case"QQ":return Bt(r,2);case"Qo":return A.ordinalNumber(r,{unit:"quarter"});case"QQQ":return A.quarter(r,{width:"abbreviated",context:"formatting"});case"QQQQQ":return A.quarter(r,{width:"narrow",context:"formatting"});default:return A.quarter(r,{width:"wide",context:"formatting"})}},q:function(e,t,A){const r=Math.ceil((e.getMonth()+1)/3);switch(t){case"q":return String(r);case"qq":return Bt(r,2);case"qo":return A.ordinalNumber(r,{unit:"quarter"});case"qqq":return A.quarter(r,{width:"abbreviated",context:"standalone"});case"qqqqq":return A.quarter(r,{width:"narrow",context:"standalone"});default:return A.quarter(r,{width:"wide",context:"standalone"})}},M:function(e,t,A){const r=e.getMonth();switch(t){case"M":case"MM":return xt.M(e,t);case"Mo":return A.ordinalNumber(r+1,{unit:"month"});case"MMM":return A.month(r,{width:"abbreviated",context:"formatting"});case"MMMMM":return A.month(r,{width:"narrow",context:"formatting"});default:return A.month(r,{width:"wide",context:"formatting"})}},L:function(e,t,A){const r=e.getMonth();switch(t){case"L":return String(r+1);case"LL":return Bt(r+1,2);case"Lo":return A.ordinalNumber(r+1,{unit:"month"});case"LLL":return A.month(r,{width:"abbreviated",context:"standalone"});case"LLLLL":return A.month(r,{width:"narrow",context:"standalone"});default:return A.month(r,{width:"wide",context:"standalone"})}},w:function(e,t,A,r){const n=wt(e,r);return"wo"===t?A.ordinalNumber(n,{unit:"week"}):Bt(n,t.length)},I:function(e,t,A){const r=mt(e);return"Io"===t?A.ordinalNumber(r,{unit:"week"}):Bt(r,t.length)},d:function(e,t,A){return"do"===t?A.ordinalNumber(e.getDate(),{unit:"date"}):xt.d(e,t)},D:function(e,t,A){const r=ft(e);return"Do"===t?A.ordinalNumber(r,{unit:"dayOfYear"}):Bt(r,t.length)},E:function(e,t,A){const r=e.getDay();switch(t){case"E":case"EE":case"EEE":return A.day(r,{width:"abbreviated",context:"formatting"});case"EEEEE":return A.day(r,{width:"narrow",context:"formatting"});case"EEEEEE":return A.day(r,{width:"short",context:"formatting"});default:return A.day(r,{width:"wide",context:"formatting"})}},e:function(e,t,A,r){const n=e.getDay(),s=(n-r.weekStartsOn+8)%7||7;switch(t){case"e":return String(s);case"ee":return Bt(s,2);case"eo":return A.ordinalNumber(s,{unit:"day"});case"eee":return A.day(n,{width:"abbreviated",context:"formatting"});case"eeeee":return A.day(n,{width:"narrow",context:"formatting"});case"eeeeee":return A.day(n,{width:"short",context:"formatting"});default:return A.day(n,{width:"wide",context:"formatting"})}},c:function(e,t,A,r){const n=e.getDay(),s=(n-r.weekStartsOn+8)%7||7;switch(t){case"c":return String(s);case"cc":return Bt(s,t.length);case"co":return A.ordinalNumber(s,{unit:"day"});case"ccc":return A.day(n,{width:"abbreviated",context:"standalone"});case"ccccc":return A.day(n,{width:"narrow",context:"standalone"});case"cccccc":return A.day(n,{width:"short",context:"standalone"});default:return A.day(n,{width:"wide",context:"standalone"})}},i:function(e,t,A){const r=e.getDay(),n=0===r?7:r;switch(t){case"i":return String(n);case"ii":return Bt(n,t.length);case"io":return A.ordinalNumber(n,{unit:"day"});case"iii":return A.day(r,{width:"abbreviated",context:"formatting"});case"iiiii":return A.day(r,{width:"narrow",context:"formatting"});case"iiiiii":return A.day(r,{width:"short",context:"formatting"});default:return A.day(r,{width:"wide",context:"formatting"})}},a:function(e,t,A){const r=e.getHours()/12>=1?"pm":"am";switch(t){case"a":case"aa":return A.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"aaa":return A.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return A.dayPeriod(r,{width:"narrow",context:"formatting"});default:return A.dayPeriod(r,{width:"wide",context:"formatting"})}},b:function(e,t,A){const r=e.getHours();let n;switch(n=12===r?Et:0===r?Ct:r/12>=1?"pm":"am",t){case"b":case"bb":return A.dayPeriod(n,{width:"abbreviated",context:"formatting"});case"bbb":return A.dayPeriod(n,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return A.dayPeriod(n,{width:"narrow",context:"formatting"});default:return A.dayPeriod(n,{width:"wide",context:"formatting"})}},B:function(e,t,A){const r=e.getHours();let n;switch(n=r>=17?Qt:r>=12?Dt:r>=4?Nt:Pt,t){case"B":case"BB":case"BBB":return A.dayPeriod(n,{width:"abbreviated",context:"formatting"});case"BBBBB":return A.dayPeriod(n,{width:"narrow",context:"formatting"});default:return A.dayPeriod(n,{width:"wide",context:"formatting"})}},h:function(e,t,A){if("ho"===t){let t=e.getHours()%12;return 0===t&&(t=12),A.ordinalNumber(t,{unit:"hour"})}return xt.h(e,t)},H:function(e,t,A){return"Ho"===t?A.ordinalNumber(e.getHours(),{unit:"hour"}):xt.H(e,t)},K:function(e,t,A){const r=e.getHours()%12;return"Ko"===t?A.ordinalNumber(r,{unit:"hour"}):Bt(r,t.length)},k:function(e,t,A){let r=e.getHours();return 0===r&&(r=24),"ko"===t?A.ordinalNumber(r,{unit:"hour"}):Bt(r,t.length)},m:function(e,t,A){return"mo"===t?A.ordinalNumber(e.getMinutes(),{unit:"minute"}):xt.m(e,t)},s:function(e,t,A){return"so"===t?A.ordinalNumber(e.getSeconds(),{unit:"second"}):xt.s(e,t)},S:function(e,t){return xt.S(e,t)},X:function(e,t,A){const r=e.getTimezoneOffset();if(0===r)return"Z";switch(t){case"X":return kt(r);case"XXXX":case"XX":return Gt(r);default:return Gt(r,":")}},x:function(e,t,A){const r=e.getTimezoneOffset();switch(t){case"x":return kt(r);case"xxxx":case"xx":return Gt(r);default:return Gt(r,":")}},O:function(e,t,A){const r=e.getTimezoneOffset();switch(t){case"O":case"OO":case"OOO":return"GMT"+Lt(r,":");default:return"GMT"+Gt(r,":")}},z:function(e,t,A){const r=e.getTimezoneOffset();switch(t){case"z":case"zz":case"zzz":return"GMT"+Lt(r,":");default:return"GMT"+Gt(r,":")}},t:function(e,t,A){return Bt(Math.trunc(e.getTime()/1e3),t.length)},T:function(e,t,A){return Bt(e.getTime(),t.length)}};function Lt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const A=e>0?"-":"+",r=Math.abs(e),n=Math.trunc(r/60),s=r%60;return 0===s?A+String(n):A+String(n)+t+Bt(s,2)}function kt(e,t){if(e%60===0){return(e>0?"-":"+")+Bt(Math.abs(e)/60,2)}return Gt(e,t)}function Gt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const A=e>0?"-":"+",r=Math.abs(e);return A+Bt(Math.trunc(r/60),2)+t+Bt(r%60,2)}const Ft=(e,t)=>{switch(e){case"P":return t.date({width:"short"});case"PP":return t.date({width:"medium"});case"PPP":return t.date({width:"long"});default:return t.date({width:"full"})}},St=(e,t)=>{switch(e){case"p":return t.time({width:"short"});case"pp":return t.time({width:"medium"});case"ppp":return t.time({width:"long"});default:return t.time({width:"full"})}},Wt={p:St,P:(e,t)=>{const A=e.match(/(P+)(p+)?/)||[],r=A[1],n=A[2];if(!n)return Ft(e,t);let s;switch(r){case"P":s=t.dateTime({width:"short"});break;case"PP":s=t.dateTime({width:"medium"});break;case"PPP":s=t.dateTime({width:"long"});break;default:s=t.dateTime({width:"full"})}return s.replace("{{date}}",Ft(r,t)).replace("{{time}}",St(n,t))}},Zt=/^D+$/,Xt=/^Y+$/,Mt=["D","DD","YY","YYYY"];function zt(e){return Zt.test(e)}function Rt(e){return Xt.test(e)}function jt(e,t,A){const r=function(e,t,A){const r="Y"===e[0]?"years":"days of the month";return`Use \`${e.toLowerCase()}\` instead of \`${e}\` (in \`${t}\`) for formatting ${r} to the input \`${A}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`}(e,t,A);if(console.warn(r),Mt.includes(e))throw new RangeError(r)}function Tt(e){return e instanceof Date||"object"===typeof e&&"[object Date]"===Object.prototype.toString.call(e)}function Ut(e){if(!Tt(e)&&"number"!==typeof e)return!1;const t=ot(e);return!isNaN(Number(t))}const Vt=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,Ot=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,Yt=/^'([^]*?)'?$/,Ht=/''/g,Kt=/[a-zA-Z]/;function qt(e,t,A){const r=nt(),n=A?.locale??r.locale??At,s=A?.firstWeekContainsDate??A?.locale?.options?.firstWeekContainsDate??r.firstWeekContainsDate??r.locale?.options?.firstWeekContainsDate??1,i=A?.weekStartsOn??A?.locale?.options?.weekStartsOn??r.weekStartsOn??r.locale?.options?.weekStartsOn??0,o=ot(e);if(!Ut(o))throw new RangeError("Invalid time value");let a=t.match(Ot).map((e=>{const t=e[0];if("p"===t||"P"===t){return(0,Wt[t])(e,n.formatLong)}return e})).join("").match(Vt).map((e=>{if("''"===e)return{isToken:!1,value:"'"};const t=e[0];if("'"===t)return{isToken:!1,value:Jt(e)};if(It[t])return{isToken:!0,value:e};if(t.match(Kt))throw new RangeError("Format string contains an unescaped latin alphabet character `"+t+"`");return{isToken:!1,value:e}}));n.localize.preprocessor&&(a=n.localize.preprocessor(o,a));const l={firstWeekContainsDate:s,weekStartsOn:i,locale:n};return a.map((r=>{if(!r.isToken)return r.value;const s=r.value;(!A?.useAdditionalWeekYearTokens&&Rt(s)||!A?.useAdditionalDayOfYearTokens&&zt(s))&&jt(s,t,String(e));return(0,It[s[0]])(o,s,n.localize,l)})).join("")}function Jt(e){const t=e.match(Yt);return t?t[1].replace(Ht,"'"):e}function _t(e,t){const A=ot(e);return isNaN(t)?ct(e,NaN):t?(A.setDate(A.getDate()+t),A):A}const $t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",eA=new Uint8Array(256);for(let A=0;A<64;A++)eA[$t.charCodeAt(A)]=A;const tA=e=>{let t="";const A=e.length;for(let r=0;r<A;r+=3)t+=$t[e[r]>>2],t+=$t[(3&e[r])<<4|e[r+1]>>4],t+=$t[(15&e[r+1])<<2|e[r+2]>>6],t+=$t[63&e[r+2]];return A%3===2?t=t.substring(0,t.length-1)+"=":A%3===1&&(t=t.substring(0,t.length-2)+"=="),t},AA=e=>{let t=.75*e.length;const A=e.length;let r,n,s,i,o,a=0;"="===e[e.length-1]&&(t--,"="===e[e.length-2]&&t--);const l=new Uint8Array(t);for(r=0;r<A;r+=4)n=eA[e.charCodeAt(r)],s=eA[e.charCodeAt(r+1)],i=eA[e.charCodeAt(r+2)],o=eA[e.charCodeAt(r+3)],l[a++]=n<<2|s>>4,l[a++]=(15&s)<<4|i>>2,l[a++]=(3&i)<<6|63&o;return l},rA=/^(data)?:?([\w\/\+]+)?;?(charset=[\w-]+|base64)?.*,/i,nA=e=>{const t=e.trim(),A=t.substring(0,100).match(rA);if(!A)return AA(t);const[r]=A,n=t.substring(r.length);return AA(n)},sA=e=>e.charCodeAt(0),iA=e=>e.codePointAt(0),oA=(e,t)=>cA(e.toString(16),t,"0").toUpperCase(),aA=e=>oA(e,2),lA=e=>String.fromCharCode(e),uA=e=>lA(parseInt(e,16)),cA=(e,t,A)=>{let r="";for(let n=0,s=t-e.length;n<s;n++)r+=A;return r+e},dA=e=>{const t=new Uint8Array(e.length);return fA(e,t,0),t},fA=(e,t,A)=>{const r=e.length;for(let n=0;n<r;n++)t[A++]=e.charCodeAt(n);return r},hA=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4;return`${e}-${Math.floor(Math.random()*10**t)}`},gA=e=>e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),pA=e=>e.replace(/\t|\u0085|\u2028|\u2029/g,"    ").replace(/[\b\v]/g,""),bA=["\\n","\\f","\\r","\\u000B"],mA=["\n","\f","\r","\v"],vA=e=>/^[\n\f\r\u000B]$/.test(e),yA=e=>e.split(/[\n\f\r\u000B]/),wA=e=>e.replace(/[\n\f\r\u000B]/g," "),BA=(e,t)=>{const A=e.charCodeAt(t);let r;const n=t+1;let s=1;return A>=55296&&A<=56319&&e.length>n&&(r=e.charCodeAt(n),r>=56320&&r<=57343&&(s=2)),[e.slice(t,t+s),s]},xA=e=>{const t=[];for(let A=0,r=e.length;A<r;){const[r,n]=BA(e,A);t.push(r),A+=n}return t},CA=(e,t,A,r)=>{const n=(e=>{const t=bA.join("|"),A=["$"];for(let n=0,s=e.length;n<s;n++){const r=e[n];if(vA(r))throw new TypeError(`\`wordBreak\` must not include ${t}`);A.push(""===r?".":gA(r))}const r=A.join("|");return new RegExp(`(${t})|((.*?)(${r}))`,"gm")})(t),s=pA(e).match(n);let i="",o=0;const a=[],l=()=>{""!==i&&a.push(i),i="",o=0};for(let u=0,c=s.length;u<c;u++){const e=s[u];if(vA(e))l();else{const t=r(e);o+t>A&&l(),i+=e,o+=t}}return l(),a},EA=/^D:(\d\d\d\d)(\d\d)?(\d\d)?(\d\d)?(\d\d)?(\d\d)?([+\-Z])?(\d\d)?'?(\d\d)?'?$/,NA=e=>{const t=e.match(EA);if(!t)return;const[,A,r="01",n="01",s="00",i="00",o="00",a="Z",l="00",u="00"]=t;return new Date(`${A}-${r}-${n}T${s}:${i}:${o}${"Z"===a?"Z":`${a}${l}:${u}`}`)},DA=(e,t)=>{var A;let r,n=0;for(;n<e.length;){const s=e.substring(n).match(t);if(!s)return{match:r,pos:n};r=s,n+=(null!==(A=s.index)&&void 0!==A?A:0)+s[0].length}return{match:r,pos:n}},QA=e=>e[e.length-1],PA=e=>{if(e instanceof Uint8Array)return e;const t=e.length,A=new Uint8Array(t);for(let r=0;r<t;r++)A[r]=e.charCodeAt(r);return A},IA=function(){for(var e=arguments.length,t=new Array(e),A=0;A<e;A++)t[A]=arguments[A];const r=t.length,n=[];for(let a=0;a<r;a++){const e=t[a];n[a]=e instanceof Uint8Array?e:PA(e)}let s=0;for(let a=0;a<r;a++)s+=t[a].length;const i=new Uint8Array(s);let o=0;for(let a=0;a<r;a++){const e=n[a];for(let t=0,A=e.length;t<A;t++)i[o++]=e[t]}return i},LA=e=>{let t=0;for(let n=0,s=e.length;n<s;n++)t+=e[n].length;const A=new Uint8Array(t);let r=0;for(let n=0,s=e.length;n<s;n++){const t=e[n];A.set(t,r),r+=t.length}return A},kA=e=>{let t="";for(let A=0,r=e.length;A<r;A++)t+=lA(e[A]);return t},GA=(e,t)=>e.id-t.id,FA=(e,t)=>{const A=[];for(let r=0,n=e.length;r<n;r++){const n=e[r],s=e[r-1];0!==r&&t(n)===t(s)||A.push(n)}return A},SA=(e,t)=>{if(e.length!==t.length)return!1;for(let A=0,r=e.length;A<r;A++)if(e[A]!==t[A])return!1;return!0},WA=e=>{const t=e.length;for(let A=0,r=Math.floor(t/2);A<r;A++){const r=A,n=t-A-1,s=e[A];e[r]=e[n],e[n]=s}return e},ZA=e=>{let t=0;for(let A=0,r=e.length;A<r;A++)t+=e[A];return t},XA=(e,t)=>{const A=new Array(t-e);for(let r=0,n=A.length;r<n;r++)A[r]=e+r;return A},MA=(e,t)=>{const A=new Array(t.length);for(let r=0,n=t.length;r<n;r++)A[r]=e[t[r]];return A},zA=e=>e instanceof Uint8Array||e instanceof ArrayBuffer||"string"===typeof e,RA=e=>{if("string"===typeof e)return nA(e);if(e instanceof ArrayBuffer)return new Uint8Array(e);if(e instanceof Uint8Array)return e;throw new TypeError("`input` must be one of `string | ArrayBuffer | Uint8Array`")},jA=()=>new Promise((e=>{setTimeout((()=>e()),0)})),TA=function(e){const t=[];(!(arguments.length>1&&void 0!==arguments[1])||arguments[1])&&t.push(239,187,191);for(let A=0,r=e.length;A<r;){const r=e.codePointAt(A);if(r<128){const e=127&r;t.push(e),A+=1}else if(r<2048){const e=r>>6&31|192,n=63&r|128;t.push(e,n),A+=1}else if(r<65536){const e=r>>12&15|224,n=r>>6&63|128,s=63&r|128;t.push(e,n,s),A+=1}else{if(!(r<1114112))throw new Error(`Invalid code point: 0x${aA(r)}`);{const e=r>>18&7|240,n=r>>12&63|128,s=r>>6&63|128,i=63&r|128;t.push(e,n,s,i),A+=2}}}return new Uint8Array(t)},UA=function(e){const t=[];(!(arguments.length>1&&void 0!==arguments[1])||arguments[1])&&t.push(65279);for(let A=0,r=e.length;A<r;){const r=e.codePointAt(A);if(r<65536)t.push(r),A+=1;else{if(!(r<1114112))throw new Error(`Invalid code point: 0x${aA(r)}`);t.push(YA(r),HA(r)),A+=2}}return new Uint16Array(t)},VA=e=>e>=0&&e<=65535,OA=e=>e>=65536&&e<=1114111,YA=e=>Math.floor((e-65536)/1024)+55296,HA=e=>(e-65536)%1024+56320;var KA;!function(e){e.BigEndian="BigEndian",e.LittleEndian="LittleEndian"}(KA||(KA={}));const qA="\ufffd".codePointAt(0),JA=function(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(e.length<=1)return String.fromCodePoint(qA);const A=t?tr(e):KA.BigEndian;let r=t?2:0;const n=[];for(;e.length-r>=2;){const t=er(e[r++],e[r++],A);if(_A(t))if(e.length-r<2)n.push(qA);else{const s=er(e[r++],e[r++],A);$A(s)?n.push(t,s):n.push(qA)}else $A(t)?(r+=2,n.push(qA)):n.push(t)}return r<e.length&&n.push(qA),String.fromCodePoint(...n)},_A=e=>e>=55296&&e<=56319,$A=e=>e>=56320&&e<=57343,er=(e,t,A)=>{if(A===KA.LittleEndian)return t<<8|e;if(A===KA.BigEndian)return e<<8|t;throw new Error(`Invalid byteOrder: ${A}`)},tr=e=>Ar(e)?KA.BigEndian:rr(e)?KA.LittleEndian:KA.BigEndian,Ar=e=>254===e[0]&&255===e[1],rr=e=>255===e[0]&&254===e[1],nr=e=>Ar(e)||rr(e),sr=e=>{let t=String(e);if(Math.abs(e)<1){const A=parseInt(e.toString().split("e-")[1]);if(A){const r=e<0;r&&(e*=-1),e*=Math.pow(10,A-1),t="0."+new Array(A).join("0")+e.toString().substring(2),r&&(t="-"+t)}}else{let A=parseInt(e.toString().split("+")[1]);A>20&&(A-=20,t=(e/=Math.pow(10,A)).toString()+new Array(A+1).join("0"))}return t},ir=e=>Math.ceil(e.toString(2).length/8),or=e=>{const t=new Uint8Array(ir(e));for(let A=1;A<=t.length;A++)t[A-1]=e>>8*(t.length-A);return t},ar=e=>{throw new Error(e)};for(var lr=A(7717),ur=A.n(lr),cr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",dr=new Uint8Array(256),fr=0;fr<64;fr++)dr[cr.charCodeAt(fr)]=fr;var hr=function(e){return function(e){for(var t="",A=0;A<e.length;A++)t+=String.fromCharCode(e[A]);return t}(ur().inflate(function(e){var t,A,r,n,s,i=.75*e.length,o=e.length,a=0;"="===e[e.length-1]&&(i--,"="===e[e.length-2]&&i--);var l=new Uint8Array(i);for(t=0;t<o;t+=4)A=dr[e.charCodeAt(t)],r=dr[e.charCodeAt(t+1)],n=dr[e.charCodeAt(t+2)],s=dr[e.charCodeAt(t+3)],l[a++]=A<<2|r>>4,l[a++]=(15&r)<<4|n>>2,l[a++]=(3&n)<<6|63&s;return l}(e)))};var gr,pr={Courier:"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","Courier-Bold":"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","Courier-Oblique":"eJyFWVtT2zgU/isZP+3OhE5Iy/UtDaHNFhI2IdDS4UGxFUeLbKW6AKHT/77Hhnbb1fnUFw98x9K5fzpyvmZDU1Wy9tlxdnUenChlZ3e//+awc7B32D/Kutmpqf1EVJJeGJpglbQ706VWX4JshEHrX4Wdn4SiUnr7q5jga6nKdaPvXBYqVISMvdAqH9Slpjd3dvuEuFP1KIsL5fN1duxtkN1suBZW5F7auWxWjx69rAtZzEwl6hc73741j9nx553+QXenv9frHr456h729m672YJetVrV8sI45ZWpG0W93k+Cy7XK72rpXHZMK7MraV37WtbrvX7V6/VIxcR4lT87s9naxovOH/mfnd2jw6MuPY967XO3ffbb5+v2edAZFGYpO/Ot87JynXGdG7sxVnhZvOp0Blp3Zs1urjOTTtp7QknbiN4qVF3O87VsQ9huMveiLoQtvkvpxaHYvH+J6d4+Be/j9//e9Pe72cDlTZxsdrzfP+pmJ/LH/zu7ewfdbO6L99e0crf98+rlzybY59JblVM8Pn/Nrj/S+iZeEzLEbQSF4Vv3f7B8zLWoYvxLMOToUseSOlTLJs5lHcsKo7WwMb6RNm/qNRKIikSOogMsaBPG7CesrLVcIRFYJlyzo7tjVungYjSnNhMxvN5u1pLxnlxRhvHEaeHWMfwkrYlRUzNZ8g/Mm35tJfPuipqWQdU9865Tjwwo7znvJB/TWnEG50YbZg8nKwVEuuniWOmXIJgaLK2kPmTcJBJzLVPEuWdsH8TQ2xgaxtBJDI1i6DSG3sXQ+xgax9BfMfQhhs5i6DyGJjE0jaGLGPo7hmYxNI+hyxhaxNBVDF3H0McY+hRDNzG0pJPoTnqeNpYkA336sg5ySq5UrmweGBYNDWk7OjiYFmn5jTeG4Zwl02MM/zIdxHAB01AMy8WQiqF/YoihV6aFmWgxXcvQ3oYJZQwx3MDQCxP7EEP3MfQQQwyTbhnS5+sLFMKSO0zb91PV6JUu4FFfmAcmzvzp3ByXuplX4hJqpjqWZ7fc2bHSxir2PAC75MHSMZ4zAWzbxql27oRTCx/NMiiSVAZQQCNuN/6NGIR+xXTHiil8GuRYmilEWXJH2jPOjmLPA0eTO2kl0/s0C4nSig1HanQJkIwX/4V3KVwiwmkpCNGPBAC51FptnGIalTz1axPQpPh86POlTQHgRh+RB88NLi2Tr7Rk2hn0VSVyy9Xw0kpOcWG8yPl+K+iyJVn/LduFOV3GaOBmuDvUpbCh0iIwakxJQybD0rlg/ZAVX7ADZuQxtljRjMcPhWfggJ0inFdQEckFzWoQfLyb2ZLpTg30GoQzu1Nr0lWWSp5J2hjnU4LyE6BoQjqjEqTuE7agUPeKq+ZPwLJBqjMEWLRILdqCRa69dqEekaktF3yfLHAYBGqGBbAuoAUjrOSECIK7fyQdzb9/r2BUIcrJQR0IPi6TpAEa1Shg1MvkbkO0G2DVUYInHXDTQUJUQLs2T7IuGcEMqHiXdDIkmyQlHKCUWmBIDn29SUTucm0ss9kUaZ+BuM0BXgBrF0hB4Cuz/bbhQjvgMDPRFJTgAOGAVqugvdpoZswMwMFL4CCNWl4JXagVc7vaYmqYAD0qVSyjZJklTh0syoEdNaJBlNAJCNAYbNR8eaOBgfv8trTmTtbsHcjKUjkw9b4DyR6nGCVQV/NXkRGoKQscMigyN2DBDYjYy0cu8Als5JkJZQhJQSd5y6PRD56OSDBA40OiKkGAn1BrIN1TlBF09KBMOaQZOzFNjiXAwxOpPZMrz5O0fzAJRsSmVcwnDQUsMuk5c4RCX4AJp+VxKmBLhcyYNk/UK1+RH5J1fAYS560oZCUsY7lMsMIYRGmMCucMWE1BWwvNnAzNzQQ0uElVVA2mpsVv8gfiI5FDJeBScuglq1xS+SDMk6mbpi0viCW4XzsMSNEQGBEgmxcq59JwAjaySW8mID8G4LN0WSelA7DnAHI0P3NNwT5PiQ4ZodMe6b5LugIGgXGyFYAJPn25MWWT79pw30cwlwYsoq3Qr1XpCy13kD8Bp+rkVhRyfEIo1OOj0PwOedvNPkhbXwhlm1+Pb7/9C/NFF2U=","Courier-BoldOblique":"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",Helvetica:"","Helvetica-Bold":"","Helvetica-Oblique":"","Helvetica-BoldOblique":"","Times-Roman":"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","Times-Bold":"","Times-Italic":"","Times-BoldItalic":"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",Symbol:"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",ZapfDingbats:"eJxtmNtu20YQhl+F4FULyMGeD7pz3AY1ChtG7NpFA18w1NomIlECSRcxgrx7SVk7+wOdG8H5OJydf2Z2d5gf9cV+t0v9VK/r+6vXsXlOlbHe28paq229qj/t++m62aXZ4J/m8PRb1z9/baZxefK63Z6eXN5dVMvTCh83u277xr/6kLrnl2XNq7TpXnczuZyabdee98/b2VzM/x4/dd/T5qab2pd6PQ2vaVVfvDRD005puE3Lu7eH1HbN9hTjx4/77/X6y5lcnUmjVzHIVVDicVX/1W/SsO36dLMfu6nb9/X6TAoBD+5euvZbn8axXtuZ36dhPJrVQqgPQoh5hev91LWLkIv94W1Ygq9+aX+tZAx2tfz64284/sblN/rqfLP/mqrbt3FKu7G67Nv9cNgPzZQ2H6rz7bb6vLgZq89pTMO/M/xfEqturJpqSM/d7GJIm2oamk3aNcO3av80O5xh3yyKmm1193ZIT02bqovTKjP+MAf++7zsZvZ3276kYyWWXB0z99S18/PbafPHQ71W4fjn/fxnFO+ZvkrT0LVzTr78qB/+nk38bHM9exgP8zr1z9U7jt6840YW5uSJKcZOCaBBnKgm5mU8MVNYyMwWFvO7Ukagkmgg6sDWQ5yFFqjzUrLEaQ3BEmiwNsMSaZS0vgWfOkPHWQowNeTUc0kumnxZvsgPxlGai6VTGUqAVCTQ6QkWnc77DKEiLktSUBJKqHIQZ86d8gCpHYoiEzMsb1ubYy8vW50DChB5ZhGqrijD0EqUIeiaEHIfCg5Kpuu0ApiToaGPSY0uaQsyr65L2oKi1yFt1PLaQ3lzfXTgXodGoJYzglndSLDMPg1sTPJpQJHJigw0QrGERqD9YhyTOgONQDUyuF1zaxuokc/BW2ztXCMrGZ9WMW1oQZHIXWNBkSCfRZEL5BMUiZw6CzVSFCfUSGZFNjIldoKDkonTKQiJIGzWmFd3BizJJ9SINoLDriOfUCOZS+zg+KGD1qGiLNMLxtJD1/ns00ON6EzyUCM6vbxhoBKaqbG3DFQCNiL1iHccBPV0DHhQH/JW8EW90dkyFKGywCJU0WkVSvSGeiSUODWFFD0HYdPQVoiRgfPMA+/nnRgiAyNYSjpWNQcNSMrtFCUH4ZIRpSCWocFCSuhCEY6hoUClc0WC52BJlCYYLQdhN+hygRRRlo5BKRRLS6oihSqh+ZzzRGG1Mo4Iz1LoP0qsxDGFzk0JE42ji0jCPejomJKCuwil4m5CiRMEUMVSzVLDUstSx1Juc0oVWMpqY295qVltmtWmWW2a1aZZbZrVplltmtWmWW2G1WZYbYbVZlhthtVmWG2G1WZYbYbVZlhtltVmWW2W1WZZbZbVZlltltVmWW2W1QYjQCh7E2aAQHeGhCFgPoNoy8KNb2wxBhmGKBxoUZXlLGsLI6AsftEDHV0wIURVbANLcTKlGGBIKPOAxCmhePCKUwFzAmpDFRQvjA9R06Hq8TONvshgKDCuRAZTXigUxjxNFfKRo3CLhnIJBMFRvMZpqpNBMlQJzGT5WFQMVQI/AikPMIhEU1aDjqJvQwmjSHB05cC9jbYwc5UtAHNLhDw41ha+lEqF4JaH3gmB61SYcqInxTDmQK8v08vjqv4zDf1N0w3Lf4A8/vwPpfK11w=="};!function(e){e.Courier="Courier",e.CourierBold="Courier-Bold",e.CourierOblique="Courier-Oblique",e.CourierBoldOblique="Courier-BoldOblique",e.Helvetica="Helvetica",e.HelveticaBold="Helvetica-Bold",e.HelveticaOblique="Helvetica-Oblique",e.HelveticaBoldOblique="Helvetica-BoldOblique",e.TimesRoman="Times-Roman",e.TimesRomanBold="Times-Bold",e.TimesRomanItalic="Times-Italic",e.TimesRomanBoldItalic="Times-BoldItalic",e.Symbol="Symbol",e.ZapfDingbats="ZapfDingbats"}(gr||(gr={}));var br={},mr=function(){function e(){var e=this;this.getWidthOfGlyph=function(t){return e.CharWidths[t]},this.getXAxisKerningForPair=function(t,A){return(e.KernPairXAmounts[t]||{})[A]}}return e.load=function(t){var A=br[t];if(A)return A;var r=hr(pr[t]),n=Object.assign(new e,JSON.parse(r));return n.CharWidths=n.CharMetrics.reduce((function(e,t){return e[t.N]=t.WX,e}),{}),n.KernPairXAmounts=n.KernPairs.reduce((function(e,t){var A=t[0],r=t[1],n=t[2];return e[A]||(e[A]={}),e[A][r]=n,e}),{}),br[t]=n,n},e}();var vr=hr("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"),yr=JSON.parse(vr),wr=function(e,t){var A=this;this.canEncodeUnicodeCodePoint=function(e){return e in A.unicodeMappings},this.encodeUnicodeCodePoint=function(e){var t=A.unicodeMappings[e];if(!t){var r=String.fromCharCode(e),n="0x"+function(e,t,A){for(var r="",n=0,s=t-e.length;n<s;n++)r+=A;return r+e}(e.toString(16),4,"0"),s=A.name+' cannot encode "'+r+'" ('+n+")";throw new Error(s)}return{code:t[0],name:t[1]}},this.name=e,this.supportedCodePoints=Object.keys(t).map(Number).sort((function(e,t){return e-t})),this.unicodeMappings=t},Br={Symbol:new wr("Symbol",yr.symbol),ZapfDingbats:new wr("ZapfDingbats",yr.zapfdingbats),WinAnsi:new wr("WinAnsi",yr.win1252)};const xr=e=>Object.keys(e).map((t=>e[t])),Cr=xr(gr),Er=e=>Cr.includes(e),Nr=(e,t)=>e.x===t.x&&e.y===t.y&&e.width===t.width&&e.height===t.height,Dr=e=>`\`${e}\``,Qr=e=>`'${e}'`,Pr=e=>{const t=typeof e;return"string"===t?Qr(e):"undefined"===t?Dr(e):e},Ir=(e,t,A)=>{const r=new Array(A.length);for(let s=0,i=A.length;s<i;s++){const e=A[s];r[s]=Pr(e)}const n=r.join(" or ");return`${Dr(t)} must be one of ${n}, but was actually ${Pr(e)}`},Lr=(e,t,A)=>{Array.isArray(A)||(A=xr(A));for(let r=0,n=A.length;r<n;r++)if(e===A[r])return;throw new TypeError(Ir(e,t,A))},kr=(e,t,A)=>{Array.isArray(A)||(A=xr(A)),Lr(e,t,A.concat(void 0))},Gr=(e,t,A)=>{Array.isArray(A)||(A=xr(A));for(let r=0,n=e.length;r<n;r++)Lr(e[r],t,A)},Fr=e=>null===e?"null":void 0===e?"undefined":"string"===typeof e?"string":isNaN(e)?"NaN":"number"===typeof e?"number":"boolean"===typeof e?"boolean":"symbol"===typeof e?"symbol":"bigint"===typeof e?"bigint":e.constructor&&e.constructor.name?e.constructor.name:e.name?e.name:e.constructor?String(e.constructor):String(e),Sr=(e,t)=>"null"===t?null===e:"undefined"===t?void 0===e:"string"===t?"string"===typeof e:"number"===t?"number"===typeof e&&!isNaN(e):"boolean"===t?"boolean"===typeof e:"symbol"===t?"symbol"===typeof e:"bigint"===t?"bigint"===typeof e:t===Date?e instanceof Date:t===Array?e instanceof Array:t===Uint8Array?e instanceof Uint8Array:t===ArrayBuffer?e instanceof ArrayBuffer:t===Function?e instanceof Function:e instanceof t[0],Wr=(e,t,A)=>{const r=new Array(A.length);for(let s=0,i=A.length;s<i;s++){const e=A[s];"null"===e&&(r[s]=Dr("null")),"undefined"===e&&(r[s]=Dr("undefined")),"string"===e?r[s]=Dr("string"):"number"===e?r[s]=Dr("number"):"boolean"===e?r[s]=Dr("boolean"):"symbol"===e?r[s]=Dr("symbol"):"bigint"===e?r[s]=Dr("bigint"):e===Array?r[s]=Dr("Array"):e===Uint8Array?r[s]=Dr("Uint8Array"):e===ArrayBuffer?r[s]=Dr("ArrayBuffer"):r[s]=Dr(e[1])}const n=r.join(" or ");return`${Dr(t)} must be of type ${n}, but was actually of type ${Dr(Fr(e))}`},Zr=(e,t,A)=>{for(let r=0,n=A.length;r<n;r++)if(Sr(e,A[r]))return;throw new TypeError(Wr(e,t,A))},Xr=(e,t,A)=>{Zr(e,t,A.concat("undefined"))},Mr=(e,t,A)=>{for(let r=0,n=e.length;r<n;r++)Zr(e[r],t,A)},zr=(e,t,A,r)=>{if(Zr(e,t,["number"]),Zr(A,"min",["number"]),Zr(r,"max",["number"]),r=Math.max(A,r),e<A||e>r)throw new Error(`${Dr(t)} must be at least ${A} and at most ${r}, but was actually ${e}`)},Rr=(e,t,A,r)=>{Zr(e,t,["number","undefined"]),"number"===typeof e&&zr(e,t,A,r)},jr=(e,t,A)=>{if(Zr(e,t,["number"]),e%A!==0)throw new Error(`${Dr(t)} must be a multiple of ${A}, but was actually ${e}`)},Tr=(e,t)=>{if(!Number.isInteger(e))throw new Error(`${Dr(t)} must be an integer, but was actually ${e}`)},Ur=(e,t)=>{if(![1,0].includes(Math.sign(e)))throw new Error(`${Dr(t)} must be a positive number or 0, but was actually ${e}`)},Vr=new Uint16Array(256);for(let A=0;A<256;A++)Vr[A]=A;Vr[22]=sA("\x17"),Vr[24]=sA("\u02d8"),Vr[25]=sA("\u02c7"),Vr[26]=sA("\u02c6"),Vr[27]=sA("\u02d9"),Vr[28]=sA("\u02dd"),Vr[29]=sA("\u02db"),Vr[30]=sA("\u02da"),Vr[31]=sA("\u02dc"),Vr[127]=sA("\ufffd"),Vr[128]=sA("\u2022"),Vr[129]=sA("\u2020"),Vr[130]=sA("\u2021"),Vr[131]=sA("\u2026"),Vr[132]=sA("\u2014"),Vr[133]=sA("\u2013"),Vr[134]=sA("\u0192"),Vr[135]=sA("\u2044"),Vr[136]=sA("\u2039"),Vr[137]=sA("\u203a"),Vr[138]=sA("\u2212"),Vr[139]=sA("\u2030"),Vr[140]=sA("\u201e"),Vr[141]=sA("\u201c"),Vr[142]=sA("\u201d"),Vr[143]=sA("\u2018"),Vr[144]=sA("\u2019"),Vr[145]=sA("\u201a"),Vr[146]=sA("\u2122"),Vr[147]=sA("\ufb01"),Vr[148]=sA("\ufb02"),Vr[149]=sA("\u0141"),Vr[150]=sA("\u0152"),Vr[151]=sA("\u0160"),Vr[152]=sA("\u0178"),Vr[153]=sA("\u017d"),Vr[154]=sA("\u0131"),Vr[155]=sA("\u0142"),Vr[156]=sA("\u0153"),Vr[157]=sA("\u0161"),Vr[158]=sA("\u017e"),Vr[159]=sA("\ufffd"),Vr[160]=sA("\u20ac"),Vr[173]=sA("\ufffd");const Or=e=>{const t=new Array(e.length);for(let A=0,r=e.length;A<r;A++)t[A]=Vr[e[A]];return String.fromCodePoint(...t)};class Yr{constructor(e){this.populate=e,this.value=void 0}getValue(){return this.value}access(){return this.value||(this.value=this.populate()),this.value}invalidate(){this.value=void 0}}Yr.populatedBy=e=>new Yr(e);const Hr=Yr;class Kr extends Error{constructor(e,t){super(`Method ${e}.${t}() not implemented`)}}class qr extends Error{constructor(e){super(`Cannot construct ${e} - it has a private constructor`)}}class Jr extends Error{constructor(e,t){const A=e=>{var t,A;return null!==(t=null===e||void 0===e?void 0:e.name)&&void 0!==t?t:null===(A=null===e||void 0===e?void 0:e.constructor)||void 0===A?void 0:A.name};super(`Expected instance of ${(Array.isArray(e)?e.map(A):[A(e)]).join(" or ")}, but got instance of ${t?A(t):t}`)}}class _r extends Error{constructor(e){super(`${e} stream encoding not supported`)}}class $r extends Error{constructor(e,t){super(`Cannot call ${e}.${t}() more than once`)}}class en extends Error{constructor(e){super(`Missing catalog (ref=${e})`)}}class tn extends Error{constructor(){super("Can't embed page with missing Contents")}}class An extends Error{constructor(e){var t,A,r;super(`Unrecognized stream type: ${null!==(r=null!==(A=null===(t=null===e||void 0===e?void 0:e.contructor)||void 0===t?void 0:t.name)&&void 0!==A?A:null===e||void 0===e?void 0:e.name)&&void 0!==r?r:e}`)}}class rn extends Error{constructor(){super("Found mismatched contexts while embedding pages. All pages in the array passed to `PDFDocument.embedPages()` must be from the same document.")}}class nn extends Error{constructor(e){super(`Attempted to convert PDFArray with ${e} elements to rectangle, but must have exactly 4 elements.`)}}class sn extends Error{constructor(e){super(`Attempted to convert "${e}" to a date, but it does not match the PDF date string format.`)}}class on extends Error{constructor(e,t){super(`Invalid targetIndex specified: targetIndex=${e} must be less than Count=${t}`)}}class an extends Error{constructor(e,t){super(`Failed to ${t} at targetIndex=${e} due to corrupt page tree: It is likely that one or more 'Count' entries are invalid`)}}class ln extends Error{constructor(e,t,A){super(`index should be at least ${t} and at most ${A}, but was actually ${e}`)}}class un extends Error{constructor(){super("Attempted to set invalid field value")}}class cn extends Error{constructor(){super("Attempted to select multiple values for single-select field")}}class dn extends Error{constructor(e){super(`No /DA (default appearance) entry found for field: ${e}`)}}class fn extends Error{constructor(e){super(`No Tf operator found for DA of field: ${e}`)}}class hn extends Error{constructor(e,t){super(`Failed to parse number (line:${e.line} col:${e.column} offset=${e.offset}): "${t}"`)}}class gn extends Error{constructor(e,t){super(`Failed to parse PDF document (line:${e.line} col:${e.column} offset=${e.offset}): ${t}`)}}class pn extends gn{constructor(e,t,A){super(e,`Expected next byte to be ${t} but it was actually ${A}`)}}class bn extends gn{constructor(e,t){super(e,`Failed to parse PDF object starting with the following byte: ${t}`)}}class mn extends gn{constructor(e){super(e,"Failed to parse invalid PDF object")}}class vn extends gn{constructor(e){super(e,"Failed to parse PDF stream")}}class yn extends gn{constructor(e){super(e,"Failed to parse PDF literal string due to unbalanced parenthesis")}}class wn extends gn{constructor(e){super(e,"Parser stalled")}}class Bn extends gn{constructor(e){super(e,"No PDF header found")}}class xn extends gn{constructor(e,t){super(e,`Did not find expected keyword '${kA(t)}'`)}}var Cn;!function(e){e[e.Null=0]="Null",e[e.Backspace=8]="Backspace",e[e.Tab=9]="Tab",e[e.Newline=10]="Newline",e[e.FormFeed=12]="FormFeed",e[e.CarriageReturn=13]="CarriageReturn",e[e.Space=32]="Space",e[e.ExclamationPoint=33]="ExclamationPoint",e[e.Hash=35]="Hash",e[e.Percent=37]="Percent",e[e.LeftParen=40]="LeftParen",e[e.RightParen=41]="RightParen",e[e.Plus=43]="Plus",e[e.Minus=45]="Minus",e[e.Dash=45]="Dash",e[e.Period=46]="Period",e[e.ForwardSlash=47]="ForwardSlash",e[e.Zero=48]="Zero",e[e.One=49]="One",e[e.Two=50]="Two",e[e.Three=51]="Three",e[e.Four=52]="Four",e[e.Five=53]="Five",e[e.Six=54]="Six",e[e.Seven=55]="Seven",e[e.Eight=56]="Eight",e[e.Nine=57]="Nine",e[e.LessThan=60]="LessThan",e[e.GreaterThan=62]="GreaterThan",e[e.A=65]="A",e[e.D=68]="D",e[e.E=69]="E",e[e.F=70]="F",e[e.O=79]="O",e[e.P=80]="P",e[e.R=82]="R",e[e.LeftSquareBracket=91]="LeftSquareBracket",e[e.BackSlash=92]="BackSlash",e[e.RightSquareBracket=93]="RightSquareBracket",e[e.a=97]="a",e[e.b=98]="b",e[e.d=100]="d",e[e.e=101]="e",e[e.f=102]="f",e[e.i=105]="i",e[e.j=106]="j",e[e.l=108]="l",e[e.m=109]="m",e[e.n=110]="n",e[e.o=111]="o",e[e.r=114]="r",e[e.s=115]="s",e[e.t=116]="t",e[e.u=117]="u",e[e.x=120]="x",e[e.LeftCurly=123]="LeftCurly",e[e.RightCurly=125]="RightCurly",e[e.Tilde=126]="Tilde"}(Cn||(Cn={}));const En=Cn;class Nn{constructor(e,t){this.major=String(e),this.minor=String(t)}toString(){const e=lA(129);return`%PDF-${this.major}.${this.minor}\n%${e}${e}${e}${e}`}sizeInBytes(){return 12+this.major.length+this.minor.length}copyBytesInto(e,t){const A=t;return e[t++]=En.Percent,e[t++]=En.P,e[t++]=En.D,e[t++]=En.F,e[t++]=En.Dash,t+=fA(this.major,e,t),e[t++]=En.Period,t+=fA(this.minor,e,t),e[t++]=En.Newline,e[t++]=En.Percent,e[t++]=129,e[t++]=129,e[t++]=129,e[t++]=129,t-A}}Nn.forVersion=(e,t)=>new Nn(e,t);const Dn=Nn;const Qn=class{clone(e){throw new Kr(this.constructor.name,"clone")}toString(){throw new Kr(this.constructor.name,"toString")}sizeInBytes(){throw new Kr(this.constructor.name,"sizeInBytes")}copyBytesInto(e,t){throw new Kr(this.constructor.name,"copyBytesInto")}};class Pn extends Qn{constructor(e){super(),this.numberValue=e,this.stringValue=sr(e)}asNumber(){return this.numberValue}value(){return this.numberValue}clone(){return Pn.of(this.numberValue)}toString(){return this.stringValue}sizeInBytes(){return this.stringValue.length}copyBytesInto(e,t){return t+=fA(this.stringValue,e,t),this.stringValue.length}}Pn.of=e=>new Pn(e);const In=Pn;class Ln extends Qn{constructor(e){super(),this.array=[],this.context=e}size(){return this.array.length}push(e){this.array.push(e)}insert(e,t){this.array.splice(e,0,t)}indexOf(e){const t=this.array.indexOf(e);return-1===t?void 0:t}remove(e){this.array.splice(e,1)}set(e,t){this.array[e]=t}get(e){return this.array[e]}lookupMaybe(e){for(var t=arguments.length,A=new Array(t>1?t-1:0),r=1;r<t;r++)A[r-1]=arguments[r];return this.context.lookupMaybe(this.get(e),...A)}lookup(e){for(var t=arguments.length,A=new Array(t>1?t-1:0),r=1;r<t;r++)A[r-1]=arguments[r];return this.context.lookup(this.get(e),...A)}asRectangle(){if(4!==this.size())throw new nn(this.size());const e=this.lookup(0,In).asNumber(),t=this.lookup(1,In).asNumber();return{x:e,y:t,width:this.lookup(2,In).asNumber()-e,height:this.lookup(3,In).asNumber()-t}}asArray(){return this.array.slice()}clone(e){const t=Ln.withContext(e||this.context);for(let A=0,r=this.size();A<r;A++)t.push(this.array[A]);return t}toString(){let e="[ ";for(let t=0,A=this.size();t<A;t++)e+=this.get(t).toString(),e+=" ";return e+="]",e}sizeInBytes(){let e=3;for(let t=0,A=this.size();t<A;t++)e+=this.get(t).sizeInBytes()+1;return e}copyBytesInto(e,t){const A=t;e[t++]=En.LeftSquareBracket,e[t++]=En.Space;for(let r=0,n=this.size();r<n;r++)t+=this.get(r).copyBytesInto(e,t),e[t++]=En.Space;return e[t++]=En.RightSquareBracket,t-A}scalePDFNumbers(e,t){for(let A=0,r=this.size();A<r;A++){const r=this.lookup(A);if(r instanceof In){const n=A%2===0?e:t;this.set(A,In.of(r.asNumber()*n))}}}}Ln.withContext=e=>new Ln(e);const kn=Ln,Gn={};class Fn extends Qn{constructor(e,t){if(e!==Gn)throw new qr("PDFBool");super(),this.value=t}asBoolean(){return this.value}clone(){return this}toString(){return String(this.value)}sizeInBytes(){return this.value?4:5}copyBytesInto(e,t){return this.value?(e[t++]=En.t,e[t++]=En.r,e[t++]=En.u,e[t++]=En.e,4):(e[t++]=En.f,e[t++]=En.a,e[t++]=En.l,e[t++]=En.s,e[t++]=En.e,5)}}Fn.True=new Fn(Gn,!0),Fn.False=new Fn(Gn,!1);const Sn=Fn,Wn=new Uint8Array(256);Wn[En.LeftParen]=1,Wn[En.RightParen]=1,Wn[En.LessThan]=1,Wn[En.GreaterThan]=1,Wn[En.LeftSquareBracket]=1,Wn[En.RightSquareBracket]=1,Wn[En.LeftCurly]=1,Wn[En.RightCurly]=1,Wn[En.ForwardSlash]=1,Wn[En.Percent]=1;const Zn=new Uint8Array(256);Zn[En.Null]=1,Zn[En.Tab]=1,Zn[En.Newline]=1,Zn[En.FormFeed]=1,Zn[En.CarriageReturn]=1,Zn[En.Space]=1;const Xn=new Uint8Array(256);for(let A=0,rF=256;A<rF;A++)Xn[A]=Zn[A]||Wn[A]?1:0;Xn[En.Hash]=1;const Mn={},zn=new Map;class Rn extends Qn{constructor(e,t){if(e!==Mn)throw new qr("PDFName");super();let A="/";for(let n=0,s=t.length;n<s;n++){const e=t[n],s=sA(e);A+=(r=s)>=En.ExclamationPoint&&r<=En.Tilde&&!Xn[r]?e:`#${aA(s)}`}var r;this.encodedName=A}asBytes(){const e=[];let t="",A=!1;const r=t=>{void 0!==t&&e.push(t),A=!1};for(let n=1,s=this.encodedName.length;n<s;n++){const e=this.encodedName[n],s=sA(e),i=this.encodedName[n+1];A?s>=En.Zero&&s<=En.Nine||s>=En.a&&s<=En.f||s>=En.A&&s<=En.F?(t+=e,2!==t.length&&(i>="0"&&i<="9"||i>="a"&&i<="f"||i>="A"&&i<="F")||(r(parseInt(t,16)),t="")):r(s):s===En.Hash?A=!0:r(s)}return new Uint8Array(e)}decodeText(){const e=this.asBytes();return String.fromCharCode(...Array.from(e))}asString(){return this.encodedName}value(){return this.encodedName}clone(){return this}toString(){return this.encodedName}sizeInBytes(){return this.encodedName.length}copyBytesInto(e,t){return t+=fA(this.encodedName,e,t),this.encodedName.length}}Rn.of=e=>{const t=(e=>e.replace(/#([\dABCDEF]{2})/g,((e,t)=>uA(t))))(e);let A=zn.get(t);return A||(A=new Rn(Mn,t),zn.set(t,A)),A},Rn.Length=Rn.of("Length"),Rn.FlateDecode=Rn.of("FlateDecode"),Rn.Resources=Rn.of("Resources"),Rn.Font=Rn.of("Font"),Rn.XObject=Rn.of("XObject"),Rn.ExtGState=Rn.of("ExtGState"),Rn.Contents=Rn.of("Contents"),Rn.Type=Rn.of("Type"),Rn.Parent=Rn.of("Parent"),Rn.MediaBox=Rn.of("MediaBox"),Rn.Page=Rn.of("Page"),Rn.Annots=Rn.of("Annots"),Rn.TrimBox=Rn.of("TrimBox"),Rn.ArtBox=Rn.of("ArtBox"),Rn.BleedBox=Rn.of("BleedBox"),Rn.CropBox=Rn.of("CropBox"),Rn.Rotate=Rn.of("Rotate"),Rn.Title=Rn.of("Title"),Rn.Author=Rn.of("Author"),Rn.Subject=Rn.of("Subject"),Rn.Creator=Rn.of("Creator"),Rn.Keywords=Rn.of("Keywords"),Rn.Producer=Rn.of("Producer"),Rn.CreationDate=Rn.of("CreationDate"),Rn.ModDate=Rn.of("ModDate");const jn=Rn;const Tn=new class extends Qn{asNull(){return null}clone(){return this}toString(){return"null"}sizeInBytes(){return 4}copyBytesInto(e,t){return e[t++]=En.n,e[t++]=En.u,e[t++]=En.l,e[t++]=En.l,4}};class Un extends Qn{constructor(e,t){super(),this.suppressEncryption=!1,this.dict=e,this.context=t}keys(){return Array.from(this.dict.keys())}values(){return Array.from(this.dict.values())}entries(){return Array.from(this.dict.entries())}set(e,t){this.dict.set(e,t)}get(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const A=this.dict.get(e);if(A!==Tn||t)return A}has(e){const t=this.dict.get(e);return void 0!==t&&t!==Tn}lookupMaybe(e){for(var t=arguments.length,A=new Array(t>1?t-1:0),r=1;r<t;r++)A[r-1]=arguments[r];const n=A.includes(Tn),s=this.context.lookupMaybe(this.get(e,n),...A);if(s!==Tn||n)return s}lookup(e){for(var t=arguments.length,A=new Array(t>1?t-1:0),r=1;r<t;r++)A[r-1]=arguments[r];const n=A.includes(Tn),s=this.context.lookup(this.get(e,n),...A);if(s!==Tn||n)return s}delete(e){return this.dict.delete(e)}asMap(){return new Map(this.dict)}uniqueKey(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";const t=this.keys();let A=jn.of(this.context.addRandomSuffix(e,10));for(;t.includes(A);)A=jn.of(this.context.addRandomSuffix(e,10));return A}clone(e){const t=Un.withContext(e||this.context),A=this.entries();for(let r=0,n=A.length;r<n;r++){const[e,n]=A[r];t.set(e,n)}return t}toString(){let e="<<\n";const t=this.entries();for(let A=0,r=t.length;A<r;A++){const[r,n]=t[A];e+=r.toString()+" "+n.toString()+"\n"}return e+=">>",e}sizeInBytes(){let e=5;const t=this.entries();for(let A=0,r=t.length;A<r;A++){const[r,n]=t[A];e+=r.sizeInBytes()+n.sizeInBytes()+2}return e}copyBytesInto(e,t){const A=t;e[t++]=En.LessThan,e[t++]=En.LessThan,e[t++]=En.Newline;const r=this.entries();for(let n=0,s=r.length;n<s;n++){const[A,s]=r[n];t+=A.copyBytesInto(e,t),e[t++]=En.Space,t+=s.copyBytesInto(e,t),e[t++]=En.Newline}return e[t++]=En.GreaterThan,e[t++]=En.GreaterThan,t-A}}Un.withContext=e=>new Un(new Map,e),Un.fromMapWithContext=(e,t)=>new Un(e,t);const Vn=Un;const On=class extends Qn{constructor(e){super(),this.dict=e}clone(e){throw new Kr(this.constructor.name,"clone")}getContentsString(){throw new Kr(this.constructor.name,"getContentsString")}getContents(){throw new Kr(this.constructor.name,"getContents")}getContentsSize(){throw new Kr(this.constructor.name,"getContentsSize")}updateDict(){const e=this.getContentsSize();this.dict.set(jn.Length,In.of(e))}sizeInBytes(){return this.updateDict(),this.dict.sizeInBytes()+this.getContentsSize()+18}toString(){this.updateDict();let e=this.dict.toString();return e+="\nstream\n",e+=this.getContentsString(),e+="\nendstream",e}copyBytesInto(e,t){this.updateDict();const A=t;t+=this.dict.copyBytesInto(e,t),e[t++]=En.Newline,e[t++]=En.s,e[t++]=En.t,e[t++]=En.r,e[t++]=En.e,e[t++]=En.a,e[t++]=En.m,e[t++]=En.Newline;const r=this.getContents();for(let n=0,s=r.length;n<s;n++)e[t++]=r[n];return e[t++]=En.Newline,e[t++]=En.e,e[t++]=En.n,e[t++]=En.d,e[t++]=En.s,e[t++]=En.t,e[t++]=En.r,e[t++]=En.e,e[t++]=En.a,e[t++]=En.m,t-A}};class Yn extends On{constructor(e,t,A){super(e),this.contents=t,this.transform=A}asUint8Array(){return this.contents.slice()}clone(e){return Yn.of(this.dict.clone(e),this.contents.slice())}getContentsString(){return kA(this.contents)}getContents(){return this.contents}getContentsSize(){return this.contents.length}}Yn.of=(e,t,A)=>new Yn(e,t,A);const Hn=Yn,Kn={},qn=new Map;class Jn extends Qn{constructor(e,t,A){if(e!==Kn)throw new qr("PDFRef");super(),this.objectNumber=t,this.generationNumber=A,this.tag=`${t} ${A} R`}clone(){return this}toString(){return this.tag}sizeInBytes(){return this.tag.length}copyBytesInto(e,t){return t+=fA(this.tag,e,t),this.tag.length}}Jn.of=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const A=`${e} ${t} R`;let r=qn.get(A);return r||(r=new Jn(Kn,e,t),qn.set(A,r)),r};const _n=Jn;class $n{constructor(e,t){this.name=e,this.args=t||[]}clone(e){const t=new Array(this.args.length);for(let A=0,r=t.length;A<r;A++){const r=this.args[A];t[A]=r instanceof Qn?r.clone(e):r}return $n.of(this.name,t)}toString(){let e="";for(let t=0,A=this.args.length;t<A;t++)e+=String(this.args[t])+" ";return e+=this.name,e}sizeInBytes(){let e=0;for(let t=0,A=this.args.length;t<A;t++){const A=this.args[t];e+=(A instanceof Qn?A.sizeInBytes():A.length)+1}return e+=this.name.length,e}copyBytesInto(e,t){const A=t;for(let r=0,n=this.args.length;r<n;r++){const A=this.args[r];t+=A instanceof Qn?A.copyBytesInto(e,t):fA(A,e,t),e[t++]=En.Space}return(t+=fA(this.name,e,t))-A}}$n.of=(e,t)=>new $n(e,t);const es=$n;var ts;!function(e){e.NonStrokingColor="sc",e.NonStrokingColorN="scn",e.NonStrokingColorRgb="rg",e.NonStrokingColorGray="g",e.NonStrokingColorCmyk="k",e.NonStrokingColorspace="cs",e.StrokingColor="SC",e.StrokingColorN="SCN",e.StrokingColorRgb="RG",e.StrokingColorGray="G",e.StrokingColorCmyk="K",e.StrokingColorspace="CS",e.BeginMarkedContentSequence="BDC",e.BeginMarkedContent="BMC",e.EndMarkedContent="EMC",e.MarkedContentPointWithProps="DP",e.MarkedContentPoint="MP",e.DrawObject="Do",e.ConcatTransformationMatrix="cm",e.PopGraphicsState="Q",e.PushGraphicsState="q",e.SetFlatness="i",e.SetGraphicsStateParams="gs",e.SetLineCapStyle="J",e.SetLineDashPattern="d",e.SetLineJoinStyle="j",e.SetLineMiterLimit="M",e.SetLineWidth="w",e.SetTextMatrix="Tm",e.SetRenderingIntent="ri",e.AppendRectangle="re",e.BeginInlineImage="BI",e.BeginInlineImageData="ID",e.EndInlineImage="EI",e.ClipEvenOdd="W*",e.ClipNonZero="W",e.CloseAndStroke="s",e.CloseFillEvenOddAndStroke="b*",e.CloseFillNonZeroAndStroke="b",e.ClosePath="h",e.AppendBezierCurve="c",e.CurveToReplicateFinalPoint="y",e.CurveToReplicateInitialPoint="v",e.EndPath="n",e.FillEvenOddAndStroke="B*",e.FillEvenOdd="f*",e.FillNonZeroAndStroke="B",e.FillNonZero="f",e.LegacyFillNonZero="F",e.LineTo="l",e.MoveTo="m",e.ShadingFill="sh",e.StrokePath="S",e.BeginText="BT",e.EndText="ET",e.MoveText="Td",e.MoveTextSetLeading="TD",e.NextLine="T*",e.SetCharacterSpacing="Tc",e.SetFontAndSize="Tf",e.SetTextHorizontalScaling="Tz",e.SetTextLineHeight="TL",e.SetTextRenderingMode="Tr",e.SetTextRise="Ts",e.SetWordSpacing="Tw",e.ShowText="Tj",e.ShowTextAdjusted="TJ",e.ShowTextLine="'",e.ShowTextLineAndSpace='"',e.Type3D0="d0",e.Type3D1="d1",e.BeginCompatibilitySection="BX",e.EndCompatibilitySection="EX"}(ts||(ts={}));const As=ts;const rs=class extends On{constructor(e,t){super(e),this.computeContents=()=>{const e=this.getUnencodedContents();return this.encode?lr.deflate(e):e},this.encode=t,t&&e.set(jn.of("Filter"),jn.of("FlateDecode")),this.contentsCache=Hr.populatedBy(this.computeContents)}getContents(){return this.contentsCache.access()}getContentsSize(){return this.contentsCache.access().length}getUnencodedContents(){throw new Kr(this.constructor.name,"getUnencodedContents")}};class ns extends rs{constructor(e,t){super(e,!(arguments.length>2&&void 0!==arguments[2])||arguments[2]),this.operators=t}push(){this.operators.push(...arguments)}clone(e){const t=new Array(this.operators.length);for(let n=0,s=this.operators.length;n<s;n++)t[n]=this.operators[n].clone(e);const{dict:A,encode:r}=this;return ns.of(A.clone(e),t,r)}getContentsString(){let e="";for(let t=0,A=this.operators.length;t<A;t++)e+=`${this.operators[t]}\n`;return e}getUnencodedContents(){const e=new Uint8Array(this.getUnencodedContentsSize());let t=0;for(let A=0,r=this.operators.length;A<r;A++)t+=this.operators[A].copyBytesInto(e,t),e[t++]=En.Newline;return e}getUnencodedContentsSize(){let e=0;for(let t=0,A=this.operators.length;t<A;t++)e+=this.operators[t].sizeInBytes()+1;return e}}ns.of=function(e,t){return new ns(e,t,!(arguments.length>2&&void 0!==arguments[2])||arguments[2])};const ss=ns;class is{constructor(e){this.seed=e}nextInt(){const e=1e4*Math.sin(this.seed++);return e-Math.floor(e)}}is.withSeed=e=>new is(e);const os=(e,t)=>{let[A]=e,[r]=t;return A.objectNumber-r.objectNumber};class as{constructor(){this.isDecrypted=!0,this.largestObjectNumber=0,this.header=Dn.forVersion(1,7),this.trailerInfo={},this.indirectObjects=new Map,this.rng=is.withSeed(1)}assign(e,t){this.indirectObjects.set(e,t),e.objectNumber>this.largestObjectNumber&&(this.largestObjectNumber=e.objectNumber)}nextRef(){return this.largestObjectNumber+=1,_n.of(this.largestObjectNumber)}register(e){const t=this.nextRef();return this.assign(t,e),t}delete(e){return this.indirectObjects.delete(e)}lookupMaybe(e){for(var t=arguments.length,A=new Array(t>1?t-1:0),r=1;r<t;r++)A[r-1]=arguments[r];const n=A.includes(Tn),s=e instanceof _n?this.indirectObjects.get(e):e;if(s&&(s!==Tn||n)){for(let e=0,t=A.length;e<t;e++){const t=A[e];if(t===Tn){if(s===Tn)return s}else if(s instanceof t)return s}throw new Jr(A,s)}}lookup(e){const t=e instanceof _n?this.indirectObjects.get(e):e;for(var A=arguments.length,r=new Array(A>1?A-1:0),n=1;n<A;n++)r[n-1]=arguments[n];if(0===r.length)return t;for(let s=0,i=r.length;s<i;s++){const e=r[s];if(e===Tn){if(t===Tn)return t}else if(t instanceof e)return t}throw new Jr(r,t)}getObjectRef(e){const t=Array.from(this.indirectObjects.entries());for(let A=0,r=t.length;A<r;A++){const[r,n]=t[A];if(n===e)return r}}enumerateIndirectObjects(){return Array.from(this.indirectObjects.entries()).sort(os)}obj(e){if(e instanceof Qn)return e;if(null===e||void 0===e)return Tn;if("string"===typeof e)return jn.of(e);if("number"===typeof e)return In.of(e);if("boolean"===typeof e)return e?Sn.True:Sn.False;if(Array.isArray(e)){const t=kn.withContext(this);for(let A=0,r=e.length;A<r;A++)t.push(this.obj(e[A]));return t}{const t=Vn.withContext(this),A=Object.keys(e);for(let r=0,n=A.length;r<n;r++){const n=A[r],s=e[n];void 0!==s&&t.set(jn.of(n),this.obj(s))}return t}}stream(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Hn.of(this.obj(t),PA(e))}flateStream(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.stream(lr.deflate(PA(e)),{...t,Filter:"FlateDecode"})}contentStream(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ss.of(this.obj(t),e)}formXObject(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.contentStream(e,{BBox:this.obj([0,0,0,0]),Matrix:this.obj([1,0,0,1,0,0]),...t,Type:"XObject",Subtype:"Form"})}getPushGraphicsStateContentStream(){if(this.pushGraphicsStateContentStreamRef)return this.pushGraphicsStateContentStreamRef;const e=this.obj({}),t=es.of(As.PushGraphicsState),A=ss.of(e,[t]);return this.pushGraphicsStateContentStreamRef=this.register(A),this.pushGraphicsStateContentStreamRef}getPopGraphicsStateContentStream(){if(this.popGraphicsStateContentStreamRef)return this.popGraphicsStateContentStreamRef;const e=this.obj({}),t=es.of(As.PopGraphicsState),A=ss.of(e,[t]);return this.popGraphicsStateContentStreamRef=this.register(A),this.popGraphicsStateContentStreamRef}addRandomSuffix(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4;return`${e}-${Math.floor(this.rng.nextInt()*10**t)}`}}as.create=()=>new as;const ls=as;class us extends Vn{constructor(e,t){let A=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(e,t),this.normalized=!1,this.autoNormalizeCTM=A}clone(e){const t=us.fromMapWithContext(new Map,e||this.context,this.autoNormalizeCTM),A=this.entries();for(let r=0,n=A.length;r<n;r++){const[e,n]=A[r];t.set(e,n)}return t}Parent(){return this.lookupMaybe(jn.Parent,Vn)}Contents(){return this.lookup(jn.of("Contents"))}Annots(){return this.lookupMaybe(jn.Annots,kn)}BleedBox(){return this.lookupMaybe(jn.BleedBox,kn)}TrimBox(){return this.lookupMaybe(jn.TrimBox,kn)}ArtBox(){return this.lookupMaybe(jn.ArtBox,kn)}Resources(){const e=this.getInheritableAttribute(jn.Resources);return this.context.lookupMaybe(e,Vn)}MediaBox(){const e=this.getInheritableAttribute(jn.MediaBox);return this.context.lookup(e,kn)}CropBox(){const e=this.getInheritableAttribute(jn.CropBox);return this.context.lookupMaybe(e,kn)}Rotate(){const e=this.getInheritableAttribute(jn.Rotate);return this.context.lookupMaybe(e,In)}getInheritableAttribute(e){let t;return this.ascend((A=>{t||(t=A.get(e))})),t}setParent(e){this.set(jn.Parent,e)}addContentStream(e){const t=this.normalizedEntries().Contents||this.context.obj([]);this.set(jn.Contents,t),t.push(e)}wrapContentStreams(e,t){const A=this.Contents();return A instanceof kn&&(A.insert(0,e),A.push(t),!0)}addAnnot(e){const{Annots:t}=this.normalizedEntries();t.push(e)}removeAnnot(e){const{Annots:t}=this.normalizedEntries(),A=t.indexOf(e);void 0!==A&&t.remove(A)}setFontDictionary(e,t){const{Font:A}=this.normalizedEntries();A.set(e,t)}newFontDictionaryKey(e){const{Font:t}=this.normalizedEntries();return t.uniqueKey(e)}newFontDictionary(e,t){const A=this.newFontDictionaryKey(e);return this.setFontDictionary(A,t),A}setXObject(e,t){const{XObject:A}=this.normalizedEntries();A.set(e,t)}newXObjectKey(e){const{XObject:t}=this.normalizedEntries();return t.uniqueKey(e)}newXObject(e,t){const A=this.newXObjectKey(e);return this.setXObject(A,t),A}setExtGState(e,t){const{ExtGState:A}=this.normalizedEntries();A.set(e,t)}newExtGStateKey(e){const{ExtGState:t}=this.normalizedEntries();return t.uniqueKey(e)}newExtGState(e,t){const A=this.newExtGStateKey(e);return this.setExtGState(A,t),A}ascend(e){e(this);const t=this.Parent();t&&t.ascend(e)}normalize(){if(this.normalized)return;const{context:e}=this,t=this.get(jn.Contents);this.context.lookup(t)instanceof On&&this.set(jn.Contents,e.obj([t])),this.autoNormalizeCTM&&this.wrapContentStreams(this.context.getPushGraphicsStateContentStream(),this.context.getPopGraphicsStateContentStream());const A=this.getInheritableAttribute(jn.Resources),r=e.lookupMaybe(A,Vn)||e.obj({});this.set(jn.Resources,r);const n=r.lookupMaybe(jn.Font,Vn)||e.obj({});r.set(jn.Font,n);const s=r.lookupMaybe(jn.XObject,Vn)||e.obj({});r.set(jn.XObject,s);const i=r.lookupMaybe(jn.ExtGState,Vn)||e.obj({});r.set(jn.ExtGState,i);const o=this.Annots()||e.obj([]);this.set(jn.Annots,o),this.normalized=!0}normalizedEntries(){this.normalize();const e=this.Annots(),t=this.Resources();return{Annots:e,Resources:t,Contents:this.Contents(),Font:t.lookup(jn.Font,Vn),XObject:t.lookup(jn.XObject,Vn),ExtGState:t.lookup(jn.ExtGState,Vn)}}}us.InheritableEntries=["Resources","MediaBox","CropBox","Rotate"],us.withContextAndParent=(e,t)=>{const A=new Map;return A.set(jn.Type,jn.Page),A.set(jn.Parent,t),A.set(jn.Resources,e.obj({})),A.set(jn.MediaBox,e.obj([0,0,612,792])),new us(A,e,!1)},us.fromMapWithContext=function(e,t){return new us(e,t,!(arguments.length>2&&void 0!==arguments[2])||arguments[2])};const cs=us;class ds{constructor(e,t){this.traversedObjects=new Map,this.copy=e=>e instanceof cs?this.copyPDFPage(e):e instanceof Vn?this.copyPDFDict(e):e instanceof kn?this.copyPDFArray(e):e instanceof On?this.copyPDFStream(e):e instanceof _n?this.copyPDFIndirectObject(e):e.clone(),this.copyPDFPage=e=>{const t=e.clone(),{InheritableEntries:A}=cs;for(let r=0,n=A.length;r<n;r++){const e=jn.of(A[r]),n=t.getInheritableAttribute(e);!t.get(e)&&n&&t.set(e,n)}return t.delete(jn.of("Parent")),this.copyPDFDict(t)},this.copyPDFDict=e=>{if(this.traversedObjects.has(e))return this.traversedObjects.get(e);const t=e.clone(this.dest);this.traversedObjects.set(e,t);const A=e.entries();for(let r=0,n=A.length;r<n;r++){const[e,n]=A[r];t.set(e,this.copy(n))}return t},this.copyPDFArray=e=>{if(this.traversedObjects.has(e))return this.traversedObjects.get(e);const t=e.clone(this.dest);this.traversedObjects.set(e,t);for(let A=0,r=e.size();A<r;A++){const r=e.get(A);t.set(A,this.copy(r))}return t},this.copyPDFStream=e=>{if(this.traversedObjects.has(e))return this.traversedObjects.get(e);const t=e.clone(this.dest);this.traversedObjects.set(e,t);const A=e.dict.entries();for(let r=0,n=A.length;r<n;r++){const[e,n]=A[r];t.dict.set(e,this.copy(n))}return t},this.copyPDFIndirectObject=e=>{if(!this.traversedObjects.has(e)){const t=this.dest.nextRef();this.traversedObjects.set(e,t);const A=this.src.lookup(e);if(A){const e=this.copy(A);this.dest.assign(t,e)}}return this.traversedObjects.get(e)},this.src=e,this.dest=t}}ds.for=(e,t)=>new ds(e,t);const fs=ds;class hs{constructor(e){this.subsections=e?[[e]]:[],this.chunkIdx=0,this.chunkLength=e?1:0}addEntry(e,t){this.append({ref:e,offset:t,deleted:!1})}addDeletedEntry(e,t){this.append({ref:e,offset:t,deleted:!0})}toString(){let e="xref\n";for(let t=0,A=this.subsections.length;t<A;t++){const A=this.subsections[t];e+=`${A[0].ref.objectNumber} ${A.length}\n`;for(let t=0,r=A.length;t<r;t++){const r=A[t];e+=cA(String(r.offset),10,"0"),e+=" ",e+=cA(String(r.ref.generationNumber),5,"0"),e+=" ",e+=r.deleted?"f":"n",e+=" \n"}}return e}sizeInBytes(){let e=5;for(let t=0,A=this.subsections.length;t<A;t++){const A=this.subsections[t],r=A.length,[n]=A;e+=2,e+=String(n.ref.objectNumber).length,e+=String(r).length,e+=20*r}return e}copyBytesInto(e,t){const A=t;return e[t++]=En.x,e[t++]=En.r,e[t++]=En.e,e[t++]=En.f,e[t++]=En.Newline,(t+=this.copySubsectionsIntoBuffer(this.subsections,e,t))-A}copySubsectionsIntoBuffer(e,t,A){const r=A,n=e.length;for(let s=0;s<n;s++){const e=this.subsections[s],r=String(e[0].ref.objectNumber);A+=fA(r,t,A),t[A++]=En.Space;const n=String(e.length);A+=fA(n,t,A),t[A++]=En.Newline,A+=this.copyEntriesIntoBuffer(e,t,A)}return A-r}copyEntriesIntoBuffer(e,t,A){const r=e.length;for(let n=0;n<r;n++){const r=e[n],s=cA(String(r.offset),10,"0");A+=fA(s,t,A),t[A++]=En.Space;const i=cA(String(r.ref.generationNumber),5,"0");A+=fA(i,t,A),t[A++]=En.Space,t[A++]=r.deleted?En.f:En.n,t[A++]=En.Space,t[A++]=En.Newline}return 20*r}append(e){if(0===this.chunkLength)return this.subsections.push([e]),this.chunkIdx=0,void(this.chunkLength=1);const t=this.subsections[this.chunkIdx],A=t[this.chunkLength-1];e.ref.objectNumber-A.ref.objectNumber>1?(this.subsections.push([e]),this.chunkIdx+=1,this.chunkLength=1):(t.push(e),this.chunkLength+=1)}}hs.create=()=>new hs({ref:_n.of(0,65535),offset:0,deleted:!0}),hs.createEmpty=()=>new hs;const gs=hs;class ps{constructor(e){this.lastXRefOffset=String(e)}toString(){return`startxref\n${this.lastXRefOffset}\n%%EOF`}sizeInBytes(){return 16+this.lastXRefOffset.length}copyBytesInto(e,t){const A=t;return e[t++]=En.s,e[t++]=En.t,e[t++]=En.a,e[t++]=En.r,e[t++]=En.t,e[t++]=En.x,e[t++]=En.r,e[t++]=En.e,e[t++]=En.f,e[t++]=En.Newline,t+=fA(this.lastXRefOffset,e,t),e[t++]=En.Newline,e[t++]=En.Percent,e[t++]=En.Percent,e[t++]=En.E,e[t++]=En.O,e[t++]=En.F,t-A}}ps.forLastCrossRefSectionOffset=e=>new ps(e);const bs=ps;class ms{constructor(e){this.dict=e}toString(){return`trailer\n${this.dict.toString()}`}sizeInBytes(){return 8+this.dict.sizeInBytes()}copyBytesInto(e,t){const A=t;return e[t++]=En.t,e[t++]=En.r,e[t++]=En.a,e[t++]=En.i,e[t++]=En.l,e[t++]=En.e,e[t++]=En.r,e[t++]=En.Newline,(t+=this.dict.copyBytesInto(e,t))-A}}ms.of=e=>new ms(e);const vs=ms;class ys extends rs{constructor(e,t){let A=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(e.obj({}),A),this.objects=t,this.offsets=this.computeObjectOffsets(),this.offsetsString=this.computeOffsetsString(),this.dict.set(jn.of("Type"),jn.of("ObjStm")),this.dict.set(jn.of("N"),In.of(this.objects.length)),this.dict.set(jn.of("First"),In.of(this.offsetsString.length))}getObjectsCount(){return this.objects.length}clone(e){return ys.withContextAndObjects(e||this.dict.context,this.objects.slice(),this.encode)}getContentsString(){let e=this.offsetsString;for(let t=0,A=this.objects.length;t<A;t++){const[,A]=this.objects[t];e+=`${A}\n`}return e}getUnencodedContents(){const e=new Uint8Array(this.getUnencodedContentsSize());let t=fA(this.offsetsString,e,0);for(let A=0,r=this.objects.length;A<r;A++){const[,r]=this.objects[A];t+=r.copyBytesInto(e,t),e[t++]=En.Newline}return e}getUnencodedContentsSize(){return this.offsetsString.length+QA(this.offsets)[1]+QA(this.objects)[1].sizeInBytes()+1}computeOffsetsString(){let e="";for(let t=0,A=this.offsets.length;t<A;t++){const[A,r]=this.offsets[t];e+=`${A} ${r} `}return e}computeObjectOffsets(){let e=0;const t=new Array(this.objects.length);for(let A=0,r=this.objects.length;A<r;A++){const[r,n]=this.objects[A];t[A]=[r.objectNumber,e],e+=n.sizeInBytes()+1}return t}}ys.withContextAndObjects=function(e,t){return new ys(e,t,!(arguments.length>2&&void 0!==arguments[2])||arguments[2])};const ws=ys;class Bs{constructor(e,t){this.parsedObjects=0,this.shouldWaitForTick=e=>(this.parsedObjects+=e,this.parsedObjects%this.objectsPerTick===0),this.context=e,this.objectsPerTick=t}async serializeToBuffer(){const{size:e,header:t,indirectObjects:A,xref:r,trailerDict:n,trailer:s}=await this.computeBufferSize();let i=0;const o=new Uint8Array(e);i+=t.copyBytesInto(o,i),o[i++]=En.Newline,o[i++]=En.Newline;for(let a=0,l=A.length;a<l;a++){const[e,t]=A[a],r=String(e.objectNumber);i+=fA(r,o,i),o[i++]=En.Space;const n=String(e.generationNumber);i+=fA(n,o,i),o[i++]=En.Space,o[i++]=En.o,o[i++]=En.b,o[i++]=En.j,o[i++]=En.Newline,i+=t.copyBytesInto(o,i),o[i++]=En.Newline,o[i++]=En.e,o[i++]=En.n,o[i++]=En.d,o[i++]=En.o,o[i++]=En.b,o[i++]=En.j,o[i++]=En.Newline,o[i++]=En.Newline;const s=t instanceof ws?t.getObjectsCount():1;this.shouldWaitForTick(s)&&await jA()}return r&&(i+=r.copyBytesInto(o,i),o[i++]=En.Newline),n&&(i+=n.copyBytesInto(o,i),o[i++]=En.Newline,o[i++]=En.Newline),i+=s.copyBytesInto(o,i),o}computeIndirectObjectSize(e){let[t,A]=e;return t.sizeInBytes()+3+(A.sizeInBytes()+9)}createTrailerDict(){return this.context.obj({Size:this.context.largestObjectNumber+1,Root:this.context.trailerInfo.Root,Encrypt:this.context.trailerInfo.Encrypt,Info:this.context.trailerInfo.Info,ID:this.context.trailerInfo.ID})}async computeBufferSize(){const e=Dn.forVersion(1,7);let t=e.sizeInBytes()+2;const A=gs.create(),r=this.context.enumerateIndirectObjects();for(let o=0,a=r.length;o<a;o++){const e=r[o],[n]=e;A.addEntry(n,t),t+=this.computeIndirectObjectSize(e),this.shouldWaitForTick(1)&&await jA()}const n=t;t+=A.sizeInBytes()+1;const s=vs.of(this.createTrailerDict());t+=s.sizeInBytes()+2;const i=bs.forLastCrossRefSectionOffset(n);return t+=i.sizeInBytes(),{size:t,header:e,indirectObjects:r,xref:A,trailerDict:s,trailer:i}}}Bs.forContext=(e,t)=>new Bs(e,t);const xs=Bs;class Cs extends Qn{constructor(e){super(),this.data=e}clone(){return Cs.of(this.data.slice())}toString(){return`PDFInvalidObject(${this.data.length} bytes)`}sizeInBytes(){return this.data.length}copyBytesInto(e,t){const A=this.data.length;for(let r=0;r<A;r++)e[t++]=this.data[r];return A}}Cs.of=e=>new Cs(e);const Es=Cs;var Ns;!function(e){e[e.Deleted=0]="Deleted",e[e.Uncompressed=1]="Uncompressed",e[e.Compressed=2]="Compressed"}(Ns||(Ns={}));class Ds extends rs{constructor(e,t){super(e,!(arguments.length>2&&void 0!==arguments[2])||arguments[2]),this.computeIndex=()=>{const e=[];let t=0;for(let A=0,r=this.entries.length;A<r;A++){const r=this.entries[A],n=this.entries[A-1];0===A?e.push(r.ref.objectNumber):r.ref.objectNumber-n.ref.objectNumber>1&&(e.push(t),e.push(r.ref.objectNumber),t=0),t+=1}return e.push(t),e},this.computeEntryTuples=()=>{const e=new Array(this.entries.length);for(let t=0,A=this.entries.length;t<A;t++){const A=this.entries[t];if(A.type===Ns.Deleted){const{type:r,nextFreeObjectNumber:n,ref:s}=A;e[t]=[r,n,s.generationNumber]}if(A.type===Ns.Uncompressed){const{type:r,offset:n,ref:s}=A;e[t]=[r,n,s.generationNumber]}if(A.type===Ns.Compressed){const{type:r,objectStreamRef:n,index:s}=A;e[t]=[r,n.objectNumber,s]}}return e},this.computeMaxEntryByteWidths=()=>{const e=this.entryTuplesCache.access(),t=[0,0,0];for(let A=0,r=e.length;A<r;A++){const[r,n,s]=e[A],i=ir(r),o=ir(n),a=ir(s);i>t[0]&&(t[0]=i),o>t[1]&&(t[1]=o),a>t[2]&&(t[2]=a)}return t},this.entries=t||[],this.entryTuplesCache=Hr.populatedBy(this.computeEntryTuples),this.maxByteWidthsCache=Hr.populatedBy(this.computeMaxEntryByteWidths),this.indexCache=Hr.populatedBy(this.computeIndex),e.set(jn.of("Type"),jn.of("XRef"))}addDeletedEntry(e,t){const A=Ns.Deleted;this.entries.push({type:A,ref:e,nextFreeObjectNumber:t}),this.entryTuplesCache.invalidate(),this.maxByteWidthsCache.invalidate(),this.indexCache.invalidate(),this.contentsCache.invalidate()}addUncompressedEntry(e,t){const A=Ns.Uncompressed;this.entries.push({type:A,ref:e,offset:t}),this.entryTuplesCache.invalidate(),this.maxByteWidthsCache.invalidate(),this.indexCache.invalidate(),this.contentsCache.invalidate()}addCompressedEntry(e,t,A){const r=Ns.Compressed;this.entries.push({type:r,ref:e,objectStreamRef:t,index:A}),this.entryTuplesCache.invalidate(),this.maxByteWidthsCache.invalidate(),this.indexCache.invalidate(),this.contentsCache.invalidate()}clone(e){const{dict:t,entries:A,encode:r}=this;return Ds.of(t.clone(e),A.slice(),r)}getContentsString(){const e=this.entryTuplesCache.access(),t=this.maxByteWidthsCache.access();let A="";for(let r=0,n=e.length;r<n;r++){const[n,s,i]=e[r],o=WA(or(n)),a=WA(or(s)),l=WA(or(i));for(let e=t[0]-1;e>=0;e--)A+=(o[e]||0).toString(2);for(let e=t[1]-1;e>=0;e--)A+=(a[e]||0).toString(2);for(let e=t[2]-1;e>=0;e--)A+=(l[e]||0).toString(2)}return A}getUnencodedContents(){const e=this.entryTuplesCache.access(),t=this.maxByteWidthsCache.access(),A=new Uint8Array(this.getUnencodedContentsSize());let r=0;for(let n=0,s=e.length;n<s;n++){const[s,i,o]=e[n],a=WA(or(s)),l=WA(or(i)),u=WA(or(o));for(let e=t[0]-1;e>=0;e--)A[r++]=a[e]||0;for(let e=t[1]-1;e>=0;e--)A[r++]=l[e]||0;for(let e=t[2]-1;e>=0;e--)A[r++]=u[e]||0}return A}getUnencodedContentsSize(){const e=this.maxByteWidthsCache.access();return ZA(e)*this.entries.length}updateDict(){super.updateDict();const e=this.maxByteWidthsCache.access(),t=this.indexCache.access(),{context:A}=this.dict;this.dict.set(jn.of("W"),A.obj(e)),this.dict.set(jn.of("Index"),A.obj(t))}}Ds.create=function(e){const t=new Ds(e,[],!(arguments.length>1&&void 0!==arguments[1])||arguments[1]);return t.addDeletedEntry(_n.of(0,65535),0),t},Ds.of=function(e,t){return new Ds(e,t,!(arguments.length>2&&void 0!==arguments[2])||arguments[2])};const Qs=Ds;class Ps extends xs{constructor(e,t,A,r){super(e,t),this.encodeStreams=A,this.objectsPerStream=r}async computeBufferSize(){let e=this.context.largestObjectNumber+1;const t=Dn.forVersion(1,7);let A=t.sizeInBytes()+2;const r=Qs.create(this.createTrailerDict(),this.encodeStreams),n=[],s=[],i=[],o=this.context.enumerateIndirectObjects();for(let c=0,d=o.length;c<d;c++){const t=o[c],[a,l]=t;if(a===this.context.trailerInfo.Encrypt||l instanceof On||l instanceof Es||0!==a.generationNumber)n.push(t),r.addUncompressedEntry(a,A),A+=this.computeIndirectObjectSize(t),this.shouldWaitForTick(1)&&await jA();else{let A=QA(s),n=QA(i);A&&A.length%this.objectsPerStream!==0||(A=[],s.push(A),n=_n.of(e++),i.push(n)),r.addCompressedEntry(a,n,A.length),A.push(t)}}for(let c=0,d=s.length;c<d;c++){const e=s[c],t=i[c],o=ws.withContextAndObjects(this.context,e,this.encodeStreams);r.addUncompressedEntry(t,A),A+=this.computeIndirectObjectSize([t,o]),n.push([t,o]),this.shouldWaitForTick(e.length)&&await jA()}const a=_n.of(e++);r.dict.set(jn.of("Size"),In.of(e)),r.addUncompressedEntry(a,A);const l=A;A+=this.computeIndirectObjectSize([a,r]),n.push([a,r]);const u=bs.forLastCrossRefSectionOffset(l);return A+=u.sizeInBytes(),{size:A,header:t,indirectObjects:n,trailer:u}}}Ps.forContext=function(e,t){return new Ps(e,t,!(arguments.length>2&&void 0!==arguments[2])||arguments[2],arguments.length>3&&void 0!==arguments[3]?arguments[3]:50)};const Is=Ps;class Ls extends Qn{constructor(e){super(),this.value=e}asBytes(){const e=this.value+(this.value.length%2===1?"0":""),t=e.length,A=new Uint8Array(e.length/2);let r=0,n=0;for(;r<t;){const t=parseInt(e.substring(r,r+2),16);A[n]=t,r+=2,n+=1}return A}decodeText(){const e=this.asBytes();return nr(e)?JA(e):Or(e)}decodeDate(){const e=this.decodeText(),t=NA(e);if(!t)throw new sn(e);return t}asString(){return this.value}clone(){return Ls.of(this.value)}toString(){return`<${this.value}>`}sizeInBytes(){return this.value.length+2}copyBytesInto(e,t){return e[t++]=En.LessThan,t+=fA(this.value,e,t),e[t++]=En.GreaterThan,this.value.length+2}}Ls.of=e=>new Ls(e),Ls.fromText=e=>{const t=UA(e);let A="";for(let r=0,n=t.length;r<n;r++)A+=oA(t[r],4);return new Ls(A)};const ks=Ls;class Gs{constructor(e,t){this.encoding=e===gr.ZapfDingbats?Br.ZapfDingbats:e===gr.Symbol?Br.Symbol:Br.WinAnsi,this.font=mr.load(e),this.fontName=this.font.FontName,this.customName=t}encodeText(e){const t=this.encodeTextAsGlyphs(e),A=new Array(t.length);for(let r=0,n=t.length;r<n;r++)A[r]=aA(t[r].code);return ks.of(A.join(""))}widthOfTextAtSize(e,t){const A=this.encodeTextAsGlyphs(e);let r=0;for(let n=0,s=A.length;n<s;n++){const e=A[n].name,t=(A[n+1]||{}).name,s=this.font.getXAxisKerningForPair(e,t)||0;r+=this.widthOfGlyph(e)+s}return r*(t/1e3)}heightOfFontAtSize(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{descender:A=!0}=t,{Ascender:r,Descender:n,FontBBox:s}=this.font;let i=(r||s[3])-(n||s[1]);return A||(i+=n||0),i/1e3*e}sizeOfFontAtHeight(e){const{Ascender:t,Descender:A,FontBBox:r}=this.font;return 1e3*e/((t||r[3])-(A||r[1]))}embedIntoContext(e,t){const A=e.obj({Type:"Font",Subtype:"Type1",BaseFont:this.customName||this.fontName,Encoding:this.encoding===Br.WinAnsi?"WinAnsiEncoding":void 0});return t?(e.assign(t,A),t):e.register(A)}widthOfGlyph(e){return this.font.getWidthOfGlyph(e)||250}encodeTextAsGlyphs(e){const t=Array.from(e),A=new Array(t.length);for(let r=0,n=t.length;r<n;r++){const e=iA(t[r]);A[r]=this.encoding.encodeUnicodeCodePoint(e)}return A}}Gs.for=(e,t)=>new Gs(e,t);const Fs=Gs,Ss=e=>`/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo <<\n  /Registry (Adobe)\n  /Ordering (UCS)\n  /Supplement 0\n>> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000><ffff>\nendcodespacerange\n${e.length} beginbfchar\n${e.map((e=>{let[t,A]=e;return`${t} ${A}`})).join("\n")}\nendbfchar\nendcmap\nCMapName currentdict /CMap defineresource pop\nend\nend`,Ws=function(){for(var e=arguments.length,t=new Array(e),A=0;A<e;A++)t[A]=arguments[A];return`<${t.join("")}>`},Zs=e=>oA(e,4),Xs=e=>{if(VA(e))return Zs(e);if(OA(e)){const t=YA(e),A=HA(e);return`${Zs(t)}${Zs(A)}`}const t=aA(e);throw new Error(`0x${t} is not a valid UTF-8 or UTF-16 codepoint.`)},Ms=e=>{const t=e["OS/2"]?e["OS/2"].sFamilyClass:0;return(e=>{let t=0;const A=e=>{t|=1<<e-1};return e.fixedPitch&&A(1),e.serif&&A(2),e.symbolic&&A(3),e.script&&A(4),e.nonsymbolic&&A(6),e.italic&&A(7),e.allCap&&A(17),e.smallCap&&A(18),e.forceBold&&A(19),t})({fixedPitch:e.post.isFixedPitch,serif:1<=t&&t<=7,symbolic:!0,script:10===t,italic:e.head.macStyle.italic})};class zs extends Qn{constructor(e){super(),this.value=e}asBytes(){const e=[];let t="",A=!1;const r=t=>{void 0!==t&&e.push(t),A=!1};for(let n=0,s=this.value.length;n<s;n++){const e=this.value[n],s=sA(e),i=this.value[n+1];A?s===En.Newline||s===En.CarriageReturn?r():s===En.n?r(En.Newline):s===En.r?r(En.CarriageReturn):s===En.t?r(En.Tab):s===En.b?r(En.Backspace):s===En.f?r(En.FormFeed):s===En.LeftParen?r(En.LeftParen):s===En.RightParen?r(En.RightParen):s===En.Backspace?r(En.BackSlash):s>=En.Zero&&s<=En.Seven?(t+=e,3!==t.length&&i>="0"&&i<="7"||(r(parseInt(t,8)),t="")):r(s):s===En.BackSlash?A=!0:r(s)}return new Uint8Array(e)}decodeText(){const e=this.asBytes();return nr(e)?JA(e):Or(e)}decodeDate(){const e=this.decodeText(),t=NA(e);if(!t)throw new sn(e);return t}asString(){return this.value}clone(){return zs.of(this.value)}toString(){return`(${this.value})`}sizeInBytes(){return this.value.length+2}copyBytesInto(e,t){return e[t++]=En.LeftParen,t+=fA(this.value,e,t),e[t++]=En.RightParen,this.value.length+2}}zs.of=e=>new zs(e),zs.fromDate=e=>{const t=cA(String(e.getUTCFullYear()),4,"0"),A=cA(String(e.getUTCMonth()+1),2,"0"),r=cA(String(e.getUTCDate()),2,"0"),n=cA(String(e.getUTCHours()),2,"0"),s=cA(String(e.getUTCMinutes()),2,"0"),i=cA(String(e.getUTCSeconds()),2,"0");return new zs(`D:${t}${A}${r}${n}${s}${i}Z`)};const Rs=zs;class js{constructor(e,t,A,r){this.allGlyphsInFontSortedById=()=>{const e=new Array(this.font.characterSet.length);for(let t=0,A=e.length;t<A;t++){const A=this.font.characterSet[t];e[t]=this.font.glyphForCodePoint(A)}return FA(e.sort(GA),(e=>e.id))},this.font=e,this.scale=1e3/this.font.unitsPerEm,this.fontData=t,this.fontName=this.font.postscriptName||"Font",this.customName=A,this.fontFeatures=r,this.baseFontName="",this.glyphCache=Hr.populatedBy(this.allGlyphsInFontSortedById)}static async for(e,t,A,r){const n=await e.create(t);return new js(n,t,A,r)}encodeText(e){const{glyphs:t}=this.font.layout(e,this.fontFeatures),A=new Array(t.length);for(let r=0,n=t.length;r<n;r++)A[r]=oA(t[r].id,4);return ks.of(A.join(""))}widthOfTextAtSize(e,t){const{glyphs:A}=this.font.layout(e,this.fontFeatures);let r=0;for(let n=0,s=A.length;n<s;n++)r+=A[n].advanceWidth*this.scale;return r*(t/1e3)}heightOfFontAtSize(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{descender:A=!0}=t,{ascent:r,descent:n,bbox:s}=this.font;let i=(r||s.maxY)*this.scale-(n||s.minY)*this.scale;return A||(i-=Math.abs(n)||0),i/1e3*e}sizeOfFontAtHeight(e){const{ascent:t,descent:A,bbox:r}=this.font;return 1e3*e/((t||r.maxY)*this.scale-(A||r.minY)*this.scale)}embedIntoContext(e,t){return this.baseFontName=this.customName||e.addRandomSuffix(this.fontName),this.embedFontDict(e,t)}async embedFontDict(e,t){const A=await this.embedCIDFontDict(e),r=this.embedUnicodeCmap(e),n=e.obj({Type:"Font",Subtype:"Type0",BaseFont:this.baseFontName,Encoding:"Identity-H",DescendantFonts:[A],ToUnicode:r});return t?(e.assign(t,n),t):e.register(n)}isCFF(){return this.font.cff}async embedCIDFontDict(e){const t=await this.embedFontDescriptor(e),A=e.obj({Type:"Font",Subtype:this.isCFF()?"CIDFontType0":"CIDFontType2",CIDToGIDMap:"Identity",BaseFont:this.baseFontName,CIDSystemInfo:{Registry:Rs.of("Adobe"),Ordering:Rs.of("Identity"),Supplement:0},FontDescriptor:t,W:this.computeWidths()});return e.register(A)}async embedFontDescriptor(e){const t=await this.embedFontStream(e),{scale:A}=this,{italicAngle:r,ascent:n,descent:s,capHeight:i,xHeight:o}=this.font,{minX:a,minY:l,maxX:u,maxY:c}=this.font.bbox,d=e.obj({Type:"FontDescriptor",FontName:this.baseFontName,Flags:Ms(this.font),FontBBox:[a*A,l*A,u*A,c*A],ItalicAngle:r,Ascent:n*A,Descent:s*A,CapHeight:(i||n)*A,XHeight:(o||0)*A,StemV:0,[this.isCFF()?"FontFile3":"FontFile2"]:t});return e.register(d)}async serializeFont(){return this.fontData}async embedFontStream(e){const t=e.flateStream(await this.serializeFont(),{Subtype:this.isCFF()?"CIDFontType0C":void 0});return e.register(t)}embedUnicodeCmap(e){const t=((e,t)=>{const A=new Array(e.length);for(let r=0,n=e.length;r<n;r++){const n=e[r],s=Ws(Zs(t(n))),i=Ws(...n.codePoints.map(Xs));A[r]=[s,i]}return Ss(A)})(this.glyphCache.access(),this.glyphId.bind(this)),A=e.flateStream(t);return e.register(A)}glyphId(e){return e?e.id:-1}computeWidths(){const e=this.glyphCache.access(),t=[];let A=[];for(let r=0,n=e.length;r<n;r++){const n=e[r],s=e[r-1],i=this.glyphId(n),o=this.glyphId(s);0===r?t.push(i):i-o!==1&&(t.push(A),t.push(i),A=[]),A.push(n.advanceWidth*this.scale)}return t.push(A),t}}const Ts=js;class Us extends Ts{constructor(e,t,A,r){super(e,t,A,r),this.subset=this.font.createSubset(),this.glyphs=[],this.glyphCache=Hr.populatedBy((()=>this.glyphs)),this.glyphIdMap=new Map}static async for(e,t,A,r){const n=await e.create(t);return new Us(n,t,A,r)}encodeText(e){const{glyphs:t}=this.font.layout(e,this.fontFeatures),A=new Array(t.length);for(let r=0,n=t.length;r<n;r++){const e=t[r],n=this.subset.includeGlyph(e);this.glyphs[n-1]=e,this.glyphIdMap.set(e.id,n),A[r]=oA(n,4)}return this.glyphCache.invalidate(),ks.of(A.join(""))}isCFF(){return this.subset.cff}glyphId(e){return e?this.glyphIdMap.get(e.id):-1}serializeFont(){return new Promise(((e,t)=>{if("encodeStream"in this.subset){const A=[];this.subset.encodeStream().on("data",(e=>A.push(e))).on("end",(()=>e(LA(A)))).on("error",(e=>t(e)))}else if("encode"in this.subset)try{e(this.subset.encode())}catch(A){t(A)}else t(new Error("Subset does not have an encode method"))}))}}const Vs=Us;var Os;!function(e){e.Source="Source",e.Data="Data",e.Alternative="Alternative",e.Supplement="Supplement",e.EncryptedPayload="EncryptedPayload",e.FormData="EncryptedPayload",e.Schema="Schema",e.Unspecified="Unspecified"}(Os||(Os={}));class Ys{constructor(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.fileData=e,this.fileName=t,this.options=A}static for(e,t){return new Ys(e,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}async embedIntoContext(e,t){const{mimeType:A,description:r,creationDate:n,modificationDate:s,afRelationship:i}=this.options,o=e.flateStream(this.fileData,{Type:"EmbeddedFile",Subtype:null!==A&&void 0!==A?A:void 0,Params:{Size:this.fileData.length,CreationDate:n?Rs.fromDate(n):void 0,ModDate:s?Rs.fromDate(s):void 0}}),a=e.register(o),l=e.obj({Type:"Filespec",F:Rs.of(this.fileName),UF:ks.fromText(this.fileName),EF:{F:a},Desc:r?ks.fromText(r):void 0,AFRelationship:null!==i&&void 0!==i?i:void 0});return t?(e.assign(t,l),t):e.register(l)}}const Hs=Ys,Ks=[65472,65473,65474,65475,65477,65478,65479,65480,65481,65482,65483,65484,65485,65486,65487];var qs;!function(e){e.DeviceGray="DeviceGray",e.DeviceRGB="DeviceRGB",e.DeviceCMYK="DeviceCMYK"}(qs||(qs={}));const Js={1:qs.DeviceGray,3:qs.DeviceRGB,4:qs.DeviceCMYK};class _s{constructor(e,t,A,r,n){this.imageData=e,this.bitsPerComponent=t,this.width=A,this.height=r,this.colorSpace=n}static async for(e){const t=new DataView(e.buffer);if(65496!==t.getUint16(0))throw new Error("SOI not found in JPEG");let A,r=2;for(;r<t.byteLength&&(A=t.getUint16(r),r+=2,!Ks.includes(A));)r+=t.getUint16(r);if(!Ks.includes(A))throw new Error("Invalid JPEG");r+=2;const n=t.getUint8(r++),s=t.getUint16(r);r+=2;const i=t.getUint16(r);r+=2;const o=t.getUint8(r++),a=Js[o];if(!a)throw new Error("Unknown JPEG channel.");return new _s(e,n,i,s,a)}async embedIntoContext(e,t){const A=e.stream(this.imageData,{Type:"XObject",Subtype:"Image",BitsPerComponent:this.bitsPerComponent,Width:this.width,Height:this.height,ColorSpace:this.colorSpace,Filter:"DCTDecode",Decode:this.colorSpace===qs.DeviceCMYK?[1,0,1,0,1,0,1,0]:void 0});return t?(e.assign(t,A),t):e.register(A)}}const $s=_s;var ei={toRGBA8:function(e){var t=e.width,A=e.height;if(null==e.tabs.acTL)return[ei.toRGBA8.decodeImage(e.data,t,A,e).buffer];var r=[];null==e.frames[0].data&&(e.frames[0].data=e.data);for(var n=t*A*4,s=new Uint8Array(n),i=new Uint8Array(n),o=new Uint8Array(n),a=0;a<e.frames.length;a++){var l=e.frames[a],u=l.rect.x,c=l.rect.y,d=l.rect.width,f=l.rect.height,h=ei.toRGBA8.decodeImage(l.data,d,f,e);if(0!=a)for(var g=0;g<n;g++)o[g]=s[g];if(0==l.blend?ei._copyTile(h,d,f,s,t,A,u,c,0):1==l.blend&&ei._copyTile(h,d,f,s,t,A,u,c,1),r.push(s.buffer.slice(0)),0==l.dispose);else if(1==l.dispose)ei._copyTile(i,d,f,s,t,A,u,c,0);else if(2==l.dispose)for(g=0;g<n;g++)s[g]=o[g]}return r}};ei.toRGBA8.decodeImage=function(e,t,A,r){var n=t*A,s=ei.decode._getBPP(r),i=Math.ceil(t*s/8),o=new Uint8Array(4*n),a=new Uint32Array(o.buffer),l=r.ctype,u=r.depth,c=ei._bin.readUshort;Date.now();if(6==l){var d=n<<2;if(8==u)for(var f=0;f<d;f+=4)o[f]=e[f],o[f+1]=e[f+1],o[f+2]=e[f+2],o[f+3]=e[f+3];if(16==u)for(f=0;f<d;f++)o[f]=e[f<<1]}else if(2==l){var h=r.tabs.tRNS;if(null==h){if(8==u)for(f=0;f<n;f++){var g=3*f;a[f]=255<<24|e[g+2]<<16|e[g+1]<<8|e[g]}if(16==u)for(f=0;f<n;f++){g=6*f;a[f]=255<<24|e[g+4]<<16|e[g+2]<<8|e[g]}}else{var p=h[0],b=h[1],m=h[2];if(8==u)for(f=0;f<n;f++){var v=f<<2;g=3*f;a[f]=255<<24|e[g+2]<<16|e[g+1]<<8|e[g],e[g]==p&&e[g+1]==b&&e[g+2]==m&&(o[v+3]=0)}if(16==u)for(f=0;f<n;f++){v=f<<2,g=6*f;a[f]=255<<24|e[g+4]<<16|e[g+2]<<8|e[g],c(e,g)==p&&c(e,g+2)==b&&c(e,g+4)==m&&(o[v+3]=0)}}}else if(3==l){var y=r.tabs.PLTE,w=r.tabs.tRNS,B=w?w.length:0;if(1==u)for(var x=0;x<A;x++){var C=x*i,E=x*t;for(f=0;f<t;f++){v=E+f<<2;var N=3*(D=e[C+(f>>3)]>>7-(7&f)&1);o[v]=y[N],o[v+1]=y[N+1],o[v+2]=y[N+2],o[v+3]=D<B?w[D]:255}}if(2==u)for(x=0;x<A;x++)for(C=x*i,E=x*t,f=0;f<t;f++){v=E+f<<2,N=3*(D=e[C+(f>>2)]>>6-((3&f)<<1)&3);o[v]=y[N],o[v+1]=y[N+1],o[v+2]=y[N+2],o[v+3]=D<B?w[D]:255}if(4==u)for(x=0;x<A;x++)for(C=x*i,E=x*t,f=0;f<t;f++){v=E+f<<2,N=3*(D=e[C+(f>>1)]>>4-((1&f)<<2)&15);o[v]=y[N],o[v+1]=y[N+1],o[v+2]=y[N+2],o[v+3]=D<B?w[D]:255}if(8==u)for(f=0;f<n;f++){var D;v=f<<2,N=3*(D=e[f]);o[v]=y[N],o[v+1]=y[N+1],o[v+2]=y[N+2],o[v+3]=D<B?w[D]:255}}else if(4==l){if(8==u)for(f=0;f<n;f++){v=f<<2;var Q=e[P=f<<1];o[v]=Q,o[v+1]=Q,o[v+2]=Q,o[v+3]=e[P+1]}if(16==u)for(f=0;f<n;f++){var P;v=f<<2,Q=e[P=f<<2];o[v]=Q,o[v+1]=Q,o[v+2]=Q,o[v+3]=e[P+2]}}else if(0==l)for(p=r.tabs.tRNS?r.tabs.tRNS:-1,x=0;x<A;x++){var I=x*i,L=x*t;if(1==u)for(var k=0;k<t;k++){var G=(Q=255*(e[I+(k>>>3)]>>>7-(7&k)&1))==255*p?0:255;a[L+k]=G<<24|Q<<16|Q<<8|Q}else if(2==u)for(k=0;k<t;k++){G=(Q=85*(e[I+(k>>>2)]>>>6-((3&k)<<1)&3))==85*p?0:255;a[L+k]=G<<24|Q<<16|Q<<8|Q}else if(4==u)for(k=0;k<t;k++){G=(Q=17*(e[I+(k>>>1)]>>>4-((1&k)<<2)&15))==17*p?0:255;a[L+k]=G<<24|Q<<16|Q<<8|Q}else if(8==u)for(k=0;k<t;k++){G=(Q=e[I+k])==p?0:255;a[L+k]=G<<24|Q<<16|Q<<8|Q}else if(16==u)for(k=0;k<t;k++){Q=e[I+(k<<1)],G=c(e,I+(k<<f))==p?0:255;a[L+k]=G<<24|Q<<16|Q<<8|Q}}return o},ei.decode=function(e){for(var t,A=new Uint8Array(e),r=8,n=ei._bin,s=n.readUshort,i=n.readUint,o={tabs:{},frames:[]},a=new Uint8Array(A.length),l=0,u=0,c=[137,80,78,71,13,10,26,10],d=0;d<8;d++)if(A[d]!=c[d])throw"The input is not a PNG file!";for(;r<A.length;){var f=n.readUint(A,r);r+=4;var h=n.readASCII(A,r,4);if(r+=4,"IHDR"==h)ei.decode._IHDR(A,r,o);else if("IDAT"==h){for(d=0;d<f;d++)a[l+d]=A[r+d];l+=f}else if("acTL"==h)o.tabs[h]={num_frames:i(A,r),num_plays:i(A,r+4)},t=new Uint8Array(A.length);else if("fcTL"==h){var g;if(0!=u)(g=o.frames[o.frames.length-1]).data=ei.decode._decompress(o,t.slice(0,u),g.rect.width,g.rect.height),u=0;var p={x:i(A,r+12),y:i(A,r+16),width:i(A,r+4),height:i(A,r+8)},b=s(A,r+22);b=s(A,r+20)/(0==b?100:b);var m={rect:p,delay:Math.round(1e3*b),dispose:A[r+24],blend:A[r+25]};o.frames.push(m)}else if("fdAT"==h){for(d=0;d<f-4;d++)t[u+d]=A[r+d+4];u+=f-4}else if("pHYs"==h)o.tabs[h]=[n.readUint(A,r),n.readUint(A,r+4),A[r+8]];else if("cHRM"==h){o.tabs[h]=[];for(d=0;d<8;d++)o.tabs[h].push(n.readUint(A,r+4*d))}else if("tEXt"==h){null==o.tabs[h]&&(o.tabs[h]={});var v=n.nextZero(A,r),y=n.readASCII(A,r,v-r),w=n.readASCII(A,v+1,r+f-v-1);o.tabs[h][y]=w}else if("iTXt"==h){null==o.tabs[h]&&(o.tabs[h]={});v=0;var B=r;v=n.nextZero(A,B);y=n.readASCII(A,B,v-B),A[B=v+1],A[B+1];B+=2,v=n.nextZero(A,B);n.readASCII(A,B,v-B);B=v+1,v=n.nextZero(A,B);n.readUTF8(A,B,v-B);B=v+1;w=n.readUTF8(A,B,f-(B-r));o.tabs[h][y]=w}else if("PLTE"==h)o.tabs[h]=n.readBytes(A,r,f);else if("hIST"==h){var x=o.tabs.PLTE.length/3;o.tabs[h]=[];for(d=0;d<x;d++)o.tabs[h].push(s(A,r+2*d))}else if("tRNS"==h)3==o.ctype?o.tabs[h]=n.readBytes(A,r,f):0==o.ctype?o.tabs[h]=s(A,r):2==o.ctype&&(o.tabs[h]=[s(A,r),s(A,r+2),s(A,r+4)]);else if("gAMA"==h)o.tabs[h]=n.readUint(A,r)/1e5;else if("sRGB"==h)o.tabs[h]=A[r];else if("bKGD"==h)0==o.ctype||4==o.ctype?o.tabs[h]=[s(A,r)]:2==o.ctype||6==o.ctype?o.tabs[h]=[s(A,r),s(A,r+2),s(A,r+4)]:3==o.ctype&&(o.tabs[h]=A[r]);else if("IEND"==h)break;r+=f;n.readUint(A,r);r+=4}0!=u&&((g=o.frames[o.frames.length-1]).data=ei.decode._decompress(o,t.slice(0,u),g.rect.width,g.rect.height),u=0);return o.data=ei.decode._decompress(o,a,o.width,o.height),delete o.compress,delete o.interlace,delete o.filter,o},ei.decode._decompress=function(e,t,A,r){Date.now();var n=ei.decode._getBPP(e),s=Math.ceil(A*n/8),i=new Uint8Array((s+1+e.interlace)*r);t=ei.decode._inflate(t,i);Date.now();return 0==e.interlace?t=ei.decode._filterZero(t,e,0,A,r):1==e.interlace&&(t=ei.decode._readInterlace(t,e)),t},ei.decode._inflate=function(e,t){return ei.inflateRaw(new Uint8Array(e.buffer,2,e.length-6),t)},ei.inflateRaw=function(){var e={H:{}};return e.H.N=function(t,A){var r,n,s=Uint8Array,i=0,o=0,a=0,l=0,u=0,c=0,d=0,f=0,h=0;if(3==t[0]&&0==t[1])return A||new s(0);var g=e.H,p=g.b,b=g.e,m=g.R,v=g.n,y=g.A,w=g.Z,B=g.m,x=null==A;for(x&&(A=new s(t.length>>>2<<3));0==i;)if(i=p(t,h,1),o=p(t,h+1,2),h+=3,0!=o){if(x&&(A=e.H.W(A,f+(1<<17))),1==o&&(r=B.J,n=B.h,c=511,d=31),2==o){a=b(t,h,5)+257,l=b(t,h+5,5)+1,u=b(t,h+10,4)+4;h+=14;for(var C=1,E=0;E<38;E+=2)B.Q[E]=0,B.Q[E+1]=0;for(E=0;E<u;E++){var N=b(t,h+3*E,3);B.Q[1+(B.X[E]<<1)]=N,N>C&&(C=N)}h+=3*u,v(B.Q,C),y(B.Q,C,B.u),r=B.w,n=B.d,h=m(B.u,(1<<C)-1,a+l,t,h,B.v);var D=g.V(B.v,0,a,B.C);c=(1<<D)-1;var Q=g.V(B.v,a,l,B.D);d=(1<<Q)-1,v(B.C,D),y(B.C,D,r),v(B.D,Q),y(B.D,Q,n)}for(;;){var P=r[w(t,h)&c];h+=15&P;var I=P>>>4;if(I>>>8==0)A[f++]=I;else{if(256==I)break;var L=f+I-254;if(I>264){var k=B.q[I-257];L=f+(k>>>3)+b(t,h,7&k),h+=7&k}var G=n[w(t,h)&d];h+=15&G;var F=G>>>4,S=B.c[F],W=(S>>>4)+p(t,h,15&S);for(h+=15&S;f<L;)A[f]=A[f++-W],A[f]=A[f++-W],A[f]=A[f++-W],A[f]=A[f++-W];f=L}}}else{0!=(7&h)&&(h+=8-(7&h));var Z=4+(h>>>3),X=t[Z-4]|t[Z-3]<<8;x&&(A=e.H.W(A,f+X)),A.set(new s(t.buffer,t.byteOffset+Z,X),f),h=Z+X<<3,f+=X}return A.length==f?A:A.slice(0,f)},e.H.W=function(e,t){var A=e.length;if(t<=A)return e;var r=new Uint8Array(A<<1);return r.set(e,0),r},e.H.R=function(t,A,r,n,s,i){for(var o=e.H.e,a=e.H.Z,l=0;l<r;){var u=t[a(n,s)&A];s+=15&u;var c=u>>>4;if(c<=15)i[l]=c,l++;else{var d=0,f=0;16==c?(f=3+o(n,s,2),s+=2,d=i[l-1]):17==c?(f=3+o(n,s,3),s+=3):18==c&&(f=11+o(n,s,7),s+=7);for(var h=l+f;l<h;)i[l]=d,l++}}return s},e.H.V=function(e,t,A,r){for(var n=0,s=0,i=r.length>>>1;s<A;){var o=e[s+t];r[s<<1]=0,r[1+(s<<1)]=o,o>n&&(n=o),s++}for(;s<i;)r[s<<1]=0,r[1+(s<<1)]=0,s++;return n},e.H.n=function(t,A){for(var r,n,s,i,o=e.H.m,a=t.length,l=o.j,u=0;u<=A;u++)l[u]=0;for(u=1;u<a;u+=2)l[t[u]]++;var c=o.K;for(r=0,l[0]=0,n=1;n<=A;n++)r=r+l[n-1]<<1,c[n]=r;for(s=0;s<a;s+=2)0!=(i=t[s+1])&&(t[s]=c[i],c[i]++)},e.H.A=function(t,A,r){for(var n=t.length,s=e.H.m.r,i=0;i<n;i+=2)if(0!=t[i+1])for(var o=i>>1,a=t[i+1],l=o<<4|a,u=A-a,c=t[i]<<u,d=c+(1<<u);c!=d;){r[s[c]>>>15-A]=l,c++}},e.H.l=function(t,A){for(var r=e.H.m.r,n=15-A,s=0;s<t.length;s+=2){var i=t[s]<<A-t[s+1];t[s]=r[i]>>>n}},e.H.M=function(e,t,A){A<<=7&t;var r=t>>>3;e[r]|=A,e[r+1]|=A>>>8},e.H.I=function(e,t,A){A<<=7&t;var r=t>>>3;e[r]|=A,e[r+1]|=A>>>8,e[r+2]|=A>>>16},e.H.e=function(e,t,A){return(e[t>>>3]|e[1+(t>>>3)]<<8)>>>(7&t)&(1<<A)-1},e.H.b=function(e,t,A){return(e[t>>>3]|e[1+(t>>>3)]<<8|e[2+(t>>>3)]<<16)>>>(7&t)&(1<<A)-1},e.H.Z=function(e,t){return(e[t>>>3]|e[1+(t>>>3)]<<8|e[2+(t>>>3)]<<16)>>>(7&t)},e.H.i=function(e,t){return(e[t>>>3]|e[1+(t>>>3)]<<8|e[2+(t>>>3)]<<16|e[3+(t>>>3)]<<24)>>>(7&t)},e.H.m=function(){var e=Uint16Array,t=Uint32Array;return{K:new e(16),j:new e(16),X:[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],S:[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],T:[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0],q:new e(32),p:[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,65535,65535],z:[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0],c:new t(32),J:new e(512),_:[],h:new e(32),$:[],w:new e(32768),C:[],v:[],d:new e(32768),D:[],u:new e(512),Q:[],r:new e(32768),s:new t(286),Y:new t(30),a:new t(19),t:new t(15e3),k:new e(65536),g:new e(32768)}}(),function(){for(var t=e.H.m,A=0;A<32768;A++){var r=A;r=(4278255360&(r=(4042322160&(r=(3435973836&(r=(2863311530&r)>>>1|(1431655765&r)<<1))>>>2|(858993459&r)<<2))>>>4|(252645135&r)<<4))>>>8|(16711935&r)<<8,t.r[A]=(r>>>16|r<<16)>>>17}function n(e,t,A){for(;0!=t--;)e.push(0,A)}for(A=0;A<32;A++)t.q[A]=t.S[A]<<3|t.T[A],t.c[A]=t.p[A]<<4|t.z[A];n(t._,144,8),n(t._,112,9),n(t._,24,7),n(t._,8,8),e.H.n(t._,9),e.H.A(t._,9,t.J),e.H.l(t._,9),n(t.$,32,5),e.H.n(t.$,5),e.H.A(t.$,5,t.h),e.H.l(t.$,5),n(t.Q,19,0),n(t.C,286,0),n(t.D,30,0),n(t.v,320,0)}(),e.H.N}(),ei.decode._readInterlace=function(e,t){for(var A=t.width,r=t.height,n=ei.decode._getBPP(t),s=n>>3,i=Math.ceil(A*n/8),o=new Uint8Array(r*i),a=0,l=[0,0,4,0,2,0,1],u=[0,4,0,2,0,1,0],c=[8,8,8,4,4,2,2],d=[8,8,4,4,2,2,1],f=0;f<7;){for(var h=c[f],g=d[f],p=0,b=0,m=l[f];m<r;)m+=h,b++;for(var v=u[f];v<A;)v+=g,p++;var y=Math.ceil(p*n/8);ei.decode._filterZero(e,t,a,p,b);for(var w=0,B=l[f];B<r;){for(var x=u[f],C=a+w*y<<3;x<A;){var E;if(1==n)E=(E=e[C>>3])>>7-(7&C)&1,o[B*i+(x>>3)]|=E<<7-(7&x);if(2==n)E=(E=e[C>>3])>>6-(7&C)&3,o[B*i+(x>>2)]|=E<<6-((3&x)<<1);if(4==n)E=(E=e[C>>3])>>4-(7&C)&15,o[B*i+(x>>1)]|=E<<4-((1&x)<<2);if(n>=8)for(var N=B*i+x*s,D=0;D<s;D++)o[N+D]=e[(C>>3)+D];C+=n,x+=g}w++,B+=h}p*b!=0&&(a+=b*(1+y)),f+=1}return o},ei.decode._getBPP=function(e){return[1,null,3,1,2,null,4][e.ctype]*e.depth},ei.decode._filterZero=function(e,t,A,r,n){var s=ei.decode._getBPP(t),i=Math.ceil(r*s/8),o=ei.decode._paeth;s=Math.ceil(s/8);var a=0,l=1,u=e[A],c=0;if(u>1&&(e[A]=[0,0,1][u-2]),3==u)for(c=s;c<i;c++)e[c+1]=e[c+1]+(e[c+1-s]>>>1)&255;for(var d=0;d<n;d++)if(c=0,0==(u=e[(l=(a=A+d*i)+d+1)-1]))for(;c<i;c++)e[a+c]=e[l+c];else if(1==u){for(;c<s;c++)e[a+c]=e[l+c];for(;c<i;c++)e[a+c]=e[l+c]+e[a+c-s]}else if(2==u)for(;c<i;c++)e[a+c]=e[l+c]+e[a+c-i];else if(3==u){for(;c<s;c++)e[a+c]=e[l+c]+(e[a+c-i]>>>1);for(;c<i;c++)e[a+c]=e[l+c]+(e[a+c-i]+e[a+c-s]>>>1)}else{for(;c<s;c++)e[a+c]=e[l+c]+o(0,e[a+c-i],0);for(;c<i;c++)e[a+c]=e[l+c]+o(e[a+c-s],e[a+c-i],e[a+c-s-i])}return e},ei.decode._paeth=function(e,t,A){var r=e+t-A,n=r-e,s=r-t,i=r-A;return n*n<=s*s&&n*n<=i*i?e:s*s<=i*i?t:A},ei.decode._IHDR=function(e,t,A){var r=ei._bin;A.width=r.readUint(e,t),t+=4,A.height=r.readUint(e,t),t+=4,A.depth=e[t],t++,A.ctype=e[t],t++,A.compress=e[t],t++,A.filter=e[t],t++,A.interlace=e[t],t++},ei._bin={nextZero:function(e,t){for(;0!=e[t];)t++;return t},readUshort:function(e,t){return e[t]<<8|e[t+1]},writeUshort:function(e,t,A){e[t]=A>>8&255,e[t+1]=255&A},readUint:function(e,t){return 16777216*e[t]+(e[t+1]<<16|e[t+2]<<8|e[t+3])},writeUint:function(e,t,A){e[t]=A>>24&255,e[t+1]=A>>16&255,e[t+2]=A>>8&255,e[t+3]=255&A},readASCII:function(e,t,A){for(var r="",n=0;n<A;n++)r+=String.fromCharCode(e[t+n]);return r},writeASCII:function(e,t,A){for(var r=0;r<A.length;r++)e[t+r]=A.charCodeAt(r)},readBytes:function(e,t,A){for(var r=[],n=0;n<A;n++)r.push(e[t+n]);return r},pad:function(e){return e.length<2?"0"+e:e},readUTF8:function(e,t,A){for(var r,n="",s=0;s<A;s++)n+="%"+ei._bin.pad(e[t+s].toString(16));try{r=decodeURIComponent(n)}catch(tF){return ei._bin.readASCII(e,t,A)}return r}},ei._copyTile=function(e,t,A,r,n,s,i,o,a){for(var l=Math.min(t,n),u=Math.min(A,s),c=0,d=0,f=0;f<u;f++)for(var h=0;h<l;h++)if(i>=0&&o>=0?(c=f*t+h<<2,d=(o+f)*n+i+h<<2):(c=(-o+f)*t-i+h<<2,d=f*n+h<<2),0==a)r[d]=e[c],r[d+1]=e[c+1],r[d+2]=e[c+2],r[d+3]=e[c+3];else if(1==a){var g=e[c+3]*(1/255),p=e[c]*g,b=e[c+1]*g,m=e[c+2]*g,v=r[d+3]*(1/255),y=r[d]*v,w=r[d+1]*v,B=r[d+2]*v,x=1-g,C=g+v*x,E=0==C?0:1/C;r[d+3]=255*C,r[d+0]=(p+y*x)*E,r[d+1]=(b+w*x)*E,r[d+2]=(m+B*x)*E}else if(2==a){g=e[c+3],p=e[c],b=e[c+1],m=e[c+2],v=r[d+3],y=r[d],w=r[d+1],B=r[d+2];g==v&&p==y&&b==w&&m==B?(r[d]=0,r[d+1]=0,r[d+2]=0,r[d+3]=0):(r[d]=p,r[d+1]=b,r[d+2]=m,r[d+3]=g)}else if(3==a){g=e[c+3],p=e[c],b=e[c+1],m=e[c+2],v=r[d+3],y=r[d],w=r[d+1],B=r[d+2];if(g==v&&p==y&&b==w&&m==B)continue;if(g<220&&v>20)return!1}return!0},ei.encode=function(e,t,A,r,n,s,i){null==r&&(r=0),null==i&&(i=!1);var o=ei.encode.compress(e,t,A,r,[!1,!1,!1,0,i]);return ei.encode.compressPNG(o,-1),ei.encode._main(o,t,A,n,s)},ei.encodeLL=function(e,t,A,r,n,s,i,o){for(var a={ctype:0+(1==r?0:2)+(0==n?0:4),depth:s,frames:[]},l=(Date.now(),(r+n)*s),u=l*t,c=0;c<e.length;c++)a.frames.push({rect:{x:0,y:0,width:t,height:A},img:new Uint8Array(e[c]),blend:0,dispose:1,bpp:Math.ceil(l/8),bpl:Math.ceil(u/8)});return ei.encode.compressPNG(a,0,!0),ei.encode._main(a,t,A,i,o)},ei.encode._main=function(e,t,A,r,n){null==n&&(n={});var s=ei.crc.crc,i=ei._bin.writeUint,o=ei._bin.writeUshort,a=ei._bin.writeASCII,l=8,u=e.frames.length>1,c=!1,d=33+(u?20:0);if(null!=n.sRGB&&(d+=13),null!=n.pHYs&&(d+=21),3==e.ctype){for(var f=e.plte.length,h=0;h<f;h++)e.plte[h]>>>24!=255&&(c=!0);d+=8+3*f+4+(c?8+1*f+4:0)}for(var g=0;g<e.frames.length;g++){u&&(d+=38),d+=(C=e.frames[g]).cimg.length+12,0!=g&&(d+=4)}d+=12;var p=new Uint8Array(d),b=[137,80,78,71,13,10,26,10];for(h=0;h<8;h++)p[h]=b[h];if(i(p,l,13),a(p,l+=4,"IHDR"),i(p,l+=4,t),i(p,l+=4,A),p[l+=4]=e.depth,p[++l]=e.ctype,p[++l]=0,p[++l]=0,p[++l]=0,i(p,++l,s(p,l-17,17)),l+=4,null!=n.sRGB&&(i(p,l,1),a(p,l+=4,"sRGB"),p[l+=4]=n.sRGB,i(p,++l,s(p,l-5,5)),l+=4),null!=n.pHYs&&(i(p,l,9),a(p,l+=4,"pHYs"),i(p,l+=4,n.pHYs[0]),i(p,l+=4,n.pHYs[1]),p[l+=4]=n.pHYs[2],i(p,++l,s(p,l-13,13)),l+=4),u&&(i(p,l,8),a(p,l+=4,"acTL"),i(p,l+=4,e.frames.length),i(p,l+=4,null!=n.loop?n.loop:0),i(p,l+=4,s(p,l-12,12)),l+=4),3==e.ctype){i(p,l,3*(f=e.plte.length)),a(p,l+=4,"PLTE"),l+=4;for(h=0;h<f;h++){var m=3*h,v=e.plte[h],y=255&v,w=v>>>8&255,B=v>>>16&255;p[l+m+0]=y,p[l+m+1]=w,p[l+m+2]=B}if(i(p,l+=3*f,s(p,l-3*f-4,3*f+4)),l+=4,c){i(p,l,f),a(p,l+=4,"tRNS"),l+=4;for(h=0;h<f;h++)p[l+h]=e.plte[h]>>>24&255;i(p,l+=f,s(p,l-f-4,f+4)),l+=4}}var x=0;for(g=0;g<e.frames.length;g++){var C=e.frames[g];u&&(i(p,l,26),a(p,l+=4,"fcTL"),i(p,l+=4,x++),i(p,l+=4,C.rect.width),i(p,l+=4,C.rect.height),i(p,l+=4,C.rect.x),i(p,l+=4,C.rect.y),o(p,l+=4,r[g]),o(p,l+=2,1e3),p[l+=2]=C.dispose,p[++l]=C.blend,i(p,++l,s(p,l-30,30)),l+=4);var E=C.cimg;i(p,l,(f=E.length)+(0==g?0:4));var N=l+=4;a(p,l,0==g?"IDAT":"fdAT"),l+=4,0!=g&&(i(p,l,x++),l+=4),p.set(E,l),i(p,l+=f,s(p,N,l-N)),l+=4}return i(p,l,0),a(p,l+=4,"IEND"),i(p,l+=4,s(p,l-4,4)),l+=4,p.buffer},ei.encode.compressPNG=function(e,t,A){for(var r=0;r<e.frames.length;r++){var n=e.frames[r],s=(n.rect.width,n.rect.height),i=new Uint8Array(s*n.bpl+s);n.cimg=ei.encode._filterZero(n.img,s,n.bpp,n.bpl,i,t,A)}},ei.encode.compress=function(e,t,A,r,n){for(var s=n[0],i=n[1],o=n[2],a=n[3],l=n[4],u=6,c=8,d=255,f=0;f<e.length;f++)for(var h=new Uint8Array(e[f]),g=h.length,p=0;p<g;p+=4)d&=h[p+3];var b=255!=d,m=ei.encode.framize(e,t,A,s,i,o),v={},y=[],w=[];if(0!=r){var B=[];for(p=0;p<m.length;p++)B.push(m[p].img.buffer);var x=ei.encode.concatRGBA(B),C=ei.quantize(x,r),E=0,N=new Uint8Array(C.abuf);for(p=0;p<m.length;p++){var D=(V=m[p].img).length;w.push(new Uint8Array(C.inds.buffer,E>>2,D>>2));for(f=0;f<D;f+=4)V[f]=N[E+f],V[f+1]=N[E+f+1],V[f+2]=N[E+f+2],V[f+3]=N[E+f+3];E+=D}for(p=0;p<C.plte.length;p++)y.push(C.plte[p].est.rgba)}else for(f=0;f<m.length;f++){var Q=m[f],P=new Uint32Array(Q.img.buffer),I=Q.rect.width,L=(g=P.length,new Uint8Array(g));w.push(L);for(p=0;p<g;p++){var k=P[p];if(0!=p&&k==P[p-1])L[p]=L[p-1];else if(p>I&&k==P[p-I])L[p]=L[p-I];else{var G=v[k];if(null==G&&(v[k]=G=y.length,y.push(k),y.length>=300))break;L[p]=G}}}var F=y.length;F<=256&&0==l&&(c=F<=2?1:F<=4?2:F<=16?4:8,c=Math.max(c,a));for(f=0;f<m.length;f++){(Q=m[f]).rect.x,Q.rect.y,I=Q.rect.width;var S=Q.rect.height,W=Q.img,Z=(new Uint32Array(W.buffer),4*I),X=4;if(F<=256&&0==l){Z=Math.ceil(c*I/8);for(var M=new Uint8Array(Z*S),z=w[f],R=0;R<S;R++){p=R*Z;var j=R*I;if(8==c)for(var T=0;T<I;T++)M[p+T]=z[j+T];else if(4==c)for(T=0;T<I;T++)M[p+(T>>1)]|=z[j+T]<<4-4*(1&T);else if(2==c)for(T=0;T<I;T++)M[p+(T>>2)]|=z[j+T]<<6-2*(3&T);else if(1==c)for(T=0;T<I;T++)M[p+(T>>3)]|=z[j+T]<<7-1*(7&T)}W=M,u=3,X=1}else if(0==b&&1==m.length){M=new Uint8Array(I*S*3);var U=I*S;for(p=0;p<U;p++){var V,O=4*p;M[V=3*p]=W[O],M[V+1]=W[O+1],M[V+2]=W[O+2]}W=M,u=2,X=3,Z=3*I}Q.img=W,Q.bpl=Z,Q.bpp=X}return{ctype:u,depth:c,plte:y,frames:m}},ei.encode.framize=function(e,t,A,r,n,s){for(var i=[],o=0;o<e.length;o++){var a,l=new Uint8Array(e[o]),u=new Uint32Array(l.buffer),c=0,d=0,f=t,h=A,g=r?1:0;if(0!=o){for(var p=s||r||1==o||0!=i[o-2].dispose?1:2,b=0,m=1e9,v=0;v<p;v++){for(var y=new Uint8Array(e[o-1-v]),w=new Uint32Array(e[o-1-v]),B=t,x=A,C=-1,E=-1,N=0;N<A;N++)for(var D=0;D<t;D++){u[F=N*t+D]!=w[F]&&(D<B&&(B=D),D>C&&(C=D),N<x&&(x=N),N>E&&(E=N))}-1==C&&(B=x=C=E=0),n&&(1==(1&B)&&B--,1==(1&x)&&x--);var Q=(C-B+1)*(E-x+1);Q<m&&(m=Q,b=v,c=B,d=x,f=C-B+1,h=E-x+1)}y=new Uint8Array(e[o-1-b]);1==b&&(i[o-1].dispose=2),a=new Uint8Array(f*h*4),ei._copyTile(y,t,A,a,f,h,-c,-d,0),1==(g=ei._copyTile(l,t,A,a,f,h,-c,-d,3)?1:0)?ei.encode._prepareDiff(l,t,A,a,{x:c,y:d,width:f,height:h}):ei._copyTile(l,t,A,a,f,h,-c,-d,0)}else a=l.slice(0);i.push({rect:{x:c,y:d,width:f,height:h},img:a,blend:g,dispose:0})}if(r)for(o=0;o<i.length;o++){if(1!=(S=i[o]).blend){var P=S.rect,I=i[o-1].rect,L=Math.min(P.x,I.x),k=Math.min(P.y,I.y),G={x:L,y:k,width:Math.max(P.x+P.width,I.x+I.width)-L,height:Math.max(P.y+P.height,I.y+I.height)-k};i[o-1].dispose=1,o-1!=0&&ei.encode._updateFrame(e,t,A,i,o-1,G,n),ei.encode._updateFrame(e,t,A,i,o,G,n)}}if(1!=e.length)for(var F=0;F<i.length;F++){var S;(S=i[F]).rect.width*S.rect.height}return i},ei.encode._updateFrame=function(e,t,A,r,n,s,i){for(var o=Uint8Array,a=Uint32Array,l=new o(e[n-1]),u=new a(e[n-1]),c=n+1<e.length?new o(e[n+1]):null,d=new o(e[n]),f=new a(d.buffer),h=t,g=A,p=-1,b=-1,m=0;m<s.height;m++)for(var v=0;v<s.width;v++){var y=s.x+v,w=s.y+m,B=w*t+y,x=f[B];0==x||0==r[n-1].dispose&&u[B]==x&&(null==c||0!=c[4*B+3])||(y<h&&(h=y),y>p&&(p=y),w<g&&(g=w),w>b&&(b=w))}-1==p&&(h=g=p=b=0),i&&(1==(1&h)&&h--,1==(1&g)&&g--),s={x:h,y:g,width:p-h+1,height:b-g+1};var C=r[n];C.rect=s,C.blend=1,C.img=new Uint8Array(s.width*s.height*4),0==r[n-1].dispose?(ei._copyTile(l,t,A,C.img,s.width,s.height,-s.x,-s.y,0),ei.encode._prepareDiff(d,t,A,C.img,s)):ei._copyTile(d,t,A,C.img,s.width,s.height,-s.x,-s.y,0)},ei.encode._prepareDiff=function(e,t,A,r,n){ei._copyTile(e,t,A,r,n.width,n.height,-n.x,-n.y,2)},ei.encode._filterZero=function(e,t,A,r,n,s,i){var o,a=[],l=[0,1,2,3,4];-1!=s?l=[s]:(t*r>5e5||1==A)&&(l=[0]),i&&(o={level:0});for(var u=i&&null!=UZIP?UZIP:ur(),c=0;c<l.length;c++){for(var d=0;d<t;d++)ei.encode._filterLine(n,e,d,r,A,l[c]);a.push(u.deflate(n,o))}var f,h=1e9;for(c=0;c<a.length;c++)a[c].length<h&&(f=c,h=a[c].length);return a[f]},ei.encode._filterLine=function(e,t,A,r,n,s){var i=A*r,o=i+A,a=ei.decode._paeth;if(e[o]=s,o++,0==s)if(r<500)for(var l=0;l<r;l++)e[o+l]=t[i+l];else e.set(new Uint8Array(t.buffer,i,r),o);else if(1==s){for(l=0;l<n;l++)e[o+l]=t[i+l];for(l=n;l<r;l++)e[o+l]=t[i+l]-t[i+l-n]+256&255}else if(0==A){for(l=0;l<n;l++)e[o+l]=t[i+l];if(2==s)for(l=n;l<r;l++)e[o+l]=t[i+l];if(3==s)for(l=n;l<r;l++)e[o+l]=t[i+l]-(t[i+l-n]>>1)+256&255;if(4==s)for(l=n;l<r;l++)e[o+l]=t[i+l]-a(t[i+l-n],0,0)+256&255}else{if(2==s)for(l=0;l<r;l++)e[o+l]=t[i+l]+256-t[i+l-r]&255;if(3==s){for(l=0;l<n;l++)e[o+l]=t[i+l]+256-(t[i+l-r]>>1)&255;for(l=n;l<r;l++)e[o+l]=t[i+l]+256-(t[i+l-r]+t[i+l-n]>>1)&255}if(4==s){for(l=0;l<n;l++)e[o+l]=t[i+l]+256-a(0,t[i+l-r],0)&255;for(l=n;l<r;l++)e[o+l]=t[i+l]+256-a(t[i+l-n],t[i+l-r],t[i+l-n-r])&255}}},ei.crc={table:function(){for(var e=new Uint32Array(256),t=0;t<256;t++){for(var A=t,r=0;r<8;r++)1&A?A=3988292384^A>>>1:A>>>=1;e[t]=A}return e}(),update:function(e,t,A,r){for(var n=0;n<r;n++)e=ei.crc.table[255&(e^t[A+n])]^e>>>8;return e},crc:function(e,t,A){return 4294967295^ei.crc.update(4294967295,e,t,A)}},ei.quantize=function(e,t){for(var A=new Uint8Array(e),r=A.slice(0),n=new Uint32Array(r.buffer),s=ei.quantize.getKDtree(r,t),i=s[0],o=s[1],a=(ei.quantize.planeDst,A),l=n,u=a.length,c=new Uint8Array(A.length>>2),d=0;d<u;d+=4){var f=a[d]*(1/255),h=a[d+1]*(1/255),g=a[d+2]*(1/255),p=a[d+3]*(1/255),b=ei.quantize.getNearest(i,f,h,g,p);c[d>>2]=b.ind,l[d>>2]=b.est.rgba}return{abuf:r.buffer,inds:c,plte:o}},ei.quantize.getKDtree=function(e,t,A){null==A&&(A=1e-4);var r=new Uint32Array(e.buffer),n={i0:0,i1:e.length,bst:null,est:null,tdst:0,left:null,right:null};n.bst=ei.quantize.stats(e,n.i0,n.i1),n.est=ei.quantize.estats(n.bst);for(var s=[n];s.length<t;){for(var i=0,o=0,a=0;a<s.length;a++)s[a].est.L>i&&(i=s[a].est.L,o=a);if(i<A)break;var l=s[o],u=ei.quantize.splitPixels(e,r,l.i0,l.i1,l.est.e,l.est.eMq255);if(l.i0>=u||l.i1<=u)l.est.L=0;else{var c={i0:l.i0,i1:u,bst:null,est:null,tdst:0,left:null,right:null};c.bst=ei.quantize.stats(e,c.i0,c.i1),c.est=ei.quantize.estats(c.bst);var d={i0:u,i1:l.i1,bst:null,est:null,tdst:0,left:null,right:null};d.bst={R:[],m:[],N:l.bst.N-c.bst.N};for(a=0;a<16;a++)d.bst.R[a]=l.bst.R[a]-c.bst.R[a];for(a=0;a<4;a++)d.bst.m[a]=l.bst.m[a]-c.bst.m[a];d.est=ei.quantize.estats(d.bst),l.left=c,l.right=d,s[o]=c,s.push(d)}}s.sort((function(e,t){return t.bst.N-e.bst.N}));for(a=0;a<s.length;a++)s[a].ind=a;return[n,s]},ei.quantize.getNearest=function(e,t,A,r,n){if(null==e.left)return e.tdst=ei.quantize.dist(e.est.q,t,A,r,n),e;var s=ei.quantize.planeDst(e.est,t,A,r,n),i=e.left,o=e.right;s>0&&(i=e.right,o=e.left);var a=ei.quantize.getNearest(i,t,A,r,n);if(a.tdst<=s*s)return a;var l=ei.quantize.getNearest(o,t,A,r,n);return l.tdst<a.tdst?l:a},ei.quantize.planeDst=function(e,t,A,r,n){var s=e.e;return s[0]*t+s[1]*A+s[2]*r+s[3]*n-e.eMq},ei.quantize.dist=function(e,t,A,r,n){var s=t-e[0],i=A-e[1],o=r-e[2],a=n-e[3];return s*s+i*i+o*o+a*a},ei.quantize.splitPixels=function(e,t,A,r,n,s){var i=ei.quantize.vecDot;r-=4;for(;A<r;){for(;i(e,A,n)<=s;)A+=4;for(;i(e,r,n)>s;)r-=4;if(A>=r)break;var o=t[A>>2];t[A>>2]=t[r>>2],t[r>>2]=o,A+=4,r-=4}for(;i(e,A,n)>s;)A-=4;return A+4},ei.quantize.vecDot=function(e,t,A){return e[t]*A[0]+e[t+1]*A[1]+e[t+2]*A[2]+e[t+3]*A[3]},ei.quantize.stats=function(e,t,A){for(var r=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],n=[0,0,0,0],s=A-t>>2,i=t;i<A;i+=4){var o=e[i]*(1/255),a=e[i+1]*(1/255),l=e[i+2]*(1/255),u=e[i+3]*(1/255);n[0]+=o,n[1]+=a,n[2]+=l,n[3]+=u,r[0]+=o*o,r[1]+=o*a,r[2]+=o*l,r[3]+=o*u,r[5]+=a*a,r[6]+=a*l,r[7]+=a*u,r[10]+=l*l,r[11]+=l*u,r[15]+=u*u}return r[4]=r[1],r[8]=r[2],r[9]=r[6],r[12]=r[3],r[13]=r[7],r[14]=r[11],{R:r,m:n,N:s}},ei.quantize.estats=function(e){var t=e.R,A=e.m,r=e.N,n=A[0],s=A[1],i=A[2],o=A[3],a=0==r?0:1/r,l=[t[0]-n*n*a,t[1]-n*s*a,t[2]-n*i*a,t[3]-n*o*a,t[4]-s*n*a,t[5]-s*s*a,t[6]-s*i*a,t[7]-s*o*a,t[8]-i*n*a,t[9]-i*s*a,t[10]-i*i*a,t[11]-i*o*a,t[12]-o*n*a,t[13]-o*s*a,t[14]-o*i*a,t[15]-o*o*a],u=l,c=ei.M4,d=[.5,.5,.5,.5],f=0,h=0;if(0!=r)for(var g=0;g<10&&(d=c.multVec(u,d),h=Math.sqrt(c.dot(d,d)),d=c.sml(1/h,d),!(Math.abs(h-f)<1e-9));g++)f=h;var p=[n*a,s*a,i*a,o*a];return{Cov:l,q:p,e:d,L:f,eMq255:c.dot(c.sml(255,p),d),eMq:c.dot(d,p),rgba:(Math.round(255*p[3])<<24|Math.round(255*p[2])<<16|Math.round(255*p[1])<<8|Math.round(255*p[0]))>>>0}},ei.M4={multVec:function(e,t){return[e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3],e[4]*t[0]+e[5]*t[1]+e[6]*t[2]+e[7]*t[3],e[8]*t[0]+e[9]*t[1]+e[10]*t[2]+e[11]*t[3],e[12]*t[0]+e[13]*t[1]+e[14]*t[2]+e[15]*t[3]]},dot:function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]},sml:function(e,t){return[e*t[0],e*t[1],e*t[2],e*t[3]]}},ei.encode.concatRGBA=function(e){for(var t=0,A=0;A<e.length;A++)t+=e[A].byteLength;var r=new Uint8Array(t),n=0;for(A=0;A<e.length;A++){for(var s=new Uint8Array(e[A]),i=s.length,o=0;o<i;o+=4){var a=s[o],l=s[o+1],u=s[o+2],c=s[o+3];0==c&&(a=l=u=0),r[n+o]=a,r[n+o+1]=l,r[n+o+2]=u,r[n+o+3]=c}n+=i}return r.buffer};const ti=ei;var Ai;!function(e){e.Greyscale="Greyscale",e.Truecolour="Truecolour",e.IndexedColour="IndexedColour",e.GreyscaleWithAlpha="GreyscaleWithAlpha",e.TruecolourWithAlpha="TruecolourWithAlpha"}(Ai||(Ai={}));class ri{constructor(e){const t=ti.decode(e),A=ti.toRGBA8(t);if(A.length>1)throw new Error("Animated PNGs are not supported");const r=new Uint8Array(A[0]),{rgbChannel:n,alphaChannel:s}=(e=>{const t=Math.floor(e.length/4),A=new Uint8Array(3*t),r=new Uint8Array(1*t);let n=0,s=0,i=0;for(;n<e.length;)A[s++]=e[n++],A[s++]=e[n++],A[s++]=e[n++],r[i++]=e[n++];return{rgbChannel:A,alphaChannel:r}})(r);this.rgbChannel=n;s.some((e=>e<255))&&(this.alphaChannel=s),this.type=(e=>{if(0===e)return Ai.Greyscale;if(2===e)return Ai.Truecolour;if(3===e)return Ai.IndexedColour;if(4===e)return Ai.GreyscaleWithAlpha;if(6===e)return Ai.TruecolourWithAlpha;throw new Error(`Unknown color type: ${e}`)})(t.ctype),this.width=t.width,this.height=t.height,this.bitsPerComponent=8}}ri.load=e=>new ri(e);class ni{constructor(e){this.image=e,this.bitsPerComponent=e.bitsPerComponent,this.width=e.width,this.height=e.height,this.colorSpace="DeviceRGB"}static async for(e){const t=ri.load(e);return new ni(t)}async embedIntoContext(e,t){const A=this.embedAlphaChannel(e),r=e.flateStream(this.image.rgbChannel,{Type:"XObject",Subtype:"Image",BitsPerComponent:this.image.bitsPerComponent,Width:this.image.width,Height:this.image.height,ColorSpace:this.colorSpace,SMask:A});return t?(e.assign(t,r),t):e.register(r)}embedAlphaChannel(e){if(!this.image.alphaChannel)return;const t=e.flateStream(this.image.alphaChannel,{Type:"XObject",Subtype:"Image",Height:this.image.height,Width:this.image.width,BitsPerComponent:this.image.bitsPerComponent,ColorSpace:"DeviceGray",Decode:[0,1]});return e.register(t)}}const si=ni;class ii{constructor(e,t,A){this.bytes=e,this.start=t||0,this.pos=this.start,this.end=t&&A?t+A:this.bytes.length}get length(){return this.end-this.start}get isEmpty(){return 0===this.length}getByte(){return this.pos>=this.end?-1:this.bytes[this.pos++]}getUint16(){const e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t}getInt32(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()}getBytes(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const A=this.bytes,r=this.pos,n=this.end;if(e){let s=r+e;s>n&&(s=n),this.pos=s;const i=A.subarray(r,s);return t?new Uint8ClampedArray(i):i}{const e=A.subarray(r,n);return t?new Uint8ClampedArray(e):e}}peekByte(){const e=this.getByte();return this.pos--,e}peekBytes(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const A=this.getBytes(e,t);return this.pos-=A.length,A}skip(e){e||(e=1),this.pos+=e}reset(){this.pos=this.start}moveStart(){this.start=this.pos}makeSubStream(e,t){return new ii(this.bytes,e,t)}decode(){return this.bytes}}const oi=ii,ai=new Uint8Array(0);const li=class{constructor(e){if(this.pos=0,this.bufferLength=0,this.eof=!1,this.buffer=ai,this.minBufferLength=512,e)for(;this.minBufferLength<e;)this.minBufferLength*=2}get isEmpty(){for(;!this.eof&&0===this.bufferLength;)this.readBlock();return 0===this.bufferLength}getByte(){const e=this.pos;for(;this.bufferLength<=e;){if(this.eof)return-1;this.readBlock()}return this.buffer[this.pos++]}getUint16(){const e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t}getInt32(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()}getBytes(e){let t,A=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const r=this.pos;if(e){for(this.ensureBuffer(r+e),t=r+e;!this.eof&&this.bufferLength<t;)this.readBlock();const A=this.bufferLength;t>A&&(t=A)}else{for(;!this.eof;)this.readBlock();t=this.bufferLength}this.pos=t;const n=this.buffer.subarray(r,t);return!A||n instanceof Uint8ClampedArray?n:new Uint8ClampedArray(n)}peekByte(){const e=this.getByte();return this.pos--,e}peekBytes(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const A=this.getBytes(e,t);return this.pos-=A.length,A}skip(e){e||(e=1),this.pos+=e}reset(){this.pos=0}makeSubStream(e,t){const A=e+t;for(;this.bufferLength<=A&&!this.eof;)this.readBlock();return new oi(this.buffer,e,t)}decode(){for(;!this.eof;)this.readBlock();return this.buffer.subarray(0,this.bufferLength)}readBlock(){throw new Kr(this.constructor.name,"readBlock")}ensureBuffer(e){const t=this.buffer;if(e<=t.byteLength)return t;let A=this.minBufferLength;for(;A<e;)A*=2;const r=new Uint8Array(A);return r.set(t),this.buffer=r}},ui=e=>32===e||9===e||13===e||10===e;const ci=class extends li{constructor(e,t){super(t),this.stream=e,this.input=new Uint8Array(5),t&&(t*=.8)}readBlock(){const e=this.stream;let t=e.getByte();for(;ui(t);)t=e.getByte();if(-1===t||126===t)return void(this.eof=!0);const A=this.bufferLength;let r,n;if(122===t){for(r=this.ensureBuffer(A+4),n=0;n<4;++n)r[A+n]=0;this.bufferLength+=4}else{const s=this.input;for(s[0]=t,n=1;n<5;++n){for(t=e.getByte();ui(t);)t=e.getByte();if(s[n]=t,-1===t||126===t)break}if(r=this.ensureBuffer(A+n-1),this.bufferLength+=n-1,n<5){for(;n<5;++n)s[n]=117;this.eof=!0}let i=0;for(n=0;n<5;++n)i=85*i+(s[n]-33);for(n=3;n>=0;--n)r[A+n]=255&i,i>>=8}}};const di=class extends li{constructor(e,t){super(t),this.stream=e,this.firstDigit=-1,t&&(t*=.5)}readBlock(){const e=this.stream.getBytes(8e3);if(!e.length)return void(this.eof=!0);const t=e.length+1>>1,A=this.ensureBuffer(this.bufferLength+t);let r=this.bufferLength,n=this.firstDigit;for(let s=0,i=e.length;s<i;s++){const t=e[s];let i;if(t>=48&&t<=57)i=15&t;else{if(!(t>=65&&t<=70||t>=97&&t<=102)){if(62===t){this.eof=!0;break}continue}i=9+(15&t)}n<0?n=i:(A[r++]=n<<4|i,n=-1)}n>=0&&this.eof&&(A[r++]=n<<4,n=-1),this.firstDigit=n,this.bufferLength=r}},fi=new Int32Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),hi=new Int32Array([3,4,5,6,7,8,9,10,65547,65549,65551,65553,131091,131095,131099,131103,196643,196651,196659,196667,262211,262227,262243,262259,327811,327843,327875,327907,258,258,258]),gi=new Int32Array([1,2,3,4,65541,65543,131081,131085,196625,196633,262177,262193,327745,327777,393345,393409,459009,459137,524801,525057,590849,591361,657409,658433,724993,727041,794625,798721,868353,876545]),pi=[new Int32Array([459008,524368,524304,524568,459024,524400,524336,590016,459016,524384,524320,589984,524288,524416,524352,590048,459012,524376,524312,589968,459028,524408,524344,590032,459020,524392,524328,59e4,524296,524424,524360,590064,459010,524372,524308,524572,459026,524404,524340,590024,459018,524388,524324,589992,524292,524420,524356,590056,459014,524380,524316,589976,459030,524412,524348,590040,459022,524396,524332,590008,524300,524428,524364,590072,459009,524370,524306,524570,459025,524402,524338,590020,459017,524386,524322,589988,524290,524418,524354,590052,459013,524378,524314,589972,459029,524410,524346,590036,459021,524394,524330,590004,524298,524426,524362,590068,459011,524374,524310,524574,459027,524406,524342,590028,459019,524390,524326,589996,524294,524422,524358,590060,459015,524382,524318,589980,459031,524414,524350,590044,459023,524398,524334,590012,524302,524430,524366,590076,459008,524369,524305,524569,459024,524401,524337,590018,459016,524385,524321,589986,524289,524417,524353,590050,459012,524377,524313,589970,459028,524409,524345,590034,459020,524393,524329,590002,524297,524425,524361,590066,459010,524373,524309,524573,459026,524405,524341,590026,459018,524389,524325,589994,524293,524421,524357,590058,459014,524381,524317,589978,459030,524413,524349,590042,459022,524397,524333,590010,524301,524429,524365,590074,459009,524371,524307,524571,459025,524403,524339,590022,459017,524387,524323,589990,524291,524419,524355,590054,459013,524379,524315,589974,459029,524411,524347,590038,459021,524395,524331,590006,524299,524427,524363,590070,459011,524375,524311,524575,459027,524407,524343,590030,459019,524391,524327,589998,524295,524423,524359,590062,459015,524383,524319,589982,459031,524415,524351,590046,459023,524399,524335,590014,524303,524431,524367,590078,459008,524368,524304,524568,459024,524400,524336,590017,459016,524384,524320,589985,524288,524416,524352,590049,459012,524376,524312,589969,459028,524408,524344,590033,459020,524392,524328,590001,524296,524424,524360,590065,459010,524372,524308,524572,459026,524404,524340,590025,459018,524388,524324,589993,524292,524420,524356,590057,459014,524380,524316,589977,459030,524412,524348,590041,459022,524396,524332,590009,524300,524428,524364,590073,459009,524370,524306,524570,459025,524402,524338,590021,459017,524386,524322,589989,524290,524418,524354,590053,459013,524378,524314,589973,459029,524410,524346,590037,459021,524394,524330,590005,524298,524426,524362,590069,459011,524374,524310,524574,459027,524406,524342,590029,459019,524390,524326,589997,524294,524422,524358,590061,459015,524382,524318,589981,459031,524414,524350,590045,459023,524398,524334,590013,524302,524430,524366,590077,459008,524369,524305,524569,459024,524401,524337,590019,459016,524385,524321,589987,524289,524417,524353,590051,459012,524377,524313,589971,459028,524409,524345,590035,459020,524393,524329,590003,524297,524425,524361,590067,459010,524373,524309,524573,459026,524405,524341,590027,459018,524389,524325,589995,524293,524421,524357,590059,459014,524381,524317,589979,459030,524413,524349,590043,459022,524397,524333,590011,524301,524429,524365,590075,459009,524371,524307,524571,459025,524403,524339,590023,459017,524387,524323,589991,524291,524419,524355,590055,459013,524379,524315,589975,459029,524411,524347,590039,459021,524395,524331,590007,524299,524427,524363,590071,459011,524375,524311,524575,459027,524407,524343,590031,459019,524391,524327,589999,524295,524423,524359,590063,459015,524383,524319,589983,459031,524415,524351,590047,459023,524399,524335,590015,524303,524431,524367,590079]),9],bi=[new Int32Array([327680,327696,327688,327704,327684,327700,327692,327708,327682,327698,327690,327706,327686,327702,327694,0,327681,327697,327689,327705,327685,327701,327693,327709,327683,327699,327691,327707,327687,327703,327695,0]),5];const mi=class extends li{constructor(e,t){super(t),this.stream=e;const A=e.getByte(),r=e.getByte();if(-1===A||-1===r)throw new Error(`Invalid header in flate stream: ${A}, ${r}`);if(8!==(15&A))throw new Error(`Unknown compression method in flate stream: ${A}, ${r}`);if(((A<<8)+r)%31!==0)throw new Error(`Bad FCHECK in flate stream: ${A}, ${r}`);if(32&r)throw new Error(`FDICT bit set in flate stream: ${A}, ${r}`);this.codeSize=0,this.codeBuf=0}readBlock(){let e,t;const A=this.stream;let r,n,s=this.getBits(3);if(1&s&&(this.eof=!0),s>>=1,0===s){let t;if(-1===(t=A.getByte()))throw new Error("Bad block header in flate stream");let r=t;if(-1===(t=A.getByte()))throw new Error("Bad block header in flate stream");if(r|=t<<8,-1===(t=A.getByte()))throw new Error("Bad block header in flate stream");let n=t;if(-1===(t=A.getByte()))throw new Error("Bad block header in flate stream");if(n|=t<<8,n!==(65535&~r)&&(0!==r||0!==n))throw new Error("Bad uncompressed block length in flate stream");this.codeBuf=0,this.codeSize=0;const s=this.bufferLength;e=this.ensureBuffer(s+r);const i=s+r;if(this.bufferLength=i,0===r)-1===A.peekByte()&&(this.eof=!0);else for(let o=s;o<i;++o){if(-1===(t=A.getByte())){this.eof=!0;break}e[o]=t}return}if(1===s)r=pi,n=bi;else{if(2!==s)throw new Error("Unknown block type in flate stream");{const e=this.getBits(5)+257,A=this.getBits(5)+1,s=this.getBits(4)+4,i=new Uint8Array(fi.length);let o;for(o=0;o<s;++o)i[fi[o]]=this.getBits(3);const a=this.generateHuffmanTable(i);t=0,o=0;const l=e+A,u=new Uint8Array(l);let c,d,f;for(;o<l;){const e=this.getCode(a);if(16===e)c=2,d=3,f=t;else if(17===e)c=3,d=3,f=t=0;else{if(18!==e){u[o++]=t=e;continue}c=7,d=11,f=t=0}let A=this.getBits(c)+d;for(;A-- >0;)u[o++]=f}r=this.generateHuffmanTable(u.subarray(0,e)),n=this.generateHuffmanTable(u.subarray(e,l))}}e=this.buffer;let i=e?e.length:0,o=this.bufferLength;for(;;){let A=this.getCode(r);if(A<256){o+1>=i&&(e=this.ensureBuffer(o+1),i=e.length),e[o++]=A;continue}if(256===A)return void(this.bufferLength=o);A-=257,A=hi[A];let s=A>>16;s>0&&(s=this.getBits(s)),t=(65535&A)+s,A=this.getCode(n),A=gi[A],s=A>>16,s>0&&(s=this.getBits(s));const a=(65535&A)+s;o+t>=i&&(e=this.ensureBuffer(o+t),i=e.length);for(let r=0;r<t;++r,++o)e[o]=e[o-a]}}getBits(e){const t=this.stream;let A,r=this.codeSize,n=this.codeBuf;for(;r<e;){if(-1===(A=t.getByte()))throw new Error("Bad encoding in flate stream");n|=A<<r,r+=8}return A=n&(1<<e)-1,this.codeBuf=n>>e,this.codeSize=r-=e,A}getCode(e){const t=this.stream,A=e[0],r=e[1];let n,s=this.codeSize,i=this.codeBuf;for(;s<r&&-1!==(n=t.getByte());)i|=n<<s,s+=8;const o=A[i&(1<<r)-1];"number"===typeof A&&console.log("FLATE:",o);const a=o>>16,l=65535&o;if(a<1||s<a)throw new Error("Bad encoding in flate stream");return this.codeBuf=i>>a,this.codeSize=s-a,l}generateHuffmanTable(e){const t=e.length;let A,r=0;for(A=0;A<t;++A)e[A]>r&&(r=e[A]);const n=1<<r,s=new Int32Array(n);for(let i=1,o=0,a=2;i<=r;++i,o<<=1,a<<=1)for(let r=0;r<t;++r)if(e[r]===i){let e=0,t=o;for(A=0;A<i;++A)e=e<<1|1&t,t>>=1;for(A=e;A<n;A+=a)s[A]=i<<16|r;++o}return[s,r]}};const vi=class extends li{constructor(e,t,A){super(t),this.stream=e,this.cachedData=0,this.bitsCached=0;const r=4096,n={earlyChange:A,codeLength:9,nextCode:258,dictionaryValues:new Uint8Array(r),dictionaryLengths:new Uint16Array(r),dictionaryPrevCodes:new Uint16Array(r),currentSequence:new Uint8Array(r),currentSequenceLength:0};for(let s=0;s<256;++s)n.dictionaryValues[s]=s,n.dictionaryLengths[s]=1;this.lzwState=n}readBlock(){let e=1024;let t,A,r;const n=this.lzwState;if(!n)return;const s=n.earlyChange;let i=n.nextCode;const o=n.dictionaryValues,a=n.dictionaryLengths,l=n.dictionaryPrevCodes;let u=n.codeLength,c=n.prevCode;const d=n.currentSequence;let f=n.currentSequenceLength,h=0,g=this.bufferLength,p=this.ensureBuffer(this.bufferLength+e);for(t=0;t<512;t++){const t=this.readBits(u),n=f>0;if(!t||t<256)d[0]=t,f=1;else{if(!(t>=258)){if(256===t){u=9,i=258,f=0;continue}this.eof=!0,delete this.lzwState;break}if(t<i)for(f=a[t],A=f-1,r=t;A>=0;A--)d[A]=o[r],r=l[r];else d[f++]=d[0]}if(n&&(l[i]=c,a[i]=a[c]+1,o[i]=d[0],i++,u=i+s&i+s-1?u:0|Math.min(Math.log(i+s)/.6931471805599453+1,12)),c=t,h+=f,e<h){do{e+=512}while(e<h);p=this.ensureBuffer(this.bufferLength+e)}for(A=0;A<f;A++)p[g++]=d[A]}n.nextCode=i,n.codeLength=u,n.prevCode=c,n.currentSequenceLength=f,this.bufferLength=g}readBits(e){let t=this.bitsCached,A=this.cachedData;for(;t<e;){const e=this.stream.getByte();if(-1===e)return this.eof=!0,null;A=A<<8|e,t+=8}return this.bitsCached=t-=e,this.cachedData=A,A>>>t&(1<<e)-1}};const yi=class extends li{constructor(e,t){super(t),this.stream=e}readBlock(){const e=this.stream.getBytes(2);if(!e||e.length<2||128===e[0])return void(this.eof=!0);let t,A=this.bufferLength,r=e[0];if(r<128){if(t=this.ensureBuffer(A+r+1),t[A++]=e[1],r>0){const e=this.stream.getBytes(r);t.set(e,A),A+=r}}else{r=257-r;const n=e[1];t=this.ensureBuffer(A+r+1);for(let e=0;e<r;e++)t[A++]=n}this.bufferLength=A}},wi=(e,t,A)=>{if(t===jn.of("FlateDecode"))return new mi(e);if(t===jn.of("LZWDecode")){let t=1;if(A instanceof Vn){const e=A.lookup(jn.of("EarlyChange"));e instanceof In&&(t=e.asNumber())}return new vi(e,void 0,t)}if(t===jn.of("ASCII85Decode"))return new ci(e);if(t===jn.of("ASCIIHexDecode"))return new di(e);if(t===jn.of("RunLengthDecode"))return new yi(e);throw new _r(t.asString())},Bi=e=>{let{dict:t,contents:A,transform:r}=e,n=new oi(A);r&&(n=r.createStream(n,A.length));const s=t.lookup(jn.of("Filter")),i=t.lookup(jn.of("DecodeParms"));if(s instanceof jn)n=wi(n,s,i);else if(s instanceof kn)for(let o=0,a=s.size();o<a;o++)n=wi(n,s.lookup(o,jn),i&&i.lookupMaybe(o,Vn));else if(s)throw new Jr([jn,kn],s);return n};class xi{constructor(e,t,A){this.page=e;const r=null!==t&&void 0!==t?t:(e=>{const t=e.MediaBox();return{left:0,bottom:0,right:t.lookup(2,In).asNumber()-t.lookup(0,In).asNumber(),top:t.lookup(3,In).asNumber()-t.lookup(1,In).asNumber()}})(e);this.width=r.right-r.left,this.height=r.top-r.bottom,this.boundingBox=r,this.transformationMatrix=null!==A&&void 0!==A?A:(e=>[1,0,0,1,-e.left,-e.bottom])(r)}static async for(e,t,A){return new xi(e,t,A)}async embedIntoContext(e,t){const{Contents:A,Resources:r}=this.page.normalizedEntries();if(!A)throw new tn;const n=this.decodeContents(A),{left:s,bottom:i,right:o,top:a}=this.boundingBox,l=e.flateStream(n,{Type:"XObject",Subtype:"Form",FormType:1,BBox:[s,i,o,a],Matrix:this.transformationMatrix,Resources:r});return t?(e.assign(t,l),t):e.register(l)}decodeContents(e){const t=Uint8Array.of(En.Newline),A=[];for(let r=0,n=e.size();r<n;r++){const n=e.lookup(r,On);let s;if(n instanceof Hn)s=Bi(n).decode();else{if(!(n instanceof ss))throw new An(n);s=n.getUnencodedContents()}A.push(s,t)}return IA(...A)}}const Ci=xi,Ei=(e,t)=>{if(void 0!==e)return t[e]};var Ni,Di,Qi,Pi;!function(e){e.UseNone="UseNone",e.UseOutlines="UseOutlines",e.UseThumbs="UseThumbs",e.UseOC="UseOC"}(Ni||(Ni={})),function(e){e.L2R="L2R",e.R2L="R2L"}(Di||(Di={})),function(e){e.None="None",e.AppDefault="AppDefault"}(Qi||(Qi={})),function(e){e.Simplex="Simplex",e.DuplexFlipShortEdge="DuplexFlipShortEdge",e.DuplexFlipLongEdge="DuplexFlipLongEdge"}(Pi||(Pi={}));class Ii{constructor(e){this.dict=e}lookupBool(e){const t=this.dict.lookup(jn.of(e));if(t instanceof Sn)return t}lookupName(e){const t=this.dict.lookup(jn.of(e));if(t instanceof jn)return t}HideToolbar(){return this.lookupBool("HideToolbar")}HideMenubar(){return this.lookupBool("HideMenubar")}HideWindowUI(){return this.lookupBool("HideWindowUI")}FitWindow(){return this.lookupBool("FitWindow")}CenterWindow(){return this.lookupBool("CenterWindow")}DisplayDocTitle(){return this.lookupBool("DisplayDocTitle")}NonFullScreenPageMode(){return this.lookupName("NonFullScreenPageMode")}Direction(){return this.lookupName("Direction")}PrintScaling(){return this.lookupName("PrintScaling")}Duplex(){return this.lookupName("Duplex")}PickTrayByPDFSize(){return this.lookupBool("PickTrayByPDFSize")}PrintPageRange(){const e=this.dict.lookup(jn.of("PrintPageRange"));if(e instanceof kn)return e}NumCopies(){const e=this.dict.lookup(jn.of("NumCopies"));if(e instanceof In)return e}getHideToolbar(){var e,t;return null!==(t=null===(e=this.HideToolbar())||void 0===e?void 0:e.asBoolean())&&void 0!==t&&t}getHideMenubar(){var e,t;return null!==(t=null===(e=this.HideMenubar())||void 0===e?void 0:e.asBoolean())&&void 0!==t&&t}getHideWindowUI(){var e,t;return null!==(t=null===(e=this.HideWindowUI())||void 0===e?void 0:e.asBoolean())&&void 0!==t&&t}getFitWindow(){var e,t;return null!==(t=null===(e=this.FitWindow())||void 0===e?void 0:e.asBoolean())&&void 0!==t&&t}getCenterWindow(){var e,t;return null!==(t=null===(e=this.CenterWindow())||void 0===e?void 0:e.asBoolean())&&void 0!==t&&t}getDisplayDocTitle(){var e,t;return null!==(t=null===(e=this.DisplayDocTitle())||void 0===e?void 0:e.asBoolean())&&void 0!==t&&t}getNonFullScreenPageMode(){var e,t;const A=null===(e=this.NonFullScreenPageMode())||void 0===e?void 0:e.decodeText();return null!==(t=Ei(A,Ni))&&void 0!==t?t:Ni.UseNone}getReadingDirection(){var e,t;const A=null===(e=this.Direction())||void 0===e?void 0:e.decodeText();return null!==(t=Ei(A,Di))&&void 0!==t?t:Di.L2R}getPrintScaling(){var e,t;const A=null===(e=this.PrintScaling())||void 0===e?void 0:e.decodeText();return null!==(t=Ei(A,Qi))&&void 0!==t?t:Qi.AppDefault}getDuplex(){var e;const t=null===(e=this.Duplex())||void 0===e?void 0:e.decodeText();return Ei(t,Pi)}getPickTrayByPDFSize(){var e;return null===(e=this.PickTrayByPDFSize())||void 0===e?void 0:e.asBoolean()}getPrintPageRange(){const e=this.PrintPageRange();if(!e)return[];const t=[];for(let A=0;A<e.size();A+=2){const r=e.lookup(A,In).asNumber(),n=e.lookup(A+1,In).asNumber();t.push({start:r,end:n})}return t}getNumCopies(){var e,t;return null!==(t=null===(e=this.NumCopies())||void 0===e?void 0:e.asNumber())&&void 0!==t?t:1}setHideToolbar(e){const t=this.dict.context.obj(e);this.dict.set(jn.of("HideToolbar"),t)}setHideMenubar(e){const t=this.dict.context.obj(e);this.dict.set(jn.of("HideMenubar"),t)}setHideWindowUI(e){const t=this.dict.context.obj(e);this.dict.set(jn.of("HideWindowUI"),t)}setFitWindow(e){const t=this.dict.context.obj(e);this.dict.set(jn.of("FitWindow"),t)}setCenterWindow(e){const t=this.dict.context.obj(e);this.dict.set(jn.of("CenterWindow"),t)}setDisplayDocTitle(e){const t=this.dict.context.obj(e);this.dict.set(jn.of("DisplayDocTitle"),t)}setNonFullScreenPageMode(e){Lr(e,"nonFullScreenPageMode",Ni);const t=jn.of(e);this.dict.set(jn.of("NonFullScreenPageMode"),t)}setReadingDirection(e){Lr(e,"readingDirection",Di);const t=jn.of(e);this.dict.set(jn.of("Direction"),t)}setPrintScaling(e){Lr(e,"printScaling",Qi);const t=jn.of(e);this.dict.set(jn.of("PrintScaling"),t)}setDuplex(e){Lr(e,"duplex",Pi);const t=jn.of(e);this.dict.set(jn.of("Duplex"),t)}setPickTrayByPDFSize(e){const t=this.dict.context.obj(e);this.dict.set(jn.of("PickTrayByPDFSize"),t)}setPrintPageRange(e){Array.isArray(e)||(e=[e]);const t=[];for(let r=0,n=e.length;r<n;r++)t.push(e[r].start),t.push(e[r].end);Mr(t,"printPageRange",["number"]);const A=this.dict.context.obj(t);this.dict.set(jn.of("PrintPageRange"),A)}setNumCopies(e){zr(e,"numCopies",1,Number.MAX_VALUE),Tr(e,"numCopies");const t=this.dict.context.obj(e);this.dict.set(jn.of("NumCopies"),t)}}Ii.fromDict=e=>new Ii(e),Ii.create=e=>{const t=e.obj({});return new Ii(t)};const Li=Ii,ki=/\/([^\0\t\n\f\r\ ]+)[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]+Tf/;class Gi{constructor(e,t){this.dict=e,this.ref=t}T(){return this.dict.lookupMaybe(jn.of("T"),Rs,ks)}Ff(){const e=this.getInheritableAttribute(jn.of("Ff"));return this.dict.context.lookupMaybe(e,In)}V(){const e=this.getInheritableAttribute(jn.of("V"));return this.dict.context.lookup(e)}Kids(){return this.dict.lookupMaybe(jn.of("Kids"),kn)}DA(){const e=this.dict.lookup(jn.of("DA"));if(e instanceof Rs||e instanceof ks)return e}setKids(e){this.dict.set(jn.of("Kids"),this.dict.context.obj(e))}getParent(){const e=this.dict.get(jn.of("Parent"));if(e instanceof _n){const t=this.dict.lookup(jn.of("Parent"),Vn);return new Gi(t,e)}}setParent(e){e?this.dict.set(jn.of("Parent"),e):this.dict.delete(jn.of("Parent"))}getFullyQualifiedName(){const e=this.getParent();return e?`${e.getFullyQualifiedName()}.${this.getPartialName()}`:this.getPartialName()}getPartialName(){var e;return null===(e=this.T())||void 0===e?void 0:e.decodeText()}setPartialName(e){e?this.dict.set(jn.of("T"),ks.fromText(e)):this.dict.delete(jn.of("T"))}setDefaultAppearance(e){this.dict.set(jn.of("DA"),Rs.of(e))}getDefaultAppearance(){const e=this.DA();return e instanceof ks?e.decodeText():null===e||void 0===e?void 0:e.asString()}setFontSize(e){var t;const A=null!==(t=this.getFullyQualifiedName())&&void 0!==t?t:"",r=this.getDefaultAppearance();if(!r)throw new dn(A);const n=DA(r,ki);if(!n.match)throw new fn(A);const s=r.slice(0,n.pos-n.match[0].length),i=n.pos<=r.length?r.slice(n.pos):"",o=`${s} /${n.match[1]} ${e} Tf ${i}`;this.setDefaultAppearance(o)}getFlags(){var e,t;return null!==(t=null===(e=this.Ff())||void 0===e?void 0:e.asNumber())&&void 0!==t?t:0}setFlags(e){this.dict.set(jn.of("Ff"),In.of(e))}hasFlag(e){return 0!==(this.getFlags()&e)}setFlag(e){const t=this.getFlags();this.setFlags(t|e)}clearFlag(e){const t=this.getFlags();this.setFlags(t&~e)}setFlagTo(e,t){t?this.setFlag(e):this.clearFlag(e)}getInheritableAttribute(e){let t;return this.ascend((A=>{t||(t=A.dict.get(e))})),t}ascend(e){e(this);const t=this.getParent();t&&t.ascend(e)}}const Fi=Gi;class Si{constructor(e){this.dict=e}W(){const e=this.dict.lookup(jn.of("W"));if(e instanceof In)return e}getWidth(){var e,t;return null!==(t=null===(e=this.W())||void 0===e?void 0:e.asNumber())&&void 0!==t?t:1}setWidth(e){const t=this.dict.context.obj(e);this.dict.set(jn.of("W"),t)}}Si.fromDict=e=>new Si(e);const Wi=Si;class Zi{constructor(e){this.dict=e}Rect(){return this.dict.lookup(jn.of("Rect"),kn)}AP(){return this.dict.lookupMaybe(jn.of("AP"),Vn)}F(){const e=this.dict.lookup(jn.of("F"));return this.dict.context.lookupMaybe(e,In)}getRectangle(){var e;const t=this.Rect();return null!==(e=null===t||void 0===t?void 0:t.asRectangle())&&void 0!==e?e:{x:0,y:0,width:0,height:0}}setRectangle(e){const{x:t,y:A,width:r,height:n}=e,s=this.dict.context.obj([t,A,t+r,A+n]);this.dict.set(jn.of("Rect"),s)}getAppearanceState(){const e=this.dict.lookup(jn.of("AS"));if(e instanceof jn)return e}setAppearanceState(e){this.dict.set(jn.of("AS"),e)}setAppearances(e){this.dict.set(jn.of("AP"),e)}ensureAP(){let e=this.AP();return e||(e=this.dict.context.obj({}),this.dict.set(jn.of("AP"),e)),e}getNormalAppearance(){const e=this.ensureAP().get(jn.of("N"));if(e instanceof _n||e instanceof Vn)return e;throw new Error(`Unexpected N type: ${null===e||void 0===e?void 0:e.constructor.name}`)}setNormalAppearance(e){this.ensureAP().set(jn.of("N"),e)}setRolloverAppearance(e){this.ensureAP().set(jn.of("R"),e)}setDownAppearance(e){this.ensureAP().set(jn.of("D"),e)}removeRolloverAppearance(){const e=this.AP();null===e||void 0===e||e.delete(jn.of("R"))}removeDownAppearance(){const e=this.AP();null===e||void 0===e||e.delete(jn.of("D"))}getAppearances(){const e=this.AP();if(!e)return;return{normal:e.lookup(jn.of("N"),Vn,On),rollover:e.lookupMaybe(jn.of("R"),Vn,On),down:e.lookupMaybe(jn.of("D"),Vn,On)}}getFlags(){var e,t;return null!==(t=null===(e=this.F())||void 0===e?void 0:e.asNumber())&&void 0!==t?t:0}setFlags(e){this.dict.set(jn.of("F"),In.of(e))}hasFlag(e){return 0!==(this.getFlags()&e)}setFlag(e){const t=this.getFlags();this.setFlags(t|e)}clearFlag(e){const t=this.getFlags();this.setFlags(t&~e)}setFlagTo(e,t){t?this.setFlag(e):this.clearFlag(e)}}Zi.fromDict=e=>new Zi(e);const Xi=Zi;class Mi{constructor(e){this.dict=e}R(){const e=this.dict.lookup(jn.of("R"));if(e instanceof In)return e}BC(){const e=this.dict.lookup(jn.of("BC"));if(e instanceof kn)return e}BG(){const e=this.dict.lookup(jn.of("BG"));if(e instanceof kn)return e}CA(){const e=this.dict.lookup(jn.of("CA"));if(e instanceof ks||e instanceof Rs)return e}RC(){const e=this.dict.lookup(jn.of("RC"));if(e instanceof ks||e instanceof Rs)return e}AC(){const e=this.dict.lookup(jn.of("AC"));if(e instanceof ks||e instanceof Rs)return e}getRotation(){var e;return null===(e=this.R())||void 0===e?void 0:e.asNumber()}getBorderColor(){const e=this.BC();if(!e)return;const t=[];for(let A=0,r=null===e||void 0===e?void 0:e.size();A<r;A++){const r=e.get(A);r instanceof In&&t.push(r.asNumber())}return t}getBackgroundColor(){const e=this.BG();if(!e)return;const t=[];for(let A=0,r=null===e||void 0===e?void 0:e.size();A<r;A++){const r=e.get(A);r instanceof In&&t.push(r.asNumber())}return t}getCaptions(){const e=this.CA(),t=this.RC(),A=this.AC();return{normal:null===e||void 0===e?void 0:e.decodeText(),rollover:null===t||void 0===t?void 0:t.decodeText(),down:null===A||void 0===A?void 0:A.decodeText()}}setRotation(e){const t=this.dict.context.obj(e);this.dict.set(jn.of("R"),t)}setBorderColor(e){const t=this.dict.context.obj(e);this.dict.set(jn.of("BC"),t)}setBackgroundColor(e){const t=this.dict.context.obj(e);this.dict.set(jn.of("BG"),t)}setCaptions(e){const t=ks.fromText(e.normal);if(this.dict.set(jn.of("CA"),t),e.rollover){const t=ks.fromText(e.rollover);this.dict.set(jn.of("RC"),t)}else this.dict.delete(jn.of("RC"));if(e.down){const t=ks.fromText(e.down);this.dict.set(jn.of("AC"),t)}else this.dict.delete(jn.of("AC"))}}Mi.fromDict=e=>new Mi(e);const zi=Mi;class Ri extends Xi{MK(){const e=this.dict.lookup(jn.of("MK"));if(e instanceof Vn)return e}BS(){const e=this.dict.lookup(jn.of("BS"));if(e instanceof Vn)return e}DA(){const e=this.dict.lookup(jn.of("DA"));if(e instanceof Rs||e instanceof ks)return e}P(){const e=this.dict.get(jn.of("P"));if(e instanceof _n)return e}setP(e){this.dict.set(jn.of("P"),e)}setDefaultAppearance(e){this.dict.set(jn.of("DA"),Rs.of(e))}getDefaultAppearance(){const e=this.DA();return e instanceof ks?e.decodeText():null===e||void 0===e?void 0:e.asString()}getAppearanceCharacteristics(){const e=this.MK();if(e)return zi.fromDict(e)}getOrCreateAppearanceCharacteristics(){const e=this.MK();if(e)return zi.fromDict(e);const t=zi.fromDict(this.dict.context.obj({}));return this.dict.set(jn.of("MK"),t.dict),t}getBorderStyle(){const e=this.BS();if(e)return Wi.fromDict(e)}getOrCreateBorderStyle(){const e=this.BS();if(e)return Wi.fromDict(e);const t=Wi.fromDict(this.dict.context.obj({}));return this.dict.set(jn.of("BS"),t.dict),t}getOnValue(){var e;const t=null===(e=this.getAppearances())||void 0===e?void 0:e.normal;if(t instanceof Vn){const e=t.keys();for(let t=0,A=e.length;t<A;t++){const A=e[t];if(A!==jn.of("Off"))return A}}}}Ri.fromDict=e=>new Ri(e),Ri.create=(e,t)=>{const A=e.obj({Type:"Annot",Subtype:"Widget",Rect:[0,0,0,0],Parent:t});return new Ri(A)};const ji=Ri;class Ti extends Fi{FT(){const e=this.getInheritableAttribute(jn.of("FT"));return this.dict.context.lookup(e,jn)}getWidgets(){const e=this.Kids();if(!e)return[ji.fromDict(this.dict)];const t=new Array(e.size());for(let A=0,r=e.size();A<r;A++){const r=e.lookup(A,Vn);t[A]=ji.fromDict(r)}return t}addWidget(e){const{Kids:t}=this.normalizedEntries();t.push(e)}removeWidget(e){const t=this.Kids();if(t){if(e<0||e>t.size())throw new ln(e,0,t.size());t.remove(e)}else{if(0!==e)throw new ln(e,0,0);this.setKids([])}}normalizedEntries(){let e=this.Kids();return e||(e=this.dict.context.obj([this.ref]),this.dict.set(jn.of("Kids"),e)),{Kids:e}}}Ti.fromDict=(e,t)=>new Ti(e,t);const Ui=Ti;const Vi=class extends Ui{Opt(){return this.dict.lookupMaybe(jn.of("Opt"),Rs,ks,kn)}setOpt(e){this.dict.set(jn.of("Opt"),this.dict.context.obj(e))}getExportValues(){const e=this.Opt();if(!e)return;if(e instanceof Rs||e instanceof ks)return[e];const t=[];for(let A=0,r=e.size();A<r;A++){const r=e.lookup(A);(r instanceof Rs||r instanceof ks)&&t.push(r)}return t}removeExportValue(e){const t=this.Opt();if(t)if(t instanceof Rs||t instanceof ks){if(0!==e)throw new ln(e,0,0);this.setOpt([])}else{if(e<0||e>t.size())throw new ln(e,0,t.size());t.remove(e)}}normalizeExportValues(){var e,t,A,r;const n=null!==(e=this.getExportValues())&&void 0!==e?e:[],s=[],i=this.getWidgets();for(let o=0,a=i.length;o<a;o++){const e=i[o],a=null!==(t=n[o])&&void 0!==t?t:ks.fromText(null!==(r=null===(A=e.getOnValue())||void 0===A?void 0:A.decodeText())&&void 0!==r?r:"");s.push(a)}this.setOpt(s)}addOpt(e,t){var A;this.normalizeExportValues();const r=e.decodeText();let n;if(t){const e=null!==(A=this.getExportValues())&&void 0!==A?A:[];for(let t=0,A=e.length;t<A;t++){e[t].decodeText()===r&&(n=t)}}const s=this.Opt();return s.push(e),null!==n&&void 0!==n?n:s.size()-1}addWidgetWithOpt(e,t,A){const r=this.addOpt(t,A),n=jn.of(String(r));return this.addWidget(e),n}};class Oi extends Vi{setValue(e){var t;if(e!==(null!==(t=this.getOnValue())&&void 0!==t?t:jn.of("Yes"))&&e!==jn.of("Off"))throw new un;this.dict.set(jn.of("V"),e);const A=this.getWidgets();for(let r=0,n=A.length;r<n;r++){const t=A[r],n=t.getOnValue()===e?e:jn.of("Off");t.setAppearanceState(n)}}getValue(){const e=this.V();return e instanceof jn?e:jn.of("Off")}getOnValue(){const[e]=this.getWidgets();return null===e||void 0===e?void 0:e.getOnValue()}}Oi.fromDict=(e,t)=>new Oi(e,t),Oi.create=e=>{const t=e.obj({FT:"Btn",Kids:[]}),A=e.register(t);return new Oi(t,A)};const Yi=Oi,Hi=e=>1<<e;var Ki,qi,Ji,_i;!function(e){e[e.ReadOnly=Hi(0)]="ReadOnly",e[e.Required=Hi(1)]="Required",e[e.NoExport=Hi(2)]="NoExport"}(Ki||(Ki={})),function(e){e[e.NoToggleToOff=Hi(14)]="NoToggleToOff",e[e.Radio=Hi(15)]="Radio",e[e.PushButton=Hi(16)]="PushButton",e[e.RadiosInUnison=Hi(25)]="RadiosInUnison"}(qi||(qi={})),function(e){e[e.Multiline=Hi(12)]="Multiline",e[e.Password=Hi(13)]="Password",e[e.FileSelect=Hi(20)]="FileSelect",e[e.DoNotSpellCheck=Hi(22)]="DoNotSpellCheck",e[e.DoNotScroll=Hi(23)]="DoNotScroll",e[e.Comb=Hi(24)]="Comb",e[e.RichText=Hi(25)]="RichText"}(Ji||(Ji={})),function(e){e[e.Combo=Hi(17)]="Combo",e[e.Edit=Hi(18)]="Edit",e[e.Sort=Hi(19)]="Sort",e[e.MultiSelect=Hi(21)]="MultiSelect",e[e.DoNotSpellCheck=Hi(22)]="DoNotSpellCheck",e[e.CommitOnSelChange=Hi(26)]="CommitOnSelChange"}(_i||(_i={}));const $i=class extends Ui{setValues(e){if(this.hasFlag(_i.Combo)&&!this.hasFlag(_i.Edit)&&!this.valuesAreValid(e))throw new un;if(0===e.length&&this.dict.delete(jn.of("V")),1===e.length&&this.dict.set(jn.of("V"),e[0]),e.length>1){if(!this.hasFlag(_i.MultiSelect))throw new cn;this.dict.set(jn.of("V"),this.dict.context.obj(e))}this.updateSelectedIndices(e)}valuesAreValid(e){const t=this.getOptions();for(let A=0,r=e.length;A<r;A++){const r=e[A].decodeText();if(!t.find((e=>r===(e.display||e.value).decodeText())))return!1}return!0}updateSelectedIndices(e){if(e.length>1){const t=new Array(e.length),A=this.getOptions();for(let r=0,n=e.length;r<n;r++){const n=e[r].decodeText();t[r]=A.findIndex((e=>n===(e.display||e.value).decodeText()))}this.dict.set(jn.of("I"),this.dict.context.obj(t.sort()))}else this.dict.delete(jn.of("I"))}getValues(){const e=this.V();if(e instanceof Rs||e instanceof ks)return[e];if(e instanceof kn){const t=[];for(let A=0,r=e.size();A<r;A++){const r=e.lookup(A);(r instanceof Rs||r instanceof ks)&&t.push(r)}return t}return[]}Opt(){return this.dict.lookupMaybe(jn.of("Opt"),Rs,ks,kn)}setOptions(e){const t=new Array(e.length);for(let A=0,r=e.length;A<r;A++){const{value:r,display:n}=e[A];t[A]=this.dict.context.obj([r,n||r])}this.dict.set(jn.of("Opt"),this.dict.context.obj(t))}getOptions(){const e=this.Opt();if(e instanceof Rs||e instanceof ks)return[{value:e,display:e}];if(e instanceof kn){const t=[];for(let A=0,r=e.size();A<r;A++){const r=e.lookup(A);if((r instanceof Rs||r instanceof ks)&&t.push({value:r,display:r}),r instanceof kn&&r.size()>0){const e=r.lookup(0,Rs,ks),A=r.lookupMaybe(1,Rs,ks);t.push({value:e,display:A||e})}}return t}return[]}};class eo extends $i{}eo.fromDict=(e,t)=>new eo(e,t),eo.create=e=>{const t=e.obj({FT:"Ch",Ff:_i.Combo,Kids:[]}),A=e.register(t);return new eo(t,A)};const to=eo;class Ao extends Fi{addField(e){const{Kids:t}=this.normalizedEntries();null===t||void 0===t||t.push(e)}normalizedEntries(){let e=this.Kids();return e||(e=this.dict.context.obj([]),this.dict.set(jn.of("Kids"),e)),{Kids:e}}}Ao.fromDict=(e,t)=>new Ao(e,t),Ao.create=e=>{const t=e.obj({}),A=e.register(t);return new Ao(t,A)};const ro=Ao;class no extends Ui{}no.fromDict=(e,t)=>new no(e,t);const so=no;class io extends Ui{MaxLen(){const e=this.dict.lookup(jn.of("MaxLen"));if(e instanceof In)return e}Q(){const e=this.dict.lookup(jn.of("Q"));if(e instanceof In)return e}setMaxLength(e){this.dict.set(jn.of("MaxLen"),In.of(e))}removeMaxLength(){this.dict.delete(jn.of("MaxLen"))}getMaxLength(){var e;return null===(e=this.MaxLen())||void 0===e?void 0:e.asNumber()}setQuadding(e){this.dict.set(jn.of("Q"),In.of(e))}getQuadding(){var e;return null===(e=this.Q())||void 0===e?void 0:e.asNumber()}setValue(e){this.dict.set(jn.of("V"),e)}removeValue(){this.dict.delete(jn.of("V"))}getValue(){const e=this.V();if(e instanceof Rs||e instanceof ks)return e}}io.fromDict=(e,t)=>new io(e,t),io.create=e=>{const t=e.obj({FT:"Tx",Kids:[]}),A=e.register(t);return new io(t,A)};const oo=io;class ao extends Vi{}ao.fromDict=(e,t)=>new ao(e,t),ao.create=e=>{const t=e.obj({FT:"Btn",Ff:qi.PushButton,Kids:[]}),A=e.register(t);return new ao(t,A)};const lo=ao;class uo extends Vi{setValue(e){if(!this.getOnValues().includes(e)&&e!==jn.of("Off"))throw new un;this.dict.set(jn.of("V"),e);const t=this.getWidgets();for(let A=0,r=t.length;A<r;A++){const r=t[A],n=r.getOnValue()===e?e:jn.of("Off");r.setAppearanceState(n)}}getValue(){const e=this.V();return e instanceof jn?e:jn.of("Off")}getOnValues(){const e=this.getWidgets(),t=[];for(let A=0,r=e.length;A<r;A++){const r=e[A].getOnValue();r&&t.push(r)}return t}}uo.fromDict=(e,t)=>new uo(e,t),uo.create=e=>{const t=e.obj({FT:"Btn",Ff:qi.Radio,Kids:[]}),A=e.register(t);return new uo(t,A)};const co=uo;class fo extends $i{}fo.fromDict=(e,t)=>new fo(e,t),fo.create=e=>{const t=e.obj({FT:"Ch",Kids:[]}),A=e.register(t);return new fo(t,A)};const ho=fo,go=e=>{if(!e)return[];const t=[];for(let A=0,r=e.size();A<r;A++){const r=e.get(A),n=e.lookup(A);r instanceof _n&&n instanceof Vn&&t.push([po(n,r),r])}return t},po=(e,t)=>bo(e)?ro.fromDict(e,t):mo(e,t),bo=e=>{const t=e.lookup(jn.of("Kids"));if(t instanceof kn)for(let A=0,r=t.size();A<r;A++){const e=t.lookup(A);if(e instanceof Vn&&e.has(jn.of("T")))return!0}return!1},mo=(e,t)=>{const A=Bo(e,jn.of("FT")),r=e.context.lookup(A,jn);return r===jn.of("Btn")?vo(e,t):r===jn.of("Ch")?yo(e,t):r===jn.of("Tx")?oo.fromDict(e,t):r===jn.of("Sig")?so.fromDict(e,t):Ui.fromDict(e,t)},vo=(e,t)=>{var A;const r=Bo(e,jn.of("Ff")),n=e.context.lookupMaybe(r,In),s=null!==(A=null===n||void 0===n?void 0:n.asNumber())&&void 0!==A?A:0;return wo(s,qi.PushButton)?lo.fromDict(e,t):wo(s,qi.Radio)?co.fromDict(e,t):Yi.fromDict(e,t)},yo=(e,t)=>{var A;const r=Bo(e,jn.of("Ff")),n=e.context.lookupMaybe(r,In),s=null!==(A=null===n||void 0===n?void 0:n.asNumber())&&void 0!==A?A:0;return wo(s,_i.Combo)?to.fromDict(e,t):ho.fromDict(e,t)},wo=(e,t)=>0!==(e&t),Bo=(e,t)=>{let A;return xo(e,(e=>{A||(A=e.get(t))})),A},xo=(e,t)=>{t(e);const A=e.lookupMaybe(jn.of("Parent"),Vn);A&&xo(A,t)};class Co{constructor(e){this.dict=e}Fields(){const e=this.dict.lookup(jn.of("Fields"));if(e instanceof kn)return e}getFields(){const{Fields:e}=this.normalizedEntries(),t=new Array(e.size());for(let A=0,r=e.size();A<r;A++){const r=e.get(A),n=e.lookup(A,Vn);t[A]=[po(n,r),r]}return t}getAllFields(){const e=[],t=A=>{if(A)for(let r=0,n=A.length;r<n;r++){const n=A[r];e.push(n);const[s]=n;s instanceof ro&&t(go(s.Kids()))}};return t(this.getFields()),e}addField(e){const{Fields:t}=this.normalizedEntries();null===t||void 0===t||t.push(e)}removeField(e){const t=e.getParent(),A=void 0===t?this.normalizedEntries().Fields:t.Kids(),r=null===A||void 0===A?void 0:A.indexOf(e.ref);if(void 0===A||void 0===r)throw new Error(`Tried to remove inexistent field ${e.getFullyQualifiedName()}`);A.remove(r),void 0!==t&&0===A.size()&&this.removeField(t)}normalizedEntries(){let e=this.Fields();return e||(e=this.dict.context.obj([]),this.dict.set(jn.of("Fields"),e)),{Fields:e}}}Co.fromDict=e=>new Co(e),Co.create=e=>{const t=e.obj({Fields:[]});return new Co(t)};const Eo=Co;class No extends Vn{Pages(){return this.lookup(jn.of("Pages"),Vn)}AcroForm(){return this.lookupMaybe(jn.of("AcroForm"),Vn)}getAcroForm(){const e=this.AcroForm();if(e)return Eo.fromDict(e)}getOrCreateAcroForm(){let e=this.getAcroForm();if(!e){e=Eo.create(this.context);const t=this.context.register(e.dict);this.set(jn.of("AcroForm"),t)}return e}ViewerPreferences(){return this.lookupMaybe(jn.of("ViewerPreferences"),Vn)}getViewerPreferences(){const e=this.ViewerPreferences();if(e)return Li.fromDict(e)}getOrCreateViewerPreferences(){let e=this.getViewerPreferences();if(!e){e=Li.create(this.context);const t=this.context.register(e.dict);this.set(jn.of("ViewerPreferences"),t)}return e}insertLeafNode(e,t){const A=this.get(jn.of("Pages"));return this.Pages().insertLeafNode(e,t)||A}removeLeafNode(e){this.Pages().removeLeafNode(e)}}No.withContextAndPages=(e,t)=>{const A=new Map;return A.set(jn.of("Type"),jn.of("Catalog")),A.set(jn.of("Pages"),t),new No(A,e)},No.fromMapWithContext=(e,t)=>new No(e,t);const Do=No;class Qo extends Vn{Parent(){return this.lookup(jn.of("Parent"))}Kids(){return this.lookup(jn.of("Kids"),kn)}Count(){return this.lookup(jn.of("Count"),In)}pushTreeNode(e){this.Kids().push(e)}pushLeafNode(e){const t=this.Kids();this.insertLeafKid(t.size(),e)}insertLeafNode(e,t){const A=this.Kids(),r=this.Count().asNumber();if(t>r)throw new on(t,r);let n=t;for(let s=0,i=A.size();s<i;s++){if(0===n)return void this.insertLeafKid(s,e);const t=A.get(s),r=this.context.lookup(t);if(r instanceof Qo){if(r.Count().asNumber()>n)return r.insertLeafNode(e,n)||t;n-=r.Count().asNumber()}r instanceof cs&&(n-=1)}if(0!==n)throw new an(t,"insertLeafNode");this.insertLeafKid(A.size(),e)}removeLeafNode(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const A=this.Kids(),r=this.Count().asNumber();if(e>=r)throw new on(e,r);let n=e;for(let s=0,i=A.size();s<i;s++){const e=A.get(s),r=this.context.lookup(e);if(r instanceof Qo){if(r.Count().asNumber()>n)return r.removeLeafNode(n,t),void(t&&0===r.Kids().size()&&A.remove(s));n-=r.Count().asNumber()}if(r instanceof cs){if(0===n)return void this.removeKid(s);n-=1}}throw new an(e,"removeLeafNode")}ascend(e){e(this);const t=this.Parent();t&&t.ascend(e)}traverse(e){const t=this.Kids();for(let A=0,r=t.size();A<r;A++){const r=t.get(A),n=this.context.lookup(r);n instanceof Qo&&n.traverse(e),e(n,r)}}insertLeafKid(e,t){const A=this.Kids();this.ascend((e=>{const t=e.Count().asNumber()+1;e.set(jn.of("Count"),In.of(t))})),A.insert(e,t)}removeKid(e){const t=this.Kids();t.lookup(e)instanceof cs&&this.ascend((e=>{const t=e.Count().asNumber()-1;e.set(jn.of("Count"),In.of(t))})),t.remove(e)}}Qo.withContext=(e,t)=>{const A=new Map;return A.set(jn.of("Type"),jn.of("Pages")),A.set(jn.of("Kids"),e.obj([])),A.set(jn.of("Count"),e.obj(0)),t&&A.set(jn.of("Parent"),t),new Qo(A,e)},Qo.fromMapWithContext=(e,t)=>new Qo(e,t);const Po=Qo,Io=new Uint8Array(256);Io[En.Zero]=1,Io[En.One]=1,Io[En.Two]=1,Io[En.Three]=1,Io[En.Four]=1,Io[En.Five]=1,Io[En.Six]=1,Io[En.Seven]=1,Io[En.Eight]=1,Io[En.Nine]=1;const Lo=new Uint8Array(256);Lo[En.Period]=1,Lo[En.Plus]=1,Lo[En.Minus]=1;const ko=new Uint8Array(256);for(let A=0,rF=256;A<rF;A++)ko[A]=Io[A]||Lo[A]?1:0;const{Newline:Go,CarriageReturn:Fo}=En;const So=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.bytes=e,this.capNumbers=t}parseRawInt(){let e="";for(;!this.bytes.done();){const t=this.bytes.peek();if(!Io[t])break;e+=lA(this.bytes.next())}const t=Number(e);if(!e||!isFinite(t))throw new hn(this.bytes.position(),e);return t}parseRawNumber(){let e="";for(;!this.bytes.done();){const t=this.bytes.peek();if(!ko[t])break;if(e+=lA(this.bytes.next()),t===En.Period)break}for(;!this.bytes.done();){const t=this.bytes.peek();if(!Io[t])break;e+=lA(this.bytes.next())}const t=Number(e);if(!e||!isFinite(t))throw new hn(this.bytes.position(),e);if(t>Number.MAX_SAFE_INTEGER){if(this.capNumbers){const t=`Parsed number that is too large for some PDF readers: ${e}, using Number.MAX_SAFE_INTEGER instead.`;return console.warn(t),Number.MAX_SAFE_INTEGER}{const t=`Parsed number that is too large for some PDF readers: ${e}, not capping.`;console.warn(t)}}return t}skipWhitespace(){for(;!this.bytes.done()&&Zn[this.bytes.peek()];)this.bytes.next()}skipLine(){for(;!this.bytes.done();){const e=this.bytes.peek();if(e===Go||e===Fo)return;this.bytes.next()}}skipComment(){if(this.bytes.peek()!==En.Percent)return!1;for(;!this.bytes.done();){const e=this.bytes.peek();if(e===Go||e===Fo)return!0;this.bytes.next()}return!0}skipWhitespaceAndComments(){for(this.skipWhitespace();this.skipComment();)this.skipWhitespace()}matchKeyword(e){const t=this.bytes.offset();for(let A=0,r=e.length;A<r;A++)if(this.bytes.done()||this.bytes.next()!==e[A])return this.bytes.moveTo(t),!1;return!0}};class Wo{constructor(e){this.idx=0,this.line=0,this.column=0,this.bytes=e,this.length=this.bytes.length}moveTo(e){this.idx=e}next(){const e=this.bytes[this.idx++];return e===En.Newline?(this.line+=1,this.column=0):this.column+=1,e}assertNext(e){if(this.peek()!==e)throw new pn(this.position(),e,this.peek());return this.next()}peek(){return this.bytes[this.idx]}peekAhead(e){return this.bytes[this.idx+e]}peekAt(e){return this.bytes[e]}done(){return this.idx>=this.length}offset(){return this.idx}slice(e,t){return this.bytes.slice(e,t)}position(){return{line:this.line,column:this.column,offset:this.idx}}}Wo.of=e=>new Wo(e),Wo.fromPDFRawStream=e=>Wo.of(Bi(e).decode());const Zo=Wo,{Space:Xo,CarriageReturn:Mo,Newline:zo}=En,Ro=[En.s,En.t,En.r,En.e,En.a,En.m],jo=[En.e,En.n,En.d,En.s,En.t,En.r,En.e,En.a,En.m],To={header:[En.Percent,En.P,En.D,En.F,En.Dash],eof:[En.Percent,En.Percent,En.E,En.O,En.F],obj:[En.o,En.b,En.j],endobj:[En.e,En.n,En.d,En.o,En.b,En.j],xref:[En.x,En.r,En.e,En.f],trailer:[En.t,En.r,En.a,En.i,En.l,En.e,En.r],startxref:[En.s,En.t,En.a,En.r,En.t,En.x,En.r,En.e,En.f],true:[En.t,En.r,En.u,En.e],false:[En.f,En.a,En.l,En.s,En.e],null:[En.n,En.u,En.l,En.l],stream:Ro,streamEOF1:[...Ro,Xo,Mo,zo],streamEOF2:[...Ro,Mo,zo],streamEOF3:[...Ro,Mo],streamEOF4:[...Ro,zo],endstream:jo,EOF1endstream:[Mo,zo,...jo],EOF2endstream:[Mo,...jo],EOF3endstream:[zo,...jo]};class Uo extends So{constructor(e,t){let A=arguments.length>3?arguments[3]:void 0;super(e,arguments.length>2&&void 0!==arguments[2]&&arguments[2]),this.context=t,this.cryptoFactory=A}parseObject(e){if(this.skipWhitespaceAndComments(),this.matchKeyword(To.true))return Sn.True;if(this.matchKeyword(To.false))return Sn.False;if(this.matchKeyword(To.null))return Tn;const t=this.bytes.peek();if(t===En.LessThan&&this.bytes.peekAhead(1)===En.LessThan)return this.parseDictOrStream(e);if(t===En.LessThan)return this.parseHexString(e);if(t===En.LeftParen)return this.parseString(e);if(t===En.ForwardSlash)return this.parseName();if(t===En.LeftSquareBracket)return this.parseArray(e);if(ko[t])return this.parseNumberOrRef();throw new bn(this.bytes.position(),t)}parseNumberOrRef(){const e=this.parseRawNumber();this.skipWhitespaceAndComments();const t=this.bytes.offset();if(Io[this.bytes.peek()]){const t=this.parseRawNumber();if(this.skipWhitespaceAndComments(),this.bytes.peek()===En.R)return this.bytes.assertNext(En.R),_n.of(e,t)}return this.bytes.moveTo(t),In.of(e)}parseHexString(e){let t="";for(this.bytes.assertNext(En.LessThan);!this.bytes.done()&&this.bytes.peek()!==En.GreaterThan;)t+=lA(this.bytes.next());if(this.bytes.assertNext(En.GreaterThan),this.cryptoFactory&&e){t=this.cryptoFactory.createCipherTransform(e.objectNumber,e.generationNumber).decryptBytes(ks.of(t).asBytes()).reduce(((e,t)=>e+t.toString(16).padStart(2,"0")),"")}return ks.of(t)}parseString(e){let t=0,A=!1,r="";for(;!this.bytes.done();){const n=this.bytes.next();if(r+=lA(n),A||(n===En.LeftParen&&(t+=1),n===En.RightParen&&(t-=1)),n===En.BackSlash?A=!A:A&&(A=!1),0===t){let t=r.substring(1,r.length-1);if(this.cryptoFactory&&e){t=this.cryptoFactory.createCipherTransform(e.objectNumber,e.generationNumber).decryptString(t)}return Rs.of(t)}}throw new yn(this.bytes.position())}parseName(){this.bytes.assertNext(En.ForwardSlash);let e="";for(;!this.bytes.done();){const t=this.bytes.peek();if(Zn[t]||Wn[t])break;e+=lA(t),this.bytes.next()}return jn.of(e)}parseArray(e){this.bytes.assertNext(En.LeftSquareBracket),this.skipWhitespaceAndComments();const t=kn.withContext(this.context);for(;this.bytes.peek()!==En.RightSquareBracket;){const A=this.parseObject(e);t.push(A),this.skipWhitespaceAndComments()}return this.bytes.assertNext(En.RightSquareBracket),t}parseDict(e){this.bytes.assertNext(En.LessThan),this.bytes.assertNext(En.LessThan),this.skipWhitespaceAndComments();const t=new Map;for(;!this.bytes.done()&&this.bytes.peek()!==En.GreaterThan&&this.bytes.peekAhead(1)!==En.GreaterThan;){const A=this.parseName(),r=this.parseObject(e);t.set(A,r),this.skipWhitespaceAndComments()}this.skipWhitespaceAndComments(),this.bytes.assertNext(En.GreaterThan),this.bytes.assertNext(En.GreaterThan);const A=t.get(jn.of("Type"));return A===jn.of("Catalog")?Do.fromMapWithContext(t,this.context):A===jn.of("Pages")?Po.fromMapWithContext(t,this.context):A===jn.of("Page")?cs.fromMapWithContext(t,this.context):Vn.fromMapWithContext(t,this.context)}parseDictOrStream(e){const t=this.bytes.position(),A=this.parseDict(e);if(this.skipWhitespaceAndComments(),!this.matchKeyword(To.streamEOF1)&&!this.matchKeyword(To.streamEOF2)&&!this.matchKeyword(To.streamEOF3)&&!this.matchKeyword(To.streamEOF4)&&!this.matchKeyword(To.stream))return A;const r=this.bytes.offset();let n;const s=A.get(jn.of("Length"));s instanceof In?(n=r+s.asNumber(),this.bytes.moveTo(n),this.skipWhitespaceAndComments(),this.matchKeyword(To.endstream)||(this.bytes.moveTo(r),n=this.findEndOfStreamFallback(t))):n=this.findEndOfStreamFallback(t);let i=this.bytes.slice(r,n);if(this.cryptoFactory&&e){i=this.cryptoFactory.createCipherTransform(e.objectNumber,e.generationNumber).decryptBytes(i)}return Hn.of(A,i)}findEndOfStreamFallback(e){let t=1,A=this.bytes.offset();for(;!this.bytes.done()&&(A=this.bytes.offset(),this.matchKeyword(To.stream)?t+=1:this.matchKeyword(To.EOF1endstream)||this.matchKeyword(To.EOF2endstream)||this.matchKeyword(To.EOF3endstream)||this.matchKeyword(To.endstream)?t-=1:this.bytes.next(),0!==t););if(0!==t)throw new vn(e);return A}}Uo.forBytes=(e,t,A)=>new Uo(Zo.of(e),t,A),Uo.forByteStream=function(e,t){return new Uo(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])};const Vo=Uo;class Oo extends Vo{constructor(e,t){super(Zo.fromPDFRawStream(e),e.dict.context);const{dict:A}=e;this.alreadyParsed=!1,this.shouldWaitForTick=t||(()=>!1),this.firstOffset=A.lookup(jn.of("First"),In).asNumber(),this.objectCount=A.lookup(jn.of("N"),In).asNumber()}async parseIntoContext(){if(this.alreadyParsed)throw new $r("PDFObjectStreamParser","parseIntoContext");this.alreadyParsed=!0;const e=this.parseOffsetsAndObjectNumbers();for(let t=0,A=e.length;t<A;t++){const{objectNumber:A,offset:r}=e[t];this.bytes.moveTo(this.firstOffset+r);const n=_n.of(A,0),s=this.parseObject(n);this.context.assign(n,s),this.shouldWaitForTick()&&await jA()}}parseOffsetsAndObjectNumbers(){const e=[];for(let t=0,A=this.objectCount;t<A;t++){this.skipWhitespaceAndComments();const t=this.parseRawInt();this.skipWhitespaceAndComments();const A=this.parseRawInt();e.push({objectNumber:t,offset:A})}return e}}Oo.forStream=(e,t)=>new Oo(e,t);const Yo=Oo;class Ho{constructor(e){this.alreadyParsed=!1,this.dict=e.dict,this.bytes=Zo.fromPDFRawStream(e),this.context=this.dict.context;const t=this.dict.lookup(jn.of("Size"),In),A=this.dict.lookup(jn.of("Index"));if(A instanceof kn){this.subsections=[];for(let e=0,t=A.size();e<t;e+=2){const t=A.lookup(e+0,In).asNumber(),r=A.lookup(e+1,In).asNumber();this.subsections.push({firstObjectNumber:t,length:r})}}else this.subsections=[{firstObjectNumber:0,length:t.asNumber()}];const r=this.dict.lookup(jn.of("W"),kn);this.byteWidths=[-1,-1,-1];for(let n=0,s=r.size();n<s;n++)this.byteWidths[n]=r.lookup(n,In).asNumber()}parseIntoContext(){if(this.alreadyParsed)throw new $r("PDFXRefStreamParser","parseIntoContext");this.alreadyParsed=!0,this.context.trailerInfo={Root:this.dict.get(jn.of("Root")),Encrypt:this.dict.get(jn.of("Encrypt")),Info:this.dict.get(jn.of("Info")),ID:this.dict.get(jn.of("ID"))};return this.parseEntries()}parseEntries(){const e=[],[t,A,r]=this.byteWidths;for(let n=0,s=this.subsections.length;n<s;n++){const{firstObjectNumber:s,length:i}=this.subsections[n];for(let n=0;n<i;n++){let i=0;for(let e=0,A=t;e<A;e++)i=i<<8|this.bytes.next();let o=0;for(let e=0,t=A;e<t;e++)o=o<<8|this.bytes.next();let a=0;for(let e=0,t=r;e<t;e++)a=a<<8|this.bytes.next();0===t&&(i=1);const l=s+n,u={ref:_n.of(l,a),offset:o,deleted:0===i,inObjectStream:2===i};e.push(u)}}return e}}Ho.forStream=e=>new Ho(e);const Ko=Ho;class qo extends Vo{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0,A=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],n=arguments.length>4?arguments[4]:void 0;super(Zo.of(e),ls.create(),r,n),this.alreadyParsed=!1,this.parsedObjects=0,this.shouldWaitForTick=()=>(this.parsedObjects+=1,this.parsedObjects%this.objectsPerTick===0),this.objectsPerTick=t,this.throwOnInvalidObject=A,this.context.isDecrypted=!!(null===n||void 0===n?void 0:n.encryptionKey)}async parseDocument(){if(this.alreadyParsed)throw new $r("PDFParser","parseDocument");let e;for(this.alreadyParsed=!0,this.context.header=this.parseHeader();!this.bytes.done();){await this.parseDocumentSection();const t=this.bytes.offset();if(t===e)throw new wn(this.bytes.position());e=t}return this.maybeRecoverRoot(),this.context.lookup(_n.of(0))&&(console.warn("Removing parsed object: 0 0 R"),this.context.delete(_n.of(0))),this.context}maybeRecoverRoot(){const e=e=>e instanceof Vn&&e.lookup(jn.of("Type"))===jn.of("Catalog");if(!e(this.context.lookup(this.context.trailerInfo.Root))){const t=this.context.enumerateIndirectObjects();for(let A=0,r=t.length;A<r;A++){const[r,n]=t[A];e(n)&&(this.context.trailerInfo.Root=r)}}}parseHeader(){for(;!this.bytes.done();){if(this.matchKeyword(To.header)){const e=this.parseRawInt();this.bytes.assertNext(En.Period);const t=this.parseRawInt(),A=Dn.forVersion(e,t);return this.skipBinaryHeaderComment(),A}this.bytes.next()}throw new Bn(this.bytes.position())}parseIndirectObjectHeader(){this.skipWhitespaceAndComments();const e=this.parseRawInt();this.skipWhitespaceAndComments();const t=this.parseRawInt();if(this.skipWhitespaceAndComments(),!this.matchKeyword(To.obj))throw new xn(this.bytes.position(),To.obj);return _n.of(e,t)}matchIndirectObjectHeader(){const e=this.bytes.offset();try{return this.parseIndirectObjectHeader(),!0}catch(tF){return this.bytes.moveTo(e),!1}}async parseIndirectObject(){const e=this.parseIndirectObjectHeader();this.skipWhitespaceAndComments();const t=this.parseObject(e);return this.skipWhitespaceAndComments(),this.matchKeyword(To.endobj),t instanceof Hn&&t.dict.lookup(jn.of("Type"))===jn.of("ObjStm")?await Yo.forStream(t,this.shouldWaitForTick).parseIntoContext():t instanceof Hn&&t.dict.lookup(jn.of("Type"))===jn.of("XRef")?Ko.forStream(t).parseIntoContext():this.context.assign(e,t),e}tryToParseInvalidIndirectObject(){const e=this.bytes.position(),t=`Trying to parse invalid object: ${JSON.stringify(e)})`;if(this.throwOnInvalidObject)throw new Error(t);console.warn(t);const A=this.parseIndirectObjectHeader();console.warn(`Invalid object ref: ${A}`),this.skipWhitespaceAndComments();const r=this.bytes.offset();let n=!0;for(;!this.bytes.done()&&(this.matchKeyword(To.endobj)&&(n=!1),n);)this.bytes.next();if(n)throw new mn(e);const s=this.bytes.offset()-To.endobj.length,i=Es.of(this.bytes.slice(r,s));return this.context.assign(A,i),A}async parseIndirectObjects(){for(this.skipWhitespaceAndComments();!this.bytes.done()&&Io[this.bytes.peek()];){const e=this.bytes.offset();try{await this.parseIndirectObject()}catch(tF){this.bytes.moveTo(e),this.tryToParseInvalidIndirectObject()}this.skipWhitespaceAndComments(),this.skipJibberish(),this.shouldWaitForTick()&&await jA()}}maybeParseCrossRefSection(){if(this.skipWhitespaceAndComments(),!this.matchKeyword(To.xref))return;this.skipWhitespaceAndComments();let e=-1;const t=gs.createEmpty();for(;!this.bytes.done()&&Io[this.bytes.peek()];){const A=this.parseRawInt();this.skipWhitespaceAndComments();const r=this.parseRawInt();this.skipWhitespaceAndComments();const n=this.bytes.peek();if(n===En.n||n===En.f){const n=_n.of(e,r);this.bytes.next()===En.n?t.addEntry(n,A):t.addDeletedEntry(n,A),e+=1}else e=A;this.skipWhitespaceAndComments()}return t}maybeParseTrailerDict(){if(this.skipWhitespaceAndComments(),!this.matchKeyword(To.trailer))return;this.skipWhitespaceAndComments();const e=this.parseDict(),{context:t}=this;t.trailerInfo={Root:e.get(jn.of("Root"))||t.trailerInfo.Root,Encrypt:e.get(jn.of("Encrypt"))||t.trailerInfo.Encrypt,Info:e.get(jn.of("Info"))||t.trailerInfo.Info,ID:e.get(jn.of("ID"))||t.trailerInfo.ID}}maybeParseTrailer(){if(this.skipWhitespaceAndComments(),!this.matchKeyword(To.startxref))return;this.skipWhitespaceAndComments();const e=this.parseRawInt();return this.skipWhitespace(),this.matchKeyword(To.eof),this.skipWhitespaceAndComments(),this.matchKeyword(To.eof),this.skipWhitespaceAndComments(),bs.forLastCrossRefSectionOffset(e)}async parseDocumentSection(){await this.parseIndirectObjects(),this.maybeParseCrossRefSection(),this.maybeParseTrailerDict(),this.maybeParseTrailer(),this.skipJibberish()}skipJibberish(){for(this.skipWhitespaceAndComments();!this.bytes.done();){const e=this.bytes.offset(),t=this.bytes.peek();if(t>=En.Space&&t<=En.Tilde&&(this.matchKeyword(To.xref)||this.matchKeyword(To.trailer)||this.matchKeyword(To.startxref)||this.matchIndirectObjectHeader())){this.bytes.moveTo(e);break}this.bytes.next()}}skipBinaryHeaderComment(){this.skipWhitespaceAndComments();try{const e=this.bytes.offset();this.parseIndirectObjectHeader(),this.bytes.moveTo(e)}catch(tF){this.bytes.next(),this.skipWhitespaceAndComments()}}}qo.forBytesWithOptions=(e,t,A,r,n)=>new qo(e,t,A,r,n);const Jo=qo,_o=e=>1<<e;var $o;!function(e){e[e.Invisible=_o(0)]="Invisible",e[e.Hidden=_o(1)]="Hidden",e[e.Print=_o(2)]="Print",e[e.NoZoom=_o(3)]="NoZoom",e[e.NoRotate=_o(4)]="NoRotate",e[e.NoView=_o(5)]="NoView",e[e.ReadOnly=_o(6)]="ReadOnly",e[e.Locked=_o(7)]="Locked",e[e.ToggleNoView=_o(8)]="ToggleNoView",e[e.LockedContents=_o(9)]="LockedContents"}($o||($o={}));const ea=e=>e instanceof jn?e:jn.of(e),ta=e=>e instanceof In?e:In.of(e),Aa=e=>e instanceof In?e.asNumber():e;var ra;!function(e){e.Degrees="degrees",e.Radians="radians"}(ra||(ra={}));const na=e=>(Zr(e,"radianAngle",["number"]),{type:ra.Radians,angle:e}),sa=e=>(Zr(e,"degreeAngle",["number"]),{type:ra.Degrees,angle:e}),{Radians:ia,Degrees:oa}=ra,aa=e=>e*Math.PI/180,la=e=>180*e/Math.PI,ua=e=>e.type===ia?e.angle:e.type===oa?aa(e.angle):ar(`Invalid rotation: ${JSON.stringify(e)}`),ca=e=>e.type===ia?la(e.angle):e.type===oa?e.angle:ar(`Invalid rotation: ${JSON.stringify(e)}`),da=function(){const e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:0)/90%4;return 0===e?0:1===e?90:2===e?180:3===e?270:0},fa=function(e){const t=da(arguments.length>1&&void 0!==arguments[1]?arguments[1]:0);return 90===t||270===t?{width:e.height,height:e.width}:{width:e.width,height:e.height}},ha=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const{x:r,y:n,width:s,height:i}=e,o=da(A),a=t/2;return 0===o?{x:r-a,y:n-a,width:s,height:i}:90===o?{x:r-i+a,y:n-a,width:i,height:s}:180===o?{x:r-s+a,y:n-i+a,width:s,height:i}:270===o?{x:r-a,y:n-s+a,width:i,height:s}:{x:r-a,y:n-a,width:s,height:i}},ga=()=>es.of(As.ClipNonZero),pa=()=>es.of(As.ClipEvenOdd),{cos:ba,sin:ma,tan:va}=Math,ya=(e,t,A,r,n,s)=>es.of(As.ConcatTransformationMatrix,[ta(e),ta(t),ta(A),ta(r),ta(n),ta(s)]),wa=(e,t)=>ya(1,0,0,1,e,t),Ba=(e,t)=>ya(e,0,0,t,0,0),xa=e=>ya(ba(Aa(e)),ma(Aa(e)),-ma(Aa(e)),ba(Aa(e)),0,0),Ca=e=>xa(aa(Aa(e))),Ea=(e,t)=>ya(1,va(Aa(e)),va(Aa(t)),1,0,0),Na=(e,t)=>Ea(aa(Aa(e)),aa(Aa(t))),Da=(e,t)=>es.of(As.SetLineDashPattern,[`[${e.map(ta).join(" ")}]`,ta(t)]),Qa=()=>Da([],0);var Pa;!function(e){e[e.Butt=0]="Butt",e[e.Round=1]="Round",e[e.Projecting=2]="Projecting"}(Pa||(Pa={}));const Ia=e=>es.of(As.SetLineCapStyle,[ta(e)]);var La;!function(e){e[e.Miter=0]="Miter",e[e.Round=1]="Round",e[e.Bevel=2]="Bevel"}(La||(La={}));const ka=e=>es.of(As.SetLineJoinStyle,[ta(e)]),Ga=e=>es.of(As.SetGraphicsStateParams,[ea(e)]),Fa=()=>es.of(As.PushGraphicsState),Sa=()=>es.of(As.PopGraphicsState),Wa=e=>es.of(As.SetLineWidth,[ta(e)]),Za=(e,t,A,r,n,s)=>es.of(As.AppendBezierCurve,[ta(e),ta(t),ta(A),ta(r),ta(n),ta(s)]),Xa=(e,t,A,r)=>es.of(As.CurveToReplicateInitialPoint,[ta(e),ta(t),ta(A),ta(r)]),Ma=()=>es.of(As.ClosePath),za=(e,t)=>es.of(As.MoveTo,[ta(e),ta(t)]),Ra=(e,t)=>es.of(As.LineTo,[ta(e),ta(t)]),ja=(e,t,A,r)=>es.of(As.AppendRectangle,[ta(e),ta(t),ta(A),ta(r)]),Ta=(e,t,A)=>ja(e,t,A,A),Ua=()=>es.of(As.StrokePath);var Va;!function(e){e.NonZero="f",e.EvenOdd="f*"}(Va||(Va={}));const Oa=()=>es.of(As.FillNonZero),Ya=()=>es.of(As.FillEvenOdd),Ha=()=>es.of(As.FillNonZeroAndStroke),Ka=()=>es.of(As.EndPath),qa=()=>es.of(As.NextLine),Ja=(e,t)=>es.of(As.MoveText,[ta(e),ta(t)]),_a=e=>es.of(As.ShowText,[e]),$a=()=>es.of(As.BeginText),el=()=>es.of(As.EndText),tl=(e,t)=>es.of(As.SetFontAndSize,[ea(e),ta(t)]),Al=e=>es.of(As.SetCharacterSpacing,[ta(e)]),rl=e=>es.of(As.SetWordSpacing,[ta(e)]),nl=e=>es.of(As.SetTextHorizontalScaling,[ta(e)]),sl=e=>es.of(As.SetTextLineHeight,[ta(e)]),il=e=>es.of(As.SetTextRise,[ta(e)]);var ol;!function(e){e[e.Fill=0]="Fill",e[e.Outline=1]="Outline",e[e.FillAndOutline=2]="FillAndOutline",e[e.Invisible=3]="Invisible",e[e.FillAndClip=4]="FillAndClip",e[e.OutlineAndClip=5]="OutlineAndClip",e[e.FillAndOutlineAndClip=6]="FillAndOutlineAndClip",e[e.Clip=7]="Clip"}(ol||(ol={}));const al=e=>es.of(As.SetTextRenderingMode,[ta(e)]),ll=(e,t,A,r,n,s)=>es.of(As.SetTextMatrix,[ta(e),ta(t),ta(A),ta(r),ta(n),ta(s)]),ul=(e,t,A,r,n)=>ll(ba(Aa(e)),ma(Aa(e))+va(Aa(t)),-ma(Aa(e))+va(Aa(A)),ba(Aa(e)),r,n),cl=(e,t,A,r,n)=>ul(aa(Aa(e)),aa(Aa(t)),aa(Aa(A)),r,n),dl=e=>es.of(As.DrawObject,[ea(e)]),fl=e=>es.of(As.NonStrokingColorGray,[ta(e)]),hl=e=>es.of(As.StrokingColorGray,[ta(e)]),gl=(e,t,A)=>es.of(As.NonStrokingColorRgb,[ta(e),ta(t),ta(A)]),pl=(e,t,A)=>es.of(As.StrokingColorRgb,[ta(e),ta(t),ta(A)]),bl=(e,t,A,r)=>es.of(As.NonStrokingColorCmyk,[ta(e),ta(t),ta(A),ta(r)]),ml=(e,t,A,r)=>es.of(As.StrokingColorCmyk,[ta(e),ta(t),ta(A),ta(r)]),vl=e=>es.of(As.BeginMarkedContent,[ea(e)]),yl=()=>es.of(As.EndMarkedContent);var wl,Bl=A(2995);!function(e){e.Grayscale="Grayscale",e.RGB="RGB",e.CMYK="CMYK"}(wl||(wl={}));const xl=e=>(zr(e,"gray",0,1),{type:wl.Grayscale,gray:e}),Cl=(e,t,A)=>(zr(e,"red",0,1),zr(t,"green",0,1),zr(A,"blue",0,1),{type:wl.RGB,red:e,green:t,blue:A}),El=(e,t,A,r)=>(zr(e,"cyan",0,1),zr(t,"magenta",0,1),zr(A,"yellow",0,1),zr(r,"key",0,1),{type:wl.CMYK,cyan:e,magenta:t,yellow:A,key:r}),Nl=e=>{Zr(e,"color",["string"]);const t=Bl(e).unitObject();return{rgb:Cl(t.r,t.g,t.b),alpha:t.alpha}},{Grayscale:Dl,RGB:Ql,CMYK:Pl}=wl,Il=e=>e.type===Dl?fl(e.gray):e.type===Ql?gl(e.red,e.green,e.blue):e.type===Pl?bl(e.cyan,e.magenta,e.yellow,e.key):ar(`Invalid color: ${JSON.stringify(e)}`),Ll=e=>e.type===Dl?hl(e.gray):e.type===Ql?pl(e.red,e.green,e.blue):e.type===Pl?ml(e.cyan,e.magenta,e.yellow,e.key):ar(`Invalid color: ${JSON.stringify(e)}`),kl=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return 1===(null===e||void 0===e?void 0:e.length)?xl(e[0]*t):3===(null===e||void 0===e?void 0:e.length)?Cl(e[0]*t,e[1]*t,e[2]*t):4===(null===e||void 0===e?void 0:e.length)?El(e[0]*t,e[1]*t,e[2]*t,e[3]*t):void 0},Gl=e=>e.type===Dl?[e.gray]:e.type===Ql?[e.red,e.green,e.blue]:e.type===Pl?[e.cyan,e.magenta,e.yellow,e.key]:ar(`Invalid color: ${JSON.stringify(e)}`);let Fl=0,Sl=0,Wl=0,Zl=0,Xl=0,Ml=0;const zl=new Map([["A",7],["a",7],["C",6],["c",6],["H",1],["h",1],["L",2],["l",2],["M",2],["m",2],["Q",4],["q",4],["S",4],["s",4],["T",2],["t",2],["V",1],["v",1],["Z",0],["z",0]]),Rl={M:e=>(Fl=e[0],Sl=e[1],Wl=Zl=null,Xl=Fl,Ml=Sl,za(Fl,Sl)),m:e=>(Fl+=e[0],Sl+=e[1],Wl=Zl=null,Xl=Fl,Ml=Sl,za(Fl,Sl)),C:e=>(Fl=e[4],Sl=e[5],Wl=e[2],Zl=e[3],Za(e[0],e[1],e[2],e[3],e[4],e[5])),c(e){const t=Za(e[0]+Fl,e[1]+Sl,e[2]+Fl,e[3]+Sl,e[4]+Fl,e[5]+Sl);return Wl=Fl+e[2],Zl=Sl+e[3],Fl+=e[4],Sl+=e[5],t},S(e){null!==Wl&&null!==Zl||(Wl=Fl,Zl=Sl);const t=Za(Fl-(Wl-Fl),Sl-(Zl-Sl),e[0],e[1],e[2],e[3]);return Wl=e[0],Zl=e[1],Fl=e[2],Sl=e[3],t},s(e){null!==Wl&&null!==Zl||(Wl=Fl,Zl=Sl);const t=Za(Fl-(Wl-Fl),Sl-(Zl-Sl),Fl+e[0],Sl+e[1],Fl+e[2],Sl+e[3]);return Wl=Fl+e[0],Zl=Sl+e[1],Fl+=e[2],Sl+=e[3],t},Q:e=>(Wl=e[0],Zl=e[1],Fl=e[2],Sl=e[3],Xa(e[0],e[1],Fl,Sl)),q(e){const t=Xa(e[0]+Fl,e[1]+Sl,e[2]+Fl,e[3]+Sl);return Wl=Fl+e[0],Zl=Sl+e[1],Fl+=e[2],Sl+=e[3],t},T(e){null===Wl||null===Zl?(Wl=Fl,Zl=Sl):(Wl=Fl-(Wl-Fl),Zl=Sl-(Zl-Sl));const t=Xa(Wl,Zl,e[0],e[1]);return Fl=e[0],Sl=e[1],t},t(e){null===Wl||null===Zl?(Wl=Fl,Zl=Sl):(Wl=Fl-(Wl-Fl),Zl=Sl-(Zl-Sl));const t=Xa(Wl,Zl,Fl+e[0],Sl+e[1]);return Fl+=e[0],Sl+=e[1],t},A(e){const t=jl(Fl,Sl,e);return Fl=e[5],Sl=e[6],t},a(e){e[5]+=Fl,e[6]+=Sl;const t=jl(Fl,Sl,e);return Fl=e[5],Sl=e[6],t},L:e=>(Fl=e[0],Sl=e[1],Wl=Zl=null,Ra(Fl,Sl)),l:e=>(Fl+=e[0],Sl+=e[1],Wl=Zl=null,Ra(Fl,Sl)),H:e=>(Fl=e[0],Wl=Zl=null,Ra(Fl,Sl)),h:e=>(Fl+=e[0],Wl=Zl=null,Ra(Fl,Sl)),V:e=>(Sl=e[0],Wl=Zl=null,Ra(Fl,Sl)),v:e=>(Sl+=e[0],Wl=Zl=null,Ra(Fl,Sl)),Z(){const e=Ma();return Fl=Xl,Sl=Ml,e},z(){const e=Ma();return Fl=Xl,Sl=Ml,e}},jl=(e,t,A)=>{const[r,n,s,i,o,a,l]=A,u=Tl(a,l,r,n,i,o,s,e,t),c=[];for(const d of u){const e=Ul(...d);c.push(Za(...e))}return c},Tl=(e,t,A,r,n,s,i,o,a)=>{const l=i*(Math.PI/180),u=Math.sin(l),c=Math.cos(l);A=Math.abs(A),r=Math.abs(r),Wl=c*(o-e)*.5+u*(a-t)*.5,Zl=c*(a-t)*.5-u*(o-e)*.5;let d=Wl*Wl/(A*A)+Zl*Zl/(r*r);d>1&&(d=Math.sqrt(d),A*=d,r*=d);const f=c/A,h=u/A,g=-u/r,p=c/r,b=f*o+h*a,m=g*o+p*a,v=f*e+h*t,y=g*e+p*t;let w=1/((v-b)*(v-b)+(y-m)*(y-m))-.25;w<0&&(w=0);let B=Math.sqrt(w);s===n&&(B=-B);const x=.5*(b+v)-B*(y-m),C=.5*(m+y)+B*(v-b),E=Math.atan2(m-C,b-x);let N=Math.atan2(y-C,v-x)-E;N<0&&1===s?N+=2*Math.PI:N>0&&0===s&&(N-=2*Math.PI);const D=Math.ceil(Math.abs(N/(.5*Math.PI+.001))),Q=[];for(let P=0;P<D;P++){const e=E+P*N/D,t=E+(P+1)*N/D;Q[P]=[x,C,e,t,A,r,u,c]}return Q},Ul=(e,t,A,r,n,s,i,o)=>{const a=o*n,l=-i*s,u=i*n,c=o*s,d=.5*(r-A),f=8/3*Math.sin(.5*d)*Math.sin(.5*d)/Math.sin(d),h=e+Math.cos(A)-f*Math.sin(A),g=t+Math.sin(A)+f*Math.cos(A),p=e+Math.cos(r),b=t+Math.sin(r),m=p+f*Math.sin(r),v=b-f*Math.cos(r);return[a*h+l*g,u*h+c*g,a*m+l*v,u*m+c*v,a*p+l*b,u*p+c*b]},Vl=e=>(e=>{Fl=Sl=Wl=Zl=Xl=Ml=0;let t=[];for(let A=0;A<e.length;A++){const r=e[A];if(r.cmd&&"function"===typeof Rl[r.cmd]){const e=Rl[r.cmd](r.args);Array.isArray(e)?t=t.concat(e):t.push(e)}}return t})((e=>{let t;const A=[];let r=[],n="",s=!1,i=0;for(const o of e)if(zl.has(o))i=zl.get(o),t&&(n.length>0&&(r[r.length]=+n),A[A.length]={cmd:t,args:r},r=[],n="",s=!1),t=o;else if([" ",","].includes(o)||"-"===o&&n.length>0&&"e"!==n[n.length-1]||"."===o&&s){if(0===n.length)continue;r.length===i?(A[A.length]={cmd:t,args:r},r=[+n],"M"===t&&(t="L"),"m"===t&&(t="l")):r[r.length]=+n,s="."===o,n=["-","."].includes(o)?o:""}else n+=o,"."===o&&(s=!0);return n.length>0&&(r.length===i?(A[A.length]={cmd:t,args:r},r=[+n],"M"===t&&(t="L"),"m"===t&&(t="l")):r[r.length]=+n),A[A.length]={cmd:t,args:r},A})(e)),Ol=e=>{let{topLeft:t,topRight:A,bottomRight:r,bottomLeft:n}=e;return[za(t.x,t.y),Ra(A.x,A.y),Ra(r.x,r.y),Ra(n.x,n.y),Ma(),ga(),Ka()]},Yl=e=>e.flatMap(Ol),Hl=(e,t)=>[Fa(),t.graphicsState&&Ga(t.graphicsState),$a(),Il(t.color),tl(t.font,t.size),ul(ua(t.rotate),ua(t.xSkew),ua(t.ySkew),t.x,t.y),_a(e),el(),Sa()].filter(Boolean),Kl=(e,t)=>{const A=[Fa(),t.graphicsState&&Ga(t.graphicsState),...t.clipSpaces?Yl(t.clipSpaces):[],t.matrix&&ya(...t.matrix),$a(),Il(t.color),tl(t.font,t.size),sl(t.lineHeight),ul(ua(t.rotate),ua(t.xSkew),ua(t.ySkew),t.x,t.y)].filter(Boolean);for(let r=0,n=e.length;r<n;r++)A.push(_a(e[r]),qa());return A.push(el(),Sa()),A},ql=(e,t)=>[Fa(),t.graphicsState&&Ga(t.graphicsState),...t.clipSpaces?Yl(t.clipSpaces):[],t.matrix&&ya(...t.matrix),wa(t.x,t.y),xa(ua(t.rotate)),Ba(t.width,t.height),Ea(ua(t.xSkew),ua(t.ySkew)),dl(e),Sa()].filter(Boolean),Jl=(e,t)=>[Fa(),t.graphicsState&&Ga(t.graphicsState),wa(t.x,t.y),xa(ua(t.rotate)),Ba(t.xScale,t.yScale),Ea(ua(t.xSkew),ua(t.ySkew)),dl(e),Sa()].filter(Boolean),_l=e=>{var t,A;return[Fa(),e.graphicsState&&Ga(e.graphicsState),...e.clipSpaces?Yl(e.clipSpaces):[],e.matrix&&ya(...e.matrix),e.color&&Ll(e.color),Wa(e.thickness),Da(null!==(t=e.dashArray)&&void 0!==t?t:[],null!==(A=e.dashPhase)&&void 0!==A?A:0),za(e.start.x,e.start.y),e.lineCap&&Ia(e.lineCap),za(e.start.x,e.start.y),Ra(e.end.x,e.end.y),Ua(),Sa()].filter(Boolean)},$l=e=>{var t,A;return[Fa(),e.graphicsState&&Ga(e.graphicsState),e.color&&Il(e.color),e.borderColor&&Ll(e.borderColor),Wa(e.borderWidth),e.borderLineCap&&Ia(e.borderLineCap),Da(null!==(t=e.borderDashArray)&&void 0!==t?t:[],null!==(A=e.borderDashPhase)&&void 0!==A?A:0),...e.clipSpaces?Yl(e.clipSpaces):[],e.matrix&&ya(...e.matrix),wa(e.x,e.y),xa(ua(e.rotate)),Ea(ua(e.xSkew),ua(e.ySkew)),za(0,0),Ra(0,e.height),Ra(e.width,e.height),Ra(e.width,0),Ma(),e.color&&e.borderWidth?Ha():e.color?Oa():e.borderColor?Ua():Ma(),Sa()].filter(Boolean)},eu=(Math.sqrt(2)-1)/3*4,tu=e=>{let t=Aa(e.x),A=Aa(e.y);const r=Aa(e.xScale),n=Aa(e.yScale);t-=r,A-=n;const s=r*eu,i=n*eu,o=t+2*r,a=A+2*n,l=t+r,u=A+n;return[Fa(),za(t,u),Za(t,u-i,l-s,A,l,A),Za(l+s,A,o,u-i,o,u),Za(o,u+i,l+s,a,l,a),Za(l-s,a,t,u+i,t,u),Sa()]},Au=e=>{const t=Aa(e.x),A=Aa(e.y),r=Aa(e.xScale),n=Aa(e.yScale),s=-r,i=-n,o=r*eu,a=n*eu,l=s+2*r,u=i+2*n,c=s+r,d=i+n;return[wa(t,A),xa(ua(e.rotate)),za(s,d),Za(s,d-a,c-o,i,c,i),Za(c+o,i,l,d-a,l,d),Za(l,d+a,c+o,u,c,u),Za(c-o,u,s,d+a,s,d)]},ru=e=>{var t,A,r;return[Fa(),e.graphicsState&&Ga(e.graphicsState),e.color&&Il(e.color),e.borderColor&&Ll(e.borderColor),...e.clipSpaces?Yl(e.clipSpaces):[],e.matrix&&ya(...e.matrix),Wa(e.borderWidth),e.borderLineCap&&Ia(e.borderLineCap),Da(null!==(t=e.borderDashArray)&&void 0!==t?t:[],null!==(A=e.borderDashPhase)&&void 0!==A?A:0),...void 0===e.rotate?tu({x:e.x,y:e.y,xScale:e.xScale,yScale:e.yScale}):Au({x:e.x,y:e.y,xScale:e.xScale,yScale:e.yScale,rotate:null!==(r=e.rotate)&&void 0!==r?r:sa(0)}),e.color&&e.borderWidth?Ha():e.color?Oa():e.borderColor?Ua():Ma(),Sa()].filter(Boolean)},nu=(e,t)=>{var A,r,n;return[Fa(),t.graphicsState&&Ga(t.graphicsState),...t.clipSpaces?Yl(t.clipSpaces):[],t.matrix&&ya(...t.matrix),wa(t.x,t.y),xa(ua(null!==(A=t.rotate)&&void 0!==A?A:sa(0))),t.scale&&Ba(t.scale,t.scale),t.color&&Il(t.color),t.borderColor&&Ll(t.borderColor),t.borderWidth&&Wa(t.borderWidth),t.borderLineCap&&Ia(t.borderLineCap),Da(null!==(r=t.borderDashArray)&&void 0!==r?r:[],null!==(n=t.borderDashPhase)&&void 0!==n?n:0),...Vl(e),t.color&&t.borderWidth?Ha():t.color?t.fillRule===Va.EvenOdd?Ya():Oa():t.borderColor?Ua():Ma(),Sa()].filter(Boolean)},su=e=>{const t=Aa(e.size),A=-.25,r=-.49,n=-.675,s=.3995/.965+r;return[Fa(),e.color&&Ll(e.color),Wa(e.thickness),wa(e.x,e.y),za(n*t,s*t),Ra(A*t,r*t),Ra(.69*t,.475*t),Ua(),Sa()].filter(Boolean)},iu=e=>0===e.rotation?[wa(0,0),Ca(0)]:90===e.rotation?[wa(e.width,0),Ca(90)]:180===e.rotation?[wa(e.width,e.height),Ca(180)]:270===e.rotation?[wa(0,e.height),Ca(270)]:[],ou=e=>{const t=$l({x:e.x,y:e.y,width:e.width,height:e.height,borderWidth:e.borderWidth,color:e.color,borderColor:e.borderColor,rotate:sa(0),xSkew:sa(0),ySkew:sa(0)});if(!e.filled)return t;const A=Aa(e.width),r=Aa(e.height),n=Math.min(A,r)/2,s=su({x:A/2,y:r/2,size:n,thickness:e.thickness,color:e.markColor});return[Fa(),...t,...s,Sa()]},au=e=>{const t=Aa(e.width),A=Aa(e.height),r=Math.min(t,A)/2,n=ru({x:e.x,y:e.y,xScale:r,yScale:r,color:e.color,borderColor:e.borderColor,borderWidth:e.borderWidth});if(!e.filled)return n;const s=ru({x:e.x,y:e.y,xScale:.45*r,yScale:.45*r,color:e.dotColor,borderColor:void 0,borderWidth:0});return[Fa(),...n,...s,Sa()]},lu=e=>{const t=Aa(e.x),A=Aa(e.y),r=Aa(e.width),n=Aa(e.height),s=$l({x:t,y:A,width:r,height:n,borderWidth:e.borderWidth,color:e.color,borderColor:e.borderColor,rotate:sa(0),xSkew:sa(0),ySkew:sa(0)}),i=uu(e.textLines,{color:e.textColor,font:e.font,size:e.fontSize,rotate:sa(0),xSkew:sa(0),ySkew:sa(0)});return[Fa(),...s,...i,Sa()]},uu=(e,t)=>{const A=[$a(),Il(t.color),tl(t.font,t.size)];for(let r=0,n=e.length;r<n;r++){const{encoded:n,x:s,y:i}=e[r];A.push(ul(ua(t.rotate),ua(t.xSkew),ua(t.ySkew),s,i),_a(n))}return A.push(el()),A},cu=e=>{const t=Aa(e.x),A=Aa(e.y),r=Aa(e.width),n=Aa(e.height),s=Aa(e.borderWidth),i=Aa(e.padding),o=t+s/2+i,a=A+s/2+i,l=r-2*(s/2+i),u=n-2*(s/2+i),c=[za(o,a),Ra(o,a+u),Ra(o+l,a+u),Ra(o+l,a),Ma(),ga(),Ka()],d=$l({x:t,y:A,width:r,height:n,borderWidth:e.borderWidth,color:e.color,borderColor:e.borderColor,rotate:sa(0),xSkew:sa(0),ySkew:sa(0)}),f=uu(e.textLines,{color:e.textColor,font:e.font,size:e.fontSize,rotate:sa(0),xSkew:sa(0),ySkew:sa(0)}),h=[vl("Tx"),Fa(),...f,Sa(),yl()];return[Fa(),...d,...c,...h,Sa()]},du=e=>{const t=Aa(e.x),A=Aa(e.y),r=Aa(e.width),n=Aa(e.height),s=Aa(e.lineHeight),i=Aa(e.borderWidth),o=Aa(e.padding),a=t+i/2+o,l=A+i/2+o,u=r-2*(i/2+o),c=n-2*(i/2+o),d=[za(a,l),Ra(a,l+c),Ra(a+u,l+c),Ra(a+u,l),Ma(),ga(),Ka()],f=$l({x:t,y:A,width:r,height:n,borderWidth:e.borderWidth,color:e.color,borderColor:e.borderColor,rotate:sa(0),xSkew:sa(0),ySkew:sa(0)}),h=[];for(let b=0,m=e.selectedLines.length;b<m;b++){const t=e.textLines[e.selectedLines[b]];h.push(...$l({x:t.x-o,y:t.y-(s-t.height)/2,width:r-i,height:t.height+(s-t.height)/2,borderWidth:0,color:e.selectedColor,borderColor:void 0,rotate:sa(0),xSkew:sa(0),ySkew:sa(0)}))}const g=uu(e.textLines,{color:e.textColor,font:e.font,size:e.fontSize,rotate:sa(0),xSkew:sa(0),ySkew:sa(0)}),p=[vl("Tx"),Fa(),...g,Sa(),yl()];return[Fa(),...f,...h,...d,...p,Sa()]};class fu extends Error{constructor(){super("Input document to `PDFDocument.load` is encrypted. You can use `PDFDocument.load(..., { ignoreEncryption: true })` if you wish to load the document anyways.")}}class hu extends Error{constructor(){super("Input to `PDFDocument.embedFont` was a custom font, but no `fontkit` instance was found. You must register a `fontkit` instance with `PDFDocument.registerFontkit(...)` before embedding custom fonts.")}}class gu extends Error{constructor(){super("A `page` passed to `PDFDocument.addPage` or `PDFDocument.insertPage` was from a different (foreign) PDF document. If you want to copy pages from one PDFDocument to another, you must use `PDFDocument.copyPages(...)` to copy the pages before adding or inserting them.")}}class pu extends Error{constructor(){super("PDFDocument has no pages so `PDFDocument.removePage` cannot be called")}}class bu extends Error{constructor(e){super(`PDFDocument has no form field with the name "${e}"`)}}class mu extends Error{constructor(e,t,A){var r,n;super(`Expected field "${e}" to be of type ${null===t||void 0===t?void 0:t.name}, but it is actually of type ${null!==(n=null===(r=null===A||void 0===A?void 0:A.constructor)||void 0===r?void 0:r.name)&&void 0!==n?n:A}`)}}class vu extends Error{constructor(e){super(`Failed to select check box due to missing onValue: "${e}"`)}}class yu extends Error{constructor(e){super(`A field already exists with the specified name: "${e}"`)}}class wu extends Error{constructor(e){super(`Field name contains invalid component: "${e}"`)}}class Bu extends Error{constructor(e){super(`A non-terminal field already exists with the specified name: "${e}"`)}}class xu extends Error{constructor(e){super(`Reading rich text fields is not supported: Attempted to read rich text field: ${e}`)}}class Cu extends Error{constructor(e,t){super(`Failed to layout combed text as lineLength=${e} is greater than cellCount=${t}`)}}class Eu extends Error{constructor(e,t,A){super(`Attempted to set text with length=${e} for TextField with maxLength=${t} and name=${A}`)}}class Nu extends Error{constructor(e,t,A){super(`Attempted to set maxLength=${t}, which is less than ${e}, the length of this field's current value (name=${A})`)}}var Du;!function(e){e[e.Left=0]="Left",e[e.Center=1]="Center",e[e.Right=2]="Right"}(Du||(Du={}));const Qu=function(e,t,A){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],n=4;for(;n<500;){let s=0;for(let r=0,o=e.length;r<o;r++){s+=1;const i=e[r].split(" ");let o=A.width;for(let e=0,r=i.length;e<r;e++){const a=e===r-1?i[e]:i[e]+" ",l=t.widthOfTextAtSize(a,n);o-=l,o<=0&&(s+=1,o=A.width-l)}}if(!r&&s>e.length)return n-1;const i=t.heightAtSize(n);if((i+.2*i)*s>Math.abs(A.height))return n-1;n+=1}return n},Pu=e=>{for(let t=e.length;t>0;t--)if(/\s/.test(e[t]))return t},Iu=(e,t,A,r)=>{var n;let s=e.length;for(;s>0;){const i=e.substring(0,s),o=A.encodeText(i),a=A.widthOfTextAtSize(i,r);if(a<t){return{line:i,encoded:o,width:a,remainder:e.substring(s)||void 0}}s=null!==(n=Pu(i))&&void 0!==n?n:0}return{line:e,encoded:A.encodeText(e),width:A.widthOfTextAtSize(e,r),remainder:void 0}},Lu=(e,t)=>{let{alignment:A,fontSize:r,font:n,bounds:s}=t;const i=yA(pA(e));void 0!==r&&0!==r||(r=Qu(i,n,s,!0));const o=n.heightAtSize(r),a=o+.2*o,l=[];let u=s.x,c=s.y,d=s.x+s.width,f=s.y+s.height,h=s.y+s.height;for(let g=0,p=i.length;g<p;g++){let e=i[g];for(;void 0!==e;){const{line:t,encoded:i,width:g,remainder:p}=Iu(e,s.width,n,r),b=A===Du.Left?s.x:A===Du.Center?s.x+s.width/2-g/2:A===Du.Right?s.x+s.width-g:s.x;h-=a,b<u&&(u=b),h<c&&(c=h),b+g>d&&(d=b+g),h+o>f&&(f=h+o),l.push({text:t,encoded:i,width:g,height:o,x:b,y:h}),e=null===p||void 0===p?void 0:p.trim()}}return{fontSize:r,lineHeight:a,lines:l,bounds:{x:u,y:c,width:d-u,height:f-c}}},ku=(e,t)=>{let{fontSize:A,font:r,bounds:n,cellCount:s}=t;const i=wA(pA(e));if(i.length>s)throw new Cu(i.length,s);void 0!==A&&0!==A||(A=((e,t,A,r)=>{const n=A.width/r,s=A.height;let i=4;const o=xA(e);for(;i<500;){for(let e=0,A=o.length;e<A;e++){const A=o[e];if(t.widthOfTextAtSize(A,i)>.75*n)return i-1}if(t.heightAtSize(i,{descender:!1})>s)return i-1;i+=1}return i})(i,r,n,s));const o=n.width/s,a=r.heightAtSize(A,{descender:!1}),l=n.y+(n.height/2-a/2),u=[];let c=n.x,d=n.y,f=n.x+n.width,h=n.y+n.height,g=0,p=0;for(;g<s;){const[e,t]=BA(i,p),s=r.encodeText(e),b=r.widthOfTextAtSize(e,A),m=n.x+(o*g+o/2)-b/2;m<c&&(c=m),l<d&&(d=l),m+b>f&&(f=m+b),l+a>h&&(h=l+a),u.push({text:i,encoded:s,width:b,height:a,x:m,y:l}),g+=1,p+=t}return{fontSize:A,cells:u,bounds:{x:c,y:d,width:f-c,height:h-d}}},Gu=(e,t)=>{let{alignment:A,fontSize:r,font:n,bounds:s}=t;const i=wA(pA(e));void 0!==r&&0!==r||(r=Qu([i],n,s));const o=n.encodeText(i),a=n.widthOfTextAtSize(i,r),l=n.heightAtSize(r,{descender:!1}),u=A===Du.Left?s.x:A===Du.Center?s.x+s.width/2-a/2:A===Du.Right?s.x+s.width-a:s.x,c=s.y+(s.height/2-l/2);return{fontSize:r,line:{text:i,encoded:o,width:a,height:l,x:u,y:c},bounds:{x:u,y:c,width:a,height:l}}},Fu=e=>"normal"in e?e:{normal:e},Su=/\/([^\0\t\n\f\r\ ]+)[\0\t\n\f\r\ ]+(\d*\.\d+|\d+)[\0\t\n\f\r\ ]+Tf/,Wu=e=>{var t,A;const r=null!==(t=e.getDefaultAppearance())&&void 0!==t?t:"",n=null!==(A=DA(r,Su).match)&&void 0!==A?A:[],s=Number(n[2]);return isFinite(s)?s:void 0},Zu=/(\d*\.\d+|\d+)[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]+(g|rg|k)/,Xu=e=>{var t;const A=null!==(t=e.getDefaultAppearance())&&void 0!==t?t:"",r=DA(A,Zu).match,[,n,s,i,o,a]=null!==r&&void 0!==r?r:[];return"g"===a&&n?xl(Number(n)):"rg"===a&&n&&s&&i?Cl(Number(n),Number(s),Number(i)):"k"===a&&n&&s&&i&&o?El(Number(n),Number(s),Number(i),Number(o)):void 0},Mu=function(e,t,A){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;var n;const s=[Il(t).toString(),tl(null!==(n=null===A||void 0===A?void 0:A.name)&&void 0!==n?n:"dummy__noop",r).toString()].join("\n");e.setDefaultAppearance(s)},zu=(e,t)=>{var A,r,n;const s=Xu(t),i=Xu(e.acroField),o=t.getRectangle(),a=t.getAppearanceCharacteristics(),l=t.getBorderStyle(),u=null!==(A=null===l||void 0===l?void 0:l.getWidth())&&void 0!==A?A:0,c=da(null===a||void 0===a?void 0:a.getRotation()),{width:d,height:f}=fa(o,c),h=iu({...o,rotation:c}),g=Cl(0,0,0),p=null!==(r=kl(null===a||void 0===a?void 0:a.getBorderColor()))&&void 0!==r?r:g,b=kl(null===a||void 0===a?void 0:a.getBackgroundColor()),m=kl(null===a||void 0===a?void 0:a.getBackgroundColor(),.8),v=null!==(n=null!==s&&void 0!==s?s:i)&&void 0!==n?n:g;Mu(s?t:e.acroField,v);const y={x:0+u/2,y:0+u/2,width:d-u,height:f-u,thickness:1.5,borderWidth:u,borderColor:p,markColor:v};return{normal:{on:[...h,...ou({...y,color:b,filled:!0})],off:[...h,...ou({...y,color:b,filled:!1})]},down:{on:[...h,...ou({...y,color:m,filled:!0})],off:[...h,...ou({...y,color:m,filled:!1})]}}},Ru=(e,t)=>{var A,r,n;const s=Xu(t),i=Xu(e.acroField),o=t.getRectangle(),a=t.getAppearanceCharacteristics(),l=t.getBorderStyle(),u=null!==(A=null===l||void 0===l?void 0:l.getWidth())&&void 0!==A?A:0,c=da(null===a||void 0===a?void 0:a.getRotation()),{width:d,height:f}=fa(o,c),h=iu({...o,rotation:c}),g=Cl(0,0,0),p=null!==(r=kl(null===a||void 0===a?void 0:a.getBorderColor()))&&void 0!==r?r:g,b=kl(null===a||void 0===a?void 0:a.getBackgroundColor()),m=kl(null===a||void 0===a?void 0:a.getBackgroundColor(),.8),v=null!==(n=null!==s&&void 0!==s?s:i)&&void 0!==n?n:g;Mu(s?t:e.acroField,v);const y={x:d/2,y:f/2,width:d-u,height:f-u,borderWidth:u,borderColor:p,dotColor:v};return{normal:{on:[...h,...au({...y,color:b,filled:!0})],off:[...h,...au({...y,color:b,filled:!1})]},down:{on:[...h,...au({...y,color:m,filled:!0})],off:[...h,...au({...y,color:m,filled:!1})]}}},ju=(e,t,A)=>{var r,n,s,i,o;const a=Xu(t),l=Xu(e.acroField),u=Wu(t),c=Wu(e.acroField),d=t.getRectangle(),f=t.getAppearanceCharacteristics(),h=t.getBorderStyle(),g=null===f||void 0===f?void 0:f.getCaptions(),p=null!==(r=null===g||void 0===g?void 0:g.normal)&&void 0!==r?r:"",b=null!==(s=null!==(n=null===g||void 0===g?void 0:g.down)&&void 0!==n?n:p)&&void 0!==s?s:"",m=null!==(i=null===h||void 0===h?void 0:h.getWidth())&&void 0!==i?i:0,v=da(null===f||void 0===f?void 0:f.getRotation()),{width:y,height:w}=fa(d,v),B=iu({...d,rotation:v}),x=Cl(0,0,0),C=kl(null===f||void 0===f?void 0:f.getBorderColor()),E=kl(null===f||void 0===f?void 0:f.getBackgroundColor()),N=kl(null===f||void 0===f?void 0:f.getBackgroundColor(),.8),D={x:m,y:m,width:y-2*m,height:w-2*m},Q=Gu(p,{alignment:Du.Center,fontSize:null!==u&&void 0!==u?u:c,font:A,bounds:D}),P=Gu(b,{alignment:Du.Center,fontSize:null!==u&&void 0!==u?u:c,font:A,bounds:D}),I=Math.min(Q.fontSize,P.fontSize),L=null!==(o=null!==a&&void 0!==a?a:l)&&void 0!==o?o:x;Mu(a||void 0!==u?t:e.acroField,L,A,I);const k={x:0+m/2,y:0+m/2,width:y-m,height:w-m,borderWidth:m,borderColor:C,textColor:L,font:A.name,fontSize:I};return{normal:[...B,...lu({...k,color:E,textLines:[Q.line]})],down:[...B,...lu({...k,color:N,textLines:[P.line]})]}},Tu=(e,t,A)=>{var r,n,s,i;const o=Xu(t),a=Xu(e.acroField),l=Wu(t),u=Wu(e.acroField),c=t.getRectangle(),d=t.getAppearanceCharacteristics(),f=t.getBorderStyle(),h=null!==(r=e.getText())&&void 0!==r?r:"",g=null!==(n=null===f||void 0===f?void 0:f.getWidth())&&void 0!==n?n:0,p=da(null===d||void 0===d?void 0:d.getRotation()),{width:b,height:m}=fa(c,p),v=iu({...c,rotation:p}),y=Cl(0,0,0),w=kl(null===d||void 0===d?void 0:d.getBorderColor()),B=kl(null===d||void 0===d?void 0:d.getBackgroundColor());let x,C;const E=e.isCombed()?0:1,N={x:g+E,y:g+E,width:b-2*(g+E),height:m-2*(g+E)};if(e.isMultiline()){const t=Lu(h,{alignment:e.getAlignment(),fontSize:null!==l&&void 0!==l?l:u,font:A,bounds:N});x=t.lines,C=t.fontSize}else if(e.isCombed()){const t=ku(h,{fontSize:null!==l&&void 0!==l?l:u,font:A,bounds:N,cellCount:null!==(s=e.getMaxLength())&&void 0!==s?s:0});x=t.cells,C=t.fontSize}else{const t=Gu(h,{alignment:e.getAlignment(),fontSize:null!==l&&void 0!==l?l:u,font:A,bounds:N});x=[t.line],C=t.fontSize}const D=null!==(i=null!==o&&void 0!==o?o:a)&&void 0!==i?i:y;Mu(o||void 0!==l?t:e.acroField,D,A,C);const Q={x:0+g/2,y:0+g/2,width:b-g,height:m-g,borderWidth:null!==g&&void 0!==g?g:0,borderColor:w,textColor:D,font:A.name,fontSize:C,color:B,textLines:x,padding:E};return[...v,...cu(Q)]},Uu=(e,t,A)=>{var r,n,s;const i=Xu(t),o=Xu(e.acroField),a=Wu(t),l=Wu(e.acroField),u=t.getRectangle(),c=t.getAppearanceCharacteristics(),d=t.getBorderStyle(),f=null!==(r=e.getSelected()[0])&&void 0!==r?r:"",h=null!==(n=null===d||void 0===d?void 0:d.getWidth())&&void 0!==n?n:0,g=da(null===c||void 0===c?void 0:c.getRotation()),{width:p,height:b}=fa(u,g),m=iu({...u,rotation:g}),v=Cl(0,0,0),y=kl(null===c||void 0===c?void 0:c.getBorderColor()),w=kl(null===c||void 0===c?void 0:c.getBackgroundColor()),B={x:h+1,y:h+1,width:p-2*(h+1),height:b-2*(h+1)},{line:x,fontSize:C}=Gu(f,{alignment:Du.Left,fontSize:null!==a&&void 0!==a?a:l,font:A,bounds:B}),E=null!==(s=null!==i&&void 0!==i?i:o)&&void 0!==s?s:v;Mu(i||void 0!==a?t:e.acroField,E,A,C);const N={x:0+h/2,y:0+h/2,width:p-h,height:b-h,borderWidth:null!==h&&void 0!==h?h:0,borderColor:y,textColor:E,font:A.name,fontSize:C,color:w,textLines:[x],padding:1};return[...m,...cu(N)]},Vu=(e,t,A)=>{var r,n;const s=Xu(t),i=Xu(e.acroField),o=Wu(t),a=Wu(e.acroField),l=t.getRectangle(),u=t.getAppearanceCharacteristics(),c=t.getBorderStyle(),d=null!==(r=null===c||void 0===c?void 0:c.getWidth())&&void 0!==r?r:0,f=da(null===u||void 0===u?void 0:u.getRotation()),{width:h,height:g}=fa(l,f),p=iu({...l,rotation:f}),b=Cl(0,0,0),m=kl(null===u||void 0===u?void 0:u.getBorderColor()),v=kl(null===u||void 0===u?void 0:u.getBackgroundColor()),y=e.getOptions(),w=e.getSelected();e.isSorted()&&y.sort();let B="";for(let I=0,L=y.length;I<L;I++)B+=y[I],I<L-1&&(B+="\n");const x={x:d+1,y:d+1,width:h-2*(d+1),height:g-2*(d+1)},{lines:C,fontSize:E,lineHeight:N}=Lu(B,{alignment:Du.Left,fontSize:null!==o&&void 0!==o?o:a,font:A,bounds:x}),D=[];for(let I=0,L=C.length;I<L;I++){const e=C[I];w.includes(e.text)&&D.push(I)}const Q=Cl(.6,193/255,218/255),P=null!==(n=null!==s&&void 0!==s?s:i)&&void 0!==n?n:b;return Mu(s||void 0!==o?t:e.acroField,P,A,E),[...p,...du({x:0+d/2,y:0+d/2,width:h-d,height:g-d,borderWidth:null!==d&&void 0!==d?d:0,borderColor:m,textColor:P,font:A.name,fontSize:E,color:v,textLines:C,lineHeight:N,selectedColor:Q,selectedLines:D,padding:1})]};class Ou{constructor(e,t,A){this.alreadyEmbedded=!1,Zr(e,"ref",[[_n,"PDFRef"]]),Zr(t,"doc",[[Ic,"PDFDocument"]]),Zr(A,"embedder",[[Ci,"PDFPageEmbedder"]]),this.ref=e,this.doc=t,this.width=A.width,this.height=A.height,this.embedder=A}scale(e){return Zr(e,"factor",["number"]),{width:this.width*e,height:this.height*e}}size(){return this.scale(1)}async embed(){this.alreadyEmbedded||(await this.embedder.embedIntoContext(this.doc.context,this.ref),this.alreadyEmbedded=!0)}}Ou.of=(e,t,A)=>new Ou(e,t,A);class Yu{constructor(e,t,A){this.modified=!0,Zr(e,"ref",[[_n,"PDFRef"]]),Zr(t,"doc",[[Ic,"PDFDocument"]]),Zr(A,"embedder",[[Ts,"CustomFontEmbedder"],[Fs,"StandardFontEmbedder"]]),this.ref=e,this.doc=t,this.name=A.fontName,this.embedder=A}encodeText(e){return Zr(e,"text",["string"]),this.modified=!0,this.embedder.encodeText(e)}widthOfTextAtSize(e,t){return Zr(e,"text",["string"]),Zr(t,"size",["number"]),this.embedder.widthOfTextAtSize(e,t)}heightAtSize(e,t){var A;return Zr(e,"size",["number"]),Xr(null===t||void 0===t?void 0:t.descender,"options.descender",["boolean"]),this.embedder.heightOfFontAtSize(e,{descender:null===(A=null===t||void 0===t?void 0:t.descender)||void 0===A||A})}sizeAtHeight(e){return Zr(e,"height",["number"]),this.embedder.sizeOfFontAtHeight(e)}getCharacterSet(){return this.embedder instanceof Fs?this.embedder.encoding.supportedCodePoints:this.embedder.font.characterSet}async embed(){this.modified&&(await this.embedder.embedIntoContext(this.doc.context,this.ref),this.modified=!1)}}Yu.of=(e,t,A)=>new Yu(e,t,A);class Hu{constructor(e,t,A){Zr(e,"ref",[[_n,"PDFRef"]]),Zr(t,"doc",[[Ic,"PDFDocument"]]),Zr(A,"embedder",[[$s,"JpegEmbedder"],[si,"PngEmbedder"]]),this.ref=e,this.doc=t,this.width=A.width,this.height=A.height,this.embedder=A}scale(e){return Zr(e,"factor",["number"]),{width:this.width*e,height:this.height*e}}scaleToFit(e,t){Zr(e,"width",["number"]),Zr(t,"height",["number"]);const A=e/this.width,r=t/this.height,n=Math.min(A,r);return this.scale(n)}size(){return this.scale(1)}async embed(){if(this.embedder){if(!this.embedTask){const{doc:e,ref:t}=this;this.embedTask=this.embedder.embedIntoContext(e.context,t)}await this.embedTask,this.embedder=void 0}}}var Ku;Hu.of=(e,t,A)=>new Hu(e,t,A),function(e){e[e.Left=0]="Left",e[e.Center=1]="Center",e[e.Right=2]="Right"}(Ku||(Ku={}));const qu=e=>{Xr(null===e||void 0===e?void 0:e.x,"options.x",["number"]),Xr(null===e||void 0===e?void 0:e.y,"options.y",["number"]),Xr(null===e||void 0===e?void 0:e.width,"options.width",["number"]),Xr(null===e||void 0===e?void 0:e.height,"options.height",["number"]),Xr(null===e||void 0===e?void 0:e.textColor,"options.textColor",[[Object,"Color"]]),Xr(null===e||void 0===e?void 0:e.backgroundColor,"options.backgroundColor",[[Object,"Color"]]),Xr(null===e||void 0===e?void 0:e.borderColor,"options.borderColor",[[Object,"Color"]]),Xr(null===e||void 0===e?void 0:e.borderWidth,"options.borderWidth",["number"]),Xr(null===e||void 0===e?void 0:e.rotate,"options.rotate",[[Object,"Rotation"]])};class Ju{constructor(e,t,A){Zr(e,"acroField",[[Ui,"PDFAcroTerminal"]]),Zr(t,"ref",[[_n,"PDFRef"]]),Zr(A,"doc",[[Ic,"PDFDocument"]]),this.acroField=e,this.ref=t,this.doc=A}getName(){var e;return null!==(e=this.acroField.getFullyQualifiedName())&&void 0!==e?e:""}isReadOnly(){return this.acroField.hasFlag(Ki.ReadOnly)}enableReadOnly(){this.acroField.setFlagTo(Ki.ReadOnly,!0)}disableReadOnly(){this.acroField.setFlagTo(Ki.ReadOnly,!1)}isRequired(){return this.acroField.hasFlag(Ki.Required)}enableRequired(){this.acroField.setFlagTo(Ki.Required,!0)}disableRequired(){this.acroField.setFlagTo(Ki.Required,!1)}isExported(){return!this.acroField.hasFlag(Ki.NoExport)}enableExporting(){this.acroField.setFlagTo(Ki.NoExport,!1)}disableExporting(){this.acroField.setFlagTo(Ki.NoExport,!0)}needsAppearancesUpdate(){throw new Kr(this.constructor.name,"needsAppearancesUpdate")}defaultUpdateAppearances(e){throw new Kr(this.constructor.name,"defaultUpdateAppearances")}markAsDirty(){this.doc.getForm().markFieldAsDirty(this.ref)}markAsClean(){this.doc.getForm().markFieldAsClean(this.ref)}isDirty(){return this.doc.getForm().fieldIsDirty(this.ref)}createWidget(e){var t;const A=e.textColor,r=e.backgroundColor,n=e.borderColor,s=e.borderWidth,i=ca(e.rotate),o=e.caption,a=e.x,l=e.y,u=e.width+s,c=e.height+s,d=Boolean(e.hidden),f=e.page;jr(i,"degreesAngle",90);const h=ji.create(this.doc.context,this.ref),g=ha({x:a,y:l,width:u,height:c},s,i);h.setRectangle(g),f&&h.setP(f);const p=h.getOrCreateAppearanceCharacteristics();r&&p.setBackgroundColor(Gl(r)),p.setRotation(i),o&&p.setCaptions({normal:o}),n&&p.setBorderColor(Gl(n));const b=h.getOrCreateBorderStyle();if(void 0!==s&&b.setWidth(s),h.setFlagTo($o.Print,!0),h.setFlagTo($o.Hidden,d),h.setFlagTo($o.Invisible,!1),A){const e=(null!==(t=this.acroField.getDefaultAppearance())&&void 0!==t?t:"")+"\n"+Il(A).toString();this.acroField.setDefaultAppearance(e)}return h}updateWidgetAppearanceWithFont(e,t,A){let{normal:r,rollover:n,down:s}=A;this.updateWidgetAppearances(e,{normal:this.createAppearanceStream(e,r,t),rollover:n&&this.createAppearanceStream(e,n,t),down:s&&this.createAppearanceStream(e,s,t)})}updateOnOffWidgetAppearance(e,t,A){let{normal:r,rollover:n,down:s}=A;this.updateWidgetAppearances(e,{normal:this.createAppearanceDict(e,r,t),rollover:n&&this.createAppearanceDict(e,n,t),down:s&&this.createAppearanceDict(e,s,t)})}updateWidgetAppearances(e,t){let{normal:A,rollover:r,down:n}=t;e.setNormalAppearance(A),r?e.setRolloverAppearance(r):e.removeRolloverAppearance(),n?e.setDownAppearance(n):e.removeDownAppearance()}createAppearanceStream(e,t,A){const{context:r}=this.acroField.dict,{width:n,height:s}=e.getRectangle(),i=A&&{Font:{[A.name]:A.ref}},o=r.formXObject(t,{Resources:i,BBox:r.obj([0,0,n,s]),Matrix:r.obj([1,0,0,1,0,0])});return r.register(o)}createImageAppearanceStream(e,t,A){var r;const{context:n}=this.acroField.dict,s=e.getRectangle(),i=e.getAppearanceCharacteristics(),o=e.getBorderStyle(),a=null!==(r=null===o||void 0===o?void 0:o.getWidth())&&void 0!==r?r:0,l=da(null===i||void 0===i?void 0:i.getRotation()),u=iu({...s,rotation:l}),c=fa(s,l),d=t.scaleToFit(c.width-2*a,c.height-2*a),f={x:a,y:a,width:d.width,height:d.height,rotate:sa(0),xSkew:sa(0),ySkew:sa(0)};A===Ku.Center?(f.x+=(c.width-2*a)/2-d.width/2,f.y+=(c.height-2*a)/2-d.height/2):A===Ku.Right&&(f.x=c.width-a-d.width,f.y=c.height-a-d.height);const h=this.doc.context.addRandomSuffix("Image",10),g=[...u,...ql(h,f)],p={XObject:{[h]:t.ref}},b=n.formXObject(g,{Resources:p,BBox:n.obj([0,0,s.width,s.height]),Matrix:n.obj([1,0,0,1,0,0])});return n.register(b)}createAppearanceDict(e,t,A){const{context:r}=this.acroField.dict,n=this.createAppearanceStream(e,t.on),s=this.createAppearanceStream(e,t.off),i=r.obj({});return i.set(A,n),i.set(jn.of("Off"),s),i}}class _u extends Ju{constructor(e,t,A){super(e,t,A),Zr(e,"acroCheckBox",[[Yi,"PDFAcroCheckBox"]]),this.acroField=e}check(){var e;const t=null!==(e=this.acroField.getOnValue())&&void 0!==e?e:jn.of("Yes");this.markAsDirty(),this.acroField.setValue(t)}uncheck(){this.markAsDirty(),this.acroField.setValue(jn.of("Off"))}isChecked(){const e=this.acroField.getOnValue();return!!e&&e===this.acroField.getValue()}addToPage(e,t){var A,r,n,s,i,o;Zr(e,"page",[[ed,"PDFPage"]]),qu(t),t||(t={}),"textColor"in t||(t.textColor=Cl(0,0,0)),"backgroundColor"in t||(t.backgroundColor=Cl(1,1,1)),"borderColor"in t||(t.borderColor=Cl(0,0,0)),"borderWidth"in t||(t.borderWidth=1);const a=this.createWidget({x:null!==(A=t.x)&&void 0!==A?A:0,y:null!==(r=t.y)&&void 0!==r?r:0,width:null!==(n=t.width)&&void 0!==n?n:50,height:null!==(s=t.height)&&void 0!==s?s:50,textColor:t.textColor,backgroundColor:t.backgroundColor,borderColor:t.borderColor,borderWidth:null!==(i=t.borderWidth)&&void 0!==i?i:0,rotate:null!==(o=t.rotate)&&void 0!==o?o:sa(0),hidden:t.hidden,page:e.ref}),l=this.doc.context.register(a.dict);this.acroField.addWidget(l),a.setAppearanceState(jn.of("Off")),this.updateWidgetAppearance(a,jn.of("Yes")),e.node.addAnnot(l)}needsAppearancesUpdate(){var e;const t=this.acroField.getWidgets();for(let A=0,r=t.length;A<r;A++){const r=t[A],n=r.getAppearanceState(),s=null===(e=r.getAppearances())||void 0===e?void 0:e.normal;if(!(s instanceof Vn))return!0;if(n&&!s.has(n))return!0}return!1}defaultUpdateAppearances(){this.updateAppearances()}updateAppearances(e){var t;Xr(e,"provider",[Function]);const A=this.acroField.getWidgets();for(let r=0,n=A.length;r<n;r++){const n=A[r],s=null!==(t=n.getOnValue())&&void 0!==t?t:jn.of("Yes");s&&this.updateWidgetAppearance(n,s,e)}this.markAsClean()}updateWidgetAppearance(e,t,A){const r=Fu((null!==A&&void 0!==A?A:zu)(this,e));this.updateOnOffWidgetAppearance(e,t,r)}}_u.of=(e,t,A)=>new _u(e,t,A);class $u extends Ju{constructor(e,t,A){super(e,t,A),Zr(e,"acroComboBox",[[to,"PDFAcroComboBox"]]),this.acroField=e}getOptions(){const e=this.acroField.getOptions(),t=new Array(e.length);for(let A=0,r=t.length;A<r;A++){const{display:r,value:n}=e[A];t[A]=(null!==r&&void 0!==r?r:n).decodeText()}return t}getSelected(){const e=this.acroField.getValues(),t=new Array(e.length);for(let A=0,r=e.length;A<r;A++)t[A]=e[A].decodeText();return t}setOptions(e){Zr(e,"options",[Array]);const t=new Array(e.length);for(let A=0,r=e.length;A<r;A++)t[A]={value:ks.fromText(e[A])};this.acroField.setOptions(t)}addOptions(e){Zr(e,"options",["string",Array]);const t=Array.isArray(e)?e:[e],A=this.acroField.getOptions(),r=new Array(t.length);for(let n=0,s=t.length;n<s;n++)r[n]={value:ks.fromText(t[n])};this.acroField.setOptions(A.concat(r))}select(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Zr(e,"options",["string",Array]),Zr(t,"merge",["boolean"]);const A=Array.isArray(e)?e:[e],r=this.getOptions();A.find((e=>!r.includes(e)))&&this.enableEditing(),this.markAsDirty(),(A.length>1||1===A.length&&t)&&this.enableMultiselect();const n=new Array(A.length);for(let s=0,i=A.length;s<i;s++)n[s]=ks.fromText(A[s]);if(t){const e=this.acroField.getValues();this.acroField.setValues(e.concat(n))}else this.acroField.setValues(n)}clear(){this.markAsDirty(),this.acroField.setValues([])}setFontSize(e){Ur(e,"fontSize"),this.acroField.setFontSize(e),this.markAsDirty()}isEditable(){return this.acroField.hasFlag(_i.Edit)}enableEditing(){this.acroField.setFlagTo(_i.Edit,!0)}disableEditing(){this.acroField.setFlagTo(_i.Edit,!1)}isSorted(){return this.acroField.hasFlag(_i.Sort)}enableSorting(){this.acroField.setFlagTo(_i.Sort,!0)}disableSorting(){this.acroField.setFlagTo(_i.Sort,!1)}isMultiselect(){return this.acroField.hasFlag(_i.MultiSelect)}enableMultiselect(){this.acroField.setFlagTo(_i.MultiSelect,!0)}disableMultiselect(){this.acroField.setFlagTo(_i.MultiSelect,!1)}isSpellChecked(){return!this.acroField.hasFlag(_i.DoNotSpellCheck)}enableSpellChecking(){this.acroField.setFlagTo(_i.DoNotSpellCheck,!1)}disableSpellChecking(){this.acroField.setFlagTo(_i.DoNotSpellCheck,!0)}isSelectOnClick(){return this.acroField.hasFlag(_i.CommitOnSelChange)}enableSelectOnClick(){this.acroField.setFlagTo(_i.CommitOnSelChange,!0)}disableSelectOnClick(){this.acroField.setFlagTo(_i.CommitOnSelChange,!1)}addToPage(e,t){var A,r,n,s,i,o,a;Zr(e,"page",[[ed,"PDFPage"]]),qu(t),t||(t={}),"textColor"in t||(t.textColor=Cl(0,0,0)),"backgroundColor"in t||(t.backgroundColor=Cl(1,1,1)),"borderColor"in t||(t.borderColor=Cl(0,0,0)),"borderWidth"in t||(t.borderWidth=1);const l=this.createWidget({x:null!==(A=t.x)&&void 0!==A?A:0,y:null!==(r=t.y)&&void 0!==r?r:0,width:null!==(n=t.width)&&void 0!==n?n:200,height:null!==(s=t.height)&&void 0!==s?s:50,textColor:t.textColor,backgroundColor:t.backgroundColor,borderColor:t.borderColor,borderWidth:null!==(i=t.borderWidth)&&void 0!==i?i:0,rotate:null!==(o=t.rotate)&&void 0!==o?o:sa(0),hidden:t.hidden,page:e.ref}),u=this.doc.context.register(l.dict);this.acroField.addWidget(u);const c=null!==(a=t.font)&&void 0!==a?a:this.doc.getForm().getDefaultFont();this.updateWidgetAppearance(l,c),e.node.addAnnot(u)}needsAppearancesUpdate(){var e;if(this.isDirty())return!0;const t=this.acroField.getWidgets();for(let A=0,r=t.length;A<r;A++){if(!((null===(e=t[A].getAppearances())||void 0===e?void 0:e.normal)instanceof On))return!0}return!1}defaultUpdateAppearances(e){Zr(e,"font",[[Yu,"PDFFont"]]),this.updateAppearances(e)}updateAppearances(e,t){Zr(e,"font",[[Yu,"PDFFont"]]),Xr(t,"provider",[Function]);const A=this.acroField.getWidgets();for(let r=0,n=A.length;r<n;r++){const n=A[r];this.updateWidgetAppearance(n,e,t)}this.markAsClean()}updateWidgetAppearance(e,t,A){const r=Fu((null!==A&&void 0!==A?A:Uu)(this,e,t));this.updateWidgetAppearanceWithFont(e,t,r)}}$u.of=(e,t,A)=>new $u(e,t,A);class ec extends Ju{constructor(e,t,A){super(e,t,A),Zr(e,"acroListBox",[[ho,"PDFAcroListBox"]]),this.acroField=e}getOptions(){const e=this.acroField.getOptions(),t=new Array(e.length);for(let A=0,r=t.length;A<r;A++){const{display:r,value:n}=e[A];t[A]=(null!==r&&void 0!==r?r:n).decodeText()}return t}getSelected(){const e=this.acroField.getValues(),t=new Array(e.length);for(let A=0,r=e.length;A<r;A++)t[A]=e[A].decodeText();return t}setOptions(e){Zr(e,"options",[Array]),this.markAsDirty();const t=new Array(e.length);for(let A=0,r=e.length;A<r;A++)t[A]={value:ks.fromText(e[A])};this.acroField.setOptions(t)}addOptions(e){Zr(e,"options",["string",Array]),this.markAsDirty();const t=Array.isArray(e)?e:[e],A=this.acroField.getOptions(),r=new Array(t.length);for(let n=0,s=t.length;n<s;n++)r[n]={value:ks.fromText(t[n])};this.acroField.setOptions(A.concat(r))}select(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Zr(e,"options",["string",Array]),Zr(t,"merge",["boolean"]);const A=Array.isArray(e)?e:[e],r=this.getOptions();Gr(A,"option",r),this.markAsDirty(),(A.length>1||1===A.length&&t)&&this.enableMultiselect();const n=new Array(A.length);for(let s=0,i=A.length;s<i;s++)n[s]=ks.fromText(A[s]);if(t){const e=this.acroField.getValues();this.acroField.setValues(e.concat(n))}else this.acroField.setValues(n)}clear(){this.markAsDirty(),this.acroField.setValues([])}setFontSize(e){Ur(e,"fontSize"),this.acroField.setFontSize(e),this.markAsDirty()}isSorted(){return this.acroField.hasFlag(_i.Sort)}enableSorting(){this.acroField.setFlagTo(_i.Sort,!0)}disableSorting(){this.acroField.setFlagTo(_i.Sort,!1)}isMultiselect(){return this.acroField.hasFlag(_i.MultiSelect)}enableMultiselect(){this.acroField.setFlagTo(_i.MultiSelect,!0)}disableMultiselect(){this.acroField.setFlagTo(_i.MultiSelect,!1)}isSelectOnClick(){return this.acroField.hasFlag(_i.CommitOnSelChange)}enableSelectOnClick(){this.acroField.setFlagTo(_i.CommitOnSelChange,!0)}disableSelectOnClick(){this.acroField.setFlagTo(_i.CommitOnSelChange,!1)}addToPage(e,t){var A,r,n,s,i,o,a;Zr(e,"page",[[ed,"PDFPage"]]),qu(t),t||(t={}),"textColor"in t||(t.textColor=Cl(0,0,0)),"backgroundColor"in t||(t.backgroundColor=Cl(1,1,1)),"borderColor"in t||(t.borderColor=Cl(0,0,0)),"borderWidth"in t||(t.borderWidth=1);const l=this.createWidget({x:null!==(A=t.x)&&void 0!==A?A:0,y:null!==(r=t.y)&&void 0!==r?r:0,width:null!==(n=t.width)&&void 0!==n?n:200,height:null!==(s=t.height)&&void 0!==s?s:100,textColor:t.textColor,backgroundColor:t.backgroundColor,borderColor:t.borderColor,borderWidth:null!==(i=t.borderWidth)&&void 0!==i?i:0,rotate:null!==(o=t.rotate)&&void 0!==o?o:sa(0),hidden:t.hidden,page:e.ref}),u=this.doc.context.register(l.dict);this.acroField.addWidget(u);const c=null!==(a=t.font)&&void 0!==a?a:this.doc.getForm().getDefaultFont();this.updateWidgetAppearance(l,c),e.node.addAnnot(u)}needsAppearancesUpdate(){var e;if(this.isDirty())return!0;const t=this.acroField.getWidgets();for(let A=0,r=t.length;A<r;A++){if(!((null===(e=t[A].getAppearances())||void 0===e?void 0:e.normal)instanceof On))return!0}return!1}defaultUpdateAppearances(e){Zr(e,"font",[[Yu,"PDFFont"]]),this.updateAppearances(e)}updateAppearances(e,t){Zr(e,"font",[[Yu,"PDFFont"]]),Xr(t,"provider",[Function]);const A=this.acroField.getWidgets();for(let r=0,n=A.length;r<n;r++){const n=A[r];this.updateWidgetAppearance(n,e,t)}this.markAsClean()}updateWidgetAppearance(e,t,A){const r=Fu((null!==A&&void 0!==A?A:Vu)(this,e,t));this.updateWidgetAppearanceWithFont(e,t,r)}}ec.of=(e,t,A)=>new ec(e,t,A);class tc extends Ju{constructor(e,t,A){super(e,t,A),Zr(e,"acroRadioButton",[[co,"PDFAcroRadioButton"]]),this.acroField=e}getOptions(){const e=this.acroField.getExportValues();if(e){const t=new Array(e.length);for(let A=0,r=e.length;A<r;A++)t[A]=e[A].decodeText();return t}const t=this.acroField.getOnValues(),A=new Array(t.length);for(let r=0,n=A.length;r<n;r++)A[r]=t[r].decodeText();return A}getSelected(){const e=this.acroField.getValue();if(e===jn.of("Off"))return;const t=this.acroField.getExportValues();if(t){const A=this.acroField.getOnValues();for(let r=0,n=A.length;r<n;r++)if(A[r]===e)return t[r].decodeText()}return e.decodeText()}select(e){Zr(e,"option",["string"]);const t=this.getOptions();Lr(e,"option",t),this.markAsDirty();const A=this.acroField.getOnValues(),r=this.acroField.getExportValues();if(r)for(let n=0,s=r.length;n<s;n++)r[n].decodeText()===e&&this.acroField.setValue(A[n]);else for(let n=0,s=A.length;n<s;n++){const t=A[n];t.decodeText()===e&&this.acroField.setValue(t)}}clear(){this.markAsDirty(),this.acroField.setValue(jn.of("Off"))}isOffToggleable(){return!this.acroField.hasFlag(qi.NoToggleToOff)}enableOffToggling(){this.acroField.setFlagTo(qi.NoToggleToOff,!1)}disableOffToggling(){this.acroField.setFlagTo(qi.NoToggleToOff,!0)}isMutuallyExclusive(){return!this.acroField.hasFlag(qi.RadiosInUnison)}enableMutualExclusion(){this.acroField.setFlagTo(qi.RadiosInUnison,!1)}disableMutualExclusion(){this.acroField.setFlagTo(qi.RadiosInUnison,!0)}addOptionToPage(e,t,A){var r,n,s,i,o,a,l,u,c;Zr(e,"option",["string"]),Zr(t,"page",[[ed,"PDFPage"]]),qu(A);const d=this.createWidget({x:null!==(r=null===A||void 0===A?void 0:A.x)&&void 0!==r?r:0,y:null!==(n=null===A||void 0===A?void 0:A.y)&&void 0!==n?n:0,width:null!==(s=null===A||void 0===A?void 0:A.width)&&void 0!==s?s:50,height:null!==(i=null===A||void 0===A?void 0:A.height)&&void 0!==i?i:50,textColor:null!==(o=null===A||void 0===A?void 0:A.textColor)&&void 0!==o?o:Cl(0,0,0),backgroundColor:null!==(a=null===A||void 0===A?void 0:A.backgroundColor)&&void 0!==a?a:Cl(1,1,1),borderColor:null!==(l=null===A||void 0===A?void 0:A.borderColor)&&void 0!==l?l:Cl(0,0,0),borderWidth:null!==(u=null===A||void 0===A?void 0:A.borderWidth)&&void 0!==u?u:1,rotate:null!==(c=null===A||void 0===A?void 0:A.rotate)&&void 0!==c?c:sa(0),hidden:null===A||void 0===A?void 0:A.hidden,page:t.ref}),f=this.doc.context.register(d.dict),h=this.acroField.addWidgetWithOpt(f,ks.fromText(e),!this.isMutuallyExclusive());d.setAppearanceState(jn.of("Off")),this.updateWidgetAppearance(d,h),t.node.addAnnot(f)}needsAppearancesUpdate(){var e;const t=this.acroField.getWidgets();for(let A=0,r=t.length;A<r;A++){const r=t[A],n=r.getAppearanceState(),s=null===(e=r.getAppearances())||void 0===e?void 0:e.normal;if(!(s instanceof Vn))return!0;if(n&&!s.has(n))return!0}return!1}defaultUpdateAppearances(){this.updateAppearances()}updateAppearances(e){Xr(e,"provider",[Function]);const t=this.acroField.getWidgets();for(let A=0,r=t.length;A<r;A++){const r=t[A],n=r.getOnValue();n&&this.updateWidgetAppearance(r,n,e)}}updateWidgetAppearance(e,t,A){const r=Fu((null!==A&&void 0!==A?A:Ru)(this,e));this.updateOnOffWidgetAppearance(e,t,r)}}tc.of=(e,t,A)=>new tc(e,t,A);class Ac extends Ju{constructor(e,t,A){super(e,t,A),Zr(e,"acroSignature",[[so,"PDFAcroSignature"]]),this.acroField=e}needsAppearancesUpdate(){return!1}}Ac.of=(e,t,A)=>new Ac(e,t,A);class rc extends Ju{constructor(e,t,A){super(e,t,A),Zr(e,"acroText",[[oo,"PDFAcroText"]]),this.acroField=e}getText(){const e=this.acroField.getValue();if(!e&&this.isRichFormatted())throw new xu(this.getName());return null===e||void 0===e?void 0:e.decodeText()}setText(e){Xr(e,"text",["string"]);const t=this.getMaxLength();if(void 0!==t&&e&&e.length>t)throw new Eu(e.length,t,this.getName());this.markAsDirty(),this.disableRichFormatting(),e?this.acroField.setValue(ks.fromText(e)):this.acroField.removeValue()}getAlignment(){const e=this.acroField.getQuadding();return 0===e?Du.Left:1===e?Du.Center:2===e?Du.Right:Du.Left}setAlignment(e){Lr(e,"alignment",Du),this.markAsDirty(),this.acroField.setQuadding(e)}getMaxLength(){return this.acroField.getMaxLength()}setMaxLength(e){if(Rr(e,"maxLength",0,Number.MAX_SAFE_INTEGER),this.markAsDirty(),void 0===e)this.acroField.removeMaxLength();else{const t=this.getText();if(t&&t.length>e)throw new Nu(t.length,e,this.getName());this.acroField.setMaxLength(e)}}removeMaxLength(){this.markAsDirty(),this.acroField.removeMaxLength()}setImage(e){const t=this.getAlignment(),A=t===Du.Center?Ku.Center:t===Du.Right?Ku.Right:Ku.Left,r=this.acroField.getWidgets();for(let n=0,s=r.length;n<s;n++){const t=r[n],s=this.createImageAppearanceStream(t,e,A);this.updateWidgetAppearances(t,{normal:s})}this.markAsClean()}setFontSize(e){Ur(e,"fontSize"),this.acroField.setFontSize(e),this.markAsDirty()}isMultiline(){return this.acroField.hasFlag(Ji.Multiline)}enableMultiline(){this.markAsDirty(),this.acroField.setFlagTo(Ji.Multiline,!0)}disableMultiline(){this.markAsDirty(),this.acroField.setFlagTo(Ji.Multiline,!1)}isPassword(){return this.acroField.hasFlag(Ji.Password)}enablePassword(){this.acroField.setFlagTo(Ji.Password,!0)}disablePassword(){this.acroField.setFlagTo(Ji.Password,!1)}isFileSelector(){return this.acroField.hasFlag(Ji.FileSelect)}enableFileSelection(){this.acroField.setFlagTo(Ji.FileSelect,!0)}disableFileSelection(){this.acroField.setFlagTo(Ji.FileSelect,!1)}isSpellChecked(){return!this.acroField.hasFlag(Ji.DoNotSpellCheck)}enableSpellChecking(){this.acroField.setFlagTo(Ji.DoNotSpellCheck,!1)}disableSpellChecking(){this.acroField.setFlagTo(Ji.DoNotSpellCheck,!0)}isScrollable(){return!this.acroField.hasFlag(Ji.DoNotScroll)}enableScrolling(){this.acroField.setFlagTo(Ji.DoNotScroll,!1)}disableScrolling(){this.acroField.setFlagTo(Ji.DoNotScroll,!0)}isCombed(){return this.acroField.hasFlag(Ji.Comb)&&!this.isMultiline()&&!this.isPassword()&&!this.isFileSelector()&&void 0!==this.getMaxLength()}enableCombing(){if(void 0===this.getMaxLength()){const e="PDFTextFields must have a max length in order to be combed";console.warn(e)}this.markAsDirty(),this.disableMultiline(),this.disablePassword(),this.disableFileSelection(),this.acroField.setFlagTo(Ji.Comb,!0)}disableCombing(){this.markAsDirty(),this.acroField.setFlagTo(Ji.Comb,!1)}isRichFormatted(){return this.acroField.hasFlag(Ji.RichText)}enableRichFormatting(){this.acroField.setFlagTo(Ji.RichText,!0)}disableRichFormatting(){this.acroField.setFlagTo(Ji.RichText,!1)}addToPage(e,t){var A,r,n,s,i,o,a;Zr(e,"page",[[ed,"PDFPage"]]),qu(t),t||(t={}),"textColor"in t||(t.textColor=Cl(0,0,0)),"backgroundColor"in t||(t.backgroundColor=Cl(1,1,1)),"borderColor"in t||(t.borderColor=Cl(0,0,0)),"borderWidth"in t||(t.borderWidth=1);const l=this.createWidget({x:null!==(A=t.x)&&void 0!==A?A:0,y:null!==(r=t.y)&&void 0!==r?r:0,width:null!==(n=t.width)&&void 0!==n?n:200,height:null!==(s=t.height)&&void 0!==s?s:50,textColor:t.textColor,backgroundColor:t.backgroundColor,borderColor:t.borderColor,borderWidth:null!==(i=t.borderWidth)&&void 0!==i?i:0,rotate:null!==(o=t.rotate)&&void 0!==o?o:sa(0),hidden:t.hidden,page:e.ref}),u=this.doc.context.register(l.dict);this.acroField.addWidget(u);const c=null!==(a=t.font)&&void 0!==a?a:this.doc.getForm().getDefaultFont();this.updateWidgetAppearance(l,c),e.node.addAnnot(u)}needsAppearancesUpdate(){var e;if(this.isDirty())return!0;const t=this.acroField.getWidgets();for(let A=0,r=t.length;A<r;A++){if(!((null===(e=t[A].getAppearances())||void 0===e?void 0:e.normal)instanceof On))return!0}return!1}defaultUpdateAppearances(e){Zr(e,"font",[[Yu,"PDFFont"]]),this.updateAppearances(e)}updateAppearances(e,t){Zr(e,"font",[[Yu,"PDFFont"]]),Xr(t,"provider",[Function]);const A=this.acroField.getWidgets();for(let r=0,n=A.length;r<n;r++){const n=A[r];this.updateWidgetAppearance(n,e,t)}this.markAsClean()}updateWidgetAppearance(e,t,A){const r=Fu((null!==A&&void 0!==A?A:Tu)(this,e,t));this.updateWidgetAppearanceWithFont(e,t,r)}}var nc;rc.of=(e,t,A)=>new rc(e,t,A),function(e){e.Courier="Courier",e.CourierBold="Courier-Bold",e.CourierOblique="Courier-Oblique",e.CourierBoldOblique="Courier-BoldOblique",e.Helvetica="Helvetica",e.HelveticaBold="Helvetica-Bold",e.HelveticaOblique="Helvetica-Oblique",e.HelveticaBoldOblique="Helvetica-BoldOblique",e.TimesRoman="Times-Roman",e.TimesRomanBold="Times-Bold",e.TimesRomanItalic="Times-Italic",e.TimesRomanBoldItalic="Times-BoldItalic",e.Symbol="Symbol",e.ZapfDingbats="ZapfDingbats"}(nc||(nc={}));class sc{constructor(e,t){this.embedDefaultFont=()=>this.doc.embedStandardFont(nc.Helvetica),Zr(e,"acroForm",[[Eo,"PDFAcroForm"]]),Zr(t,"doc",[[Ic,"PDFDocument"]]),this.acroForm=e,this.doc=t,this.dirtyFields=new Set,this.defaultFontCache=Hr.populatedBy(this.embedDefaultFont)}hasXFA(){return this.acroForm.dict.has(jn.of("XFA"))}deleteXFA(){this.acroForm.dict.delete(jn.of("XFA"))}getFields(){const e=this.acroForm.getAllFields(),t=[];for(let A=0,r=e.length;A<r;A++){const[r,n]=e[A],s=ic(r,n,this.doc);s&&t.push(s)}return t}getFieldMaybe(e){Zr(e,"name",["string"]);const t=this.getFields();for(let A=0,r=t.length;A<r;A++){const r=t[A];if(r.getName()===e)return r}}getField(e){Zr(e,"name",["string"]);const t=this.getFieldMaybe(e);if(t)return t;throw new bu(e)}getButton(e){Zr(e,"name",["string"]);const t=this.getField(e);if(t instanceof td)return t;throw new mu(e,td,t)}getCheckBox(e){Zr(e,"name",["string"]);const t=this.getField(e);if(t instanceof _u)return t;throw new mu(e,_u,t)}getDropdown(e){Zr(e,"name",["string"]);const t=this.getField(e);if(t instanceof $u)return t;throw new mu(e,$u,t)}getOptionList(e){Zr(e,"name",["string"]);const t=this.getField(e);if(t instanceof ec)return t;throw new mu(e,ec,t)}getRadioGroup(e){Zr(e,"name",["string"]);const t=this.getField(e);if(t instanceof tc)return t;throw new mu(e,tc,t)}getSignature(e){Zr(e,"name",["string"]);const t=this.getField(e);if(t instanceof Ac)return t;throw new mu(e,Ac,t)}getTextField(e){Zr(e,"name",["string"]);const t=this.getField(e);if(t instanceof rc)return t;throw new mu(e,rc,t)}createButton(e){Zr(e,"name",["string"]);const t=oc(e),A=this.findOrCreateNonTerminals(t.nonTerminal),r=lo.create(this.doc.context);return r.setPartialName(t.terminal),ac(A,[r,r.ref],t.terminal),td.of(r,r.ref,this.doc)}createCheckBox(e){Zr(e,"name",["string"]);const t=oc(e),A=this.findOrCreateNonTerminals(t.nonTerminal),r=Yi.create(this.doc.context);return r.setPartialName(t.terminal),ac(A,[r,r.ref],t.terminal),_u.of(r,r.ref,this.doc)}createDropdown(e){Zr(e,"name",["string"]);const t=oc(e),A=this.findOrCreateNonTerminals(t.nonTerminal),r=to.create(this.doc.context);return r.setPartialName(t.terminal),ac(A,[r,r.ref],t.terminal),$u.of(r,r.ref,this.doc)}createOptionList(e){Zr(e,"name",["string"]);const t=oc(e),A=this.findOrCreateNonTerminals(t.nonTerminal),r=ho.create(this.doc.context);return r.setPartialName(t.terminal),ac(A,[r,r.ref],t.terminal),ec.of(r,r.ref,this.doc)}createRadioGroup(e){Zr(e,"name",["string"]);const t=oc(e),A=this.findOrCreateNonTerminals(t.nonTerminal),r=co.create(this.doc.context);return r.setPartialName(t.terminal),ac(A,[r,r.ref],t.terminal),tc.of(r,r.ref,this.doc)}createTextField(e){Zr(e,"name",["string"]);const t=oc(e),A=this.findOrCreateNonTerminals(t.nonTerminal),r=oo.create(this.doc.context);return r.setPartialName(t.terminal),ac(A,[r,r.ref],t.terminal),rc.of(r,r.ref,this.doc)}flatten(){(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{updateFieldAppearances:!0}).updateFieldAppearances&&this.updateFieldAppearances();const e=this.getFields();for(let A=0,r=e.length;A<r;A++){const r=e[A],n=r.acroField.getWidgets();for(let e=0,A=n.length;e<A;e++)try{const t=n[e],A=this.findWidgetPage(t),s=this.findWidgetAppearanceRef(r,t),i=A.node.newXObject("FlatWidget",s),o=t.getRectangle(),a=[Fa(),wa(o.x,o.y),...iu({...o,rotation:0}),dl(i),Sa()].filter(Boolean);A.pushOperators(...a)}catch(t){console.error(t)}this.removeField(r)}}removeField(e){const t=e.acroField.getWidgets(),A=new Set;for(let i=0,o=t.length;i<o;i++)try{const r=t[i],n=this.findWidgetAppearanceRef(e,r),s=this.findWidgetPage(r);A.add(s),s.node.removeAnnot(n)}catch(s){console.error(s)}A.forEach((t=>t.node.removeAnnot(e.ref))),this.acroForm.removeField(e.acroField);const r=e.acroField.normalizedEntries().Kids,n=r.size();for(let i=0;i<n;i++){const e=r.get(i);e instanceof _n&&this.doc.context.delete(e)}this.doc.context.delete(e.ref)}updateFieldAppearances(e){Xr(e,"font",[[Yu,"PDFFont"]]),e=null!==e&&void 0!==e?e:this.getDefaultFont();const t=this.getFields();for(let A=0,r=t.length;A<r;A++){const r=t[A];r.needsAppearancesUpdate()&&r.defaultUpdateAppearances(e)}}markFieldAsDirty(e){Xr(e,"fieldRef",[[_n,"PDFRef"]]),this.dirtyFields.add(e)}markFieldAsClean(e){Xr(e,"fieldRef",[[_n,"PDFRef"]]),this.dirtyFields.delete(e)}fieldIsDirty(e){return Xr(e,"fieldRef",[[_n,"PDFRef"]]),this.dirtyFields.has(e)}getDefaultFont(){return this.defaultFontCache.access()}findWidgetPage(e){const t=e.P();let A=this.doc.getPages().find((e=>e.ref===t));if(void 0===A){const t=this.doc.context.getObjectRef(e.dict);if(void 0===t)throw new Error("Could not find PDFRef for PDFObject");if(A=this.doc.findPageForAnnotationRef(t),void 0===A)throw new Error(`Could not find page for PDFRef ${t}`)}return A}findWidgetAppearanceRef(e,t){var A;let r=t.getNormalAppearance();if(r instanceof Vn&&(e instanceof _u||e instanceof tc)){const t=e.acroField.getValue(),n=null!==(A=r.get(t))&&void 0!==A?A:r.get(jn.of("Off"));n instanceof _n&&(r=n)}if(!(r instanceof _n)){const t=e.getName();throw new Error(`Failed to extract appearance ref for: ${t}`)}return r}findOrCreateNonTerminals(e){let t=[this.acroForm];for(let A=0,r=e.length;A<r;A++){const r=e[A];if(!r)throw new wu(r);const[n,s]=t,i=this.findNonTerminal(r,n);if(i)t=i;else{const e=ro.create(this.doc.context);e.setPartialName(r),e.setParent(s);const A=this.doc.context.register(e.dict);n.addField(A),t=[e,A]}}return t}findNonTerminal(e,t){const A=t instanceof Eo?this.acroForm.getFields():go(t.Kids());for(let r=0,n=A.length;r<n;r++){const[t,n]=A[r];if(t.getPartialName()===e){if(t instanceof ro)return[t,n];throw new yu(e)}}}}sc.of=(e,t)=>new sc(e,t);const ic=(e,t,A)=>e instanceof lo?td.of(e,t,A):e instanceof Yi?_u.of(e,t,A):e instanceof to?$u.of(e,t,A):e instanceof ho?ec.of(e,t,A):e instanceof oo?rc.of(e,t,A):e instanceof co?tc.of(e,t,A):e instanceof so?Ac.of(e,t,A):void 0,oc=e=>{if(0===e.length)throw new Error("PDF field names must not be empty strings");const t=e.split(".");for(let A=0,r=t.length;A<r;A++)if(""===t[A])throw new Error(`Periods in PDF field names must be separated by at least one character: "${e}"`);return 1===t.length?{nonTerminal:[],terminal:t[0]}:{nonTerminal:t.slice(0,t.length-1),terminal:t[t.length-1]}},ac=(e,t,A)=>{let[r,n]=e,[s,i]=t;const o=r.normalizedEntries(),a=go("Kids"in o?o.Kids:o.Fields);for(let l=0,u=a.length;l<u;l++)if(a[l][0].getPartialName()===A)throw new yu(A);r.addField(i),s.setParent(n)},lc={"4A0":[4767.87,6740.79],"2A0":[3370.39,4767.87],A0:[2383.94,3370.39],A1:[1683.78,2383.94],A2:[1190.55,1683.78],A3:[841.89,1190.55],A4:[595.28,841.89],A5:[419.53,595.28],A6:[297.64,419.53],A7:[209.76,297.64],A8:[147.4,209.76],A9:[104.88,147.4],A10:[73.7,104.88],B0:[2834.65,4008.19],B1:[2004.09,2834.65],B2:[1417.32,2004.09],B3:[1000.63,1417.32],B4:[708.66,1000.63],B5:[498.9,708.66],B6:[354.33,498.9],B7:[249.45,354.33],B8:[175.75,249.45],B9:[124.72,175.75],B10:[87.87,124.72],C0:[2599.37,3676.54],C1:[1836.85,2599.37],C2:[1298.27,1836.85],C3:[918.43,1298.27],C4:[649.13,918.43],C5:[459.21,649.13],C6:[323.15,459.21],C7:[229.61,323.15],C8:[161.57,229.61],C9:[113.39,161.57],C10:[79.37,113.39],RA0:[2437.8,3458.27],RA1:[1729.13,2437.8],RA2:[1218.9,1729.13],RA3:[864.57,1218.9],RA4:[609.45,864.57],SRA0:[2551.18,3628.35],SRA1:[1814.17,2551.18],SRA2:[1275.59,1814.17],SRA3:[907.09,1275.59],SRA4:[637.8,907.09],Executive:[521.86,756],Folio:[612,936],Legal:[612,1008],Letter:[612,792],Tabloid:[792,1224]};var uc;!function(e){e[e.Fastest=1/0]="Fastest",e[e.Fast=1500]="Fast",e[e.Medium=500]="Medium",e[e.Slow=100]="Slow"}(uc||(uc={}));class cc{constructor(e,t,A){this.alreadyEmbedded=!1,this.ref=e,this.doc=t,this.embedder=A}async embed(){if(!this.alreadyEmbedded){const e=await this.embedder.embedIntoContext(this.doc.context,this.ref);this.doc.catalog.has(jn.of("Names"))||this.doc.catalog.set(jn.of("Names"),this.doc.context.obj({}));const t=this.doc.catalog.lookup(jn.of("Names"),Vn);t.has(jn.of("EmbeddedFiles"))||t.set(jn.of("EmbeddedFiles"),this.doc.context.obj({}));const A=t.lookup(jn.of("EmbeddedFiles"),Vn);A.has(jn.of("Names"))||A.set(jn.of("Names"),this.doc.context.obj([]));const r=A.lookup(jn.of("Names"),kn);r.push(ks.fromText(this.embedder.fileName)),r.push(e),this.doc.catalog.has(jn.of("AF"))||this.doc.catalog.set(jn.of("AF"),this.doc.context.obj([]));this.doc.catalog.lookup(jn.of("AF"),kn).push(e),this.alreadyEmbedded=!0}}}cc.of=(e,t,A)=>new cc(e,t,A);class dc{constructor(e,t,A){this.alreadyEmbedded=!1,this.ref=e,this.doc=t,this.embedder=A}async embed(){if(!this.alreadyEmbedded){const{catalog:e,context:t}=this.doc,A=await this.embedder.embedIntoContext(this.doc.context,this.ref);e.has(jn.of("Names"))||e.set(jn.of("Names"),t.obj({}));const r=e.lookup(jn.of("Names"),Vn);r.has(jn.of("JavaScript"))||r.set(jn.of("JavaScript"),t.obj({}));const n=r.lookup(jn.of("JavaScript"),Vn);n.has(jn.of("Names"))||n.set(jn.of("Names"),t.obj([]));const s=n.lookup(jn.of("Names"),kn);s.push(ks.fromText(this.embedder.scriptName)),s.push(A),this.alreadyEmbedded=!0}}}dc.of=(e,t,A)=>new dc(e,t,A);class fc{constructor(e,t){this.script=e,this.scriptName=t}static for(e,t){return new fc(e,t)}async embedIntoContext(e,t){const A=e.obj({Type:"Action",S:"JavaScript",JS:ks.fromText(this.script)});return t?(e.assign(t,A),t):e.register(A)}}const hc=fc;const gc=class extends li{constructor(e,t,A){super(A),this.stream=e,this.decrypt=t,this.nextChunk=null,this.initialized=!1}readBlock(){let e;if(this.initialized?e=this.nextChunk:(e=this.stream.getBytes(512),this.initialized=!0),!e||0===e.length)return void(this.eof=!0);this.nextChunk=this.stream.getBytes(512);const t=this.nextChunk&&this.nextChunk.length>0;e=(0,this.decrypt)(e,!t);const A=this.bufferLength,r=A+e.length;this.ensureBuffer(r).set(e,A),this.bufferLength=r}};class pc{constructor(e){this.a=0,this.b=0;const t=new Uint8Array(256),A=e.length;for(let r=0;r<256;++r)t[r]=r;for(let r=0,n=0;r<256;++r){const s=t[r];n=n+s+e[r%A]&255,t[r]=t[n],t[n]=s}this.s=t}encryptBlock(e){let t=this.a,A=this.b;const r=this.s,n=e.length,s=new Uint8Array(n);for(let i=0;i<n;++i){t=t+1&255;const n=r[t];A=A+n&255;const o=r[A];r[t]=o,r[A]=n,s[i]=e[i]^r[n+o&255]}return this.a=t,this.b=A,s}decryptBlock(e){return this.encryptBlock(e)}encrypt(e){return this.encryptBlock(e)}}const bc=function(){const e=new Uint8Array([7,12,17,22,7,12,17,22,7,12,17,22,7,12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,15,21,6,10,15,21,6,10,15,21,6,10,15,21]),t=new Int32Array([-680876936,-389564586,606105819,-1044525330,-176418897,1200080426,-1473231341,-45705983,1770035416,-1958414417,-42063,-1990404162,1804603682,-40341101,-1502002290,1236535329,-165796510,-1069501632,643717713,-373897302,-701558691,38016083,-660478335,-405537848,568446438,-1019803690,-187363961,1163531501,-1444681467,-51403784,1735328473,-1926607734,-378558,-2022574463,1839030562,-35309556,-1530992060,1272893353,-155497632,-1094730640,681279174,-358537222,-722521979,76029189,-640364487,-421815835,530742520,-995338651,-198630844,1126891415,-1416354905,-57434055,1700485571,-1894986606,-1051523,-2054922799,1873313359,-30611744,-1560198380,1309151649,-145523070,-1120210379,718787259,-343485551]);return function(A,r,n){let s=1732584193,i=-271733879,o=-1732584194,a=271733878;const l=n+72&-64,u=new Uint8Array(l);let c,d;for(c=0;c<n;++c)u[c]=A[r++];u[c++]=128;const f=l-8;for(;c<f;)u[c++]=0;u[c++]=n<<3&255,u[c++]=n>>5&255,u[c++]=n>>13&255,u[c++]=n>>21&255,u[c++]=n>>>29&255,u[c++]=0,u[c++]=0,u[c++]=0;const h=new Int32Array(16);for(c=0;c<l;){for(d=0;d<16;++d,c+=4)h[d]=u[c]|u[c+1]<<8|u[c+2]<<16|u[c+3]<<24;let A,r,n=s,l=i,f=o,g=a;for(d=0;d<64;++d){d<16?(A=l&f|~l&g,r=d):d<32?(A=g&l|~g&f,r=5*d+1&15):d<48?(A=l^f^g,r=3*d+5&15):(A=f^(l|~g),r=7*d&15);const s=g,i=n+A+t[d]+h[r]|0,o=e[d];g=f,f=l,l=l+(i<<o|i>>>32-o)|0,n=s}s=s+n|0,i=i+l|0,o=o+f|0,a=a+g|0}return new Uint8Array([255&s,s>>8&255,s>>16&255,s>>>24&255,255&i,i>>8&255,i>>16&255,i>>>24&255,255&o,o>>8&255,o>>16&255,o>>>24&255,255&a,a>>8&255,a>>16&255,a>>>24&255])}}();class mc{constructor(e,t){this.high=0|e,this.low=0|t}and(e){this.high&=e.high,this.low&=e.low}xor(e){this.high^=e.high,this.low^=e.low}or(e){this.high|=e.high,this.low|=e.low}shiftRight(e){e>=32?(this.low=this.high>>>e-32|0,this.high=0):(this.low=this.low>>>e|this.high<<32-e,this.high=this.high>>>e|0)}shiftLeft(e){e>=32?(this.high=this.low<<e-32,this.low=0):(this.high=this.high<<e|this.low>>>32-e,this.low<<=e)}rotateRight(e){let t,A;32&e?(A=this.low,t=this.high):(t=this.low,A=this.high),e&=31,this.low=t>>>e|A<<32-e,this.high=A>>>e|t<<32-e}not(){this.high=~this.high,this.low=~this.low}add(e){const t=(this.low>>>0)+(e.low>>>0);let A=(this.high>>>0)+(e.high>>>0);t>4294967295&&(A+=1),this.low=0|t,this.high=0|A}copyTo(e,t){e[t]=this.high>>>24&255,e[t+1]=this.high>>16&255,e[t+2]=this.high>>8&255,e[t+3]=255&this.high,e[t+4]=this.low>>>24&255,e[t+5]=this.low>>16&255,e[t+6]=this.low>>8&255,e[t+7]=255&this.low}assign(e){this.high=e.high,this.low=e.low}}const vc=function(){function e(e,t){return e>>>t|e<<32-t}function t(e,t,A){return e&t^~e&A}function A(e,t,A){return e&t^e&A^t&A}function r(t){return e(t,2)^e(t,13)^e(t,22)}function n(t){return e(t,6)^e(t,11)^e(t,25)}function s(t){return e(t,7)^e(t,18)^t>>>3}const i=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];return function(o,a,l){let u=1779033703,c=3144134277,d=1013904242,f=2773480762,h=1359893119,g=2600822924,p=528734635,b=1541459225;const m=64*Math.ceil((l+9)/64),v=new Uint8Array(m);let y,w;for(y=0;y<l;++y)v[y]=o[a++];v[y++]=128;const B=m-8;for(;y<B;)v[y++]=0;v[y++]=0,v[y++]=0,v[y++]=0,v[y++]=l>>>29&255,v[y++]=l>>21&255,v[y++]=l>>13&255,v[y++]=l>>5&255,v[y++]=l<<3&255;const x=new Uint32Array(64);for(y=0;y<m;){for(w=0;w<16;++w)x[w]=v[y]<<24|v[y+1]<<16|v[y+2]<<8|v[y+3],y+=4;for(w=16;w<64;++w)x[w]=0|(e(C=x[w-2],17)^e(C,19)^C>>>10)+x[w-7]+s(x[w-15])+x[w-16];let o,a,l=u,m=c,B=d,E=f,N=h,D=g,Q=p,P=b;for(w=0;w<64;++w)o=P+n(N)+t(N,D,Q)+i[w]+x[w],a=r(l)+A(l,m,B),P=Q,Q=D,D=N,N=E+o|0,E=B,B=m,m=l,l=o+a|0;u=u+l|0,c=c+m|0,d=d+B|0,f=f+E|0,h=h+N|0,g=g+D|0,p=p+Q|0,b=b+P|0}var C;return new Uint8Array([u>>24&255,u>>16&255,u>>8&255,255&u,c>>24&255,c>>16&255,c>>8&255,255&c,d>>24&255,d>>16&255,d>>8&255,255&d,f>>24&255,f>>16&255,f>>8&255,255&f,h>>24&255,h>>16&255,h>>8&255,255&h,g>>24&255,g>>16&255,g>>8&255,255&g,p>>24&255,p>>16&255,p>>8&255,255&p,b>>24&255,b>>16&255,b>>8&255,255&b])}}(),yc=function(){function e(e,t,A,r,n){e.assign(t),e.and(A),n.assign(t),n.not(),n.and(r),e.xor(n)}function t(e,t,A,r,n){e.assign(t),e.and(A),n.assign(t),n.and(r),e.xor(n),n.assign(A),n.and(r),e.xor(n)}function A(e,t,A){e.assign(t),e.rotateRight(28),A.assign(t),A.rotateRight(34),e.xor(A),A.assign(t),A.rotateRight(39),e.xor(A)}function r(e,t,A){e.assign(t),e.rotateRight(14),A.assign(t),A.rotateRight(18),e.xor(A),A.assign(t),A.rotateRight(41),e.xor(A)}function n(e,t,A){e.assign(t),e.rotateRight(1),A.assign(t),A.rotateRight(8),e.xor(A),A.assign(t),A.shiftRight(7),e.xor(A)}function s(e,t,A){e.assign(t),e.rotateRight(19),A.assign(t),A.rotateRight(61),e.xor(A),A.assign(t),A.shiftRight(6),e.xor(A)}const i=[new mc(1116352408,3609767458),new mc(1899447441,602891725),new mc(3049323471,3964484399),new mc(3921009573,2173295548),new mc(961987163,4081628472),new mc(1508970993,3053834265),new mc(2453635748,2937671579),new mc(2870763221,3664609560),new mc(3624381080,2734883394),new mc(310598401,1164996542),new mc(607225278,1323610764),new mc(1426881987,3590304994),new mc(1925078388,4068182383),new mc(2162078206,991336113),new mc(2614888103,633803317),new mc(3248222580,3479774868),new mc(3835390401,2666613458),new mc(4022224774,944711139),new mc(264347078,2341262773),new mc(604807628,2007800933),new mc(770255983,1495990901),new mc(1249150122,1856431235),new mc(1555081692,3175218132),new mc(1996064986,2198950837),new mc(2554220882,3999719339),new mc(2821834349,766784016),new mc(2952996808,2566594879),new mc(3210313671,3203337956),new mc(3336571891,1034457026),new mc(3584528711,2466948901),new mc(113926993,3758326383),new mc(338241895,168717936),new mc(666307205,1188179964),new mc(773529912,1546045734),new mc(1294757372,1522805485),new mc(1396182291,2643833823),new mc(1695183700,2343527390),new mc(1986661051,1014477480),new mc(2177026350,1206759142),new mc(2456956037,344077627),new mc(2730485921,1290863460),new mc(2820302411,3158454273),new mc(3259730800,3505952657),new mc(3345764771,106217008),new mc(3516065817,3606008344),new mc(3600352804,1432725776),new mc(4094571909,1467031594),new mc(275423344,851169720),new mc(430227734,3100823752),new mc(506948616,1363258195),new mc(659060556,3750685593),new mc(883997877,3785050280),new mc(958139571,3318307427),new mc(1322822218,3812723403),new mc(1537002063,2003034995),new mc(1747873779,3602036899),new mc(1955562222,1575990012),new mc(2024104815,1125592928),new mc(2227730452,2716904306),new mc(2361852424,442776044),new mc(2428436474,593698344),new mc(2756734187,3733110249),new mc(3204031479,2999351573),new mc(3329325298,3815920427),new mc(3391569614,3928383900),new mc(3515267271,566280711),new mc(3940187606,3454069534),new mc(4118630271,4000239992),new mc(116418474,1914138554),new mc(174292421,2731055270),new mc(289380356,3203993006),new mc(460393269,320620315),new mc(685471733,587496836),new mc(852142971,1086792851),new mc(1017036298,365543100),new mc(1126000580,2618297676),new mc(1288033470,3409855158),new mc(1501505948,4234509866),new mc(1607167915,987167468),new mc(1816402316,1246189591)];return function(o,a,l){let u,c,d,f,h,g,p,b,m=arguments.length>3&&void 0!==arguments[3]&&arguments[3];m?(u=new mc(3418070365,3238371032),c=new mc(1654270250,914150663),d=new mc(2438529370,812702999),f=new mc(355462360,4144912697),h=new mc(1731405415,4290775857),g=new mc(2394180231,1750603025),p=new mc(3675008525,1694076839),b=new mc(1203062813,3204075428)):(u=new mc(1779033703,4089235720),c=new mc(3144134277,2227873595),d=new mc(1013904242,4271175723),f=new mc(2773480762,1595750129),h=new mc(1359893119,2917565137),g=new mc(2600822924,725511199),p=new mc(528734635,4215389547),b=new mc(1541459225,327033209));const v=128*Math.ceil((l+17)/128),y=new Uint8Array(v);let w,B;for(w=0;w<l;++w)y[w]=o[a++];y[w++]=128;const x=v-16;for(;w<x;)y[w++]=0;y[w++]=0,y[w++]=0,y[w++]=0,y[w++]=0,y[w++]=0,y[w++]=0,y[w++]=0,y[w++]=0,y[w++]=0,y[w++]=0,y[w++]=0,y[w++]=l>>>29&255,y[w++]=l>>21&255,y[w++]=l>>13&255,y[w++]=l>>5&255,y[w++]=l<<3&255;const C=new Array(80);for(w=0;w<80;w++)C[w]=new mc(0,0);let E=new mc(0,0),N=new mc(0,0),D=new mc(0,0),Q=new mc(0,0),P=new mc(0,0),I=new mc(0,0),L=new mc(0,0),k=new mc(0,0);const G=new mc(0,0),F=new mc(0,0),S=new mc(0,0),W=new mc(0,0);let Z,X;for(w=0;w<v;){for(B=0;B<16;++B)C[B].high=y[w]<<24|y[w+1]<<16|y[w+2]<<8|y[w+3],C[B].low=y[w+4]<<24|y[w+5]<<16|y[w+6]<<8|y[w+7],w+=8;for(B=16;B<80;++B)Z=C[B],s(Z,C[B-2],W),Z.add(C[B-7]),n(S,C[B-15],W),Z.add(S),Z.add(C[B-16]);for(E.assign(u),N.assign(c),D.assign(d),Q.assign(f),P.assign(h),I.assign(g),L.assign(p),k.assign(b),B=0;B<80;++B)G.assign(k),r(S,P,W),G.add(S),e(S,P,I,L,W),G.add(S),G.add(i[B]),G.add(C[B]),A(F,E,W),t(S,E,N,D,W),F.add(S),Z=k,k=L,L=I,I=P,Q.add(G),P=Q,Q=D,D=N,N=E,Z.assign(G),Z.add(F),E=Z;u.add(E),c.add(N),d.add(D),f.add(Q),h.add(P),g.add(I),p.add(L),b.add(k)}return m?(X=new Uint8Array(48),u.copyTo(X,0),c.copyTo(X,8),d.copyTo(X,16),f.copyTo(X,24),h.copyTo(X,32),g.copyTo(X,40)):(X=new Uint8Array(64),u.copyTo(X,0),c.copyTo(X,8),d.copyTo(X,16),f.copyTo(X,24),h.copyTo(X,32),g.copyTo(X,40),p.copyTo(X,48),b.copyTo(X,56)),X}}();function wc(e,t,A){return yc(e,t,A,!0)}class Bc{decryptBlock(e){return e}encrypt(e){return e}}class xc{constructor(){if(this.constructor===xc)throw new Error("Cannot initialize AESBaseCipher.");this._s=new Uint8Array([99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22]),this._inv_s=new Uint8Array([82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125]),this._mix=new Uint32Array([0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795]),this._mixCol=new Uint8Array(256);for(let e=0;e<256;e++)this._mixCol[e]=e<128?e<<1:e<<1^27;this.buffer=new Uint8Array(16),this.bufferPosition=0}_expandKey(e){throw new Error("Cannot call `_expandKey` on the base class")}_decrypt(e,t){let A,r,n;const s=new Uint8Array(16);s.set(e);for(let i=0,o=this._keySize;i<16;++i,++o)s[i]^=t[o];for(let i=this._cyclesOfRepetition-1;i>=1;--i){A=s[13],s[13]=s[9],s[9]=s[5],s[5]=s[1],s[1]=A,A=s[14],r=s[10],s[14]=s[6],s[10]=s[2],s[6]=A,s[2]=r,A=s[15],r=s[11],n=s[7],s[15]=s[3],s[11]=A,s[7]=r,s[3]=n;for(let e=0;e<16;++e)s[e]=this._inv_s[s[e]];for(let e=0,A=16*i;e<16;++e,++A)s[e]^=t[A];for(let e=0;e<16;e+=4){const t=this._mix[s[e]],r=this._mix[s[e+1]],n=this._mix[s[e+2]],i=this._mix[s[e+3]];A=t^r>>>8^r<<24^n>>>16^n<<16^i>>>24^i<<8,s[e]=A>>>24&255,s[e+1]=A>>16&255,s[e+2]=A>>8&255,s[e+3]=255&A}}A=s[13],s[13]=s[9],s[9]=s[5],s[5]=s[1],s[1]=A,A=s[14],r=s[10],s[14]=s[6],s[10]=s[2],s[6]=A,s[2]=r,A=s[15],r=s[11],n=s[7],s[15]=s[3],s[11]=A,s[7]=r,s[3]=n;for(let i=0;i<16;++i)s[i]=this._inv_s[s[i]],s[i]^=t[i];return s}_encrypt(e,t){const A=this._s;let r,n,s;const i=new Uint8Array(16);i.set(e);for(let o=0;o<16;++o)i[o]^=t[o];for(let o=1;o<this._cyclesOfRepetition;o++){for(let e=0;e<16;++e)i[e]=A[i[e]];s=i[1],i[1]=i[5],i[5]=i[9],i[9]=i[13],i[13]=s,s=i[2],n=i[6],i[2]=i[10],i[6]=i[14],i[10]=s,i[14]=n,s=i[3],n=i[7],r=i[11],i[3]=i[15],i[7]=s,i[11]=n,i[15]=r;for(let e=0;e<16;e+=4){const t=i[e+0],A=i[e+1],n=i[e+2],s=i[e+3];r=t^A^n^s,i[e+0]^=r^this._mixCol[t^A],i[e+1]^=r^this._mixCol[A^n],i[e+2]^=r^this._mixCol[n^s],i[e+3]^=r^this._mixCol[s^t]}for(let e=0,A=16*o;e<16;++e,++A)i[e]^=t[A]}for(let o=0;o<16;++o)i[o]=A[i[o]];s=i[1],i[1]=i[5],i[5]=i[9],i[9]=i[13],i[13]=s,s=i[2],n=i[6],i[2]=i[10],i[6]=i[14],i[10]=s,i[14]=n,s=i[3],n=i[7],r=i[11],i[3]=i[15],i[7]=s,i[11]=n,i[15]=r;for(let o=0,a=this._keySize;o<16;++o,++a)i[o]^=t[a];return i}_decryptBlock2(e,t){const A=e.length;let r=this.buffer,n=this.bufferPosition;const s=[];let i=this.iv;for(let l=0;l<A;++l){if(r[n]=e[l],++n,n<16)continue;const t=this._decrypt(r,this._key);for(let e=0;e<16;++e)t[e]^=i[e];i=r,s.push(t),r=new Uint8Array(16),n=0}if(this.buffer=r,this.bufferLength=n,this.iv=i,0===s.length)return new Uint8Array(0);let o=16*s.length;if(t){const e=s[s.length-1];let t=e[15];if(t<=16){for(let A=15,r=16-t;A>=r;--A)if(e[A]!==t){t=0;break}o-=t,s[s.length-1]=e.subarray(0,16-t)}}const a=new Uint8Array(o);for(let l=0,u=0,c=s.length;l<c;++l,u+=16)a.set(s[l],u);return a}decryptBlock(e,t,A){const r=e.length,n=this.buffer;let s=this.bufferPosition;if(A)this.iv=A;else{for(let t=0;s<16&&t<r;++t,++s)n[s]=e[t];if(s<16)return this.bufferLength=s,new Uint8Array(0);this.iv=n,e=e.subarray(16)}return this.buffer=new Uint8Array(16),this.bufferLength=0,this.decryptBlock=this._decryptBlock2,this.decryptBlock(e,t)}encrypt(e,t){const A=e.length;let r=this.buffer,n=this.bufferPosition;const s=[];t||(t=new Uint8Array(16));for(let a=0;a<A;++a){if(r[n]=e[a],++n,n<16)continue;for(let e=0;e<16;++e)r[e]^=t[e];const A=this._encrypt(r,this._key);t=A,s.push(A),r=new Uint8Array(16),n=0}if(this.buffer=r,this.bufferLength=n,this.iv=t,0===s.length)return new Uint8Array(0);const i=16*s.length,o=new Uint8Array(i);for(let a=0,l=0,u=s.length;a<u;++a,l+=16)o.set(s[a],l);return o}}class Cc extends xc{constructor(e){super(),this._cyclesOfRepetition=10,this._keySize=160,this._rcon=new Uint8Array([141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141]),this._key=this._expandKey(e)}_expandKey(e){const t=this._s,A=this._rcon,r=new Uint8Array(176);r.set(e);for(let n=16,s=1;n<176;++s){let e=r[n-3],i=r[n-2],o=r[n-1],a=r[n-4];e=t[e],i=t[i],o=t[o],a=t[a],e^=A[s];for(let t=0;t<4;++t)r[n]=e^=r[n-16],n++,r[n]=i^=r[n-16],n++,r[n]=o^=r[n-16],n++,r[n]=a^=r[n-16],n++}return r}}class Ec extends xc{constructor(e){super(),this._cyclesOfRepetition=14,this._keySize=224,this._key=this._expandKey(e)}_expandKey(e){const t=this._s,A=new Uint8Array(240);A.set(e);let r=1,n=0,s=0,i=0,o=0;for(let a=32,l=1;a<240;++l){a%32===16?(n=t[n],s=t[s],i=t[i],o=t[o]):a%32===0&&(n=A[a-3],s=A[a-2],i=A[a-1],o=A[a-4],n=t[n],s=t[s],i=t[i],o=t[o],n^=r,(r<<=1)>=256&&(r=255&(27^r)));for(let e=0;e<4;++e)A[a]=n^=A[a-32],a++,A[a]=s^=A[a-32],a++,A[a]=i^=A[a-32],a++,A[a]=o^=A[a-32],a++}return A}}class Nc{checkOwnerPassword(e,t,A,r){const n=new Uint8Array(e.length+56);n.set(e,0),n.set(t,e.length),n.set(A,e.length+t.length);const s=vc(n,0,n.length);return SA(s,r)}checkUserPassword(e,t,A){const r=new Uint8Array(e.length+8);r.set(e,0),r.set(t,e.length);const n=vc(r,0,r.length);return SA(n,A)}getOwnerKey(e,t,A,r){const n=new Uint8Array(e.length+56);n.set(e,0),n.set(t,e.length),n.set(A,e.length+t.length);const s=vc(n,0,n.length);return new Ec(s).decryptBlock(r,!1,new Uint8Array(16))}getUserKey(e,t,A){const r=new Uint8Array(e.length+8);r.set(e,0),r.set(t,e.length);const n=vc(r,0,r.length);return new Ec(n).decryptBlock(A,!1,new Uint8Array(16))}}class Dc{calculatePDF20Hash(e,t,A){let r=vc(t,0,t.length).subarray(0,32),n=new Uint8Array([0]),s=0;for(;s<64||n[n.length-1]>s-32;){const t=e.length+r.length+A.length,i=new Uint8Array(t);let o=0;i.set(e,o),o+=e.length,i.set(r,o),o+=r.length,i.set(A,o);const a=new Uint8Array(64*t);for(let e=0,A=0;e<64;e++,A+=t)a.set(i,A);n=new Cc(r.subarray(0,16)).encrypt(a,r.subarray(16,32));const l=n.slice(0,16).reduce(((e,t)=>e+t),0)%3;0===l?r=vc(n,0,n.length):1===l?r=wc(n,0,n.length):2===l&&(r=yc(n,0,n.length)),s++}return r.subarray(0,32)}hash(e,t,A){return this.calculatePDF20Hash(e,t,A)}checkOwnerPassword(e,t,A,r){const n=new Uint8Array(e.length+56);n.set(e,0),n.set(t,e.length),n.set(A,e.length+t.length);const s=this.calculatePDF20Hash(e,n,A);return SA(s,r)}checkUserPassword(e,t,A){const r=new Uint8Array(e.length+8);r.set(e,0),r.set(t,e.length);const n=this.calculatePDF20Hash(e,r,new Uint8Array);return SA(n,A)}getOwnerKey(e,t,A,r){const n=new Uint8Array(e.length+56);n.set(e,0),n.set(t,e.length),n.set(A,e.length+t.length);const s=this.calculatePDF20Hash(e,n,A);return new Ec(s).decryptBlock(r,!1,new Uint8Array(16))}getUserKey(e,t,A){const r=new Uint8Array(e.length+8);r.set(e,0),r.set(t,e.length);const n=this.calculatePDF20Hash(e,r,new Uint8Array);return new Ec(n).decryptBlock(A,!1,new Uint8Array(16))}}class Qc{constructor(e,t){this.StringCipherConstructor=e,this.StreamCipherConstructor=t}createStream(e,t){const A=this.StreamCipherConstructor();return new gc(e,(function(e,t){return A.decryptBlock(e,t)}),t)}decryptString(e){const t=this.StringCipherConstructor();let A=dA(e);return A=t.decryptBlock(A,!0),kA(A)}decryptBytes(e){return this.StringCipherConstructor().decryptBlock(e,!0)}encryptString(e){const t=this.StringCipherConstructor();if(t instanceof xc){const A=16-e.length%16;e+=String.fromCharCode(A).repeat(A);const r=new Uint8Array(16);if("undefined"!==typeof crypto)crypto.getRandomValues(r);else for(let e=0;e<16;e++)r[e]=Math.floor(256*Math.random());let n=dA(e);n=t.encrypt(n,r);const s=new Uint8Array(16+n.length);return s.set(r),s.set(n,16),kA(s)}let A=dA(e);return A=t.encrypt(A),kA(A)}}class Pc{constructor(e,t,A){var r;this.defaultPasswordBytes=new Uint8Array([40,191,78,94,78,117,138,65,100,0,78,86,255,250,1,8,46,46,0,182,208,104,62,128,47,12,169,254,100,83,105,122]),this.identityName=jn.of("Identity");const n=e.get(jn.of("Filter"));if("/Standard"!==n.asString())throw new Error("unknown encryption method");this.filterName=n.asString(),this.dict=e;const s=e.get(jn.of("V")).asNumber();if(!Number.isInteger(s)||1!==s&&2!==s&&4!==s&&5!==s)throw new Error("unsupported encryption algorithm");this.algorithm=s;let i=e.get(jn.of("Length")).asNumber();if(!i)if(s<=3)i=40;else{const t=e.get(jn.of("CF")),A=e.get(jn.of("StmF"));if(t instanceof Vn&&A instanceof jn){t.suppressEncryption=!0;const e=t.get(jn.of(A.asString()));let r=null;e&&(r=e.get(jn.of("Length"))),i=r&&r.asNumber()||128,i<40&&(i<<=3)}}if(!Number.isInteger(i)||i<40||i%8!==0)throw new Error("invalid key length");const o=e.get(jn.of("O")).asBytes(),a=e.get(jn.of("U")).asBytes(),l=o.subarray(0,32),u=a.subarray(0,32),c=e.get(jn.of("P")).asNumber(),d=e.get(jn.of("R")).asNumber(),f=(4===s||5===s)&&!1!==(null===(r=e.get(jn.of("EncryptMetadata")))||void 0===r?void 0:r.asBoolean());let h,g;if(this.encryptMetadata=f,A){if(6===d)try{A=unescape(encodeURIComponent(A))}catch(p){console.warn("CipherTransformFactory: Unable to convert UTF8 encoded password.")}h=dA(A)}if(5!==s)g=this.prepareKeyData(t,h,l,u,c,d,i,f);else{const t=o.subarray(32,40),A=o.subarray(40,48),r=a.subarray(0,48),n=a.subarray(32,40),s=a.subarray(40,48),i=e.get(jn.of("OE")).asBytes(),c=e.get(jn.of("UE")).asBytes(),f=e.get(jn.of("Perms")).asBytes();g=this.createEncryptionKey20(d,h,l,t,A,r,u,n,s,i,c,f)}if(!g&&!A)throw new Error("NEEDS PASSWORD");if(!g&&A){const e=this.decodeUserPassword(h,l,d,i);g=this.prepareKeyData(t,e,l,u,c,d,i,f)}if(!g)throw new Error("Password incorrect");if(this.encryptionKey=g,s>=4){const t=e.get(jn.of("CF"));t instanceof Vn&&(t.suppressEncryption=!0),this.cf=t,this.stmf=e.get(jn.of("StmF"))||this.identityName,this.strf=e.get(jn.of("StrF"))||this.identityName,this.eff=e.get(jn.of("EFF"))||this.stmf}}createCipherTransform(e,t){if(4===this.algorithm||5===this.algorithm)return new Qc(this.buildCipherConstructor(this.cf,this.strf,e,t,this.encryptionKey),this.buildCipherConstructor(this.cf,this.stmf,e,t,this.encryptionKey));const A=this.buildObjectKey(e,t,this.encryptionKey,!1),r=function(){return new pc(A)};return new Qc(r,r)}createEncryptionKey20(e,t,A,r,n,s,i,o,a,l,u,c){if(t){const e=Math.min(127,t.length);t=t.subarray(0,e)}else t=new Uint8Array;let d;return d=6===e?new Dc:new Nc,d.checkUserPassword(t,o,i)?d.getUserKey(t,a,u):t.length&&d.checkOwnerPassword(t,r,s,A)?d.getOwnerKey(t,n,s,l):null}prepareKeyData(e,t,A,r,n,s,i,o){const a=40+A.length+e.length,l=new Uint8Array(a);let u,c,d=0;if(t)for(c=Math.min(32,t.length);d<c;++d)l[d]=t[d];for(u=0;d<32;)l[d++]=this.defaultPasswordBytes[u++];for(u=0,c=A.length;u<c;++u)l[d++]=A[u];for(l[d++]=255&n,l[d++]=n>>8&255,l[d++]=n>>16&255,l[d++]=n>>>24&255,u=0,c=e.length;u<c;++u)l[d++]=e[u];s>=4&&!o&&(l[d++]=255,l[d++]=255,l[d++]=255,l[d++]=255);let f=bc(l,0,d);const h=i>>3;if(s>=3)for(u=0;u<50;++u)f=bc(f,0,h);const g=f.subarray(0,h);let p,b;if(s>=3){for(d=0;d<32;++d)l[d]=this.defaultPasswordBytes[d];for(u=0,c=e.length;u<c;++u)l[d++]=e[u];p=new pc(g),b=p.encryptBlock(bc(l,0,d)),c=g.length;const t=new Uint8Array(c);for(u=1;u<=19;++u){for(let e=0;e<c;++e)t[e]=g[e]^u;p=new pc(t),b=p.encryptBlock(b)}for(u=0,c=b.length;u<c;++u)if(r[u]!==b[u])return null}else for(p=new pc(g),b=p.encryptBlock(this.defaultPasswordBytes),u=0,c=b.length;u<c;++u)if(r[u]!==b[u])return null;return g}decodeUserPassword(e,t,A,r){const n=new Uint8Array(32);let s=0;const i=Math.min(32,e.length);for(;s<i;++s)n[s]=e[s];let o=0;for(;s<32;)n[s++]=this.defaultPasswordBytes[o++];let a=bc(n,0,s);const l=r>>3;if(A>=3)for(o=0;o<50;++o)a=bc(a,0,a.length);let u,c;if(A>=3){c=t;const e=new Uint8Array(l);for(o=19;o>=0;o--){for(let t=0;t<l;++t)e[t]=a[t]^o;u=new pc(e),c=u.encryptBlock(c)}}else u=new pc(a.subarray(0,l)),c=u.encryptBlock(t);return c}buildObjectKey(e,t,A){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const n=new Uint8Array(A.length+9),s=A.length;let i;for(i=0;i<s;++i)n[i]=A[i];n[i++]=255&e,n[i++]=e>>8&255,n[i++]=e>>16&255,n[i++]=255&t,n[i++]=t>>8&255,r&&(n[i++]=115,n[i++]=65,n[i++]=108,n[i++]=84);return bc(n,0,i).subarray(0,Math.min(A.length+5,16))}buildCipherConstructor(e,t,A,r,n){if(!(t instanceof jn))throw new Error("Invalid crypt filter name.");const s=e.get(jn.of(t.asString().replace("/","")));let i;if(null!==s&&void 0!==s&&(i=s.get(jn.of("CFM"))),!i||"/None"===i.asString())return function(){return new Bc};if("/V2"===i.asString())return()=>new pc(this.buildObjectKey(A,r,n,!1));if("/AESV2"===i.asString())return()=>new Cc(this.buildObjectKey(A,r,n,!0));if("/AESV3"===i.asString())return()=>new Ec(n);throw new Error("Unknown crypto method")}}class Ic{constructor(e,t,A){if(this.defaultWordBreaks=[" "],this.computePages=()=>{const e=[];return this.catalog.Pages().traverse(((t,A)=>{if(t instanceof cs){let r=this.pageMap.get(t);r||(r=ed.of(t,A,this),this.pageMap.set(t,r)),e.push(r)}})),e},this.getOrCreateForm=()=>{const e=this.catalog.getOrCreateAcroForm();return sc.of(e,this)},Zr(e,"context",[[ls,"PDFContext"]]),Zr(t,"ignoreEncryption",["boolean"]),this.context=e,this.catalog=e.lookup(e.trailerInfo.Root),e.lookup(e.trailerInfo.Encrypt)&&e.isDecrypted&&delete e.trailerInfo.Encrypt,this.isEncrypted=!!e.lookup(e.trailerInfo.Encrypt),this.pageCache=Hr.populatedBy(this.computePages),this.pageMap=new Map,this.formCache=Hr.populatedBy(this.getOrCreateForm),this.fonts=[],this.images=[],this.embeddedPages=[],this.embeddedFiles=[],this.javaScripts=[],!t&&this.isEncrypted)throw new fu;A&&this.updateInfoDict()}static async load(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{ignoreEncryption:A=!1,parseSpeed:r=uc.Slow,throwOnInvalidObject:n=!1,updateMetadata:s=!0,capNumbers:i=!1,password:o}=t;Zr(e,"pdf",["string",Uint8Array,ArrayBuffer]),Zr(A,"ignoreEncryption",["boolean"]),Zr(r,"parseSpeed",["number"]),Zr(n,"throwOnInvalidObject",["boolean"]),Zr(o,"password",["string","undefined"]);const a=RA(e),l=await Jo.forBytesWithOptions(a,r,n,i).parseDocument();if(l.lookup(l.trailerInfo.Encrypt)&&void 0!==o){const e=l.lookup(l.trailerInfo.ID,kn),t=l.lookup(l.trailerInfo.Encrypt,Vn),A=await Jo.forBytesWithOptions(a,r,n,i,new Pc(t,e.get(0).asBytes(),o)).parseDocument();return new Ic(A,!0,s)}return new Ic(l,A,s)}static async create(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{updateMetadata:t=!0}=e,A=ls.create(),r=Po.withContext(A),n=A.register(r),s=Do.withContextAndPages(A,n);return A.trailerInfo.Root=A.register(s),new Ic(A,!1,t)}registerFontkit(e){this.fontkit=e}getForm(){const e=this.formCache.access();return e.hasXFA()&&(console.warn("Removing XFA form data as pdf-lib does not support reading or writing XFA"),e.deleteXFA()),e}getTitle(){const e=this.getInfoDict().lookup(jn.Title);if(e)return Lc(e),e.decodeText()}getAuthor(){const e=this.getInfoDict().lookup(jn.Author);if(e)return Lc(e),e.decodeText()}getSubject(){const e=this.getInfoDict().lookup(jn.Subject);if(e)return Lc(e),e.decodeText()}getKeywords(){const e=this.getInfoDict().lookup(jn.Keywords);if(e)return Lc(e),e.decodeText()}getCreator(){const e=this.getInfoDict().lookup(jn.Creator);if(e)return Lc(e),e.decodeText()}getProducer(){const e=this.getInfoDict().lookup(jn.Producer);if(e)return Lc(e),e.decodeText()}getCreationDate(){const e=this.getInfoDict().lookup(jn.CreationDate);if(e)return Lc(e),e.decodeDate()}getModificationDate(){const e=this.getInfoDict().lookup(jn.ModDate);if(e)return Lc(e),e.decodeDate()}setTitle(e,t){Zr(e,"title",["string"]);const A=jn.of("Title");if(this.getInfoDict().set(A,ks.fromText(e)),null===t||void 0===t?void 0:t.showInWindowTitleBar){this.catalog.getOrCreateViewerPreferences().setDisplayDocTitle(!0)}}setAuthor(e){Zr(e,"author",["string"]);const t=jn.of("Author");this.getInfoDict().set(t,ks.fromText(e))}setSubject(e){Zr(e,"author",["string"]);const t=jn.of("Subject");this.getInfoDict().set(t,ks.fromText(e))}setKeywords(e){Zr(e,"keywords",[Array]);const t=jn.of("Keywords");this.getInfoDict().set(t,ks.fromText(e.join(" ")))}setCreator(e){Zr(e,"creator",["string"]);const t=jn.of("Creator");this.getInfoDict().set(t,ks.fromText(e))}setProducer(e){Zr(e,"creator",["string"]);const t=jn.of("Producer");this.getInfoDict().set(t,ks.fromText(e))}setLanguage(e){Zr(e,"language",["string"]);const t=jn.of("Lang");this.catalog.set(t,Rs.of(e))}setCreationDate(e){Zr(e,"creationDate",[[Date,"Date"]]);const t=jn.of("CreationDate");this.getInfoDict().set(t,Rs.fromDate(e))}setModificationDate(e){Zr(e,"modificationDate",[[Date,"Date"]]);const t=jn.of("ModDate");this.getInfoDict().set(t,Rs.fromDate(e))}getPageCount(){return void 0===this.pageCount&&(this.pageCount=this.getPages().length),this.pageCount}getPages(){return this.pageCache.access()}getPage(e){const t=this.getPages();return zr(e,"index",0,t.length-1),t[e]}getPageIndices(){return XA(0,this.getPageCount())}removePage(e){const t=this.getPageCount();if(0===this.pageCount)throw new pu;zr(e,"index",0,t-1),this.catalog.removeLeafNode(e),this.pageCount=t-1}addPage(e){return Zr(e,"page",["undefined",[ed,"PDFPage"],Array]),this.insertPage(this.getPageCount(),e)}insertPage(e,t){const A=this.getPageCount();if(zr(e,"index",0,A),Zr(t,"page",["undefined",[ed,"PDFPage"],Array]),!t||Array.isArray(t)){const e=Array.isArray(t)?t:lc.A4;(t=ed.create(this)).setSize(...e)}else if(t.doc!==this)throw new gu;const r=this.catalog.insertLeafNode(t.ref,e);return t.node.setParent(r),this.pageMap.set(t.node,t),this.pageCache.invalidate(),this.pageCount=A+1,t}async copyPages(e,t){Zr(e,"srcDoc",[[Ic,"PDFDocument"]]),Zr(t,"indices",[Array]),await e.flush();const A=fs.for(e.context,this.context),r=e.getPages(),n=new Array(t.length);for(let s=0,i=t.length;s<i;s++){const e=r[t[s]],i=A.copy(e.node),o=this.context.register(i);n[s]=ed.of(i,o,this)}return n}async copy(){const e=await Ic.create(),t=await e.copyPages(this,this.getPageIndices());for(let A=0,r=t.length;A<r;A++)e.addPage(t[A]);return void 0!==this.getAuthor()&&e.setAuthor(this.getAuthor()),void 0!==this.getCreationDate()&&e.setCreationDate(this.getCreationDate()),void 0!==this.getCreator()&&e.setCreator(this.getCreator()),void 0!==this.getModificationDate()&&e.setModificationDate(this.getModificationDate()),void 0!==this.getProducer()&&e.setProducer(this.getProducer()),void 0!==this.getSubject()&&e.setSubject(this.getSubject()),void 0!==this.getTitle()&&e.setTitle(this.getTitle()),e.defaultWordBreaks=this.defaultWordBreaks,e}addJavaScript(e,t){Zr(e,"name",["string"]),Zr(t,"script",["string"]);const A=hc.for(t,e),r=this.context.nextRef(),n=dc.of(r,this,A);this.javaScripts.push(n)}async attach(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Zr(e,"attachment",["string",Uint8Array,ArrayBuffer]),Zr(t,"name",["string"]),Xr(A.mimeType,"mimeType",["string"]),Xr(A.description,"description",["string"]),Xr(A.creationDate,"options.creationDate",[Date]),Xr(A.modificationDate,"options.modificationDate",[Date]),kr(A.afRelationship,"options.afRelationship",Os);const r=RA(e),n=Hs.for(r,t,A),s=this.context.nextRef(),i=cc.of(s,this,n);this.embeddedFiles.push(i)}async embedFont(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{subset:A=!1,customName:r,features:n}=t;let s;if(Zr(e,"font",["string",Uint8Array,ArrayBuffer]),Zr(A,"subset",["boolean"]),Er(e))s=Fs.for(e,r);else{if(!zA(e))throw new TypeError("`font` must be one of `StandardFonts | string | Uint8Array | ArrayBuffer`");{const t=RA(e),i=this.assertFontkit();s=A?await Vs.for(i,t,r,n):await Ts.for(i,t,r,n)}}const i=this.context.nextRef(),o=Yu.of(i,this,s);return this.fonts.push(o),o}embedStandardFont(e,t){if(Zr(e,"font",["string"]),!Er(e))throw new TypeError("`font` must be one of type `StandardFonts`");const A=Fs.for(e,t),r=this.context.nextRef(),n=Yu.of(r,this,A);return this.fonts.push(n),n}async embedJpg(e){Zr(e,"jpg",["string",Uint8Array,ArrayBuffer]);const t=RA(e),A=await $s.for(t),r=this.context.nextRef(),n=Hu.of(r,this,A);return this.images.push(n),n}async embedPng(e){Zr(e,"png",["string",Uint8Array,ArrayBuffer]);const t=RA(e),A=await si.for(t),r=this.context.nextRef(),n=Hu.of(r,this,A);return this.images.push(n),n}async embedPdf(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[0];Zr(e,"pdf",["string",Uint8Array,ArrayBuffer,[Ic,"PDFDocument"]]),Zr(t,"indices",[Array]);const A=e instanceof Ic?e:await Ic.load(e),r=MA(A.getPages(),t);return this.embedPages(r)}async embedPage(e,t,A){Zr(e,"page",[[ed,"PDFPage"]]);const[r]=await this.embedPages([e],[t],[A]);return r}async embedPages(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];if(0===e.length)return[];for(let i=0,o=e.length-1;i<o;i++){const t=e[i],A=e[i+1];if(t.node.context!==A.node.context)throw new rn}const r=e[0].node.context,n=r===this.context?e=>e:fs.for(r,this.context).copy,s=new Array(e.length);for(let i=0,o=e.length;i<o;i++){const r=n(e[i].node),o=t[i],a=A[i],l=await Ci.for(r,o,a),u=this.context.nextRef();s[i]=Ou.of(u,this,l)}return this.embeddedPages.push(...s),s}async flush(){await this.embedAll(this.fonts),await this.embedAll(this.images),await this.embedAll(this.embeddedPages),await this.embedAll(this.embeddedFiles),await this.embedAll(this.javaScripts)}async save(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{useObjectStreams:t=!0,addDefaultPage:A=!0,objectsPerTick:r=50,updateFieldAppearances:n=!0}=e;if(Zr(t,"useObjectStreams",["boolean"]),Zr(A,"addDefaultPage",["boolean"]),Zr(r,"objectsPerTick",["number"]),Zr(n,"updateFieldAppearances",["boolean"]),A&&0===this.getPageCount()&&this.addPage(),n){const e=this.formCache.getValue();e&&e.updateFieldAppearances()}await this.flush();return(t?Is:xs).forContext(this.context,r).serializeToBuffer()}async saveAsBase64(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{dataUri:t=!1,...A}=e;Zr(t,"dataUri",["boolean"]);const r=await this.save(A),n=tA(r);return t?`data:application/pdf;base64,${n}`:n}findPageForAnnotationRef(e){const t=this.getPages();for(let A=0,r=t.length;A<r;A++){const r=t[A],n=r.node.Annots();if(void 0!==(null===n||void 0===n?void 0:n.indexOf(e)))return r}}async embedAll(e){for(let t=0,A=e.length;t<A;t++)await e[t].embed()}updateInfoDict(){const e="pdf-lib (https://github.com/Hopding/pdf-lib)",t=new Date,A=this.getInfoDict();this.setProducer(e),this.setModificationDate(t),A.get(jn.of("Creator"))||this.setCreator(e),A.get(jn.of("CreationDate"))||this.setCreationDate(t)}getInfoDict(){const e=this.context.lookup(this.context.trailerInfo.Info);if(e instanceof Vn)return e;const t=this.context.obj({});return this.context.trailerInfo.Info=this.context.register(t),t}assertFontkit(){if(!this.fontkit)throw new hu;return this.fontkit}}function Lc(e){if(!(e instanceof ks)&&!(e instanceof Rs))throw new Jr([ks,Rs],e)}var kc;!function(e){e.Normal="Normal",e.Multiply="Multiply",e.Screen="Screen",e.Overlay="Overlay",e.Darken="Darken",e.Lighten="Lighten",e.ColorDodge="ColorDodge",e.ColorBurn="ColorBurn",e.HardLight="HardLight",e.SoftLight="SoftLight",e.Difference="Difference",e.Exclusion="Exclusion"}(kc||(kc={}));var Gc=A(2927);const Fc=[1,0,0,1,0,0],Sc=(e,t)=>{let[A,r,n,s,i,o]=e,[a,l,u,c,d,f]=t;return[A*a+n*l,r*a+s*l,A*u+n*c,r*u+s*c,A*d+n*f+i,r*d+s*f+o]},Wc=(e,t)=>{let[A,r,n,s,i,o]=e,{x:a,y:l}=t;return{x:A*a+n*l+i,y:r*a+s*l+o}},Zc=(e,t)=>{switch(e){case"scale":case"scaleX":case"scaleY":{const[A,r=A]=t;return["scaleY"===e?1:A,0,0,"scaleX"===e?1:r,0,0]}case"translate":case"translateX":case"translateY":{const[A,r=A]=t;return[1,0,0,1,"translateY"===e?0:A,"translateX"===e?0:-r]}case"rotate":{const[e,A=0,r=0]=t,n=Zc("translate",[A,r]),s=Zc("translate",[-A,-r]),i=aa(-e),o=[Math.cos(i),Math.sin(i),-Math.sin(i),Math.cos(i),0,0];return Sc(Sc(n,o),s)}case"skewY":case"skewX":{const A=aa(-t[0]),r=Math.tan(A);return[1,"skewY"===e?r:0,"skewX"===e?r:0,1,0,0]}case"matrix":{const[e,A,r,n,s,i]=t,o=Zc("scale",[1,-1]);return Sc(Sc(o,[e,A,r,n,s,i]),o)}default:return Fc}},Xc=(e,t,A)=>Sc(e,Zc(t,A)),Mc={butt:Pa.Butt,round:Pa.Round,square:Pa.Projecting},zc={evenodd:Va.EvenOdd,nonzero:Va.NonZero},Rc={bevel:La.Bevel,miter:La.Miter,round:La.Round},jc=(e,t)=>({async text(A){const r=A.svgAttributes.textAnchor,n=A.svgAttributes.dominantBaseline,s=A.text.trim().replace(/\s/g," "),i=A.svgAttributes.fontSize||12;const o=t.fonts&&function(e,t){const A=e.fontFamily;if(!A)return;const r="bold"===e.fontWeight||Number(e.fontWeight)>=700,n="italic"===e.fontStyle,s=(e,A,r)=>t[r+(e?"_bold":"")+(A?"_italic":"")];return s(r,n,A)||s(r,!1,A)||s(!1,n,A)||s(!1,!1,A)||Object.keys(t).find((e=>e.startsWith(A)))}(A.svgAttributes,t.fonts),a=(o||e.getFont()[0]).widthOfTextAtSize(s,i),l=(o||e.getFont()[0]).heightAtSize(i),u="middle"===r?a/2:"end"===r?a:0,c="text-before-edge"===n?l:"text-after-edge"===n?-l:"middle"===n?l/2:0;e.drawText(s,{x:-u,y:-c,font:o,size:i,color:A.svgAttributes.fill,opacity:A.svgAttributes.fillOpacity,matrix:A.svgAttributes.matrix,clipSpaces:A.svgAttributes.clipSpaces})},async line(t){e.drawLine({start:{x:t.svgAttributes.x1||0,y:-t.svgAttributes.y1||0},end:{x:t.svgAttributes.x2||0,y:-t.svgAttributes.y2||0},thickness:t.svgAttributes.strokeWidth,color:t.svgAttributes.stroke,opacity:t.svgAttributes.strokeOpacity,lineCap:t.svgAttributes.strokeLineCap,matrix:t.svgAttributes.matrix,clipSpaces:t.svgAttributes.clipSpaces})},async path(t){t.svgAttributes.d&&e.drawSvgPath(t.svgAttributes.d,{x:0,y:0,borderColor:t.svgAttributes.stroke,borderWidth:t.svgAttributes.strokeWidth,borderOpacity:t.svgAttributes.strokeOpacity,borderLineCap:t.svgAttributes.strokeLineCap,color:t.svgAttributes.fill,opacity:t.svgAttributes.fillOpacity,fillRule:t.svgAttributes.fillRule,matrix:t.svgAttributes.matrix,clipSpaces:t.svgAttributes.clipSpaces})},async image(t){const{src:A}=t.svgAttributes;if(!A)return;const r=A.match(/\.png(\?|$)|^data:image\/png;base64/gim)?await e.doc.embedPng(A):await e.doc.embedJpg(A),{x:n,y:s,width:i,height:o}=Yc(r.width,r.height,t.svgAttributes.width||r.width,t.svgAttributes.height||r.height,t.svgAttributes.preserveAspectRatio);e.drawImage(r,{x:n,y:-s-o,width:i,height:o,opacity:t.svgAttributes.fillOpacity,matrix:t.svgAttributes.matrix,clipSpaces:t.svgAttributes.clipSpaces})},async rect(t){(t.svgAttributes.fill||t.svgAttributes.stroke)&&e.drawRectangle({x:0,y:0,width:t.svgAttributes.width,height:-1*t.svgAttributes.height,borderColor:t.svgAttributes.stroke,borderWidth:t.svgAttributes.strokeWidth,borderOpacity:t.svgAttributes.strokeOpacity,borderLineCap:t.svgAttributes.strokeLineCap,color:t.svgAttributes.fill,opacity:t.svgAttributes.fillOpacity,matrix:t.svgAttributes.matrix,clipSpaces:t.svgAttributes.clipSpaces})},async ellipse(t){e.drawEllipse({x:t.svgAttributes.cx||0,y:-(t.svgAttributes.cy||0),xScale:t.svgAttributes.rx,yScale:t.svgAttributes.ry,borderColor:t.svgAttributes.stroke,borderWidth:t.svgAttributes.strokeWidth,borderOpacity:t.svgAttributes.strokeOpacity,borderLineCap:t.svgAttributes.strokeLineCap,color:t.svgAttributes.fill,opacity:t.svgAttributes.fillOpacity,matrix:t.svgAttributes.matrix,clipSpaces:t.svgAttributes.clipSpaces})},circle:async A=>jc(e,t).ellipse(A)}),Tc=(e,t,A,r)=>{const n=t[A]||e[A];return n||"undefined"===typeof r?n:r},Uc=e=>{const t=/([^:\s]+)*\s*:\s*([^;]+)/g,A={};let r=t.exec(e);for(;null!=r;)A[r[1]]=r[2],r=t.exec(e);return A},Vc=(e,t)=>{if(!e||0===e.length)return;if(["none","transparent"].includes(e))return;if("currentColor"===e)return t||Vc("#000000");const A=Nl(e);return{rgb:A.rgb,alpha:A.alpha?A.alpha+"":void 0}},Oc=(e,t,A)=>{var r,n,s,i;const o=e.attributes,a=Uc(o.style),l=Tc(o,a,"width",""),u=Tc(o,a,"height",""),c=Vc(Tc(o,a,"fill")),d=Tc(o,a,"fill-opacity"),f=Tc(o,a,"opacity"),h=Vc(Tc(o,a,"stroke")),g=Tc(o,a,"stroke-opacity"),p=Tc(o,a,"stroke-linecap"),b=Tc(o,a,"stroke-linejoin"),m=Tc(o,a,"fill-rule"),v=Tc(o,a,"stroke-width"),y=Tc(o,a,"font-family"),w=Tc(o,a,"font-style"),B=Tc(o,a,"font-weight"),x=Tc(o,a,"font-size"),C=Jc(l,t.width),E=Jc(u,t.height),N=Jc(o.x,t.width),D=Jc(o.y,t.height),Q=Jc(o.x1,t.width),P=Jc(o.x2,t.width),I=Jc(o.y1,t.height),L=Jc(o.y2,t.height),k=Jc(o.cx,t.width),G=Jc(o.cy,t.height),F=Jc(o.rx||o.r,t.width),S=Jc(o.ry||o.r,t.height),W={fontFamily:y||t.fontFamily,fontStyle:w||t.fontStyle,fontWeight:B||t.fontWeight,fontSize:null!==(r=Jc(x))&&void 0!==r?r:t.fontSize,fill:(null===c||void 0===c?void 0:c.rgb)||t.fill,fillOpacity:null!==(n=Jc(d||f||(null===c||void 0===c?void 0:c.alpha)))&&void 0!==n?n:t.fillOpacity,fillRule:zc[m]||t.fillRule,stroke:(null===h||void 0===h?void 0:h.rgb)||t.stroke,strokeWidth:null!==(s=Jc(v))&&void 0!==s?s:t.strokeWidth,strokeOpacity:null!==(i=Jc(g||f||(null===h||void 0===h?void 0:h.alpha)))&&void 0!==i?i:t.strokeOpacity,strokeLineCap:Mc[p]||t.strokeLineCap,strokeLineJoin:Rc[b]||t.strokeLineJoin,width:C||t.width,height:E||t.height,rotation:t.rotation,viewBox:"svg"===e.tagName&&e.attributes.viewBox?_c(e.attributes.viewBox):t.viewBox},Z={src:o.src||o["xlink:href"],textAnchor:o["text-anchor"],dominantBaseline:o["dominant-baseline"],preserveAspectRatio:o.preserveAspectRatio};let X=o.transform||"";["translate","translateX","translateY","skewX","skewY","rotate","scale","scaleX","scaleY","matrix"].forEach((e=>{o[e]&&(X=o[e]+" "+X)})),(N||D)&&(X+=`translate(${N||0} ${D||0}) `);let M=A;if(X){const e=/(\w+)\((.+?)\)/g;let t=e.exec(X);for(;null!==t;){const[,A,r]=t,n=(r||"").split(/\s*,\s*|\s+/).filter((e=>e.length>0)).map((e=>parseFloat(e)));M=Xc(M,A,n),t=e.exec(X)}}if(Z.x=N,Z.y=D,(o.cx||o.cy)&&(Z.cx=k,Z.cy=G),(o.rx||o.ry||o.r)&&(Z.rx=F,Z.ry=S),(o.x1||o.y1)&&(Z.x1=Q,Z.y1=I),(o.x2||o.y2)&&(Z.x2=P,Z.y2=L),(o.width||o.height)&&(Z.width=null!==C&&void 0!==C?C:t.width,Z.height=null!==E&&void 0!==E?E:t.height),o.d&&(M=Xc(M,"scale",[1,-1]),Z.d=o.d),x&&W.fontSize&&(W.fontSize=W.fontSize),W.fontFamily){const e=W.fontFamily.match(/^"(.*?)"|^'(.*?)'/);e&&(W.fontFamily=e[1]||e[2])}return W.strokeWidth&&(Z.strokeWidth=W.strokeWidth),{inherited:W,svgAttributes:Z,tagName:e.tagName,matrix:M}},Yc=(e,t,A,r,n)=>{if("none"===n)return{x:0,y:0,width:A,height:r};const s=e/t,i=A/r,o=i>s?s*r:A,a=i>=s?r:A/s,l=A-o,u=r-a,[c,d]=(()=>{switch(n){case"xMinYMin":return[0,0];case"xMidYMin":return[l/2,0];case"xMaxYMin":case"xMaxYMid":return[l,u/2];case"xMinYMid":case"xMinYMax":return[0,u];case"xMidYMax":return[l/2,u];case"xMaxYMax":return[l,u];default:return[l/2,u/2]}})();return{x:c,y:d,width:o,height:a}},Hc=(e,t,A,r)=>{if(e.nodeType===Gc.Z6.COMMENT_NODE)return[];if(e.nodeType===Gc.Z6.TEXT_NODE)return[];if("g"===e.tagName)return qc(e,t,A,r);if("svg"===e.tagName)return Kc(e,t,A,r);{"polygon"===e.tagName&&(e.tagName="path",e.attributes.d=`M${e.attributes.points}Z`,delete e.attributes.points);const n=Oc(e,t,A),s={...n.inherited,...n.svgAttributes,matrix:n.matrix,clipSpaces:r};return Object.assign(e,{svgAttributes:s}),[e]}},Kc=(e,t,A,r)=>{var n,s;null!==(n=e.attributes.width)&&void 0!==n||e.setAttribute("width",t.viewBox.width+""),null!==(s=e.attributes.height)&&void 0!==s||e.setAttribute("height",t.viewBox.height+"");const i=Oc(e,t,A),o=[],a=e.attributes.viewBox?_c(e.attributes.viewBox):e.attributes.width&&e.attributes.height?_c(`0 0 ${e.attributes.width} ${e.attributes.height}`):t.viewBox,l=parseFloat(e.attributes.x)||0,u=parseFloat(e.attributes.y)||0;let c=Xc(A,"translate",[l,u]);const{clipBox:d,content:f}=((e,t,A,r,n,s)=>{const i=r/t,o=n/A,a=Xc(e,"scale",[i,o]);if("none"===s)return{clipBox:a,content:a};const l=r>n?o:i,u=r-t*l,c=n-A*l,[d,f]=(()=>{switch(s){case"xMinYMin":return[0,0];case"xMidYMin":return[u/2,0];case"xMaxYMin":case"xMaxYMid":return[u,c/2];case"xMinYMid":case"xMinYMax":return[0,c];case"xMidYMax":return[u/2,c];case"xMaxYMax":return[u,c];default:return[u/2,c/2]}})();return{clipBox:a,content:Xc(Xc(e,"translate",[d,f]),"scale",[l])}})(c,a.width,a.height,parseFloat(e.attributes.width),parseFloat(e.attributes.height),e.attributes.preserveAspectRatio||"xMidYMid"),h={topLeft:Wc(d,{x:0,y:0}),topRight:Wc(d,{x:a.width,y:0}),bottomRight:Wc(d,{x:a.width,y:-a.height}),bottomLeft:Wc(d,{x:0,y:-a.height})};return c=Xc(f,"translate",[-a.x,-a.y]),e.childNodes.forEach((e=>{const t=Hc(e,{...i.inherited,viewBox:a},c,[...r,h]);o.push(...t)})),o},qc=(e,t,A,r)=>{const n=Oc(e,t,A),s=[];return e.childNodes.forEach((e=>{s.push(...Hc(e,n.inherited,n.matrix,r))})),s},Jc=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(!e)return;const A=parseFloat(e);return isNaN(A)?void 0:e.endsWith("%")?A*t/100:A},_c=e=>{if(!e)return;const[t=0,A=0,r=1,n=1]=(e||"").split(" ").map((e=>Jc(e)));return{x:t,y:A,width:r,height:n}},$c=async(e,t,A)=>{if(!t)return;const r=e.getSize(),n=(0,Gc.qg)(t).firstChild,s=n.attributes,i=Uc(s.style),o=Tc(s,i,"width",""),a=Tc(s,i,"height",""),l=void 0!==A.width?A.width:parseFloat(o),u=void 0!==A.height?A.height:parseFloat(a);s.viewBox||n.setAttribute("viewBox",`0 0 ${o||l} ${a||u}`),(A.width||A.height)&&(void 0!==l&&(i.width=l+(isNaN(l)?"":"px")),void 0!==u&&(i.height=u+(isNaN(u)?"":"px")),n.setAttribute("style",Object.entries(i).map((e=>{let[t,A]=e;return`${t}:${A};`})).join("")));const c=[1,0,0,1,A.x||0,A.y||0],d=jc(e,A),f=((e,t,A,r)=>{let{width:n,height:s,fontSize:i}=t;const o=(0,Gc.qg)(e).firstChild;return n&&o.setAttribute("width",n+""),s&&o.setAttribute("height",s+""),i&&o.setAttribute("font-size",i+""),Hc(o,{...A,viewBox:_c(o.attributes.viewBox||"0 0 1 1")},r,[])})(n.outerHTML,A,r,c);await f.reduce((async(e,t)=>{var A;return await e,null===(A=d[t.tagName])||void 0===A?void 0:A.call(d,t)}),Promise.resolve())};class ed{constructor(e,t,A){this.fontSize=24,this.fontColor=Cl(0,0,0),this.lineHeight=24,this.x=0,this.y=0,Zr(e,"leafNode",[[cs,"PDFPageLeaf"]]),Zr(t,"ref",[[_n,"PDFRef"]]),Zr(A,"doc",[[Ic,"PDFDocument"]]),this.node=e,this.ref=t,this.doc=A}setRotation(e){const t=ca(e);jr(t,"degreesAngle",90),this.node.set(jn.of("Rotate"),this.doc.context.obj(t))}getRotation(){const e=this.node.Rotate();return sa(e?e.asNumber():0)}setSize(e,t){Zr(e,"width",["number"]),Zr(t,"height",["number"]);const A=this.getMediaBox();this.setMediaBox(A.x,A.y,e,t);const r=this.getCropBox(),n=this.getBleedBox(),s=this.getTrimBox(),i=this.getArtBox(),o=this.node.CropBox(),a=this.node.BleedBox(),l=this.node.TrimBox(),u=this.node.ArtBox();o&&Nr(r,A)&&this.setCropBox(A.x,A.y,e,t),a&&Nr(n,A)&&this.setBleedBox(A.x,A.y,e,t),l&&Nr(s,A)&&this.setTrimBox(A.x,A.y,e,t),u&&Nr(i,A)&&this.setArtBox(A.x,A.y,e,t)}setWidth(e){Zr(e,"width",["number"]),this.setSize(e,this.getSize().height)}setHeight(e){Zr(e,"height",["number"]),this.setSize(this.getSize().width,e)}setMediaBox(e,t,A,r){Zr(e,"x",["number"]),Zr(t,"y",["number"]),Zr(A,"width",["number"]),Zr(r,"height",["number"]);const n=this.doc.context.obj([e,t,e+A,t+r]);this.node.set(jn.MediaBox,n)}setCropBox(e,t,A,r){Zr(e,"x",["number"]),Zr(t,"y",["number"]),Zr(A,"width",["number"]),Zr(r,"height",["number"]);const n=this.doc.context.obj([e,t,e+A,t+r]);this.node.set(jn.CropBox,n)}setBleedBox(e,t,A,r){Zr(e,"x",["number"]),Zr(t,"y",["number"]),Zr(A,"width",["number"]),Zr(r,"height",["number"]);const n=this.doc.context.obj([e,t,e+A,t+r]);this.node.set(jn.BleedBox,n)}setTrimBox(e,t,A,r){Zr(e,"x",["number"]),Zr(t,"y",["number"]),Zr(A,"width",["number"]),Zr(r,"height",["number"]);const n=this.doc.context.obj([e,t,e+A,t+r]);this.node.set(jn.TrimBox,n)}setArtBox(e,t,A,r){Zr(e,"x",["number"]),Zr(t,"y",["number"]),Zr(A,"width",["number"]),Zr(r,"height",["number"]);const n=this.doc.context.obj([e,t,e+A,t+r]);this.node.set(jn.ArtBox,n)}getSize(){const{width:e,height:t}=this.getMediaBox();return{width:e,height:t}}getWidth(){return this.getSize().width}getHeight(){return this.getSize().height}getMediaBox(){return this.node.MediaBox().asRectangle()}getCropBox(){var e;const t=this.node.CropBox();return null!==(e=null===t||void 0===t?void 0:t.asRectangle())&&void 0!==e?e:this.getMediaBox()}getBleedBox(){var e;const t=this.node.BleedBox();return null!==(e=null===t||void 0===t?void 0:t.asRectangle())&&void 0!==e?e:this.getCropBox()}getTrimBox(){var e;const t=this.node.TrimBox();return null!==(e=null===t||void 0===t?void 0:t.asRectangle())&&void 0!==e?e:this.getCropBox()}getArtBox(){var e;const t=this.node.ArtBox();return null!==(e=null===t||void 0===t?void 0:t.asRectangle())&&void 0!==e?e:this.getCropBox()}translateContent(e,t){Zr(e,"x",["number"]),Zr(t,"y",["number"]),this.node.normalize(),this.getContentStream();const A=this.createContentStream(Fa(),wa(e,t)),r=this.doc.context.register(A),n=this.createContentStream(Sa()),s=this.doc.context.register(n);this.node.wrapContentStreams(r,s)}scale(e,t){Zr(e,"x",["number"]),Zr(t,"y",["number"]),this.setSize(this.getWidth()*e,this.getHeight()*t),this.scaleContent(e,t),this.scaleAnnotations(e,t)}scaleContent(e,t){Zr(e,"x",["number"]),Zr(t,"y",["number"]),this.node.normalize(),this.getContentStream();const A=this.createContentStream(Fa(),Ba(e,t)),r=this.doc.context.register(A),n=this.createContentStream(Sa()),s=this.doc.context.register(n);this.node.wrapContentStreams(r,s)}scaleAnnotations(e,t){Zr(e,"x",["number"]),Zr(t,"y",["number"]);const A=this.node.Annots();if(A)for(let r=0;r<A.size();r++){const n=A.lookup(r);n instanceof Vn&&this.scaleAnnot(n,e,t)}}resetPosition(){this.getContentStream(!1),this.x=0,this.y=0}setFont(e){Zr(e,"font",[[Yu,"PDFFont"]]),this.font=e,this.fontKey=this.node.newFontDictionary(this.font.name,this.font.ref)}setFontSize(e){Zr(e,"fontSize",["number"]),this.fontSize=e}setFontColor(e){Zr(e,"fontColor",[[Object,"Color"]]),this.fontColor=e}setLineHeight(e){Zr(e,"lineHeight",["number"]),this.lineHeight=e}getPosition(){return{x:this.x,y:this.y}}getX(){return this.x}getY(){return this.y}moveTo(e,t){Zr(e,"x",["number"]),Zr(t,"y",["number"]),this.x=e,this.y=t}moveDown(e){Zr(e,"yDecrease",["number"]),this.y-=e}moveUp(e){Zr(e,"yIncrease",["number"]),this.y+=e}moveLeft(e){Zr(e,"xDecrease",["number"]),this.x-=e}moveRight(e){Zr(e,"xIncrease",["number"]),this.x+=e}pushOperators(){for(var e=arguments.length,t=new Array(e),A=0;A<e;A++)t[A]=arguments[A];Mr(t,"operator",[[es,"PDFOperator"]]);this.getContentStream().push(...t)}drawText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var A,r,n,s,i,o,a;Zr(e,"text",["string"]),Xr(t.color,"options.color",[[Object,"Color"]]),Rr(t.opacity,"opacity.opacity",0,1),Xr(t.font,"options.font",[[Yu,"PDFFont"]]),Xr(t.size,"options.size",["number"]),Xr(t.rotate,"options.rotate",[[Object,"Rotation"]]),Xr(t.xSkew,"options.xSkew",[[Object,"Rotation"]]),Xr(t.ySkew,"options.ySkew",[[Object,"Rotation"]]),Xr(t.x,"options.x",["number"]),Xr(t.y,"options.y",["number"]),Xr(t.lineHeight,"options.lineHeight",["number"]),Xr(t.maxWidth,"options.maxWidth",["number"]),Xr(t.wordBreaks,"options.wordBreaks",[Array]),kr(t.blendMode,"options.blendMode",kc);const{oldFont:l,newFont:u,newFontKey:c}=this.setOrEmbedFont(t.font),d=t.size||this.fontSize,f=t.wordBreaks||this.doc.defaultWordBreaks,h=void 0===t.maxWidth?yA(pA(e)):CA(e,f,t.maxWidth,(e=>u.widthOfTextAtSize(e,d))),g=new Array(h.length);for(let b=0,m=h.length;b<m;b++)g[b]=u.encodeText(h[b]);const p=this.maybeEmbedGraphicsState({opacity:t.opacity,blendMode:t.blendMode});this.getContentStream().push(...Kl(g,{color:null!==(A=t.color)&&void 0!==A?A:this.fontColor,font:c,size:d,rotate:null!==(r=t.rotate)&&void 0!==r?r:sa(0),xSkew:null!==(n=t.xSkew)&&void 0!==n?n:sa(0),ySkew:null!==(s=t.ySkew)&&void 0!==s?s:sa(0),x:null!==(i=t.x)&&void 0!==i?i:this.x,y:null!==(o=t.y)&&void 0!==o?o:this.y,lineHeight:null!==(a=t.lineHeight)&&void 0!==a?a:this.lineHeight,graphicsState:p,matrix:t.matrix,clipSpaces:t.clipSpaces})),t.font&&(l?this.setFont(l):this.resetFont())}drawImage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var A,r,n,s,i,o,a;Zr(e,"image",[[Hu,"PDFImage"]]),Xr(t.x,"options.x",["number"]),Xr(t.y,"options.y",["number"]),Xr(t.width,"options.width",["number"]),Xr(t.height,"options.height",["number"]),Xr(t.rotate,"options.rotate",[[Object,"Rotation"]]),Xr(t.xSkew,"options.xSkew",[[Object,"Rotation"]]),Xr(t.ySkew,"options.ySkew",[[Object,"Rotation"]]),Rr(t.opacity,"opacity.opacity",0,1),kr(t.blendMode,"options.blendMode",kc);const l=this.node.newXObject("Image",e.ref),u=this.maybeEmbedGraphicsState({opacity:t.opacity,blendMode:t.blendMode});this.getContentStream().push(...ql(l,{x:null!==(A=t.x)&&void 0!==A?A:this.x,y:null!==(r=t.y)&&void 0!==r?r:this.y,width:null!==(n=t.width)&&void 0!==n?n:e.size().width,height:null!==(s=t.height)&&void 0!==s?s:e.size().height,rotate:null!==(i=t.rotate)&&void 0!==i?i:sa(0),xSkew:null!==(o=t.xSkew)&&void 0!==o?o:sa(0),ySkew:null!==(a=t.ySkew)&&void 0!==a?a:sa(0),graphicsState:u,matrix:t.matrix,clipSpaces:t.clipSpaces}))}drawPage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var A,r,n,s,i;Zr(e,"embeddedPage",[[Ou,"PDFEmbeddedPage"]]),Xr(t.x,"options.x",["number"]),Xr(t.y,"options.y",["number"]),Xr(t.xScale,"options.xScale",["number"]),Xr(t.yScale,"options.yScale",["number"]),Xr(t.width,"options.width",["number"]),Xr(t.height,"options.height",["number"]),Xr(t.rotate,"options.rotate",[[Object,"Rotation"]]),Xr(t.xSkew,"options.xSkew",[[Object,"Rotation"]]),Xr(t.ySkew,"options.ySkew",[[Object,"Rotation"]]),Rr(t.opacity,"opacity.opacity",0,1),kr(t.blendMode,"options.blendMode",kc);const o=this.node.newXObject("EmbeddedPdfPage",e.ref),a=this.maybeEmbedGraphicsState({opacity:t.opacity,blendMode:t.blendMode}),l=void 0!==t.width?t.width/e.width:void 0!==t.xScale?t.xScale:1,u=void 0!==t.height?t.height/e.height:void 0!==t.yScale?t.yScale:1;this.getContentStream().push(...Jl(o,{x:null!==(A=t.x)&&void 0!==A?A:this.x,y:null!==(r=t.y)&&void 0!==r?r:this.y,xScale:l,yScale:u,rotate:null!==(n=t.rotate)&&void 0!==n?n:sa(0),xSkew:null!==(s=t.xSkew)&&void 0!==s?s:sa(0),ySkew:null!==(i=t.ySkew)&&void 0!==i?i:sa(0),graphicsState:a}))}drawSvgPath(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var A,r,n,s,i,o,a,l,u;Zr(e,"path",["string"]),Xr(t.x,"options.x",["number"]),Xr(t.y,"options.y",["number"]),Xr(t.scale,"options.scale",["number"]),Xr(t.rotate,"options.rotate",[[Object,"Rotation"]]),Xr(t.borderWidth,"options.borderWidth",["number"]),Xr(t.color,"options.color",[[Object,"Color"]]),Rr(t.opacity,"opacity.opacity",0,1),Xr(t.borderColor,"options.borderColor",[[Object,"Color"]]),Xr(t.borderDashArray,"options.borderDashArray",[Array]),Xr(t.borderDashPhase,"options.borderDashPhase",["number"]),kr(t.borderLineCap,"options.borderLineCap",Pa),Rr(t.borderOpacity,"options.borderOpacity",0,1),kr(t.blendMode,"options.blendMode",kc),kr(t.fillRule,"options.fillRule",Va);const c=this.maybeEmbedGraphicsState({opacity:t.opacity,borderOpacity:t.borderOpacity,blendMode:t.blendMode});"color"in t||"borderColor"in t||(t.borderColor=Cl(0,0,0));this.getContentStream().push(...nu(e,{x:null!==(A=t.x)&&void 0!==A?A:this.x,y:null!==(r=t.y)&&void 0!==r?r:this.y,scale:t.scale,rotate:null!==(n=t.rotate)&&void 0!==n?n:sa(0),color:null!==(s=t.color)&&void 0!==s?s:void 0,borderColor:null!==(i=t.borderColor)&&void 0!==i?i:void 0,borderWidth:null!==(o=t.borderWidth)&&void 0!==o?o:0,borderDashArray:null!==(a=t.borderDashArray)&&void 0!==a?a:void 0,borderDashPhase:null!==(l=t.borderDashPhase)&&void 0!==l?l:void 0,borderLineCap:null!==(u=t.borderLineCap)&&void 0!==u?u:void 0,graphicsState:c,fillRule:t.fillRule,matrix:t.matrix,clipSpaces:t.clipSpaces}))}drawLine(e){var t,A,r,n,s;Zr(e.start,"options.start",[[Object,"{ x: number, y: number }"]]),Zr(e.end,"options.end",[[Object,"{ x: number, y: number }"]]),Zr(e.start.x,"options.start.x",["number"]),Zr(e.start.y,"options.start.y",["number"]),Zr(e.end.x,"options.end.x",["number"]),Zr(e.end.y,"options.end.y",["number"]),Xr(e.thickness,"options.thickness",["number"]),Xr(e.color,"options.color",[[Object,"Color"]]),Xr(e.dashArray,"options.dashArray",[Array]),Xr(e.dashPhase,"options.dashPhase",["number"]),kr(e.lineCap,"options.lineCap",Pa),Rr(e.opacity,"opacity.opacity",0,1),kr(e.blendMode,"options.blendMode",kc);const i=this.maybeEmbedGraphicsState({borderOpacity:e.opacity,blendMode:e.blendMode});"color"in e||(e.color=Cl(0,0,0));this.getContentStream().push(..._l({start:e.start,end:e.end,thickness:null!==(t=e.thickness)&&void 0!==t?t:1,color:null!==(A=e.color)&&void 0!==A?A:void 0,dashArray:null!==(r=e.dashArray)&&void 0!==r?r:void 0,dashPhase:null!==(n=e.dashPhase)&&void 0!==n?n:void 0,lineCap:null!==(s=e.lineCap)&&void 0!==s?s:void 0,graphicsState:i,matrix:e.matrix,clipSpaces:e.clipSpaces}))}drawRectangle(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};var t,A,r,n,s,i,o,a,l,u,c,d,f;Xr(e.x,"options.x",["number"]),Xr(e.y,"options.y",["number"]),Xr(e.width,"options.width",["number"]),Xr(e.height,"options.height",["number"]),Xr(e.rotate,"options.rotate",[[Object,"Rotation"]]),Xr(e.xSkew,"options.xSkew",[[Object,"Rotation"]]),Xr(e.ySkew,"options.ySkew",[[Object,"Rotation"]]),Xr(e.borderWidth,"options.borderWidth",["number"]),Xr(e.color,"options.color",[[Object,"Color"]]),Rr(e.opacity,"opacity.opacity",0,1),Xr(e.borderColor,"options.borderColor",[[Object,"Color"]]),Xr(e.borderDashArray,"options.borderDashArray",[Array]),Xr(e.borderDashPhase,"options.borderDashPhase",["number"]),kr(e.borderLineCap,"options.borderLineCap",Pa),Rr(e.borderOpacity,"options.borderOpacity",0,1),kr(e.blendMode,"options.blendMode",kc);const h=this.maybeEmbedGraphicsState({opacity:e.opacity,borderOpacity:e.borderOpacity,blendMode:e.blendMode});"color"in e||"borderColor"in e||(e.color=Cl(0,0,0));this.getContentStream().push(...$l({x:null!==(t=e.x)&&void 0!==t?t:this.x,y:null!==(A=e.y)&&void 0!==A?A:this.y,width:null!==(r=e.width)&&void 0!==r?r:150,height:null!==(n=e.height)&&void 0!==n?n:100,rotate:null!==(s=e.rotate)&&void 0!==s?s:sa(0),xSkew:null!==(i=e.xSkew)&&void 0!==i?i:sa(0),ySkew:null!==(o=e.ySkew)&&void 0!==o?o:sa(0),borderWidth:null!==(a=e.borderWidth)&&void 0!==a?a:0,color:null!==(l=e.color)&&void 0!==l?l:void 0,borderColor:null!==(u=e.borderColor)&&void 0!==u?u:void 0,borderDashArray:null!==(c=e.borderDashArray)&&void 0!==c?c:void 0,borderDashPhase:null!==(d=e.borderDashPhase)&&void 0!==d?d:void 0,graphicsState:h,borderLineCap:null!==(f=e.borderLineCap)&&void 0!==f?f:void 0,matrix:e.matrix,clipSpaces:e.clipSpaces}))}drawSquare(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{size:t}=e;Xr(t,"size",["number"]),this.drawRectangle({...e,width:t,height:t})}drawEllipse(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};var t,A,r,n,s,i,o,a,l,u,c;Xr(e.x,"options.x",["number"]),Xr(e.y,"options.y",["number"]),Xr(e.xScale,"options.xScale",["number"]),Xr(e.yScale,"options.yScale",["number"]),Xr(e.rotate,"options.rotate",[[Object,"Rotation"]]),Xr(e.color,"options.color",[[Object,"Color"]]),Rr(e.opacity,"opacity.opacity",0,1),Xr(e.borderColor,"options.borderColor",[[Object,"Color"]]),Rr(e.borderOpacity,"options.borderOpacity",0,1),Xr(e.borderWidth,"options.borderWidth",["number"]),Xr(e.borderDashArray,"options.borderDashArray",[Array]),Xr(e.borderDashPhase,"options.borderDashPhase",["number"]),kr(e.borderLineCap,"options.borderLineCap",Pa),kr(e.blendMode,"options.blendMode",kc);const d=this.maybeEmbedGraphicsState({opacity:e.opacity,borderOpacity:e.borderOpacity,blendMode:e.blendMode});"color"in e||"borderColor"in e||(e.color=Cl(0,0,0));this.getContentStream().push(...ru({x:null!==(t=e.x)&&void 0!==t?t:this.x,y:null!==(A=e.y)&&void 0!==A?A:this.y,xScale:null!==(r=e.xScale)&&void 0!==r?r:100,yScale:null!==(n=e.yScale)&&void 0!==n?n:100,rotate:null!==(s=e.rotate)&&void 0!==s?s:void 0,color:null!==(i=e.color)&&void 0!==i?i:void 0,borderColor:null!==(o=e.borderColor)&&void 0!==o?o:void 0,borderWidth:null!==(a=e.borderWidth)&&void 0!==a?a:0,borderDashArray:null!==(l=e.borderDashArray)&&void 0!==l?l:void 0,borderDashPhase:null!==(u=e.borderDashPhase)&&void 0!==u?u:void 0,borderLineCap:null!==(c=e.borderLineCap)&&void 0!==c?c:void 0,graphicsState:d,matrix:e.matrix,clipSpaces:e.clipSpaces}))}drawCircle(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{size:t=100}=e;Xr(t,"size",["number"]),this.drawEllipse({...e,xScale:t,yScale:t})}setOrEmbedFont(e){const t=this.font,A=this.fontKey;e?this.setFont(e):this.getFont();return{oldFont:t,oldFontKey:A,newFont:this.font,newFontKey:this.fontKey}}async drawSvg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var A,r;Zr(e,"svg",["string"]),Xr(t.x,"options.x",["number"]),Xr(t.y,"options.y",["number"]),Xr(t.width,"options.width",["number"]),Xr(t.height,"options.height",["number"]),await $c(this,e,{x:null!==(A=t.x)&&void 0!==A?A:this.x,y:null!==(r=t.y)&&void 0!==r?r:this.y,fonts:t.fonts,width:t.width,height:t.height})}getFont(){if(!this.font||!this.fontKey){const e=this.doc.embedStandardFont(nc.Helvetica);this.setFont(e)}return[this.font,this.fontKey]}resetFont(){this.font=void 0,this.fontKey=void 0}getContentStream(){return arguments.length>0&&void 0!==arguments[0]&&!arguments[0]||!this.contentStream?(this.contentStream=this.createContentStream(),this.contentStreamRef=this.doc.context.register(this.contentStream),this.node.addContentStream(this.contentStreamRef),this.contentStream):this.contentStream}createContentStream(){const e=this.doc.context.obj({});for(var t=arguments.length,A=new Array(t),r=0;r<t;r++)A[r]=arguments[r];return ss.of(e,A)}maybeEmbedGraphicsState(e){const{opacity:t,borderOpacity:A,blendMode:r}=e;if(void 0===t&&void 0===A&&void 0===r)return;const n=this.doc.context.obj({Type:"ExtGState",ca:t,CA:A,BM:r});return this.node.newExtGState("GS",n)}scaleAnnot(e,t,A){const r=["RD","CL","Vertices","QuadPoints","L","Rect"];for(let s=0,i=r.length;s<i;s++){const n=e.lookup(jn.of(r[s]));n instanceof kn&&n.scalePDFNumbers(t,A)}const n=e.lookup(jn.of("InkList"));if(n instanceof kn)for(let s=0,i=n.size();s<i;s++){const e=n.lookup(s);e instanceof kn&&e.scalePDFNumbers(t,A)}}}ed.of=(e,t,A)=>new ed(e,t,A),ed.create=e=>{Zr(e,"doc",[[Ic,"PDFDocument"]]);const t=_n.of(-1),A=cs.withContextAndParent(e.context,t),r=e.context.register(A);return new ed(A,r,e)};class td extends Ju{constructor(e,t,A){super(e,t,A),Zr(e,"acroButton",[[lo,"PDFAcroPushButton"]]),this.acroField=e}setImage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ku.Center;const A=this.acroField.getWidgets();for(let r=0,n=A.length;r<n;r++){const n=A[r],s=this.createImageAppearanceStream(n,e,t);this.updateWidgetAppearances(n,{normal:s})}this.markAsClean()}setFontSize(e){Ur(e,"fontSize"),this.acroField.setFontSize(e),this.markAsDirty()}addToPage(e,t,A){var r,n,s,i,o,a,l,u,c,d,f;Xr(e,"text",["string"]),Xr(t,"page",[[ed,"PDFPage"]]),qu(A);const h=this.createWidget({x:(null!==(r=null===A||void 0===A?void 0:A.x)&&void 0!==r?r:0)-(null!==(n=null===A||void 0===A?void 0:A.borderWidth)&&void 0!==n?n:0)/2,y:(null!==(s=null===A||void 0===A?void 0:A.y)&&void 0!==s?s:0)-(null!==(i=null===A||void 0===A?void 0:A.borderWidth)&&void 0!==i?i:0)/2,width:null!==(o=null===A||void 0===A?void 0:A.width)&&void 0!==o?o:100,height:null!==(a=null===A||void 0===A?void 0:A.height)&&void 0!==a?a:50,textColor:null!==(l=null===A||void 0===A?void 0:A.textColor)&&void 0!==l?l:Cl(0,0,0),backgroundColor:null!==(u=null===A||void 0===A?void 0:A.backgroundColor)&&void 0!==u?u:Cl(.75,.75,.75),borderColor:null===A||void 0===A?void 0:A.borderColor,borderWidth:null!==(c=null===A||void 0===A?void 0:A.borderWidth)&&void 0!==c?c:0,rotate:null!==(d=null===A||void 0===A?void 0:A.rotate)&&void 0!==d?d:sa(0),caption:e,hidden:null===A||void 0===A?void 0:A.hidden,page:t.ref}),g=this.doc.context.register(h.dict);this.acroField.addWidget(g);const p=null!==(f=null===A||void 0===A?void 0:A.font)&&void 0!==f?f:this.doc.getForm().getDefaultFont();this.updateWidgetAppearance(h,p),t.node.addAnnot(g)}needsAppearancesUpdate(){var e;if(this.isDirty())return!0;const t=this.acroField.getWidgets();for(let A=0,r=t.length;A<r;A++){if(!((null===(e=t[A].getAppearances())||void 0===e?void 0:e.normal)instanceof On))return!0}return!1}defaultUpdateAppearances(e){Zr(e,"font",[[Yu,"PDFFont"]]),this.updateAppearances(e)}updateAppearances(e,t){Zr(e,"font",[[Yu,"PDFFont"]]),Xr(t,"provider",[Function]);const A=this.acroField.getWidgets();for(let r=0,n=A.length;r<n;r++){const n=A[r];this.updateWidgetAppearance(n,e,t)}}updateWidgetAppearance(e,t,A){const r=Fu((null!==A&&void 0!==A?A:ju)(this,e,t));this.updateWidgetAppearanceWithFont(e,t,r)}}var Ad,rd;td.of=(e,t,A)=>new td(e,t,A),function(e){e.assertEqual=e=>e,e.assertIs=function(e){},e.assertNever=function(e){throw new Error},e.arrayToEnum=e=>{const t={};for(const A of e)t[A]=A;return t},e.getValidEnumValues=t=>{const A=e.objectKeys(t).filter((e=>"number"!==typeof t[t[e]])),r={};for(const e of A)r[e]=t[e];return e.objectValues(r)},e.objectValues=t=>e.objectKeys(t).map((function(e){return t[e]})),e.objectKeys="function"===typeof Object.keys?e=>Object.keys(e):e=>{const t=[];for(const A in e)Object.prototype.hasOwnProperty.call(e,A)&&t.push(A);return t},e.find=(e,t)=>{for(const A of e)if(t(A))return A},e.isInteger="function"===typeof Number.isInteger?e=>Number.isInteger(e):e=>"number"===typeof e&&isFinite(e)&&Math.floor(e)===e,e.joinValues=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:" | ";return e.map((e=>"string"===typeof e?`'${e}'`:e)).join(t)},e.jsonStringifyReplacer=(e,t)=>"bigint"===typeof t?t.toString():t}(Ad||(Ad={})),function(e){e.mergeShapes=(e,t)=>({...e,...t})}(rd||(rd={}));const nd=Ad.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),sd=e=>{switch(typeof e){case"undefined":return nd.undefined;case"string":return nd.string;case"number":return isNaN(e)?nd.nan:nd.number;case"boolean":return nd.boolean;case"function":return nd.function;case"bigint":return nd.bigint;case"symbol":return nd.symbol;case"object":return Array.isArray(e)?nd.array:null===e?nd.null:e.then&&"function"===typeof e.then&&e.catch&&"function"===typeof e.catch?nd.promise:"undefined"!==typeof Map&&e instanceof Map?nd.map:"undefined"!==typeof Set&&e instanceof Set?nd.set:"undefined"!==typeof Date&&e instanceof Date?nd.date:nd.object;default:return nd.unknown}},id=Ad.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]);class od extends Error{constructor(e){var t;super(),t=this,this.issues=[],this.addIssue=e=>{this.issues=[...this.issues,e]},this.addIssues=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];t.issues=[...t.issues,...e]};const A=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,A):this.__proto__=A,this.name="ZodError",this.issues=e}get errors(){return this.issues}format(e){const t=e||function(e){return e.message},A={_errors:[]},r=e=>{for(const n of e.issues)if("invalid_union"===n.code)n.unionErrors.map(r);else if("invalid_return_type"===n.code)r(n.returnTypeError);else if("invalid_arguments"===n.code)r(n.argumentsError);else if(0===n.path.length)A._errors.push(t(n));else{let e=A,r=0;for(;r<n.path.length;){const A=n.path[r];r===n.path.length-1?(e[A]=e[A]||{_errors:[]},e[A]._errors.push(t(n))):e[A]=e[A]||{_errors:[]},e=e[A],r++}}};return r(this),A}static assert(e){if(!(e instanceof od))throw new Error(`Not a ZodError: ${e}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,Ad.jsonStringifyReplacer,2)}get isEmpty(){return 0===this.issues.length}flatten(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e=>e.message;const t={},A=[];for(const r of this.issues)r.path.length>0?(t[r.path[0]]=t[r.path[0]]||[],t[r.path[0]].push(e(r))):A.push(e(r));return{formErrors:A,fieldErrors:t}}get formErrors(){return this.flatten()}}od.create=e=>new od(e);const ad=(e,t)=>{let A;switch(e.code){case id.invalid_type:A=e.received===nd.undefined?"Required":`Expected ${e.expected}, received ${e.received}`;break;case id.invalid_literal:A=`Invalid literal value, expected ${JSON.stringify(e.expected,Ad.jsonStringifyReplacer)}`;break;case id.unrecognized_keys:A=`Unrecognized key(s) in object: ${Ad.joinValues(e.keys,", ")}`;break;case id.invalid_union:A="Invalid input";break;case id.invalid_union_discriminator:A=`Invalid discriminator value. Expected ${Ad.joinValues(e.options)}`;break;case id.invalid_enum_value:A=`Invalid enum value. Expected ${Ad.joinValues(e.options)}, received '${e.received}'`;break;case id.invalid_arguments:A="Invalid function arguments";break;case id.invalid_return_type:A="Invalid function return type";break;case id.invalid_date:A="Invalid date";break;case id.invalid_string:"object"===typeof e.validation?"includes"in e.validation?(A=`Invalid input: must include "${e.validation.includes}"`,"number"===typeof e.validation.position&&(A=`${A} at one or more positions greater than or equal to ${e.validation.position}`)):"startsWith"in e.validation?A=`Invalid input: must start with "${e.validation.startsWith}"`:"endsWith"in e.validation?A=`Invalid input: must end with "${e.validation.endsWith}"`:Ad.assertNever(e.validation):A="regex"!==e.validation?`Invalid ${e.validation}`:"Invalid";break;case id.too_small:A="array"===e.type?`Array must contain ${e.exact?"exactly":e.inclusive?"at least":"more than"} ${e.minimum} element(s)`:"string"===e.type?`String must contain ${e.exact?"exactly":e.inclusive?"at least":"over"} ${e.minimum} character(s)`:"number"===e.type?`Number must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${e.minimum}`:"date"===e.type?`Date must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(e.minimum))}`:"Invalid input";break;case id.too_big:A="array"===e.type?`Array must contain ${e.exact?"exactly":e.inclusive?"at most":"less than"} ${e.maximum} element(s)`:"string"===e.type?`String must contain ${e.exact?"exactly":e.inclusive?"at most":"under"} ${e.maximum} character(s)`:"number"===e.type?`Number must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:"bigint"===e.type?`BigInt must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:"date"===e.type?`Date must be ${e.exact?"exactly":e.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(e.maximum))}`:"Invalid input";break;case id.custom:A="Invalid input";break;case id.invalid_intersection_types:A="Intersection results could not be merged";break;case id.not_multiple_of:A=`Number must be a multiple of ${e.multipleOf}`;break;case id.not_finite:A="Number must be finite";break;default:A=t.defaultError,Ad.assertNever(e)}return{message:A}};let ld=ad;function ud(){return ld}const cd=e=>{const{data:t,path:A,errorMaps:r,issueData:n}=e,s=[...A,...n.path||[]],i={...n,path:s};if(void 0!==n.message)return{...n,path:s,message:n.message};let o="";const a=r.filter((e=>!!e)).slice().reverse();for(const l of a)o=l(i,{data:t,defaultError:o}).message;return{...n,path:s,message:o}};function dd(e,t){const A=ud(),r=cd({issueData:t,data:e.data,path:e.path,errorMaps:[e.common.contextualErrorMap,e.schemaErrorMap,A,A===ad?void 0:ad].filter((e=>!!e))});e.common.issues.push(r)}class fd{constructor(){this.value="valid"}dirty(){"valid"===this.value&&(this.value="dirty")}abort(){"aborted"!==this.value&&(this.value="aborted")}static mergeArray(e,t){const A=[];for(const r of t){if("aborted"===r.status)return hd;"dirty"===r.status&&e.dirty(),A.push(r.value)}return{status:e.value,value:A}}static async mergeObjectAsync(e,t){const A=[];for(const r of t){const e=await r.key,t=await r.value;A.push({key:e,value:t})}return fd.mergeObjectSync(e,A)}static mergeObjectSync(e,t){const A={};for(const r of t){const{key:t,value:n}=r;if("aborted"===t.status)return hd;if("aborted"===n.status)return hd;"dirty"===t.status&&e.dirty(),"dirty"===n.status&&e.dirty(),"__proto__"===t.value||"undefined"===typeof n.value&&!r.alwaysSet||(A[t.value]=n.value)}return{status:e.value,value:A}}}const hd=Object.freeze({status:"aborted"}),gd=e=>({status:"dirty",value:e}),pd=e=>({status:"valid",value:e}),bd=e=>"aborted"===e.status,md=e=>"dirty"===e.status,vd=e=>"valid"===e.status,yd=e=>"undefined"!==typeof Promise&&e instanceof Promise;function wd(e,t,A,r){if("a"===A&&!r)throw new TypeError("Private accessor was defined without a getter");if("function"===typeof t?e!==t||!r:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===A?r:"a"===A?r.call(e):r?r.value:t.get(e)}function Bd(e,t,A,r,n){if("m"===r)throw new TypeError("Private method is not writable");if("a"===r&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"===typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===r?n.call(e,A):n?n.value=A:t.set(e,A),A}var xd,Cd,Ed;"function"===typeof SuppressedError&&SuppressedError,function(e){e.errToObj=e=>"string"===typeof e?{message:e}:e||{},e.toString=e=>"string"===typeof e?e:null===e||void 0===e?void 0:e.message}(xd||(xd={}));class Nd{constructor(e,t,A,r){this._cachedPath=[],this.parent=e,this.data=t,this._path=A,this._key=r}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}}const Dd=(e,t)=>{if(vd(t))return{success:!0,data:t.value};if(!e.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;const t=new od(e.common.issues);return this._error=t,this._error}}};function Qd(e){if(!e)return{};const{errorMap:t,invalid_type_error:A,required_error:r,description:n}=e;if(t&&(A||r))throw new Error('Can\'t use "invalid_type_error" or "required_error" in conjunction with custom error map.');if(t)return{errorMap:t,description:n};return{errorMap:(t,n)=>{var s,i;const{message:o}=e;return"invalid_enum_value"===t.code?{message:null!==o&&void 0!==o?o:n.defaultError}:"undefined"===typeof n.data?{message:null!==(s=null!==o&&void 0!==o?o:r)&&void 0!==s?s:n.defaultError}:"invalid_type"!==t.code?{message:n.defaultError}:{message:null!==(i=null!==o&&void 0!==o?o:A)&&void 0!==i?i:n.defaultError}},description:n}}class Pd{constructor(e){this.spa=this.safeParseAsync,this._def=e,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(e){return sd(e.data)}_getOrReturnCtx(e,t){return t||{common:e.parent.common,data:e.data,parsedType:sd(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}_processInputParams(e){return{status:new fd,ctx:{common:e.parent.common,data:e.data,parsedType:sd(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}}_parseSync(e){const t=this._parse(e);if(yd(t))throw new Error("Synchronous parse encountered promise.");return t}_parseAsync(e){const t=this._parse(e);return Promise.resolve(t)}parse(e,t){const A=this.safeParse(e,t);if(A.success)return A.data;throw A.error}safeParse(e,t){var A;const r={common:{issues:[],async:null!==(A=null===t||void 0===t?void 0:t.async)&&void 0!==A&&A,contextualErrorMap:null===t||void 0===t?void 0:t.errorMap},path:(null===t||void 0===t?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:sd(e)},n=this._parseSync({data:e,path:r.path,parent:r});return Dd(r,n)}async parseAsync(e,t){const A=await this.safeParseAsync(e,t);if(A.success)return A.data;throw A.error}async safeParseAsync(e,t){const A={common:{issues:[],contextualErrorMap:null===t||void 0===t?void 0:t.errorMap,async:!0},path:(null===t||void 0===t?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:sd(e)},r=this._parse({data:e,path:A.path,parent:A}),n=await(yd(r)?r:Promise.resolve(r));return Dd(A,n)}refine(e,t){const A=e=>"string"===typeof t||"undefined"===typeof t?{message:t}:"function"===typeof t?t(e):t;return this._refinement(((t,r)=>{const n=e(t),s=()=>r.addIssue({code:id.custom,...A(t)});return"undefined"!==typeof Promise&&n instanceof Promise?n.then((e=>!!e||(s(),!1))):!!n||(s(),!1)}))}refinement(e,t){return this._refinement(((A,r)=>!!e(A)||(r.addIssue("function"===typeof t?t(A,r):t),!1)))}_refinement(e){return new Ef({schema:this,typeName:Zf.ZodEffects,effect:{type:"refinement",refinement:e}})}superRefine(e){return this._refinement(e)}optional(){return Nf.create(this,this._def)}nullable(){return Df.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return sf.create(this,this._def)}promise(){return Cf.create(this,this._def)}or(e){return lf.create([this,e],this._def)}and(e){return ff.create(this,e,this._def)}transform(e){return new Ef({...Qd(this._def),schema:this,typeName:Zf.ZodEffects,effect:{type:"transform",transform:e}})}default(e){const t="function"===typeof e?e:()=>e;return new Qf({...Qd(this._def),innerType:this,defaultValue:t,typeName:Zf.ZodDefault})}brand(){return new kf({typeName:Zf.ZodBranded,type:this,...Qd(this._def)})}catch(e){const t="function"===typeof e?e:()=>e;return new Pf({...Qd(this._def),innerType:this,catchValue:t,typeName:Zf.ZodCatch})}describe(e){return new(0,this.constructor)({...this._def,description:e})}pipe(e){return Gf.create(this,e)}readonly(){return Ff.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}}const Id=/^c[^\s-]{8,}$/i,Ld=/^[0-9a-z]+$/,kd=/^[0-9A-HJKMNP-TV-Z]{26}$/,Gd=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,Fd=/^[a-z0-9_-]{21}$/i,Sd=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,Wd=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i;let Zd;const Xd=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,Md=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,zd=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,Rd="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",jd=new RegExp(`^${Rd}$`);function Td(e){let t="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return e.precision?t=`${t}\\.\\d{${e.precision}}`:null==e.precision&&(t=`${t}(\\.\\d+)?`),t}function Ud(e){return new RegExp(`^${Td(e)}$`)}function Vd(e){let t=`${Rd}T${Td(e)}`;const A=[];return A.push(e.local?"Z?":"Z"),e.offset&&A.push("([+-]\\d{2}:?\\d{2})"),t=`${t}(${A.join("|")})`,new RegExp(`^${t}$`)}class Od extends Pd{_parse(e){this._def.coerce&&(e.data=String(e.data));if(this._getType(e)!==nd.string){const t=this._getOrReturnCtx(e);return dd(t,{code:id.invalid_type,expected:nd.string,received:t.parsedType}),hd}const t=new fd;let A;for(const i of this._def.checks)if("min"===i.kind)e.data.length<i.value&&(A=this._getOrReturnCtx(e,A),dd(A,{code:id.too_small,minimum:i.value,type:"string",inclusive:!0,exact:!1,message:i.message}),t.dirty());else if("max"===i.kind)e.data.length>i.value&&(A=this._getOrReturnCtx(e,A),dd(A,{code:id.too_big,maximum:i.value,type:"string",inclusive:!0,exact:!1,message:i.message}),t.dirty());else if("length"===i.kind){const r=e.data.length>i.value,n=e.data.length<i.value;(r||n)&&(A=this._getOrReturnCtx(e,A),r?dd(A,{code:id.too_big,maximum:i.value,type:"string",inclusive:!0,exact:!0,message:i.message}):n&&dd(A,{code:id.too_small,minimum:i.value,type:"string",inclusive:!0,exact:!0,message:i.message}),t.dirty())}else if("email"===i.kind)Wd.test(e.data)||(A=this._getOrReturnCtx(e,A),dd(A,{validation:"email",code:id.invalid_string,message:i.message}),t.dirty());else if("emoji"===i.kind)Zd||(Zd=new RegExp("^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$","u")),Zd.test(e.data)||(A=this._getOrReturnCtx(e,A),dd(A,{validation:"emoji",code:id.invalid_string,message:i.message}),t.dirty());else if("uuid"===i.kind)Gd.test(e.data)||(A=this._getOrReturnCtx(e,A),dd(A,{validation:"uuid",code:id.invalid_string,message:i.message}),t.dirty());else if("nanoid"===i.kind)Fd.test(e.data)||(A=this._getOrReturnCtx(e,A),dd(A,{validation:"nanoid",code:id.invalid_string,message:i.message}),t.dirty());else if("cuid"===i.kind)Id.test(e.data)||(A=this._getOrReturnCtx(e,A),dd(A,{validation:"cuid",code:id.invalid_string,message:i.message}),t.dirty());else if("cuid2"===i.kind)Ld.test(e.data)||(A=this._getOrReturnCtx(e,A),dd(A,{validation:"cuid2",code:id.invalid_string,message:i.message}),t.dirty());else if("ulid"===i.kind)kd.test(e.data)||(A=this._getOrReturnCtx(e,A),dd(A,{validation:"ulid",code:id.invalid_string,message:i.message}),t.dirty());else if("url"===i.kind)try{new URL(e.data)}catch(s){A=this._getOrReturnCtx(e,A),dd(A,{validation:"url",code:id.invalid_string,message:i.message}),t.dirty()}else if("regex"===i.kind){i.regex.lastIndex=0;i.regex.test(e.data)||(A=this._getOrReturnCtx(e,A),dd(A,{validation:"regex",code:id.invalid_string,message:i.message}),t.dirty())}else if("trim"===i.kind)e.data=e.data.trim();else if("includes"===i.kind)e.data.includes(i.value,i.position)||(A=this._getOrReturnCtx(e,A),dd(A,{code:id.invalid_string,validation:{includes:i.value,position:i.position},message:i.message}),t.dirty());else if("toLowerCase"===i.kind)e.data=e.data.toLowerCase();else if("toUpperCase"===i.kind)e.data=e.data.toUpperCase();else if("startsWith"===i.kind)e.data.startsWith(i.value)||(A=this._getOrReturnCtx(e,A),dd(A,{code:id.invalid_string,validation:{startsWith:i.value},message:i.message}),t.dirty());else if("endsWith"===i.kind)e.data.endsWith(i.value)||(A=this._getOrReturnCtx(e,A),dd(A,{code:id.invalid_string,validation:{endsWith:i.value},message:i.message}),t.dirty());else if("datetime"===i.kind){Vd(i).test(e.data)||(A=this._getOrReturnCtx(e,A),dd(A,{code:id.invalid_string,validation:"datetime",message:i.message}),t.dirty())}else if("date"===i.kind){jd.test(e.data)||(A=this._getOrReturnCtx(e,A),dd(A,{code:id.invalid_string,validation:"date",message:i.message}),t.dirty())}else if("time"===i.kind){Ud(i).test(e.data)||(A=this._getOrReturnCtx(e,A),dd(A,{code:id.invalid_string,validation:"time",message:i.message}),t.dirty())}else"duration"===i.kind?Sd.test(e.data)||(A=this._getOrReturnCtx(e,A),dd(A,{validation:"duration",code:id.invalid_string,message:i.message}),t.dirty()):"ip"===i.kind?(r=e.data,("v4"!==(n=i.version)&&n||!Xd.test(r))&&("v6"!==n&&n||!Md.test(r))&&(A=this._getOrReturnCtx(e,A),dd(A,{validation:"ip",code:id.invalid_string,message:i.message}),t.dirty())):"base64"===i.kind?zd.test(e.data)||(A=this._getOrReturnCtx(e,A),dd(A,{validation:"base64",code:id.invalid_string,message:i.message}),t.dirty()):Ad.assertNever(i);var r,n;return{status:t.value,value:e.data}}_regex(e,t,A){return this.refinement((t=>e.test(t)),{validation:t,code:id.invalid_string,...xd.errToObj(A)})}_addCheck(e){return new Od({...this._def,checks:[...this._def.checks,e]})}email(e){return this._addCheck({kind:"email",...xd.errToObj(e)})}url(e){return this._addCheck({kind:"url",...xd.errToObj(e)})}emoji(e){return this._addCheck({kind:"emoji",...xd.errToObj(e)})}uuid(e){return this._addCheck({kind:"uuid",...xd.errToObj(e)})}nanoid(e){return this._addCheck({kind:"nanoid",...xd.errToObj(e)})}cuid(e){return this._addCheck({kind:"cuid",...xd.errToObj(e)})}cuid2(e){return this._addCheck({kind:"cuid2",...xd.errToObj(e)})}ulid(e){return this._addCheck({kind:"ulid",...xd.errToObj(e)})}base64(e){return this._addCheck({kind:"base64",...xd.errToObj(e)})}ip(e){return this._addCheck({kind:"ip",...xd.errToObj(e)})}datetime(e){var t,A;return"string"===typeof e?this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:e}):this._addCheck({kind:"datetime",precision:"undefined"===typeof(null===e||void 0===e?void 0:e.precision)?null:null===e||void 0===e?void 0:e.precision,offset:null!==(t=null===e||void 0===e?void 0:e.offset)&&void 0!==t&&t,local:null!==(A=null===e||void 0===e?void 0:e.local)&&void 0!==A&&A,...xd.errToObj(null===e||void 0===e?void 0:e.message)})}date(e){return this._addCheck({kind:"date",message:e})}time(e){return"string"===typeof e?this._addCheck({kind:"time",precision:null,message:e}):this._addCheck({kind:"time",precision:"undefined"===typeof(null===e||void 0===e?void 0:e.precision)?null:null===e||void 0===e?void 0:e.precision,...xd.errToObj(null===e||void 0===e?void 0:e.message)})}duration(e){return this._addCheck({kind:"duration",...xd.errToObj(e)})}regex(e,t){return this._addCheck({kind:"regex",regex:e,...xd.errToObj(t)})}includes(e,t){return this._addCheck({kind:"includes",value:e,position:null===t||void 0===t?void 0:t.position,...xd.errToObj(null===t||void 0===t?void 0:t.message)})}startsWith(e,t){return this._addCheck({kind:"startsWith",value:e,...xd.errToObj(t)})}endsWith(e,t){return this._addCheck({kind:"endsWith",value:e,...xd.errToObj(t)})}min(e,t){return this._addCheck({kind:"min",value:e,...xd.errToObj(t)})}max(e,t){return this._addCheck({kind:"max",value:e,...xd.errToObj(t)})}length(e,t){return this._addCheck({kind:"length",value:e,...xd.errToObj(t)})}nonempty(e){return this.min(1,xd.errToObj(e))}trim(){return new Od({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new Od({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new Od({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find((e=>"datetime"===e.kind))}get isDate(){return!!this._def.checks.find((e=>"date"===e.kind))}get isTime(){return!!this._def.checks.find((e=>"time"===e.kind))}get isDuration(){return!!this._def.checks.find((e=>"duration"===e.kind))}get isEmail(){return!!this._def.checks.find((e=>"email"===e.kind))}get isURL(){return!!this._def.checks.find((e=>"url"===e.kind))}get isEmoji(){return!!this._def.checks.find((e=>"emoji"===e.kind))}get isUUID(){return!!this._def.checks.find((e=>"uuid"===e.kind))}get isNANOID(){return!!this._def.checks.find((e=>"nanoid"===e.kind))}get isCUID(){return!!this._def.checks.find((e=>"cuid"===e.kind))}get isCUID2(){return!!this._def.checks.find((e=>"cuid2"===e.kind))}get isULID(){return!!this._def.checks.find((e=>"ulid"===e.kind))}get isIP(){return!!this._def.checks.find((e=>"ip"===e.kind))}get isBase64(){return!!this._def.checks.find((e=>"base64"===e.kind))}get minLength(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxLength(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}}function Yd(e,t){const A=(e.toString().split(".")[1]||"").length,r=(t.toString().split(".")[1]||"").length,n=A>r?A:r;return parseInt(e.toFixed(n).replace(".",""))%parseInt(t.toFixed(n).replace(".",""))/Math.pow(10,n)}Od.create=e=>{var t;return new Od({checks:[],typeName:Zf.ZodString,coerce:null!==(t=null===e||void 0===e?void 0:e.coerce)&&void 0!==t&&t,...Qd(e)})};class Hd extends Pd{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(e){this._def.coerce&&(e.data=Number(e.data));if(this._getType(e)!==nd.number){const t=this._getOrReturnCtx(e);return dd(t,{code:id.invalid_type,expected:nd.number,received:t.parsedType}),hd}let t;const A=new fd;for(const r of this._def.checks)if("int"===r.kind)Ad.isInteger(e.data)||(t=this._getOrReturnCtx(e,t),dd(t,{code:id.invalid_type,expected:"integer",received:"float",message:r.message}),A.dirty());else if("min"===r.kind){(r.inclusive?e.data<r.value:e.data<=r.value)&&(t=this._getOrReturnCtx(e,t),dd(t,{code:id.too_small,minimum:r.value,type:"number",inclusive:r.inclusive,exact:!1,message:r.message}),A.dirty())}else if("max"===r.kind){(r.inclusive?e.data>r.value:e.data>=r.value)&&(t=this._getOrReturnCtx(e,t),dd(t,{code:id.too_big,maximum:r.value,type:"number",inclusive:r.inclusive,exact:!1,message:r.message}),A.dirty())}else"multipleOf"===r.kind?0!==Yd(e.data,r.value)&&(t=this._getOrReturnCtx(e,t),dd(t,{code:id.not_multiple_of,multipleOf:r.value,message:r.message}),A.dirty()):"finite"===r.kind?Number.isFinite(e.data)||(t=this._getOrReturnCtx(e,t),dd(t,{code:id.not_finite,message:r.message}),A.dirty()):Ad.assertNever(r);return{status:A.value,value:e.data}}gte(e,t){return this.setLimit("min",e,!0,xd.toString(t))}gt(e,t){return this.setLimit("min",e,!1,xd.toString(t))}lte(e,t){return this.setLimit("max",e,!0,xd.toString(t))}lt(e,t){return this.setLimit("max",e,!1,xd.toString(t))}setLimit(e,t,A,r){return new Hd({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:A,message:xd.toString(r)}]})}_addCheck(e){return new Hd({...this._def,checks:[...this._def.checks,e]})}int(e){return this._addCheck({kind:"int",message:xd.toString(e)})}positive(e){return this._addCheck({kind:"min",value:0,inclusive:!1,message:xd.toString(e)})}negative(e){return this._addCheck({kind:"max",value:0,inclusive:!1,message:xd.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:0,inclusive:!0,message:xd.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:0,inclusive:!0,message:xd.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:xd.toString(t)})}finite(e){return this._addCheck({kind:"finite",message:xd.toString(e)})}safe(e){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:xd.toString(e)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:xd.toString(e)})}get minValue(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}get isInt(){return!!this._def.checks.find((e=>"int"===e.kind||"multipleOf"===e.kind&&Ad.isInteger(e.value)))}get isFinite(){let e=null,t=null;for(const A of this._def.checks){if("finite"===A.kind||"int"===A.kind||"multipleOf"===A.kind)return!0;"min"===A.kind?(null===t||A.value>t)&&(t=A.value):"max"===A.kind&&(null===e||A.value<e)&&(e=A.value)}return Number.isFinite(t)&&Number.isFinite(e)}}Hd.create=e=>new Hd({checks:[],typeName:Zf.ZodNumber,coerce:(null===e||void 0===e?void 0:e.coerce)||!1,...Qd(e)});class Kd extends Pd{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(e){this._def.coerce&&(e.data=BigInt(e.data));if(this._getType(e)!==nd.bigint){const t=this._getOrReturnCtx(e);return dd(t,{code:id.invalid_type,expected:nd.bigint,received:t.parsedType}),hd}let t;const A=new fd;for(const r of this._def.checks)if("min"===r.kind){(r.inclusive?e.data<r.value:e.data<=r.value)&&(t=this._getOrReturnCtx(e,t),dd(t,{code:id.too_small,type:"bigint",minimum:r.value,inclusive:r.inclusive,message:r.message}),A.dirty())}else if("max"===r.kind){(r.inclusive?e.data>r.value:e.data>=r.value)&&(t=this._getOrReturnCtx(e,t),dd(t,{code:id.too_big,type:"bigint",maximum:r.value,inclusive:r.inclusive,message:r.message}),A.dirty())}else"multipleOf"===r.kind?e.data%r.value!==BigInt(0)&&(t=this._getOrReturnCtx(e,t),dd(t,{code:id.not_multiple_of,multipleOf:r.value,message:r.message}),A.dirty()):Ad.assertNever(r);return{status:A.value,value:e.data}}gte(e,t){return this.setLimit("min",e,!0,xd.toString(t))}gt(e,t){return this.setLimit("min",e,!1,xd.toString(t))}lte(e,t){return this.setLimit("max",e,!0,xd.toString(t))}lt(e,t){return this.setLimit("max",e,!1,xd.toString(t))}setLimit(e,t,A,r){return new Kd({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:A,message:xd.toString(r)}]})}_addCheck(e){return new Kd({...this._def,checks:[...this._def.checks,e]})}positive(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:xd.toString(e)})}negative(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:xd.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:xd.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:xd.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:xd.toString(t)})}get minValue(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}}Kd.create=e=>{var t;return new Kd({checks:[],typeName:Zf.ZodBigInt,coerce:null!==(t=null===e||void 0===e?void 0:e.coerce)&&void 0!==t&&t,...Qd(e)})};class qd extends Pd{_parse(e){this._def.coerce&&(e.data=Boolean(e.data));if(this._getType(e)!==nd.boolean){const t=this._getOrReturnCtx(e);return dd(t,{code:id.invalid_type,expected:nd.boolean,received:t.parsedType}),hd}return pd(e.data)}}qd.create=e=>new qd({typeName:Zf.ZodBoolean,coerce:(null===e||void 0===e?void 0:e.coerce)||!1,...Qd(e)});class Jd extends Pd{_parse(e){this._def.coerce&&(e.data=new Date(e.data));if(this._getType(e)!==nd.date){const t=this._getOrReturnCtx(e);return dd(t,{code:id.invalid_type,expected:nd.date,received:t.parsedType}),hd}if(isNaN(e.data.getTime())){return dd(this._getOrReturnCtx(e),{code:id.invalid_date}),hd}const t=new fd;let A;for(const r of this._def.checks)"min"===r.kind?e.data.getTime()<r.value&&(A=this._getOrReturnCtx(e,A),dd(A,{code:id.too_small,message:r.message,inclusive:!0,exact:!1,minimum:r.value,type:"date"}),t.dirty()):"max"===r.kind?e.data.getTime()>r.value&&(A=this._getOrReturnCtx(e,A),dd(A,{code:id.too_big,message:r.message,inclusive:!0,exact:!1,maximum:r.value,type:"date"}),t.dirty()):Ad.assertNever(r);return{status:t.value,value:new Date(e.data.getTime())}}_addCheck(e){return new Jd({...this._def,checks:[...this._def.checks,e]})}min(e,t){return this._addCheck({kind:"min",value:e.getTime(),message:xd.toString(t)})}max(e,t){return this._addCheck({kind:"max",value:e.getTime(),message:xd.toString(t)})}get minDate(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return null!=e?new Date(e):null}get maxDate(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return null!=e?new Date(e):null}}Jd.create=e=>new Jd({checks:[],coerce:(null===e||void 0===e?void 0:e.coerce)||!1,typeName:Zf.ZodDate,...Qd(e)});class _d extends Pd{_parse(e){if(this._getType(e)!==nd.symbol){const t=this._getOrReturnCtx(e);return dd(t,{code:id.invalid_type,expected:nd.symbol,received:t.parsedType}),hd}return pd(e.data)}}_d.create=e=>new _d({typeName:Zf.ZodSymbol,...Qd(e)});class $d extends Pd{_parse(e){if(this._getType(e)!==nd.undefined){const t=this._getOrReturnCtx(e);return dd(t,{code:id.invalid_type,expected:nd.undefined,received:t.parsedType}),hd}return pd(e.data)}}$d.create=e=>new $d({typeName:Zf.ZodUndefined,...Qd(e)});class ef extends Pd{_parse(e){if(this._getType(e)!==nd.null){const t=this._getOrReturnCtx(e);return dd(t,{code:id.invalid_type,expected:nd.null,received:t.parsedType}),hd}return pd(e.data)}}ef.create=e=>new ef({typeName:Zf.ZodNull,...Qd(e)});class tf extends Pd{constructor(){super(...arguments),this._any=!0}_parse(e){return pd(e.data)}}tf.create=e=>new tf({typeName:Zf.ZodAny,...Qd(e)});class Af extends Pd{constructor(){super(...arguments),this._unknown=!0}_parse(e){return pd(e.data)}}Af.create=e=>new Af({typeName:Zf.ZodUnknown,...Qd(e)});class rf extends Pd{_parse(e){const t=this._getOrReturnCtx(e);return dd(t,{code:id.invalid_type,expected:nd.never,received:t.parsedType}),hd}}rf.create=e=>new rf({typeName:Zf.ZodNever,...Qd(e)});class nf extends Pd{_parse(e){if(this._getType(e)!==nd.undefined){const t=this._getOrReturnCtx(e);return dd(t,{code:id.invalid_type,expected:nd.void,received:t.parsedType}),hd}return pd(e.data)}}nf.create=e=>new nf({typeName:Zf.ZodVoid,...Qd(e)});class sf extends Pd{_parse(e){const{ctx:t,status:A}=this._processInputParams(e),r=this._def;if(t.parsedType!==nd.array)return dd(t,{code:id.invalid_type,expected:nd.array,received:t.parsedType}),hd;if(null!==r.exactLength){const e=t.data.length>r.exactLength.value,n=t.data.length<r.exactLength.value;(e||n)&&(dd(t,{code:e?id.too_big:id.too_small,minimum:n?r.exactLength.value:void 0,maximum:e?r.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:r.exactLength.message}),A.dirty())}if(null!==r.minLength&&t.data.length<r.minLength.value&&(dd(t,{code:id.too_small,minimum:r.minLength.value,type:"array",inclusive:!0,exact:!1,message:r.minLength.message}),A.dirty()),null!==r.maxLength&&t.data.length>r.maxLength.value&&(dd(t,{code:id.too_big,maximum:r.maxLength.value,type:"array",inclusive:!0,exact:!1,message:r.maxLength.message}),A.dirty()),t.common.async)return Promise.all([...t.data].map(((e,A)=>r.type._parseAsync(new Nd(t,e,t.path,A))))).then((e=>fd.mergeArray(A,e)));const n=[...t.data].map(((e,A)=>r.type._parseSync(new Nd(t,e,t.path,A))));return fd.mergeArray(A,n)}get element(){return this._def.type}min(e,t){return new sf({...this._def,minLength:{value:e,message:xd.toString(t)}})}max(e,t){return new sf({...this._def,maxLength:{value:e,message:xd.toString(t)}})}length(e,t){return new sf({...this._def,exactLength:{value:e,message:xd.toString(t)}})}nonempty(e){return this.min(1,e)}}function of(e){if(e instanceof af){const t={};for(const A in e.shape){const r=e.shape[A];t[A]=Nf.create(of(r))}return new af({...e._def,shape:()=>t})}return e instanceof sf?new sf({...e._def,type:of(e.element)}):e instanceof Nf?Nf.create(of(e.unwrap())):e instanceof Df?Df.create(of(e.unwrap())):e instanceof hf?hf.create(e.items.map((e=>of(e)))):e}sf.create=(e,t)=>new sf({type:e,minLength:null,maxLength:null,exactLength:null,typeName:Zf.ZodArray,...Qd(t)});class af extends Pd{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(null!==this._cached)return this._cached;const e=this._def.shape(),t=Ad.objectKeys(e);return this._cached={shape:e,keys:t}}_parse(e){if(this._getType(e)!==nd.object){const t=this._getOrReturnCtx(e);return dd(t,{code:id.invalid_type,expected:nd.object,received:t.parsedType}),hd}const{status:t,ctx:A}=this._processInputParams(e),{shape:r,keys:n}=this._getCached(),s=[];if(!(this._def.catchall instanceof rf&&"strip"===this._def.unknownKeys))for(const o in A.data)n.includes(o)||s.push(o);const i=[];for(const o of n){const e=r[o],t=A.data[o];i.push({key:{status:"valid",value:o},value:e._parse(new Nd(A,t,A.path,o)),alwaysSet:o in A.data})}if(this._def.catchall instanceof rf){const e=this._def.unknownKeys;if("passthrough"===e)for(const t of s)i.push({key:{status:"valid",value:t},value:{status:"valid",value:A.data[t]}});else if("strict"===e)s.length>0&&(dd(A,{code:id.unrecognized_keys,keys:s}),t.dirty());else if("strip"!==e)throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{const e=this._def.catchall;for(const t of s){const r=A.data[t];i.push({key:{status:"valid",value:t},value:e._parse(new Nd(A,r,A.path,t)),alwaysSet:t in A.data})}}return A.common.async?Promise.resolve().then((async()=>{const e=[];for(const t of i){const A=await t.key,r=await t.value;e.push({key:A,value:r,alwaysSet:t.alwaysSet})}return e})).then((e=>fd.mergeObjectSync(t,e))):fd.mergeObjectSync(t,i)}get shape(){return this._def.shape()}strict(e){return xd.errToObj,new af({...this._def,unknownKeys:"strict",...void 0!==e?{errorMap:(t,A)=>{var r,n,s,i;const o=null!==(s=null===(n=(r=this._def).errorMap)||void 0===n?void 0:n.call(r,t,A).message)&&void 0!==s?s:A.defaultError;return"unrecognized_keys"===t.code?{message:null!==(i=xd.errToObj(e).message)&&void 0!==i?i:o}:{message:o}}}:{}})}strip(){return new af({...this._def,unknownKeys:"strip"})}passthrough(){return new af({...this._def,unknownKeys:"passthrough"})}extend(e){return new af({...this._def,shape:()=>({...this._def.shape(),...e})})}merge(e){return new af({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:()=>({...this._def.shape(),...e._def.shape()}),typeName:Zf.ZodObject})}setKey(e,t){return this.augment({[e]:t})}catchall(e){return new af({...this._def,catchall:e})}pick(e){const t={};return Ad.objectKeys(e).forEach((A=>{e[A]&&this.shape[A]&&(t[A]=this.shape[A])})),new af({...this._def,shape:()=>t})}omit(e){const t={};return Ad.objectKeys(this.shape).forEach((A=>{e[A]||(t[A]=this.shape[A])})),new af({...this._def,shape:()=>t})}deepPartial(){return of(this)}partial(e){const t={};return Ad.objectKeys(this.shape).forEach((A=>{const r=this.shape[A];e&&!e[A]?t[A]=r:t[A]=r.optional()})),new af({...this._def,shape:()=>t})}required(e){const t={};return Ad.objectKeys(this.shape).forEach((A=>{if(e&&!e[A])t[A]=this.shape[A];else{let e=this.shape[A];for(;e instanceof Nf;)e=e._def.innerType;t[A]=e}})),new af({...this._def,shape:()=>t})}keyof(){return wf(Ad.objectKeys(this.shape))}}af.create=(e,t)=>new af({shape:()=>e,unknownKeys:"strip",catchall:rf.create(),typeName:Zf.ZodObject,...Qd(t)}),af.strictCreate=(e,t)=>new af({shape:()=>e,unknownKeys:"strict",catchall:rf.create(),typeName:Zf.ZodObject,...Qd(t)}),af.lazycreate=(e,t)=>new af({shape:e,unknownKeys:"strip",catchall:rf.create(),typeName:Zf.ZodObject,...Qd(t)});class lf extends Pd{_parse(e){const{ctx:t}=this._processInputParams(e),A=this._def.options;if(t.common.async)return Promise.all(A.map((async e=>{const A={...t,common:{...t.common,issues:[]},parent:null};return{result:await e._parseAsync({data:t.data,path:t.path,parent:A}),ctx:A}}))).then((function(e){for(const t of e)if("valid"===t.result.status)return t.result;for(const r of e)if("dirty"===r.result.status)return t.common.issues.push(...r.ctx.common.issues),r.result;const A=e.map((e=>new od(e.ctx.common.issues)));return dd(t,{code:id.invalid_union,unionErrors:A}),hd}));{let e;const r=[];for(const s of A){const A={...t,common:{...t.common,issues:[]},parent:null},n=s._parseSync({data:t.data,path:t.path,parent:A});if("valid"===n.status)return n;"dirty"!==n.status||e||(e={result:n,ctx:A}),A.common.issues.length&&r.push(A.common.issues)}if(e)return t.common.issues.push(...e.ctx.common.issues),e.result;const n=r.map((e=>new od(e)));return dd(t,{code:id.invalid_union,unionErrors:n}),hd}}get options(){return this._def.options}}lf.create=(e,t)=>new lf({options:e,typeName:Zf.ZodUnion,...Qd(t)});const uf=e=>e instanceof vf?uf(e.schema):e instanceof Ef?uf(e.innerType()):e instanceof yf?[e.value]:e instanceof Bf?e.options:e instanceof xf?Ad.objectValues(e.enum):e instanceof Qf?uf(e._def.innerType):e instanceof $d?[void 0]:e instanceof ef?[null]:e instanceof Nf?[void 0,...uf(e.unwrap())]:e instanceof Df?[null,...uf(e.unwrap())]:e instanceof kf||e instanceof Ff?uf(e.unwrap()):e instanceof Pf?uf(e._def.innerType):[];class cf extends Pd{_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==nd.object)return dd(t,{code:id.invalid_type,expected:nd.object,received:t.parsedType}),hd;const A=this.discriminator,r=t.data[A],n=this.optionsMap.get(r);return n?t.common.async?n._parseAsync({data:t.data,path:t.path,parent:t}):n._parseSync({data:t.data,path:t.path,parent:t}):(dd(t,{code:id.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[A]}),hd)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(e,t,A){const r=new Map;for(const n of t){const t=uf(n.shape[e]);if(!t.length)throw new Error(`A discriminator value for key \`${e}\` could not be extracted from all schema options`);for(const A of t){if(r.has(A))throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(A)}`);r.set(A,n)}}return new cf({typeName:Zf.ZodDiscriminatedUnion,discriminator:e,options:t,optionsMap:r,...Qd(A)})}}function df(e,t){const A=sd(e),r=sd(t);if(e===t)return{valid:!0,data:e};if(A===nd.object&&r===nd.object){const A=Ad.objectKeys(t),r=Ad.objectKeys(e).filter((e=>-1!==A.indexOf(e))),n={...e,...t};for(const s of r){const A=df(e[s],t[s]);if(!A.valid)return{valid:!1};n[s]=A.data}return{valid:!0,data:n}}if(A===nd.array&&r===nd.array){if(e.length!==t.length)return{valid:!1};const A=[];for(let r=0;r<e.length;r++){const n=df(e[r],t[r]);if(!n.valid)return{valid:!1};A.push(n.data)}return{valid:!0,data:A}}return A===nd.date&&r===nd.date&&+e===+t?{valid:!0,data:e}:{valid:!1}}class ff extends Pd{_parse(e){const{status:t,ctx:A}=this._processInputParams(e),r=(e,r)=>{if(bd(e)||bd(r))return hd;const n=df(e.value,r.value);return n.valid?((md(e)||md(r))&&t.dirty(),{status:t.value,value:n.data}):(dd(A,{code:id.invalid_intersection_types}),hd)};return A.common.async?Promise.all([this._def.left._parseAsync({data:A.data,path:A.path,parent:A}),this._def.right._parseAsync({data:A.data,path:A.path,parent:A})]).then((e=>{let[t,A]=e;return r(t,A)})):r(this._def.left._parseSync({data:A.data,path:A.path,parent:A}),this._def.right._parseSync({data:A.data,path:A.path,parent:A}))}}ff.create=(e,t,A)=>new ff({left:e,right:t,typeName:Zf.ZodIntersection,...Qd(A)});class hf extends Pd{_parse(e){const{status:t,ctx:A}=this._processInputParams(e);if(A.parsedType!==nd.array)return dd(A,{code:id.invalid_type,expected:nd.array,received:A.parsedType}),hd;if(A.data.length<this._def.items.length)return dd(A,{code:id.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),hd;!this._def.rest&&A.data.length>this._def.items.length&&(dd(A,{code:id.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),t.dirty());const r=[...A.data].map(((e,t)=>{const r=this._def.items[t]||this._def.rest;return r?r._parse(new Nd(A,e,A.path,t)):null})).filter((e=>!!e));return A.common.async?Promise.all(r).then((e=>fd.mergeArray(t,e))):fd.mergeArray(t,r)}get items(){return this._def.items}rest(e){return new hf({...this._def,rest:e})}}hf.create=(e,t)=>{if(!Array.isArray(e))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new hf({items:e,typeName:Zf.ZodTuple,rest:null,...Qd(t)})};class gf extends Pd{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:t,ctx:A}=this._processInputParams(e);if(A.parsedType!==nd.object)return dd(A,{code:id.invalid_type,expected:nd.object,received:A.parsedType}),hd;const r=[],n=this._def.keyType,s=this._def.valueType;for(const i in A.data)r.push({key:n._parse(new Nd(A,i,A.path,i)),value:s._parse(new Nd(A,A.data[i],A.path,i)),alwaysSet:i in A.data});return A.common.async?fd.mergeObjectAsync(t,r):fd.mergeObjectSync(t,r)}get element(){return this._def.valueType}static create(e,t,A){return new gf(t instanceof Pd?{keyType:e,valueType:t,typeName:Zf.ZodRecord,...Qd(A)}:{keyType:Od.create(),valueType:e,typeName:Zf.ZodRecord,...Qd(t)})}}class pf extends Pd{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:t,ctx:A}=this._processInputParams(e);if(A.parsedType!==nd.map)return dd(A,{code:id.invalid_type,expected:nd.map,received:A.parsedType}),hd;const r=this._def.keyType,n=this._def.valueType,s=[...A.data.entries()].map(((e,t)=>{let[s,i]=e;return{key:r._parse(new Nd(A,s,A.path,[t,"key"])),value:n._parse(new Nd(A,i,A.path,[t,"value"]))}}));if(A.common.async){const e=new Map;return Promise.resolve().then((async()=>{for(const A of s){const r=await A.key,n=await A.value;if("aborted"===r.status||"aborted"===n.status)return hd;"dirty"!==r.status&&"dirty"!==n.status||t.dirty(),e.set(r.value,n.value)}return{status:t.value,value:e}}))}{const e=new Map;for(const A of s){const r=A.key,n=A.value;if("aborted"===r.status||"aborted"===n.status)return hd;"dirty"!==r.status&&"dirty"!==n.status||t.dirty(),e.set(r.value,n.value)}return{status:t.value,value:e}}}}pf.create=(e,t,A)=>new pf({valueType:t,keyType:e,typeName:Zf.ZodMap,...Qd(A)});class bf extends Pd{_parse(e){const{status:t,ctx:A}=this._processInputParams(e);if(A.parsedType!==nd.set)return dd(A,{code:id.invalid_type,expected:nd.set,received:A.parsedType}),hd;const r=this._def;null!==r.minSize&&A.data.size<r.minSize.value&&(dd(A,{code:id.too_small,minimum:r.minSize.value,type:"set",inclusive:!0,exact:!1,message:r.minSize.message}),t.dirty()),null!==r.maxSize&&A.data.size>r.maxSize.value&&(dd(A,{code:id.too_big,maximum:r.maxSize.value,type:"set",inclusive:!0,exact:!1,message:r.maxSize.message}),t.dirty());const n=this._def.valueType;function s(e){const A=new Set;for(const r of e){if("aborted"===r.status)return hd;"dirty"===r.status&&t.dirty(),A.add(r.value)}return{status:t.value,value:A}}const i=[...A.data.values()].map(((e,t)=>n._parse(new Nd(A,e,A.path,t))));return A.common.async?Promise.all(i).then((e=>s(e))):s(i)}min(e,t){return new bf({...this._def,minSize:{value:e,message:xd.toString(t)}})}max(e,t){return new bf({...this._def,maxSize:{value:e,message:xd.toString(t)}})}size(e,t){return this.min(e,t).max(e,t)}nonempty(e){return this.min(1,e)}}bf.create=(e,t)=>new bf({valueType:e,minSize:null,maxSize:null,typeName:Zf.ZodSet,...Qd(t)});class mf extends Pd{constructor(){super(...arguments),this.validate=this.implement}_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==nd.function)return dd(t,{code:id.invalid_type,expected:nd.function,received:t.parsedType}),hd;function A(e,A){return cd({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,ud(),ad].filter((e=>!!e)),issueData:{code:id.invalid_arguments,argumentsError:A}})}function r(e,A){return cd({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,ud(),ad].filter((e=>!!e)),issueData:{code:id.invalid_return_type,returnTypeError:A}})}const n={errorMap:t.common.contextualErrorMap},s=t.data;if(this._def.returns instanceof Cf){const e=this;return pd((async function(){for(var t=arguments.length,i=new Array(t),o=0;o<t;o++)i[o]=arguments[o];const a=new od([]),l=await e._def.args.parseAsync(i,n).catch((e=>{throw a.addIssue(A(i,e)),a})),u=await Reflect.apply(s,this,l);return await e._def.returns._def.type.parseAsync(u,n).catch((e=>{throw a.addIssue(r(u,e)),a}))}))}{const e=this;return pd((function(){for(var t=arguments.length,i=new Array(t),o=0;o<t;o++)i[o]=arguments[o];const a=e._def.args.safeParse(i,n);if(!a.success)throw new od([A(i,a.error)]);const l=Reflect.apply(s,this,a.data),u=e._def.returns.safeParse(l,n);if(!u.success)throw new od([r(l,u.error)]);return u.data}))}}parameters(){return this._def.args}returnType(){return this._def.returns}args(){for(var e=arguments.length,t=new Array(e),A=0;A<e;A++)t[A]=arguments[A];return new mf({...this._def,args:hf.create(t).rest(Af.create())})}returns(e){return new mf({...this._def,returns:e})}implement(e){return this.parse(e)}strictImplement(e){return this.parse(e)}static create(e,t,A){return new mf({args:e||hf.create([]).rest(Af.create()),returns:t||Af.create(),typeName:Zf.ZodFunction,...Qd(A)})}}class vf extends Pd{get schema(){return this._def.getter()}_parse(e){const{ctx:t}=this._processInputParams(e);return this._def.getter()._parse({data:t.data,path:t.path,parent:t})}}vf.create=(e,t)=>new vf({getter:e,typeName:Zf.ZodLazy,...Qd(t)});class yf extends Pd{_parse(e){if(e.data!==this._def.value){const t=this._getOrReturnCtx(e);return dd(t,{received:t.data,code:id.invalid_literal,expected:this._def.value}),hd}return{status:"valid",value:e.data}}get value(){return this._def.value}}function wf(e,t){return new Bf({values:e,typeName:Zf.ZodEnum,...Qd(t)})}yf.create=(e,t)=>new yf({value:e,typeName:Zf.ZodLiteral,...Qd(t)});class Bf extends Pd{constructor(){super(...arguments),Cd.set(this,void 0)}_parse(e){if("string"!==typeof e.data){const t=this._getOrReturnCtx(e),A=this._def.values;return dd(t,{expected:Ad.joinValues(A),received:t.parsedType,code:id.invalid_type}),hd}if(wd(this,Cd,"f")||Bd(this,Cd,new Set(this._def.values),"f"),!wd(this,Cd,"f").has(e.data)){const t=this._getOrReturnCtx(e),A=this._def.values;return dd(t,{received:t.data,code:id.invalid_enum_value,options:A}),hd}return pd(e.data)}get options(){return this._def.values}get enum(){const e={};for(const t of this._def.values)e[t]=t;return e}get Values(){const e={};for(const t of this._def.values)e[t]=t;return e}get Enum(){const e={};for(const t of this._def.values)e[t]=t;return e}extract(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._def;return Bf.create(e,{...this._def,...t})}exclude(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._def;return Bf.create(this.options.filter((t=>!e.includes(t))),{...this._def,...t})}}Cd=new WeakMap,Bf.create=wf;class xf extends Pd{constructor(){super(...arguments),Ed.set(this,void 0)}_parse(e){const t=Ad.getValidEnumValues(this._def.values),A=this._getOrReturnCtx(e);if(A.parsedType!==nd.string&&A.parsedType!==nd.number){const e=Ad.objectValues(t);return dd(A,{expected:Ad.joinValues(e),received:A.parsedType,code:id.invalid_type}),hd}if(wd(this,Ed,"f")||Bd(this,Ed,new Set(Ad.getValidEnumValues(this._def.values)),"f"),!wd(this,Ed,"f").has(e.data)){const e=Ad.objectValues(t);return dd(A,{received:A.data,code:id.invalid_enum_value,options:e}),hd}return pd(e.data)}get enum(){return this._def.values}}Ed=new WeakMap,xf.create=(e,t)=>new xf({values:e,typeName:Zf.ZodNativeEnum,...Qd(t)});class Cf extends Pd{unwrap(){return this._def.type}_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==nd.promise&&!1===t.common.async)return dd(t,{code:id.invalid_type,expected:nd.promise,received:t.parsedType}),hd;const A=t.parsedType===nd.promise?t.data:Promise.resolve(t.data);return pd(A.then((e=>this._def.type.parseAsync(e,{path:t.path,errorMap:t.common.contextualErrorMap}))))}}Cf.create=(e,t)=>new Cf({type:e,typeName:Zf.ZodPromise,...Qd(t)});class Ef extends Pd{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===Zf.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(e){const{status:t,ctx:A}=this._processInputParams(e),r=this._def.effect||null,n={addIssue:e=>{dd(A,e),e.fatal?t.abort():t.dirty()},get path(){return A.path}};if(n.addIssue=n.addIssue.bind(n),"preprocess"===r.type){const e=r.transform(A.data,n);if(A.common.async)return Promise.resolve(e).then((async e=>{if("aborted"===t.value)return hd;const r=await this._def.schema._parseAsync({data:e,path:A.path,parent:A});return"aborted"===r.status?hd:"dirty"===r.status||"dirty"===t.value?gd(r.value):r}));{if("aborted"===t.value)return hd;const r=this._def.schema._parseSync({data:e,path:A.path,parent:A});return"aborted"===r.status?hd:"dirty"===r.status||"dirty"===t.value?gd(r.value):r}}if("refinement"===r.type){const e=e=>{const t=r.refinement(e,n);if(A.common.async)return Promise.resolve(t);if(t instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return e};if(!1===A.common.async){const r=this._def.schema._parseSync({data:A.data,path:A.path,parent:A});return"aborted"===r.status?hd:("dirty"===r.status&&t.dirty(),e(r.value),{status:t.value,value:r.value})}return this._def.schema._parseAsync({data:A.data,path:A.path,parent:A}).then((A=>"aborted"===A.status?hd:("dirty"===A.status&&t.dirty(),e(A.value).then((()=>({status:t.value,value:A.value}))))))}if("transform"===r.type){if(!1===A.common.async){const e=this._def.schema._parseSync({data:A.data,path:A.path,parent:A});if(!vd(e))return e;const s=r.transform(e.value,n);if(s instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:t.value,value:s}}return this._def.schema._parseAsync({data:A.data,path:A.path,parent:A}).then((e=>vd(e)?Promise.resolve(r.transform(e.value,n)).then((e=>({status:t.value,value:e}))):e))}Ad.assertNever(r)}}Ef.create=(e,t,A)=>new Ef({schema:e,typeName:Zf.ZodEffects,effect:t,...Qd(A)}),Ef.createWithPreprocess=(e,t,A)=>new Ef({schema:t,effect:{type:"preprocess",transform:e},typeName:Zf.ZodEffects,...Qd(A)});class Nf extends Pd{_parse(e){return this._getType(e)===nd.undefined?pd(void 0):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}Nf.create=(e,t)=>new Nf({innerType:e,typeName:Zf.ZodOptional,...Qd(t)});class Df extends Pd{_parse(e){return this._getType(e)===nd.null?pd(null):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}Df.create=(e,t)=>new Df({innerType:e,typeName:Zf.ZodNullable,...Qd(t)});class Qf extends Pd{_parse(e){const{ctx:t}=this._processInputParams(e);let A=t.data;return t.parsedType===nd.undefined&&(A=this._def.defaultValue()),this._def.innerType._parse({data:A,path:t.path,parent:t})}removeDefault(){return this._def.innerType}}Qf.create=(e,t)=>new Qf({innerType:e,typeName:Zf.ZodDefault,defaultValue:"function"===typeof t.default?t.default:()=>t.default,...Qd(t)});class Pf extends Pd{_parse(e){const{ctx:t}=this._processInputParams(e),A={...t,common:{...t.common,issues:[]}},r=this._def.innerType._parse({data:A.data,path:A.path,parent:{...A}});return yd(r)?r.then((e=>({status:"valid",value:"valid"===e.status?e.value:this._def.catchValue({get error(){return new od(A.common.issues)},input:A.data})}))):{status:"valid",value:"valid"===r.status?r.value:this._def.catchValue({get error(){return new od(A.common.issues)},input:A.data})}}removeCatch(){return this._def.innerType}}Pf.create=(e,t)=>new Pf({innerType:e,typeName:Zf.ZodCatch,catchValue:"function"===typeof t.catch?t.catch:()=>t.catch,...Qd(t)});class If extends Pd{_parse(e){if(this._getType(e)!==nd.nan){const t=this._getOrReturnCtx(e);return dd(t,{code:id.invalid_type,expected:nd.nan,received:t.parsedType}),hd}return{status:"valid",value:e.data}}}If.create=e=>new If({typeName:Zf.ZodNaN,...Qd(e)});const Lf=Symbol("zod_brand");class kf extends Pd{_parse(e){const{ctx:t}=this._processInputParams(e),A=t.data;return this._def.type._parse({data:A,path:t.path,parent:t})}unwrap(){return this._def.type}}class Gf extends Pd{_parse(e){const{status:t,ctx:A}=this._processInputParams(e);if(A.common.async){return(async()=>{const e=await this._def.in._parseAsync({data:A.data,path:A.path,parent:A});return"aborted"===e.status?hd:"dirty"===e.status?(t.dirty(),gd(e.value)):this._def.out._parseAsync({data:e.value,path:A.path,parent:A})})()}{const e=this._def.in._parseSync({data:A.data,path:A.path,parent:A});return"aborted"===e.status?hd:"dirty"===e.status?(t.dirty(),{status:"dirty",value:e.value}):this._def.out._parseSync({data:e.value,path:A.path,parent:A})}}static create(e,t){return new Gf({in:e,out:t,typeName:Zf.ZodPipeline})}}class Ff extends Pd{_parse(e){const t=this._def.innerType._parse(e),A=e=>(vd(e)&&(e.value=Object.freeze(e.value)),e);return yd(t)?t.then((e=>A(e))):A(t)}unwrap(){return this._def.innerType}}function Sf(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},A=arguments.length>2?arguments[2]:void 0;return e?tf.create().superRefine(((r,n)=>{var s,i;if(!e(r)){const e="function"===typeof t?t(r):"string"===typeof t?{message:t}:t,o=null===(i=null!==(s=e.fatal)&&void 0!==s?s:A)||void 0===i||i,a="string"===typeof e?{message:e}:e;n.addIssue({code:"custom",...a,fatal:o})}})):tf.create()}Ff.create=(e,t)=>new Ff({innerType:e,typeName:Zf.ZodReadonly,...Qd(t)});const Wf={object:af.lazycreate};var Zf;!function(e){e.ZodString="ZodString",e.ZodNumber="ZodNumber",e.ZodNaN="ZodNaN",e.ZodBigInt="ZodBigInt",e.ZodBoolean="ZodBoolean",e.ZodDate="ZodDate",e.ZodSymbol="ZodSymbol",e.ZodUndefined="ZodUndefined",e.ZodNull="ZodNull",e.ZodAny="ZodAny",e.ZodUnknown="ZodUnknown",e.ZodNever="ZodNever",e.ZodVoid="ZodVoid",e.ZodArray="ZodArray",e.ZodObject="ZodObject",e.ZodUnion="ZodUnion",e.ZodDiscriminatedUnion="ZodDiscriminatedUnion",e.ZodIntersection="ZodIntersection",e.ZodTuple="ZodTuple",e.ZodRecord="ZodRecord",e.ZodMap="ZodMap",e.ZodSet="ZodSet",e.ZodFunction="ZodFunction",e.ZodLazy="ZodLazy",e.ZodLiteral="ZodLiteral",e.ZodEnum="ZodEnum",e.ZodEffects="ZodEffects",e.ZodNativeEnum="ZodNativeEnum",e.ZodOptional="ZodOptional",e.ZodNullable="ZodNullable",e.ZodDefault="ZodDefault",e.ZodCatch="ZodCatch",e.ZodPromise="ZodPromise",e.ZodBranded="ZodBranded",e.ZodPipeline="ZodPipeline",e.ZodReadonly="ZodReadonly"}(Zf||(Zf={}));const Xf=Od.create,Mf=Hd.create,zf=If.create,Rf=Kd.create,jf=qd.create,Tf=Jd.create,Uf=_d.create,Vf=$d.create,Of=ef.create,Yf=tf.create,Hf=Af.create,Kf=rf.create,qf=nf.create,Jf=sf.create,_f=af.create,$f=af.strictCreate,eh=lf.create,th=cf.create,Ah=ff.create,rh=hf.create,nh=gf.create,sh=pf.create,ih=bf.create,oh=mf.create,ah=vf.create,lh=yf.create,uh=Bf.create,ch=xf.create,dh=Cf.create,fh=Ef.create,hh=Nf.create,gh=Df.create,ph=Ef.createWithPreprocess,bh=Gf.create,mh={string:e=>Od.create({...e,coerce:!0}),number:e=>Hd.create({...e,coerce:!0}),boolean:e=>qd.create({...e,coerce:!0}),bigint:e=>Kd.create({...e,coerce:!0}),date:e=>Jd.create({...e,coerce:!0})},vh=hd;var yh=Object.freeze({__proto__:null,defaultErrorMap:ad,setErrorMap:function(e){ld=e},getErrorMap:ud,makeIssue:cd,EMPTY_PATH:[],addIssueToContext:dd,ParseStatus:fd,INVALID:hd,DIRTY:gd,OK:pd,isAborted:bd,isDirty:md,isValid:vd,isAsync:yd,get util(){return Ad},get objectUtil(){return rd},ZodParsedType:nd,getParsedType:sd,ZodType:Pd,datetimeRegex:Vd,ZodString:Od,ZodNumber:Hd,ZodBigInt:Kd,ZodBoolean:qd,ZodDate:Jd,ZodSymbol:_d,ZodUndefined:$d,ZodNull:ef,ZodAny:tf,ZodUnknown:Af,ZodNever:rf,ZodVoid:nf,ZodArray:sf,ZodObject:af,ZodUnion:lf,ZodDiscriminatedUnion:cf,ZodIntersection:ff,ZodTuple:hf,ZodRecord:gf,ZodMap:pf,ZodSet:bf,ZodFunction:mf,ZodLazy:vf,ZodLiteral:yf,ZodEnum:Bf,ZodNativeEnum:xf,ZodPromise:Cf,ZodEffects:Ef,ZodTransformer:Ef,ZodOptional:Nf,ZodNullable:Df,ZodDefault:Qf,ZodCatch:Pf,ZodNaN:If,BRAND:Lf,ZodBranded:kf,ZodPipeline:Gf,ZodReadonly:Ff,custom:Sf,Schema:Pd,ZodSchema:Pd,late:Wf,get ZodFirstPartyTypeKind(){return Zf},coerce:mh,any:Yf,array:Jf,bigint:Rf,boolean:jf,date:Tf,discriminatedUnion:th,effect:fh,enum:uh,function:oh,instanceof:function(e){return Sf((t=>t instanceof e),arguments.length>1&&void 0!==arguments[1]?arguments[1]:{message:`Input not instance of ${e.name}`})},intersection:Ah,lazy:ah,literal:lh,map:sh,nan:zf,nativeEnum:ch,never:Kf,null:Of,nullable:gh,number:Mf,object:_f,oboolean:()=>jf().optional(),onumber:()=>Mf().optional(),optional:hh,ostring:()=>Xf().optional(),pipeline:bh,preprocess:ph,promise:dh,record:nh,set:ih,strictObject:$f,string:Xf,symbol:Uf,transformer:fh,tuple:rh,undefined:Vf,union:eh,unknown:Hf,void:qf,NEVER:vh,ZodIssueCode:id,quotelessJson:e=>JSON.stringify(e,null,2).replace(/"([^"]+)":/g,"$1:"),ZodError:od}),wh=A(6382);const Bh=yh.enum(["en","zh","ja","ko","ar","th","pl","it","de","es","fr"]),xh=(yh.object({cancel:yh.string(),field:yh.string(),fieldName:yh.string(),align:yh.string(),width:yh.string(),opacity:yh.string(),height:yh.string(),rotate:yh.string(),edit:yh.string(),required:yh.string(),editable:yh.string(),plsInputName:yh.string(),fieldMustUniq:yh.string(),notUniq:yh.string(),noKeyName:yh.string(),fieldsList:yh.string(),editField:yh.string(),type:yh.string(),errorOccurred:yh.string(),errorBulkUpdateFieldName:yh.string(),commitBulkUpdateFieldName:yh.string(),bulkUpdateFieldName:yh.string(),addPageAfter:yh.string(),removePage:yh.string(),removePageConfirm:yh.string(),"validation.uniqueName":yh.string(),"validation.hexColor":yh.string(),"schemas.color":yh.string(),"schemas.borderWidth":yh.string(),"schemas.borderColor":yh.string(),"schemas.backgroundColor":yh.string(),"schemas.textColor":yh.string(),"schemas.bgColor":yh.string(),"schemas.horizontal":yh.string(),"schemas.vertical":yh.string(),"schemas.left":yh.string(),"schemas.center":yh.string(),"schemas.right":yh.string(),"schemas.top":yh.string(),"schemas.middle":yh.string(),"schemas.bottom":yh.string(),"schemas.padding":yh.string(),"schemas.text.fontName":yh.string(),"schemas.text.size":yh.string(),"schemas.text.spacing":yh.string(),"schemas.text.textAlign":yh.string(),"schemas.text.verticalAlign":yh.string(),"schemas.text.lineHeight":yh.string(),"schemas.text.min":yh.string(),"schemas.text.max":yh.string(),"schemas.text.fit":yh.string(),"schemas.text.dynamicFontSize":yh.string(),"schemas.text.format":yh.string(),"schemas.mvt.typingInstructions":yh.string(),"schemas.mvt.sampleField":yh.string(),"schemas.mvt.variablesSampleData":yh.string(),"schemas.barcodes.barColor":yh.string(),"schemas.barcodes.includetext":yh.string(),"schemas.table.alternateBackgroundColor":yh.string(),"schemas.table.tableStyle":yh.string(),"schemas.table.headStyle":yh.string(),"schemas.table.bodyStyle":yh.string(),"schemas.table.columnStyle":yh.string()}),yh.enum(["viewer","form","designer"]),yh.enum(["rgb","cmyk"]).optional()),Ch=(yh.object({height:yh.number(),width:yh.number()}),yh.object({type:yh.string(),content:yh.string().optional(),position:yh.object({x:yh.number(),y:yh.number()}),width:yh.number(),height:yh.number(),rotate:yh.number().optional(),opacity:yh.number().optional(),readOnly:yh.boolean().optional(),required:yh.boolean().optional()}).passthrough()),Eh=yh.object({id:yh.string(),key:yh.string()}),Nh=(Ch.merge(Eh),yh.any().refine((e=>e instanceof ArrayBuffer))),Dh=yh.any().refine((e=>e instanceof Uint8Array)),Qh=yh.object({width:yh.number(),height:yh.number(),padding:yh.tuple([yh.number(),yh.number(),yh.number(),yh.number()])}),Ph=yh.union([yh.string(),Nh,Dh]),Ih=yh.union([Ph,Qh]),Lh=yh.object({schemas:yh.array(yh.record(Ch)),basePdf:Ih,pdfmeVersion:yh.string().optional()}).passthrough(),kh=yh.array(yh.record(yh.any())).min(1),Gh=yh.record(yh.object({data:yh.union([yh.string(),Nh,Dh]),fallback:yh.boolean().optional(),subset:yh.boolean().optional()})),Fh=yh.object({font:Gh.optional()}).passthrough(),Sh=yh.object({template:Lh,options:Fh.optional(),plugins:yh.record(yh.object({ui:yh.any(),pdf:yh.any(),propPanel:yh.any()})).optional()}),Wh=Fh.extend({colorType:xh,author:yh.string().optional(),creationDate:yh.date().optional(),creator:yh.string().optional(),keywords:yh.array(yh.string()).optional(),language:yh.string().optional(),modificationDate:yh.date().optional(),producer:yh.string().optional(),subject:yh.string().optional(),title:yh.string().optional()}),Zh=Sh.extend({inputs:kh,options:Wh.optional()}).strict(),Xh=Fh.extend({lang:Bh.optional(),labels:yh.record(yh.string(),yh.string()).optional(),theme:yh.record(yh.string(),yh.unknown()).optional(),icons:yh.record(yh.string(),yh.string()).optional(),requiredByDefault:yh.boolean().optional()}),Mh=yh.any().refine((e=>e instanceof HTMLElement)),zh=Sh.extend({domContainer:Mh,options:Xh.optional()}),Rh=(zh.extend({inputs:kh}).strict(),zh.extend({}).strict(),"Roboto"),jh=e=>Array.from(new Set(e)),Th=e=>{const t=Object.entries(e).reduce(((e,t)=>{const[A,r]=t;return!e&&r.fallback?A:e}),"");if(""===t)throw Error("[@pdfme/common] fallback flag is not found in font. true fallback flag must be only one.");return t},Uh=()=>({[Rh]:{data:Jh("data:font/ttf;base64,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G7EDGj5ZsCfcMDEA//8Aev/sBNwHGQImACsAAAEHAKIBpQFXABQAsABFWLALLxuxCx4+WbEnBPQwMf//AGD+VgPyBcICJgBLAAABBwCiATIAAAAUALAARViwAy8bsQMaPlmxLAH0MDH//wB6/fYE3AXEAiYAKwAAAAcBugHa/pf//wBg/lYD8gaTAiYASwAAAQcBzwErAFgAEwCwAEVYsAMvG7EDGj5ZsCrcMDEA//8AqQAABQgHQgImACwAAAEHAJ4A8QFCABQAsABFWLAHLxuxBx4+WbEQBvQwMf//AIwAAAPfB0ECJgBMAAABBwCeAB0BQQAJALARL7AU3DAxAP///7cAAAJ6By4CJgAtAAABBwCl/zwBRgAUALAARViwAy8bsQMePlmxBwT0MDH///+dAAACYAXqAiYAjQAAAQcApf8iAAIAFACwAEVYsAMvG7EDGj5ZsQcB9DAx////zAAAAmwG7wImAC0AAAEHAHD/PgFKABMAsABFWLACLxuxAh4+WbAF3DAxAP///7IAAAJSBasCJgCNAAABBwBw/yQABgATALAARViwAi8bsQIaPlmwBdwwMQD////sAAACQwcaAiYALQAAAQcAof9rAUMAEwCwAEVYsAIvG7ECHj5ZsAfcMDEA////0gAAAikF1wImAI0AAAEHAKH/UQAAABMAsABFWLACLxuxAho+WbAH3DAxAP//ABj+WAF4BbACJgAtAAAABgCk5gn////7/k8BaAXEAiYATQAAAAYApMkA//8AqQAAAYQHBAImAC0AAAEHAKIAHAFCABQAsABFWLACLxuxAh4+WbELBPQwMf//ALf/7AX5BbAAJgAtAAAABwAuAi0AAP//AI3+SwNKBcQAJgBNAAAABwBOAfEAAP//ADX/7ASCBzUCJgAuAAABBwCeAXwBNQAUALAARViwAC8bsQAePlmxFAb0MDH///+0/ksCOQXYAiYAnAAAAQcAnv8z/9gAFACwAEVYsA0vG7ENGj5ZsRIE9DAx//8Aqf5YBQUFsAImAC8AAAAHAboBlP75//8Ajf5FBAwGAAImAE8AAAAHAboBEf7m//8AoQAABBwHMQImADAAAAEHAHUAJgExABQAsABFWLAFLxuxBR4+WbEICPQwMf//AJMAAAI0B5YCJgBQAAABBwB1ABgBlgAUALAARViwAy8bsQMgPlmxBgn0MDH//wCp/gkEHAWwAiYAMAAAAAcBugFs/qr//wBX/gkBVQYAAiYAUAAAAAcBuv/7/qr//wCpAAAEHAWxAiYAMAAAAQcBugHVBMIAEACwAEVYsAovG7EKHj5ZMDH//wCcAAACrQYCACYAUAAAAQcBugFWBRMAUACyHwgBXbKfCAFdtB8ILwgCcbKvCAFxtC8IPwgCcrLfCAFytl8Ibwh/CANytM8I3wgCcbJPCAFxss8IAV20TwhfCAJdsmAIAV2y8AgBcjAx//8AqQAABBwFsAImADAAAAAHAKIBvP3F//8AnAAAAqAGAAAmAFAAAAAHAKIBOP22//8AqQAABQgHNgImADIAAAEHAHUB9QE2ABQAsABFWLAILxuxCB4+WbEMCPQwMf//AIwAAAPfBgACJgBSAAABBwB1AVsAAAAUALAARViwAy8bsQMaPlmxFAn0MDH//wCp/gkFCAWwAiYAMgAAAAcBugHQ/qr//wCM/gkD3wROAiYAUgAAAAcBugEz/qr//wCpAAAFCAc2AiYAMgAAAQcAnwEUATcAFACwAEVYsAYvG7EGHj5ZsQ8G9DAx//8AjAAAA98GAAImAFIAAAEGAJ96AQAUALAARViwAy8bsQMaPlmxFgH0MDH///+8AAAD3wYEAiYAUgAAAQcBuv9gBRUAEACwFy+yTxcBXbKfFwFdMDH//wB2/+wFCQblAiYAMwAAAQcAcADpAUAAEwCwAEVYsA0vG7ENHj5ZsCHcMDEA//8AW//sBDQFrQImAFMAAAEGAHBmCAATALAARViwBC8bsQQaPlmwHdwwMQD//wB2/+wFCQcQAiYAMwAAAQcAoQEWATkAEwCwAEVYsA0vG7ENHj5ZsCLcMDEA//8AW//sBDQF2AImAFMAAAEHAKEAkwABABMAsABFWLAELxuxBBo+WbAf3DAxAP//AHb/7AUJBzcCJgAzAAABBwCmAWsBOAAXALAARViwDS8bsQ0ePlmxJgj0sCLQMDEA//8AW//sBDQF/wImAFMAAAEHAKYA6AAAABcAsABFWLAELxuxBBo+WbEiCfSwHtAwMQD//wCoAAAEyQc2AiYANgAAAQcAdQGAATYAFACwAEVYsAQvG7EEHj5ZsRoI9DAx//8AjAAAAtIGAAImAFYAAAEHAHUAtgAAABQAsABFWLALLxuxCxo+WbEQCfQwMf//AKj+CQTJBbACJgA2AAAABwG6AWP+qv//AFP+CQKXBE4CJgBWAAAABwG6//f+qv//AKgAAATJBzYCJgA2AAABBwCfAJ8BNwAUALAARViwBC8bsQQePlmxHQb0MDH//wBjAAACzQYAAiYAVgAAAQYAn9YBABQAsABFWLALLxuxCxo+WbESAfQwMf//AFD/7ARyBzgCJgA3AAABBwB1AY0BOAAUALAARViwBi8bsQYePlmxKQj0MDH//wBf/+wDuwYAAiYAVwAAAQcAdQFRAAAAFACwAEVYsAkvG7EJGj5ZsSkJ9DAx//8AUP/sBHIHOAImADcAAAEHAJ4AlwE4ABQAsABFWLAGLxuxBh4+WbEpBvQwMf//AF//7AO7BgACJgBXAAABBgCeWwAAFACwAEVYsAkvG7EJGj5ZsSkB9DAx//8AUP5NBHIFxAImADcAAAAHAHkBnwAA//8AX/5FA7sETgImAFcAAAAHAHkBXf/4//8AUP3/BHIFxAImADcAAAAHAboBdf6g//8AX/32A7sETgImAFcAAAAHAboBM/6X//8AUP/sBHIHOAImADcAAAEHAJ8ArAE5ABQAsABFWLAGLxuxBh4+WbErBvQwMf//AF//7AO7BgACJgBXAAABBgCfcAEAFACwAEVYsAkvG7EJGj5ZsSsB9DAx//8AMf3/BJcFsAImADgAAAAHAboBZv6g//8ACf3/AlYFQAImAFgAAAAHAboAxf6g//8AMf5NBJcFsAImADgAAAAHAHkBkAAA//8ACf5NApkFQAImAFgAAAAHAHkA7wAA//8AMQAABJcHNgImADgAAAEHAJ8AoQE3ABQAsABFWLAGLxuxBh4+WbENBvQwMf//AAn/7ALsBnkAJgBYAAABBwG6AZUFigASALIPGgFdsp8aAV2yTxoBXTAx//8AjP/sBKoHIgImADkAAAEHAKUAwAE6ABQAsABFWLASLxuxEh4+WbEWBPQwMf//AIj/7APcBewCJgBZAAABBgClXAQAFACwAEVYsA0vG7ENGj5ZsRQB9DAx//8AjP/sBKoG4wImADkAAAEHAHAAwgE+ABMAsABFWLASLxuxEh4+WbAT3DAxAP//AIj/7APcBa0CJgBZAAABBgBwXggAEwCwAEVYsAcvG7EHGj5ZsBLcMDEA//8AjP/sBKoHDgImADkAAAEHAKEA7wE3ABMAsABFWLAKLxuxCh4+WbAW3DAxAP//AIj/7APcBdgCJgBZAAABBwChAIsAAQATALAARViwBy8bsQcaPlmwFNwwMQD//wCM/+wEqgeRAiYAOQAAAQcAowFLAUEAFwCwAEVYsAovG7EKHj5ZsRYG9LAg0DAxAP//AIj/7APcBlsCJgBZAAABBwCjAOcACwAXALAARViwBy8bsQcaPlmxFAT0sB7QMDEA//8AjP/sBKoHNQImADkAAAEHAKYBRAE2ABcAsABFWLASLxuxEh4+WbEVCPSwGdAwMQD//wCI/+wEDAX/AiYAWQAAAQcApgDgAAAAFwCwAEVYsA0vG7ENGj5ZsRMJ9LAX0DAxAAABAIz+ewSqBbAAIABVALAARViwGC8bsRgePlmwAEVYsA0vG7ENFD5ZsABFWLATLxuxExI+WbAYELAg0LIEEyAREjmwDRCxCAOwCitYIdgb9FmwExCxHAGwCitYIdgb9FkwMQERBgYHBhUUMzI3FwYjIiY1NDcHIgAnETMRFBYzMjY1EQSqAYqDm04wNA1GWllnTxbv/uQCvq6ho60FsPwhlOI7cmBIGnksaFZhUwEBAuID4Pwmnq+ungPbAAEAiP5PA+YEOgAfAG8AsABFWLAXLxuxFxo+WbAARViwHS8bsR0aPlmwAEVYsB8vG7EfEj5ZsABFWLASLxuxEhI+WbAARViwCi8bsQoUPlmxBQOwCitYIdgb9FmwHxCwD9CwDy+yEBIdERI5sBIQsRoBsAorWCHYG/RZMDEhBwYVFDMyNxcGIyImNTQ3JwYjIiYnETMRFDMyNxEzEQPSOnFOMDQNRlpZZ6YEbNGttQG5yNRGuS1bVkgaeSxoVo9qZX/JxQLA/UX2ngMT+8b//wA9AAAG7Qc2AiYAOwAAAQcAngHFATYAFACwAEVYsAMvG7EDHj5ZsRcG9DAx//8AKwAABdMGAAImAFsAAAEHAJ4BJAAAABQAsABFWLAMLxuxDBo+WbEPAfQwMf//AA8AAAS7BzYCJgA9AAABBwCeAJIBNgAUALAARViwAS8bsQEePlmxCwb0MDH//wAW/ksDsAYAAiYAXQAAAQYAniUAABQAsABFWLAPLxuxDxo+WbEUAfQwMf//AA8AAAS7BvsCJgA9AAABBwBqAMIBNgAXALAARViwCC8bsQgePlmxEAT0sBnQMDEA//8AVgAABHoHNgImAD4AAAEHAHUBhwE2ABQAsABFWLAHLxuxBx4+WbEMCPQwMf//AFgAAAOzBgACJgBeAAABBwB1ASEAAAAUALAARViwBy8bsQcaPlmxDAn0MDH//wBWAAAEegb4AiYAPgAAAQcAogFuATYAFACwAEVYsAcvG7EHHj5ZsREE9DAx//8AWAAAA7MFwgImAF4AAAEHAKIBCAAAABQAsABFWLAHLxuxBxo+WbERAfQwMf//AFYAAAR6BzYCJgA+AAABBwCfAKYBNwAUALAARViwBy8bsQcePlmxDwb0MDH//wBYAAADswYAAiYAXgAAAQYAn0ABABQAsABFWLAHLxuxBxo+WbEPAfQwMf////IAAAdXB0ICJgCBAAABBwB1AskBQgAUALAARViwBi8bsQYePlmxFQj0MDH//wBO/+wGfAYBAiYAhgAAAQcAdQJ6AAEAFACwAEVYsB0vG7EdGj5ZsUAJ9DAx//8Adv+jBR0HgAImAIMAAAEHAHUB6QGAABQAsABFWLAQLxuxEB4+WbEsCPQwMf//AFv/egQ0BgACJgCJAAABBwB1ATcAAAAUALAARViwBC8bsQQaPlmxKQn0MDH//wAcAAAFHQY/AiYAJQAAAAYArgQA////KQAABEYGPwImACkAAAAHAK7+cgAA////NwAABQgGQQImACwAAAAHAK7+gAAC////PQAAAXcGQAImAC0AAAAHAK7+hgAB////5v/sBR0GPwAmADMUAAAHAK7/LwAA////FAAABR8GPwAmAD1kAAAHAK7+XQAA////6QAABN8GPwAmALoUAAAHAK7/MgAA////m//0Aq0GdAImAMMAAAEHAK//Kv/sAB0AsABFWLAMLxuxDBo+WbEYAfSwD9CwGBCwIdAwMQD//wAcAAAFHQWwAgYAJQAA//8AqQAABIgFsAIGACYAAP//AKkAAARGBbACBgApAAD//wBWAAAEegWwAgYAPgAA//8AqQAABQgFsAIGACwAAP//ALcAAAF3BbACBgAtAAD//wCpAAAFBQWwAgYALwAA//8AqQAABlIFsAIGADEAAP//AKkAAAUIBbACBgAyAAD//wB2/+wFCQXEAgYAMwAA//8AqQAABMAFsAIGADQAAP//ADEAAASXBbACBgA4AAD//wAPAAAEuwWwAgYAPQAA//8AOQAABM4FsAIGADwAAP///9UAAAJeBwcCJgAt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BH4AZAHwAIYBsQApBBEASARkAJgELgCGA8cASwcvAGoFOAAcBPsAqQU1AHcFPwCpBIwAqQRsAKkFcwB6BbQAqQItALcEagA1BQQAqQROAKkG/ACpBbQAqQWAAHYFDACpBYAAbQTtAKgEvwBQBMYAMQUwAIwFFwAcBxkAPQUEADkEzgAPBMoAVgIfAJIDSAAoAh8ACQNYAEADnAAEAnkAOQRaAG0EfQCMBDAAXASDAF8EPQBdAscAPAR9AGAEaACMAfEAjQHp/78EDgCNAfEAnAcDAIsEagCMBJAAWwR9AIwEjABfArUAjAQgAF8CnQAJBGkAiAPgACEGAwArA/cAKQPJABYD9wBYArUAQAHzAK8CtQATBXEAgwHzAIsEYABpBKYAWwW0AGkEMwAPAesAkwToAFoDWABlBkkAWwOTAJMDwQBmBG4AfwZKAFoDqgCOAv0AggRGAGEC7wBCAu8APgKCAHsEiACaA+kAQwIWAJMB+wB0Au8AegOjAHoDwABmBdwAVQY1AFAGOQBvA8kARAd6//IERABZBYAAdgS6AKYEwgCLBsEATgSwAH4EkQBHBIgAWwScAJUExwBfBZoAHQH6AJsEcwCaBE8AIgIpACIFiwCiBIgAkQehAGgHRABhAfwAoAWHAF0Cuf/kBX4AZQSSAFsFkACMBPMAiAID/7QENwBiA8QAqQONAI0DqwCOA2oAgQHxAI0CrQB5AioAMgPGAHsC/ABeAloAfgAA/KcAAP1vAAD8iwAA/V4AAPwnAAD9OAINALcECwBxAhcAkwRzALEFpAAfBXEAZwU+ADIEkQB4BbUAsgSRAEUFuwBNBYkAWgVSAHEEhQBkBL0AoAQCAC4EiABgBFAAYwQlAG0EiACRBI4AegKXAMMEbgAlA+wAZQTEACkEiACRBE0AZQSIAGAELABRBF0AjwWjAFcFmgBfBpcAegShAHkEQv/aBkgASgX/ACoFZAB7CJEAMQikALEGggA+BbQAsAULAKIGBAAyB0MAGwS/AFAFtACxBakALwUHAE0GLABTBdkArwV6AJYHhwCwB8AAsAYSABAG6wCyBQUAowVkAJMHJwC3BRgAWQRsAGEEkgCdA1sAmgTUAC4GIAAVBBAAWASeAJwEUgCcBKAALAXvAJ0EnQCcBJ4AnAPYACgFzQBkBL0AnARZAGcGeACcBp4AkQT3AB4GNgCdBFgAnQRNAGQGhwCdBGQALwRo/+gETQBnBskAJwbkAJwEif/9BJ4AnAcIAJwGKwCBBFb/3AcrALcF+ACZBNIAKARGAA8HCwDJBgsAvAbRAJMF4QCWCQQAtgfRAJsEIwBQA9sATAVxAGcEiwBbBQoAFgQDAC4FcQBnBIgAWwcBAJwGJAB+BwgAnAYrAIEFMgB1BEcAZAT9AHQAAPxnAAD8cQAA/WYAAP2kAAD6GwAA+iwGCQCxBO0AnARW/9wFGwCoBIkAjARjAKIDkACRBNsAsQQFAJEHogAbBmEAFQWaALIEuACcBQkAowR+AJoGjABEBYMAPgX/AKkE2QCcB88AqAW0AJEIMQCwBvQAkQXuAHEE0wBtBRgAOQQqACkHLAA0BVwAHwW8AJYElgBnBW8AlgRqAIMFbwCJBi8APwS9/94FCQCjBFoAmgX+AC8E7wAsBbIAsQSIAJEGEgCpBOwAnAdPAKkGPgCdBYcAXQSoAGgEqABpBLcAOgOrADsFLgA5BEAAKQT2AFcGlABZBuQAZAZWADYFKwAxBEkAUgQHAHkHwQBEBnUAPwf7AKkGoQCQBPYAdgQdAGUFrQAjBSAARgVkAJYGAgAvBPIALAMgAG8EFAAACCkAAAQUAAAIKQAAArkAAAIKAAABXAAABH8AAAIwAAABogAAAQAAAADRAAAAAAAAAjQAJQI0ACUFQACiBj8AkAOlAA0BmQBgAZkAMAGXACQBmQBPAtQAaALbADwCwQAkBGkARgSPAFcCsgCKA8QAlAVaAJQBfgBSB6oARAJmAGwCZgBZA6MAOwLvADYDYAB6BKYAWwZVAB8GkACnCHYAqAXrAB8GKwCMBH4AXwXaAB8EIgAqBHQAIAVIAF0FTwAfBecAegPOAGgIOgCiBQEAZwUXAJgGJgBUBtcAZAbPAGMGagBZBI8AagWOAKkErwBFBJIAqATFAD8IOgBiAgz/sASCAGUEZACYBBEAPgQvAIUECAArAkwAtQKPAG4CAwBcBG4AHwSLADwG1AA8BtQAPAAAAAAIMwBbCDUAXALvAEIC7wB6Au8AUALvAD4C7wA2Au8AWwLvAFYC7wA6Au8ATwLvAEkDlgCPArUAngUkALIB/QCfA6QAgQAA/KQD7wBuA/P/XgQOAGkD9ABpA58AgQOeAIEC7wBQAu8ANgLvAFsC7wBWAu8AOgLvAE8C7wBJA6QAgwGRAGcB/P+2BH8AfgR/AHACBv+0AgT/tAH7AJsB+//6AfsAmwQgADsDeQBXAfsAAAI1ACUFXQAHBV0ABwSG/+IExgAxAp3/9AU4ABwFOAAcBTgAHAU4ABwFOAAcBTgAHAU4ABwFNQB3BIwAqQSMAKkEjACpBIwAqQIt/+ACLQCwAi3/6QIt/9UFtACpBYAAdgWAAHYFgAB2BYAAdgWAAHYFMACMBTAAjAUwAIwFMACMBM4ADwRaAG0EWgBtBFoAbQRaAG0EWgBtBFoAbQRaAG0EMABcBD0AXQQ9AF0EPQBdBD0AXQH6/8YB+gCWAfr/zwH6/7sEagCMBJAAWwSQAFsEkABbBJAAWwSQAFsEaQCIBGkAiARpAIgEaQCIA8kAFgPJABYFOAAcBFoAbQU4ABwEWgBtBTgAHARaAG0FNQB3BDAAXAU1AHcEMABcBTUAdwQwAFwFNQB3BDAAXAU/AKkFGQBfBIwAqQQ9AF0EjACpBD0AXQSMAKkEPQBdBIwAqQQ9AF0EjACpBD0AXQVzAHoEfQBgBXMAegR9AGAFcwB6BH0AYAVzAHoEfQBgBbQAqQRoAIwCLf+3Afr/nQIt/8wB+v+yAi3/7AH6/9ICLQAYAfH/+wItAKkGlwC3A9oAjQRqADUCA/+0BQQAqQQOAI0ETgChAfEAkwROAKkB8QBXBE4AqQKHAJwETgCpAs0AnAW0AKkEagCMBbQAqQRqAIwFtACpBGoAjARq/7wFgAB2BJAAWwWAAHYEkABbBYAAdgSQAFsE7QCoArUAjATtAKgCtQBTBO0AqAK1AGMEvwBQBCAAXwS/AFAEIABfBL8AUAQgAF8EvwBQBCAAXwS/AFAEIABfBMYAMQKdAAkExgAxAp0ACQTGADECxQAJBTAAjARpAIgFMACMBGkAiAUwAIwEaQCIBTAAjARpAIgFMACMBGkAiAUwAIwEaQCIBxkAPQYDACsEzgAPA8kAFgTOAA8EygBWA/cAWATKAFYD9wBYBMoAVgP3AFgHev/yBsEATgWAAHYEiABbBTgAHASM/ykFtP83Ai3/PQWU/+YFMv8UBWb/6QKX/5sFOAAcBPsAqQSMAKkEygBWBbQAqQItALcFBACpBvwAqQW0AKkFgAB2BQwAqQTGADEEzgAPBQQAOQIt/9UEzgAPBIUAZARQAGMEiACRApcAwwRdAI8EcwCaBJAAWwSIAJoD4AAhA/cAKQKX/+UEXQCPBJAAWwRdAI8GlwB6BIwAqQRzALEEvwBQAi0AtwIt/9UEagA1BSQAsgUEAKkFBwBNBTgAHAT7AKkEcwCxBIwAqQW0ALEG/ACpBbQAqQWAAHYFtQCyBQwAqQU1AHcExgAxBQQAOQRaAG0EPQBdBJ4AnASQAFsEfQCMBDAAXAPJABYD9wApBD0AXQNbAJoEIABfAfEAjQH6/7sB6f+/BFIAnAPJABYHGQA9BgMAKwcZAD0GAwArBxkAPQYDACsEzgAPA8kAFgFlAGcCjwCIBB4AoAID/7QBmQAwBvwAqQcDAIsFOAAcBFoAbQSMAKkFtACxBD0AXQSeAJwFiQBaBZoAXwUKABYEA//7CFkAWwlJAHYEvwBQBBAAWAU1AHcEMABcBM4ADwQCAC4CLQC3B0MAGwYgABUCLQC3BTgAHARaAG0FOAAcBFoAbQd6//IGwQBOBIwAqQQ9AF0FhwBdBDcAYgQ3AGIHQwAbBiAAFQS/AFAEEABYBbQAsQSeAJwFtACxBJ4AnAWAAHYEkABbBXEAZwSLAFsFcQBnBIsAWwVkAJMETQBkBQcATQPJABYFBwBNA8kAFgUHAE0DyQAWBXoAlgRZAGcG6wCyBjYAnQSDAF8FOAAcBFoAbQU4ABwEWgBtBTgAHARaAG0FOAAcBFr/ygU4ABwEWgBtBTgAHARaAG0FOAAcBFoAbQU4ABwEWgBtBTgAHARaAG0FOAAcBFoAbQU4ABwEWgBtBTgAHARaAG0EjACpBD0AXQSMAKkEPQBdBIwAqQQ9AF0EjACpBD0AXQSM//AEPf+6BIwAqQQ9AF0EjACpBD0AXQSMAKkEPQBdAi0AtwH6AJsCLQCjAfEAhQWAAHYEkABbBYAAdgSQAFsFgAB2BJAAWwWAAEcEkP/EBYAAdgSQAFsFgAB2BJAAWwWAAHYEkABbBX4AZQSSAFsFfgBlBJIAWwV+AGUEkgBbBX4AZQSSAFsFfgBlBJIAWwUwAIwEaQCIBTAAjARpAIgFkACMBPMAiAWQAIwE8wCIBZAAjATzAIgFkACMBPMAiAWQAIwE8wCIBM4ADwPJABYEzgAPA8kAFgTOAA8DyQAWBKEAXwTGADED2AAoBXoAlgRZAGcEcwCxA1sAmgYvAD8Evf/eBGgAjAUF/9QFBf/UBHMAAwNb//wFOP/3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AYcBiQCJAe0B7gCMAfAB8ACOAfICBwCPAgwCEwClAhUCGACtAh0CIgCxAicCLwC3AjECMQDAAjMCMwDBAjUCNQDCAjcCNwDDAjkCQgDEAksCTQDOAk8CTwDRAlECUQDSAlMCUwDTAlUCVQDUAloCWgDVAlwCXADWAl4CXgDXAmACYADYAmICYgDZAmQCcADaAnICcgDnAnQCdADoAnYCdgDpAoECgQDqAoMCgwDrAoUChQDsApMCkwDtApUCmADuApoCmgDyApwCnADzAqICpwD0AqoCuQD6ArwCvAEKAsACwAELAsICwgEMAsYCxgENAskCygEOAswCzQEQAs8C1QESAtcC2QEZAtsC4AEcAuIC4wEiAuUC6AEkAu4C7wEoAvEC8QEqAvMC8wErAvUC+AEsAvsDAAEwAwIDAgE2AwYDBwE3AwwDDAE5Aw4DFwE6AxoDGwFEAx0DIAFGAycDKAFKAywDLAFMAy4DNAFNAzoDYgFUA2QDZAF9A2YDcwF+A3sDewGMA4wDkQGNA5MDkwGTA5cDmAGUA5sDmwGWA50DngGXA6ADoAGZA6IDogGaA7MDtwGbA7kDuQGgA7sDvAGhA74DvgGjA8IDxAGkA8YDxgGnA8gDygGoA8wDzAGrA84DzgGsA9AD1gGtA9gD2AG0A9sD2wG1A94D4gG2A+QD5AG7A+YD5gG8AAsAOP/YANL/2ADW/9gBOf/YAUX/2AKB/9gCg//YAoX/2ALd/9gDk//YA9v/2AAYADoAFAA7ABIAPQAWARkAFAIMABYCkwASApUAFgKXABYCpwAWArYAFgK5ABYC7wASAvEAEgLzABIC9QAWAwYAFAMOABYDjAAWA44AFgOQABYDogAWA94AFAPgABQD4gASAAEAE/8gANcAEP8WABL/FgAl/1YALv74ADgAFABF/94AR//rAEj/6wBJ/+sAS//rAFP/6wBV/+sAVv/mAFn/6gBa/+gAXf/oAJT/6wCZ/+sAm//qALL/VgC0/1YAu//rAL3/6ADI/+sAyf/rAMv/6gDSABQA1gAUAPf/6wED/+sBDf9WARj/6wEa/+gBHv/rASL/6wE5ABQBQv/rAUUAFAFg/+sBYf/rAWv/6wGG/xYBiv8WAY7/FgGP/xYB8v9WAfP/VgH0/1YB9f9WAfb/VgH3/1YB+P9WAg3/3gIO/94CD//eAhD/3gIR/94CEv/eAhP/3gIU/+sCFf/rAhb/6wIX/+sCGP/rAh7/6wIf/+sCIP/rAiH/6wIi/+sCI//qAiT/6gIl/+oCJv/qAif/6AIo/+gCKf9WAir/3gIr/1YCLP/eAi3/VgIu/94CMP/rAjL/6wI0/+sCNv/rAjj/6wI6/+sCPP/rAj7/6wJA/+sCQv/rAkT/6wJG/+sCSP/rAkr/6wJY/vgCbP/rAm7/6wJw/+sCgQAUAoMAFAKFABQCiP/qAor/6gKM/+oCjv/qApD/6gKS/+oClv/oAqL/VgKq/1YCuv/rAr7/6gLA/+sCwv/oAsX/6gLG/+sCx//qAs7++ALS/1YC3QAUAt//3gLg/+sC4v/rAuT/6wLl/+gC5//rAu7/6AL2/+gC/v9WAv//3gMC/+sDB//oAwj/6wMN/+sDD//oAxT/VgMV/94DFv9WAxf/3gMb/+sDHf/rAx7/6wMo/+sDKv/rAyz/6wMw/+gDMv/oAzT/6AM5/+sDOv9WAzv/3gM8/1YDPf/eAz7/VgM//94DQP9WA0H/3gNC/1YDQ//eA0T/VgNF/94DRv9WA0f/3gNI/1YDSf/eA0r/VgNL/94DTP9WA03/3gNO/1YDT//eA1D/VgNR/94DU//rA1X/6wNX/+sDWf/rA1v/6wNd/+sDX//rA2H/6wNn/+sDaf/rA2v/6wNt/+sDb//rA3H/6wNz/+sDdf/rA3f/6wN5/+sDe//rA33/6wN//+oDgf/qA4P/6gOF/+oDh//qA4n/6gOL/+oDjf/oA4//6AOR/+gDkwAUA7X/VgO2/94DuP/rA7z/6wPA/+oDxf/rA8f/6wPbABQD3//oA+H/6AAjADj/1QA6/+QAO//sAD3/3QDS/9UA1v/VARn/5AE5/9UBRf/VAgz/3QKB/9UCg//VAoX/1QKT/+wClf/dApf/3QKn/90Ctv/dArn/3QLd/9UC7//sAvH/7ALz/+wC9f/dAwb/5AMO/90DjP/dA47/3QOQ/90Dk//VA6L/3QPb/9UD3v/kA+D/5APi/+wAHQA4/7AAOv/tAD3/0ADS/7AA1v+wARn/7QE5/7ABRf+wAgz/0AKB/7ACg/+wAoX/sAKV/9ACl//QAqf/0AK2/9ACuf/QAt3/sAL1/9ADBv/tAw7/0AOM/9ADjv/QA5D/0AOT/7ADov/QA9v/sAPe/+0D4P/tABEALv/uADn/7gII/+4CCf/uAgr/7gIL/+4CWP/uAof/7gKJ/+4Ci//uAo3/7gKP/+4Ckf/uAs7/7gN+/+4DgP/uA93/7gBNAAYAEAALABAADQAUAEEAEgBH/+gASP/oAEn/6ABL/+gAVf/oAGEAEwCU/+gAmf/oALv/6ADI/+gAyf/oAPf/6AED/+gBHv/oASL/6AFC/+gBYP/oAWH/6AFr/+gBhAAQAYUAEAGHABABiAAQAYkAEAIU/+gCFf/oAhb/6AIX/+gCGP/oAjD/6AIy/+gCNP/oAjb/6AI4/+gCOv/oAjz/6AI+/+gCQP/oAkL/6AJE/+gCRv/oAkj/6AJK/+gCuv/oAuD/6ALk/+gC5//oAvcAEAL4ABAC+wAQAwL/6AMI/+gDDf/oAxv/6AMd/+gDHv/oAyr/6AM5/+gDU//oA1X/6ANX/+gDWf/oA1v/6ANd/+gDX//oA2H/6AN1/+gDd//oA3n/6AN9/+gDuP/oA8X/6APH/+gAQABH/+wASP/sAEn/7ABL/+wAVf/sAJT/7ACZ/+wAu//sAMj/7ADJ/+wA9//sAQP/7AEe/+wBIv/sAUL/7AFg/+wBYf/sAWv/7AIU/+wCFf/sAhb/7AIX/+wCGP/sAjD/7AIy/+wCNP/sAjb/7AI4/+wCOv/sAjz/7AI+/+wCQP/sAkL/7AJE/+wCRv/sAkj/7AJK/+wCuv/sAuD/7ALk/+wC5//sAwL/7AMI/+wDDf/sAxv/7AMd/+wDHv/sAyr/7AM5/+wDU//sA1X/7ANX/+wDWf/sA1v/7ANd/+wDX//sA2H/7AN1/+wDd//sA3n/7AN9/+wDuP/sA8X/7APH/+wAGABT/+wBGP/sAh7/7AIf/+wCIP/sAiH/7AIi/+wCbP/sAm7/7AJw/+wCwP/sAsb/7ALi/+wDKP/sAyz/7ANn/+wDaf/sA2v/7ANt/+wDb//sA3H/7ANz/+wDe//sA7z/7AAGABD/hAAS/4QBhv+EAYr/hAGO/4QBj/+EABEALv/sADn/7AII/+wCCf/sAgr/7AIL/+wCWP/sAof/7AKJ/+wCi//sAo3/7AKP/+wCkf/sAs7/7AN+/+wDgP/sA93/7AAgAAb/8gAL//IAWv/zAF3/8wC9//MA9v/1ARr/8wGE//IBhf/yAYf/8gGI//IBif/yAif/8wIo//MClv/zAsL/8wLl//MC7v/zAvb/8wL3//IC+P/yAvv/8gMH//MDD//zAzD/8wMy//MDNP/zA43/8wOP//MDkf/zA9//8wPh//MAOwAn//MAK//zADP/8wA1//MAg//zAJP/8wCY//MAs//zAMQADQDT//MBCP/zARf/8wEb//MBHf/zAR//8wEh//MBQf/zAWr/8wH5//MCA//zAgT/8wIF//MCBv/zAgf/8wIv//MCMf/zAjP/8wI1//MCQ//zAkX/8wJH//MCSf/zAmv/8wJt//MCb//zAqD/8wKm//MCs//zAtn/8wLc//MDCf/zAwz/8wMn//MDKf/zAyv/8wNm//MDaP/zA2r/8wNs//MDbv/zA3D/8wNy//MDdP/zA3b/8wN4//MDev/zA3z/8wO7//MD1P/zADwAJ//mACv/5gAz/+YANf/mAIP/5gCT/+YAmP/mALP/5gC4/8IAxAAQANP/5gEI/+YBF//mARv/5gEd/+YBH//mASH/5gFB/+YBav/mAfn/5gID/+YCBP/mAgX/5gIG/+YCB//mAi//5gIx/+YCM//mAjX/5gJD/+YCRf/mAkf/5gJJ/+YCa//mAm3/5gJv/+YCoP/mAqb/5gKz/+YC2f/mAtz/5gMJ/+YDDP/mAyf/5gMp/+YDK//mA2b/5gNo/+YDav/mA2z/5gNu/+YDcP/mA3L/5gN0/+YDdv/mA3j/5gN6/+YDfP/mA7v/5gPU/+YAOAAl/+QAPP/SAD3/0wCy/+QAtP/kAMT/4gDa/9IBDf/kATP/0gFD/9IBXf/SAfL/5AHz/+QB9P/kAfX/5AH2/+QB9//kAfj/5AIM/9MCKf/kAiv/5AIt/+QClf/TApf/0wKi/+QCp//TAqr/5AK2/9MCt//SArn/0wLS/+QC3v/SAvX/0wL+/+QDDv/TAxH/0gMU/+QDFv/kAx//0gM6/+QDPP/kAz7/5ANA/+QDQv/kA0T/5ANG/+QDSP/kA0r/5ANM/+QDTv/kA1D/5AOM/9MDjv/TA5D/0wOi/9MDtf/kACgAEP8eABL/HgAl/80Asv/NALT/zQDH//IBDf/NAYb/HgGK/x4Bjv8eAY//HgHy/80B8//NAfT/zQH1/80B9v/NAff/zQH4/80CKf/NAiv/zQIt/80Cov/NAqr/zQLS/80C/v/NAxT/zQMW/80DOv/NAzz/zQM+/80DQP/NA0L/zQNE/80DRv/NA0j/zQNK/80DTP/NA07/zQNQ/80Dtf/NAAEAxAAOAAIAyv/tAPb/wAC6AEf/3ABI/9wASf/cAEv/3ABR//MAUv/zAFP/1gBU//MAVf/cAFn/3QBa/+EAXf/hAJT/3ACZ/9wAm//dALv/3AC9/+EAvv/uAL//5gDB//MAwv/rAMP/6QDF//AAxv/nAMj/3ADJ/9wAyv/jAMv/3QDM/84Azf/UAM7/2wDs//MA8P/zAPH/8wDz//MA9P/zAPX/8wD3/9wA+P/zAPr/8wD7//MA/v/zAQD/8wED/9wBBf/zARj/1gEa/+EBHv/cASL/3AEr//MBNv/zATz/8wE+//MBQv/cAVP/8wFV//MBV//zAVz/8wFg/9wBYf/cAWv/3AIU/9wCFf/cAhb/3AIX/9wCGP/cAh3/8wIe/9YCH//WAiD/1gIh/9YCIv/WAiP/3QIk/90CJf/dAib/3QIn/+ECKP/hAjD/3AIy/9wCNP/cAjb/3AI4/9wCOv/cAjz/3AI+/9wCQP/cAkL/3AJE/9wCRv/cAkj/3AJK/9wCZf/zAmf/8wJp//MCav/zAmz/1gJu/9YCcP/WAoj/3QKK/90CjP/dAo7/3QKQ/90Ckv/dApb/4QK6/9wCvP/zAr7/3QLA/9YCwv/hAsX/3QLG/9YCx//dAuD/3ALh//MC4v/WAuP/8wLk/9wC5f/hAuf/3ALo//MC7f/zAu7/4QL2/+EC/f/zAwL/3AMD//MDB//hAwj/3AMN/9wDD//hAxv/3AMd/9wDHv/cAyT/8wMm//MDKP/WAyr/3AMs/9YDMP/hAzL/4QM0/+EDOP/zAzn/3ANT/9wDVf/cA1f/3ANZ/9wDW//cA13/3ANf/9wDYf/cA2f/1gNp/9YDa//WA23/1gNv/9YDcf/WA3P/1gN1/9wDd//cA3n/3AN7/9YDff/cA3//3QOB/90Dg//dA4X/3QOH/90Dif/dA4v/3QON/+EDj//hA5H/4QOY//MDtP/zA7j/3AO8/9YDwP/dA8X/3APH/9wD0f/zA9P/8wPf/+ED4f/hAHwABv/aAAv/2gBH//AASP/wAEn/8ABL//AAVf/wAFn/7wBa/9wAXf/cAJT/8ACZ//AAm//vALv/8AC9/9wAwv/sAMQADwDG/+oAyP/wAMn/8ADK/8QAy//vAMz/5wD3//ABA//wARr/3AEe//ABIv/wAUL/8AFg//ABYf/wAWv/8AGE/9oBhf/aAYf/2gGI/9oBif/aAhT/8AIV//ACFv/wAhf/8AIY//ACI//vAiT/7wIl/+8CJv/vAif/3AIo/9wCMP/wAjL/8AI0//ACNv/wAjj/8AI6//ACPP/wAj7/8AJA//ACQv/wAkT/8AJG//ACSP/wAkr/8AKI/+8Civ/vAoz/7wKO/+8CkP/vApL/7wKW/9wCuv/wAr7/7wLC/9wCxf/vAsf/7wLg//AC5P/wAuX/3ALn//AC7v/cAvb/3AL3/9oC+P/aAvv/2gMC//ADB//cAwj/8AMN//ADD//cAxv/8AMd//ADHv/wAyr/8AMw/9wDMv/cAzT/3AM5//ADU//wA1X/8ANX//ADWf/wA1v/8ANd//ADX//wA2H/8AN1//ADd//wA3n/8AN9//ADf//vA4H/7wOD/+8Dhf/vA4f/7wOJ/+8Di//vA43/3AOP/9wDkf/cA7j/8APA/+8Dxf/wA8f/8APf/9wD4f/cADwABv+gAAv/oABK/+kAWf/xAFr/xQBd/8UAm//xAL3/xQDC/+4AxAAQAMb/7ADK/yAAy//xARr/xQGE/6ABhf+gAYf/oAGI/6ABif+gAiP/8QIk//ECJf/xAib/8QIn/8UCKP/FAoj/8QKK//ECjP/xAo7/8QKQ//ECkv/xApb/xQK+//ECwv/FAsX/8QLH//EC5f/FAu7/xQL2/8UC9/+gAvj/oAL7/6ADB//FAw//xQMw/8UDMv/FAzT/xQN///EDgf/xA4P/8QOF//EDh//xA4n/8QOL//EDjf/FA4//xQOR/8UDwP/xA9//xQPh/8UAQQBH/+cASP/nAEn/5wBL/+cAVf/nAJT/5wCZ/+cAu//nAMQADwDI/+cAyf/nAPf/5wED/+cBHv/nASL/5wFC/+cBYP/nAWH/5wFr/+cCFP/nAhX/5wIW/+cCF//nAhj/5wIw/+cCMv/nAjT/5wI2/+cCOP/nAjr/5wI8/+cCPv/nAkD/5wJC/+cCRP/nAkb/5wJI/+cCSv/nArr/5wLg/+cC5P/nAuf/5wMC/+cDCP/nAw3/5wMb/+cDHf/nAx7/5wMq/+cDOf/nA1P/5wNV/+cDV//nA1n/5wNb/+cDXf/nA1//5wNh/+cDdf/nA3f/5wN5/+cDff/nA7j/5wPF/+cDx//nAAUAyv/qAO3/7gD2/6sBOv/sAW3/7AABAPb/1QABAMoACwB7AAYADAALAAwAR//oAEj/6ABJ/+gASgAMAEv/6ABT/+oAVf/oAFoACwBdAAsAlP/oAJn/6AC7/+gAvQALAL7/7QDGAAsAyP/oAMn/6ADKAAwA9//oAQP/6AEY/+oBGgALAR7/6AEi/+gBQv/oAWD/6AFh/+gBa//oAYQADAGFAAwBhwAMAYgADAGJAAwCFP/oAhX/6AIW/+gCF//oAhj/6AIe/+oCH//qAiD/6gIh/+oCIv/qAicACwIoAAsCMP/oAjL/6AI0/+gCNv/oAjj/6AI6/+gCPP/oAj7/6AJA/+gCQv/oAkT/6AJG/+gCSP/oAkr/6AJs/+oCbv/qAnD/6gKWAAsCuv/oAsD/6gLCAAsCxv/qAuD/6ALi/+oC5P/oAuUACwLn/+gC7gALAvYACwL3AAwC+AAMAvsADAMC/+gDBwALAwj/6AMN/+gDDwALAxv/6AMd/+gDHv/oAyj/6gMq/+gDLP/qAzAACwMyAAsDNAALAzn/6ANT/+gDVf/oA1f/6ANZ/+gDW//oA13/6ANf/+gDYf/oA2f/6gNp/+oDa//qA23/6gNv/+oDcf/qA3P/6gN1/+gDd//oA3n/6AN7/+oDff/oA40ACwOPAAsDkQALA7j/6AO8/+oDxf/oA8f/6APfAAsD4QALAAEA9v/YAA4AXP/tAF7/7QDu/+0A9v+qATT/7QFE/+0BXv/tApn/7QKb/+0Cnf/tAub/7QMS/+0DIP/tA+X/7QANAFz/8gBe//IA7v/yATT/8gFE//IBXv/yApn/8gKb//ICnf/yAub/8gMS//IDIP/yA+X/8gAiAFr/9ABc//IAXf/0AF7/8wC9//QA7v/yARr/9AE0//IBRP/yAV7/8gIn//QCKP/0Apb/9AKZ//MCm//zAp3/8wLC//QC5f/0Aub/8gLu//QC9v/0Awf/9AMP//QDEv/yAyD/8gMw//QDMv/0AzT/9AON//QDj//0A5H/9APf//QD4f/0A+X/8wCMAAb/ygAL/8oAOP/SADr/1AA8//QAPf/TAFH/0QBS/9EAVP/RAFr/5gBc/+8AXf/mAL3/5gDB/9EA0v/SANb/0gDa//QA3v/tAOH/4QDm/9QA7P/RAO7/7wDw/9EA8f/RAPP/0QD0/9EA9f/RAPb/yQD4/9EA+v/RAPv/0QD+/9EBAP/RAQX/0QEJ/+UBGf/UARr/5gEg/+MBK//RATP/9AE0/+8BNv/RATn/0gE6/8QBPP/RAT7/0QFD//QBRP/vAUX/0gFH/+EBSf/hAVP/0QFV/9EBV//RAVz/0QFd//QBXv/vAWL/1AFj//UBZP/nAWz/0gFt/8kBhP/KAYX/ygGH/8oBiP/KAYn/ygIM/9MCHf/RAif/5gIo/+YCZf/RAmf/0QJp/9ECav/RAoH/0gKD/9IChf/SApX/0wKW/+YCl//TAqf/0wK2/9MCt//0Arn/0wK8/9ECwv/mAtH/7QLd/9IC3v/0AuH/0QLj/9EC5f/mAub/7wLo/9EC7f/RAu7/5gL1/9MC9v/mAvf/ygL4/8oC+//KAv3/0QMD/9EDBv/UAwf/5gMO/9MDD//mAxH/9AMS/+8DH//0AyD/7wMk/9EDJv/RAy//7QMw/+YDMf/tAzL/5gMz/+0DNP/mAzX/4QM4/9EDjP/TA43/5gOO/9MDj//mA5D/0wOR/+YDk//SA5X/4QOY/9EDov/TA7T/0QPR/9ED0//RA9v/0gPe/9QD3//mA+D/1APh/+YAKAA4/74AWv/vAF3/7wC9/+8A0v++ANb/vgDm/8kA9v/fAQn/7QEa/+8BIP/rATn/vgE6/98BRf++AUz/6QFj//UBbf/gAif/7wIo/+8Cgf++AoP/vgKF/74Clv/vAsL/7wLd/74C5f/vAu7/7wL2/+8DB//vAw//7wMw/+8DMv/vAzT/7wON/+8Dj//vA5H/7wOT/74D2/++A9//7wPh/+8APwA4/+YAOv/nADz/8gA9/+cAXP/xANL/5gDW/+YA2v/yAN7/7gDh/+gA5v/mAO7/8QD2/9ABGf/nATP/8gE0//EBOf/mATr/zgFD//IBRP/xAUX/5gFH/+gBSf/oAV3/8gFe//EBYv/nAWT/7QFs/+YBbf/QAgz/5wKB/+YCg//mAoX/5gKV/+cCl//nAqf/5wK2/+cCt//yArn/5wLR/+4C3f/mAt7/8gLm//EC9f/nAwb/5wMO/+cDEf/yAxL/8QMf//IDIP/xAy//7gMx/+4DM//uAzX/6AOM/+cDjv/nA5D/5wOT/+YDlf/oA6L/5wPb/+YD3v/nA+D/5wCUACUAEAAn/+gAK//oADP/6AA1/+gAOP/gADr/4AA9/98Ag//oAJP/6ACY/+gAsgAQALP/6AC0ABAA0v/gANP/6ADUABAA1v/gANkAFADdABAA4f/hAOb/4ADtABMA8gAQAPn/4AEEABABCP/oAQ0AEAEX/+gBGf/gARv/6AEd/+gBH//oASH/6AE5/+ABQf/oAUX/4AFH/+EBSP/gAUn/4QFK/+ABTf/hAVAAEAFRABABWP/pAWL/3wFk/94BZgAQAWr/6AFs/98Bbv/yAW8AEAFwABAB8gAQAfMAEAH0ABAB9QAQAfYAEAH3ABAB+AAQAfn/6AID/+gCBP/oAgX/6AIG/+gCB//oAgz/3wIpABACKwAQAi0AEAIv/+gCMf/oAjP/6AI1/+gCQ//oAkX/6AJH/+gCSf/oAmv/6AJt/+gCb//oAoH/4AKD/+AChf/gApX/3wKX/98CoP/oAqIAEAKm/+gCp//fAqoAEAKz/+gCtv/fArn/3wLSABAC2f/oAtz/6ALd/+AC9f/fAv4AEAMG/+ADCf/oAwz/6AMO/98DFAAQAxYAEAMn/+gDKf/oAyv/6AM1/+EDNv/gAzoAEAM8ABADPgAQA0AAEANCABADRAAQA0YAEANIABADSgAQA0wAEANOABADUAAQA2b/6ANo/+gDav/oA2z/6ANu/+gDcP/oA3L/6AN0/+gDdv/oA3j/6AN6/+gDfP/oA4z/3wOO/98DkP/fA5P/4AOV/+EDlv/gA6L/3wO1ABADu//oA9T/6APb/+AD3v/gA+D/4AA1ABv/8gA4//EAOv/0ADz/9AA9//AA0v/xANT/9QDW//EA2v/0AN3/9QDe//MA5v/xARn/9AEz//QBOf/xAUP/9AFF//EBUP/1AV3/9AFi//IBZP/yAWb/9QFs//IBb//1Agz/8AKB//ECg//xAoX/8QKV//ACl//wAqf/8AK2//ACt//0Arn/8ALR//MC3f/xAt7/9AL1//ADBv/0Aw7/8AMR//QDH//0Ay//8wMx//MDM//zA4z/8AOO//ADkP/wA5P/8QOi//AD2//xA97/9APg//QAagAlAA8AOP/mADr/5gA8AA4APf/mALIADwC0AA8A0v/mANQADgDW/+YA2QATANoADgDdAA4A3gALAOH/5QDm/+YA5//0AO0AEgDyAA8A9v/nAPn/6AEEAA8BDQAPARn/5gEzAA4BOf/mATr/5wFDAA4BRf/mAUf/5QFI/+gBSf/lAUr/6AFM/+QBUAAOAVEADwFdAA4BYv/mAWT/5gFmAA4BbP/mAW3/5wFvAA4BcAAPAfIADwHzAA8B9AAPAfUADwH2AA8B9wAPAfgADwIM/+YCKQAPAisADwItAA8Cgf/mAoP/5gKF/+YClf/mApf/5gKiAA8Cp//mAqoADwK2/+YCtwAOArn/5gLRAAsC0gAPAt3/5gLeAA4C9f/mAv4ADwMG/+YDDv/mAxEADgMUAA8DFgAPAx8ADgMvAAsDMQALAzMACwM1/+UDNv/oAzoADwM8AA8DPgAPA0AADwNCAA8DRAAPA0YADwNIAA8DSgAPA0wADwNOAA8DUAAPA4z/5gOO/+YDkP/mA5P/5gOV/+UDlv/oA6L/5gO1AA8D2//mA97/5gPg/+YAMQA4/+MAPP/lAD3/5ADS/+MA1P/lANb/4wDZ/+IA2v/lAN3/5QDe/+kA8v/qAQT/6gEz/+UBOf/jAUP/5QFF/+MBUP/lAVH/6gFd/+UBZv/lAWz/5AFv/+UBcP/qAgz/5AKB/+MCg//jAoX/4wKV/+QCl//kAqf/5AK2/+QCt//lArn/5ALR/+kC3f/jAt7/5QL1/+QDDv/kAxH/5QMf/+UDL//pAzH/6QMz/+kDjP/kA47/5AOQ/+QDk//jA6L/5APb/+MAJAA4/+IAPP/kANL/4gDU/+QA1v/iANn/4QDa/+QA3f/kAN7/6QDt/+QA8v/rAQT/6wEz/+QBOf/iAUP/5AFF/+IBUP/kAVH/6wFd/+QBZv/kAW//5AFw/+sCgf/iAoP/4gKF/+ICt//kAtH/6QLd/+IC3v/kAxH/5AMf/+QDL//pAzH/6QMz/+kDk//iA9v/4gAYADj/6wA9//MA0v/rANb/6wE5/+sBRf/rAgz/8wKB/+sCg//rAoX/6wKV//MCl//zAqf/8wK2//MCuf/zAt3/6wL1//MDDv/zA4z/8wOO//MDkP/zA5P/6wOi//MD2//rADkAUf/vAFL/7wBU/+8AXP/wAMH/7wDs/+8A7f/uAO7/8ADw/+8A8f/vAPP/7wD0/+8A9f/vAPb/7gD4/+8A+v/vAPv/7wD+/+8BAP/vAQX/7wEJ//QBIP/xASv/7wE0//ABNv/vATr/7wE8/+8BPv/vAUT/8AFT/+8BVf/vAVf/7wFc/+8BXv/wAW3/7wId/+8CZf/vAmf/7wJp/+8Cav/vArz/7wLh/+8C4//vAub/8ALo/+8C7f/vAv3/7wMD/+8DEv/wAyD/8AMk/+8DJv/vAzj/7wOY/+8DtP/vA9H/7wPT/+8AIwAG//IAC//yAFr/9QBd//UAvf/1APb/9AEJ//UBGv/1ATr/9QFt//UBhP/yAYX/8gGH//IBiP/yAYn/8gIn//UCKP/1Apb/9QLC//UC5f/1Au7/9QL2//UC9//yAvj/8gL7//IDB//1Aw//9QMw//UDMv/1AzT/9QON//UDj//1A5H/9QPf//UD4f/1AAoA7QAUAPb/7QD5/+0A/P/iATr/7QFI/+0BSv/tAW3/7QM2/+0Dlv/tAFkAR//wAEj/8ABJ//AAS//wAFP/6wBV//AAlP/wAJn/8AC7//AAyP/wAMn/8AD3//ABA//wARj/6wEc/+sBHv/wASL/8AFC//ABYP/wAWH/8AFr//ACFP/wAhX/8AIW//ACF//wAhj/8AIe/+sCH//rAiD/6wIh/+sCIv/rAjD/8AIy//ACNP/wAjb/8AI4//ACOv/wAjz/8AI+//ACQP/wAkL/8AJE//ACRv/wAkj/8AJK//ACbP/rAm7/6wJw/+sCuv/wAsD/6wLG/+sC4P/wAuL/6wLk//AC5//wAwL/8AMI//ADDf/wAxv/8AMd//ADHv/wAyj/6wMq//ADLP/rAzn/8ANT//ADVf/wA1f/8ANZ//ADW//wA13/8ANf//ADYf/wA2f/6wNp/+sDa//rA23/6wNv/+sDcf/rA3P/6wN1//ADd//wA3n/8AN7/+sDff/wA7j/8AO8/+sDxf/wA8f/8ACgAAYADQALAA0ARf/wAEf/sABI/7AASf+wAEoADQBL/7AAU//WAFX/sABaAAsAXQALAJT/sACZ/7AAu/+wAL0ACwC+/7AAx/+rAMj/wADJ/7AAzP/VAO3/qgDy/68A9/+wAQP/sAEE/68BGP/WARoACwEc/+IBHv+wASAADAEi/7ABQv+wAVH/rwFg/7ABYf+wAWMACwFlAAsBa/+wAXD/rwGEAA0BhQANAYcADQGIAA0BiQANAg3/8AIO//ACD//wAhD/8AIR//ACEv/wAhP/8AIU/7ACFf+wAhb/sAIX/7ACGP+wAh7/1gIf/9YCIP/WAiH/1gIi/9YCJwALAigACwIq//ACLP/wAi7/8AIw/7ACMv+wAjT/sAI2/7ACOP+wAjr/sAI8/7ACPv+wAkD/sAJC/7ACRP+wAkb/sAJI/7ACSv+wAmz/1gJu/9YCcP/WApYACwK6/7ACwP/WAsIACwLG/9YC3//wAuD/sALi/9YC5P+wAuUACwLn/7AC7gALAvYACwL3AA0C+AANAvsADQL///ADAv+wAwcACwMI/7ADDf+wAw8ACwMV//ADF//wAxv/sAMd/7ADHv+wAyj/1gMq/7ADLP/WAzAACwMyAAsDNAALAzn/sAM7//ADPf/wAz//8ANB//ADQ//wA0X/8ANH//ADSf/wA0v/8ANN//ADT//wA1H/8ANT/7ADVf+wA1f/sANZ/7ADW/+wA13/sANf/7ADYf+wA2f/1gNp/9YDa//WA23/1gNv/9YDcf/WA3P/1gN1/7ADd/+wA3n/sAN7/9YDff+wA40ACwOPAAsDkQALA7b/8AO4/7ADvP/WA8X/sAPH/7AD3wALA+EACwAOAO0AFADyABAA9v/wAPn/8AEBAAwBBAAQATr/8AFI//ABSv/mAVEAEAFt//ABcAAQAzb/8AOW//AATQBHAAwASAAMAEkADABLAAwAVQAMAJQADACZAAwAuwAMAMgADADJAAwA7QA6APIAGAD2/+MA9wAMAPn/9wEDAAwBBAAYAR4ADAEiAAwBOv/iAUIADAFI//cBSv/jAVEAGAFgAAwBYQAMAWsADAFt/+MBcAAYAhQADAIVAAwCFgAMAhcADAIYAAwCMAAMAjIADAI0AAwCNgAMAjgADAI6AAwCPAAMAj4ADAJAAAwCQgAMAkQADAJGAAwCSAAMAkoADAK6AAwC4AAMAuQADALnAAwDAgAMAwgADAMNAAwDGwAMAx0ADAMeAAwDKgAMAzb/9wM5AAwDUwAMA1UADANXAAwDWQAMA1sADANdAAwDXwAMA2EADAN1AAwDdwAMA3kADAN9AAwDlv/3A7gADAPFAAwDxwAMACIAWv/0AFz/8ABd//QAvf/0AO3/7wDu//AA8v/zAQT/8wEa//QBNP/wAUT/8AFR//MBXv/wAXD/8wIn//QCKP/0Apb/9ALC//QC5f/0Aub/8ALu//QC9v/0Awf/9AMP//QDEv/wAyD/8AMw//QDMv/0AzT/9AON//QDj//0A5H/9APf//QD4f/0AAoABv/WAAv/1gGE/9YBhf/WAYf/1gGI/9YBif/WAvf/1gL4/9YC+//WAAgA9v+6AQn/zwEg/9sBOv9QAUr/nQFj//ABZf/yAW3/TAAKAAb/9QAL//UBhP/1AYX/9QGH//UBiP/1AYn/9QL3//UC+P/1Avv/9QAnAEwAIABPACAAUAAgAFP/gABX/5AAWwALARj/gAIe/4ACH/+AAiD/gAIh/4ACIv+AAmz/gAJu/4ACcP+AAnj/kAJ6/5ACfP+QAn7/kAKA/5ACwP+AAsb/gALi/4AC6f+QAyj/gAMs/4ADZ/+AA2n/gANr/4ADbf+AA2//gANx/4ADc/+AA3v/gAO8/4ADyQAgA8sAIAPNACAD2v+QAAEAWwALAAQADf/mAEH/9ABh/+8BTf/tABQAuP/UAL7/8ADC/+0AxAARAMr/4ADM/+cAzf/lAM7/7gDZABIA6v/pAPb/1wE6/9cBSv/TAUz/1gFN/8UBWP/nAWIADQFkAAwBbf/WAW7/8gABARz/8QASANn/rgDmABIA6//gAO3/rQDv/9YA/f/fAQH/0gEH/+ABHP/OAS7/3QEw/+IBOP/gAUD/4AFK/+kBTf/aAV//vQFp/98BbAARAAIA9v/1AYX/sAACAO3/yQEc/+4ACQDm/8MA9v/PATr/zgFJ/+cBTP/fAWL/0QFk/+wBbP+gAW3/0QAvAFb/bQBb/4wAbf2/AHz+fQCB/rwAhv8rAIn/SwC4/2EAvv+PAL//DwDD/ugAxv8fAMf+5QDK/0YAzP7tAM3+/QDO/tkA2f9SAOYABQDq/70A6/9JAO3+/gDv/xMA9v9oAP3/DgD//xMBAf8HAQf/DgEJ/xEBHP88ASD/rAEu/xUBMP88ATj/DgE6/2oBQP9JAUr/DAFM/z8BTf7xAVj/wAFf/u8BY/8xAWX/XwFp/woBbAAFAW3/MAFu/9UAGwAK/+IADQAUAA7/zwBBABIASv/qAFb/2ABY/+oAYQATAG3/rgB8/80Agf+gAIb/wQCJ/8AAuP/QALz/6gC+/+4Av//GAMAADQDC/+kAw//WAMb/6ADH/7oAyv/pAMz/ywDN/9oAzv/HAY3/0wAVACP/wwBY/+8AW//fAJr/7gC4/+UAuf/RAMQAEQDK/8gA2QATAOb/xQD2/8oBOv+fAUn/UQFK/3sBTP/KAU3/3QFY//IBYv91AWT/ygFs/08Bbf+MAAcA9v/wAQn/8QEg//MBOv/xAWP/8wFl/+kBbf/TAAIASv/uAFv/6gAJAMr/6gDt/7gA9v/qAQn/8AEg//EBOv/rAWP/9QFt/+wBhf+wAAIBEQALAWz/5gAPAFv/wQC4/8UAyv+0AOr/1wD2/7kBCf+yARz/0gEg/8gBOv+gAUr/xQFY/+QBY//MAWX/zAFt/8sBbv/vAAEAW/+kAAgA2QAVAO0AFQFJ/+QBSv/lAUz/5AFi/+MBZP/iAWz/5AACAPb/wAGF/7AACABYAA4Agf+fAL7/9QDE/94Ax//lANn/qADt/8oBX//jAAUAyv/qAO3/7gD2/7ABOv/sAW3/7AADAEoADwBYADIAWwARADAABP/YAFb/tQBb/8cAbf64AHz/KACB/00Ahv+OAIn/oQC4/64Avv/JAL//fgDD/2cAxv+HAMf/ZQDK/54AzP9qAM3/cwDO/14A2f+lAOYADwDq/+QA6/+gAO3/dADv/4AA9v+yAP3/fQD//4ABAf95AQf/fQEJ/38BHP+YASD/2gEu/4EBMP+YATj/fQE6/7MBQP+gAUr/fAFM/5oBTf9sAVj/5gFf/2sBY/+SAWX/rQFp/3sBbAAPAW3/kQFu//IABAANABQAQQARAFb/4gBhABMABwBKAA0Avv/1AMYACwDH/+oAygAMAO3/yAEc//EABAANAA8AQQAMAFb/6wBhAA4AAwBb/+UAuP/LAM3/5AAHAIH/3wC1//MAt//wAMT/6gDZ/98A5v/gAWz/4AACAIEABgAGAAAACwALAAEAEAAQAAIAEgASAAMAJQApAAQALAA0AAkAOAA+ABIARQBHABkASQBJABwATABMAB0AUQBUAB4AVgBWACIAWgBaACMAXABeACQAigCKACcAlgCWACgAsQC0ACkAvQC9AC0AwQDBAC4AxwDHAC8A1ADVADAA1wDXADIA2gDaADMA3ADeADQA4ADmADcA7ADsAD4A7gDuAD8A9wD3AEAA/AD8AEEA/gD/AEIBBAEFAEQBCgEKAEYBDQENAEcBGAEaAEgBLgEwAEsBMwE1AE4BNwE3AFEBOQE5AFIBOwE7AFMBQwFEAFQBVAFUAFYBVgFWAFcBWAFYAFgBXAFeAFkBhAGKAFwBjgGPAGMB7QHuAGUB8AHwAGcB8gIYAGgCHQIiAI8CJwI3AJUCOQJCAKYCSwJNALACTwJPALMCUQJRALQCUwJTALUCVQJVALYCWAJYALcCWgJaALgCXAJcALkCXgJeALoCYAJgALsCYgJiALwCZAJwAL0CcgJyAMoCdAJ0AMsCdgJ2AMwCgQKBAM0CgwKDAM4ChQKFAM8ChwKHANACiQKJANECiwKLANICjQKNANMCjwKPANQCkQKRANUCkwKTANYClQKdANcCogKnAOACqgK5AOYCvAK8APYCwALAAPcCwgLCAPgCxgLGAPkCyQLKAPoCzALVAPwC1wLZAQYC2wLgAQkC4gLoAQ8C7gLvARYC8QLxARgC8wLzARkC9QL4ARoC+wMAAR4DAgMCASQDBgMHASUDDAMXAScDGgMbATMDHQMgATUDJwMoATkDLAMsATsDLgM0ATwDOgNiAUMDZANkAWwDZgNzAW0DewN7AXsDfgN+AXwDgAOAAX0DjAORAX4DkwOTAYQDlwOYAYUDmwObAYcDnQOeAYgDoAOgAYoDogOiAYsDswO3AYwDuQO5AZEDuwO8AZIDvgO+AZQDwgPEAZUDxgPGAZgDyAPKAZkDzAPMAZwDzgPOAZ0D0APWAZ4D2APYAaUD2wPbAaYD3QPiAacD5APmAa0AAQAGA+EAFwAAAAAAAAAAABcAAAAAAAAAAAAeAAAAHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACABoAEQABAAUAAAAAAAAAAAAKAAsAFgAAAAAAAQAUAAAAAAAAAA0ACgAbABkAEAAMAA8AAAAAAAAAAAAAAAAABgAHABUAAAAIAAAAAAAEAAAAAAAAAAAABAAEAAMABwAAABMAAAAAAAAACQAAABIACQAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwACAAEAAgAAAAAAAAAAAAAAAAAAAAAACQAAAAAAAAAEAAAAAAAAAAAAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0AHQAAAAAAAAAAABAAAAAAAAAAIAAAAAAAAAAAAAAAHQAAAB0AAAAAAAAAAAAAABgAAAASAAAAAAAAAAAAAAAAAAAAAAAHAAAAAAAAAAAAHAAAABwABwAAAAAAAAAAABwAHAAAAAAAAAAAABwAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAADABsACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAHwAYAAAAAAAQABIACwAAAAsAAAALAAAAAAAAAAAAAAAAAAAAAAAAABAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAGAAQABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXABcAHgAXABcAFwAeAAAAAAAAAB4AHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEAAAANAAAAAgACAAIAAgACAAIAAgARAAUABQAFAAUAAAAAAAAAAAAAAAEAAQABAAEAAQAKAAoACgAKAAwABgAGAAYABgAGAAYABgAVAAgACAAIAAgAAAAAAAAAAAAEAAMAAwADAAMAAwAAAAAAAAAAAAkACQACAAYAAgAGAAIABgARABUAEQAVABEAFQARABUAAQAAAAUACAAFAAgABQAIAAUACAAFAAgAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAsAAAAWAAAAFgAAABYAAAAWAAAAAAAEAAAABAAAAAQABAABAAMAAQADAAEAAwAAABMAAAATAAAAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAAANAAAADQAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAABkAAAAMAAkADAAPAA4ADwAOAA8ADgAAAAAAAAAAAAIABQAAAAAAAQAMAAAAAAACABoABQAPAAAAAAALAAAAAAABABQADQAMABAAAAAMAAAAAAAEAAAAAAAAAAMAAAAJAAAAAAAAAAMAAAAAAAUAHwAAAAAAAAAKAAsACwAgAAIAGgAfAAUAAAAAAAAAAQAAABQAEQANABAABgAIAAAAAwAHABUACQASAAgAGAAAAAAAAAAAAAAACQAZAAAAGQAAABkAAAAMAAkAFwAXAAAAAAAXAAAABAACAAYABQAAAAgAAAAAAAAAGwAJAAAAAAAAAAAAEQAVAAwACQAAABAAEgAAAAIABgACAAYAAAAAAAUACAAAAAgACAAQABIAAAAAAAAAAAAAAAAAAQADAAAAAAAAAAMAAAAHACAACQAgAAkAIAAJAAAAAAAAAAAAAAACAAYAAgAGAAIABgACAAYAAgAGAAIABgACAAYAAgAGAAIABgACAAYAAgAGAAIABgAFAAgABQAIAAUACAAFAAgABQAIAAUACAAFAAgABQAIAAAAAAAAAAAAAQADAAEAAwABAAMAAQADAAEAAwABAAMAAQADAAAAAAAAAAAAAAAAAAAAAwAAAAAACgAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwACQAMAAkADAAJAAAADQAAAAAAAAAfABgAAAAAAAQAAAAdAB8AAAALAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAACAAYABQAAAAAAAAABAAMAAAATAAAAAAAAABoABwABAAAAAQAAAAAABAALAAAACwAAABYAAAAAAAQAAAAEAAEAFAAHAAAAEwAAAAAADQAAAAoAGwAJABsACQAZAAAADwAOAAEAAQAGA+AAEQAAAAAAAAAAABEAAAAAAAAAAAAVABgAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAAgAAAAAAAAACAAAAAAAcAAAAAAAAAAAAAgAAAAIAAAAOAAoACQAXABMADwALABAAAAAAAAAAAAAAAAAABwAAAAEAAQABAAAAAQAAAAAAAAAAAAAAAwADAAQAAwABAAAADAAAAAUACAAAABIACAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAAAAAAAAAIAAQAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAIABgAAAAAAAAAAAAAAAAABAAAACAAAAAAAAAADAAAAAAAAAAAAAAAAAAEAAQAAAAUAAAAAAAAAAAAAAAAACgACABQAAAAKAAAAAAAAAA8AAAAAABQAGwAAAAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAASAAAAAwADABYAAwADAAMAAAABAAMAGgADAAMAAAAAAAMAAAADAAAAAAABABYAAwAAAAAAAgAAAAAAAAAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAgAEABcACAACAAAAAgABAAIAAAACAAEAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAPABIAAAADAAAAAAAKAAAAAAADAAAAAwAAAAAAAgABAA8AEgAKAAAAGQAaAAAAAAAAAAAAAAAAAAAAFAAWAAAAAwAAAAMAAAADAAAAAAAAAAAAAwAPABIAAAABAAEAAAAAAAAAAAAUAAAAAAAAAAIAAQAAAAAAAAAUABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYABgAAAARABEAFQARABEAEQAVAAAAAAAAABUAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAAAAAAAAAAAABgAGAAYABgAGAAYABgACAAAAAAAAAAAAAAAAAAAAAAAAAAIAAgACAAIAAgAJAAkACQAJAAsABwAHAAcABwAHAAcABwABAAEAAQABAAEAAAAAAAAAAAADAAQABAAEAAQABAAFAAUABQAFAAgACAAGAAcABgAHAAYABwACAAEAAgABAAIAAQACAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAgABAAIAAQACAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAAAAAAAA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"),fallback:!0}}),Vh=e=>2.8346*parseFloat(String(e)),Oh=e=>.3528*e,Yh=e=>1.333*e,Hh=e=>new Promise(((t,A)=>{const r=new FileReader;r.onloadend=()=>{r.result.startsWith("data:application/pdf;")?t(r.result):A(Error("[@pdfme/common] template.basePdf must be pdf data."))},r.readAsDataURL(e)})),Kh=e=>/^#(?:[A-Fa-f0-9]{3,4}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})$/i.test(e),qh=e=>Qh.safeParse(e).success,Jh=e=>{const t=(e=>wh.hp.from(e,"base64").toString("binary"))(e.split(";base64,")[1]?e.split(";base64,")[1]:e),A=new Uint8Array(t.length);for(let r=0;r<t.length;r+=1)A[r]=t.charCodeAt(r);return A},_h=e=>{const{font:t,template:{schemas:A}}=e,r=Object.values(t).reduce(((e,t)=>t.fallback?e+1:e),0);if(0===r)throw Error("[@pdfme/common] fallback flag is not found in font. true fallback flag must be only one.\nCheck this document: https://pdfme.com/docs/custom-fonts#about-font-type");if(r>1)throw Error(`[@pdfme/common] ${r} fallback flags found in font. true fallback flag must be only one.\nCheck this document: https://pdfme.com/docs/custom-fonts#about-font-type`);const n=(e=>jh(e.map((e=>Object.values(e).map((e=>e.fontName??"")))).reduce(((e,t)=>e.concat(t)),[]).filter(Boolean)))(A),s=Object.keys(t);if(n.some((e=>!s.includes(e))))throw Error(`[@pdfme/common] ${n.filter((e=>!s.includes(e))).join()} of template.schemas is not found in font.\nCheck this document: https://pdfme.com/docs/custom-fonts`)},$h=(e,t)=>{try{t.parse(e)}catch(tF){if(tF instanceof yh.ZodError){const t=tF.issues.map((e=>`ERROR POSITION: ${e.path.join(".")}\nERROR MESSAGE: ${e.message}\n--------------------------`)).join("\n");throw Error(`[@pdfme/common] Invalid argument:\n--------------------------\n${t}`)}}if(e&&"object"===typeof e&&"template"in e&&"options"in e){const{template:t,options:A}=e;A&&A.font&&_h({font:A.font,template:t})}if(e&&"object"===typeof e&&"template"in e&&"plugins"in e){const{template:t,plugins:A}=e;A&&(e=>{const{plugins:t,template:{schemas:A}}=e,r=jh(A.map((e=>Object.values(e).map((e=>e.type)))).flat()),n=Object.values(t).map((e=>e?.propPanel.defaultSchema.type));if(r.some((e=>!n.includes(e))))throw Error(`[@pdfme/common] ${r.filter((e=>!n.includes(e))).join()} of template.schemas is not found in plugins.`)})({plugins:A,template:t})}},eg=async e=>{const{template:t,modifyTemplate:A}=e;if(!qh(t.basePdf))return t;const r=await A(e),n=await tg({...e,template:r});return Ag(r,n)},tg=async e=>{const{template:t,input:A,_cache:r,options:n,getDynamicHeight:s}=e,i=t.basePdf,o=new Map;if(!qh(i))return o;const a=i.height;let l=0;for(const f of t.schemas){for(const[e,t]of Object.entries(f)){const u=await s(A?.[e]||"",{schema:t,basePdf:i,options:n,_cache:r});t.height!==u&&o.set(t.position.y+t.height+a*l,u-t.height)}l++}const u=new Map,c=Array.from(o.keys()).sort(((e,t)=>e-t));let d=0;for(const f of c){const e=o.get(f)+d;u.set(f+d,e),d+=e}return u},Ag=(e,t)=>{if(!qh(e.basePdf)||0===t.size)return e;const A={schemas:[{}],basePdf:e.basePdf},r=A.schemas,n=e.basePdf.height,s=e.basePdf.padding[0],i=e.basePdf.padding[2];for(let o=0;o<e.schemas.length;o+=1){const A=e.schemas[o];r[o]||(r[o]={});for(const[e,a]of Object.entries(A)){const{position:A,height:l}=a;let u=A.y,c=o;for(const[e,r]of t)u>e&&(u+=r);for(;u+l>=n-i;)u=u+s-(n-i)+s,c++;r[c]||(r[c]={}),r[c][e]={...a,position:{...A,y:u}}}}return A},rg=(e,t,A)=>{const r=aa(A);return{x:Math.cos(r)*(e.x-t.x)-Math.sin(r)*(e.y-t.y)+t.x,y:Math.sin(r)*(e.x-t.x)+Math.cos(r)*(e.y-t.y)+t.y}},ng=(e,t)=>"designer"===e||"form"===e&&!0!==t.readOnly,sg=e=>{if(e){if(!Kh(e))throw new Error(`Invalid hex color value ${e}`);const[t,A,r]=(e=>("#"===e.slice(0,1)&&(e=e.slice(1)),3===e.length&&(e=e.slice(0,1)+e.slice(0,1)+e.slice(1,2)+e.slice(1,2)+e.slice(2,3)+e.slice(2,3)),[e.slice(0,2),e.slice(2,4),e.slice(4,6)].map((e=>parseInt(e,16)))))(e);return Cl(t/255,A/255,r/255)}},ig=(e,t)=>"cmyk"==t?.toLocaleLowerCase()?(e=>{if(e){if(!Kh(e))throw new Error(`Invalid hex color value ${e}`);const t=(e=e.replace("#","")).substring(0,6),A=e.substring(6,8),r=A?parseInt(A,16)/255:1;let n=parseInt(t.substring(0,2),16)/255,s=parseInt(t.substring(2,4),16)/255,i=parseInt(t.substring(4,6),16)/255;n=n*r+(1-r),s=s*r+(1-r),i=i*r+(1-r);const o=1-Math.max(n,s,i);return El(0===n?0:(1-n-o)/(1-o),0===s?0:(1-s-o)/(1-o),0===i?0:(1-i-o)/(1-o),o)}})(e):sg(e),og=e=>JSON.parse(JSON.stringify(e)),ag={utf16le:"utf-16le",ucs2:"utf-16le",utf16be:"utf-16be"};class lg{constructor(e){this.buffer=e,this.view=new DataView(e.buffer,e.byteOffset,e.byteLength),this.pos=0,this.length=this.buffer.length}readString(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"ascii";t=ag[t]||t;let A=this.readBuffer(e);try{return new TextDecoder(t).decode(A)}catch(r){return A}}readBuffer(e){return this.buffer.slice(this.pos,this.pos+=e)}readUInt24BE(){return(this.readUInt16BE()<<8)+this.readUInt8()}readUInt24LE(){return this.readUInt16LE()+(this.readUInt8()<<16)}readInt24BE(){return(this.readInt16BE()<<8)+this.readUInt8()}readInt24LE(){return this.readUInt16LE()+(this.readInt8()<<16)}}lg.TYPES={UInt8:1,UInt16:2,UInt24:3,UInt32:4,Int8:1,Int16:2,Int24:3,Int32:4,Float:4,Double:8};for(let A of Object.getOwnPropertyNames(DataView.prototype))if("get"===A.slice(0,3)){let e=A.slice(3).replace("Ui","UI");"Float32"===e?e="Float":"Float64"===e&&(e="Double");let t=lg.TYPES[e];lg.prototype["read"+e+(1===t?"":"BE")]=function(){const e=this.view[A](this.pos,!1);return this.pos+=t,e},1!==t&&(lg.prototype["read"+e+"LE"]=function(){const e=this.view[A](this.pos,!0);return this.pos+=t,e})}const ug=new TextEncoder,cg=18==new Uint8Array(new Uint16Array([4660]).buffer)[0];class dg{constructor(e){this.buffer=e,this.view=new DataView(this.buffer.buffer,this.buffer.byteOffset,this.buffer.byteLength),this.pos=0}writeBuffer(e){this.buffer.set(e,this.pos),this.pos+=e.length}writeString(e){let t,A=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"ascii";switch(A){case"utf16le":case"utf16-le":case"ucs2":t=fg(e,cg);break;case"utf16be":case"utf16-be":t=fg(e,!cg);break;case"utf8":t=ug.encode(e);break;case"ascii":t=function(e){let t=new Uint8Array(e.length);for(let A=0;A<e.length;A++)t[A]=e.charCodeAt(A);return t}(e);break;default:throw new Error(`Unsupported encoding: ${A}`)}this.writeBuffer(t)}writeUInt24BE(e){this.buffer[this.pos++]=e>>>16&255,this.buffer[this.pos++]=e>>>8&255,this.buffer[this.pos++]=255&e}writeUInt24LE(e){this.buffer[this.pos++]=255&e,this.buffer[this.pos++]=e>>>8&255,this.buffer[this.pos++]=e>>>16&255}writeInt24BE(e){e>=0?this.writeUInt24BE(e):this.writeUInt24BE(e+16777215+1)}writeInt24LE(e){e>=0?this.writeUInt24LE(e):this.writeUInt24LE(e+16777215+1)}fill(e,t){if(t<this.buffer.length)this.buffer.fill(e,this.pos,this.pos+t),this.pos+=t;else{const A=new Uint8Array(t);A.fill(e),this.writeBuffer(A)}}}function fg(e,t){let A=new Uint16Array(e.length);for(let r=0;r<e.length;r++){let n=e.charCodeAt(r);t&&(n=n>>8|(255&n)<<8),A[r]=n}return new Uint8Array(A.buffer)}for(let A of Object.getOwnPropertyNames(DataView.prototype))if("set"===A.slice(0,3)){let e=A.slice(3).replace("Ui","UI");"Float32"===e?e="Float":"Float64"===e&&(e="Double");let t=lg.TYPES[e];dg.prototype["write"+e+(1===t?"":"BE")]=function(e){this.view[A](this.pos,e,!1),this.pos+=t},1!==t&&(dg.prototype["write"+e+"LE"]=function(e){this.view[A](this.pos,e,!0),this.pos+=t})}class hg{fromBuffer(e){let t=new lg(e);return this.decode(t)}toBuffer(e){let t=this.size(e),A=new Uint8Array(t),r=new dg(A);return this.encode(r,e),A}}class gg extends hg{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"BE";super(),this.type=e,this.endian=t,this.fn=this.type,"8"!==this.type[this.type.length-1]&&(this.fn+=this.endian)}size(){return lg.TYPES[this.type]}decode(e){return e[`read${this.fn}`]()}encode(e,t){return e[`write${this.fn}`](t)}}const pg=new gg("UInt8"),bg=new gg("UInt16","BE"),mg=(new gg("UInt16","LE"),new gg("UInt24","BE")),vg=(new gg("UInt24","LE"),new gg("UInt32","BE")),yg=(new gg("UInt32","LE"),new gg("Int8")),wg=new gg("Int16","BE"),Bg=(new gg("Int16","LE"),new gg("Int24","BE"),new gg("Int24","LE"),new gg("Int32","BE"));new gg("Int32","LE"),new gg("Float","BE"),new gg("Float","LE"),new gg("Double","BE"),new gg("Double","LE");class xg extends gg{constructor(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e>>1;super(`Int${e}`,t),this._point=1<<A}decode(e){return super.decode(e)/this._point}encode(e,t){return super.encode(e,t*this._point|0)}}const Cg=new xg(16,"BE"),Eg=(new xg(16,"LE"),new xg(32,"BE"));new xg(32,"LE");function Ng(e,t,A){let r;if("number"===typeof e?r=e:"function"===typeof e?r=e.call(A,A):A&&"string"===typeof e?r=A[e]:t&&e instanceof gg&&(r=e.decode(t)),isNaN(r))throw new Error("Not a fixed size");return r}class Dg{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.enumerable=!0,this.configurable=!0;for(let t in e){const A=e[t];this[t]=A}}}class Qg extends hg{constructor(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"count";super(),this.type=e,this.length=t,this.lengthType=A}decode(e,t){let A;const{pos:r}=e,n=[];let s=t;if(null!=this.length&&(A=Ng(this.length,e,t)),this.length instanceof gg&&(Object.defineProperties(n,{parent:{value:t},_startOffset:{value:r},_currentOffset:{value:0,writable:!0},_length:{value:A}}),s=n),null==A||"bytes"===this.lengthType){const r=null!=A?e.pos+A:(null!=t?t._length:void 0)?t._startOffset+t._length:e.length;for(;e.pos<r;)n.push(this.type.decode(e,s))}else for(let i=0,o=A;i<o;i++)n.push(this.type.decode(e,s));return n}size(e,t){let A=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(!e)return this.type.size(null,t)*Ng(this.length,null,t);let r=0;this.length instanceof gg&&(r+=this.length.size(),t={parent:t,pointerSize:0});for(let n of e)r+=this.type.size(n,t);return t&&A&&this.length instanceof gg&&(r+=t.pointerSize),r}encode(e,t,A){let r=A;this.length instanceof gg&&(r={pointers:[],startOffset:e.pos,parent:A},r.pointerOffset=e.pos+this.size(t,r,!1),this.length.encode(e,t.length));for(let n of t)this.type.encode(e,n,r);if(this.length instanceof gg){let t=0;for(;t<r.pointers.length;){const A=r.pointers[t++];A.type.encode(e,A.val,A.parent)}}}}class Pg extends Qg{decode(e,t){const{pos:A}=e,r=Ng(this.length,e,t);this.length instanceof gg&&(t={parent:t,_startOffset:A,_currentOffset:0,_length:r});const n=new Ig(this.type,r,e,t);return e.pos+=r*this.type.size(null,t),n}size(e,t){return e instanceof Ig&&(e=e.toArray()),super.size(e,t)}encode(e,t,A){return t instanceof Ig&&(t=t.toArray()),super.encode(e,t,A)}}class Ig{constructor(e,t,A,r){this.type=e,this.length=t,this.stream=A,this.ctx=r,this.base=this.stream.pos,this.items=[]}get(e){if(!(e<0||e>=this.length)){if(null==this.items[e]){const{pos:t}=this.stream;this.stream.pos=this.base+this.type.size(null,this.ctx)*e,this.items[e]=this.type.decode(this.stream,this.ctx),this.stream.pos=t}return this.items[e]}}toArray(){const e=[];for(let t=0,A=this.length;t<A;t++)e.push(this.get(t));return e}}class Lg extends hg{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];super(),this.type=e,this.flags=t}decode(e){const t=this.type.decode(e),A={};for(let r=0;r<this.flags.length;r++){const e=this.flags[r];null!=e&&(A[e]=!!(t&1<<r))}return A}size(){return this.type.size()}encode(e,t){let A=0;for(let r=0;r<this.flags.length;r++){const e=this.flags[r];null!=e&&t[e]&&(A|=1<<r)}return this.type.encode(e,A)}}class kg extends hg{constructor(e){super(),this.length=e}decode(e,t){const A=Ng(this.length,e,t);return e.readBuffer(A)}size(e,t){if(!e)return Ng(this.length,null,t);let A=e.length;return this.length instanceof gg&&(A+=this.length.size()),A}encode(e,t,A){return this.length instanceof gg&&this.length.encode(e,t.length),e.writeBuffer(t)}}class Gg extends hg{constructor(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(),this.type=e,this.condition=t}decode(e,t){let{condition:A}=this;if("function"===typeof A&&(A=A.call(t,t)),A)return this.type.decode(e,t)}size(e,t){let{condition:A}=this;return"function"===typeof A&&(A=A.call(t,t)),A?this.type.size(e,t):0}encode(e,t,A){let{condition:r}=this;if("function"===typeof r&&(r=r.call(A,A)),r)return this.type.encode(e,t,A)}}class Fg extends hg{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;super(),this.type=e,this.count=t}decode(e,t){e.pos+=this.size(null,t)}size(e,t){const A=Ng(this.count,null,t);return this.type.size()*A}encode(e,t,A){return e.fill(0,this.size(t,A))}}class Sg extends hg{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"ascii";super(),this.length=e,this.encoding=t}decode(e,t){let A,r,{encoding:n}=this;"function"===typeof n&&(n=n.call(t,t)||"ascii");let s=Wg(n);if(null!=this.length)A=Ng(this.length,e,t);else{let t;for(({buffer:t,length:A,pos:r}=e);r<A-s+1&&(0!==t[r]||2===s&&0!==t[r+1]);)r+=s;A=r-e.pos}const i=e.readString(A,n);return null==this.length&&e.pos<e.length&&(e.pos+=s),i}size(e,t){if(void 0===e||null===e)return Ng(this.length,null,t);let{encoding:A}=this;"function"===typeof A&&(A=A.call(null!=t?t.val:void 0,null!=t?t.val:void 0)||"ascii"),"utf16be"===A&&(A="utf16le");let r=Zg(e,A);return this.length instanceof gg&&(r+=this.length.size()),null==this.length&&(r+=Wg(A)),r}encode(e,t,A){let{encoding:r}=this;if("function"===typeof r&&(r=r.call(null!=A?A.val:void 0,null!=A?A.val:void 0)||"ascii"),this.length instanceof gg&&this.length.encode(e,Zg(t,r)),e.writeString(t,r),null==this.length)return 2==Wg(r)?e.writeUInt16LE(0):e.writeUInt8(0)}}function Wg(e){switch(e){case"ascii":case"utf8":default:return 1;case"utf16le":case"utf16-le":case"utf-16be":case"utf-16le":case"utf16be":case"utf16-be":case"ucs2":return 2}}function Zg(e,t){switch(t){case"ascii":return e.length;case"utf8":let A=0;for(let t=0;t<e.length;t++){let r=e.charCodeAt(t);if(r>=55296&&r<=56319&&t<e.length-1){let A=e.charCodeAt(++t);56320===(64512&A)?r=((1023&r)<<10)+(1023&A)+65536:t--}0===(4294967168&r)?A++:0===(4294965248&r)?A+=2:0===(4294901760&r)?A+=3:0===(4292870144&r)&&(A+=4)}return A;case"utf16le":case"utf16-le":case"utf16be":case"utf16-be":case"ucs2":return 2*e.length;default:throw new Error("Unknown encoding "+t)}}class Xg extends hg{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this.fields=e}decode(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=this._setup(e,t,A);return this._parseFields(e,r,this.fields),null!=this.process&&this.process.call(r,e),r}_setup(e,t,A){const r={};return Object.defineProperties(r,{parent:{value:t},_startOffset:{value:e.pos},_currentOffset:{value:0,writable:!0},_length:{value:A}}),r}_parseFields(e,t,A){for(let n in A){var r;const s=A[n];void 0!==(r="function"===typeof s?s.call(t,t):s.decode(e,t))&&(r instanceof Dg?Object.defineProperty(t,n,r):t[n]=r),t._currentOffset=e.pos-t._startOffset}}size(e,t){let A=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];null==e&&(e={});const r={parent:t,val:e,pointerSize:0};null!=this.preEncode&&this.preEncode.call(e);let n=0;for(let s in this.fields){const t=this.fields[s];null!=t.size&&(n+=t.size(e[s],r))}return A&&(n+=r.pointerSize),n}encode(e,t,A){let r;null!=this.preEncode&&this.preEncode.call(t,e);const n={pointers:[],startOffset:e.pos,parent:A,val:t,pointerSize:0};n.pointerOffset=e.pos+this.size(t,n,!1);for(let i in this.fields)r=this.fields[i],null!=r.encode&&r.encode(e,t[i],n);let s=0;for(;s<n.pointers.length;){const t=n.pointers[s++];t.type.encode(e,t.val,t.parent)}}}class Mg extends Xg{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.type=e,this.versions=t,"string"===typeof e&&(this.versionPath=e.split("."))}decode(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const r=this._setup(e,t,A);var n;"string"===typeof this.type?r.version=(n=t,this.versionPath.reduce(((e,t)=>e&&e[t]),n)):r.version=this.type.decode(e),this.versions.header&&this._parseFields(e,r,this.versions.header);const s=this.versions[r.version];if(null==s)throw new Error(`Unknown version ${r.version}`);return s instanceof Mg?s.decode(e,t):(this._parseFields(e,r,s),null!=this.process&&this.process.call(r,e),r)}size(e,t){let A,r,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(!e)throw new Error("Not a fixed size");null!=this.preEncode&&this.preEncode.call(e);const s={parent:t,val:e,pointerSize:0};let i=0;if("string"!==typeof this.type&&(i+=this.type.size(e.version,s)),this.versions.header)for(A in this.versions.header)r=this.versions.header[A],null!=r.size&&(i+=r.size(e[A],s));const o=this.versions[e.version];if(null==o)throw new Error(`Unknown version ${e.version}`);for(A in o)r=o[A],null!=r.size&&(i+=r.size(e[A],s));return n&&(i+=s.pointerSize),i}encode(e,t,A){let r,n;null!=this.preEncode&&this.preEncode.call(t,e);const s={pointers:[],startOffset:e.pos,parent:A,val:t,pointerSize:0};if(s.pointerOffset=e.pos+this.size(t,s,!1),"string"!==typeof this.type&&this.type.encode(e,t.version),this.versions.header)for(r in this.versions.header)n=this.versions.header[r],null!=n.encode&&n.encode(e,t[r],s);const i=this.versions[t.version];for(r in i)n=i[r],null!=n.encode&&n.encode(e,t[r],s);let o=0;for(;o<s.pointers.length;){const t=s.pointers[o++];t.type.encode(e,t.val,t.parent)}}}class zg extends hg{constructor(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(super(),this.offsetType=e,this.type=t,this.options=A,"void"===this.type&&(this.type=null),null==this.options.type&&(this.options.type="local"),null==this.options.allowNull&&(this.options.allowNull=!0),null==this.options.nullValue&&(this.options.nullValue=0),null==this.options.lazy&&(this.options.lazy=!1),this.options.relativeTo){if("function"!==typeof this.options.relativeTo)throw new Error("relativeTo option must be a function");this.relativeToGetter=A.relativeTo}}decode(e,t){const A=this.offsetType.decode(e,t);if(A===this.options.nullValue&&this.options.allowNull)return null;let r;switch(this.options.type){case"local":r=t._startOffset;break;case"immediate":r=e.pos-this.offsetType.size();break;case"parent":r=t.parent._startOffset;break;default:for(var n=t;n.parent;)n=n.parent;r=n._startOffset||0}this.options.relativeTo&&(r+=this.relativeToGetter(t));const s=A+r;if(null!=this.type){let A=null;const r=()=>{if(null!=A)return A;const{pos:r}=e;return e.pos=s,A=this.type.decode(e,t),e.pos=r,A};return this.options.lazy?new Dg({get:r}):r()}return s}size(e,t){const A=t;switch(this.options.type){case"local":case"immediate":break;case"parent":t=t.parent;break;default:for(;t.parent;)t=t.parent}let{type:r}=this;if(null==r){if(!(e instanceof Rg))throw new Error("Must be a VoidPointer");({type:r}=e),e=e.value}if(e&&t){let n=r.size(e,A);t.pointerSize+=n}return this.offsetType.size()}encode(e,t,A){let r;const n=A;if(null==t)return void this.offsetType.encode(e,this.options.nullValue);switch(this.options.type){case"local":r=A.startOffset;break;case"immediate":r=e.pos+this.offsetType.size(t,n);break;case"parent":r=(A=A.parent).startOffset;break;default:for(r=0;A.parent;)A=A.parent}this.options.relativeTo&&(r+=this.relativeToGetter(n.val)),this.offsetType.encode(e,A.pointerOffset-r);let{type:s}=this;if(null==s){if(!(t instanceof Rg))throw new Error("Must be a VoidPointer");({type:s}=t),t=t.value}return A.pointers.push({type:s,val:t,parent:n}),A.pointerOffset+=s.size(t,n)}}class Rg{constructor(e,t){this.type=e,this.value=t}}function jg(e,t,A){return t in e?Object.defineProperty(e,t,{value:A,enumerable:!0,configurable:!0,writable:!0}):e[t]=A,e}function Tg(e,t,A,r){var n,s=arguments.length,i=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,A):r;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)i=Reflect.decorate(e,t,A,r);else for(var o=e.length-1;o>=0;o--)(n=e[o])&&(i=(s<3?n(i):s>3?n(t,A,i):n(t,A))||i);return s>3&&i&&Object.defineProperty(t,A,i),i}Object.create;Object.create;"function"===typeof SuppressedError&&SuppressedError;var Ug=A(122),Vg=A(4445),Og=A(2582);function Yg(e){return e&&e.__esModule?e.default:e}var Hg={};Hg=JSON.parse('{"categories":["Cc","Zs","Po","Sc","Ps","Pe","Sm","Pd","Nd","Lu","Sk","Pc","Ll","So","Lo","Pi","Cf","No","Pf","Lt","Lm","Mn","Me","Mc","Nl","Zl","Zp","Cs","Co"],"combiningClasses":["Not_Reordered","Above","Above_Right","Below","Attached_Above_Right","Attached_Below","Overlay","Iota_Subscript","Double_Below","Double_Above","Below_Right","Above_Left","CCC10","CCC11","CCC12","CCC13","CCC14","CCC15","CCC16","CCC17","CCC18","CCC19","CCC20","CCC21","CCC22","CCC23","CCC24","CCC25","CCC30","CCC31","CCC32","CCC27","CCC28","CCC29","CCC33","CCC34","CCC35","CCC36","Nukta","Virama","CCC84","CCC91","CCC103","CCC107","CCC118","CCC122","CCC129","CCC130","CCC132","Attached_Above","Below_Left","Left","Kana_Voicing","CCC26","Right"],"scripts":["Common","Latin","Bopomofo","Inherited","Greek","Coptic","Cyrillic","Armenian","Hebrew","Arabic","Syriac","Thaana","Nko","Samaritan","Mandaic","Devanagari","Bengali","Gurmukhi","Gujarati","Oriya","Tamil","Telugu","Kannada","Malayalam","Sinhala","Thai","Lao","Tibetan","Myanmar","Georgian","Hangul","Ethiopic","Cherokee","Canadian_Aboriginal","Ogham","Runic","Tagalog","Hanunoo","Buhid","Tagbanwa","Khmer","Mongolian","Limbu","Tai_Le","New_Tai_Lue","Buginese","Tai_Tham","Balinese","Sundanese","Batak","Lepcha","Ol_Chiki","Braille","Glagolitic","Tifinagh","Han","Hiragana","Katakana","Yi","Lisu","Vai","Bamum","Syloti_Nagri","Phags_Pa","Saurashtra","Kayah_Li","Rejang","Javanese","Cham","Tai_Viet","Meetei_Mayek","null","Linear_B","Lycian","Carian","Old_Italic","Gothic","Old_Permic","Ugaritic","Old_Persian","Deseret","Shavian","Osmanya","Osage","Elbasan","Caucasian_Albanian","Linear_A","Cypriot","Imperial_Aramaic","Palmyrene","Nabataean","Hatran","Phoenician","Lydian","Meroitic_Hieroglyphs","Meroitic_Cursive","Kharoshthi","Old_South_Arabian","Old_North_Arabian","Manichaean","Avestan","Inscriptional_Parthian","Inscriptional_Pahlavi","Psalter_Pahlavi","Old_Turkic","Old_Hungarian","Hanifi_Rohingya","Old_Sogdian","Sogdian","Elymaic","Brahmi","Kaithi","Sora_Sompeng","Chakma","Mahajani","Sharada","Khojki","Multani","Khudawadi","Grantha","Newa","Tirhuta","Siddham","Modi","Takri","Ahom","Dogra","Warang_Citi","Nandinagari","Zanabazar_Square","Soyombo","Pau_Cin_Hau","Bhaiksuki","Marchen","Masaram_Gondi","Gunjala_Gondi","Makasar","Cuneiform","Egyptian_Hieroglyphs","Anatolian_Hieroglyphs","Mro","Bassa_Vah","Pahawh_Hmong","Medefaidrin","Miao","Tangut","Nushu","Duployan","SignWriting","Nyiakeng_Puachue_Hmong","Wancho","Mende_Kikakui","Adlam"],"eaw":["N","Na","A","W","H","F"]}');const Kg=new Og(Vg.toByteArray("")),qg=Math.log2||(e=>Math.log(e)/Math.LN2),Jg=e=>qg(e)+1|0,_g=Jg(Yg(Hg).categories.length-1),$g=Jg(Yg(Hg).combiningClasses.length-1),ep=Jg(Yg(Hg).scripts.length-1),tp=Jg(Yg(Hg).eaw.length-1),Ap=$g+ep+tp+10,rp=ep+tp+10,np=tp+10,sp=(1<<_g)-1,ip=(1<<$g)-1,op=(1<<ep)-1;function ap(e){const t=Kg.get(e);return Yg(Hg).categories[t>>Ap&sp]}function lp(e){const t=Kg.get(e);return Yg(Hg).combiningClasses[t>>rp&ip]}function up(e){const t=Kg.get(e);return Yg(Hg).scripts[t>>np&op]}function cp(e){return"Nd"===ap(e)}function dp(e){const t=ap(e);return"Mn"===t||"Me"===t||"Mc"===t}var fp=A(8493),hp=A(224),gp=A(8680),pp=A(3245);function bp(e,t,A,r){Object.defineProperty(e,t,{get:A,set:r,enumerable:!0,configurable:!0})}function mp(e){return e&&e.__esModule?e.default:e}var vp={};bp(vp,"logErrors",(()=>yp)),bp(vp,"registerFormat",(()=>Bp)),bp(vp,"create",(()=>xp)),bp(vp,"defaultLanguage",(()=>Cp)),bp(vp,"setDefaultLanguage",(()=>Ep));let yp=!1,wp=[];function Bp(e){wp.push(e)}function xp(e,t){for(let A=0;A<wp.length;A++){let r=wp[A];if(r.probe(e)){let A=new r(new lg(e));return t?A.getFont(t):A}}throw new Error("Unknown font format")}let Cp="en";function Ep(){Cp=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"en"}function Np(e,t,A){if(A.get){let e=A.get;A.get=function(){let A=e.call(this);return Object.defineProperty(this,t,{value:A}),A}}else if("function"===typeof A.value){let e=A.value;return{get(){let A=new Map;function r(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];let s=r.length>0?r[0]:"value";if(A.has(s))return A.get(s);let i=e.apply(this,r);return A.set(s,i),i}return Object.defineProperty(this,t,{value:r}),r}}}}let Dp=new Xg({firstCode:bg,entryCount:bg,idDelta:wg,idRangeOffset:bg}),Qp=new Xg({startCharCode:vg,endCharCode:vg,glyphID:vg}),Pp=new Xg({startUnicodeValue:mg,additionalCount:pg}),Ip=new Xg({unicodeValue:mg,glyphID:bg}),Lp=new Qg(Pp,vg),kp=new Qg(Ip,vg),Gp=new Xg({varSelector:mg,defaultUVS:new zg(vg,Lp,{type:"parent"}),nonDefaultUVS:new zg(vg,kp,{type:"parent"})}),Fp=new Mg(bg,{0:{length:bg,language:bg,codeMap:new Pg(pg,256)},2:{length:bg,language:bg,subHeaderKeys:new Qg(bg,256),subHeaderCount:e=>Math.max.apply(Math,e.subHeaderKeys),subHeaders:new Pg(Dp,"subHeaderCount"),glyphIndexArray:new Pg(bg,"subHeaderCount")},4:{length:bg,language:bg,segCountX2:bg,segCount:e=>e.segCountX2>>1,searchRange:bg,entrySelector:bg,rangeShift:bg,endCode:new Pg(bg,"segCount"),reservedPad:new Fg(bg),startCode:new Pg(bg,"segCount"),idDelta:new Pg(wg,"segCount"),idRangeOffset:new Pg(bg,"segCount"),glyphIndexArray:new Pg(bg,(e=>(e.length-e._currentOffset)/2))},6:{length:bg,language:bg,firstCode:bg,entryCount:bg,glyphIndices:new Pg(bg,"entryCount")},8:{reserved:new Fg(bg),length:vg,language:bg,is32:new Pg(pg,8192),nGroups:vg,groups:new Pg(Qp,"nGroups")},10:{reserved:new Fg(bg),length:vg,language:vg,firstCode:vg,entryCount:vg,glyphIndices:new Pg(bg,"numChars")},12:{reserved:new Fg(bg),length:vg,language:vg,nGroups:vg,groups:new Pg(Qp,"nGroups")},13:{reserved:new Fg(bg),length:vg,language:vg,nGroups:vg,groups:new Pg(Qp,"nGroups")},14:{length:vg,numRecords:vg,varSelectors:new Pg(Gp,"numRecords")}}),Sp=new Xg({platformID:bg,encodingID:bg,table:new zg(vg,Fp,{type:"parent",lazy:!0})});var Wp=new Xg({version:bg,numSubtables:bg,tables:new Qg(Sp,"numSubtables")}),Zp=new Xg({version:Bg,revision:Bg,checkSumAdjustment:vg,magicNumber:vg,flags:bg,unitsPerEm:bg,created:new Qg(Bg,2),modified:new Qg(Bg,2),xMin:wg,yMin:wg,xMax:wg,yMax:wg,macStyle:new Lg(bg,["bold","italic","underline","outline","shadow","condensed","extended"]),lowestRecPPEM:bg,fontDirectionHint:wg,indexToLocFormat:wg,glyphDataFormat:wg}),Xp=new Xg({version:Bg,ascent:wg,descent:wg,lineGap:wg,advanceWidthMax:bg,minLeftSideBearing:wg,minRightSideBearing:wg,xMaxExtent:wg,caretSlopeRise:wg,caretSlopeRun:wg,caretOffset:wg,reserved:new Fg(wg,4),metricDataFormat:wg,numberOfMetrics:bg});let Mp=new Xg({advance:bg,bearing:wg});var zp=new Xg({metrics:new Pg(Mp,(e=>e.parent.hhea.numberOfMetrics)),bearings:new Pg(wg,(e=>e.parent.maxp.numGlyphs-e.parent.hhea.numberOfMetrics))}),Rp=new Xg({version:Bg,numGlyphs:bg,maxPoints:bg,maxContours:bg,maxComponentPoints:bg,maxComponentContours:bg,maxZones:bg,maxTwilightPoints:bg,maxStorage:bg,maxFunctionDefs:bg,maxInstructionDefs:bg,maxStackElements:bg,maxSizeOfInstructions:bg,maxComponentElements:bg,maxComponentDepth:bg});function jp(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return 1===e&&Hp[A]?Hp[A]:Yp[e][t]}const Tp=new Set(["x-mac-roman","x-mac-cyrillic","iso-8859-6","iso-8859-8"]),Up={"x-mac-croatian":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\u0160\u2122\xb4\xa8\u2260\u017d\xd8\u221e\xb1\u2264\u2265\u2206\xb5\u2202\u2211\u220f\u0161\u222b\xaa\xba\u03a9\u017e\xf8\xbf\xa1\xac\u221a\u0192\u2248\u0106\xab\u010c\u2026 \xc0\xc3\xd5\u0152\u0153\u0110\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\uf8ff\xa9\u2044\u20ac\u2039\u203a\xc6\xbb\u2013\xb7\u201a\u201e\u2030\xc2\u0107\xc1\u010d\xc8\xcd\xce\xcf\xcc\xd3\xd4\u0111\xd2\xda\xdb\xd9\u0131\u02c6\u02dc\xaf\u03c0\xcb\u02da\xb8\xca\xe6\u02c7","x-mac-gaelic":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u1e02\xb1\u2264\u2265\u1e03\u010a\u010b\u1e0a\u1e0b\u1e1e\u1e1f\u0120\u0121\u1e40\xe6\xf8\u1e41\u1e56\u1e57\u027c\u0192\u017f\u1e60\xab\xbb\u2026 \xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\u1e61\u1e9b\xff\u0178\u1e6a\u20ac\u2039\u203a\u0176\u0177\u1e6b\xb7\u1ef2\u1ef3\u204a\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\u2663\xd2\xda\xdb\xd9\u0131\xdd\xfd\u0174\u0175\u1e84\u1e85\u1e80\u1e81\u1e82\u1e83","x-mac-greek":"\xc4\xb9\xb2\xc9\xb3\xd6\xdc\u0385\xe0\xe2\xe4\u0384\xa8\xe7\xe9\xe8\xea\xeb\xa3\u2122\xee\xef\u2022\xbd\u2030\xf4\xf6\xa6\u20ac\xf9\xfb\xfc\u2020\u0393\u0394\u0398\u039b\u039e\u03a0\xdf\xae\xa9\u03a3\u03aa\xa7\u2260\xb0\xb7\u0391\xb1\u2264\u2265\xa5\u0392\u0395\u0396\u0397\u0399\u039a\u039c\u03a6\u03ab\u03a8\u03a9\u03ac\u039d\xac\u039f\u03a1\u2248\u03a4\xab\xbb\u2026 \u03a5\u03a7\u0386\u0388\u0153\u2013\u2015\u201c\u201d\u2018\u2019\xf7\u0389\u038a\u038c\u038e\u03ad\u03ae\u03af\u03cc\u038f\u03cd\u03b1\u03b2\u03c8\u03b4\u03b5\u03c6\u03b3\u03b7\u03b9\u03be\u03ba\u03bb\u03bc\u03bd\u03bf\u03c0\u03ce\u03c1\u03c3\u03c4\u03b8\u03c9\u03c2\u03c7\u03c5\u03b6\u03ca\u03cb\u0390\u03b0\xad","x-mac-icelandic":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\xdd\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221e\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220f\u03c0\u222b\xaa\xba\u03a9\xe6\xf8\xbf\xa1\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026 \xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\xff\u0178\u2044\u20ac\xd0\xf0\xde\xfe\xfd\xb7\u201a\u201e\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uf8ff\xd2\xda\xdb\xd9\u0131\u02c6\u02dc\xaf\u02d8\u02d9\u02da\xb8\u02dd\u02db\u02c7","x-mac-inuit":"\u1403\u1404\u1405\u1406\u140a\u140b\u1431\u1432\u1433\u1434\u1438\u1439\u1449\u144e\u144f\u1450\u1451\u1455\u1456\u1466\u146d\u146e\u146f\u1470\u1472\u1473\u1483\u148b\u148c\u148d\u148e\u1490\u1491\xb0\u14a1\u14a5\u14a6\u2022\xb6\u14a7\xae\xa9\u2122\u14a8\u14aa\u14ab\u14bb\u14c2\u14c3\u14c4\u14c5\u14c7\u14c8\u14d0\u14ef\u14f0\u14f1\u14f2\u14f4\u14f5\u1505\u14d5\u14d6\u14d7\u14d8\u14da\u14db\u14ea\u1528\u1529\u152a\u152b\u152d\u2026 \u152e\u153e\u1555\u1556\u1557\u2013\u2014\u201c\u201d\u2018\u2019\u1558\u1559\u155a\u155d\u1546\u1547\u1548\u1549\u154b\u154c\u1550\u157f\u1580\u1581\u1582\u1583\u1584\u1585\u158f\u1590\u1591\u1592\u1593\u1594\u1595\u1671\u1672\u1673\u1674\u1675\u1676\u1596\u15a0\u15a1\u15a2\u15a3\u15a4\u15a5\u15a6\u157c\u0141\u0142","x-mac-ce":"\xc4\u0100\u0101\xc9\u0104\xd6\xdc\xe1\u0105\u010c\xe4\u010d\u0106\u0107\xe9\u0179\u017a\u010e\xed\u010f\u0112\u0113\u0116\xf3\u0117\xf4\xf6\xf5\xfa\u011a\u011b\xfc\u2020\xb0\u0118\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\u0119\xa8\u2260\u0123\u012e\u012f\u012a\u2264\u2265\u012b\u0136\u2202\u2211\u0142\u013b\u013c\u013d\u013e\u0139\u013a\u0145\u0146\u0143\xac\u221a\u0144\u0147\u2206\xab\xbb\u2026 \u0148\u0150\xd5\u0151\u014c\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\u014d\u0154\u0155\u0158\u2039\u203a\u0159\u0156\u0157\u0160\u201a\u201e\u0161\u015a\u015b\xc1\u0164\u0165\xcd\u017d\u017e\u016a\xd3\xd4\u016b\u016e\xda\u016f\u0170\u0171\u0172\u0173\xdd\xfd\u0137\u017b\u0141\u017c\u0122\u02c7","x-mac-romanian":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\u0102\u0218\u221e\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220f\u03c0\u222b\xaa\xba\u03a9\u0103\u0219\xbf\xa1\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026 \xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\xff\u0178\u2044\u20ac\u2039\u203a\u021a\u021b\u2021\xb7\u201a\u201e\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uf8ff\xd2\xda\xdb\xd9\u0131\u02c6\u02dc\xaf\u02d8\u02d9\u02da\xb8\u02dd\u02db\u02c7","x-mac-turkish":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221e\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220f\u03c0\u222b\xaa\xba\u03a9\xe6\xf8\xbf\xa1\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026 \xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\xff\u0178\u011e\u011f\u0130\u0131\u015e\u015f\u2021\xb7\u201a\u201e\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uf8ff\xd2\xda\xdb\xd9\uf8a0\u02c6\u02dc\xaf\u02d8\u02d9\u02da\xb8\u02dd\u02db\u02c7"},Vp=new Map;function Op(e){let t=Vp.get(e);if(t)return t;let A=Up[e];if(A){let t=new Map;for(let e=0;e<A.length;e++)t.set(A.charCodeAt(e),128+e);return Vp.set(e,t),t}if(Tp.has(e)){let t=new TextDecoder(e),A=new Uint8Array(128);for(let e=0;e<128;e++)A[e]=128+e;let r=new Map,n=t.decode(A);for(let e=0;e<128;e++)r.set(n.charCodeAt(e),128+e);return Vp.set(e,r),r}}const Yp=[["utf-16be","utf-16be","utf-16be","utf-16be","utf-16be","utf-16be","utf-16be"],["x-mac-roman","shift-jis","big5","euc-kr","iso-8859-6","iso-8859-8","x-mac-greek","x-mac-cyrillic","x-mac-symbol","x-mac-devanagari","x-mac-gurmukhi","x-mac-gujarati","Oriya","Bengali","Tamil","Telugu","Kannada","Malayalam","Sinhalese","Burmese","Khmer","iso-8859-11","Laotian","Georgian","Armenian","gbk","Tibetan","Mongolian","Geez","x-mac-ce","Vietnamese","Sindhi"],["ascii",null,"iso-8859-1"],["symbol","utf-16be","shift-jis","gb18030","big5","euc-kr","johab",null,null,null,"utf-16be"]],Hp={15:"x-mac-icelandic",17:"x-mac-turkish",18:"x-mac-croatian",24:"x-mac-ce",25:"x-mac-ce",26:"x-mac-ce",27:"x-mac-ce",28:"x-mac-ce",30:"x-mac-icelandic",37:"x-mac-romanian",38:"x-mac-ce",39:"x-mac-ce",40:"x-mac-ce",143:"x-mac-inuit",146:"x-mac-gaelic"},Kp=[[],{0:"en",30:"fo",60:"ks",90:"rw",1:"fr",31:"fa",61:"ku",91:"rn",2:"de",32:"ru",62:"sd",92:"ny",3:"it",33:"zh",63:"bo",93:"mg",4:"nl",34:"nl-BE",64:"ne",94:"eo",5:"sv",35:"ga",65:"sa",128:"cy",6:"es",36:"sq",66:"mr",129:"eu",7:"da",37:"ro",67:"bn",130:"ca",8:"pt",38:"cz",68:"as",131:"la",9:"no",39:"sk",69:"gu",132:"qu",10:"he",40:"si",70:"pa",133:"gn",11:"ja",41:"yi",71:"or",134:"ay",12:"ar",42:"sr",72:"ml",135:"tt",13:"fi",43:"mk",73:"kn",136:"ug",14:"el",44:"bg",74:"ta",137:"dz",15:"is",45:"uk",75:"te",138:"jv",16:"mt",46:"be",76:"si",139:"su",17:"tr",47:"uz",77:"my",140:"gl",18:"hr",48:"kk",78:"km",141:"af",19:"zh-Hant",49:"az-Cyrl",79:"lo",142:"br",20:"ur",50:"az-Arab",80:"vi",143:"iu",21:"hi",51:"hy",81:"id",144:"gd",22:"th",52:"ka",82:"tl",145:"gv",23:"ko",53:"mo",83:"ms",146:"ga",24:"lt",54:"ky",84:"ms-Arab",147:"to",25:"pl",55:"tg",85:"am",148:"el-polyton",26:"hu",56:"tk",86:"ti",149:"kl",27:"es",57:"mn-CN",87:"om",150:"az",28:"lv",58:"mn",88:"so",151:"nn",29:"se",59:"ps",89:"sw"},[],{1078:"af",16393:"en-IN",1159:"rw",1074:"tn",1052:"sq",6153:"en-IE",1089:"sw",1115:"si",1156:"gsw",8201:"en-JM",1111:"kok",1051:"sk",1118:"am",17417:"en-MY",1042:"ko",1060:"sl",5121:"ar-DZ",5129:"en-NZ",1088:"ky",11274:"es-AR",15361:"ar-BH",13321:"en-PH",1108:"lo",16394:"es-BO",3073:"ar",18441:"en-SG",1062:"lv",13322:"es-CL",2049:"ar-IQ",7177:"en-ZA",1063:"lt",9226:"es-CO",11265:"ar-JO",11273:"en-TT",2094:"dsb",5130:"es-CR",13313:"ar-KW",2057:"en-GB",1134:"lb",7178:"es-DO",12289:"ar-LB",1033:"en",1071:"mk",12298:"es-EC",4097:"ar-LY",12297:"en-ZW",2110:"ms-BN",17418:"es-SV",6145:"ary",1061:"et",1086:"ms",4106:"es-GT",8193:"ar-OM",1080:"fo",1100:"ml",18442:"es-HN",16385:"ar-QA",1124:"fil",1082:"mt",2058:"es-MX",1025:"ar-SA",1035:"fi",1153:"mi",19466:"es-NI",10241:"ar-SY",2060:"fr-BE",1146:"arn",6154:"es-PA",7169:"aeb",3084:"fr-CA",1102:"mr",15370:"es-PY",14337:"ar-AE",1036:"fr",1148:"moh",10250:"es-PE",9217:"ar-YE",5132:"fr-LU",1104:"mn",20490:"es-PR",1067:"hy",6156:"fr-MC",2128:"mn-CN",3082:"es",1101:"as",4108:"fr-CH",1121:"ne",1034:"es",2092:"az-Cyrl",1122:"fy",1044:"nb",21514:"es-US",1068:"az",1110:"gl",2068:"nn",14346:"es-UY",1133:"ba",1079:"ka",1154:"oc",8202:"es-VE",1069:"eu",3079:"de-AT",1096:"or",2077:"sv-FI",1059:"be",1031:"de",1123:"ps",1053:"sv",2117:"bn",5127:"de-LI",1045:"pl",1114:"syr",1093:"bn-IN",4103:"de-LU",1046:"pt",1064:"tg",8218:"bs-Cyrl",2055:"de-CH",2070:"pt-PT",2143:"tzm",5146:"bs",1032:"el",1094:"pa",1097:"ta",1150:"br",1135:"kl",1131:"qu-BO",1092:"tt",1026:"bg",1095:"gu",2155:"qu-EC",1098:"te",1027:"ca",1128:"ha",3179:"qu",1054:"th",3076:"zh-HK",1037:"he",1048:"ro",1105:"bo",5124:"zh-MO",1081:"hi",1047:"rm",1055:"tr",2052:"zh",1038:"hu",1049:"ru",1090:"tk",4100:"zh-SG",1039:"is",9275:"smn",1152:"ug",1028:"zh-TW",1136:"ig",4155:"smj-NO",1058:"uk",1155:"co",1057:"id",5179:"smj",1070:"hsb",1050:"hr",1117:"iu",3131:"se-FI",1056:"ur",4122:"hr-BA",2141:"iu-Latn",1083:"se",2115:"uz-Cyrl",1029:"cs",2108:"ga",2107:"se-SE",1091:"uz",1030:"da",1076:"xh",8251:"sms",1066:"vi",1164:"prs",1077:"zu",6203:"sma-NO",1106:"cy",1125:"dv",1040:"it",7227:"sms",1160:"wo",2067:"nl-BE",2064:"it-CH",1103:"sa",1157:"sah",1043:"nl",1041:"ja",7194:"sr-Cyrl-BA",1144:"ii",3081:"en-AU",1099:"kn",3098:"sr",1130:"yo",10249:"en-BZ",1087:"kk",6170:"sr-Latn-BA",4105:"en-CA",1107:"km",2074:"sr-Latn",9225:"en-029",1158:"quc",1132:"nso"}];let qp=new Xg({platformID:bg,encodingID:bg,languageID:bg,nameID:bg,length:bg,string:new zg(bg,new Sg("length",(e=>jp(e.platformID,e.encodingID,e.languageID))),{type:"parent",relativeTo:e=>e.parent.stringOffset,allowNull:!1})}),Jp=new Xg({length:bg,tag:new zg(bg,new Sg("length","utf16be"),{type:"parent",relativeTo:e=>e.stringOffset})});var _p=new Mg(bg,{0:{count:bg,stringOffset:bg,records:new Qg(qp,"count")},1:{count:bg,stringOffset:bg,records:new Qg(qp,"count"),langTagCount:bg,langTags:new Qg(Jp,"langTagCount")}}),$p=_p;const eb=["copyright","fontFamily","fontSubfamily","uniqueSubfamily","fullName","version","postscriptName","trademark","manufacturer","designer","description","vendorURL","designerURL","license","licenseURL",null,"preferredFamily","preferredSubfamily","compatibleFull","sampleText","postscriptCIDFontName","wwsFamilyName","wwsSubfamilyName"];_p.process=function(e){var t={};for(let A of this.records){let e=Kp[A.platformID][A.languageID];null==e&&null!=this.langTags&&A.languageID>=32768&&(e=this.langTags[A.languageID-32768].tag),null==e&&(e=A.platformID+"-"+A.languageID);let r=A.nameID>=256?"fontFeatures":eb[A.nameID]||A.nameID;null==t[r]&&(t[r]={});let n=t[r];A.nameID>=256&&(n=n[A.nameID]||(n[A.nameID]={})),"string"!==typeof A.string&&"string"===typeof n[e]||(n[e]=A.string)}this.records=t},_p.preEncode=function(){if(Array.isArray(this.records))return;this.version=0;let e=[];for(let t in this.records){let A=this.records[t];"fontFeatures"!==t&&(e.push({platformID:3,encodingID:1,languageID:1033,nameID:eb.indexOf(t),length:2*A.en.length,string:A.en}),"postscriptName"===t&&e.push({platformID:1,encodingID:0,languageID:0,nameID:eb.indexOf(t),length:A.en.length,string:A.en}))}this.records=e,this.count=e.length,this.stringOffset=_p.size(this,null,!1)};var tb=new Mg(bg,{header:{xAvgCharWidth:wg,usWeightClass:bg,usWidthClass:bg,fsType:new Lg(bg,[null,"noEmbedding","viewOnly","editable",null,null,null,null,"noSubsetting","bitmapOnly"]),ySubscriptXSize:wg,ySubscriptYSize:wg,ySubscriptXOffset:wg,ySubscriptYOffset:wg,ySuperscriptXSize:wg,ySuperscriptYSize:wg,ySuperscriptXOffset:wg,ySuperscriptYOffset:wg,yStrikeoutSize:wg,yStrikeoutPosition:wg,sFamilyClass:wg,panose:new Qg(pg,10),ulCharRange:new Qg(vg,4),vendorID:new Sg(4),fsSelection:new Lg(bg,["italic","underscore","negative","outlined","strikeout","bold","regular","useTypoMetrics","wws","oblique"]),usFirstCharIndex:bg,usLastCharIndex:bg},0:{},1:{typoAscender:wg,typoDescender:wg,typoLineGap:wg,winAscent:bg,winDescent:bg,codePageRange:new Qg(vg,2)},2:{typoAscender:wg,typoDescender:wg,typoLineGap:wg,winAscent:bg,winDescent:bg,codePageRange:new Qg(vg,2),xHeight:wg,capHeight:wg,defaultChar:bg,breakChar:bg,maxContent:bg},5:{typoAscender:wg,typoDescender:wg,typoLineGap:wg,winAscent:bg,winDescent:bg,codePageRange:new Qg(vg,2),xHeight:wg,capHeight:wg,defaultChar:bg,breakChar:bg,maxContent:bg,usLowerOpticalPointSize:bg,usUpperOpticalPointSize:bg}});let Ab=tb.versions;Ab[3]=Ab[4]=Ab[2];var rb=tb,nb=new Mg(Eg,{header:{italicAngle:Eg,underlinePosition:wg,underlineThickness:wg,isFixedPitch:vg,minMemType42:vg,maxMemType42:vg,minMemType1:vg,maxMemType1:vg},1:{},2:{numberOfGlyphs:bg,glyphNameIndex:new Qg(bg,"numberOfGlyphs"),names:new Qg(new Sg(pg))},2.5:{numberOfGlyphs:bg,offsets:new Qg(pg,"numberOfGlyphs")},3:{},4:{map:new Qg(vg,(e=>e.parent.maxp.numGlyphs))}}),sb=new Xg({controlValues:new Qg(wg)}),ib=new Xg({instructions:new Qg(pg)});let ob=new Mg("head.indexToLocFormat",{0:{offsets:new Qg(bg)},1:{offsets:new Qg(vg)}});ob.process=function(){if(0===this.version&&!this._processed){for(let e=0;e<this.offsets.length;e++)this.offsets[e]<<=1;this._processed=!0}},ob.preEncode=function(){if(0===this.version&&!1!==this._processed){for(let e=0;e<this.offsets.length;e++)this.offsets[e]>>>=1;this._processed=!1}};var ab=ob,lb=new Xg({controlValueProgram:new Qg(pg)}),ub=new Qg(new kg);class cb{getCFFVersion(e){for(;e&&!e.hdrSize;)e=e.parent;return e?e.version:-1}decode(e,t){let A=this.getCFFVersion(t)>=2?e.readUInt32BE():e.readUInt16BE();if(0===A)return[];let r,n=e.readUInt8();if(1===n)r=pg;else if(2===n)r=bg;else if(3===n)r=mg;else{if(4!==n)throw new Error(`Bad offset size in CFFIndex: ${n} ${e.pos}`);r=vg}let s=[],i=e.pos+(A+1)*n-1,o=r.decode(e);for(let a=0;a<A;a++){let A=r.decode(e);if(null!=this.type){let r=e.pos;e.pos=i+o,t.length=A-o,s.push(this.type.decode(e,t)),e.pos=r}else s.push({offset:i+o,length:A-o});o=A}return e.pos=i+o,s}size(e,t){let A=2;if(0===e.length)return A;let r,n=this.type||new kg,s=1;for(let i=0;i<e.length;i++){let A=e[i];s+=n.size(A,t)}if(s<=255)r=pg;else if(s<=65535)r=bg;else if(s<=16777215)r=mg;else{if(!(s<=4294967295))throw new Error("Bad offset in CFFIndex");r=vg}return A+=1+r.size()*(e.length+1),A+=s-1,A}encode(e,t,A){if(e.writeUInt16BE(t.length),0===t.length)return;let r,n=this.type||new kg,s=[],i=1;for(let o of t){let e=n.size(o,A);s.push(e),i+=e}if(i<=255)r=pg;else if(i<=65535)r=bg;else if(i<=16777215)r=mg;else{if(!(i<=4294967295))throw new Error("Bad offset in CFFIndex");r=vg}e.writeUInt8(r.size()),i=1,r.encode(e,i);for(let o of s)i+=o,r.encode(e,i);for(let o of t)n.encode(e,o,A)}constructor(e){this.type=e}}const db=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"],fb={".":10,E:11,"E-":12,"-":14};class hb{static decode(e,t){if(32<=t&&t<=246)return t-139;if(247<=t&&t<=250)return 256*(t-247)+e.readUInt8()+108;if(251<=t&&t<=254)return 256*-(t-251)-e.readUInt8()-108;if(28===t)return e.readInt16BE();if(29===t)return e.readInt32BE();if(30===t){let t="";for(;;){let A=e.readUInt8(),r=A>>4;if(15===r)break;t+=db[r];let n=15&A;if(15===n)break;t+=db[n]}return parseFloat(t)}return null}static size(e){if(e.forceLarge&&(e=32768),(0|e)!==e){let t=""+e;return 1+Math.ceil((t.length+1)/2)}return-107<=e&&e<=107?1:108<=e&&e<=1131||-1131<=e&&e<=-108?2:-32768<=e&&e<=32767?3:5}static encode(e,t){let A=Number(t);if(t.forceLarge)return e.writeUInt8(29),e.writeInt32BE(A);if((0|A)===A)return-107<=A&&A<=107?e.writeUInt8(A+139):108<=A&&A<=1131?(A-=108,e.writeUInt8(247+(A>>8)),e.writeUInt8(255&A)):-1131<=A&&A<=-108?(A=-A-108,e.writeUInt8(251+(A>>8)),e.writeUInt8(255&A)):-32768<=A&&A<=32767?(e.writeUInt8(28),e.writeInt16BE(A)):(e.writeUInt8(29),e.writeInt32BE(A));{e.writeUInt8(30);let t=""+A;for(let A=0;A<t.length;A+=2){let n=t[A],s=fb[n]||+n;if(A===t.length-1)var r=15;else{let e=t[A+1];r=fb[e]||+e}e.writeUInt8(s<<4|15&r)}if(15!==r)return e.writeUInt8(240)}}}class gb{decodeOperands(e,t,A,r){if(Array.isArray(e))return r.map(((r,n)=>this.decodeOperands(e[n],t,A,[r])));if(null!=e.decode)return e.decode(t,A,r);switch(e){case"number":case"offset":case"sid":return r[0];case"boolean":return!!r[0];default:return r}}encodeOperands(e,t,A,r){return Array.isArray(e)?r.map(((r,n)=>this.encodeOperands(e[n],t,A,r)[0])):null!=e.encode?e.encode(t,r,A):"number"===typeof r?[r]:"boolean"===typeof r?[+r]:Array.isArray(r)?r:[r]}decode(e,t){let A=e.pos+t.length,r={},n=[];Object.defineProperties(r,{parent:{value:t},_startOffset:{value:e.pos}});for(let s in this.fields){let e=this.fields[s];r[e[1]]=e[3]}for(;e.pos<A;){let t=e.readUInt8();if(t<28){12===t&&(t=t<<8|e.readUInt8());let A=this.fields[t];if(!A)throw new Error(`Unknown operator ${t}`);let s=this.decodeOperands(A[2],e,r,n);null!=s&&(s instanceof Dg?Object.defineProperty(r,A[1],s):r[A[1]]=s),n=[]}else n.push(hb.decode(e,t))}return r}size(e,t){let A=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r={parent:t,val:e,pointerSize:0,startOffset:t.startOffset||0},n=0;for(let s in this.fields){let t=this.fields[s],A=e[t[1]];if(null==A||Ug(A,t[3]))continue;let i=this.encodeOperands(t[2],null,r,A);for(let e of i)n+=hb.size(e);n+=(Array.isArray(t[0])?t[0]:[t[0]]).length}return A&&(n+=r.pointerSize),n}encode(e,t,A){let r={pointers:[],startOffset:e.pos,parent:A,val:t,pointerSize:0};r.pointerOffset=e.pos+this.size(t,r,!1);for(let s of this.ops){let A=t[s[1]];if(null==A||Ug(A,s[3]))continue;let n=this.encodeOperands(s[2],e,r,A);for(let t of n)hb.encode(e,t);let i=Array.isArray(s[0])?s[0]:[s[0]];for(let t of i)e.writeUInt8(t)}let n=0;for(;n<r.pointers.length;){let t=r.pointers[n++];t.type.encode(e,t.val,t.parent)}}constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this.ops=e,this.fields={};for(let t of e){let e=Array.isArray(t[0])?t[0][0]<<8|t[0][1]:t[0];this.fields[e]=t}}}class pb extends zg{decode(e,t,A){return this.offsetType={decode:()=>A[0]},super.decode(e,t,A)}encode(e,t,A){if(!e)return this.offsetType={size:()=>0},this.size(t,A),[new bb(0)];let r=null;return this.offsetType={encode:(e,t)=>r=t},super.encode(e,t,A),[new bb(r)]}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};null==t.type&&(t.type="global"),super(null,e,t)}}class bb{valueOf(){return this.val}constructor(e){this.val=e,this.forceLarge=!0}}var mb=new gb([[6,"BlueValues","delta",null],[7,"OtherBlues","delta",null],[8,"FamilyBlues","delta",null],[9,"FamilyOtherBlues","delta",null],[[12,9],"BlueScale","number",.039625],[[12,10],"BlueShift","number",7],[[12,11],"BlueFuzz","number",1],[10,"StdHW","number",null],[11,"StdVW","number",null],[[12,12],"StemSnapH","delta",null],[[12,13],"StemSnapV","delta",null],[[12,14],"ForceBold","boolean",!1],[[12,17],"LanguageGroup","number",0],[[12,18],"ExpansionFactor","number",.06],[[12,19],"initialRandomSeed","number",0],[20,"defaultWidthX","number",0],[21,"nominalWidthX","number",0],[22,"vsindex","number",0],[23,"blend",class{static decode(e,t,A){let r=A.pop();for(;A.length>r;)A.pop()}},null],[19,"Subrs",new pb(new cb,{type:"local"}),null]]),vb=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"];let yb=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"],wb=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron"],Bb=new Xg({reserved:new Fg(bg),reqFeatureIndex:bg,featureCount:bg,featureIndexes:new Qg(bg,"featureCount")}),xb=new Xg({tag:new Sg(4),langSys:new zg(bg,Bb,{type:"parent"})}),Cb=new Xg({defaultLangSys:new zg(bg,Bb),count:bg,langSysRecords:new Qg(xb,"count")}),Eb=new Xg({tag:new Sg(4),script:new zg(bg,Cb,{type:"parent"})}),Nb=new Qg(Eb,bg),Db=new Xg({version:bg,nameID:bg}),Qb=new Xg({featureParams:new zg(bg,Db),lookupCount:bg,lookupListIndexes:new Qg(bg,"lookupCount")}),Pb=new Xg({tag:new Sg(4),feature:new zg(bg,Qb,{type:"parent"})}),Ib=new Qg(Pb,bg),Lb=new Xg({markAttachmentType:pg,flags:new Lg(pg,["rightToLeft","ignoreBaseGlyphs","ignoreLigatures","ignoreMarks","useMarkFilteringSet"])});function kb(e){let t=new Xg({lookupType:bg,flags:Lb,subTableCount:bg,subTables:new Qg(new zg(bg,e),"subTableCount"),markFilteringSet:new Gg(bg,(e=>e.flags.flags.useMarkFilteringSet))});return new Pg(new zg(bg,t),bg)}let Gb=new Xg({start:bg,end:bg,startCoverageIndex:bg}),Fb=new Mg(bg,{1:{glyphCount:bg,glyphs:new Qg(bg,"glyphCount")},2:{rangeCount:bg,rangeRecords:new Qg(Gb,"rangeCount")}}),Sb=new Xg({start:bg,end:bg,class:bg}),Wb=new Mg(bg,{1:{startGlyph:bg,glyphCount:bg,classValueArray:new Qg(bg,"glyphCount")},2:{classRangeCount:bg,classRangeRecord:new Qg(Sb,"classRangeCount")}}),Zb=new Xg({a:bg,b:bg,deltaFormat:bg}),Xb=new Xg({sequenceIndex:bg,lookupListIndex:bg}),Mb=new Xg({glyphCount:bg,lookupCount:bg,input:new Qg(bg,(e=>e.glyphCount-1)),lookupRecords:new Qg(Xb,"lookupCount")}),zb=new Qg(new zg(bg,Mb),bg),Rb=new Xg({glyphCount:bg,lookupCount:bg,classes:new Qg(bg,(e=>e.glyphCount-1)),lookupRecords:new Qg(Xb,"lookupCount")}),jb=new Qg(new zg(bg,Rb),bg),Tb=new Mg(bg,{1:{coverage:new zg(bg,Fb),ruleSetCount:bg,ruleSets:new Qg(new zg(bg,zb),"ruleSetCount")},2:{coverage:new zg(bg,Fb),classDef:new zg(bg,Wb),classSetCnt:bg,classSet:new Qg(new zg(bg,jb),"classSetCnt")},3:{glyphCount:bg,lookupCount:bg,coverages:new Qg(new zg(bg,Fb),"glyphCount"),lookupRecords:new Qg(Xb,"lookupCount")}}),Ub=new Xg({backtrackGlyphCount:bg,backtrack:new Qg(bg,"backtrackGlyphCount"),inputGlyphCount:bg,input:new Qg(bg,(e=>e.inputGlyphCount-1)),lookaheadGlyphCount:bg,lookahead:new Qg(bg,"lookaheadGlyphCount"),lookupCount:bg,lookupRecords:new Qg(Xb,"lookupCount")}),Vb=new Qg(new zg(bg,Ub),bg),Ob=new Mg(bg,{1:{coverage:new zg(bg,Fb),chainCount:bg,chainRuleSets:new Qg(new zg(bg,Vb),"chainCount")},2:{coverage:new zg(bg,Fb),backtrackClassDef:new zg(bg,Wb),inputClassDef:new zg(bg,Wb),lookaheadClassDef:new zg(bg,Wb),chainCount:bg,chainClassSet:new Qg(new zg(bg,Vb),"chainCount")},3:{backtrackGlyphCount:bg,backtrackCoverage:new Qg(new zg(bg,Fb),"backtrackGlyphCount"),inputGlyphCount:bg,inputCoverage:new Qg(new zg(bg,Fb),"inputGlyphCount"),lookaheadGlyphCount:bg,lookaheadCoverage:new Qg(new zg(bg,Fb),"lookaheadGlyphCount"),lookupCount:bg,lookupRecords:new Qg(Xb,"lookupCount")}}),Yb=new xg(16,"BE",14),Hb=new Xg({startCoord:Yb,peakCoord:Yb,endCoord:Yb}),Kb=new Xg({axisCount:bg,regionCount:bg,variationRegions:new Qg(new Qg(Hb,"axisCount"),"regionCount")}),qb=new Xg({shortDeltas:new Qg(wg,(e=>e.parent.shortDeltaCount)),regionDeltas:new Qg(yg,(e=>e.parent.regionIndexCount-e.parent.shortDeltaCount)),deltas:e=>e.shortDeltas.concat(e.regionDeltas)}),Jb=new Xg({itemCount:bg,shortDeltaCount:bg,regionIndexCount:bg,regionIndexes:new Qg(bg,"regionIndexCount"),deltaSets:new Qg(qb,"itemCount")}),_b=new Xg({format:bg,variationRegionList:new zg(vg,Kb),variationDataCount:bg,itemVariationData:new Qg(new zg(vg,Jb),"variationDataCount")}),$b=new Mg(bg,{1:{axisIndex:bg,axisIndex:bg,filterRangeMinValue:Yb,filterRangeMaxValue:Yb}}),em=new Xg({conditionCount:bg,conditionTable:new Qg(new zg(vg,$b),"conditionCount")}),tm=new Xg({featureIndex:bg,alternateFeatureTable:new zg(vg,Qb,{type:"parent"})}),Am=new Xg({version:Eg,substitutionCount:bg,substitutions:new Qg(tm,"substitutionCount")}),rm=new Xg({conditionSet:new zg(vg,em,{type:"parent"}),featureTableSubstitution:new zg(vg,Am,{type:"parent"})}),nm=new Xg({majorVersion:bg,minorVersion:bg,featureVariationRecordCount:vg,featureVariationRecords:new Qg(rm,"featureVariationRecordCount")});class sm{decode(e,t,A){return this.predefinedOps[A[0]]?this.predefinedOps[A[0]]:this.type.decode(e,t,A)}size(e,t){return this.type.size(e,t)}encode(e,t,A){let r=this.predefinedOps.indexOf(t);return-1!==r?r:this.type.encode(e,t,A)}constructor(e,t){this.predefinedOps=e,this.type=t}}let im=new Xg({first:bg,nLeft:pg}),om=new Xg({first:bg,nLeft:bg}),am=new Mg(new class extends gg{decode(e){return 127&pg.decode(e)}constructor(){super("UInt8")}},{0:{nCodes:pg,codes:new Qg(pg,"nCodes")},1:{nRanges:pg,ranges:new Qg(im,"nRanges")}}),lm=new sm([yb,["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"]],new pb(am,{lazy:!0}));class um extends Qg{decode(e,t){let A=Ng(this.length,e,t),r=0,n=[];for(;r<A;){let A=this.type.decode(e,t);A.offset=r,r+=A.nLeft+1,n.push(A)}return n}}let cm=new sm([wb,[".notdef","space","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],[".notdef","space","dollaroldstyle","dollarsuperior","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","hyphensuperior","colonmonetary","onefitted","rupiah","centoldstyle","figuredash","hypheninferior","onequarter","onehalf","threequarters","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior"]],new pb(new Mg(pg,{0:{glyphs:new Qg(bg,(e=>e.parent.CharStrings.length-1))},1:{ranges:new um(im,(e=>e.parent.CharStrings.length-1))},2:{ranges:new um(om,(e=>e.parent.CharStrings.length-1))}}),{lazy:!0})),dm=new Xg({first:bg,fd:pg}),fm=new Xg({first:vg,fd:bg}),hm=new Mg(pg,{0:{fds:new Qg(pg,(e=>e.parent.CharStrings.length))},3:{nRanges:bg,ranges:new Qg(dm,"nRanges"),sentinel:bg},4:{nRanges:vg,ranges:new Qg(fm,"nRanges"),sentinel:vg}}),gm=new pb(mb);class pm{decode(e,t,A){return t.length=A[0],gm.decode(e,t,[A[1]])}size(e,t){return[mb.size(e,t,!1),gm.size(e,t)[0]]}encode(e,t,A){return[mb.size(t,A,!1),gm.encode(e,t,A)[0]]}}let bm=new gb([[18,"Private",new pm,null],[[12,38],"FontName","sid",null],[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[[12,5],"PaintType","number",0]]),mm=new gb([[[12,30],"ROS",["sid","sid","number"],null],[0,"version","sid",null],[1,"Notice","sid",null],[[12,0],"Copyright","sid",null],[2,"FullName","sid",null],[3,"FamilyName","sid",null],[4,"Weight","sid",null],[[12,1],"isFixedPitch","boolean",!1],[[12,2],"ItalicAngle","number",0],[[12,3],"UnderlinePosition","number",-100],[[12,4],"UnderlineThickness","number",50],[[12,5],"PaintType","number",0],[[12,6],"CharstringType","number",2],[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[13,"UniqueID","number",null],[5,"FontBBox","array",[0,0,0,0]],[[12,8],"StrokeWidth","number",0],[14,"XUID","array",null],[15,"charset",cm,wb],[16,"Encoding",lm,yb],[17,"CharStrings",new pb(new cb),null],[18,"Private",new pm,null],[[12,20],"SyntheticBase","number",null],[[12,21],"PostScript","sid",null],[[12,22],"BaseFontName","sid",null],[[12,23],"BaseFontBlend","delta",null],[[12,31],"CIDFontVersion","number",0],[[12,32],"CIDFontRevision","number",0],[[12,33],"CIDFontType","number",0],[[12,34],"CIDCount","number",8720],[[12,35],"UIDBase","number",null],[[12,37],"FDSelect",new pb(hm),null],[[12,36],"FDArray",new pb(new cb(bm)),null],[[12,38],"FontName","sid",null]]),vm=new Xg({length:bg,itemVariationStore:_b}),ym=new gb([[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[17,"CharStrings",new pb(new cb),null],[[12,37],"FDSelect",new pb(hm),null],[[12,36],"FDArray",new pb(new cb(bm)),null],[24,"vstore",new pb(vm),null],[25,"maxstack","number",193]]);var wm=new Mg(Cg,{1:{hdrSize:pg,offSize:pg,nameIndex:new cb(new Sg("length")),topDictIndex:new cb(mm),stringIndex:new cb(new Sg("length")),globalSubrIndex:new cb},2:{hdrSize:pg,length:bg,topDict:ym,globalSubrIndex:new cb}});class Bm{static decode(e){return new Bm(e)}decode(){this.stream.pos;let e=wm.decode(this.stream);for(let t in e){let A=e[t];this[t]=A}if(this.version<2){if(1!==this.topDictIndex.length)throw new Error("Only a single font is allowed in CFF");this.topDict=this.topDictIndex[0]}return this.isCIDFont=null!=this.topDict.ROS,this}string(e){return this.version>=2?null:e<vb.length?vb[e]:this.stringIndex[e-vb.length]}get postscriptName(){return this.version<2?this.nameIndex[0]:null}get fullName(){return this.string(this.topDict.FullName)}get familyName(){return this.string(this.topDict.FamilyName)}getCharString(e){return this.stream.pos=this.topDict.CharStrings[e].offset,this.stream.readBuffer(this.topDict.CharStrings[e].length)}getGlyphName(e){if(this.version>=2)return null;if(this.isCIDFont)return null;let{charset:t}=this.topDict;if(Array.isArray(t))return t[e];if(0===e)return".notdef";switch(e-=1,t.version){case 0:return this.string(t.glyphs[e]);case 1:case 2:for(let A=0;A<t.ranges.length;A++){let r=t.ranges[A];if(r.offset<=e&&e<=r.offset+r.nLeft)return this.string(r.first+(e-r.offset))}}return null}fdForGlyph(e){if(!this.topDict.FDSelect)return null;switch(this.topDict.FDSelect.version){case 0:return this.topDict.FDSelect.fds[e];case 3:case 4:let{ranges:t}=this.topDict.FDSelect,A=0,r=t.length-1;for(;A<=r;){let n=A+r>>1;if(e<t[n].first)r=n-1;else{if(!(n<r&&e>=t[n+1].first))return t[n].fd;A=n+1}}default:throw new Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`)}}privateDictForGlyph(e){if(this.topDict.FDSelect){let t=this.fdForGlyph(e);return this.topDict.FDArray[t]?this.topDict.FDArray[t].Private:null}return this.version<2?this.topDict.Private:this.topDict.FDArray[0].Private}constructor(e){this.stream=e,this.decode()}}var xm=Bm;let Cm=new Xg({glyphIndex:bg,vertOriginY:wg});var Em=new Xg({majorVersion:bg,minorVersion:bg,defaultVertOriginY:wg,numVertOriginYMetrics:bg,metrics:new Qg(Cm,"numVertOriginYMetrics")});let Nm=new Xg({height:pg,width:pg,horiBearingX:yg,horiBearingY:yg,horiAdvance:pg,vertBearingX:yg,vertBearingY:yg,vertAdvance:pg}),Dm=new Xg({height:pg,width:pg,bearingX:yg,bearingY:yg,advance:pg}),Qm=new Xg({glyph:bg,xOffset:yg,yOffset:yg});class Pm{}class Im{}new Mg("version",{1:{metrics:Dm,data:Pm},2:{metrics:Dm,data:Im},5:{data:Im},6:{metrics:Nm,data:Pm},7:{metrics:Nm,data:Im},8:{metrics:Dm,pad:new Fg(pg),numComponents:bg,components:new Qg(Qm,"numComponents")},9:{metrics:Nm,pad:new Fg(pg),numComponents:bg,components:new Qg(Qm,"numComponents")},17:{metrics:Dm,dataLen:vg,data:new kg("dataLen")},18:{metrics:Nm,dataLen:vg,data:new kg("dataLen")},19:{dataLen:vg,data:new kg("dataLen")}});let Lm=new Xg({ascender:yg,descender:yg,widthMax:pg,caretSlopeNumerator:yg,caretSlopeDenominator:yg,caretOffset:yg,minOriginSB:yg,minAdvanceSB:yg,maxBeforeBL:yg,minAfterBL:yg,pad:new Fg(yg,2)}),km=new Xg({glyphCode:bg,offset:bg}),Gm=new Mg(bg,{header:{imageFormat:bg,imageDataOffset:vg},1:{offsetArray:new Qg(vg,(e=>e.parent.lastGlyphIndex-e.parent.firstGlyphIndex+1))},2:{imageSize:vg,bigMetrics:Nm},3:{offsetArray:new Qg(bg,(e=>e.parent.lastGlyphIndex-e.parent.firstGlyphIndex+1))},4:{numGlyphs:vg,glyphArray:new Qg(km,(e=>e.numGlyphs+1))},5:{imageSize:vg,bigMetrics:Nm,numGlyphs:vg,glyphCodeArray:new Qg(bg,"numGlyphs")}}),Fm=new Xg({firstGlyphIndex:bg,lastGlyphIndex:bg,subtable:new zg(vg,Gm)}),Sm=new Xg({indexSubTableArray:new zg(vg,new Qg(Fm,1),{type:"parent"}),indexTablesSize:vg,numberOfIndexSubTables:vg,colorRef:vg,hori:Lm,vert:Lm,startGlyphIndex:bg,endGlyphIndex:bg,ppemX:pg,ppemY:pg,bitDepth:pg,flags:new Lg(pg,["horizontal","vertical"])});var Wm=new Xg({version:vg,numSizes:vg,sizes:new Qg(Sm,"numSizes")});let Zm=new Xg({ppem:bg,resolution:bg,imageOffsets:new Qg(new zg(vg,"void"),(e=>e.parent.parent.maxp.numGlyphs+1))});var Xm=new Xg({version:bg,flags:new Lg(bg,["renderOutlines"]),numImgTables:vg,imageTables:new Qg(new zg(vg,Zm),"numImgTables")});let Mm=new Xg({gid:bg,paletteIndex:bg}),zm=new Xg({gid:bg,firstLayerIndex:bg,numLayers:bg});var Rm=new Xg({version:bg,numBaseGlyphRecords:bg,baseGlyphRecord:new zg(vg,new Qg(zm,"numBaseGlyphRecords")),layerRecords:new zg(vg,new Qg(Mm,"numLayerRecords"),{lazy:!0}),numLayerRecords:bg});let jm=new Xg({blue:pg,green:pg,red:pg,alpha:pg});var Tm=new Mg(bg,{header:{numPaletteEntries:bg,numPalettes:bg,numColorRecords:bg,colorRecords:new zg(vg,new Qg(jm,"numColorRecords")),colorRecordIndices:new Qg(bg,"numPalettes")},0:{},1:{offsetPaletteTypeArray:new zg(vg,new Qg(vg,"numPalettes")),offsetPaletteLabelArray:new zg(vg,new Qg(bg,"numPalettes")),offsetPaletteEntryLabelArray:new zg(vg,new Qg(bg,"numPaletteEntries"))}});let Um=new Mg(bg,{1:{coordinate:wg},2:{coordinate:wg,referenceGlyph:bg,baseCoordPoint:bg},3:{coordinate:wg,deviceTable:new zg(bg,Zb)}}),Vm=new Xg({defaultIndex:bg,baseCoordCount:bg,baseCoords:new Qg(new zg(bg,Um),"baseCoordCount")}),Om=new Xg({tag:new Sg(4),minCoord:new zg(bg,Um,{type:"parent"}),maxCoord:new zg(bg,Um,{type:"parent"})}),Ym=new Xg({minCoord:new zg(bg,Um),maxCoord:new zg(bg,Um),featMinMaxCount:bg,featMinMaxRecords:new Qg(Om,"featMinMaxCount")}),Hm=new Xg({tag:new Sg(4),minMax:new zg(bg,Ym,{type:"parent"})}),Km=new Xg({baseValues:new zg(bg,Vm),defaultMinMax:new zg(bg,Ym),baseLangSysCount:bg,baseLangSysRecords:new Qg(Hm,"baseLangSysCount")}),qm=new Xg({tag:new Sg(4),script:new zg(bg,Km,{type:"parent"})}),Jm=new Qg(qm,bg),_m=new Qg(new Sg(4),bg),$m=new Xg({baseTagList:new zg(bg,_m),baseScriptList:new zg(bg,Jm)});var ev=new Mg(vg,{header:{horizAxis:new zg(bg,$m),vertAxis:new zg(bg,$m)},65536:{},65537:{itemVariationStore:new zg(vg,_b)}});let tv=new Qg(bg,bg),Av=new Xg({coverage:new zg(bg,Fb),glyphCount:bg,attachPoints:new Qg(new zg(bg,tv),"glyphCount")}),rv=new Mg(bg,{1:{coordinate:wg},2:{caretValuePoint:bg},3:{coordinate:wg,deviceTable:new zg(bg,Zb)}}),nv=new Qg(new zg(bg,rv),bg),sv=new Xg({coverage:new zg(bg,Fb),ligGlyphCount:bg,ligGlyphs:new Qg(new zg(bg,nv),"ligGlyphCount")}),iv=new Xg({markSetTableFormat:bg,markSetCount:bg,coverage:new Qg(new zg(vg,Fb),"markSetCount")});var ov=new Mg(vg,{header:{glyphClassDef:new zg(bg,Wb),attachList:new zg(bg,Av),ligCaretList:new zg(bg,sv),markAttachClassDef:new zg(bg,Wb)},65536:{},65538:{markGlyphSetsDef:new zg(bg,iv)},65539:{markGlyphSetsDef:new zg(bg,iv),itemVariationStore:new zg(vg,_b)}});let av=new Lg(bg,["xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice"]),lv={xPlacement:wg,yPlacement:wg,xAdvance:wg,yAdvance:wg,xPlaDevice:new zg(bg,Zb,{type:"global",relativeTo:e=>e.rel}),yPlaDevice:new zg(bg,Zb,{type:"global",relativeTo:e=>e.rel}),xAdvDevice:new zg(bg,Zb,{type:"global",relativeTo:e=>e.rel}),yAdvDevice:new zg(bg,Zb,{type:"global",relativeTo:e=>e.rel})};class uv{buildStruct(e){let t=e;for(;!t[this.key]&&t.parent;)t=t.parent;if(!t[this.key])return;let A={rel:()=>t._startOffset},r=t[this.key];for(let n in r)r[n]&&(A[n]=lv[n]);return new Xg(A)}size(e,t){return this.buildStruct(t).size(e,t)}decode(e,t){let A=this.buildStruct(t).decode(e,t);return delete A.rel,A}constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"valueFormat";this.key=e}}let cv=new Xg({secondGlyph:bg,value1:new uv("valueFormat1"),value2:new uv("valueFormat2")}),dv=new Qg(cv,bg),fv=new Xg({value1:new uv("valueFormat1"),value2:new uv("valueFormat2")}),hv=new Mg(bg,{1:{xCoordinate:wg,yCoordinate:wg},2:{xCoordinate:wg,yCoordinate:wg,anchorPoint:bg},3:{xCoordinate:wg,yCoordinate:wg,xDeviceTable:new zg(bg,Zb),yDeviceTable:new zg(bg,Zb)}}),gv=new Xg({entryAnchor:new zg(bg,hv,{type:"parent"}),exitAnchor:new zg(bg,hv,{type:"parent"})}),pv=new Xg({class:bg,markAnchor:new zg(bg,hv,{type:"parent"})}),bv=new Qg(pv,bg),mv=new Qg(new zg(bg,hv),(e=>e.parent.classCount)),vv=new Qg(mv,bg),yv=new Qg(new zg(bg,hv),(e=>e.parent.parent.classCount)),wv=new Qg(yv,bg),Bv=new Qg(new zg(bg,wv),bg),xv=new Mg("lookupType",{1:new Mg(bg,{1:{coverage:new zg(bg,Fb),valueFormat:av,value:new uv},2:{coverage:new zg(bg,Fb),valueFormat:av,valueCount:bg,values:new Pg(new uv,"valueCount")}}),2:new Mg(bg,{1:{coverage:new zg(bg,Fb),valueFormat1:av,valueFormat2:av,pairSetCount:bg,pairSets:new Pg(new zg(bg,dv),"pairSetCount")},2:{coverage:new zg(bg,Fb),valueFormat1:av,valueFormat2:av,classDef1:new zg(bg,Wb),classDef2:new zg(bg,Wb),class1Count:bg,class2Count:bg,classRecords:new Pg(new Pg(fv,"class2Count"),"class1Count")}}),3:{format:bg,coverage:new zg(bg,Fb),entryExitCount:bg,entryExitRecords:new Qg(gv,"entryExitCount")},4:{format:bg,markCoverage:new zg(bg,Fb),baseCoverage:new zg(bg,Fb),classCount:bg,markArray:new zg(bg,bv),baseArray:new zg(bg,vv)},5:{format:bg,markCoverage:new zg(bg,Fb),ligatureCoverage:new zg(bg,Fb),classCount:bg,markArray:new zg(bg,bv),ligatureArray:new zg(bg,Bv)},6:{format:bg,mark1Coverage:new zg(bg,Fb),mark2Coverage:new zg(bg,Fb),classCount:bg,mark1Array:new zg(bg,bv),mark2Array:new zg(bg,vv)},7:Tb,8:Ob,9:{posFormat:bg,lookupType:bg,extension:new zg(vg,null)}});xv.versions[9].extension.type=xv;var Cv=new Mg(vg,{header:{scriptList:new zg(bg,Nb),featureList:new zg(bg,Ib),lookupList:new zg(bg,new kb(xv))},65536:{},65537:{featureVariations:new zg(vg,nm)}});let Ev=new Qg(bg,bg),Nv=Ev,Dv=new Xg({glyph:bg,compCount:bg,components:new Qg(bg,(e=>e.compCount-1))}),Qv=new Qg(new zg(bg,Dv),bg),Pv=new Mg("lookupType",{1:new Mg(bg,{1:{coverage:new zg(bg,Fb),deltaGlyphID:wg},2:{coverage:new zg(bg,Fb),glyphCount:bg,substitute:new Pg(bg,"glyphCount")}}),2:{substFormat:bg,coverage:new zg(bg,Fb),count:bg,sequences:new Pg(new zg(bg,Ev),"count")},3:{substFormat:bg,coverage:new zg(bg,Fb),count:bg,alternateSet:new Pg(new zg(bg,Nv),"count")},4:{substFormat:bg,coverage:new zg(bg,Fb),count:bg,ligatureSets:new Pg(new zg(bg,Qv),"count")},5:Tb,6:Ob,7:{substFormat:bg,lookupType:bg,extension:new zg(vg,null)},8:{substFormat:bg,coverage:new zg(bg,Fb),backtrackCoverage:new Qg(new zg(bg,Fb),"backtrackGlyphCount"),lookaheadGlyphCount:bg,lookaheadCoverage:new Qg(new zg(bg,Fb),"lookaheadGlyphCount"),glyphCount:bg,substitutes:new Qg(bg,"glyphCount")}});Pv.versions[7].extension.type=Pv;var Iv=new Mg(vg,{header:{scriptList:new zg(bg,Nb),featureList:new zg(bg,Ib),lookupList:new zg(bg,new kb(Pv))},65536:{},65537:{featureVariations:new zg(vg,nm)}});let Lv=new Qg(bg,bg),kv=new Xg({shrinkageEnableGSUB:new zg(bg,Lv),shrinkageDisableGSUB:new zg(bg,Lv),shrinkageEnableGPOS:new zg(bg,Lv),shrinkageDisableGPOS:new zg(bg,Lv),shrinkageJstfMax:new zg(bg,new kb(xv)),extensionEnableGSUB:new zg(bg,Lv),extensionDisableGSUB:new zg(bg,Lv),extensionEnableGPOS:new zg(bg,Lv),extensionDisableGPOS:new zg(bg,Lv),extensionJstfMax:new zg(bg,new kb(xv))}),Gv=new Qg(new zg(bg,kv),bg),Fv=new Xg({tag:new Sg(4),jstfLangSys:new zg(bg,Gv)}),Sv=new Xg({extenderGlyphs:new zg(bg,new Qg(bg,bg)),defaultLangSys:new zg(bg,Gv),langSysCount:bg,langSysRecords:new Qg(Fv,"langSysCount")}),Wv=new Xg({tag:new Sg(4),script:new zg(bg,Sv,{type:"parent"})});var Zv=new Xg({version:vg,scriptCount:bg,scriptList:new Qg(Wv,"scriptCount")});let Xv=new Xg({entry:new class{decode(e,t){switch(this.size(0,t)){case 1:return e.readUInt8();case 2:return e.readUInt16BE();case 3:return e.readUInt24BE();case 4:return e.readUInt32BE()}}size(e,t){return Ng(this._size,null,t)}constructor(e){this._size=e}}((e=>1+((48&e.parent.entryFormat)>>4))),outerIndex:e=>e.entry>>1+(15&e.parent.entryFormat),innerIndex:e=>e.entry&(1<<1+(15&e.parent.entryFormat))-1}),Mv=new Xg({entryFormat:bg,mapCount:bg,mapData:new Qg(Xv,"mapCount")});var zv=new Xg({majorVersion:bg,minorVersion:bg,itemVariationStore:new zg(vg,_b),advanceWidthMapping:new zg(vg,Mv),LSBMapping:new zg(vg,Mv),RSBMapping:new zg(vg,Mv)});let Rv=new Xg({format:vg,length:vg,offset:vg}),jv=new Xg({reserved:new Fg(bg,2),cbSignature:vg,signature:new kg("cbSignature")});var Tv=new Xg({ulVersion:vg,usNumSigs:bg,usFlag:bg,signatures:new Qg(Rv,"usNumSigs"),signatureBlocks:new Qg(jv,"usNumSigs")});let Uv=new Xg({rangeMaxPPEM:bg,rangeGaspBehavior:new Lg(bg,["grayscale","gridfit","symmetricSmoothing","symmetricGridfit"])});var Vv=new Xg({version:bg,numRanges:bg,gaspRanges:new Qg(Uv,"numRanges")});let Ov=new Xg({pixelSize:pg,maximumWidth:pg,widths:new Qg(pg,(e=>e.parent.parent.maxp.numGlyphs))});var Yv=new Xg({version:bg,numRecords:wg,sizeDeviceRecord:Bg,records:new Qg(Ov,"numRecords")});let Hv=new Xg({left:bg,right:bg,value:wg}),Kv=new Xg({firstGlyph:bg,nGlyphs:bg,offsets:new Qg(bg,"nGlyphs"),max:e=>e.offsets.length&&Math.max.apply(Math,e.offsets)}),qv=new Xg({off:e=>e._startOffset-e.parent.parent._startOffset,len:e=>((e.parent.leftTable.max-e.off)/e.parent.rowWidth+1)*(e.parent.rowWidth/2),values:new Pg(wg,"len")}),Jv=new Mg("format",{0:{nPairs:bg,searchRange:bg,entrySelector:bg,rangeShift:bg,pairs:new Qg(Hv,"nPairs")},2:{rowWidth:bg,leftTable:new zg(bg,Kv,{type:"parent"}),rightTable:new zg(bg,Kv,{type:"parent"}),array:new zg(bg,qv,{type:"parent"})},3:{glyphCount:bg,kernValueCount:pg,leftClassCount:pg,rightClassCount:pg,flags:pg,kernValue:new Qg(wg,"kernValueCount"),leftClass:new Qg(pg,"glyphCount"),rightClass:new Qg(pg,"glyphCount"),kernIndex:new Qg(pg,(e=>e.leftClassCount*e.rightClassCount))}}),_v=new Mg("version",{0:{subVersion:bg,length:bg,format:pg,coverage:new Lg(pg,["horizontal","minimum","crossStream","override"]),subtable:Jv,padding:new Fg(pg,(e=>e.length-e._currentOffset))},1:{length:vg,coverage:new Lg(pg,[null,null,null,null,null,"variation","crossStream","vertical"]),format:pg,tupleIndex:bg,subtable:Jv,padding:new Fg(pg,(e=>e.length-e._currentOffset))}});var $v=new Mg(bg,{0:{nTables:bg,tables:new Qg(_v,"nTables")},1:{reserved:new Fg(bg),nTables:vg,tables:new Qg(_v,"nTables")}}),ey=new Xg({version:bg,numGlyphs:bg,yPels:new Qg(pg,"numGlyphs")}),ty=new Xg({version:bg,fontNumber:vg,pitch:bg,xHeight:bg,style:bg,typeFamily:bg,capHeight:bg,symbolSet:bg,typeface:new Sg(16),characterComplement:new Sg(8),fileName:new Sg(6),strokeWeight:new Sg(1),widthType:new Sg(1),serifStyle:pg,reserved:new Fg(pg)});let Ay=new Xg({bCharSet:pg,xRatio:pg,yStartRatio:pg,yEndRatio:pg}),ry=new Xg({yPelHeight:bg,yMax:wg,yMin:wg}),ny=new Xg({recs:bg,startsz:pg,endsz:pg,entries:new Qg(ry,"recs")});var sy=new Xg({version:bg,numRecs:bg,numRatios:bg,ratioRanges:new Qg(Ay,"numRatios"),offsets:new Qg(bg,"numRatios"),groups:new Qg(ny,"numRecs")}),iy=new Xg({version:bg,ascent:wg,descent:wg,lineGap:wg,advanceHeightMax:wg,minTopSideBearing:wg,minBottomSideBearing:wg,yMaxExtent:wg,caretSlopeRise:wg,caretSlopeRun:wg,caretOffset:wg,reserved:new Fg(wg,4),metricDataFormat:wg,numberOfMetrics:bg});let oy=new Xg({advance:bg,bearing:wg});var ay=new Xg({metrics:new Pg(oy,(e=>e.parent.vhea.numberOfMetrics)),bearings:new Pg(wg,(e=>e.parent.maxp.numGlyphs-e.parent.vhea.numberOfMetrics))});let ly=new xg(16,"BE",14),uy=new Xg({fromCoord:ly,toCoord:ly}),cy=new Xg({pairCount:bg,correspondence:new Qg(uy,"pairCount")});var dy=new Xg({version:Eg,axisCount:vg,segment:new Qg(cy,"axisCount")});class fy{getItem(e){if(null==this._items[e]){let t=this.stream.pos;this.stream.pos=this.base+this.type.size(null,this.parent)*e,this._items[e]=this.type.decode(this.stream,this.parent),this.stream.pos=t}return this._items[e]}inspect(){return`[UnboundedArray ${this.type.constructor.name}]`}constructor(e,t,A){this.type=e,this.stream=t,this.parent=A,this.base=this.stream.pos,this._items=[]}}class hy extends Qg{decode(e,t){return new fy(this.type,e,t)}constructor(e){super(e,0)}}let gy=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:bg;e=new class{decode(e,t){return t=t.parent.parent,this.type.decode(e,t)}size(e,t){return t=t.parent.parent,this.type.size(e,t)}encode(e,t,A){return A=A.parent.parent,this.type.encode(e,t,A)}constructor(e){this.type=e}}(e);let t=new Xg({unitSize:bg,nUnits:bg,searchRange:bg,entrySelector:bg,rangeShift:bg}),A=new Xg({lastGlyph:bg,firstGlyph:bg,value:e}),r=new Xg({lastGlyph:bg,firstGlyph:bg,values:new zg(bg,new Qg(e,(e=>e.lastGlyph-e.firstGlyph+1)),{type:"parent"})}),n=new Xg({glyph:bg,value:e});return new Mg(bg,{0:{values:new hy(e)},2:{binarySearchHeader:t,segments:new Qg(A,(e=>e.binarySearchHeader.nUnits))},4:{binarySearchHeader:t,segments:new Qg(r,(e=>e.binarySearchHeader.nUnits))},6:{binarySearchHeader:t,segments:new Qg(n,(e=>e.binarySearchHeader.nUnits))},8:{firstGlyph:bg,count:bg,values:new Qg(e,"count")}})};function py(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:bg,A=Object.assign({newState:bg,flags:bg},e),r=new Xg(A),n=new hy(new Qg(bg,(e=>e.nClasses)));return new Xg({nClasses:vg,classTable:new zg(vg,new gy(t)),stateArray:new zg(vg,n),entryTable:new zg(vg,new hy(r))})}let by=new Mg("format",{0:{deltas:new Qg(wg,32)},1:{deltas:new Qg(wg,32),mappingData:new gy(bg)},2:{standardGlyph:bg,controlPoints:new Qg(bg,32)},3:{standardGlyph:bg,controlPoints:new Qg(bg,32),mappingData:new gy(bg)}});var my=new Xg({version:Eg,format:bg,defaultBaseline:bg,subtable:by});let vy=new Xg({setting:bg,nameIndex:wg,name:e=>e.parent.parent.parent.name.records.fontFeatures[e.nameIndex]}),yy=new Xg({feature:bg,nSettings:bg,settingTable:new zg(vg,new Qg(vy,"nSettings"),{type:"parent"}),featureFlags:new Lg(pg,[null,null,null,null,null,null,"hasDefault","exclusive"]),defaultSetting:pg,nameIndex:wg,name:e=>e.parent.parent.name.records.fontFeatures[e.nameIndex]});var wy=new Xg({version:Eg,featureNameCount:bg,reserved1:new Fg(bg),reserved2:new Fg(vg),featureNames:new Qg(yy,"featureNameCount")});let By=new Xg({axisTag:new Sg(4),minValue:Eg,defaultValue:Eg,maxValue:Eg,flags:bg,nameID:bg,name:e=>e.parent.parent.name.records.fontFeatures[e.nameID]}),xy=new Xg({nameID:bg,name:e=>e.parent.parent.name.records.fontFeatures[e.nameID],flags:bg,coord:new Qg(Eg,(e=>e.parent.axisCount)),postscriptNameID:new Gg(bg,(e=>e.parent.instanceSize-e._currentOffset>0))});var Cy=new Xg({version:Eg,offsetToData:bg,countSizePairs:bg,axisCount:bg,axisSize:bg,instanceCount:bg,instanceSize:bg,axis:new Qg(By,"axisCount"),instance:new Qg(xy,"instanceCount")});let Ey=new xg(16,"BE",14);let Ny=new Xg({version:bg,reserved:new Fg(bg),axisCount:bg,globalCoordCount:bg,globalCoords:new zg(vg,new Qg(new Qg(Ey,"axisCount"),"globalCoordCount")),glyphCount:bg,flags:bg,offsetToData:vg,offsets:new Qg(new zg(class{static decode(e,t){return t.flags?e.readUInt32BE():2*e.readUInt16BE()}},"void",{relativeTo:e=>e.offsetToData,allowNull:!1}),(e=>e.glyphCount+1))});var Dy=Ny;let Qy=new Xg({length:bg,coverage:bg,subFeatureFlags:vg,stateTable:new function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=new Xg({version:()=>8,firstGlyph:bg,values:new Qg(pg,bg)}),A=Object.assign({newStateOffset:bg,newState:e=>(e.newStateOffset-(e.parent.stateArray.base-e.parent._startOffset))/e.parent.nClasses,flags:bg},e),r=new Xg(A),n=new hy(new Qg(pg,(e=>e.nClasses)));return new Xg({nClasses:bg,classTable:new zg(bg,t),stateArray:new zg(bg,n),entryTable:new zg(bg,new hy(r))})}}),Py=new Xg({justClass:vg,beforeGrowLimit:Eg,beforeShrinkLimit:Eg,afterGrowLimit:Eg,afterShrinkLimit:Eg,growFlags:bg,shrinkFlags:bg}),Iy=new Qg(Py,vg),Ly=new Mg("actionType",{0:{lowerLimit:Eg,upperLimit:Eg,order:bg,glyphs:new Qg(bg,bg)},1:{addGlyph:bg},2:{substThreshold:Eg,addGlyph:bg,substGlyph:bg},3:{},4:{variationAxis:vg,minimumLimit:Eg,noStretchValue:Eg,maximumLimit:Eg},5:{flags:bg,glyph:bg}}),ky=new Xg({actionClass:bg,actionType:bg,actionLength:vg,actionData:Ly,padding:new Fg(pg,(e=>e.actionLength-e._currentOffset))}),Gy=new Qg(ky,vg),Fy=new Xg({lookupTable:new gy(new zg(bg,Gy))}),Sy=new Xg({classTable:new zg(bg,Qy,{type:"parent"}),wdcOffset:bg,postCompensationTable:new zg(bg,Fy,{type:"parent"}),widthDeltaClusters:new gy(new zg(bg,Iy,{type:"parent",relativeTo:e=>e.wdcOffset}))});var Wy=new Xg({version:vg,format:bg,horizontal:new zg(bg,Sy),vertical:new zg(bg,Sy)});let Zy={action:bg},Xy={markIndex:bg,currentIndex:bg},My={currentInsertIndex:bg,markedInsertIndex:bg},zy=new Xg({items:new hy(new zg(vg,new gy))}),Ry=new Mg("type",{0:{stateTable:new py},1:{stateTable:new py(Xy),substitutionTable:new zg(vg,zy)},2:{stateTable:new py(Zy),ligatureActions:new zg(vg,new hy(vg)),components:new zg(vg,new hy(bg)),ligatureList:new zg(vg,new hy(bg))},4:{lookupTable:new gy},5:{stateTable:new py(My),insertionActions:new zg(vg,new hy(bg))}}),jy=new Xg({length:vg,coverage:mg,type:pg,subFeatureFlags:vg,table:Ry,padding:new Fg(pg,(e=>e.length-e._currentOffset))}),Ty=new Xg({featureType:bg,featureSetting:bg,enableFlags:vg,disableFlags:vg}),Uy=new Xg({defaultFlags:vg,chainLength:vg,nFeatureEntries:vg,nSubtables:vg,features:new Qg(Ty,"nFeatureEntries"),subtables:new Qg(jy,"nSubtables")});var Vy=new Xg({version:bg,unused:new Fg(bg),nChains:vg,chains:new Qg(Uy,"nChains")});let Oy=new Xg({left:wg,top:wg,right:wg,bottom:wg});var Yy=new Xg({version:Eg,format:bg,lookupTable:new gy(Oy)});let Hy={};var Ky=Hy;Hy.cmap=Wp,Hy.head=Zp,Hy.hhea=Xp,Hy.hmtx=zp,Hy.maxp=Rp,Hy.name=$p,Hy["OS/2"]=rb,Hy.post=nb,Hy.fpgm=ib,Hy.loca=ab,Hy.prep=lb,Hy["cvt "]=sb,Hy.glyf=ub,Hy["CFF "]=xm,Hy.CFF2=xm,Hy.VORG=Em,Hy.EBLC=Wm,Hy.CBLC=Hy.EBLC,Hy.sbix=Xm,Hy.COLR=Rm,Hy.CPAL=Tm,Hy.BASE=ev,Hy.GDEF=ov,Hy.GPOS=Cv,Hy.GSUB=Iv,Hy.JSTF=Zv,Hy.HVAR=zv,Hy.DSIG=Tv,Hy.gasp=Vv,Hy.hdmx=Yv,Hy.kern=$v,Hy.LTSH=ey,Hy.PCLT=ty,Hy.VDMX=sy,Hy.vhea=iy,Hy.vmtx=ay,Hy.avar=dy,Hy.bsln=my,Hy.feat=wy,Hy.fvar=Cy,Hy.gvar=Dy,Hy.just=Wy,Hy.morx=Vy,Hy.opbd=Yy;let qy=new Xg({tag:new Sg(4),checkSum:vg,offset:new zg(vg,"void",{type:"global"}),length:vg}),Jy=new Xg({tag:new Sg(4),numTables:bg,searchRange:bg,entrySelector:bg,rangeShift:bg,tables:new Qg(qy,"numTables")});Jy.process=function(){let e={};for(let t of this.tables)e[t.tag]=t;this.tables=e},Jy.preEncode=function(){if(!Array.isArray(this.tables)){let e=[];for(let t in this.tables){let A=this.tables[t];A&&e.push({tag:t,checkSum:0,offset:new Rg(Ky[t],A),length:Ky[t].size(A)})}this.tables=e}this.tag="true",this.numTables=this.tables.length;let e=Math.floor(Math.log(this.numTables)/Math.LN2),t=Math.pow(2,e);this.searchRange=16*t,this.entrySelector=Math.log(t)/Math.LN2,this.rangeShift=16*this.numTables-this.searchRange};var _y=Jy;function $y(e,t){let A=0,r=e.length-1;for(;A<=r;){let n=A+r>>1,s=t(e[n]);if(s<0)r=n-1;else{if(!(s>0))return n;A=n+1}}return-1}function ew(e,t){let A=[];for(;e<t;)A.push(e++);return A}const tw=new TextDecoder("ascii"),Aw="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",rw=new Uint8Array(256);for(let A=0;A<64;A++)rw[Aw.charCodeAt(A)]=A;function nw(e){let t=.75*e.length;"="===e[e.length-1]&&(t--,"="===e[e.length-2]&&t--);let A=new Uint8Array(t),r=0;for(let n=0,s=e.length;n<s;n+=4){let t=rw[e.charCodeAt(n)],s=rw[e.charCodeAt(n+1)],i=rw[e.charCodeAt(n+2)],o=rw[e.charCodeAt(n+3)];A[r++]=t<<2|s>>4,A[r++]=(15&s)<<4|i>>2,A[r++]=(3&i)<<6|63&o}return A}class sw{findSubtable(e,t){for(let[A,r]of t)for(let t of e.tables)if(t.platformID===A&&t.encodingID===r)return t.table;return null}lookup(e,t){if(this.encoding)e=this.encoding.get(e)||e;else if(t){let A=this.getVariationSelector(e,t);if(A)return A}let A=this.cmap;switch(A.version){case 0:return A.codeMap.get(e)||0;case 4:{let t=0,r=A.segCount-1;for(;t<=r;){let n=t+r>>1;if(e<A.startCode.get(n))r=n-1;else{if(!(e>A.endCode.get(n))){let t,r=A.idRangeOffset.get(n);if(0===r)t=e+A.idDelta.get(n);else{let s=r/2+(e-A.startCode.get(n))-(A.segCount-n);t=A.glyphIndexArray.get(s)||0,0!==t&&(t+=A.idDelta.get(n))}return 65535&t}t=n+1}}return 0}case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return A.glyphIndices.get(e-A.firstCode)||0;case 12:case 13:{let t=0,r=A.nGroups-1;for(;t<=r;){let n=t+r>>1,s=A.groups.get(n);if(e<s.startCharCode)r=n-1;else{if(!(e>s.endCharCode))return 12===A.version?s.glyphID+(e-s.startCharCode):s.glyphID;t=n+1}}return 0}case 14:throw new Error("TODO: cmap format 14");default:throw new Error(`Unknown cmap format ${A.version}`)}}getVariationSelector(e,t){if(!this.uvs)return 0;let A=this.uvs.varSelectors.toArray(),r=$y(A,(e=>t-e.varSelector)),n=A[r];return-1!==r&&n.defaultUVS&&(r=$y(n.defaultUVS,(t=>e<t.startUnicodeValue?-1:e>t.startUnicodeValue+t.additionalCount?1:0))),-1!==r&&n.nonDefaultUVS&&(r=$y(n.nonDefaultUVS,(t=>e-t.unicodeValue)),-1!==r)?n.nonDefaultUVS[r].glyphID:0}getCharacterSet(){let e=this.cmap;switch(e.version){case 0:return ew(0,e.codeMap.length);case 4:{let t=[],A=e.endCode.toArray();for(let r=0;r<A.length;r++){let n=A[r]+1,s=e.startCode.get(r);t.push(...ew(s,n))}return t}case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return ew(e.firstCode,e.firstCode+e.glyphIndices.length);case 12:case 13:{let t=[];for(let A of e.groups.toArray())t.push(...ew(A.startCharCode,A.endCharCode+1));return t}case 14:throw new Error("TODO: cmap format 14");default:throw new Error(`Unknown cmap format ${e.version}`)}}codePointsForGlyph(e){let t=this.cmap;switch(t.version){case 0:{let A=[];for(let r=0;r<256;r++)t.codeMap.get(r)===e&&A.push(r);return A}case 4:{let r=[];for(let n=0;n<t.segCount;n++){let s=t.endCode.get(n),i=t.startCode.get(n),o=t.idRangeOffset.get(n),a=t.idDelta.get(n);for(var A=i;A<=s;A++){let s=0;if(0===o)s=A+a;else{let e=o/2+(A-i)-(t.segCount-n);s=t.glyphIndexArray.get(e)||0,0!==s&&(s+=a)}s===e&&r.push(A)}}return r}case 12:{let A=[];for(let r of t.groups.toArray())e>=r.glyphID&&e<=r.glyphID+(r.endCharCode-r.startCharCode)&&A.push(r.startCharCode+(e-r.glyphID));return A}case 13:{let A=[];for(let r of t.groups.toArray())e===r.glyphID&&A.push(...ew(r.startCharCode,r.endCharCode+1));return A}default:throw new Error(`Unknown cmap format ${t.version}`)}}constructor(e){if(this.encoding=null,this.cmap=this.findSubtable(e,[[3,10],[0,6],[0,4],[3,1],[0,3],[0,2],[0,1],[0,0]]),!this.cmap)for(let t of e.tables){let e=Op(jp(t.platformID,t.encodingID,t.table.language-1));e&&(this.cmap=t.table,this.encoding=e)}if(!this.cmap)throw new Error("Could not find a supported cmap table");this.uvs=this.findSubtable(e,[[0,5]]),this.uvs&&14!==this.uvs.version&&(this.uvs=null)}}Tg([Np],sw.prototype,"getCharacterSet",null),Tg([Np],sw.prototype,"codePointsForGlyph",null);class iw{process(e,t){for(let A=0;A<e.length-1;A++){let r=e[A].id,n=e[A+1].id;t[A].xAdvance+=this.getKerning(r,n)}}getKerning(e,t){let A=0;for(let r of this.kern.tables){if(r.coverage.crossStream)continue;switch(r.version){case 0:if(!r.coverage.horizontal)continue;break;case 1:if(r.coverage.vertical||r.coverage.variation)continue;break;default:throw new Error(`Unsupported kerning table version ${r.version}`)}let n=0,s=r.subtable;switch(r.format){case 0:let A=$y(s.pairs,(function(A){return e-A.left||t-A.right}));A>=0&&(n=s.pairs[A].value);break;case 2:let i=0,o=0;i=e>=s.leftTable.firstGlyph&&e<s.leftTable.firstGlyph+s.leftTable.nGlyphs?s.leftTable.offsets[e-s.leftTable.firstGlyph]:s.array.off,t>=s.rightTable.firstGlyph&&t<s.rightTable.firstGlyph+s.rightTable.nGlyphs&&(o=s.rightTable.offsets[t-s.rightTable.firstGlyph]);let a=(i+o-s.array.off)/2;n=s.array.values.get(a);break;case 3:if(e>=s.glyphCount||t>=s.glyphCount)return 0;n=s.kernValue[s.kernIndex[s.leftClass[e]*s.rightClassCount+s.rightClass[t]]];break;default:throw new Error(`Unsupported kerning sub-table format ${r.format}`)}r.coverage.override?A=n:A+=n}return A}constructor(e){this.kern=e.kern}}class ow{positionGlyphs(e,t){let A=0,r=0;for(let n=0;n<e.length;n++){e[n].isMark?r=n:(A!==r&&this.positionCluster(e,t,A,r),A=r=n)}return A!==r&&this.positionCluster(e,t,A,r),t}positionCluster(e,t,A,r){let n=e[A],s=n.cbox.copy();n.codePoints.length>1&&(s.minX+=(n.codePoints.length-1)*s.width/n.codePoints.length);let i=-t[A].xAdvance,o=0,a=this.font.unitsPerEm/16;for(let l=A+1;l<=r;l++){let A=e[l],r=A.cbox,n=t[l],u=this.getCombiningClass(A.codePoints[0]);if("Not_Reordered"!==u){switch(n.xOffset=n.yOffset=0,u){case"Double_Above":case"Double_Below":n.xOffset+=s.minX-r.width/2-r.minX;break;case"Attached_Below_Left":case"Below_Left":case"Above_Left":n.xOffset+=s.minX-r.minX;break;case"Attached_Above_Right":case"Below_Right":case"Above_Right":n.xOffset+=s.maxX-r.width-r.minX;break;default:n.xOffset+=s.minX+(s.width-r.width)/2-r.minX}switch(u){case"Double_Below":case"Below_Left":case"Below":case"Below_Right":case"Attached_Below_Left":case"Attached_Below":"Attached_Below_Left"!==u&&"Attached_Below"!==u||(s.minY+=a),n.yOffset=-s.minY-r.maxY,s.minY+=r.height;break;case"Double_Above":case"Above_Left":case"Above":case"Above_Right":case"Attached_Above":case"Attached_Above_Right":"Attached_Above"!==u&&"Attached_Above_Right"!==u||(s.maxY+=a),n.yOffset=s.maxY-r.minY,s.maxY+=r.height}n.xAdvance=n.yAdvance=0,n.xOffset+=i,n.yOffset+=o}else i-=n.xAdvance,o-=n.yAdvance}}getCombiningClass(e){let t=lp(e);if(3584===(-256&e))if("Not_Reordered"===t)switch(e){case 3633:case 3636:case 3637:case 3638:case 3639:case 3655:case 3660:case 3645:case 3662:return"Above_Right";case 3761:case 3764:case 3765:case 3766:case 3767:case 3771:case 3788:case 3789:return"Above";case 3772:return"Below"}else if(3642===e)return"Below_Right";switch(t){case"CCC10":case"CCC11":case"CCC12":case"CCC13":case"CCC14":case"CCC15":case"CCC16":case"CCC17":case"CCC18":case"CCC20":case"CCC22":case"CCC29":case"CCC32":case"CCC118":case"CCC129":case"CCC132":return"Below";case"CCC23":return"Attached_Above";case"CCC24":case"CCC107":return"Above_Right";case"CCC25":case"CCC19":return"Above_Left";case"CCC26":case"CCC27":case"CCC28":case"CCC30":case"CCC31":case"CCC33":case"CCC34":case"CCC35":case"CCC36":case"CCC122":case"CCC130":return"Above";case"CCC21":break;case"CCC103":return"Below_Right"}return t}constructor(e){this.font=e}}class aw{get width(){return this.maxX-this.minX}get height(){return this.maxY-this.minY}addPoint(e,t){Math.abs(e)!==1/0&&(e<this.minX&&(this.minX=e),e>this.maxX&&(this.maxX=e)),Math.abs(t)!==1/0&&(t<this.minY&&(this.minY=t),t>this.maxY&&(this.maxY=t))}copy(){return new aw(this.minX,this.minY,this.maxX,this.maxY)}constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1/0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0,A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1/0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1/0;this.minX=e,this.minY=t,this.maxX=A,this.maxY=r}}const lw={Caucasian_Albanian:"aghb",Arabic:"arab",Imperial_Aramaic:"armi",Armenian:"armn",Avestan:"avst",Balinese:"bali",Bamum:"bamu",Bassa_Vah:"bass",Batak:"batk",Bengali:["bng2","beng"],Bopomofo:"bopo",Brahmi:"brah",Braille:"brai",Buginese:"bugi",Buhid:"buhd",Chakma:"cakm",Canadian_Aboriginal:"cans",Carian:"cari",Cham:"cham",Cherokee:"cher",Coptic:"copt",Cypriot:"cprt",Cyrillic:"cyrl",Devanagari:["dev2","deva"],Deseret:"dsrt",Duployan:"dupl",Egyptian_Hieroglyphs:"egyp",Elbasan:"elba",Ethiopic:"ethi",Georgian:"geor",Glagolitic:"glag",Gothic:"goth",Grantha:"gran",Greek:"grek",Gujarati:["gjr2","gujr"],Gurmukhi:["gur2","guru"],Hangul:"hang",Han:"hani",Hanunoo:"hano",Hebrew:"hebr",Hiragana:"hira",Pahawh_Hmong:"hmng",Katakana_Or_Hiragana:"hrkt",Old_Italic:"ital",Javanese:"java",Kayah_Li:"kali",Katakana:"kana",Kharoshthi:"khar",Khmer:"khmr",Khojki:"khoj",Kannada:["knd2","knda"],Kaithi:"kthi",Tai_Tham:"lana",Lao:"lao ",Latin:"latn",Lepcha:"lepc",Limbu:"limb",Linear_A:"lina",Linear_B:"linb",Lisu:"lisu",Lycian:"lyci",Lydian:"lydi",Mahajani:"mahj",Mandaic:"mand",Manichaean:"mani",Mende_Kikakui:"mend",Meroitic_Cursive:"merc",Meroitic_Hieroglyphs:"mero",Malayalam:["mlm2","mlym"],Modi:"modi",Mongolian:"mong",Mro:"mroo",Meetei_Mayek:"mtei",Myanmar:["mym2","mymr"],Old_North_Arabian:"narb",Nabataean:"nbat",Nko:"nko ",Ogham:"ogam",Ol_Chiki:"olck",Old_Turkic:"orkh",Oriya:["ory2","orya"],Osmanya:"osma",Palmyrene:"palm",Pau_Cin_Hau:"pauc",Old_Permic:"perm",Phags_Pa:"phag",Inscriptional_Pahlavi:"phli",Psalter_Pahlavi:"phlp",Phoenician:"phnx",Miao:"plrd",Inscriptional_Parthian:"prti",Rejang:"rjng",Runic:"runr",Samaritan:"samr",Old_South_Arabian:"sarb",Saurashtra:"saur",Shavian:"shaw",Sharada:"shrd",Siddham:"sidd",Khudawadi:"sind",Sinhala:"sinh",Sora_Sompeng:"sora",Sundanese:"sund",Syloti_Nagri:"sylo",Syriac:"syrc",Tagbanwa:"tagb",Takri:"takr",Tai_Le:"tale",New_Tai_Lue:"talu",Tamil:["tml2","taml"],Tai_Viet:"tavt",Telugu:["tel2","telu"],Tifinagh:"tfng",Tagalog:"tglg",Thaana:"thaa",Thai:"thai",Tibetan:"tibt",Tirhuta:"tirh",Ugaritic:"ugar",Vai:"vai ",Warang_Citi:"wara",Old_Persian:"xpeo",Cuneiform:"xsux",Yi:"yi  ",Inherited:"zinh",Common:"zyyy",Unknown:"zzzz"},uw={};for(let A in lw){let e=lw[A];if(Array.isArray(e))for(let t of e)uw[t]=A;else uw[e]=A}const cw={arab:!0,hebr:!0,syrc:!0,thaa:!0,cprt:!0,khar:!0,phnx:!0,"nko ":!0,lydi:!0,avst:!0,armi:!0,phli:!0,prti:!0,sarb:!0,orkh:!0,samr:!0,mand:!0,merc:!0,mero:!0,mani:!0,mend:!0,nbat:!0,narb:!0,palm:!0,phlp:!0};function dw(e){return cw[e]?"rtl":"ltr"}class fw{get advanceWidth(){let e=0;for(let t of this.positions)e+=t.xAdvance;return e}get advanceHeight(){let e=0;for(let t of this.positions)e+=t.yAdvance;return e}get bbox(){let e=new aw,t=0,A=0;for(let r=0;r<this.glyphs.length;r++){let n=this.glyphs[r],s=this.positions[r],i=n.bbox;e.addPoint(i.minX+t+s.xOffset,i.minY+A+s.yOffset),e.addPoint(i.maxX+t+s.xOffset,i.maxY+A+s.yOffset),t+=s.xAdvance,A+=s.yAdvance}return e}constructor(e,t,A,r,n){if(this.glyphs=e,this.positions=null,this.script=A,this.language=r||null,this.direction=n||dw(A),this.features={},Array.isArray(t))for(let s of t)this.features[s]=!0;else"object"===typeof t&&(this.features=t)}}class hw{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.xAdvance=e,this.yAdvance=t,this.xOffset=A,this.yOffset=r}}const gw={allTypographicFeatures:{code:0,exclusive:!1,allTypeFeatures:0},ligatures:{code:1,exclusive:!1,requiredLigatures:0,commonLigatures:2,rareLigatures:4,rebusPictures:8,diphthongLigatures:10,squaredLigatures:12,abbrevSquaredLigatures:14,symbolLigatures:16,contextualLigatures:18,historicalLigatures:20},cursiveConnection:{code:2,exclusive:!0,unconnected:0,partiallyConnected:1,cursive:2},letterCase:{code:3,exclusive:!0},verticalSubstitution:{code:4,exclusive:!1,substituteVerticalForms:0},linguisticRearrangement:{code:5,exclusive:!1,linguisticRearrangement:0},numberSpacing:{code:6,exclusive:!0,monospacedNumbers:0,proportionalNumbers:1,thirdWidthNumbers:2,quarterWidthNumbers:3},smartSwash:{code:8,exclusive:!1,wordInitialSwashes:0,wordFinalSwashes:2,nonFinalSwashes:8},diacritics:{code:9,exclusive:!0,showDiacritics:0,hideDiacritics:1,decomposeDiacritics:2},verticalPosition:{code:10,exclusive:!0,normalPosition:0,superiors:1,inferiors:2,ordinals:3,scientificInferiors:4},fractions:{code:11,exclusive:!0,noFractions:0,verticalFractions:1,diagonalFractions:2},overlappingCharacters:{code:13,exclusive:!1,preventOverlap:0},typographicExtras:{code:14,exclusive:!1,slashedZero:4},mathematicalExtras:{code:15,exclusive:!1,mathematicalGreek:10},ornamentSets:{code:16,exclusive:!0,noOrnaments:0,dingbats:1,piCharacters:2,fleurons:3,decorativeBorders:4,internationalSymbols:5,mathSymbols:6},characterAlternatives:{code:17,exclusive:!0,noAlternates:0},designComplexity:{code:18,exclusive:!0,designLevel1:0,designLevel2:1,designLevel3:2,designLevel4:3,designLevel5:4},styleOptions:{code:19,exclusive:!0,noStyleOptions:0,displayText:1,engravedText:2,illuminatedCaps:3,titlingCaps:4,tallCaps:5},characterShape:{code:20,exclusive:!0,traditionalCharacters:0,simplifiedCharacters:1,JIS1978Characters:2,JIS1983Characters:3,JIS1990Characters:4,traditionalAltOne:5,traditionalAltTwo:6,traditionalAltThree:7,traditionalAltFour:8,traditionalAltFive:9,expertCharacters:10,JIS2004Characters:11,hojoCharacters:12,NLCCharacters:13,traditionalNamesCharacters:14},numberCase:{code:21,exclusive:!0,lowerCaseNumbers:0,upperCaseNumbers:1},textSpacing:{code:22,exclusive:!0,proportionalText:0,monospacedText:1,halfWidthText:2,thirdWidthText:3,quarterWidthText:4,altProportionalText:5,altHalfWidthText:6},transliteration:{code:23,exclusive:!0,noTransliteration:0},annotation:{code:24,exclusive:!0,noAnnotation:0,boxAnnotation:1,roundedBoxAnnotation:2,circleAnnotation:3,invertedCircleAnnotation:4,parenthesisAnnotation:5,periodAnnotation:6,romanNumeralAnnotation:7,diamondAnnotation:8,invertedBoxAnnotation:9,invertedRoundedBoxAnnotation:10},kanaSpacing:{code:25,exclusive:!0,fullWidthKana:0,proportionalKana:1},ideographicSpacing:{code:26,exclusive:!0,fullWidthIdeographs:0,proportionalIdeographs:1,halfWidthIdeographs:2},unicodeDecomposition:{code:27,exclusive:!1,canonicalComposition:0,compatibilityComposition:2,transcodingComposition:4},rubyKana:{code:28,exclusive:!1,rubyKana:2},CJKSymbolAlternatives:{code:29,exclusive:!0,noCJKSymbolAlternatives:0,CJKSymbolAltOne:1,CJKSymbolAltTwo:2,CJKSymbolAltThree:3,CJKSymbolAltFour:4,CJKSymbolAltFive:5},ideographicAlternatives:{code:30,exclusive:!0,noIdeographicAlternatives:0,ideographicAltOne:1,ideographicAltTwo:2,ideographicAltThree:3,ideographicAltFour:4,ideographicAltFive:5},CJKVerticalRomanPlacement:{code:31,exclusive:!0,CJKVerticalRomanCentered:0,CJKVerticalRomanHBaseline:1},italicCJKRoman:{code:32,exclusive:!1,CJKItalicRoman:2},caseSensitiveLayout:{code:33,exclusive:!1,caseSensitiveLayout:0,caseSensitiveSpacing:2},alternateKana:{code:34,exclusive:!1,alternateHorizKana:0,alternateVertKana:2},stylisticAlternatives:{code:35,exclusive:!1,noStylisticAlternates:0,stylisticAltOne:2,stylisticAltTwo:4,stylisticAltThree:6,stylisticAltFour:8,stylisticAltFive:10,stylisticAltSix:12,stylisticAltSeven:14,stylisticAltEight:16,stylisticAltNine:18,stylisticAltTen:20,stylisticAltEleven:22,stylisticAltTwelve:24,stylisticAltThirteen:26,stylisticAltFourteen:28,stylisticAltFifteen:30,stylisticAltSixteen:32,stylisticAltSeventeen:34,stylisticAltEighteen:36,stylisticAltNineteen:38,stylisticAltTwenty:40},contextualAlternates:{code:36,exclusive:!1,contextualAlternates:0,swashAlternates:2,contextualSwashAlternates:4},lowerCase:{code:37,exclusive:!0,defaultLowerCase:0,lowerCaseSmallCaps:1,lowerCasePetiteCaps:2},upperCase:{code:38,exclusive:!0,defaultUpperCase:0,upperCaseSmallCaps:1,upperCasePetiteCaps:2},languageTag:{code:39,exclusive:!0},CJKRomanSpacing:{code:103,exclusive:!0,halfWidthCJKRoman:0,proportionalCJKRoman:1,defaultCJKRoman:2,fullWidthCJKRoman:3}},pw=(e,t)=>[gw[e].code,gw[e][t]],bw={rlig:pw("ligatures","requiredLigatures"),clig:pw("ligatures","contextualLigatures"),dlig:pw("ligatures","rareLigatures"),hlig:pw("ligatures","historicalLigatures"),liga:pw("ligatures","commonLigatures"),hist:pw("ligatures","historicalLigatures"),smcp:pw("lowerCase","lowerCaseSmallCaps"),pcap:pw("lowerCase","lowerCasePetiteCaps"),frac:pw("fractions","diagonalFractions"),dnom:pw("fractions","diagonalFractions"),numr:pw("fractions","diagonalFractions"),afrc:pw("fractions","verticalFractions"),case:pw("caseSensitiveLayout","caseSensitiveLayout"),ccmp:pw("unicodeDecomposition","canonicalComposition"),cpct:pw("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),valt:pw("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),swsh:pw("contextualAlternates","swashAlternates"),cswh:pw("contextualAlternates","contextualSwashAlternates"),curs:pw("cursiveConnection","cursive"),c2pc:pw("upperCase","upperCasePetiteCaps"),c2sc:pw("upperCase","upperCaseSmallCaps"),init:pw("smartSwash","wordInitialSwashes"),fin2:pw("smartSwash","wordFinalSwashes"),medi:pw("smartSwash","nonFinalSwashes"),med2:pw("smartSwash","nonFinalSwashes"),fin3:pw("smartSwash","wordFinalSwashes"),fina:pw("smartSwash","wordFinalSwashes"),pkna:pw("kanaSpacing","proportionalKana"),half:pw("textSpacing","halfWidthText"),halt:pw("textSpacing","altHalfWidthText"),hkna:pw("alternateKana","alternateHorizKana"),vkna:pw("alternateKana","alternateVertKana"),ital:pw("italicCJKRoman","CJKItalicRoman"),lnum:pw("numberCase","upperCaseNumbers"),onum:pw("numberCase","lowerCaseNumbers"),mgrk:pw("mathematicalExtras","mathematicalGreek"),calt:pw("contextualAlternates","contextualAlternates"),vrt2:pw("verticalSubstitution","substituteVerticalForms"),vert:pw("verticalSubstitution","substituteVerticalForms"),tnum:pw("numberSpacing","monospacedNumbers"),pnum:pw("numberSpacing","proportionalNumbers"),sups:pw("verticalPosition","superiors"),subs:pw("verticalPosition","inferiors"),ordn:pw("verticalPosition","ordinals"),pwid:pw("textSpacing","proportionalText"),hwid:pw("textSpacing","halfWidthText"),qwid:pw("textSpacing","quarterWidthText"),twid:pw("textSpacing","thirdWidthText"),fwid:pw("textSpacing","proportionalText"),palt:pw("textSpacing","altProportionalText"),trad:pw("characterShape","traditionalCharacters"),smpl:pw("characterShape","simplifiedCharacters"),jp78:pw("characterShape","JIS1978Characters"),jp83:pw("characterShape","JIS1983Characters"),jp90:pw("characterShape","JIS1990Characters"),jp04:pw("characterShape","JIS2004Characters"),expt:pw("characterShape","expertCharacters"),hojo:pw("characterShape","hojoCharacters"),nlck:pw("characterShape","NLCCharacters"),tnam:pw("characterShape","traditionalNamesCharacters"),ruby:pw("rubyKana","rubyKana"),titl:pw("styleOptions","titlingCaps"),zero:pw("typographicExtras","slashedZero"),ss01:pw("stylisticAlternatives","stylisticAltOne"),ss02:pw("stylisticAlternatives","stylisticAltTwo"),ss03:pw("stylisticAlternatives","stylisticAltThree"),ss04:pw("stylisticAlternatives","stylisticAltFour"),ss05:pw("stylisticAlternatives","stylisticAltFive"),ss06:pw("stylisticAlternatives","stylisticAltSix"),ss07:pw("stylisticAlternatives","stylisticAltSeven"),ss08:pw("stylisticAlternatives","stylisticAltEight"),ss09:pw("stylisticAlternatives","stylisticAltNine"),ss10:pw("stylisticAlternatives","stylisticAltTen"),ss11:pw("stylisticAlternatives","stylisticAltEleven"),ss12:pw("stylisticAlternatives","stylisticAltTwelve"),ss13:pw("stylisticAlternatives","stylisticAltThirteen"),ss14:pw("stylisticAlternatives","stylisticAltFourteen"),ss15:pw("stylisticAlternatives","stylisticAltFifteen"),ss16:pw("stylisticAlternatives","stylisticAltSixteen"),ss17:pw("stylisticAlternatives","stylisticAltSeventeen"),ss18:pw("stylisticAlternatives","stylisticAltEighteen"),ss19:pw("stylisticAlternatives","stylisticAltNineteen"),ss20:pw("stylisticAlternatives","stylisticAltTwenty")};for(let A=1;A<=99;A++)bw[`cv${`00${A}`.slice(-2)}`]=[gw.characterAlternatives.code,A];let mw={};for(let A in bw){let e=bw[A];null==mw[e[0]]&&(mw[e[0]]={}),mw[e[0]][e[1]]=A}function vw(e){let[t,A]=e;if(isNaN(t))var r=gw[t]&&gw[t].code;else r=t;if(isNaN(A))var n=gw[t]&&gw[t][A];else n=A;return[r,n]}class yw{lookup(e){switch(this.table.version){case 0:return this.table.values.getItem(e);case 2:case 4:{let r=0,n=this.table.binarySearchHeader.nUnits-1;for(;r<=n;){var t=r+n>>1;if(65535===(A=this.table.segments[t]).firstGlyph)return null;if(e<A.firstGlyph)n=t-1;else{if(!(e>A.lastGlyph))return 2===this.table.version?A.value:A.values[e-A.firstGlyph];r=t+1}}return null}case 6:{let r=0,n=this.table.binarySearchHeader.nUnits-1;for(;r<=n;){var A;t=r+n>>1;if(65535===(A=this.table.segments[t]).glyph)return null;if(e<A.glyph)n=t-1;else{if(!(e>A.glyph))return A.value;r=t+1}}return null}case 8:return this.table.values[e-this.table.firstGlyph];default:throw new Error(`Unknown lookup table format: ${this.table.version}`)}}glyphsForValue(e){let t=[];switch(this.table.version){case 2:case 4:for(let A of this.table.segments)if(2===this.table.version&&A.value===e)t.push(...ew(A.firstGlyph,A.lastGlyph+1));else for(let r=0;r<A.values.length;r++)A.values[r]===e&&t.push(A.firstGlyph+r);break;case 6:for(let A of this.table.segments)A.value===e&&t.push(A.glyph);break;case 8:for(let A=0;A<this.table.values.length;A++)this.table.values[A]===e&&t.push(this.table.firstGlyph+A);break;default:throw new Error(`Unknown lookup table format: ${this.table.version}`)}return t}constructor(e){this.table=e}}Tg([Np],yw.prototype,"glyphsForValue",null);class ww{process(e,t,A){let r=0,n=t?e.length-1:0,s=t?-1:1;for(;1===s&&n<=e.length||-1===s&&n>=-1;){let t=null,i=1,o=!0;n===e.length||-1===n?i=0:(t=e[n],65535===t.id?i=2:(i=this.lookupTable.lookup(t.id),null==i&&(i=1)));let a=this.stateTable.stateArray.getItem(r)[i],l=this.stateTable.entryTable.getItem(a);0!==i&&2!==i&&(A(t,l,n),o=!(16384&l.flags)),r=l.newState,o&&(n+=s)}return e}traverse(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;if(A.has(t))return;A.add(t);let{nClasses:r,stateArray:n,entryTable:s}=this.stateTable,i=n.getItem(t);for(let o=4;o<r;o++){let t=i[o],r=s.getItem(t);for(let n of this.lookupTable.glyphsForValue(o))e.enter&&e.enter(n,r),0!==r.newState&&this.traverse(e,r.newState,A),e.exit&&e.exit(n,r)}}constructor(e){this.stateTable=e,this.lookupTable=new yw(e.classTable)}}const Bw=4194304;class xw{process(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(let r of this.morx.chains){let A=r.defaultFlags;for(let e of r.features){let r;(r=t[e.featureType])&&(r[e.featureSetting]?(A&=e.disableFlags,A|=e.enableFlags):!1===r[e.featureSetting]&&(A|=~e.disableFlags,A&=~e.enableFlags))}for(let t of r.subtables)t.subFeatureFlags&A&&this.processSubtable(t,e)}let A=e.length-1;for(;A>=0;)65535===e[A].id&&e.splice(A,1),A--;return e}processSubtable(e,t){if(this.subtable=e,this.glyphs=t,4===this.subtable.type)return void this.processNoncontextualSubstitutions(this.subtable,this.glyphs);this.ligatureStack=[],this.markedGlyph=null,this.firstGlyph=null,this.lastGlyph=null,this.markedIndex=null;let A=this.getStateMachine(e),r=this.getProcessor(),n=!!(this.subtable.coverage&Bw);return A.process(this.glyphs,n,r)}getStateMachine(e){return new ww(e.table.stateTable)}getProcessor(){switch(this.subtable.type){case 0:return this.processIndicRearragement;case 1:return this.processContextualSubstitution;case 2:return this.processLigature;case 4:return this.processNoncontextualSubstitutions;case 5:return this.processGlyphInsertion;default:throw new Error(`Invalid morx subtable type: ${this.subtable.type}`)}}processIndicRearragement(e,t,A){32768&t.flags&&(this.firstGlyph=A),8192&t.flags&&(this.lastGlyph=A),function(e,t,A,r){switch(t){case 0:return e;case 1:return Cw(e,[A,1],[r,0]);case 2:return Cw(e,[A,0],[r,1]);case 3:return Cw(e,[A,1],[r,1]);case 4:return Cw(e,[A,2],[r,0]);case 5:return Cw(e,[A,2],[r,0],!0,!1);case 6:return Cw(e,[A,0],[r,2]);case 7:return Cw(e,[A,0],[r,2],!1,!0);case 8:return Cw(e,[A,1],[r,2]);case 9:return Cw(e,[A,1],[r,2],!1,!0);case 10:return Cw(e,[A,2],[r,1]);case 11:return Cw(e,[A,2],[r,1],!0,!1);case 12:return Cw(e,[A,2],[r,2]);case 13:return Cw(e,[A,2],[r,2],!0,!1);case 14:return Cw(e,[A,2],[r,2],!1,!0);case 15:return Cw(e,[A,2],[r,2],!0,!0);default:throw new Error(`Unknown verb: ${t}`)}}(this.glyphs,15&t.flags,this.firstGlyph,this.lastGlyph)}processContextualSubstitution(e,t,A){let r=this.subtable.table.substitutionTable.items;if(65535!==t.markIndex){let A=r.getItem(t.markIndex),s=new yw(A);e=this.glyphs[this.markedGlyph],(n=s.lookup(e.id))&&(this.glyphs[this.markedGlyph]=this.font.getGlyph(n,e.codePoints))}if(65535!==t.currentIndex){let s=r.getItem(t.currentIndex),i=new yw(s);var n;e=this.glyphs[A],(n=i.lookup(e.id))&&(this.glyphs[A]=this.font.getGlyph(n,e.codePoints))}32768&t.flags&&(this.markedGlyph=A)}processLigature(e,t,A){if(32768&t.flags&&this.ligatureStack.push(A),8192&t.flags){let e=this.subtable.table.ligatureActions,A=this.subtable.table.components,r=this.subtable.table.ligatureList,n=t.action,s=!1,i=0,o=[],a=[];for(;!s;){let t=this.ligatureStack.pop();o.unshift(...this.glyphs[t].codePoints);let l=e.getItem(n++);s=!!(2147483648&l);let u=!!(1073741824&l),c=(1073741823&l)<<2>>2;if(c+=this.glyphs[t].id,i+=A.getItem(c),s||u){let e=r.getItem(i);this.glyphs[t]=this.font.getGlyph(e,o),a.push(t),i=0,o=[]}else this.glyphs[t]=this.font.getGlyph(65535)}this.ligatureStack.push(...a)}}processNoncontextualSubstitutions(e,t,A){let r=new yw(e.table.lookupTable);for(A=0;A<t.length;A++){let e=t[A];if(65535!==e.id){let n=r.lookup(e.id);n&&(t[A]=this.font.getGlyph(n,e.codePoints))}}}_insertGlyphs(e,t,A,r){let n=[];for(;A--;){let e=this.subtable.table.insertionActions.getItem(t++);n.push(this.font.getGlyph(e))}r||e++,this.glyphs.splice(e,0,...n)}processGlyphInsertion(e,t,A){if(32768&t.flags&&(this.markedIndex=A),65535!==t.markedInsertIndex){let e=(31&t.flags)>>>5,A=!!(1024&t.flags);this._insertGlyphs(this.markedIndex,t.markedInsertIndex,e,A)}if(65535!==t.currentInsertIndex){let e=(992&t.flags)>>>5,r=!!(2048&t.flags);this._insertGlyphs(A,t.currentInsertIndex,e,r)}}getSupportedFeatures(){let e=[];for(let t of this.morx.chains)for(let A of t.features)e.push([A.featureType,A.featureSetting]);return e}generateInputs(e){return this.inputCache||this.generateInputCache(),this.inputCache[e]||[]}generateInputCache(){this.inputCache={};for(let e of this.morx.chains){let t=e.defaultFlags;for(let A of e.subtables)A.subFeatureFlags&t&&this.generateInputsForSubtable(A)}}generateInputsForSubtable(e){if(2!==e.type)return;if(!!(e.coverage&Bw))throw new Error("Reverse subtable, not supported.");this.subtable=e,this.ligatureStack=[];let t=this.getStateMachine(e),A=this.getProcessor(),r=[],n=[];this.glyphs=[],t.traverse({enter:(e,t)=>{let s=this.glyphs;n.push({glyphs:s.slice(),ligatureStack:this.ligatureStack.slice()});let i=this.font.getGlyph(e);r.push(i),s.push(r[r.length-1]),A(s[s.length-1],t,s.length-1);let o=0,a=0;for(let A=0;A<s.length&&o<=1;A++)65535!==s[A].id&&(o++,a=s[A].id);if(1===o){let e=r.map((e=>e.id)),t=this.inputCache[a];t?t.push(e):this.inputCache[a]=[e]}},exit:()=>{({glyphs:this.glyphs,ligatureStack:this.ligatureStack}=n.pop()),r.pop()}})}constructor(e){this.processIndicRearragement=this.processIndicRearragement.bind(this),this.processContextualSubstitution=this.processContextualSubstitution.bind(this),this.processLigature=this.processLigature.bind(this),this.processNoncontextualSubstitutions=this.processNoncontextualSubstitutions.bind(this),this.processGlyphInsertion=this.processGlyphInsertion.bind(this),this.font=e,this.morx=e.morx,this.inputCache=null}}function Cw(e,t,A){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],n=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=e.splice(A[0]-(A[1]-1),A[1]);n&&s.reverse();let i=e.splice(t[0],t[1],...s);return r&&i.reverse(),e.splice(A[0]-(t[1]-1),0,...i),e}Tg([Np],xw.prototype,"getStateMachine",null);class Ew{substitute(e){"rtl"===e.direction&&e.glyphs.reverse(),this.morxProcessor.process(e.glyphs,function(e){let t={};for(let A in e){let r;(r=bw[A])&&(null==t[r[0]]&&(t[r[0]]={}),t[r[0]][r[1]]=e[A])}return t}(e.features))}getAvailableFeatures(e,t){return function(e){let t={};if(Array.isArray(e))for(let A=0;A<e.length;A++){let r,n=vw(e[A]);(r=mw[n[0]]&&mw[n[0]][n[1]])&&(t[r]=!0)}else if("object"===typeof e)for(let A in e){let r=e[A];for(let e in r){let n,s=vw([A,e]);r[e]&&(n=mw[s[0]]&&mw[s[0]][s[1]])&&(t[n]=!0)}}return Object.keys(t)}(this.morxProcessor.getSupportedFeatures())}stringsForGlyph(e){let t=this.morxProcessor.generateInputs(e),A=new Set;for(let r of t)this._addStrings(r,0,A,"");return A}_addStrings(e,t,A,r){let n=this.font._cmapProcessor.codePointsForGlyph(e[t]);for(let s of n){let n=r+String.fromCodePoint(s);t<e.length-1?this._addStrings(e,t+1,A,n):A.add(n)}}constructor(e){this.font=e,this.morxProcessor=new xw(e),this.fallbackPosition=!1}}class Nw{_addFeatures(e,t){let A=this.stages.length-1,r=this.stages[A];for(let n of e)null==this.allFeatures[n]&&(r.push(n),this.allFeatures[n]=A,t&&(this.globalFeatures[n]=!0))}add(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===this.stages.length&&this.stages.push([]),"string"===typeof e&&(e=[e]),Array.isArray(e))this._addFeatures(e,t);else{if("object"!==typeof e)throw new Error("Unsupported argument to ShapingPlan#add");this._addFeatures(e.global||[],!0),this._addFeatures(e.local||[],!1)}}addStage(e,t){"function"===typeof e?this.stages.push(e,[]):(this.stages.push([]),this.add(e,t))}setFeatureOverrides(e){if(Array.isArray(e))this.add(e);else if("object"===typeof e)for(let t in e)if(e[t])this.add(t);else if(null!=this.allFeatures[t]){let e=this.stages[this.allFeatures[t]];e.splice(e.indexOf(t),1),delete this.allFeatures[t],delete this.globalFeatures[t]}}assignGlobalFeatures(e){for(let t of e)for(let e in this.globalFeatures)t.features[e]=!0}process(e,t,A){for(let r of this.stages)"function"===typeof r?A||r(this.font,t,this):r.length>0&&e.applyFeatures(r,t,A)}constructor(e,t,A){this.font=e,this.script=t,this.direction=A,this.stages=[],this.globalFeatures={},this.allFeatures={}}}const Dw=["rvrn"],Qw=["ccmp","locl","rlig","mark","mkmk"],Pw=["frac","numr","dnom"],Iw=["calt","clig","liga","rclt","curs","kern"],Lw={ltr:["ltra","ltrm"],rtl:["rtla","rtlm"]};class kw{static plan(e,t,A){this.planPreprocessing(e),this.planFeatures(e),this.planPostprocessing(e,A),e.assignGlobalFeatures(t),this.assignFeatures(e,t)}static planPreprocessing(e){e.add({global:[...Dw,...Lw[e.direction]],local:Pw})}static planFeatures(e){}static planPostprocessing(e,t){e.add([...Qw,...Iw]),e.setFeatureOverrides(t)}static assignFeatures(e,t){for(let A=0;A<t.length;A++){let e=t[A];if(8260===e.codePoints[0]){let r=A,n=A+1;for(;r>0&&cp(t[r-1].codePoints[0]);)t[r-1].features.numr=!0,t[r-1].features.frac=!0,r--;for(;n<t.length&&cp(t[n].codePoints[0]);)t[n].features.dnom=!0,t[n].features.frac=!0,n++;e.features.frac=!0,A=n-1}}}}jg(kw,"zeroMarkWidths","AFTER_GPOS");const Gw=new Og(nw("APABAAAAAAAAOAAAAf0BAv7tmi1MxDAUx7vtvjhAgcDgkEgEAnmXEBIMCYaEcygEiqBQ4FAkCE4ikUgMiiBJSAgSiUQSDMn9L9eSl6bddddug9t7yS/trevre+3r27pcNxZiG+yCfdCVv/9LeQxOwRm4AJegD27ALbgD9+ABPJF+z+BN/h7yDj5k/VOWX6SdmU5+wLWknggxDxaS8u0qiiX4uiz9XamQ3wzDMAzDMAzDMAzDVI/h959V/v7BMAzDMAzDMLlyNTNiMSdewVxbiA44B4/guz1qW58VYlMI0WsJ0W+N6kXw0spvPtdwhtkwnGM6uLaV4Xyzg3v3PM9DPfQ/sOg4xPWjipy31P8LTqbU304c/cLCUmWJLNB2Uz2U1KTeRKNmKHVMfbJC+/0loTZRH/W5cvEvBJPMbREkWt3FD1NcqXZBSpuE2Ad0PBehPtNrPtIEdYP+hiRt/V1jIiE69X4NT/uVZI3PUHE9bm5M7ePGdZWy951v7Nn6j8v1WWKP3mt6ttnsigx6VN7Vc0VomSSGqW2mGNP1muZPl7LfjNUaKNFtDGVf2fvE9O7VlBS5j333c5p/eeoOqcs1R/hIqDWLJ7TTlksirVT1SI7l8k4Yp+g3jafGcrU1RM6l9th80XOpnlN97bDNY4i4s61B0Si/ipa0uHMl6zqEjlFfCZm/TM8KmzQDjmuTAQ==")),Fw=["isol","fina","fin2","fin3","medi","med2","init"],Sw=0,Ww=6,Zw="isol",Xw="fina",Mw="fin2",zw="medi",Rw="med2",jw="init",Tw=null,Uw=[[[Tw,Tw,0],[Tw,Zw,2],[Tw,Zw,1],[Tw,Zw,2],[Tw,Zw,1],[Tw,Zw,6]],[[Tw,Tw,0],[Tw,Zw,2],[Tw,Zw,1],[Tw,Zw,2],[Tw,Mw,5],[Tw,Zw,6]],[[Tw,Tw,0],[Tw,Zw,2],[jw,Xw,1],[jw,Xw,3],[jw,Xw,4],[jw,Xw,6]],[[Tw,Tw,0],[Tw,Zw,2],[zw,Xw,1],[zw,Xw,3],[zw,Xw,4],[zw,Xw,6]],[[Tw,Tw,0],[Tw,Zw,2],[Rw,Zw,1],[Rw,Zw,2],[Rw,Mw,5],[Rw,Zw,6]],[[Tw,Tw,0],[Tw,Zw,2],[Zw,Zw,1],[Zw,Zw,2],[Zw,Mw,5],[Zw,Zw,6]],[[Tw,Tw,0],[Tw,Zw,2],[Tw,Zw,1],[Tw,Zw,2],[Tw,"fin3",5],[Tw,Zw,6]]];class Vw extends kw{static planFeatures(e){e.add(["ccmp","locl"]);for(let t=0;t<Fw.length;t++){let A=Fw[t];e.addStage(A,!1)}e.addStage("mset")}static assignFeatures(e,t){super.assignFeatures(e,t);let A=-1,r=0,n=[];for(let i=0;i<t.length;i++){let e,o;let a=Ow((s=t[i]).codePoints[0]);a!==Ww?([o,e,r]=Uw[r][a],o!==Tw&&-1!==A&&(n[A]=o),n[i]=e,A=i):n[i]=Tw}for(let i=0;i<t.length;i++){let e;var s=t[i];(e=n[i])&&(s.features[e]=!0)}}}function Ow(e){let t=Gw.get(e);if(t)return t-1;let A=ap(e);return"Mn"===A||"Me"===A||"Cf"===A?Ww:Sw}class Yw{reset(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.options=e,this.flags=e.flags||{},this.markAttachmentType=e.markAttachmentType||0,this.index=t}get cur(){return this.glyphs[this.index]||null}shouldIgnore(e){return this.flags.ignoreMarks&&e.isMark||this.flags.ignoreBaseGlyphs&&e.isBase||this.flags.ignoreLigatures&&e.isLigature||this.markAttachmentType&&e.isMark&&e.markAttachmentType!==this.markAttachmentType}move(e){for(this.index+=e;0<=this.index&&this.index<this.glyphs.length&&this.shouldIgnore(this.glyphs[this.index]);)this.index+=e;return 0>this.index||this.index>=this.glyphs.length?null:this.glyphs[this.index]}next(){return this.move(1)}prev(){return this.move(-1)}peek(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=this.index,A=this.increment(e);return this.index=t,A}peekIndex(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=this.index;this.increment(e);let A=this.index;return this.index=t,A}increment(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=e<0?-1:1;for(e=Math.abs(e);e--;)this.move(t);return this.glyphs[this.index]}constructor(e,t){this.glyphs=e,this.reset(t)}}const Hw=["DFLT","dflt","latn"];class Kw{findScript(e){if(null==this.table.scriptList)return null;Array.isArray(e)||(e=[e]);for(let t of e)for(let e of this.table.scriptList)if(e.tag===t)return e;return null}selectScript(e,t,A){let r,n=!1;if(!this.script||e!==this.scriptTag){if(r=this.findScript(e),r||(r=this.findScript(Hw)),!r)return this.scriptTag;this.scriptTag=r.tag,this.script=r.script,this.language=null,this.languageTag=null,n=!0}if(A&&A===this.direction||(this.direction=A||dw(e)),t&&t.length<4&&(t+=" ".repeat(4-t.length)),!t||t!==this.languageTag){this.language=null;for(let e of this.script.langSysRecords)if(e.tag===t){this.language=e.langSys,this.languageTag=e.tag;break}this.language||(this.language=this.script.defaultLangSys,this.languageTag=null),n=!0}if(n&&(this.features={},this.language))for(let s of this.language.featureIndexes){let e=this.table.featureList[s],t=this.substituteFeatureForVariations(s);this.features[e.tag]=t||e.feature}return this.scriptTag}lookupsForFeatures(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1?arguments[1]:void 0,A=[];for(let r of e){let e=this.features[r];if(e)for(let n of e.lookupListIndexes)t&&-1!==t.indexOf(n)||A.push({feature:r,index:n,lookup:this.table.lookupList.get(n)})}return A.sort(((e,t)=>e.index-t.index)),A}substituteFeatureForVariations(e){if(-1===this.variationsIndex)return null;let t=this.table.featureVariations.featureVariationRecords[this.variationsIndex].featureTableSubstitution.substitutions;for(let A of t)if(A.featureIndex===e)return A.alternateFeatureTable;return null}findVariationsIndex(e){let t=this.table.featureVariations;if(!t)return-1;let A=t.featureVariationRecords;for(let r=0;r<A.length;r++){let t=A[r].conditionSet.conditionTable;if(this.variationConditionsMatch(t,e))return r}return-1}variationConditionsMatch(e,t){return e.every((e=>{let A=e.axisIndex<t.length?t[e.axisIndex]:0;return e.filterRangeMinValue<=A&&A<=e.filterRangeMaxValue}))}applyFeatures(e,t,A){let r=this.lookupsForFeatures(e);this.applyLookups(r,t,A)}applyLookups(e,t,A){this.glyphs=t,this.positions=A,this.glyphIterator=new Yw(t);for(let{feature:r,lookup:n}of e)for(this.currentFeature=r,this.glyphIterator.reset(n.flags);this.glyphIterator.index<t.length;)if(r in this.glyphIterator.cur.features){for(let e of n.subTables){if(this.applyLookup(n.lookupType,e))break}this.glyphIterator.next()}else this.glyphIterator.next()}applyLookup(e,t){throw new Error("applyLookup must be implemented by subclasses")}applyLookupList(e){let t=this.glyphIterator.options,A=this.glyphIterator.index;for(let r of e){this.glyphIterator.reset(t,A),this.glyphIterator.increment(r.sequenceIndex);let e=this.table.lookupList.get(r.lookupListIndex);this.glyphIterator.reset(e.flags,this.glyphIterator.index);for(let t of e.subTables)if(this.applyLookup(e.lookupType,t))break}return this.glyphIterator.reset(t,A),!0}coverageIndex(e,t){switch(null==t&&(t=this.glyphIterator.cur.id),e.version){case 1:return e.glyphs.indexOf(t);case 2:for(let A of e.rangeRecords)if(A.start<=t&&t<=A.end)return A.startCoverageIndex+t-A.start}return-1}match(e,t,A,r){let n=this.glyphIterator.index,s=this.glyphIterator.increment(e),i=0;for(;i<t.length&&s&&A(t[i],s);)r&&r.push(this.glyphIterator.index),i++,s=this.glyphIterator.next();return this.glyphIterator.index=n,!(i<t.length)&&(r||!0)}sequenceMatches(e,t){return this.match(e,t,((e,t)=>e===t.id))}sequenceMatchIndices(e,t){return this.match(e,t,((e,t)=>this.currentFeature in t.features&&e===t.id),[])}coverageSequenceMatches(e,t){return this.match(e,t,((e,t)=>this.coverageIndex(e,t.id)>=0))}getClassID(e,t){switch(t.version){case 1:let A=e-t.startGlyph;if(A>=0&&A<t.classValueArray.length)return t.classValueArray[A];break;case 2:for(let r of t.classRangeRecord)if(r.start<=e&&e<=r.end)return r.class}return 0}classSequenceMatches(e,t,A){return this.match(e,t,((e,t)=>e===this.getClassID(t.id,A)))}applyContext(e){let t,A;switch(e.version){case 1:if(t=this.coverageIndex(e.coverage),-1===t)return!1;A=e.ruleSets[t];for(let e of A)if(this.sequenceMatches(1,e.input))return this.applyLookupList(e.lookupRecords);break;case 2:if(-1===this.coverageIndex(e.coverage))return!1;if(t=this.getClassID(this.glyphIterator.cur.id,e.classDef),-1===t)return!1;A=e.classSet[t];for(let t of A)if(this.classSequenceMatches(1,t.classes,e.classDef))return this.applyLookupList(t.lookupRecords);break;case 3:if(this.coverageSequenceMatches(0,e.coverages))return this.applyLookupList(e.lookupRecords)}return!1}applyChainingContext(e){let t;switch(e.version){case 1:if(t=this.coverageIndex(e.coverage),-1===t)return!1;let A=e.chainRuleSets[t];for(let e of A)if(this.sequenceMatches(-e.backtrack.length,e.backtrack)&&this.sequenceMatches(1,e.input)&&this.sequenceMatches(1+e.input.length,e.lookahead))return this.applyLookupList(e.lookupRecords);break;case 2:if(-1===this.coverageIndex(e.coverage))return!1;t=this.getClassID(this.glyphIterator.cur.id,e.inputClassDef);let r=e.chainClassSet[t];if(!r)return!1;for(let t of r)if(this.classSequenceMatches(-t.backtrack.length,t.backtrack,e.backtrackClassDef)&&this.classSequenceMatches(1,t.input,e.inputClassDef)&&this.classSequenceMatches(1+t.input.length,t.lookahead,e.lookaheadClassDef))return this.applyLookupList(t.lookupRecords);break;case 3:if(this.coverageSequenceMatches(-e.backtrackGlyphCount,e.backtrackCoverage)&&this.coverageSequenceMatches(0,e.inputCoverage)&&this.coverageSequenceMatches(e.inputGlyphCount,e.lookaheadCoverage))return this.applyLookupList(e.lookupRecords)}return!1}constructor(e,t){this.font=e,this.table=t,this.script=null,this.scriptTag=null,this.language=null,this.languageTag=null,this.features={},this.lookups={},this.variationsIndex=e._variationProcessor?this.findVariationsIndex(e._variationProcessor.normalizedCoords):-1,this.selectScript(),this.glyphs=[],this.positions=[],this.ligatureID=1,this.currentFeature=null}}class qw{get id(){return this._id}set id(e){this._id=e,this.substituted=!0;let t=this._font.GDEF;if(t&&t.glyphClassDef){let A=Kw.prototype.getClassID(e,t.glyphClassDef);this.isBase=1===A,this.isLigature=2===A,this.isMark=3===A,this.markAttachmentType=t.markAttachClassDef?Kw.prototype.getClassID(e,t.markAttachClassDef):0}else this.isMark=this.codePoints.length>0&&this.codePoints.every(dp),this.isBase=!this.isMark,this.isLigature=this.codePoints.length>1,this.markAttachmentType=0}copy(){return new qw(this._font,this.id,this.codePoints,this.features)}constructor(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],r=arguments.length>3?arguments[3]:void 0;if(this._font=e,this.codePoints=A,this.id=t,this.features={},Array.isArray(r))for(let n=0;n<r.length;n++){let e=r[n];this.features[e]=!0}else"object"===typeof r&&Object.assign(this.features,r);this.ligatureID=null,this.ligatureComponent=null,this.isLigated=!1,this.cursiveAttachment=null,this.markAttachment=null,this.shaperInfo=null,this.substituted=!1,this.isMultiplied=!1}}class Jw extends kw{static planFeatures(e){e.add(["ljmo","vjmo","tjmo"],!1)}static assignFeatures(e,t){let A=0,r=0;for(;r<t.length;){let n,s=t[r].codePoints[0],i=EB(s);switch([n,A]=IB[A][i],n){case NB:e.font.hasGlyphForCodePoint(s)||(r=kB(t,r,e.font));break;case DB:r=GB(t,r,e.font);break;case QB:FB(t,r,e.font);break;case PB:r=SB(t,r,e.font)}r++}}}jg(Jw,"zeroMarkWidths","NONE");const _w=44032,$w=55204-_w+1,eB=4352,tB=4449,AB=4519,rB=21,nB=28,sB=eB+19-1,iB=tB+rB-1,oB=AB+nB-1,aB=9676,lB=e=>4352<=e&&e<=4447||43360<=e&&e<=43388,uB=e=>4448<=e&&e<=4519||55216<=e&&e<=55238,cB=e=>4520<=e&&e<=4607||55243<=e&&e<=55291,dB=e=>12334<=e&&e<=12335,fB=e=>_w<=e&&e<=55204,hB=e=>e-_w<$w&&(e-_w)%nB===0,gB=e=>eB<=e&&e<=sB,pB=e=>tB<=e&&e<=iB,bB=e=>AB+1&&1<=e&&e<=oB,mB=0,vB=1,yB=2,wB=3,BB=4,xB=5,CB=6;function EB(e){return lB(e)?vB:uB(e)?yB:cB(e)?wB:hB(e)?BB:fB(e)?xB:dB(e)?CB:mB}const NB=1,DB=2,QB=4,PB=5,IB=[[[0,0],[0,1],[0,0],[0,0],[NB,2],[NB,3],[PB,0]],[[0,0],[0,1],[DB,2],[0,0],[NB,2],[NB,3],[PB,0]],[[0,0],[0,1],[0,0],[DB,3],[NB,2],[NB,3],[QB,0]],[[0,0],[0,1],[0,0],[0,0],[NB,2],[NB,3],[QB,0]]];function LB(e,t,A){return new qw(e,e.glyphForCodePoint(t).id,[t],A)}function kB(e,t,A){let r=e[t],n=r.codePoints[0]-_w,s=AB+n%nB;n=n/nB|0;let i=eB+n/rB|0,o=tB+n%rB;if(!A.hasGlyphForCodePoint(i)||!A.hasGlyphForCodePoint(o)||s!==AB&&!A.hasGlyphForCodePoint(s))return t;let a=LB(A,i,r.features);a.features.ljmo=!0;let l=LB(A,o,r.features);l.features.vjmo=!0;let u=[a,l];if(s>AB){let e=LB(A,s,r.features);e.features.tjmo=!0,u.push(e)}return e.splice(t,1,...u),t+u.length-1}function GB(e,t,A){let r,n,s,i,o=e[t],a=EB(e[t].codePoints[0]),l=e[t-1].codePoints[0],u=EB(l);if(u===BB&&a===wB)r=l,i=o;else{a===yB?(n=e[t-1],s=o):(n=e[t-2],s=e[t-1],i=o);let A=n.codePoints[0],l=s.codePoints[0];gB(A)&&pB(l)&&(r=_w+((A-eB)*rB+(l-tB))*nB)}let c=i&&i.codePoints[0]||AB;if(null!=r&&(c===AB||bB(c))){let n=r+(c-AB);if(A.hasGlyphForCodePoint(n)){let r=u===yB?3:2;return e.splice(t-r+1,r,LB(A,n,o.features)),t-r+1}}return n&&(n.features.ljmo=!0),s&&(s.features.vjmo=!0),i&&(i.features.tjmo=!0),u===BB?(kB(e,t-1,A),t+1):t}function FB(e,t,A){let r=e[t],n=e[t].codePoints[0];if(0===A.glyphForCodePoint(n).advanceWidth)return;let s=function(e){switch(EB(e)){case BB:case xB:return 1;case yB:return 2;case wB:return 3}}(e[t-1].codePoints[0]);return e.splice(t,1),e.splice(t-s,0,r)}function SB(e,t,A){let r=e[t],n=e[t].codePoints[0];if(A.hasGlyphForCodePoint(aB)){let s=LB(A,aB,r.features),i=0===A.glyphForCodePoint(n).advanceWidth?t:t+1;e.splice(i,0,s),t++}return t}var WB;WB=JSON.parse('{"stateTable":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],"accepting":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],"tags":[[],["broken_cluster"],["consonant_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],[],["broken_cluster"],["symbol_cluster"],[],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["symbol_cluster"],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],[],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],[],[],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],["consonant_syllable"],["vowel_syllable"],["standalone_cluster"]]}');var ZB;ZB=JSON.parse('{"categories":["O","IND","S","GB","B","FM","CGJ","VMAbv","VMPst","VAbv","VPst","CMBlw","VPre","VBlw","H","VMBlw","CMAbv","MBlw","CS","R","SUB","MPst","MPre","FAbv","FPst","FBlw","null","SMAbv","SMBlw","VMPre","ZWNJ","ZWJ","WJ","M","VS","N","HN","MAbv"],"decompositions":{"2507":[2503,2494],"2508":[2503,2519],"2888":[2887,2902],"2891":[2887,2878],"2892":[2887,2903],"3018":[3014,3006],"3019":[3015,3006],"3020":[3014,3031],"3144":[3142,3158],"3264":[3263,3285],"3271":[3270,3285],"3272":[3270,3286],"3274":[3270,3266],"3275":[3270,3266,3285],"3402":[3398,3390],"3403":[3399,3390],"3404":[3398,3415],"3546":[3545,3530],"3548":[3545,3535],"3549":[3545,3535,3530],"3550":[3545,3551],"3635":[3661,3634],"3763":[3789,3762],"3955":[3953,3954],"3957":[3953,3956],"3958":[4018,3968],"3959":[4018,3953,3968],"3960":[4019,3968],"3961":[4019,3953,3968],"3969":[3953,3968],"6971":[6970,6965],"6973":[6972,6965],"6976":[6974,6965],"6977":[6975,6965],"6979":[6978,6965],"69934":[69937,69927],"69935":[69938,69927],"70475":[70471,70462],"70476":[70471,70487],"70843":[70841,70842],"70844":[70841,70832],"70846":[70841,70845],"71098":[71096,71087],"71099":[71097,71087]},"stateTable":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,0,23,0,0,2,0,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],"accepting":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],"tags":[[],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["symbol_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["virama_terminated_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["number_joiner_terminated_cluster"],["standard_cluster"],["standard_cluster"],["numeral_cluster"]]}');const XB={X:1,C:2,V:4,N:8,H:16,ZWNJ:32,ZWJ:64,M:128,SM:256,VD:512,A:1024,Placeholder:2048,Dotted_Circle:4096,RS:8192,Coeng:16384,Repha:32768,Ra:65536,CM:131072,Symbol:262144},MB={Start:1,Ra_To_Become_Reph:2,Pre_M:4,Pre_C:8,Base_C:16,After_Main:32,Above_C:64,Before_Sub:128,Below_C:256,After_Sub:512,Before_Post:1024,Post_C:2048,After_Post:4096,Final_C:8192,SMVD:16384,End:32768},zB=XB.C|XB.Ra|XB.CM|XB.V|XB.Placeholder|XB.Dotted_Circle,RB=XB.ZWJ|XB.ZWNJ,jB=XB.H|XB.Coeng,TB={Default:{hasOldSpec:!1,virama:0,basePos:"Last",rephPos:MB.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Devanagari:{hasOldSpec:!0,virama:2381,basePos:"Last",rephPos:MB.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Bengali:{hasOldSpec:!0,virama:2509,basePos:"Last",rephPos:MB.After_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gurmukhi:{hasOldSpec:!0,virama:2637,basePos:"Last",rephPos:MB.Before_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gujarati:{hasOldSpec:!0,virama:2765,basePos:"Last",rephPos:MB.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Oriya:{hasOldSpec:!0,virama:2893,basePos:"Last",rephPos:MB.After_Main,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Tamil:{hasOldSpec:!0,virama:3021,basePos:"Last",rephPos:MB.After_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Telugu:{hasOldSpec:!0,virama:3149,basePos:"Last",rephPos:MB.After_Post,rephMode:"Explicit",blwfMode:"Post_Only"},Kannada:{hasOldSpec:!0,virama:3277,basePos:"Last",rephPos:MB.After_Post,rephMode:"Implicit",blwfMode:"Post_Only"},Malayalam:{hasOldSpec:!0,virama:3405,basePos:"Last",rephPos:MB.After_Main,rephMode:"Log_Repha",blwfMode:"Pre_And_Post"},Khmer:{hasOldSpec:!1,virama:6098,basePos:"First",rephPos:MB.Ra_To_Become_Reph,rephMode:"Vis_Repha",blwfMode:"Pre_And_Post"}},UB={6078:[6081,6078],6079:[6081,6079],6080:[6081,6080],6084:[6081,6084],6085:[6081,6085]},{decompositions:VB}=mp(ZB),OB=new Og(nw("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")),YB=new fp(mp(WB));class HB extends kw{static planFeatures(e){var t;e.addStage(_B),e.addStage(["locl","ccmp"]),e.addStage(nx),e.addStage("nukt"),e.addStage("akhn"),e.addStage("rphf",!1),e.addStage("rkrf"),e.addStage("pref",!1),e.addStage("blwf",!1),e.addStage("abvf",!1),e.addStage("half",!1),e.addStage("pstf",!1),e.addStage("vatu"),e.addStage("cjct"),e.addStage("cfar",!1),e.addStage(sx),e.addStage({local:["init"],global:["pres","abvs","blws","psts","haln","dist","abvm","blwm","calt","clig"]}),e.unicodeScript=(t=e.script,uw[t]),e.indicConfig=TB[e.unicodeScript]||TB.Default,e.isOldSpec=e.indicConfig.hasOldSpec&&"2"!==e.script[e.script.length-1]}static assignFeatures(e,t){for(let A=t.length-1;A>=0;A--){let r=t[A].codePoints[0],n=UB[r]||VB[r];if(n){let r=n.map((r=>{let n=e.font.glyphForCodePoint(r);return new qw(e.font,n.id,[r],t[A].features)}));t.splice(A,1,...r)}}}}function KB(e){return OB.get(e.codePoints[0])>>8}function qB(e){return 1<<(255&OB.get(e.codePoints[0]))}jg(HB,"zeroMarkWidths","NONE");class JB{constructor(e,t,A,r){this.category=e,this.position=t,this.syllableType=A,this.syllable=r}}function _B(e,t){let A=0,r=0;for(let[n,s,i]of YB.match(t.map(KB))){if(n>r){++A;for(let e=r;e<n;e++)t[e].shaperInfo=new JB(XB.X,MB.End,"non_indic_cluster",A)}++A;for(let e=n;e<=s;e++)t[e].shaperInfo=new JB(1<<KB(t[e]),qB(t[e]),i[0],A);r=s+1}if(r<t.length){++A;for(let e=r;e<t.length;e++)t[e].shaperInfo=new JB(XB.X,MB.End,"non_indic_cluster",A)}}function $B(e){return e.shaperInfo.category&zB}function ex(e){return e.shaperInfo.category&RB}function tx(e){return e.shaperInfo.category&jB}function Ax(e,t){for(let A of e)A.features={[t]:!0};return e[0]._font._layoutEngine.engine.GSUBProcessor.applyFeatures([t],e),1===e.length}function rx(e,t,A){let r=[A,t,A];return Ax(r.slice(0,2),"blwf")||Ax(r.slice(1,3),"blwf")?MB.Below_C:Ax(r.slice(0,2),"pstf")||Ax(r.slice(1,3),"pstf")||Ax(r.slice(0,2),"pref")||Ax(r.slice(1,3),"pref")?MB.Post_C:MB.Base_C}function nx(e,t,A){let r=A.indicConfig,n=e._layoutEngine.engine.GSUBProcessor.features,s=e.glyphForCodePoint(9676).id,i=e.glyphForCodePoint(r.virama).id;if(i){let A=new qw(e,i,[r.virama]);for(let e=0;e<t.length;e++)t[e].shaperInfo.position===MB.Base_C&&(t[e].shaperInfo.position=rx(0,t[e].copy(),A))}for(let o=0,a=ix(t,0);o<t.length;o=a,a=ix(t,o)){let{category:i,syllableType:l}=t[o].shaperInfo;if("symbol_cluster"===l||"non_indic_cluster"===l)continue;if("broken_cluster"===l&&s){let A=new qw(e,s,[9676]);A.shaperInfo=new JB(1<<KB(A),qB(A),t[o].shaperInfo.syllableType,t[o].shaperInfo.syllable);let r=o;for(;r<a&&t[r].shaperInfo.category===XB.Repha;)r++;t.splice(r++,0,A),a++}let u=a,c=o,d=!1;if(r.rephPos!==MB.Ra_To_Become_Reph&&n.rphf&&o+3<=a&&("Implicit"===r.rephMode&&!ex(t[o+2])||"Explicit"===r.rephMode&&t[o+2].shaperInfo.category===XB.ZWJ)){let e=[t[o].copy(),t[o+1].copy(),t[o+2].copy()];if(Ax(e.slice(0,2),"rphf")||"Explicit"===r.rephMode&&Ax(e,"rphf")){for(c+=2;c<a&&ex(t[c]);)c++;u=o,d=!0}}else if("Log_Repha"===r.rephMode&&t[o].shaperInfo.category===XB.Repha){for(c++;c<a&&ex(t[c]);)c++;u=o,d=!0}switch(r.basePos){case"Last":{let e=a,A=!1;do{let r=t[--e].shaperInfo;if($B(t[e])){if(r.position!==MB.Below_C&&(r.position!==MB.Post_C||A)){u=e;break}r.position===MB.Below_C&&(A=!0),u=e}else if(o<e&&r.category===XB.ZWJ&&t[e-1].shaperInfo.category===XB.H)break}while(e>c);break}case"First":u=o;for(let e=u+1;e<a;e++)$B(t[e])&&(t[e].shaperInfo.position=MB.Below_C)}d&&u===o&&c-u<=2&&(d=!1);for(let e=o;e<u;e++){let A=t[e].shaperInfo;A.position=Math.min(MB.Pre_C,A.position)}u<a&&(t[u].shaperInfo.position=MB.Base_C);for(let e=u+1;e<a;e++)if(t[e].shaperInfo.category===XB.M){for(let A=e+1;A<a;A++)if($B(t[A])){t[A].shaperInfo.position=MB.Final_C;break}break}if(d&&(t[o].shaperInfo.position=MB.Ra_To_Become_Reph),A.isOldSpec){let e="Malayalam"!==A.unicodeScript;for(let A=u+1;A<a;A++)if(t[A].shaperInfo.category===XB.H){let r;for(r=a-1;r>A&&!($B(t[r])||e&&t[r].shaperInfo.category===XB.H);r--);if(t[r].shaperInfo.category!==XB.H&&r>A){let e=t[A];t.splice(A,0,...t.splice(A+1,r-A)),t[r]=e}break}}let f=MB.Start;for(let e=o;e<a;e++){let A=t[e].shaperInfo;if(A.category&(RB|XB.N|XB.RS|XB.CM|jB&A.category)){if(A.position=f,A.category===XB.H&&A.position===MB.Pre_M)for(let r=e;r>o;r--)if(t[r-1].shaperInfo.position!==MB.Pre_M){A.position=t[r-1].shaperInfo.position;break}}else A.position!==MB.SMVD&&(f=A.position)}let h=u;for(let e=u+1;e<a;e++)if($B(t[e])){for(let A=h+1;A<e;A++)t[A].shaperInfo.position<MB.SMVD&&(t[A].shaperInfo.position=t[e].shaperInfo.position);h=e}else t[e].shaperInfo.category===XB.M&&(h=e);let g=t.slice(o,a);g.sort(((e,t)=>e.shaperInfo.position-t.shaperInfo.position)),t.splice(o,g.length,...g);for(let e=o;e<a;e++)if(t[e].shaperInfo.position===MB.Base_C){u=e;break}for(let e=o;e<a&&t[e].shaperInfo.position===MB.Ra_To_Become_Reph;e++)t[e].features.rphf=!0;let p=!A.isOldSpec&&"Pre_And_Post"===r.blwfMode;for(let e=o;e<u;e++)t[e].features.half=!0,p&&(t[e].features.blwf=!0);for(let e=u+1;e<a;e++)t[e].features.abvf=!0,t[e].features.pstf=!0,t[e].features.blwf=!0;if(A.isOldSpec&&"Devanagari"===A.unicodeScript)for(let e=o;e+1<u;e++)t[e].shaperInfo.category!==XB.Ra||t[e+1].shaperInfo.category!==XB.H||e+1!==u&&t[e+2].shaperInfo.category!==XB.ZWJ||(t[e].features.blwf=!0,t[e+1].features.blwf=!0);let b=2;if(n.pref&&u+b<a)for(let e=u+1;e+b-1<a;e++){if(Ax([t[e].copy(),t[e+1].copy()],"pref")){for(let A=0;A<b;A++)t[e++].features.pref=!0;if(n.cfar)for(;e<a;e++)t[e].features.cfar=!0;break}}for(let e=o+1;e<a;e++)if(ex(t[e])){let A=t[e].shaperInfo.category===XB.ZWNJ,r=e;do{r--,A&&delete t[r].features.half}while(r>o&&!$B(t[r]))}}}function sx(e,t,A){let r=A.indicConfig,n=e._layoutEngine.engine.GSUBProcessor.features;for(let s=0,i=ix(t,0);s<t.length;s=i,i=ix(t,s)){let e=!!n.pref,o=s;for(;o<i;o++)if(t[o].shaperInfo.position>=MB.Base_C){if(e&&o+1<i)for(let A=o+1;A<i;A++)if(t[A].features.pref){if(!t[A].substituted||!t[A].isLigated||t[A].isMultiplied){for(o=A;o<i&&tx(t[o]);)o++;t[o].shaperInfo.position=MB.BASE_C,e=!1}break}if("Malayalam"===A.unicodeScript)for(let e=o+1;e<i;e++){for(;e<i&&ex(t[e]);)e++;if(e===i||!tx(t[e]))break;for(e++;e<i&&ex(t[e]);)e++;e<i&&$B(t[e])&&t[e].shaperInfo.position===MB.Below_C&&(o=e,t[o].shaperInfo.position=MB.Base_C)}s<o&&t[o].shaperInfo.position>MB.Base_C&&o--;break}if(o===i&&s<o&&t[o-1].shaperInfo.category===XB.ZWJ&&o--,o<i)for(;s<o&&t[o].shaperInfo.category&(XB.N|jB);)o--;if(s+1<i&&s<o){let e=o===i?o-2:o-1;if("Malayalam"!==A.unicodeScript&&"Tamil"!==A.unicodeScript){for(;e>s&&!(t[e].shaperInfo.category&(XB.M|jB));)e--;tx(t[e])&&t[e].shaperInfo.position!==MB.Pre_M?e+1<i&&ex(t[e+1])&&e++:e=s}if(s<e&&t[e].shaperInfo.position!==MB.Pre_M)for(let A=e;A>s;A--)if(t[A-1].shaperInfo.position===MB.Pre_M){let r=A-1;r<o&&o<=e&&o--;let n=t[r];t.splice(r,0,...t.splice(r+1,e-r)),t[e]=n,e--}}if(s+1<i&&t[s].shaperInfo.position===MB.Ra_To_Become_Reph&&t[s].shaperInfo.category===XB.Repha!==(t[s].isLigated&&!t[s].isMultiplied)){let e,A=r.rephPos,n=!1;if(A!==MB.After_Post){for(e=s+1;e<o&&!tx(t[e]);)e++;if(e<o&&tx(t[e])&&(e+1<o&&ex(t[e+1])&&e++,n=!0),!n&&A===MB.After_Main){for(e=o;e+1<i&&t[e+1].shaperInfo.position<=MB.After_Main;)e++;n=e<i}if(!n&&A===MB.After_Sub){for(e=o;e+1<i&&!(t[e+1].shaperInfo.position&(MB.Post_C|MB.After_Post|MB.SMVD));)e++;n=e<i}}if(!n){for(e=s+1;e<o&&!tx(t[e]);)e++;e<o&&tx(t[e])&&(e+1<o&&ex(t[e+1])&&e++,n=!0)}if(!n){for(e=i-1;e>s&&t[e].shaperInfo.position===MB.SMVD;)e--;if(tx(t[e]))for(let A=o+1;A<e;A++)t[A].shaperInfo.category===XB.M&&e--}let a=t[s];t.splice(s,0,...t.splice(s+1,e-s)),t[e]=a,s<o&&o<=e&&o--}if(e&&o+1<i)for(let r=o+1;r<i;r++)if(t[r].features.pref){if(t[r].isLigated&&!t[r].isMultiplied){let e=o;if("Malayalam"!==A.unicodeScript&&"Tamil"!==A.unicodeScript){for(;e>s&&!(t[e-1].shaperInfo.category&(XB.M|jB));)e--;if(e>s&&t[e-1].shaperInfo.category===XB.M){let A=r;for(let r=o+1;r<A;r++)if(t[r].shaperInfo.category===XB.M){e--;break}}}e>s&&tx(t[e-1])&&e<i&&ex(t[e])&&e++;let n=r,a=t[n];t.splice(e+1,0,...t.splice(e,n-e)),t[e]=a,e<=o&&o<n&&o++}break}t[s].shaperInfo.position!==MB.Pre_M||s&&/Cf|Mn/.test(ap(t[s-1].codePoints[0]))||(t[s].features.init=!0)}}function ix(e,t){if(t>=e.length)return t;let A=e[t].shaperInfo.syllable;for(;++t<e.length&&e[t].shaperInfo.syllable===A;);return t}const{categories:ox,decompositions:ax}=mp(ZB),lx=new Og(nw("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")),ux=new fp(mp(ZB));class cx extends kw{static planFeatures(e){e.addStage(hx),e.addStage(["locl","ccmp","nukt","akhn"]),e.addStage(gx),e.addStage(["rphf"],!1),e.addStage(px),e.addStage(gx),e.addStage(["pref"]),e.addStage(bx),e.addStage(["rkrf","abvf","blwf","half","pstf","vatu","cjct"]),e.addStage(mx),e.addStage(["abvs","blws","pres","psts","dist","abvm","blwm"])}static assignFeatures(e,t){for(let A=t.length-1;A>=0;A--){let r=t[A].codePoints[0];if(ax[r]){let n=ax[r].map((r=>{let n=e.font.glyphForCodePoint(r);return new qw(e.font,n.id,[r],t[A].features)}));t.splice(A,1,...n)}}}}function dx(e){return lx.get(e.codePoints[0])}jg(cx,"zeroMarkWidths","BEFORE_GPOS");class fx{constructor(e,t,A){this.category=e,this.syllableType=t,this.syllable=A}}function hx(e,t){let A=0;for(let[r,n,s]of ux.match(t.map(dx))){++A;for(let i=r;i<=n;i++)t[i].shaperInfo=new fx(ox[dx(t[i])],s[0],A);let e="R"===t[r].shaperInfo.category?1:Math.min(3,n-r);for(let A=r;A<r+e;A++)t[A].features.rphf=!0}}function gx(e,t){for(let A of t)A.substituted=!1}function px(e,t){for(let A of t)A.substituted&&A.features.rphf&&(A.shaperInfo.category="R")}function bx(e,t){for(let A of t)A.substituted&&(A.shaperInfo.category="VPre")}function mx(e,t){let A=e.glyphForCodePoint(9676).id;for(let r=0,n=vx(t,0);r<t.length;r=n,n=vx(t,r)){let s,i,o=t[r].shaperInfo,a=o.syllableType;if("virama_terminated_cluster"===a||"standard_cluster"===a||"broken_cluster"===a){if("broken_cluster"===a&&A){let i=new qw(e,A,[9676]);for(i.shaperInfo=o,s=r;s<n&&"R"===t[s].shaperInfo.category;s++);t.splice(++s,0,i),n++}if("R"===o.category&&n-r>1)for(s=r+1;s<n;s++)if(o=t[s].shaperInfo,wx(o)||yx(t[s])){yx(t[s])&&s--,t.splice(r,0,...t.splice(r+1,s-r),t[s]);break}for(s=r,i=n;s<n;s++)o=t[s].shaperInfo,wx(o)||yx(t[s])?i=yx(t[s])?s+1:s:("VPre"===o.category||"VMPre"===o.category)&&i<s&&t.splice(i,1,t[s],...t.splice(i,s-i))}}}function vx(e,t){if(t>=e.length)return t;let A=e[t].shaperInfo.syllable;for(;++t<e.length&&e[t].shaperInfo.syllable===A;);return t}function yx(e){return"H"===e.shaperInfo.category&&!e.isLigated}function wx(e){return"B"===e.category||"GB"===e.category}const Bx={arab:Vw,mong:Vw,syrc:Vw,"nko ":Vw,phag:Vw,mand:Vw,mani:Vw,phlp:Vw,hang:Jw,bng2:HB,beng:HB,dev2:HB,deva:HB,gjr2:HB,gujr:HB,guru:HB,gur2:HB,knda:HB,knd2:HB,mlm2:HB,mlym:HB,ory2:HB,orya:HB,taml:HB,tml2:HB,telu:HB,tel2:HB,khmr:HB,bali:cx,batk:cx,brah:cx,bugi:cx,buhd:cx,cakm:cx,cham:cx,dupl:cx,egyp:cx,gran:cx,hano:cx,java:cx,kthi:cx,kali:cx,khar:cx,khoj:cx,sind:cx,lepc:cx,limb:cx,mahj:cx,mtei:cx,modi:cx,hmng:cx,rjng:cx,saur:cx,shrd:cx,sidd:cx,sinh:HB,sund:cx,sylo:cx,tglg:cx,tagb:cx,tale:cx,lana:cx,tavt:cx,takr:cx,tibt:cx,tfng:cx,tirh:cx,latn:kw,DFLT:kw};class xx extends Kw{applyLookup(e,t){switch(e){case 1:{let e=this.coverageIndex(t.coverage);if(-1===e)return!1;let A=this.glyphIterator.cur;switch(t.version){case 1:A.id=A.id+t.deltaGlyphID&65535;break;case 2:A.id=t.substitute.get(e)}return!0}case 2:{let e=this.coverageIndex(t.coverage);if(-1!==e){let A=t.sequences.get(e);if(0===A.length)return this.glyphs.splice(this.glyphIterator.index,1),!0;this.glyphIterator.cur.id=A[0],this.glyphIterator.cur.ligatureComponent=0;let r=this.glyphIterator.cur.features,n=this.glyphIterator.cur,s=A.slice(1).map(((e,t)=>{let A=new qw(this.font,e,void 0,r);return A.shaperInfo=n.shaperInfo,A.isLigated=n.isLigated,A.ligatureComponent=t+1,A.substituted=!0,A.isMultiplied=!0,A}));return this.glyphs.splice(this.glyphIterator.index+1,0,...s),!0}return!1}case 3:{let e=this.coverageIndex(t.coverage);if(-1!==e){let A=0;return this.glyphIterator.cur.id=t.alternateSet.get(e)[A],!0}return!1}case 4:{let e=this.coverageIndex(t.coverage);if(-1===e)return!1;for(let r of t.ligatureSets.get(e)){let e=this.sequenceMatchIndices(1,r.components);if(!e)continue;let t=this.glyphIterator.cur,n=t.codePoints.slice();for(let A of e)n.push(...this.glyphs[A].codePoints);let s=new qw(this.font,r.glyph,n,t.features);s.shaperInfo=t.shaperInfo,s.isLigated=!0,s.substituted=!0;let i=t.isMark;for(let A=0;A<e.length&&i;A++)i=this.glyphs[e[A]].isMark;s.ligatureID=i?null:this.ligatureID++;let o=t.ligatureID,a=t.codePoints.length,l=a,u=this.glyphIterator.index+1;for(let r of e){if(i)u=r;else for(;u<r;){var A=l-a+Math.min(this.glyphs[u].ligatureComponent||1,a);this.glyphs[u].ligatureID=s.ligatureID,this.glyphs[u].ligatureComponent=A,u++}o=this.glyphs[u].ligatureID,a=this.glyphs[u].codePoints.length,l+=a,u++}if(o&&!i)for(let r=u;r<this.glyphs.length&&this.glyphs[r].ligatureID===o;r++){A=l-a+Math.min(this.glyphs[r].ligatureComponent||1,a);this.glyphs[r].ligatureComponent=A}for(let A=e.length-1;A>=0;A--)this.glyphs.splice(e[A],1);return this.glyphs[this.glyphIterator.index]=s,!0}return!1}case 5:return this.applyContext(t);case 6:return this.applyChainingContext(t);case 7:return this.applyLookup(t.lookupType,t.extension);default:throw new Error(`GSUB lookupType ${e} is not supported`)}}}class Cx extends Kw{applyPositionValue(e,t){let A=this.positions[this.glyphIterator.peekIndex(e)];null!=t.xAdvance&&(A.xAdvance+=t.xAdvance),null!=t.yAdvance&&(A.yAdvance+=t.yAdvance),null!=t.xPlacement&&(A.xOffset+=t.xPlacement),null!=t.yPlacement&&(A.yOffset+=t.yPlacement);let r=this.font._variationProcessor,n=this.font.GDEF&&this.font.GDEF.itemVariationStore;r&&n&&(t.xPlaDevice&&(A.xOffset+=r.getDelta(n,t.xPlaDevice.a,t.xPlaDevice.b)),t.yPlaDevice&&(A.yOffset+=r.getDelta(n,t.yPlaDevice.a,t.yPlaDevice.b)),t.xAdvDevice&&(A.xAdvance+=r.getDelta(n,t.xAdvDevice.a,t.xAdvDevice.b)),t.yAdvDevice&&(A.yAdvance+=r.getDelta(n,t.yAdvDevice.a,t.yAdvDevice.b)))}applyLookup(e,t){switch(e){case 1:{let e=this.coverageIndex(t.coverage);if(-1===e)return!1;switch(t.version){case 1:this.applyPositionValue(0,t.value);break;case 2:this.applyPositionValue(0,t.values.get(e))}return!0}case 2:{let e=this.glyphIterator.peek();if(!e)return!1;let r=this.coverageIndex(t.coverage);if(-1===r)return!1;switch(t.version){case 1:let n=t.pairSets.get(r);for(let t of n)if(t.secondGlyph===e.id)return this.applyPositionValue(0,t.value1),this.applyPositionValue(1,t.value2),!0;return!1;case 2:let s=this.getClassID(this.glyphIterator.cur.id,t.classDef1),i=this.getClassID(e.id,t.classDef2);if(-1===s||-1===i)return!1;var A=t.classRecords.get(s).get(i);return this.applyPositionValue(0,A.value1),this.applyPositionValue(1,A.value2),!0}}case 3:{let e=this.glyphIterator.peekIndex(),A=this.glyphs[e];if(!A)return!1;let r=t.entryExitRecords[this.coverageIndex(t.coverage)];if(!r||!r.exitAnchor)return!1;let n=t.entryExitRecords[this.coverageIndex(t.coverage,A.id)];if(!n||!n.entryAnchor)return!1;let s,i=this.getAnchor(n.entryAnchor),o=this.getAnchor(r.exitAnchor),a=this.positions[this.glyphIterator.index],l=this.positions[e];switch(this.direction){case"ltr":a.xAdvance=o.x+a.xOffset,s=i.x+l.xOffset,l.xAdvance-=s,l.xOffset-=s;break;case"rtl":s=o.x+a.xOffset,a.xAdvance-=s,a.xOffset-=s,l.xAdvance=i.x+l.xOffset}return this.glyphIterator.flags.rightToLeft?(this.glyphIterator.cur.cursiveAttachment=e,a.yOffset=i.y-o.y):(A.cursiveAttachment=this.glyphIterator.index,a.yOffset=o.y-i.y),!0}case 4:{let e=this.coverageIndex(t.markCoverage);if(-1===e)return!1;let A=this.glyphIterator.index;for(;--A>=0&&(this.glyphs[A].isMark||this.glyphs[A].ligatureComponent>0););if(A<0)return!1;let r=this.coverageIndex(t.baseCoverage,this.glyphs[A].id);if(-1===r)return!1;let n=t.markArray[e],s=t.baseArray[r][n.class];return this.applyAnchor(n,s,A),!0}case 5:{let e=this.coverageIndex(t.markCoverage);if(-1===e)return!1;let A=this.glyphIterator.index;for(;--A>=0&&this.glyphs[A].isMark;);if(A<0)return!1;let r=this.coverageIndex(t.ligatureCoverage,this.glyphs[A].id);if(-1===r)return!1;let n=t.ligatureArray[r],s=this.glyphIterator.cur,i=this.glyphs[A],o=i.ligatureID&&i.ligatureID===s.ligatureID&&s.ligatureComponent>0?Math.min(s.ligatureComponent,i.codePoints.length)-1:i.codePoints.length-1,a=t.markArray[e],l=n[o][a.class];return this.applyAnchor(a,l,A),!0}case 6:{let e=this.coverageIndex(t.mark1Coverage);if(-1===e)return!1;let A=this.glyphIterator.peekIndex(-1),r=this.glyphs[A];if(!r||!r.isMark)return!1;let n=this.glyphIterator.cur,s=!1;if(n.ligatureID===r.ligatureID?n.ligatureID?n.ligatureComponent===r.ligatureComponent&&(s=!0):s=!0:(n.ligatureID&&!n.ligatureComponent||r.ligatureID&&!r.ligatureComponent)&&(s=!0),!s)return!1;let i=this.coverageIndex(t.mark2Coverage,r.id);if(-1===i)return!1;let o=t.mark1Array[e],a=t.mark2Array[i][o.class];return this.applyAnchor(o,a,A),!0}case 7:return this.applyContext(t);case 8:return this.applyChainingContext(t);case 9:return this.applyLookup(t.lookupType,t.extension);default:throw new Error(`Unsupported GPOS table: ${e}`)}}applyAnchor(e,t,A){let r=this.getAnchor(t),n=this.getAnchor(e.markAnchor),s=(this.positions[A],this.positions[this.glyphIterator.index]);s.xOffset=r.x-n.x,s.yOffset=r.y-n.y,this.glyphIterator.cur.markAttachment=A}getAnchor(e){let t=e.xCoordinate,A=e.yCoordinate,r=this.font._variationProcessor,n=this.font.GDEF&&this.font.GDEF.itemVariationStore;return r&&n&&(e.xDeviceTable&&(t+=r.getDelta(n,e.xDeviceTable.a,e.xDeviceTable.b)),e.yDeviceTable&&(A+=r.getDelta(n,e.yDeviceTable.a,e.yDeviceTable.b))),{x:t,y:A}}applyFeatures(e,t,A){super.applyFeatures(e,t,A);for(var r=0;r<this.glyphs.length;r++)this.fixCursiveAttachment(r);this.fixMarkAttachment()}fixCursiveAttachment(e){let t=this.glyphs[e];if(null!=t.cursiveAttachment){let A=t.cursiveAttachment;t.cursiveAttachment=null,this.fixCursiveAttachment(A),this.positions[e].yOffset+=this.positions[A].yOffset}}fixMarkAttachment(){for(let e=0;e<this.glyphs.length;e++){let t=this.glyphs[e];if(null!=t.markAttachment){let A=t.markAttachment;if(this.positions[e].xOffset+=this.positions[A].xOffset,this.positions[e].yOffset+=this.positions[A].yOffset,"ltr"===this.direction)for(let t=A;t<e;t++)this.positions[e].xOffset-=this.positions[t].xAdvance,this.positions[e].yOffset-=this.positions[t].yAdvance;else for(let t=A+1;t<e+1;t++)this.positions[e].xOffset+=this.positions[t].xAdvance,this.positions[e].yOffset+=this.positions[t].yAdvance}}}}class Ex{setup(e){this.glyphInfos=e.glyphs.map((e=>new qw(this.font,e.id,[...e.codePoints])));let t=null;this.GPOSProcessor&&(t=this.GPOSProcessor.selectScript(e.script,e.language,e.direction)),this.GSUBProcessor&&(t=this.GSUBProcessor.selectScript(e.script,e.language,e.direction)),this.shaper=function(e){Array.isArray(e)||(e=[e]);for(let t of e){let e=Bx[t];if(e)return e}return kw}(t),this.plan=new Nw(this.font,t,e.direction),this.shaper.plan(this.plan,this.glyphInfos,e.features);for(let A in this.plan.allFeatures)e.features[A]=!0}substitute(e){this.GSUBProcessor&&(this.plan.process(this.GSUBProcessor,this.glyphInfos),e.glyphs=this.glyphInfos.map((e=>this.font.getGlyph(e.id,e.codePoints))))}position(e){return"BEFORE_GPOS"===this.shaper.zeroMarkWidths&&this.zeroMarkAdvances(e.positions),this.GPOSProcessor&&this.plan.process(this.GPOSProcessor,this.glyphInfos,e.positions),"AFTER_GPOS"===this.shaper.zeroMarkWidths&&this.zeroMarkAdvances(e.positions),"rtl"===e.direction&&(e.glyphs.reverse(),e.positions.reverse()),this.GPOSProcessor&&this.GPOSProcessor.features}zeroMarkAdvances(e){for(let t=0;t<this.glyphInfos.length;t++)this.glyphInfos[t].isMark&&(e[t].xAdvance=0,e[t].yAdvance=0)}cleanup(){this.glyphInfos=null,this.plan=null,this.shaper=null}getAvailableFeatures(e,t){let A=[];return this.GSUBProcessor&&(this.GSUBProcessor.selectScript(e,t),A.push(...Object.keys(this.GSUBProcessor.features))),this.GPOSProcessor&&(this.GPOSProcessor.selectScript(e,t),A.push(...Object.keys(this.GPOSProcessor.features))),A}constructor(e){this.font=e,this.glyphInfos=null,this.plan=null,this.GSUBProcessor=null,this.GPOSProcessor=null,this.fallbackPosition=!0,e.GSUB&&(this.GSUBProcessor=new xx(e,e.GSUB)),e.GPOS&&(this.GPOSProcessor=new Cx(e,e.GPOS))}}class Nx{layout(e,t,A,r,n){if("string"===typeof t&&(n=r,r=A,A=t,t=[]),"string"===typeof e){null==A&&(A=function(e){let t=e.length,A=0;for(;A<t;){let r=e.charCodeAt(A++);if(55296<=r&&r<=56319&&A<t){let t=e.charCodeAt(A);56320<=t&&t<=57343&&(A++,r=((1023&r)<<10)+(1023&t)+65536)}let n=up(r);if("Common"!==n&&"Inherited"!==n&&"Unknown"!==n)return lw[n]}return lw.Unknown}(e));var s=this.font.glyphsForString(e)}else{if(null==A){let t=[];for(let A of e)t.push(...A.codePoints);A=function(e){for(let t=0;t<e.length;t++){let A=up(e[t]);if("Common"!==A&&"Inherited"!==A&&"Unknown"!==A)return lw[A]}return lw.Unknown}(t)}s=e}let i=new fw(s,t,A,r,n);return 0===s.length?(i.positions=[],i):(this.engine&&this.engine.setup&&this.engine.setup(i),this.substitute(i),this.position(i),this.hideDefaultIgnorables(i.glyphs,i.positions),this.engine&&this.engine.cleanup&&this.engine.cleanup(),i)}substitute(e){this.engine&&this.engine.substitute&&this.engine.substitute(e)}position(e){e.positions=e.glyphs.map((e=>new hw(e.advanceWidth)));let t=null;this.engine&&this.engine.position&&(t=this.engine.position(e)),t||this.engine&&!this.engine.fallbackPosition||(this.unicodeLayoutEngine||(this.unicodeLayoutEngine=new ow(this.font)),this.unicodeLayoutEngine.positionGlyphs(e.glyphs,e.positions)),t&&t.kern||!1===e.features.kern||!this.font.kern||(this.kernProcessor||(this.kernProcessor=new iw(this.font)),this.kernProcessor.process(e.glyphs,e.positions),e.features.kern=!0)}hideDefaultIgnorables(e,t){let A=this.font.glyphForCodePoint(32);for(let r=0;r<e.length;r++)this.isDefaultIgnorable(e[r].codePoints[0])&&(e[r]=A,t[r].xAdvance=0,t[r].yAdvance=0)}isDefaultIgnorable(e){let t=e>>16;if(0===t)switch(e>>8){case 0:return 173===e;case 3:return 847===e;case 6:return 1564===e;case 23:return 6068<=e&&e<=6069;case 24:return 6155<=e&&e<=6158;case 32:return 8203<=e&&e<=8207||8234<=e&&e<=8238||8288<=e&&e<=8303;case 254:return 65024<=e&&e<=65039||65279===e;case 255:return 65520<=e&&e<=65528;default:return!1}else switch(t){case 1:return 113824<=e&&e<=113827||119155<=e&&e<=119162;case 14:return 917504<=e&&e<=921599;default:return!1}}getAvailableFeatures(e,t){let A=[];return this.engine&&A.push(...this.engine.getAvailableFeatures(e,t)),this.font.kern&&-1===A.indexOf("kern")&&A.push("kern"),A}stringsForGlyph(e){let t=new Set,A=this.font._cmapProcessor.codePointsForGlyph(e);for(let r of A)t.add(String.fromCodePoint(r));if(this.engine&&this.engine.stringsForGlyph)for(let r of this.engine.stringsForGlyph(e))t.add(r);return Array.from(t)}constructor(e){this.font=e,this.unicodeLayoutEngine=null,this.kernProcessor=null,this.font.morx?this.engine=new Ew(this.font):(this.font.GSUB||this.font.GPOS)&&(this.engine=new Ex(this.font))}}const Dx={moveTo:"M",lineTo:"L",quadraticCurveTo:"Q",bezierCurveTo:"C",closePath:"Z"};class Qx{toFunction(){return e=>{this.commands.forEach((t=>e[t.command].apply(e,t.args)))}}toSVG(){let e=this.commands.map((e=>{let t=e.args.map((e=>Math.round(100*e)/100));return`${Dx[e.command]}${t.join(" ")}`}));return e.join("")}get cbox(){if(!this._cbox){let e=new aw;for(let t of this.commands)for(let A=0;A<t.args.length;A+=2)e.addPoint(t.args[A],t.args[A+1]);this._cbox=Object.freeze(e)}return this._cbox}get bbox(){if(this._bbox)return this._bbox;let e=new aw,t=0,A=0,r=e=>Math.pow(1-e,3)*d[p]+3*Math.pow(1-e,2)*e*f[p]+3*(1-e)*Math.pow(e,2)*h[p]+Math.pow(e,3)*g[p];for(let b of this.commands)switch(b.command){case"moveTo":case"lineTo":let[m,v]=b.args;e.addPoint(m,v),t=m,A=v;break;case"quadraticCurveTo":case"bezierCurveTo":if("quadraticCurveTo"===b.command)var[n,s,i,o]=b.args,a=t+2/3*(n-t),l=A+2/3*(s-A),u=i+2/3*(n-i),c=o+2/3*(s-o);else var[a,l,u,c,i,o]=b.args;e.addPoint(i,o);for(var d=[t,A],f=[a,l],h=[u,c],g=[i,o],p=0;p<=1;p++){let t=6*d[p]-12*f[p]+6*h[p],A=-3*d[p]+9*f[p]-9*h[p]+3*g[p];if(b=3*f[p]-3*d[p],0===A){if(0===t)continue;let A=-b/t;0<A&&A<1&&(0===p?e.addPoint(r(A),e.maxY):1===p&&e.addPoint(e.maxX,r(A)));continue}let n=Math.pow(t,2)-4*b*A;if(n<0)continue;let s=(-t+Math.sqrt(n))/(2*A);0<s&&s<1&&(0===p?e.addPoint(r(s),e.maxY):1===p&&e.addPoint(e.maxX,r(s)));let i=(-t-Math.sqrt(n))/(2*A);0<i&&i<1&&(0===p?e.addPoint(r(i),e.maxY):1===p&&e.addPoint(e.maxX,r(i)))}t=i,A=o}return this._bbox=Object.freeze(e)}mapPoints(e){let t=new Qx;for(let A of this.commands){let r=[];for(let t=0;t<A.args.length;t+=2){let[n,s]=e(A.args[t],A.args[t+1]);r.push(n,s)}t[A.command](...r)}return t}transform(e,t,A,r,n,s){return this.mapPoints(((i,o)=>[e*i+A*o+n,t*i+r*o+s]))}translate(e,t){return this.transform(1,0,0,1,e,t)}rotate(e){let t=Math.cos(e),A=Math.sin(e);return this.transform(t,A,-A,t,0,0)}scale(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;return this.transform(e,0,0,t,0,0)}constructor(){this.commands=[],this._bbox=null,this._cbox=null}}for(let A of["moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath"])Qx.prototype[A]=function(){this._bbox=this._cbox=null;for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.commands.push({command:A,args:t}),this};var Px=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"];class Ix{_getPath(){return new Qx}_getCBox(){return this.path.cbox}_getBBox(){return this.path.bbox}_getTableMetrics(e){if(this.id<e.metrics.length)return e.metrics.get(this.id);let t=e.metrics.get(e.metrics.length-1);return{advance:t?t.advance:0,bearing:e.bearings.get(this.id-e.metrics.length)||0}}_getMetrics(e){if(this._metrics)return this._metrics;let{advance:t,bearing:A}=this._getTableMetrics(this._font.hmtx);if(this._font.vmtx)var{advance:r,bearing:n}=this._getTableMetrics(this._font.vmtx);else{let t;if("undefined"!==typeof e&&null!==e||({cbox:e}=this),(t=this._font["OS/2"])&&t.version>0)r=Math.abs(t.typoAscender-t.typoDescender),n=t.typoAscender-e.maxY;else{let{hhea:t}=this._font;var r=Math.abs(t.ascent-t.descent),n=t.ascent-e.maxY}}return this._font._variationProcessor&&this._font.HVAR&&(t+=this._font._variationProcessor.getAdvanceAdjustment(this.id,this._font.HVAR)),this._metrics={advanceWidth:t,advanceHeight:r,leftBearing:A,topBearing:n}}get cbox(){return this._getCBox()}get bbox(){return this._getBBox()}get path(){return this._getPath()}getScaledPath(e){let t=1/this._font.unitsPerEm*e;return this.path.scale(t)}get advanceWidth(){return this._getMetrics().advanceWidth}get advanceHeight(){return this._getMetrics().advanceHeight}get ligatureCaretPositions(){}_getName(){let{post:e}=this._font;if(!e)return null;switch(e.version){case 1:return Px[this.id];case 2:let t=e.glyphNameIndex[this.id];return t<Px.length?Px[t]:e.names[t-Px.length];case 2.5:return Px[this.id+e.offsets[this.id]];case 4:return String.fromCharCode(e.map[this.id])}}get name(){return this._getName()}render(e,t){e.save();let A=1/this._font.head.unitsPerEm*t;e.scale(A,A),this.path.toFunction()(e),e.fill(),e.restore()}constructor(e,t,A){this.id=e,this.codePoints=t,this._font=A,this.isMark=this.codePoints.length>0&&this.codePoints.every(dp),this.isLigature=this.codePoints.length>1}}Tg([Np],Ix.prototype,"cbox",null),Tg([Np],Ix.prototype,"bbox",null),Tg([Np],Ix.prototype,"path",null),Tg([Np],Ix.prototype,"advanceWidth",null),Tg([Np],Ix.prototype,"advanceHeight",null),Tg([Np],Ix.prototype,"name",null);let Lx=new Xg({numberOfContours:wg,xMin:wg,yMin:wg,xMax:wg,yMax:wg});class kx{copy(){return new kx(this.onCurve,this.endContour,this.x,this.y)}constructor(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.onCurve=e,this.endContour=t,this.x=A,this.y=r}}class Gx{constructor(e,t,A){this.glyphID=e,this.dx=t,this.dy=A,this.pos=0,this.scaleX=this.scaleY=1,this.scale01=this.scale10=0}}class Fx extends Ix{_getCBox(e){if(this._font._variationProcessor&&!e)return this.path.cbox;let t=this._font._getTableStream("glyf");t.pos+=this._font.loca.offsets[this.id];let A=Lx.decode(t),r=new aw(A.xMin,A.yMin,A.xMax,A.yMax);return Object.freeze(r)}_parseGlyphCoord(e,t,A,r){if(A){var n=e.readUInt8();r||(n=-n),n+=t}else if(r)n=t;else n=t+e.readInt16BE();return n}_decode(){let e=this._font.loca.offsets[this.id];if(e===this._font.loca.offsets[this.id+1])return null;let t=this._font._getTableStream("glyf");t.pos+=e;let A=t.pos,r=Lx.decode(t);return r.numberOfContours>0?this._decodeSimple(r,t):r.numberOfContours<0&&this._decodeComposite(r,t,A),r}_decodeSimple(e,t){e.points=[];let A=new Qg(bg,e.numberOfContours).decode(t);e.instructions=new Qg(pg,bg).decode(t);let r=[],n=A[A.length-1]+1;for(;r.length<n;){var s=t.readUInt8();if(r.push(s),8&s){let e=t.readUInt8();for(let t=0;t<e;t++)r.push(s)}}for(var i=0;i<r.length;i++){s=r[i];let t=new kx(!!(1&s),A.indexOf(i)>=0,0,0);e.points.push(t)}let o=0;for(i=0;i<r.length;i++){s=r[i];e.points[i].x=o=this._parseGlyphCoord(t,o,2&s,16&s)}let a=0;for(i=0;i<r.length;i++){s=r[i];e.points[i].y=a=this._parseGlyphCoord(t,a,4&s,32&s)}if(this._font._variationProcessor){let t=e.points.slice();t.push(...this._getPhantomPoints(e)),this._font._variationProcessor.transformPoints(this.id,t),e.phantomPoints=t.slice(-4)}}_decodeComposite(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;e.components=[];let r=!1,n=32;for(;32&n;){n=t.readUInt16BE();let a=t.pos-A,l=t.readUInt16BE();if(r||(r=0!==(256&n)),1&n)var s=t.readInt16BE(),i=t.readInt16BE();else s=t.readInt8(),i=t.readInt8();(o=new Gx(l,s,i)).pos=a,8&n?o.scaleX=o.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824:64&n?(o.scaleX=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,o.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824):128&n&&(o.scaleX=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,o.scale01=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,o.scale10=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,o.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824),e.components.push(o)}if(this._font._variationProcessor){let t=[];for(let A=0;A<e.components.length;A++){var o=e.components[A];t.push(new kx(!0,!0,o.dx,o.dy))}t.push(...this._getPhantomPoints(e)),this._font._variationProcessor.transformPoints(this.id,t),e.phantomPoints=t.splice(-4,4);for(let A=0;A<t.length;A++){let r=t[A];e.components[A].dx=r.x,e.components[A].dy=r.y}}return r}_getPhantomPoints(e){let t=this._getCBox(!0);null==this._metrics&&(this._metrics=Ix.prototype._getMetrics.call(this,t));let{advanceWidth:A,advanceHeight:r,leftBearing:n,topBearing:s}=this._metrics;return[new kx(!1,!0,e.xMin-n,0),new kx(!1,!0,e.xMin-n+A,0),new kx(!1,!0,0,e.yMax+s),new kx(!1,!0,0,e.yMax+s+r)]}_getContours(){let e=this._decode();if(!e)return[];let t=[];if(e.numberOfContours<0)for(let s of e.components){let e=this._font.getGlyph(s.glyphID)._getContours();for(let A=0;A<e.length;A++){let r=e[A];for(let e=0;e<r.length;e++){let A=r[e],n=A.x*s.scaleX+A.y*s.scale01+s.dx,i=A.y*s.scaleY+A.x*s.scale10+s.dy;t.push(new kx(A.onCurve,A.endContour,n,i))}}}else t=e.points||[];e.phantomPoints&&!this._font.directory.tables.HVAR&&(this._metrics.advanceWidth=e.phantomPoints[1].x-e.phantomPoints[0].x,this._metrics.advanceHeight=e.phantomPoints[3].y-e.phantomPoints[2].y,this._metrics.leftBearing=e.xMin-e.phantomPoints[0].x,this._metrics.topBearing=e.phantomPoints[2].y-e.yMax);let A=[],r=[];for(let s=0;s<t.length;s++){var n=t[s];r.push(n),n.endContour&&(A.push(r),r=[])}return A}_getMetrics(){if(this._metrics)return this._metrics;let e=this._getCBox(!0);return super._getMetrics(e),this._font._variationProcessor&&!this._font.HVAR&&this.path,this._metrics}_getPath(){let e=this._getContours(),t=new Qx;for(let r=0;r<e.length;r++){let n=e[r],s=n[0],i=n[n.length-1],o=0;if(s.onCurve){var A=null;o=1}else{s=i.onCurve?i:new kx(!1,!1,(s.x+i.x)/2,(s.y+i.y)/2);A=s}t.moveTo(s.x,s.y);for(let e=o;e<n.length;e++){let r=n[e],i=0===e?s:n[e-1];if(i.onCurve&&r.onCurve)t.lineTo(r.x,r.y);else if(i.onCurve&&!r.onCurve)A=r;else if(i.onCurve||r.onCurve){if(i.onCurve||!r.onCurve)throw new Error("Unknown TTF path state");t.quadraticCurveTo(A.x,A.y,r.x,r.y);A=null}else{let e=(i.x+r.x)/2,n=(i.y+r.y)/2;t.quadraticCurveTo(i.x,i.y,e,n);var A=r}}A&&t.quadraticCurveTo(A.x,A.y,s.x,s.y),t.closePath()}return t}constructor(){super(...arguments),jg(this,"type","TTF")}}class Sx extends Ix{_getName(){return this._font.CFF2?super._getName():this._font["CFF "].getGlyphName(this.id)}bias(e){return e.length<1240?107:e.length<33900?1131:32768}_getPath(){let e=this._font.CFF2||this._font["CFF "],{stream:t}=e,A=e.topDict.CharStrings[this.id],r=A.offset+A.length;t.pos=A.offset;let n,s,i=new Qx,o=[],a=[],l=null,u=0,c=0,d=0,f=!1;this._usedGsubrs=n={},this._usedSubrs=s={};let h=e.globalSubrIndex||[],g=this.bias(h),p=e.privateDictForGlyph(this.id)||{},b=p.Subrs||[],m=this.bias(b),v=e.topDict.vstore&&e.topDict.vstore.itemVariationStore,y=p.vsindex,w=this._font._variationProcessor;function B(){null==l&&(l=o.shift()+p.nominalWidthX)}function x(){return o.length%2!==0&&B(),u+=o.length>>1,o.length=0}function C(e,t){f&&i.closePath(),i.moveTo(e,t),f=!0}let E=function(){for(;t.pos<r;){let p=t.readUInt8();if(p<32){let l,N,D,Q,P,I,L,k,G,F,S,W,Z,X,M,z;switch(p){case 1:case 3:case 18:case 23:x();break;case 4:o.length>1&&B(),d+=o.shift(),C(c,d);break;case 5:for(;o.length>=2;)c+=o.shift(),d+=o.shift(),i.lineTo(c,d);break;case 6:case 7:for(D=6===p;o.length>=1;)D?c+=o.shift():d+=o.shift(),i.lineTo(c,d),D=!D;break;case 8:for(;o.length>0;)Q=c+o.shift(),P=d+o.shift(),I=Q+o.shift(),L=P+o.shift(),c=I+o.shift(),d=L+o.shift(),i.bezierCurveTo(Q,P,I,L,c,d);break;case 10:if(l=o.pop()+m,N=b[l],N){s[l]=!0;let e=t.pos,A=r;t.pos=N.offset,r=N.offset+N.length,E(),t.pos=e,r=A}break;case 11:if(e.version>=2)break;return;case 14:if(e.version>=2)break;o.length>0&&B(),f&&(i.closePath(),f=!1);break;case 15:if(e.version<2)throw new Error("vsindex operator not supported in CFF v1");y=o.pop();break;case 16:{if(e.version<2)throw new Error("blend operator not supported in CFF v1");if(!w)throw new Error("blend operator in non-variation font");let t=w.getBlendVector(v,y),A=o.pop(),r=A*t.length,n=o.length-r,s=n-A;for(let e=0;e<A;e++){let A=o[s+e];for(let e=0;e<t.length;e++)A+=t[e]*o[n++];o[s+e]=A}for(;r--;)o.pop();break}case 19:case 20:x(),t.pos+=u+7>>3;break;case 21:o.length>2&&B(),c+=o.shift(),d+=o.shift(),C(c,d);break;case 22:o.length>1&&B(),c+=o.shift(),C(c,d);break;case 24:for(;o.length>=8;)Q=c+o.shift(),P=d+o.shift(),I=Q+o.shift(),L=P+o.shift(),c=I+o.shift(),d=L+o.shift(),i.bezierCurveTo(Q,P,I,L,c,d);c+=o.shift(),d+=o.shift(),i.lineTo(c,d);break;case 25:for(;o.length>=8;)c+=o.shift(),d+=o.shift(),i.lineTo(c,d);Q=c+o.shift(),P=d+o.shift(),I=Q+o.shift(),L=P+o.shift(),c=I+o.shift(),d=L+o.shift(),i.bezierCurveTo(Q,P,I,L,c,d);break;case 26:for(o.length%2&&(c+=o.shift());o.length>=4;)Q=c,P=d+o.shift(),I=Q+o.shift(),L=P+o.shift(),c=I,d=L+o.shift(),i.bezierCurveTo(Q,P,I,L,c,d);break;case 27:for(o.length%2&&(d+=o.shift());o.length>=4;)Q=c+o.shift(),P=d,I=Q+o.shift(),L=P+o.shift(),c=I+o.shift(),d=L,i.bezierCurveTo(Q,P,I,L,c,d);break;case 28:o.push(t.readInt16BE());break;case 29:if(l=o.pop()+g,N=h[l],N){n[l]=!0;let e=t.pos,A=r;t.pos=N.offset,r=N.offset+N.length,E(),t.pos=e,r=A}break;case 30:case 31:for(D=31===p;o.length>=4;)D?(Q=c+o.shift(),P=d,I=Q+o.shift(),L=P+o.shift(),d=L+o.shift(),c=I+(1===o.length?o.shift():0)):(Q=c,P=d+o.shift(),I=Q+o.shift(),L=P+o.shift(),c=I+o.shift(),d=L+(1===o.length?o.shift():0)),i.bezierCurveTo(Q,P,I,L,c,d),D=!D;break;case 12:switch(p=t.readUInt8(),p){case 3:let e=o.pop(),t=o.pop();o.push(e&&t?1:0);break;case 4:e=o.pop(),t=o.pop(),o.push(e||t?1:0);break;case 5:e=o.pop(),o.push(e?0:1);break;case 9:e=o.pop(),o.push(Math.abs(e));break;case 10:e=o.pop(),t=o.pop(),o.push(e+t);break;case 11:e=o.pop(),t=o.pop(),o.push(e-t);break;case 12:e=o.pop(),t=o.pop(),o.push(e/t);break;case 14:e=o.pop(),o.push(-e);break;case 15:e=o.pop(),t=o.pop(),o.push(e===t?1:0);break;case 18:o.pop();break;case 20:let r=o.pop(),n=o.pop();a[n]=r;break;case 21:n=o.pop(),o.push(a[n]||0);break;case 22:let s=o.pop(),l=o.pop(),u=o.pop(),f=o.pop();o.push(u<=f?s:l);break;case 23:o.push(Math.random());break;case 24:e=o.pop(),t=o.pop(),o.push(e*t);break;case 26:e=o.pop(),o.push(Math.sqrt(e));break;case 27:e=o.pop(),o.push(e,e);break;case 28:e=o.pop(),t=o.pop(),o.push(t,e);break;case 29:n=o.pop(),n<0?n=0:n>o.length-1&&(n=o.length-1),o.push(o[n]);break;case 30:let h=o.pop(),g=o.pop();if(g>=0)for(;g>0;){var A=o[h-1];for(let e=h-2;e>=0;e--)o[e+1]=o[e];o[0]=A,g--}else for(;g<0;){A=o[0];for(let e=0;e<=h;e++)o[e]=o[e+1];o[h-1]=A,g++}break;case 34:Q=c+o.shift(),P=d,I=Q+o.shift(),L=P+o.shift(),k=I+o.shift(),G=L,F=k+o.shift(),S=G,W=F+o.shift(),Z=S,X=W+o.shift(),M=Z,c=X,d=M,i.bezierCurveTo(Q,P,I,L,k,G),i.bezierCurveTo(F,S,W,Z,X,M);break;case 35:z=[];for(let A=0;A<=5;A++)c+=o.shift(),d+=o.shift(),z.push(c,d);i.bezierCurveTo(...z.slice(0,6)),i.bezierCurveTo(...z.slice(6)),o.shift();break;case 36:Q=c+o.shift(),P=d+o.shift(),I=Q+o.shift(),L=P+o.shift(),k=I+o.shift(),G=L,F=k+o.shift(),S=G,W=F+o.shift(),Z=S+o.shift(),X=W+o.shift(),M=Z,c=X,d=M,i.bezierCurveTo(Q,P,I,L,k,G),i.bezierCurveTo(F,S,W,Z,X,M);break;case 37:let b=c,m=d;z=[];for(let A=0;A<=4;A++)c+=o.shift(),d+=o.shift(),z.push(c,d);Math.abs(c-b)>Math.abs(d-m)?(c+=o.shift(),d=m):(c=b,d+=o.shift()),z.push(c,d),i.bezierCurveTo(...z.slice(0,6)),i.bezierCurveTo(...z.slice(6));break;default:throw new Error(`Unknown op: 12 ${p}`)}break;default:throw new Error(`Unknown op: ${p}`)}}else if(p<247)o.push(p-139);else if(p<251){var l=t.readUInt8();o.push(256*(p-247)+l+108)}else if(p<255){l=t.readUInt8();o.push(256*-(p-251)-l-108)}else o.push(t.readInt32BE()/65536)}};return E(),f&&i.closePath(),i}constructor(){super(...arguments),jg(this,"type","CFF")}}let Wx=new Xg({originX:bg,originY:bg,type:new Sg(4),data:new kg((e=>e.parent.buflen-e._currentOffset))});class Zx extends Fx{getImageForSize(e){for(let s=0;s<this._font.sbix.imageTables.length;s++){var t=this._font.sbix.imageTables[s];if(t.ppem>=e)break}let A=t.imageOffsets,r=A[this.id],n=A[this.id+1];return r===n?null:(this._font.stream.pos=r,Wx.decode(this._font.stream,{buflen:n-r}))}render(e,t){let A=this.getImageForSize(t);if(null!=A){let r=t/this._font.unitsPerEm;e.image(A.data,{height:t,x:A.originX,y:(this.bbox.minY-A.originY)*r})}this._font.sbix.flags.renderOutlines&&super.render(e,t)}constructor(){super(...arguments),jg(this,"type","SBIX")}}class Xx{constructor(e,t){this.glyph=e,this.color=t}}class Mx extends Ix{_getBBox(){let e=new aw;for(let t=0;t<this.layers.length;t++){let A=this.layers[t].glyph.bbox;e.addPoint(A.minX,A.minY),e.addPoint(A.maxX,A.maxY)}return e}get layers(){let e=this._font.CPAL,t=this._font.COLR,A=0,r=t.baseGlyphRecord.length-1;for(;A<=r;){let e=A+r>>1;var n=t.baseGlyphRecord[e];if(this.id<n.gid)r=e-1;else{if(!(this.id>n.gid)){var s=n;break}A=e+1}}if(null==s){var i=this._font._getBaseGlyph(this.id);return[new Xx(i,a={red:0,green:0,blue:0,alpha:255})]}let o=[];for(let l=s.firstLayerIndex;l<s.firstLayerIndex+s.numLayers;l++){n=t.layerRecords[l];var a=e.colorRecords[n.paletteIndex];i=this._font._getBaseGlyph(n.gid);o.push(new Xx(i,a))}return o}render(e,t){for(let{glyph:A,color:r}of this.layers)e.fillColor([r.red,r.green,r.blue],r.alpha/255*100),A.render(e,t)}constructor(){super(...arguments),jg(this,"type","COLR")}}class zx{normalizeCoords(e){let t=[];for(var A=0;A<this.font.fvar.axis.length;A++){let r=this.font.fvar.axis[A];e[A]<r.defaultValue?t.push((e[A]-r.defaultValue+Number.EPSILON)/(r.defaultValue-r.minValue+Number.EPSILON)):t.push((e[A]-r.defaultValue+Number.EPSILON)/(r.maxValue-r.defaultValue+Number.EPSILON))}if(this.font.avar)for(A=0;A<this.font.avar.segment.length;A++){let e=this.font.avar.segment[A];for(let r=0;r<e.correspondence.length;r++){let n=e.correspondence[r];if(r>=1&&t[A]<n.fromCoord){let s=e.correspondence[r-1];t[A]=((t[A]-s.fromCoord)*(n.toCoord-s.toCoord)+Number.EPSILON)/(n.fromCoord-s.fromCoord+Number.EPSILON)+s.toCoord;break}}}return t}transformPoints(e,t){if(!this.font.fvar||!this.font.gvar)return;let{gvar:A}=this.font;if(e>=A.glyphCount)return;let r=A.offsets[e];if(r===A.offsets[e+1])return;let{stream:n}=this.font;if(n.pos=r,n.pos>=n.length)return;let s=n.readUInt16BE(),i=r+n.readUInt16BE();if(32768&s){var o=n.pos;n.pos=i;var a=this.decodePoints();i=n.pos,n.pos=o}let l=t.map((e=>e.copy()));s&=4095;for(let g=0;g<s;g++){let e=n.readUInt16BE(),r=n.readUInt16BE();if(32768&r){var u=[];for(let e=0;e<A.axisCount;e++)u.push(n.readInt16BE()/16384)}else{if((4095&r)>=A.globalCoordCount)throw new Error("Invalid gvar table");u=A.globalCoords[4095&r]}if(16384&r){var c=[];for(let e=0;e<A.axisCount;e++)c.push(n.readInt16BE()/16384);var d=[];for(let e=0;e<A.axisCount;e++)d.push(n.readInt16BE()/16384)}let s=this.tupleFactor(r,u,c,d);if(0===s){i+=e;continue}o=n.pos;if(n.pos=i,8192&r)var f=this.decodePoints();else f=a;let g=0===f.length?t.length:f.length,p=this.decodeDeltas(g),b=this.decodeDeltas(g);if(0===f.length)for(let A=0;A<t.length;A++){var h=t[A];h.x+=Math.round(p[A]*s),h.y+=Math.round(b[A]*s)}else{let e=l.map((e=>e.copy())),A=t.map((()=>!1));for(let r=0;r<f.length;r++){let n=f[r];if(n<t.length){let t=e[n];A[n]=!0,t.x+=p[r]*s,t.y+=b[r]*s}}this.interpolateMissingDeltas(e,l,A);for(let r=0;r<t.length;r++){let A=e[r].x-l[r].x,n=e[r].y-l[r].y;t[r].x=Math.round(t[r].x+A),t[r].y=Math.round(t[r].y+n)}}i+=e,n.pos=o}}decodePoints(){let e=this.font.stream,t=e.readUInt8();128&t&&(t=(127&t)<<8|e.readUInt8());let A=new Uint16Array(t),r=0,n=0;for(;r<t;){let s=e.readUInt8(),i=1+(127&s),o=128&s?e.readUInt16:e.readUInt8;for(let a=0;a<i&&r<t;a++)n+=o.call(e),A[r++]=n}return A}decodeDeltas(e){let t=this.font.stream,A=0,r=new Int16Array(e);for(;A<e;){let n=t.readUInt8(),s=1+(63&n);if(128&n)A+=s;else{let i=64&n?t.readInt16BE:t.readInt8;for(let n=0;n<s&&A<e;n++)r[A++]=i.call(t)}}return r}tupleFactor(e,t,A,r){let n=this.normalizedCoords,{gvar:s}=this.font,i=1;for(let o=0;o<s.axisCount;o++)if(0!==t[o]){if(0===n[o])return 0;if(0===(16384&e)){if(n[o]<Math.min(0,t[o])||n[o]>Math.max(0,t[o]))return 0;i=(i*n[o]+Number.EPSILON)/(t[o]+Number.EPSILON)}else{if(n[o]<A[o]||n[o]>r[o])return 0;i=n[o]<t[o]?i*(n[o]-A[o]+Number.EPSILON)/(t[o]-A[o]+Number.EPSILON):i*(r[o]-n[o]+Number.EPSILON)/(r[o]-t[o]+Number.EPSILON)}}return i}interpolateMissingDeltas(e,t,A){if(0===e.length)return;let r=0;for(;r<e.length;){let n=r,s=r,i=e[s];for(;!i.endContour;)i=e[++s];for(;r<=s&&!A[r];)r++;if(r>s)continue;let o=r,a=r;for(r++;r<=s;)A[r]&&(this.deltaInterpolate(a+1,r-1,a,r,t,e),a=r),r++;a===o?this.deltaShift(n,s,a,t,e):(this.deltaInterpolate(a+1,s,a,o,t,e),o>0&&this.deltaInterpolate(n,o-1,a,o,t,e)),r=s+1}}deltaInterpolate(e,t,A,r,n,s){if(e>t)return;let i=["x","y"];for(let a=0;a<i.length;a++){let l=i[a];if(n[A][l]>n[r][l]){var o=A;A=r,r=o}let u=n[A][l],c=n[r][l],d=s[A][l],f=s[r][l];if(u!==c||d===f){let A=u===c?0:(f-d)/(c-u);for(let r=e;r<=t;r++){let e=n[r][l];e<=u?e+=d-u:e>=c?e+=f-c:e=d+(e-u)*A,s[r][l]=e}}}}deltaShift(e,t,A,r,n){let s=n[A].x-r[A].x,i=n[A].y-r[A].y;if(0!==s||0!==i)for(let o=e;o<=t;o++)o!==A&&(n[o].x+=s,n[o].y+=i)}getAdvanceAdjustment(e,t){let A,r;if(t.advanceWidthMapping){let n=e;n>=t.advanceWidthMapping.mapCount&&(n=t.advanceWidthMapping.mapCount-1);t.advanceWidthMapping.entryFormat;({outerIndex:A,innerIndex:r}=t.advanceWidthMapping.mapData[n])}else A=0,r=e;return this.getDelta(t.itemVariationStore,A,r)}getDelta(e,t,A){if(t>=e.itemVariationData.length)return 0;let r=e.itemVariationData[t];if(A>=r.deltaSets.length)return 0;let n=r.deltaSets[A],s=this.getBlendVector(e,t),i=0;for(let o=0;o<r.regionIndexCount;o++)i+=n.deltas[o]*s[o];return i}getBlendVector(e,t){let A=e.itemVariationData[t];if(this.blendVectors.has(A))return this.blendVectors.get(A);let r=this.normalizedCoords,n=[];for(let s=0;s<A.regionIndexCount;s++){let t=1,i=A.regionIndexes[s],o=e.variationRegionList.variationRegions[i];for(let e=0;e<o.length;e++){let A,n=o[e];A=n.startCoord>n.peakCoord||n.peakCoord>n.endCoord||n.startCoord<0&&n.endCoord>0&&0!==n.peakCoord||0===n.peakCoord?1:r[e]<n.startCoord||r[e]>n.endCoord?0:r[e]===n.peakCoord?1:r[e]<n.peakCoord?(r[e]-n.startCoord+Number.EPSILON)/(n.peakCoord-n.startCoord+Number.EPSILON):(n.endCoord-r[e]+Number.EPSILON)/(n.endCoord-n.peakCoord+Number.EPSILON),t*=A}n[s]=t}return this.blendVectors.set(A,n),n}constructor(e,t){this.font=e,this.normalizedCoords=this.normalizeCoords(t),this.blendVectors=new Map}}Promise.resolve();class Rx{includeGlyph(e){return"object"===typeof e&&(e=e.id),null==this.mapping[e]&&(this.glyphs.push(e),this.mapping[e]=this.glyphs.length-1),this.mapping[e]}constructor(e){this.font=e,this.glyphs=[],this.mapping={},this.includeGlyph(0)}}class jx{static size(e){return e>=0&&e<=255?1:2}static encode(e,t){t>=0&&t<=255?e.writeUInt8(t):e.writeInt16BE(t)}}let Tx=new Xg({numberOfContours:wg,xMin:wg,yMin:wg,xMax:wg,yMax:wg,endPtsOfContours:new Qg(bg,"numberOfContours"),instructions:new Qg(pg,bg),flags:new Qg(pg,0),xPoints:new Qg(jx,0),yPoints:new Qg(jx,0)});class Ux{encodeSimple(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],A=[],r=[],n=[],s=[],i=0,o=0,a=0,l=0,u=0;for(let p=0;p<e.commands.length;p++){let t=e.commands[p];for(let A=0;A<t.args.length;A+=2){let c=t.args[A],d=t.args[A+1],f=0;if("quadraticCurveTo"===t.command&&2===A){let t=e.commands[p+1];if(t&&"quadraticCurveTo"===t.command){let e=(o+t.args[0])/2,A=(a+t.args[1])/2;if(c===e&&d===A)continue}}"quadraticCurveTo"===t.command&&0===A||(f|=1),f=this._encodePoint(c,o,r,f,2,16),f=this._encodePoint(d,a,n,f,4,32),f===l&&i<255?(s[s.length-1]|=8,i++):(i>0&&(s.push(i),i=0),s.push(f),l=f),o=c,a=d,u++}"closePath"===t.command&&A.push(u-1)}e.commands.length>1&&"closePath"!==e.commands[e.commands.length-1].command&&A.push(u-1);let c=e.bbox,d={numberOfContours:A.length,xMin:c.minX,yMin:c.minY,xMax:c.maxX,yMax:c.maxY,endPtsOfContours:A,instructions:t,flags:s,xPoints:r,yPoints:n},f=Tx.size(d),h=4-f%4,g=new dg(f+h);return Tx.encode(g,d),0!==h&&g.fill(0,h),g.buffer}_encodePoint(e,t,A,r,n,s){let i=e-t;return e===t?r|=s:(-255<=i&&i<=255&&(r|=n,i<0?i=-i:r|=s),A.push(i)),r}}class Vx extends Rx{_addGlyph(e){let t=this.font.getGlyph(e),A=t._decode(),r=this.font.loca.offsets[e],n=this.font.loca.offsets[e+1],s=this.font._getTableStream("glyf");s.pos+=r;let i=s.readBuffer(n-r);if(A&&A.numberOfContours<0){i=new Uint8Array(i);let t=new DataView(i.buffer);for(let r of A.components)e=this.includeGlyph(r.glyphID),t.setUint16(r.pos,e)}else A&&this.font._variationProcessor&&(i=this.glyphEncoder.encodeSimple(t.path,A.instructions));return this.glyf.push(i),this.loca.offsets.push(this.offset),this.hmtx.metrics.push({advance:t.advanceWidth,bearing:t._getMetrics().leftBearing}),this.offset+=i.length,this.glyf.length-1}encode(){this.glyf=[],this.offset=0,this.loca={offsets:[],version:this.font.loca.version},this.hmtx={metrics:[],bearings:[]};let e=0;for(;e<this.glyphs.length;)this._addGlyph(this.glyphs[e++]);let t=hp(this.font.maxp);t.numGlyphs=this.glyf.length,this.loca.offsets.push(this.offset);let A=hp(this.font.head);A.indexToLocFormat=this.loca.version;let r=hp(this.font.hhea);return r.numberOfMetrics=this.hmtx.metrics.length,_y.toBuffer({tables:{head:A,hhea:r,loca:this.loca,maxp:t,"cvt ":this.font["cvt "],prep:this.font.prep,glyf:this.glyf,hmtx:this.hmtx,fpgm:this.font.fpgm}})}constructor(e){super(e),this.glyphEncoder=new Ux}}class Ox extends Rx{subsetCharstrings(){this.charstrings=[];let e={};for(let t of this.glyphs){this.charstrings.push(this.cff.getCharString(t));let A=this.font.getGlyph(t);A.path;for(let t in A._usedGsubrs)e[t]=!0}this.gsubrs=this.subsetSubrs(this.cff.globalSubrIndex,e)}subsetSubrs(e,t){let A=[];for(let r=0;r<e.length;r++){let n=e[r];t[r]?(this.cff.stream.pos=n.offset,A.push(this.cff.stream.readBuffer(n.length))):A.push(new Uint8Array([11]))}return A}subsetFontdict(e){e.FDArray=[],e.FDSelect={version:0,fds:[]};let t={},A=[],r={};for(let n of this.glyphs){let s=this.cff.fdForGlyph(n);if(null==s)continue;t[s]||(e.FDArray.push(Object.assign({},this.cff.topDict.FDArray[s])),A.push({}),r[s]=e.FDArray.length-1),t[s]=!0,e.FDSelect.fds.push(r[s]);let i=this.font.getGlyph(n);i.path;for(let e in i._usedSubrs)A[r[s]][e]=!0}for(let n=0;n<e.FDArray.length;n++){let t=e.FDArray[n];delete t.FontName,t.Private&&t.Private.Subrs&&(t.Private=Object.assign({},t.Private),t.Private.Subrs=this.subsetSubrs(t.Private.Subrs,A[n]))}}createCIDFontdict(e){let t={};for(let r of this.glyphs){let e=this.font.getGlyph(r);e.path;for(let A in e._usedSubrs)t[A]=!0}let A=Object.assign({},this.cff.topDict.Private);return this.cff.topDict.Private&&this.cff.topDict.Private.Subrs&&(A.Subrs=this.subsetSubrs(this.cff.topDict.Private.Subrs,t)),e.FDArray=[{Private:A}],e.FDSelect={version:3,nRanges:1,ranges:[{first:0,fd:0}],sentinel:this.charstrings.length}}addString(e){return e?(this.strings||(this.strings=[]),this.strings.push(e),vb.length+this.strings.length-1):null}encode(){this.subsetCharstrings();let e={version:this.charstrings.length>255?2:1,ranges:[{first:1,nLeft:this.charstrings.length-2}]},t=Object.assign({},this.cff.topDict);t.Private=null,t.charset=e,t.Encoding=null,t.CharStrings=this.charstrings;for(let r of["version","Notice","Copyright","FullName","FamilyName","Weight","PostScript","BaseFontName","FontName"])t[r]=this.addString(this.cff.string(t[r]));t.ROS=[this.addString("Adobe"),this.addString("Identity"),0],t.CIDCount=this.charstrings.length,this.cff.isCIDFont?this.subsetFontdict(t):this.createCIDFontdict(t);let A={version:1,hdrSize:this.cff.hdrSize,offSize:4,header:this.cff.header,nameIndex:[this.cff.postscriptName],topDictIndex:[t],stringIndex:this.strings,globalSubrIndex:this.gsubrs};return wm.toBuffer(A)}constructor(e){if(super(e),this.cff=this.font["CFF "],!this.cff)throw new Error("Not a CFF Font")}}class Yx{static probe(e){let t=tw.decode(e.slice(0,4));return"true"===t||"OTTO"===t||t===String.fromCharCode(0,1,0,0)}setDefaultLanguage(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.defaultLanguage=e}_getTable(e){if(!(e.tag in this._tables))try{this._tables[e.tag]=this._decodeTable(e)}catch(tF){yp&&(console.error(`Error decoding table ${e.tag}`),console.error(tF.stack))}return this._tables[e.tag]}_getTableStream(e){let t=this.directory.tables[e];return t?(this.stream.pos=t.offset,this.stream):null}_decodeDirectory(){return this.directory=_y.decode(this.stream,{_startOffset:0})}_decodeTable(e){let t=this.stream.pos,A=this._getTableStream(e.tag),r=Ky[e.tag].decode(A,this,e.length);return this.stream.pos=t,r}getName(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.defaultLanguage||Cp,A=this.name&&this.name.records[e];return A&&(A[t]||A[this.defaultLanguage]||A[Cp]||A.en||A[Object.keys(A)[0]])||null}get postscriptName(){return this.getName("postscriptName")}get fullName(){return this.getName("fullName")}get familyName(){return this.getName("fontFamily")}get subfamilyName(){return this.getName("fontSubfamily")}get copyright(){return this.getName("copyright")}get version(){return this.getName("version")}get ascent(){return this.hhea.ascent}get descent(){return this.hhea.descent}get lineGap(){return this.hhea.lineGap}get underlinePosition(){return this.post.underlinePosition}get underlineThickness(){return this.post.underlineThickness}get italicAngle(){return this.post.italicAngle}get capHeight(){let e=this["OS/2"];return e?e.capHeight:this.ascent}get xHeight(){let e=this["OS/2"];return e?e.xHeight:0}get numGlyphs(){return this.maxp.numGlyphs}get unitsPerEm(){return this.head.unitsPerEm}get bbox(){return Object.freeze(new aw(this.head.xMin,this.head.yMin,this.head.xMax,this.head.yMax))}get _cmapProcessor(){return new sw(this.cmap)}get characterSet(){return this._cmapProcessor.getCharacterSet()}hasGlyphForCodePoint(e){return!!this._cmapProcessor.lookup(e)}glyphForCodePoint(e){return this.getGlyph(this._cmapProcessor.lookup(e),[e])}glyphsForString(e){let t=[],A=e.length,r=0,n=-1,s=-1;for(;r<=A;){let i=0,o=0;if(r<A){if(i=e.charCodeAt(r++),55296<=i&&i<=56319&&r<A){let t=e.charCodeAt(r);56320<=t&&t<=57343&&(r++,i=((1023&i)<<10)+(1023&t)+65536)}o=65024<=i&&i<=65039||917760<=i&&i<=917999?1:0}else r++;0===s&&1===o?t.push(this.getGlyph(this._cmapProcessor.lookup(n,i),[n,i])):0===s&&0===o&&t.push(this.glyphForCodePoint(n)),n=i,s=o}return t}get _layoutEngine(){return new Nx(this)}layout(e,t,A,r,n){return this._layoutEngine.layout(e,t,A,r,n)}stringsForGlyph(e){return this._layoutEngine.stringsForGlyph(e)}get availableFeatures(){return this._layoutEngine.getAvailableFeatures()}getAvailableFeatures(e,t){return this._layoutEngine.getAvailableFeatures(e,t)}_getBaseGlyph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return this._glyphs[e]||(this.directory.tables.glyf?this._glyphs[e]=new Fx(e,t,this):(this.directory.tables["CFF "]||this.directory.tables.CFF2)&&(this._glyphs[e]=new Sx(e,t,this))),this._glyphs[e]||null}getGlyph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return this._glyphs[e]||(this.directory.tables.sbix?this._glyphs[e]=new Zx(e,t,this):this.directory.tables.COLR&&this.directory.tables.CPAL?this._glyphs[e]=new Mx(e,t,this):this._getBaseGlyph(e,t)),this._glyphs[e]||null}createSubset(){return this.directory.tables["CFF "]?new Ox(this):new Vx(this)}get variationAxes(){let e={};if(!this.fvar)return e;for(let t of this.fvar.axis)e[t.axisTag.trim()]={name:t.name.en,min:t.minValue,default:t.defaultValue,max:t.maxValue};return e}get namedVariations(){let e={};if(!this.fvar)return e;for(let t of this.fvar.instance){let A={};for(let e=0;e<this.fvar.axis.length;e++){A[this.fvar.axis[e].axisTag.trim()]=t.coord[e]}e[t.name.en]=A}return e}getVariation(e){if(!this.directory.tables.fvar||!(this.directory.tables.gvar&&this.directory.tables.glyf||this.directory.tables.CFF2))throw new Error("Variations require a font with the fvar, gvar and glyf, or CFF2 tables.");if("string"===typeof e&&(e=this.namedVariations[e]),"object"!==typeof e)throw new Error("Variation settings must be either a variation name or settings object.");let t=this.fvar.axis.map(((t,A)=>{let r=t.axisTag.trim();return r in e?Math.max(t.minValue,Math.min(t.maxValue,e[r])):t.defaultValue})),A=new lg(this.stream.buffer);A.pos=this._directoryPos;let r=new Yx(A,t);return r._tables=this._tables,r}get _variationProcessor(){if(!this.fvar)return null;let e=this.variationCoords;return e||this.CFF2?(e||(e=this.fvar.axis.map((e=>e.defaultValue))),new zx(this,e)):null}getFont(e){return this.getVariation(e)}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;jg(this,"type","TTF"),this.defaultLanguage=null,this.stream=e,this.variationCoords=t,this._directoryPos=this.stream.pos,this._tables={},this._glyphs={},this._decodeDirectory();for(let A in this.directory.tables){let e=this.directory.tables[A];Ky[A]&&e.length>0&&Object.defineProperty(this,A,{get:this._getTable.bind(this,e)})}}}Tg([Np],Yx.prototype,"bbox",null),Tg([Np],Yx.prototype,"_cmapProcessor",null),Tg([Np],Yx.prototype,"characterSet",null),Tg([Np],Yx.prototype,"_layoutEngine",null),Tg([Np],Yx.prototype,"variationAxes",null),Tg([Np],Yx.prototype,"namedVariations",null),Tg([Np],Yx.prototype,"_variationProcessor",null);let Hx=new Xg({tag:new Sg(4),offset:new zg(vg,"void",{type:"global"}),compLength:vg,length:vg,origChecksum:vg}),Kx=new Xg({tag:new Sg(4),flavor:vg,length:vg,numTables:bg,reserved:new Fg(bg),totalSfntSize:vg,majorVersion:bg,minorVersion:bg,metaOffset:vg,metaLength:vg,metaOrigLength:vg,privOffset:vg,privLength:vg,tables:new Qg(Hx,"numTables")});Kx.process=function(){let e={};for(let t of this.tables)e[t.tag]=t;this.tables=e};var qx=Kx;class Jx extends Fx{_decode(){return this._font._transformedGlyphs[this.id]}_getCBox(){return this.path.bbox}constructor(){super(...arguments),jg(this,"type","WOFF2")}}const _x={decode(e){let t=0,A=[0,1,2,3,4];for(let r=0;r<A.length;r++){let A=e.readUInt8();if(3758096384&t)throw new Error("Overflow");if(t=t<<7|127&A,0===(128&A))return t}throw new Error("Bad base 128 number")}};let $x=["cmap","head","hhea","hmtx","maxp","name","OS/2","post","cvt ","fpgm","glyf","loca","prep","CFF ","VORG","EBDT","EBLC","gasp","hdmx","kern","LTSH","PCLT","VDMX","vhea","vmtx","BASE","GDEF","GPOS","GSUB","EBSC","JSTF","MATH","CBDT","CBLC","COLR","CPAL","SVG ","sbix","acnt","avar","bdat","bloc","bsln","cvar","fdsc","feat","fmtx","fvar","gvar","hsty","just","lcar","mort","morx","opbd","prop","trak","Zapf","Silf","Glat","Gloc","Feat","Sill"],eC=new Xg({flags:pg,customTag:new Gg(new Sg(4),(e=>63===(63&e.flags))),tag:e=>e.customTag||$x[63&e.flags],length:_x,transformVersion:e=>e.flags>>>6&3,transformed:e=>"glyf"===e.tag||"loca"===e.tag?0===e.transformVersion:0!==e.transformVersion,transformLength:new Gg(_x,(e=>e.transformed))}),tC=new Xg({tag:new Sg(4),flavor:vg,length:vg,numTables:bg,reserved:new Fg(bg),totalSfntSize:vg,totalCompressedSize:vg,majorVersion:bg,minorVersion:bg,metaOffset:vg,metaLength:vg,metaOrigLength:vg,privOffset:vg,privLength:vg,tables:new Qg(eC,"numTables")});tC.process=function(){let e={};for(let t=0;t<this.tables.length;t++){let A=this.tables[t];e[A.tag]=A}return this.tables=e};var AC=tC;class rC{decode(e,t){return new lg(this._buf.decode(e,t))}constructor(e){this.length=e,this._buf=new kg(e)}}let nC=new Xg({version:vg,numGlyphs:bg,indexFormat:bg,nContourStreamSize:vg,nPointsStreamSize:vg,flagStreamSize:vg,glyphStreamSize:vg,compositeStreamSize:vg,bboxStreamSize:vg,instructionStreamSize:vg,nContours:new rC("nContourStreamSize"),nPoints:new rC("nPointsStreamSize"),flags:new rC("flagStreamSize"),glyphs:new rC("glyphStreamSize"),composites:new rC("compositeStreamSize"),bboxes:new rC("bboxStreamSize"),instructions:new rC("instructionStreamSize")});const sC=253,iC=254,oC=255,aC=253;function lC(e){let t=e.readUInt8();return t===sC?e.readUInt16BE():t===oC?e.readUInt8()+aC:t===iC?e.readUInt8()+2*aC:t}function uC(e,t){return 1&e?t:-t}function cC(e,t,A){let r,n=r=0,s=[];for(let a=0;a<A;a++){let A=0,a=0,l=e.readUInt8(),u=!(l>>7);if(l&=127,l<10)A=0,a=uC(l,((14&l)<<7)+t.readUInt8());else if(l<20)A=uC(l,((l-10&14)<<7)+t.readUInt8()),a=0;else if(l<84){A=uC(l,1+(48&(i=l-20))+((o=t.readUInt8())>>4)),a=uC(l>>1,1+((12&i)<<2)+(15&o))}else if(l<120){var i;A=uC(l,1+((i=l-84)/12<<8)+t.readUInt8()),a=uC(l>>1,1+(i%12>>2<<8)+t.readUInt8())}else if(l<124){var o=t.readUInt8();let e=t.readUInt8();A=uC(l,(o<<4)+(e>>4)),a=uC(l>>1,((15&e)<<8)+t.readUInt8())}else A=uC(l,t.readUInt16BE()),a=uC(l>>1,t.readUInt16BE());n+=A,r+=a,s.push(new kx(u,!1,n,r))}return s}let dC=new Mg(vg,{65536:{numFonts:vg,offsets:new Qg(vg,"numFonts")},131072:{numFonts:vg,offsets:new Qg(vg,"numFonts"),dsigTag:vg,dsigLength:vg,dsigOffset:vg}});let fC=new Sg(pg),hC=(new Xg({len:vg,buf:new kg("len")}),new Xg({id:bg,nameOffset:wg,attr:pg,dataOffset:mg,handle:vg})),gC=new Xg({name:new Sg(4),maxTypeIndex:bg,refList:new zg(bg,new Qg(hC,(e=>e.maxTypeIndex+1)),{type:"parent"})}),pC=new Xg({length:bg,types:new Qg(gC,(e=>e.length+1))}),bC=new Xg({reserved:new Fg(pg,24),typeList:new zg(bg,pC),nameListOffset:new zg(bg,"void")}),mC=new Xg({dataOffset:vg,map:new zg(vg,bC),dataLength:vg,mapLength:vg});Bp(Yx),Bp(class extends Yx{static probe(e){return"wOFF"===tw.decode(e.slice(0,4))}_decodeDirectory(){this.directory=qx.decode(this.stream,{_startOffset:0})}_getTableStream(e){let t=this.directory.tables[e];if(t){if(this.stream.pos=t.offset,t.compLength<t.length){this.stream.pos+=2;let e=new Uint8Array(t.length),A=gp(this.stream.readBuffer(t.compLength-2),e);return new lg(A)}return this.stream}return null}constructor(){super(...arguments),jg(this,"type","WOFF")}}),Bp(class extends Yx{static probe(e){return"wOF2"===tw.decode(e.slice(0,4))}_decodeDirectory(){this.directory=AC.decode(this.stream),this._dataPos=this.stream.pos}_decompress(){if(!this._decompressed){this.stream.pos=this._dataPos;let e=this.stream.readBuffer(this.directory.totalCompressedSize),t=0;for(let r in this.directory.tables){let e=this.directory.tables[r];e.offset=t,t+=null!=e.transformLength?e.transformLength:e.length}let A=pp(e,t);if(!A)throw new Error("Error decoding compressed data in WOFF2");this.stream=new lg(A),this._decompressed=!0}}_decodeTable(e){return this._decompress(),super._decodeTable(e)}_getBaseGlyph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if(!this._glyphs[e])return this.directory.tables.glyf&&this.directory.tables.glyf.transformed?(this._transformedGlyphs||this._transformGlyfTable(),this._glyphs[e]=new Jx(e,t,this)):super._getBaseGlyph(e,t)}_transformGlyfTable(){this._decompress(),this.stream.pos=this.directory.tables.glyf.offset;let e=nC.decode(this.stream),t=[];for(let A=0;A<e.numGlyphs;A++){let A={},r=e.nContours.readInt16BE();if(A.numberOfContours=r,r>0){let t=[],n=0;for(let A=0;A<r;A++){n+=lC(e.nPoints),t.push(n)}A.points=cC(e.flags,e.glyphs,n);for(let e=0;e<r;e++)A.points[t[e]-1].endContour=!0;lC(e.glyphs)}else if(r<0){if(Fx.prototype._decodeComposite.call({_font:this},A,e.composites))lC(e.glyphs)}t.push(A)}this._transformedGlyphs=t}constructor(){super(...arguments),jg(this,"type","WOFF2")}}),Bp(class{static probe(e){return"ttcf"===tw.decode(e.slice(0,4))}getFont(e){for(let t of this.header.offsets){let A=new lg(this.stream.buffer);A.pos=t;let r=new Yx(A);if(r.postscriptName===e||r.postscriptName instanceof Uint8Array&&e instanceof Uint8Array&&r.postscriptName.every(((t,A)=>e[A]===t)))return r}return null}get fonts(){let e=[];for(let t of this.header.offsets){let A=new lg(this.stream.buffer);A.pos=t,e.push(new Yx(A))}return e}constructor(e){if(jg(this,"type","TTC"),this.stream=e,"ttcf"!==e.readString(4))throw new Error("Not a TrueType collection");this.header=dC.decode(e)}}),Bp(class{static probe(e){let t=new lg(e);try{var A=mC.decode(t)}catch(tF){return!1}for(let r of A.map.typeList.types)if("sfnt"===r.name)return!0;return!1}getFont(e){if(!this.sfnt)return null;for(let t of this.sfnt.refList){let A=this.header.dataOffset+t.dataOffset+4,r=new lg(this.stream.buffer.slice(A)),n=new Yx(r);if(n.postscriptName===e||n.postscriptName instanceof Uint8Array&&e instanceof Uint8Array&&n.postscriptName.every(((t,A)=>e[A]===t)))return n}return null}get fonts(){let e=[];for(let t of this.sfnt.refList){let A=this.header.dataOffset+t.dataOffset+4,r=new lg(this.stream.buffer.slice(A));e.push(new Yx(r))}return e}constructor(e){jg(this,"type","DFont"),this.stream=e,this.header=mC.decode(this.stream);for(let t of this.header.map.typeList.types){for(let e of t.refList)e.nameOffset>=0?(this.stream.pos=e.nameOffset+this.header.map.nameListOffset,e.name=fC.decode(this.stream)):e.name=null;"sfnt"===t.name&&(this.sfnt=t)}}});const vC=13,yC="left",wC="top",BC="middle",xC="bottom",CC=wC,EC=1,NC="#000000",DC="vertical",QC="horizontal",PC=DC,IC=.25,LC=(e,t,A,r)=>{const{ascent:n,descent:s,unitsPerEm:i}=e,o=(n-s)/i;if(r===wC)return{topAdj:Yh((o*t-t)/2),bottomAdj:0};let a=0;return A<o&&(a=(o-A)*t/2),{topAdj:0,bottomAdj:Yh(a)}},kC=(e,t)=>{const{ascent:A,descent:r,bbox:n,unitsPerEm:s}=e,i=1e3/s;let o=(A||n.maxY)*i-(r||n.minY)*i;return o-=Math.abs(r*i)||0,o/1e3*t},GC=(e,t,A,r)=>{const{glyphs:n}=t.layout(e),s=1e3/t.unitsPerEm;return n.reduce(((e,t)=>e+t.advanceWidth*s),0)*(A/1e3)+(i=r,(e.length-1)*i);var i},FC=async(e,t,A)=>{const r=e||Th(t),n=(e=>`getFontKitFont-${e}`)(r);if(A.has(n))return A.get(n);const s=t[r]||(e=>e[Th(e)])(t)||Uh()[Rh];let i=s.data;"string"===typeof i&&(i=i.startsWith("http")?await fetch(i).then((e=>e.arrayBuffer())):Jh(i));const o=xp(i instanceof wh.hp?i:wh.hp.from(i));return A.set(n,o),o},SC=(e,t)=>{const{font:A,fontSize:r,characterSpacing:n,boxWidthInPt:s}=t;return GC(e,A,r,n)>s},WC=(e,t)=>{const A=((e,t)=>{for(let A=0;A<=e.length;A++)if(SC(e.slice(0,A+1),t))return A;return null})(e,t);if(null===A)return e.length;if(" "===e[A])return A;let r=A-1;for(;r>=0;){if(n=e[r],[" ","-","\u2014","\u2013"].includes(n))return r+1;r--}var n;return A},ZC=(e,t)=>{const A=WC(e,t),r=e.substring(0,A).trimEnd(),n=e.substring(A).trimStart();return n===e?[e]:0===n.length?[r]:[r,...ZC(n,t)]},XC=async e=>{let{textSchema:t,font:A,value:r,startingFontSize:n,_cache:s}=e;const{fontSize:i,dynamicFontSize:o,characterSpacing:a,width:l,height:u,lineHeight:c=EC}=t,d=n||i||vC;if(!o)return d;if(o.max<o.min)return d;const f=a??0,h=await FC(t.fontName,A,s),g=r.split("\n");let p=d;p<o.min?p=o.min:p>o.max&&(p=o.max);const b=o.fit??PC,m=e=>{let t=0,A=0;const r=Vh(l),n=kC(h,e),s=Oh(n*c),i=Oh(e*c);return g.forEach(((n,o)=>{if(ZC(n,{font:h,fontSize:e,characterSpacing:f,boxWidthInPt:r}).forEach(((r,n)=>{if(b===DC){const A=GC(r,h,e,f),n=Oh(A);t=Math.max(t,n)}A+=o+n===0?s:i})),b===QC){const A=GC(n,h,e,f),r=Oh(A);t=Math.max(t,r)}})),{totalWidthInMm:t,totalHeightInMm:A}},v=(e,t)=>!(p>=o.max)&&(b===QC?e<l:t<u),y=(e,t)=>!(p<=o.min||p<=0)&&(e>l||t>u);let{totalWidthInMm:w,totalHeightInMm:B}=m(p);for(;v(w,B);){p+=IC;const{totalWidthInMm:e,totalHeightInMm:t}=m(p);if(!(t<u)){p-=IC;break}w=e,B=t}for(;y(w,B);)p-=IC,({totalWidthInMm:w,totalHeightInMm:B}=m(p));return p},MC=e=>{const{value:t,characterSpacing:A,fontSize:r,fontKitFont:n,boxWidthInPt:s}=e,i={font:n,fontSize:r,characterSpacing:A,boxWidthInPt:s};let o=[];return t.split(/\r\n|\r|\n|\f|\u000B/g).forEach((e=>{o=o.concat(ZC(e,i))})),o};class zC{constructor(e,t,A){Object.defineProperty(this,"raw",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"text",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"styles",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"section",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"contentHeight",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"contentWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"wrappedWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"minReadableWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"minWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"width",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"height",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"x",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"y",{enumerable:!0,configurable:!0,writable:!0,value:0}),this.styles=t,this.section=A,this.raw=e;this.text=e.split(/\r\n|\r|\n/g)}getContentHeight(){const e=(Array.isArray(this.text)?this.text.length:1)*(Oh(this.styles.fontSize)*this.styles.lineHeight)+(this.padding("top")+this.padding("bottom"));return Math.max(e,this.styles.minCellHeight)}padding(e){return this.styles.cellPadding[e]}}class RC{constructor(e){Object.defineProperty(this,"index",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wrappedWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"minReadableWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"minWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"width",{enumerable:!0,configurable:!0,writable:!0,value:0}),this.index=e}getMaxCustomCellWidth(e){let t=0;for(const A of e.allRows()){const e=A.cells[this.index];t=Math.max(t,e.styles.cellWidth)}return t}}class jC{constructor(e,t,A,r){Object.defineProperty(this,"raw",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"index",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"section",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"cells",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"height",{enumerable:!0,configurable:!0,writable:!0,value:0}),this.raw=e,this.index=t,this.section=A,this.cells=r}getMaxCellHeight(e){return e.reduce(((e,t)=>Math.max(e,this.cells[t.index]?.height||0)),0)}getMinimumRowHeight(e){return e.reduce(((e,t)=>{const A=this.cells[t.index];if(!A)return 0;const r=A.padding("top")+A.padding("bottom")+A.styles.lineHeight;return r>e?r:e}),0)}}class TC{constructor(e,t){Object.defineProperty(this,"settings",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"styles",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"columns",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"head",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"body",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.settings=e.settings,this.styles=e.styles,this.columns=t.columns,this.head=t.head,this.body=t.body}static async create(e){const{input:t,content:A,font:r,_cache:n}=e,s=new TC(t,A);return await async function(e){const{table:t,font:A,_cache:r}=e,n=e=>FC(e,A,r);await async function(e,t){for(const A of e.allRows())for(const r of e.columns){const e=A.cells[r.index];if(!e)continue;const n=e.padding("right")+e.padding("left"),s=await t(e.styles.fontName);e.contentWidth=VC(e,s)+n;const i=VC(Object.assign(e,{text:e.text.join(" ").split(/\s+/)}),s);e.minReadableWidth=i+n,e.minWidth=e.styles.cellWidth,e.wrappedWidth=e.styles.cellWidth}for(const A of e.allRows())for(const t of e.columns){const r=A.cells[t.index];if(r)t.wrappedWidth=Math.max(t.wrappedWidth,r.wrappedWidth),t.minWidth=Math.max(t.minWidth,r.minWidth),t.minReadableWidth=Math.max(t.minReadableWidth,r.minReadableWidth);else{const A=e.styles.columnStyles[t.index]||{},r=A.cellWidth||A.minCellWidth;r&&(t.minWidth=r,t.wrappedWidth=r)}}}(t,n);const s=[];let i=0;t.columns.forEach((e=>{const A=e.getMaxCustomCellWidth(t);A?e.width=A:(e.width=e.wrappedWidth,s.push(e)),i+=e.width}));let o=t.getWidth()-i;o&&(o=UC(s,o,(e=>Math.max(e.minReadableWidth,e.minWidth))));o&&(o=UC(s,o,(e=>e.minWidth)));o=Math.abs(o),function(e){const t=e.allRows();for(let A=0;A<t.length;A++){const r=t[A];let n=null,s=0,i=0;for(let t=0;t<e.columns.length;t++){const A=e.columns[t];if(i-=1,i>1&&e.columns[t+1])s+=A.width,delete r.cells[A.index];else if(n){const e=n;delete r.cells[A.index],n=null,e.width=A.width+s}else{const e=r.cells[A.index];if(!e)continue;i=1,s=0,e.width=A.width+s}}}}(t),await async function(e,t){const A={count:0,height:0};for(const r of e.allRows()){for(const n of e.columns){const e=r.cells[n.index];if(!e)continue;const s=await t(e.styles.fontName);e.text=MC({value:e.raw,characterSpacing:e.styles.characterSpacing,boxWidthInPt:Vh(e.width),fontSize:e.styles.fontSize,fontKitFont:s}),e.contentHeight=e.getContentHeight();let i=e.contentHeight;A&&A.count>0&&A.height>i&&(i=A.height),i>r.height&&(r.height=i)}A.count--}}(t,n),function(e){const t={};let A=1;const r=e.allRows();for(let n=0;n<r.length;n++){const s=r[n];for(const r of e.columns){const e=t[r.index];if(A>1)A--,delete s.cells[r.index];else if(e)e.cell.height+=s.height,A=1,delete s.cells[r.index],e.left--,e.left<=1&&delete t[r.index];else{const e=s.cells[r.index];if(!e)continue;e.height=s.height}}}}(t)}({table:s,font:r,_cache:n}),s}getHeadHeight(){return this.head.reduce(((e,t)=>e+t.getMaxCellHeight(this.columns)),0)}getBodyHeight(){return this.body.reduce(((e,t)=>e+t.getMaxCellHeight(this.columns)),0)}allRows(){return this.head.concat(this.body)}getWidth(){return this.settings.tableWidth}getHeight(){return(this.settings.showHead?this.getHeadHeight():0)+this.getBodyHeight()}}function UC(e,t,A){const r=t,n=e.reduce(((e,t)=>e+t.wrappedWidth),0);for(let s=0;s<e.length;s++){const i=e[s],o=r*(i.wrappedWidth/n),a=i.width+o,l=A(i),u=a<l?l:a;t-=u-i.width,i.width=u}if(t=Math.round(1e10*t)/1e10){const r=e.filter((e=>!(t<0)||e.width>A(e)));r.length&&(t=UC(r,t,A))}return t}function VC(e,t){const A=e.text,r=Array.isArray(A)?A:[A],n=e.styles.fontSize,s=e.styles.characterSpacing,i=r.map((e=>GC(e,t,n,s))).reduce(((e,t)=>Math.max(e,t)),0);return i}function OC(e,t,A,r,n){const s={};return t.map(((t,i)=>{let o=0;const a={};let l=0,u=0;for(const c of A)if(null==s[c.index]||0===s[c.index].left)if(0===u){let A;A=Array.isArray(t)?t[c.index-l-o]:t[c.index];const d=YC(e,c,i,r,n),f=new zC(A,d,e);a[c.index]=f,u=0,s[c.index]={left:0,times:u}}else u--,l++;else s[c.index].left--,u=s[c.index].times,o++;return new jC(t,i,e,a)}))}function YC(e,t,A,r,n){let s;"head"===e?s=r.headStyles:"body"===e&&(s=r.bodyStyles);const i=Object.assign({},r.styles,s),o=r.columnStyles[t.index]||r.columnStyles[t.index]||{},a="body"===e&&A%2===0?Object.assign({},r.alternateRowStyles):{},l={fontName:n,backgroundColor:"",textColor:"#000000",lineHeight:1,characterSpacing:0,alignment:"left",verticalAlignment:"middle",fontSize:10,cellPadding:5,lineColor:"#000000",lineWidth:0,minCellHeight:0,minCellWidth:0};return Object.assign(l,i,a,o)}function HC(e){return{fontName:e.fontName,alignment:e.alignment,verticalAlignment:e.verticalAlignment,fontSize:e.fontSize,lineHeight:e.lineHeight,characterSpacing:e.characterSpacing,backgroundColor:e.backgroundColor,textColor:e.fontColor,lineColor:e.borderColor,lineWidth:e.borderWidth,cellPadding:e.padding}}function KC(e,t,A){let r=t;const n=[];let s=0;for(;r>0&&s<e.length;){const t=e.slice(0,s+1).pop();if(!t)break;const A=t.height;if(r-A<0)break;n.push(t.raw),r-=A,s++}return JC(n,A)}function qC(e,t){const A=function(e,t){const A=e.headWidthPercentages.reduce(((t,A,r)=>({...t,[r]:{cellWidth:e.width*(A/100)}})),{}),r=Object.entries(e.columnStyles.alignment||{}).reduce(((e,t)=>{let[A,r]=t;return{...e,[A]:{alignment:r}}}),{}),n=new Set([...Object.keys(A).map(Number),...Object.keys(r).map(Number)]),s=Array.from(n).reduce(((e,t)=>{const n=A[t]||{},s=r[t]||{};return{...e,[t]:{...n,...s}}}),{});return{head:[e.head],body:t,showHead:e.showHead,startY:e.position.y,tableWidth:e.width,tableLineColor:e.tableStyles.borderColor,tableLineWidth:e.tableStyles.borderWidth,headStyles:HC(e.headStyles),bodyStyles:HC(e.bodyStyles),alternateRowStyles:{backgroundColor:e.bodyStyles.alternateBackgroundColor},columnStyles:s,margin:{top:0,right:0,left:e.position.x,bottom:0}}}(e,t),r=function(e){const t={styles:{},headStyles:{},bodyStyles:{},alternateRowStyles:{},columnStyles:{}};for(const A of Object.keys(t))if("columnStyles"===A){const r=e[A];t.columnStyles=Object.assign({},r)}else{const r=[e].map((e=>e[A]||{}));t[A]=Object.assign({},r[0],r[1],r[2])}return t}(A),n={startY:A.startY,margin:A.margin,tableWidth:A.tableWidth,showHead:A.showHead,tableLineWidth:A.tableLineWidth??0,tableLineColor:A.tableLineColor??""},s=function(e){const t=e.head||[],A=e.body||[];return{columns:(t[0]||A[0]||[]).map(((e,t)=>t)),head:t,body:A}}(A);return{content:s,styles:r,settings:n}}function JC(e,t){const{options:A,_cache:r,basePdf:n}=t;if(!qh(n))throw new Error("[@pdfme/schema/table] Custom PDF is not supported");const s=qC(t.schema,e),i=A.font||Uh(),o=function(e,t){const A=e.content,r=A.columns.map((e=>new RC(e))),n=e.styles;return{columns:r,head:OC("head",A.head,r,n,t),body:OC("body",A.body,r,n,t)}}(s,Th(i));return TC.create({input:s,content:o,font:i,_cache:r})}async function _C(e,t){const{basePdf:A,schema:r}=t;if(!qh(A))throw new Error("[@pdfme/schema/table] Custom PDF is not supported");const n=A.height,s=A.padding[2],i=A.padding[0];let o=n-s-r.position.y;const a=await JC(e,t);let l=a.body;const u=[];for(;l.length>0;){const e=0===u.length?o-a.getHeadHeight():o-i,A=await KC(l,e,t);if(u.push(A),l=l.slice(A.body.length),l.length>0){const e=og(r);e.showHead=!1,e.position.y=i,t.schema=e,o=n-i-s}}return u}const $C=e=>"string"===typeof e?JSON.parse(e||"[]"):e||[],eE=async e=>{const{template:t,input:A,options:r,_cache:n}=e,s=Object.assign(og(t),{schemas:[]});let i=0;for(const o of t.schemas){const e=[];for(const[t,a]of Object.entries(o))if("table"===a.type){a.__bodyRange=void 0;const o=$C(A?.[t]),l=await _C(o,{schema:a,basePdf:s.basePdf,options:r,_cache:n});if(l.length>1){const r=l[0];a.__bodyRange={start:0,end:r.body.length};const n=l.map((e=>e.body));l.slice(1).forEach(((r,s)=>{const o=i+s+1,l={[t]:{...a,position:{x:a.position.x,y:r.settings.startY},height:r.getHeight(),showHead:!1,__bodyRange:{start:n.slice(0,s+1).reduce(((e,t)=>e+t.length),0),end:n.slice(0,s+2).reduce(((e,t)=>e+t.length),0)},content:"string"!==typeof A[t]?JSON.stringify(A[t]||"[]"):A[t]}};e[o]=l}))}}s.schemas.push(o),e.forEach(((e,t)=>{s.schemas[t]?s.schemas[t]={...s.schemas[t],...e}:s.schemas[t]=e})),i++}return s},tE=async(e,t)=>{if("table"!==t.schema.type)return Promise.resolve(t.schema.height);const A=t.schema,r=0===A.__bodyRange?.start?$C(e):((e,t)=>{const A=$C(e);return t?A.slice(t.start,t.end):A})(e,A.__bodyRange);return(await JC(r,t)).getHeight()},AE=async e=>{const{pdfDoc:t,font:A,_cache:r}=e;if(r.has(t))return r.get(t);const n=await Promise.all(Object.values(A).map((async e=>{let A=e.data;return"string"===typeof A&&A.startsWith("http")&&(A=await fetch(A).then((e=>e.arrayBuffer()))),t.embedFont(A,{subset:"undefined"===typeof e.subset||e.subset})}))),s=Object.keys(A).reduce(((e,t,A)=>Object.assign(e,{[t]:n[A]})),{});return r.set(t,s),s},rE=async e=>{let{value:t,font:A,schema:r,colorType:n,_cache:s}=e;const i=r.dynamicFontSize?await XC({textSchema:r,font:A,value:t,_cache:s}):r.fontSize??vC,o=ig(r.fontColor||NC,n);return{alignment:r.alignment??yC,verticalAlignment:r.verticalAlignment??CC,lineHeight:r.lineHeight??EC,characterSpacing:r.characterSpacing??0,fontSize:i,color:o}},nE="^#(?:[A-Fa-f0-9]{6})$";var sE;function iE(e){const t=[{key:sE.STRIKETHROUGH,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M6.85 7.08C6.85 4.37 9.45 3 12.24 3c1.64 0 3 .49 3.9 1.28c.77.65 1.46 1.73 1.46 3.24h-3.01c0-.31-.05-.59-.15-.85c-.29-.86-1.2-1.28-2.25-1.28c-1.86 0-2.34 1.02-2.34 1.7c0 .48.25.88.74 1.21c.38.25.77.48 1.41.7H7.39c-.21-.34-.54-.89-.54-1.92zM21 12v-2H3v2h9.62c1.15.45 1.96.75 1.96 1.97c0 1-.81 1.67-2.28 1.67c-1.54 0-2.93-.54-2.93-2.51H6.4c0 .55.08 1.13.24 1.58c.81 2.29 3.29 3.3 5.67 3.3c2.27 0 5.3-.89 5.3-4.05c0-.3-.01-1.16-.48-1.94H21V12z" fill="currentColor"></path></svg>',type:"boolean"},{key:sE.UNDERLINE,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z" fill="currentColor"></path></svg>',type:"boolean"},{key:sE.ALIGNMENT,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z" fill="currentColor"></path></svg>',type:"select",value:yC},{key:sE.ALIGNMENT,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z" fill="currentColor"></path></svg>',type:"select",value:"center"},{key:sE.ALIGNMENT,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z" fill="currentColor"></path></svg>',type:"select",value:"right"},{key:sE.VERTICAL_ALIGNMENT,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M8 11h3v10h2V11h3l-4-4l-4 4zM4 3v2h16V3H4z" fill="currentColor"></path></svg>',type:"select",value:CC},{key:sE.VERTICAL_ALIGNMENT,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M8 19h3v4h2v-4h3l-4-4l-4 4zm8-14h-3V1h-2v4H8l4 4l4-4zM4 11v2h16v-2H4z" fill="currentColor"></path></svg>',type:"select",value:BC},{key:sE.VERTICAL_ALIGNMENT,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M16 13h-3V3h-2v10H8l4 4l4-4zM4 19v2h16v-2H4z" fill="currentColor"></path></svg>',type:"select",value:xC}];return{title:e("schemas.text.format"),widget:"ButtonGroup",buttons:t,span:17}}!function(e){e.STRIKETHROUGH="strikethrough",e.UNDERLINE="underline",e.ALIGNMENT="alignment",e.VERTICAL_ALIGNMENT="verticalAlignment"}(sE||(sE={}));const oE=(e,t)=>{const A={};return e.split(/(\r\n|\n|\r)/).map((e=>/\r\n|\n|\r/.test(e)?e:e.split("").map((e=>/\s/.test(e)||e.charCodeAt(0)<32||(e=>{if(e in A)return A[e];const r=t.hasGlyphForCodePoint(e.codePointAt(0)||0);return A[e]=r,r})(e)?e:"\u303f")).join(""))).join("")},aE=async(e,t)=>{const{schema:A,rootElement:r,mode:n,options:s,_cache:i}=e,o=s?.font||Uh();let a;A.dynamicFontSize&&t&&(a=await XC({textSchema:A,font:o,value:t,startingFontSize:a,_cache:i}));const l=await FC(A.fontName,o,i),{topAdj:u,bottomAdj:c}=LC(l,a??A.fontSize??vC,A.lineHeight??EC,A.verticalAlignment??CC),d=u.toString(),f=c.toString(),h=document.createElement("div"),g={padding:0,resize:"none",backgroundColor:cE(t,A),border:"none",display:"flex",flexDirection:"column",justifyContent:uE(A.verticalAlignment),width:"100%",height:"100%",cursor:ng(n,A)?"text":"default"};Object.assign(h.style,g),r.innerHTML="",r.appendChild(h);const p=[];A.strikethrough&&p.push("line-through"),A.underline&&p.push("underline");const b={fontFamily:A.fontName?`'${A.fontName}'`:"inherit",color:A.fontColor?A.fontColor:NC,fontSize:`${a??A.fontSize??vC}pt`,letterSpacing:`${A.characterSpacing??0}pt`,lineHeight:`${A.lineHeight??EC}em`,textAlign:A.alignment??yC,whiteSpace:"pre-wrap",wordBreak:"break-word",resize:"none",border:"none",outline:"none",marginBottom:`${f}px`,paddingTop:`${d}px`,backgroundColor:"transparent",textDecoration:p.join(" ")},m=document.createElement("div");return m.id="text-"+A.id,Object.assign(m.style,b),h.appendChild(m),m},lE=e=>{navigator.userAgent.toLowerCase().indexOf("firefox")>-1?(e.contentEditable="true",e.addEventListener("keydown",(e=>{"Enter"!==e.key||e.shiftKey||(e.preventDefault(),document.execCommand("insertLineBreak",!1,void 0))})),e.addEventListener("paste",(e=>{e.preventDefault();const t=e.clipboardData?.getData("text"),A=window.getSelection();A?.rangeCount&&(A.deleteFromDocument(),A.getRangeAt(0).insertNode(document.createTextNode(t||"")),A.collapseToEnd())}))):e.contentEditable="plaintext-only"},uE=e=>{switch(e){case wC:return"flex-start";case BC:return"center";case xC:return"flex-end"}return"flex-start"},cE=(e,t)=>e&&t.backgroundColor?t.backgroundColor:"transparent",dE={pdf:async e=>{const{value:t,pdfDoc:A,pdfLib:r,page:n,options:s,schema:i,_cache:o}=e;if(!t)return;const{font:a=Uh(),colorType:l}=s,[u,c,d]=await Promise.all([AE({pdfDoc:A,font:a,_cache:o}),FC(i.fontName,a,o),rE({value:t,font:a,schema:i,_cache:o,colorType:l})]),{fontSize:f,color:h,alignment:g,verticalAlignment:p,lineHeight:b,characterSpacing:m}=d,v=i.fontName?i.fontName:Th(a),y=u&&u[v],w=n.getHeight(),{width:B,height:x,rotate:C,position:{x:E,y:N},opacity:D}=(e=>{let{schema:t,pageHeight:A,applyRotateTranslate:r=!0}=e;const{width:n,height:s,position:i,rotate:o,opacity:a}=t,{x:l,y:u}=i,c=o?-o:0,d=Vh(n),f=Vh(s);let h=Vh(l),g=A-Vh(u)-f;if(c&&r){const e={x:h+d/2,y:A-Vh(u)-f/2},t=rg({x:h,y:g},e,c);h=t.x,g=t.y}return{position:{x:h,y:g},height:f,width:d,rotate:sa(c),opacity:a}})({schema:i,pageHeight:w,applyRotateTranslate:!1});if(i.backgroundColor){const e=ig(i.backgroundColor,l);n.drawRectangle({x:E,y:N,width:B,height:x,rotate:C,color:e})}n.pushOperators(r.setCharacterSpacing(m??0));const Q=kC(c,f),P=((e,t)=>{const{descent:A,unitsPerEm:r}=e;return A/r*t})(c,f),I=0===b?0:(b-1)*f/2,L=MC({value:t,characterSpacing:m,fontSize:f,fontKitFont:c,boxWidthInPt:B});let k=0;if(p===wC)k=Q+I;else{const e=b*f*(L.length-1);p===xC?k=x-e+P-I:p===BC&&(k=(x-e-Q+P)/2+Q)}const G={x:E+B/2,y:w-Vh(i.position.y)-x/2};L.forEach(((e,t)=>{const A=GC(e,c,f,m),r=kC(c,f),s=b*f*t;let o=E;"center"===g?o+=(B-A)/2:"right"===g&&(o+=B-A);let a=w-Vh(i.position.y)-k-s;if(i.strikethrough&&A>0){const e=o+A+1,t=a+r/3;n.drawLine({start:rg({x:o,y:t},G,C.angle),end:rg({x:e,y:t},G,C.angle),thickness:1/12*f,color:h,opacity:D})}if(i.underline&&A>0){const e=o+A+1,t=a-r/12;n.drawLine({start:rg({x:o,y:t},G,C.angle),end:rg({x:e,y:t},G,C.angle),thickness:1/12*f,color:h,opacity:D})}if(0!==C.angle){const e=rg({x:o,y:a},G,C.angle);o=e.x,a=e.y}n.drawText(e,{x:o,y:a,rotate:C,size:f,color:h,lineHeight:b*f,font:y,opacity:D})}))},ui:async e=>{const{value:t,schema:A,mode:r,onChange:n,stopEditing:s,tabIndex:i,placeholder:o,options:a,_cache:l}=e,u=ng(r,A)&&o&&!t,c=e=>{let t=e.innerText;return t.endsWith("\n")&&(t=t.slice(0,-1)),t},d=a?.font||Uh(),[f,h]=await Promise.all([FC(A.fontName,d,l),aE(e,u?o:t)]),g=oE(t,f);if(ng(r,A)){if(lE(h),h.tabIndex=i||0,h.innerText="designer"===r?t:g,h.addEventListener("blur",(e=>{n&&n({key:"content",value:c(e.target)}),s&&s()})),A.dynamicFontSize){let e;const t=a?.font||Uh(),r=await FC(A.fontName,t,l);h.addEventListener("keyup",(()=>{setTimeout((()=>{(async()=>{if(!h.textContent)return;e=await XC({textSchema:A,font:t,value:c(h),startingFontSize:e,_cache:l}),h.style.fontSize=`${e}pt`;const{topAdj:n,bottomAdj:s}=LC(r,e??A.fontSize??vC,A.lineHeight??EC,A.verticalAlignment??CC);h.style.paddingTop=`${n}px`,h.style.marginBottom=`${s}px`})()}),0)}))}u&&(h.style.color="#A0A0A0",h.addEventListener("focus",(()=>{h.innerText===o&&(h.innerText="",h.style.color=A.fontColor??NC)}))),"designer"===r&&setTimeout((()=>{h.focus();const e=window.getSelection(),t=document.createRange();e&&t&&(t.selectNodeContents(h),t.collapse(!1),e?.removeAllRanges(),e?.addRange(t))}))}else h.innerHTML=g.split("").map(((e,A)=>`<span style="letter-spacing:${String(t).length===A+1?0:"inherit"};">${e}</span>`)).join("")},propPanel:{schema:e=>{let{options:t,activeSchema:A,i18n:r}=e;const n=t.font||{[Rh]:{data:"",fallback:!0}},s=Object.keys(n),i=Th(n),o=Boolean(A?.dynamicFontSize);return{fontName:{title:r("schemas.text.fontName"),type:"string",widget:"select",default:i,props:{options:s.map((e=>({label:e,value:e})))},span:12},fontSize:{title:r("schemas.text.size"),type:"number",widget:"inputNumber",span:6,disabled:o,props:{min:0}},characterSpacing:{title:r("schemas.text.spacing"),type:"number",widget:"inputNumber",span:6,props:{min:0}},formatter:iE(r),lineHeight:{title:r("schemas.text.lineHeight"),type:"number",widget:"inputNumber",props:{step:.1,min:0},span:7},useDynamicFontSize:{type:"boolean",widget:"UseDynamicFontSize",bind:!1,span:16},dynamicFontSize:{type:"object",widget:"card",column:3,properties:{min:{title:r("schemas.text.min"),type:"number",widget:"inputNumber",hidden:!o,props:{min:0}},max:{title:r("schemas.text.max"),type:"number",widget:"inputNumber",hidden:!o,props:{min:0}},fit:{title:r("schemas.text.fit"),type:"string",widget:"select",hidden:!o,props:{options:[{label:r("schemas.horizontal"),value:QC},{label:r("schemas.vertical"),value:DC}]}}}},fontColor:{title:r("schemas.textColor"),type:"string",widget:"color",rules:[{pattern:nE,message:r("validation.hexColor")}]},backgroundColor:{title:r("schemas.bgColor"),type:"string",widget:"color",rules:[{pattern:nE,message:r("validation.hexColor")}]}}},widgets:{UseDynamicFontSize:e=>{const{rootElement:t,changeSchemas:A,activeSchema:r,i18n:n}=e,s=document.createElement("input");s.type="checkbox",s.checked=Boolean(r?.dynamicFontSize),s.onchange=e=>{const t=e.target.checked?{min:4,max:72,fit:PC}:void 0;A([{key:"dynamicFontSize",value:t,schemaId:r.id}])};const i=document.createElement("label"),o=document.createElement("span");o.innerText=n("schemas.text.dynamicFontSize")||"",o.style.cssText="margin-left: 0.5rem",i.style.cssText="display: flex; width: 100%;",i.appendChild(s),i.appendChild(o),t.appendChild(i)}},defaultSchema:{type:"text",content:"Type Something...",position:{x:0,y:0},width:45,height:10,rotate:0,alignment:yC,verticalAlignment:CC,fontSize:vC,lineHeight:EC,characterSpacing:0,dynamicFontSize:void 0,fontColor:NC,fontName:void 0,backgroundColor:"",opacity:1,strikethrough:!1,underline:!1}},icon:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-text-cursor-input"><path d="M5 4h1a3 3 0 0 1 3 3 3 3 0 0 1 3-3h1"/><path d="M13 20h-1a3 3 0 0 1-3-3 3 3 0 0 1-3 3H5"/><path d="M5 16H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h1"/><path d="M13 8h7a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-7"/><path d="M9 7v10"/></svg>'},fE=dE,hE=(dE.propPanel.defaultSchema,{Text:fE}),gE="pdfme (https://pdfme.com/)",pE=async e=>{const{template:{schemas:t,basePdf:A},pdfDoc:r}=e;let n=[],s=[];if(qh(A)){const{width:e,height:i}=A,o=Vh(e),a=Vh(i);n=t.map((()=>{const e=ed.create(r);return e.setSize(o,a),e})),s=t.map((()=>({mediaBox:{x:0,y:0,width:o,height:a},bleedBox:{x:0,y:0,width:o,height:a},trimBox:{x:0,y:0,width:o,height:a}})))}else{const e="string"===typeof A?await(e=>"string"!==typeof e||e.startsWith("data:application/pdf;")||"undefined"===typeof window?e:fetch(e).then((e=>e.blob())).then(Hh).catch((e=>{throw e})))(A):A,t=(await Ic.load(e)).getPages();s=t.map((e=>({mediaBox:e.getMediaBox(),bleedBox:e.getBleedBox(),trimBox:e.getTrimBox()})));const i=t.map((e=>{const{x:t,y:A,width:r,height:n}=e.getMediaBox();return{left:t,bottom:A,right:r,top:n+A}})),o=t.map((()=>[1,0,0,1,0,0]));n=await r.embedPages(t,i,o)}return{basePages:n,embedPdfBoxes:s}},bE=e=>{const{basePage:t,embedPdfBox:A,pdfDoc:r}=e,n=t instanceof Ou?t.size():t.getSize(),s=t instanceof Ou?r.addPage([n.width,n.height]):r.addPage(t);if(t instanceof Ou){s.drawPage(t);const{mediaBox:e,bleedBox:r,trimBox:n}=A;s.setMediaBox(e.x,e.y,e.width,e.height),s.setBleedBox(r.x,r.y,r.width,r.height),s.setTrimBox(n.x,n.y,n.width,n.height)}return s},mE=async A=>{(e=>{$h(e,Zh)})(A);const{inputs:r,template:n,options:s={},plugins:i={}}=A,o=n.basePdf;if(0===r.length)throw new Error("[@pdfme/generator] inputs should not be empty, pass at least an empty object in the array");((e,t)=>{e.schemas.forEach((e=>Object.entries(e).forEach((e=>{let[A,r]=e;if(r.required&&!r.readOnly&&!t.some((e=>e[A])))throw new Error(`[@pdfme/generator] input for '${A}' is required to generate this PDF`)}))))})(n,r);const{pdfDoc:a,renderObj:l}=await(async e=>{const{template:A,userPlugins:r}=e,{schemas:n}=A,s=await Ic.create();s.registerFontkit(t);const i=Object.values(r).length>0?Object.values(r):Object.values(hE);return{pdfDoc:s,renderObj:n.flatMap((e=>Object.values(e).map((e=>e.type)))).reduce(((e,t)=>{const A=i.find((e=>e.propPanel.defaultSchema.type===t));if(!A)throw new Error(`[@pdfme/generator] Renderer for type ${t} not found.\nCheck this document: https://pdfme.com/docs/custom-schemas`);return{...e,[t]:A.pdf}}),{})}})({template:n,userPlugins:i}),u=new Map;for(let t=0;t<r.length;t+=1){const A=r[t],i=await eg({template:n,input:A,options:s,_cache:u,modifyTemplate:e=>eE(e),getDynamicHeight:(e,t)=>"table"!==t.schema.type?Promise.resolve(t.schema.height):tE(e,t)}),{basePages:c,embedPdfBoxes:d}=await pE({template:i,pdfDoc:a}),f=i.schemas.flatMap((e=>Object.keys(e)));for(let t=0;t<c.length;t+=1){const r=c[t],n=d[t],h=bE({basePage:r,embedPdfBox:n,pdfDoc:a});for(let c=0;c<f.length;c+=1){const r=f[c],n=(i.schemas[t]||{})[r];if(!n)continue;const d=l[n.type];if(!d)continue;const g=n.readOnly?n.content||"":A[r];await d({key:r,value:g,schema:n,basePdf:o,pdfLib:e,pdfDoc:a,page:h,options:s,_cache:u})}}}return(e=>{const{pdfDoc:t,options:A}=e,{author:r=gE,creationDate:n=new Date,creator:s=gE,keywords:i=[],language:o="en-US",modificationDate:a=new Date,producer:l=gE,subject:u="",title:c=""}=A;t.setAuthor(r),t.setCreationDate(n),t.setCreator(s),t.setKeywords(i),t.setLanguage(o),t.setModificationDate(a),t.setProducer(l),t.setSubject(u),t.setTitle(c)})({pdfDoc:a,options:s}),a.save()},vE={schemas:[{"Resident First Name":{position:{x:149.27,y:56.13},width:149.52,height:13,verticalAlignment:"top",fontSize:25,lineHeight:1,characterSpacing:0,fontColor:"#b3b3b3",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left",fontName:"ArialBold"},"Resident Last Name":{position:{x:71.37,y:65.87},width:68.24,height:13,alignment:"center",verticalAlignment:"top",fontSize:25,lineHeight:1,characterSpacing:0,fontColor:"#b3b3b3",backgroundColor:"",opacity:1,rotate:0,type:"text",fontName:"ArialBold"},"Expiration Date and Time":{position:{x:80.18,y:84.33},width:65,height:8,verticalAlignment:"top",fontSize:11,lineHeight:1,characterSpacing:0,fontColor:"#454545",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},"Vehicle Make":{position:{x:114.13,y:103.29},width:50,height:6,verticalAlignment:"top",fontSize:11,lineHeight:1,characterSpacing:0,fontColor:"#454545",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},"Vehicle Model":{position:{x:115.4,y:115.91},width:50,height:6,verticalAlignment:"top",fontSize:11,lineHeight:1,characterSpacing:0,fontColor:"#454545",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},"Vehicle Color":{position:{x:112.19,y:128.36},width:50,height:6,verticalAlignment:"top",fontSize:11,lineHeight:1,characterSpacing:0,fontColor:"#454545",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"}}],basePdf:"data:application/pdf;base64,"},yE=()=>{const[e,t]=(0,n.useState)(""),[A,r]=(0,n.useState)(""),[s,i]=(0,n.useState)(""),[o,a]=(0,n.useState)(""),[l,u]=(0,n.useState)(""),[c,d]=(0,n.useState)(""),[f,h]=(0,n.useState)(""),[g,p]=(0,n.useState)(""),[b,m]=(0,n.useState)(null),[v,y]=(0,n.useState)("Generate Parking Pass"),[w,B]=(0,n.useState)(!1),[x,C]=(0,n.useState)(!1),E=(e,t)=>{if(e&&t){const A=qt(new Date(`${e}T${t}`),"EEE MMM d yyyy 'at' hh:mm a");u(A)}};return(0,ve.jsxs)("div",{className:"flex flex-col items-center justify-center flex-grow p-4 bg-gray-100",children:[(0,ve.jsx)("h2",{className:"mb-8 text-3xl font-bold text-center text-gray-800",children:"Campus View Guest Parking Pass"}),(0,ve.jsxs)("form",{onSubmit:async t=>{t.preventDefault(),B(!0),y("Generating...");const r=[{"Resident First Name":e,"Resident Last Name":A,"Expiration Date and Time":l,"Vehicle Make":c,"Vehicle Model":f,"Vehicle Color":g}];try{const e=await mE({template:vE,inputs:r}),t=new Blob([e],{type:"application/pdf"});m(t),y("Generated!"),C(!0),setTimeout((()=>{y("Generate Parking Pass"),B(!1),C(!1),m(null)}),5e3)}catch(ar){console.error("Error generating PDF:",ar),y("Generate Parking Pass"),B(!1)}},className:"w-full max-w-xl p-6 space-y-6 bg-white rounded-lg shadow-lg",children:[(0,ve.jsxs)("div",{className:"grid grid-cols-1 gap-6 md:grid-cols-2",children:[(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Resident First Name"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter first name",value:e,onChange:e=>t(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Resident Last Name"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter last name",value:A,onChange:e=>r(e.target.value),required:!0})]})]}),(0,ve.jsxs)("div",{className:"grid grid-cols-1 gap-6 md:grid-cols-2",children:[(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Permit Expiration Date"}),(0,ve.jsx)("input",{type:"date",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",value:s,onChange:e=>{i(e.target.value),E(e.target.value,o)},required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Permit Expiration Time"}),(0,ve.jsx)("input",{type:"time",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",value:o,onChange:e=>{a(e.target.value),E(s,e.target.value)},required:!0})]})]}),(0,ve.jsxs)("div",{className:"flex items-center",children:[(0,ve.jsx)("button",{type:"button",className:"px-4 py-2 text-white bg-black rounded-md hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black",onClick:()=>{const e=_t(new Date,1),t=qt(e,"yyyy-MM-dd"),A=qt(e,"HH:mm");i(t),a(A);const r=qt(e,"EEE MMM d yyyy 'at' hh:mm a");u(r)},children:"Set Expiration Date to 1 Day from Now"}),(0,ve.jsx)("p",{className:"ml-4 text-sm text-gray-500",children:l?`Selected: ${l}`:"Format: Mon Sep 9 2024 at 12:00 PM"})]}),(0,ve.jsxs)("div",{className:"grid grid-cols-1 gap-6 md:grid-cols-3",children:[(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Vehicle Make"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter vehicle make",value:c,onChange:e=>d(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Vehicle Model"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter vehicle model",value:f,onChange:e=>h(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Vehicle Color"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter vehicle color",value:g,onChange:e=>p(e.target.value),required:!0})]})]}),(0,ve.jsx)("div",{children:(0,ve.jsx)("button",{type:"submit",className:"w-full py-3 text-white bg-black rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black "+(w?"cursor-not-allowed":"hover:bg-gray-800"),disabled:w,children:v})})]}),x&&(0,ve.jsx)("div",{className:"mt-8 text-center",children:(0,ve.jsx)("button",{onClick:()=>{if(b){const e=URL.createObjectURL(b),t=document.createElement("a");t.href=e,t.download="CVParkingPermit.pdf",t.click(),URL.revokeObjectURL(e)}},className:"px-6 py-3 text-white bg-black rounded-md hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black",children:"Download PDF"})})]})};function wE(){return Object.assign({},nt())}function BE(e,t){const A=t instanceof Date?ct(t,0):new t(0);return A.setFullYear(e.getFullYear(),e.getMonth(),e.getDate()),A.setHours(e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()),A}class xE{subPriority=0;validate(e,t){return!0}}class CE extends xE{constructor(e,t,A,r,n){super(),this.value=e,this.validateValue=t,this.setValue=A,this.priority=r,n&&(this.subPriority=n)}validate(e,t){return this.validateValue(e,this.value,t)}set(e,t,A){return this.setValue(e,t,this.value,A)}}class EE extends xE{priority=10;subPriority=-1;set(e,t){return t.timestampIsSet?e:ct(e,BE(e,Date))}}class NE{run(e,t,A,r){const n=this.parse(e,t,A,r);return n?{setter:new CE(n.value,this.validate,this.set,this.priority,this.subPriority),rest:n.rest}:null}validate(e,t,A){return!0}}const DE=/^(1[0-2]|0?\d)/,QE=/^(3[0-1]|[0-2]?\d)/,PE=/^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,IE=/^(5[0-3]|[0-4]?\d)/,LE=/^(2[0-3]|[0-1]?\d)/,kE=/^(2[0-4]|[0-1]?\d)/,GE=/^(1[0-1]|0?\d)/,FE=/^(1[0-2]|0?\d)/,SE=/^[0-5]?\d/,WE=/^[0-5]?\d/,ZE=/^\d/,XE=/^\d{1,2}/,ME=/^\d{1,3}/,zE=/^\d{1,4}/,RE=/^-?\d+/,jE=/^-?\d/,TE=/^-?\d{1,2}/,UE=/^-?\d{1,3}/,VE=/^-?\d{1,4}/,OE=/^([+-])(\d{2})(\d{2})?|Z/,YE=/^([+-])(\d{2})(\d{2})|Z/,HE=/^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,KE=/^([+-])(\d{2}):(\d{2})|Z/,qE=/^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/;function JE(e,t){return e?{value:t(e.value),rest:e.rest}:e}function _E(e,t){const A=t.match(e);return A?{value:parseInt(A[0],10),rest:t.slice(A[0].length)}:null}function $E(e,t){const A=t.match(e);if(!A)return null;if("Z"===A[0])return{value:0,rest:t.slice(1)};return{value:("+"===A[1]?1:-1)*(36e5*(A[2]?parseInt(A[2],10):0)+6e4*(A[3]?parseInt(A[3],10):0)+1e3*(A[5]?parseInt(A[5],10):0)),rest:t.slice(A[0].length)}}function eN(e){return _E(RE,e)}function tN(e,t){switch(e){case 1:return _E(ZE,t);case 2:return _E(XE,t);case 3:return _E(ME,t);case 4:return _E(zE,t);default:return _E(new RegExp("^\\d{1,"+e+"}"),t)}}function AN(e,t){switch(e){case 1:return _E(jE,t);case 2:return _E(TE,t);case 3:return _E(UE,t);case 4:return _E(VE,t);default:return _E(new RegExp("^-?\\d{1,"+e+"}"),t)}}function rN(e){switch(e){case"morning":return 4;case"evening":return 17;case"pm":case"noon":case"afternoon":return 12;default:return 0}}function nN(e,t){const A=t>0,r=A?t:1-t;let n;if(r<=50)n=e||100;else{const t=r+50;n=e+100*Math.trunc(t/100)-(e>=t%100?100:0)}return A?n:1-n}function sN(e){return e%400===0||e%4===0&&e%100!==0}function iN(e,t,A){const r=ot(e),n=wt(r,A)-t;return r.setDate(r.getDate()-7*n),r}function oN(e,t){const A=ot(e),r=mt(A)-t;return A.setDate(A.getDate()-7*r),A}const aN=[31,28,31,30,31,30,31,31,30,31,30,31],lN=[31,29,31,30,31,30,31,31,30,31,30,31];function uN(e,t,A){const r=nt(),n=A?.weekStartsOn??A?.locale?.options?.weekStartsOn??r.weekStartsOn??r.locale?.options?.weekStartsOn??0,s=ot(e),i=s.getDay(),o=7-n;return _t(s,t<0||t>6?t-(i+o)%7:((t%7+7)%7+o)%7-(i+o)%7)}function cN(e){let t=ot(e).getDay();return 0===t&&(t=7),t}function dN(e,t){const A=ot(e);return _t(A,t-cN(A))}const fN={G:new class extends NE{priority=140;parse(e,t,A){switch(t){case"G":case"GG":case"GGG":return A.era(e,{width:"abbreviated"})||A.era(e,{width:"narrow"});case"GGGGG":return A.era(e,{width:"narrow"});default:return A.era(e,{width:"wide"})||A.era(e,{width:"abbreviated"})||A.era(e,{width:"narrow"})}}set(e,t,A){return t.era=A,e.setFullYear(A,0,1),e.setHours(0,0,0,0),e}incompatibleTokens=["R","u","t","T"]},y:new class extends NE{priority=130;incompatibleTokens=["Y","R","u","w","I","i","e","c","t","T"];parse(e,t,A){const r=e=>({year:e,isTwoDigitYear:"yy"===t});switch(t){case"y":return JE(tN(4,e),r);case"yo":return JE(A.ordinalNumber(e,{unit:"year"}),r);default:return JE(tN(t.length,e),r)}}validate(e,t){return t.isTwoDigitYear||t.year>0}set(e,t,A){const r=e.getFullYear();if(A.isTwoDigitYear){const t=nN(A.year,r);return e.setFullYear(t,0,1),e.setHours(0,0,0,0),e}const n="era"in t&&1!==t.era?1-A.year:A.year;return e.setFullYear(n,0,1),e.setHours(0,0,0,0),e}},Y:new class extends NE{priority=130;parse(e,t,A){const r=e=>({year:e,isTwoDigitYear:"YY"===t});switch(t){case"Y":return JE(tN(4,e),r);case"Yo":return JE(A.ordinalNumber(e,{unit:"year"}),r);default:return JE(tN(t.length,e),r)}}validate(e,t){return t.isTwoDigitYear||t.year>0}set(e,t,A,r){const n=vt(e,r);if(A.isTwoDigitYear){const t=nN(A.year,n);return e.setFullYear(t,0,r.firstWeekContainsDate),e.setHours(0,0,0,0),ht(e,r)}const s="era"in t&&1!==t.era?1-A.year:A.year;return e.setFullYear(s,0,r.firstWeekContainsDate),e.setHours(0,0,0,0),ht(e,r)}incompatibleTokens=["y","R","u","Q","q","M","L","I","d","D","i","t","T"]},R:new class extends NE{priority=130;parse(e,t){return AN("R"===t?4:t.length,e)}set(e,t,A){const r=ct(e,0);return r.setFullYear(A,0,4),r.setHours(0,0,0,0),gt(r)}incompatibleTokens=["G","y","Y","u","Q","q","M","L","w","d","D","e","c","t","T"]},u:new class extends NE{priority=130;parse(e,t){return AN("u"===t?4:t.length,e)}set(e,t,A){return e.setFullYear(A,0,1),e.setHours(0,0,0,0),e}incompatibleTokens=["G","y","Y","R","w","I","i","e","c","t","T"]},Q:new class extends NE{priority=120;parse(e,t,A){switch(t){case"Q":case"QQ":return tN(t.length,e);case"Qo":return A.ordinalNumber(e,{unit:"quarter"});case"QQQ":return A.quarter(e,{width:"abbreviated",context:"formatting"})||A.quarter(e,{width:"narrow",context:"formatting"});case"QQQQQ":return A.quarter(e,{width:"narrow",context:"formatting"});default:return A.quarter(e,{width:"wide",context:"formatting"})||A.quarter(e,{width:"abbreviated",context:"formatting"})||A.quarter(e,{width:"narrow",context:"formatting"})}}validate(e,t){return t>=1&&t<=4}set(e,t,A){return e.setMonth(3*(A-1),1),e.setHours(0,0,0,0),e}incompatibleTokens=["Y","R","q","M","L","w","I","d","D","i","e","c","t","T"]},q:new class extends NE{priority=120;parse(e,t,A){switch(t){case"q":case"qq":return tN(t.length,e);case"qo":return A.ordinalNumber(e,{unit:"quarter"});case"qqq":return A.quarter(e,{width:"abbreviated",context:"standalone"})||A.quarter(e,{width:"narrow",context:"standalone"});case"qqqqq":return A.quarter(e,{width:"narrow",context:"standalone"});default:return A.quarter(e,{width:"wide",context:"standalone"})||A.quarter(e,{width:"abbreviated",context:"standalone"})||A.quarter(e,{width:"narrow",context:"standalone"})}}validate(e,t){return t>=1&&t<=4}set(e,t,A){return e.setMonth(3*(A-1),1),e.setHours(0,0,0,0),e}incompatibleTokens=["Y","R","Q","M","L","w","I","d","D","i","e","c","t","T"]},M:new class extends NE{incompatibleTokens=["Y","R","q","Q","L","w","I","D","i","e","c","t","T"];priority=110;parse(e,t,A){const r=e=>e-1;switch(t){case"M":return JE(_E(DE,e),r);case"MM":return JE(tN(2,e),r);case"Mo":return JE(A.ordinalNumber(e,{unit:"month"}),r);case"MMM":return A.month(e,{width:"abbreviated",context:"formatting"})||A.month(e,{width:"narrow",context:"formatting"});case"MMMMM":return A.month(e,{width:"narrow",context:"formatting"});default:return A.month(e,{width:"wide",context:"formatting"})||A.month(e,{width:"abbreviated",context:"formatting"})||A.month(e,{width:"narrow",context:"formatting"})}}validate(e,t){return t>=0&&t<=11}set(e,t,A){return e.setMonth(A,1),e.setHours(0,0,0,0),e}},L:new class extends NE{priority=110;parse(e,t,A){const r=e=>e-1;switch(t){case"L":return JE(_E(DE,e),r);case"LL":return JE(tN(2,e),r);case"Lo":return JE(A.ordinalNumber(e,{unit:"month"}),r);case"LLL":return A.month(e,{width:"abbreviated",context:"standalone"})||A.month(e,{width:"narrow",context:"standalone"});case"LLLLL":return A.month(e,{width:"narrow",context:"standalone"});default:return A.month(e,{width:"wide",context:"standalone"})||A.month(e,{width:"abbreviated",context:"standalone"})||A.month(e,{width:"narrow",context:"standalone"})}}validate(e,t){return t>=0&&t<=11}set(e,t,A){return e.setMonth(A,1),e.setHours(0,0,0,0),e}incompatibleTokens=["Y","R","q","Q","M","w","I","D","i","e","c","t","T"]},w:new class extends NE{priority=100;parse(e,t,A){switch(t){case"w":return _E(IE,e);case"wo":return A.ordinalNumber(e,{unit:"week"});default:return tN(t.length,e)}}validate(e,t){return t>=1&&t<=53}set(e,t,A,r){return ht(iN(e,A,r),r)}incompatibleTokens=["y","R","u","q","Q","M","L","I","d","D","i","t","T"]},I:new class extends NE{priority=100;parse(e,t,A){switch(t){case"I":return _E(IE,e);case"Io":return A.ordinalNumber(e,{unit:"week"});default:return tN(t.length,e)}}validate(e,t){return t>=1&&t<=53}set(e,t,A){return gt(oN(e,A))}incompatibleTokens=["y","Y","u","q","Q","M","L","w","d","D","e","c","t","T"]},d:new class extends NE{priority=90;subPriority=1;parse(e,t,A){switch(t){case"d":return _E(QE,e);case"do":return A.ordinalNumber(e,{unit:"date"});default:return tN(t.length,e)}}validate(e,t){const A=sN(e.getFullYear()),r=e.getMonth();return A?t>=1&&t<=lN[r]:t>=1&&t<=aN[r]}set(e,t,A){return e.setDate(A),e.setHours(0,0,0,0),e}incompatibleTokens=["Y","R","q","Q","w","I","D","i","e","c","t","T"]},D:new class extends NE{priority=90;subpriority=1;parse(e,t,A){switch(t){case"D":case"DD":return _E(PE,e);case"Do":return A.ordinalNumber(e,{unit:"date"});default:return tN(t.length,e)}}validate(e,t){return sN(e.getFullYear())?t>=1&&t<=366:t>=1&&t<=365}set(e,t,A){return e.setMonth(0,A),e.setHours(0,0,0,0),e}incompatibleTokens=["Y","R","q","Q","M","L","w","I","d","E","i","e","c","t","T"]},E:new class extends NE{priority=90;parse(e,t,A){switch(t){case"E":case"EE":case"EEE":return A.day(e,{width:"abbreviated",context:"formatting"})||A.day(e,{width:"short",context:"formatting"})||A.day(e,{width:"narrow",context:"formatting"});case"EEEEE":return A.day(e,{width:"narrow",context:"formatting"});case"EEEEEE":return A.day(e,{width:"short",context:"formatting"})||A.day(e,{width:"narrow",context:"formatting"});default:return A.day(e,{width:"wide",context:"formatting"})||A.day(e,{width:"abbreviated",context:"formatting"})||A.day(e,{width:"short",context:"formatting"})||A.day(e,{width:"narrow",context:"formatting"})}}validate(e,t){return t>=0&&t<=6}set(e,t,A,r){return(e=uN(e,A,r)).setHours(0,0,0,0),e}incompatibleTokens=["D","i","e","c","t","T"]},e:new class extends NE{priority=90;parse(e,t,A,r){const n=e=>{const t=7*Math.floor((e-1)/7);return(e+r.weekStartsOn+6)%7+t};switch(t){case"e":case"ee":return JE(tN(t.length,e),n);case"eo":return JE(A.ordinalNumber(e,{unit:"day"}),n);case"eee":return A.day(e,{width:"abbreviated",context:"formatting"})||A.day(e,{width:"short",context:"formatting"})||A.day(e,{width:"narrow",context:"formatting"});case"eeeee":return A.day(e,{width:"narrow",context:"formatting"});case"eeeeee":return A.day(e,{width:"short",context:"formatting"})||A.day(e,{width:"narrow",context:"formatting"});default:return A.day(e,{width:"wide",context:"formatting"})||A.day(e,{width:"abbreviated",context:"formatting"})||A.day(e,{width:"short",context:"formatting"})||A.day(e,{width:"narrow",context:"formatting"})}}validate(e,t){return t>=0&&t<=6}set(e,t,A,r){return(e=uN(e,A,r)).setHours(0,0,0,0),e}incompatibleTokens=["y","R","u","q","Q","M","L","I","d","D","E","i","c","t","T"]},c:new class extends NE{priority=90;parse(e,t,A,r){const n=e=>{const t=7*Math.floor((e-1)/7);return(e+r.weekStartsOn+6)%7+t};switch(t){case"c":case"cc":return JE(tN(t.length,e),n);case"co":return JE(A.ordinalNumber(e,{unit:"day"}),n);case"ccc":return A.day(e,{width:"abbreviated",context:"standalone"})||A.day(e,{width:"short",context:"standalone"})||A.day(e,{width:"narrow",context:"standalone"});case"ccccc":return A.day(e,{width:"narrow",context:"standalone"});case"cccccc":return A.day(e,{width:"short",context:"standalone"})||A.day(e,{width:"narrow",context:"standalone"});default:return A.day(e,{width:"wide",context:"standalone"})||A.day(e,{width:"abbreviated",context:"standalone"})||A.day(e,{width:"short",context:"standalone"})||A.day(e,{width:"narrow",context:"standalone"})}}validate(e,t){return t>=0&&t<=6}set(e,t,A,r){return(e=uN(e,A,r)).setHours(0,0,0,0),e}incompatibleTokens=["y","R","u","q","Q","M","L","I","d","D","E","i","e","t","T"]},i:new class extends NE{priority=90;parse(e,t,A){const r=e=>0===e?7:e;switch(t){case"i":case"ii":return tN(t.length,e);case"io":return A.ordinalNumber(e,{unit:"day"});case"iii":return JE(A.day(e,{width:"abbreviated",context:"formatting"})||A.day(e,{width:"short",context:"formatting"})||A.day(e,{width:"narrow",context:"formatting"}),r);case"iiiii":return JE(A.day(e,{width:"narrow",context:"formatting"}),r);case"iiiiii":return JE(A.day(e,{width:"short",context:"formatting"})||A.day(e,{width:"narrow",context:"formatting"}),r);default:return JE(A.day(e,{width:"wide",context:"formatting"})||A.day(e,{width:"abbreviated",context:"formatting"})||A.day(e,{width:"short",context:"formatting"})||A.day(e,{width:"narrow",context:"formatting"}),r)}}validate(e,t){return t>=1&&t<=7}set(e,t,A){return(e=dN(e,A)).setHours(0,0,0,0),e}incompatibleTokens=["y","Y","u","q","Q","M","L","w","d","D","E","e","c","t","T"]},a:new class extends NE{priority=80;parse(e,t,A){switch(t){case"a":case"aa":case"aaa":return A.dayPeriod(e,{width:"abbreviated",context:"formatting"})||A.dayPeriod(e,{width:"narrow",context:"formatting"});case"aaaaa":return A.dayPeriod(e,{width:"narrow",context:"formatting"});default:return A.dayPeriod(e,{width:"wide",context:"formatting"})||A.dayPeriod(e,{width:"abbreviated",context:"formatting"})||A.dayPeriod(e,{width:"narrow",context:"formatting"})}}set(e,t,A){return e.setHours(rN(A),0,0,0),e}incompatibleTokens=["b","B","H","k","t","T"]},b:new class extends NE{priority=80;parse(e,t,A){switch(t){case"b":case"bb":case"bbb":return A.dayPeriod(e,{width:"abbreviated",context:"formatting"})||A.dayPeriod(e,{width:"narrow",context:"formatting"});case"bbbbb":return A.dayPeriod(e,{width:"narrow",context:"formatting"});default:return A.dayPeriod(e,{width:"wide",context:"formatting"})||A.dayPeriod(e,{width:"abbreviated",context:"formatting"})||A.dayPeriod(e,{width:"narrow",context:"formatting"})}}set(e,t,A){return e.setHours(rN(A),0,0,0),e}incompatibleTokens=["a","B","H","k","t","T"]},B:new class extends NE{priority=80;parse(e,t,A){switch(t){case"B":case"BB":case"BBB":return A.dayPeriod(e,{width:"abbreviated",context:"formatting"})||A.dayPeriod(e,{width:"narrow",context:"formatting"});case"BBBBB":return A.dayPeriod(e,{width:"narrow",context:"formatting"});default:return A.dayPeriod(e,{width:"wide",context:"formatting"})||A.dayPeriod(e,{width:"abbreviated",context:"formatting"})||A.dayPeriod(e,{width:"narrow",context:"formatting"})}}set(e,t,A){return e.setHours(rN(A),0,0,0),e}incompatibleTokens=["a","b","t","T"]},h:new class extends NE{priority=70;parse(e,t,A){switch(t){case"h":return _E(FE,e);case"ho":return A.ordinalNumber(e,{unit:"hour"});default:return tN(t.length,e)}}validate(e,t){return t>=1&&t<=12}set(e,t,A){const r=e.getHours()>=12;return r&&A<12?e.setHours(A+12,0,0,0):r||12!==A?e.setHours(A,0,0,0):e.setHours(0,0,0,0),e}incompatibleTokens=["H","K","k","t","T"]},H:new class extends NE{priority=70;parse(e,t,A){switch(t){case"H":return _E(LE,e);case"Ho":return A.ordinalNumber(e,{unit:"hour"});default:return tN(t.length,e)}}validate(e,t){return t>=0&&t<=23}set(e,t,A){return e.setHours(A,0,0,0),e}incompatibleTokens=["a","b","h","K","k","t","T"]},K:new class extends NE{priority=70;parse(e,t,A){switch(t){case"K":return _E(GE,e);case"Ko":return A.ordinalNumber(e,{unit:"hour"});default:return tN(t.length,e)}}validate(e,t){return t>=0&&t<=11}set(e,t,A){return e.getHours()>=12&&A<12?e.setHours(A+12,0,0,0):e.setHours(A,0,0,0),e}incompatibleTokens=["h","H","k","t","T"]},k:new class extends NE{priority=70;parse(e,t,A){switch(t){case"k":return _E(kE,e);case"ko":return A.ordinalNumber(e,{unit:"hour"});default:return tN(t.length,e)}}validate(e,t){return t>=1&&t<=24}set(e,t,A){const r=A<=24?A%24:A;return e.setHours(r,0,0,0),e}incompatibleTokens=["a","b","h","H","K","t","T"]},m:new class extends NE{priority=60;parse(e,t,A){switch(t){case"m":return _E(SE,e);case"mo":return A.ordinalNumber(e,{unit:"minute"});default:return tN(t.length,e)}}validate(e,t){return t>=0&&t<=59}set(e,t,A){return e.setMinutes(A,0,0),e}incompatibleTokens=["t","T"]},s:new class extends NE{priority=50;parse(e,t,A){switch(t){case"s":return _E(WE,e);case"so":return A.ordinalNumber(e,{unit:"second"});default:return tN(t.length,e)}}validate(e,t){return t>=0&&t<=59}set(e,t,A){return e.setSeconds(A,0),e}incompatibleTokens=["t","T"]},S:new class extends NE{priority=30;parse(e,t){return JE(tN(t.length,e),(e=>Math.trunc(e*Math.pow(10,3-t.length))))}set(e,t,A){return e.setMilliseconds(A),e}incompatibleTokens=["t","T"]},X:new class extends NE{priority=10;parse(e,t){switch(t){case"X":return $E(OE,e);case"XX":return $E(YE,e);case"XXXX":return $E(HE,e);case"XXXXX":return $E(qE,e);default:return $E(KE,e)}}set(e,t,A){return t.timestampIsSet?e:ct(e,e.getTime()-lt(e)-A)}incompatibleTokens=["t","T","x"]},x:new class extends NE{priority=10;parse(e,t){switch(t){case"x":return $E(OE,e);case"xx":return $E(YE,e);case"xxxx":return $E(HE,e);case"xxxxx":return $E(qE,e);default:return $E(KE,e)}}set(e,t,A){return t.timestampIsSet?e:ct(e,e.getTime()-lt(e)-A)}incompatibleTokens=["t","T","X"]},t:new class extends NE{priority=40;parse(e){return eN(e)}set(e,t,A){return[ct(e,1e3*A),{timestampIsSet:!0}]}incompatibleTokens="*"},T:new class extends NE{priority=20;parse(e){return eN(e)}set(e,t,A){return[ct(e,A),{timestampIsSet:!0}]}incompatibleTokens="*"}},hN=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,gN=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,pN=/^'([^]*?)'?$/,bN=/''/g,mN=/\S/,vN=/[a-zA-Z]/;function yN(e,t,A,r){const n=wE(),s=r?.locale??n.locale??At,i=r?.firstWeekContainsDate??r?.locale?.options?.firstWeekContainsDate??n.firstWeekContainsDate??n.locale?.options?.firstWeekContainsDate??1,o=r?.weekStartsOn??r?.locale?.options?.weekStartsOn??n.weekStartsOn??n.locale?.options?.weekStartsOn??0;if(""===t)return""===e?ot(A):ct(A,NaN);const a={firstWeekContainsDate:i,weekStartsOn:o,locale:s},l=[new EE],u=t.match(gN).map((e=>{const t=e[0];if(t in Wt){return(0,Wt[t])(e,s.formatLong)}return e})).join("").match(hN),c=[];for(let g of u){!r?.useAdditionalWeekYearTokens&&Rt(g)&&jt(g,t,e),!r?.useAdditionalDayOfYearTokens&&zt(g)&&jt(g,t,e);const n=g[0],i=fN[n];if(i){const{incompatibleTokens:t}=i;if(Array.isArray(t)){const e=c.find((e=>t.includes(e.token)||e.token===n));if(e)throw new RangeError(`The format string mustn't contain \`${e.fullToken}\` and \`${g}\` at the same time`)}else if("*"===i.incompatibleTokens&&c.length>0)throw new RangeError(`The format string mustn't contain \`${g}\` and any other token at the same time`);c.push({token:n,fullToken:g});const r=i.run(e,g,s.match,a);if(!r)return ct(A,NaN);l.push(r.setter),e=r.rest}else{if(n.match(vN))throw new RangeError("Format string contains an unescaped latin alphabet character `"+n+"`");if("''"===g?g="'":"'"===n&&(g=g.match(pN)[1].replace(bN,"'")),0!==e.indexOf(g))return ct(A,NaN);e=e.slice(g.length)}}if(e.length>0&&mN.test(e))return ct(A,NaN);const d=l.map((e=>e.priority)).sort(((e,t)=>t-e)).filter(((e,t,A)=>A.indexOf(e)===t)).map((e=>l.filter((t=>t.priority===e)).sort(((e,t)=>t.subPriority-e.subPriority)))).map((e=>e[0]));let f=ot(A);if(isNaN(f.getTime()))return ct(A,NaN);const h={};for(const g of d){if(!g.validate(f,a))return ct(A,NaN);const e=g.set(f,h,a);Array.isArray(e)?(f=e[0],Object.assign(h,e[1])):f=e}return ct(A,f)}const wN={schemas:[{"Plate Number":{position:{x:124.71,y:98.64},width:149.52,height:25,verticalAlignment:"top",fontSize:21,lineHeight:1,characterSpacing:0,fontColor:"#000000",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},"Plate State":{position:{x:226.06,y:302.52},width:149.52,height:13,verticalAlignment:"top",fontSize:11,lineHeight:1,characterSpacing:0,fontColor:"#000000",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},Year:{position:{x:224.11,y:292.18},width:149.52,height:13,verticalAlignment:"top",fontSize:11,lineHeight:1,characterSpacing:0,fontColor:"#000000",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},Make:{position:{x:69.18,y:292.18},width:149.52,height:13,verticalAlignment:"top",fontSize:11,lineHeight:1,characterSpacing:0,fontColor:"#000000",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},"Plate Number 2":{position:{x:242.66,y:312.75},width:149.52,height:11,verticalAlignment:"top",fontSize:11,lineHeight:1,characterSpacing:0,fontColor:"#000000",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},Model:{position:{x:71.46,y:302.52},width:149.52,height:13,verticalAlignment:"top",fontSize:11,lineHeight:1,characterSpacing:0,fontColor:"#000000",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},Color:{position:{x:70.95,y:312.85},width:149.52,height:13,verticalAlignment:"top",fontSize:11,lineHeight:1,characterSpacing:0,fontColor:"#000000",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},"Start Time":{position:{x:74.51,y:340.2},width:149.52,height:25,verticalAlignment:"top",fontSize:18,lineHeight:1,characterSpacing:0,fontColor:"#000000",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},"End Time":{position:{x:195.25,y:340.19},width:149.52,height:25,verticalAlignment:"top",fontSize:18,lineHeight:1,characterSpacing:0,fontColor:"#000000",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},"Start Date":{position:{x:74.6,y:352.21},width:149.52,height:13,verticalAlignment:"top",fontSize:12,lineHeight:1,characterSpacing:0,fontColor:"#000000",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},"End Date":{position:{x:195.32,y:352.21},width:149.52,height:13,verticalAlignment:"top",fontSize:12,lineHeight:1,characterSpacing:0,fontColor:"#000000",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"}}],basePdf:"data:application/pdf;base64,"},BN=()=>{const[e,t]=(0,n.useState)(""),[A,r]=(0,n.useState)(""),[s,i]=(0,n.useState)(""),[o,a]=(0,n.useState)(""),[l,u]=(0,n.useState)(""),[c,d]=(0,n.useState)(""),[f,h]=(0,n.useState)(""),[g,p]=(0,n.useState)(""),[b,m]=(0,n.useState)(""),[v,y]=(0,n.useState)(""),[w,B]=(0,n.useState)(null),[x,C]=(0,n.useState)("Generate Parking Pass"),[E,N]=(0,n.useState)(!1),[D,Q]=(0,n.useState)(!1),P=e=>{const t=yN(e,"HH:mm",new Date);return Ut(t)?qt(t,"hh:mm a"):e};return(0,ve.jsxs)("div",{className:"flex flex-col items-center justify-center flex-grow p-6 bg-gray-100",children:[(0,ve.jsx)("h2",{className:"mb-8 text-3xl font-bold text-center text-black",children:"Canvas Guest Parking Pass"}),(0,ve.jsxs)("form",{onSubmit:async t=>{t.preventDefault(),N(!0),C("Generating...");const r=P(b),n=P(v),i=qt(yN(f,"yyyy-MM-dd",new Date),"MMM dd, yyyy"),a=qt(yN(g,"yyyy-MM-dd",new Date),"MMM dd, yyyy"),u=[{"Plate Number":e,"Plate Number 2":e,"Plate State":A,Year:s,Make:l,Model:c,Color:o,"Start Date":i,"End Date":a,"Start Time":r,"End Time":n}];try{const e=await mE({template:wN,inputs:u}),t=new Blob([e],{type:"application/pdf"});B(t),C("Generated!"),Q(!0),setTimeout((()=>{C("Generate Parking Pass"),N(!1),Q(!1),B(null)}),5e3)}catch(ar){console.error("Error generating PDF:",ar),C("Generate Parking Pass"),N(!1)}},className:"w-full max-w-xl p-6 space-y-6 bg-white rounded-lg shadow-lg",children:[(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-black",children:"License Plate"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter license plate",value:e,onChange:e=>t(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-black",children:"License Plate State"}),(0,ve.jsxs)("select",{className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",value:A,onChange:e=>r(e.target.value),required:!0,children:[(0,ve.jsx)("option",{value:"",children:"Select a state"}),["AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","DC","AS","GU","MP","PR","VI","UM"].map((e=>(0,ve.jsx)("option",{value:e,children:e},e)))]})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-black",children:"Vehicle Year"}),(0,ve.jsxs)("select",{className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",value:s,onChange:e=>i(e.target.value),required:!0,children:[(0,ve.jsx)("option",{value:"",children:"Select a year"}),Array.from({length:76},((e,t)=>2025-t)).map((e=>(0,ve.jsx)("option",{value:e,children:e},e)))]})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-black",children:"Vehicle Color"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter vehicle color",value:o,onChange:e=>a(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-black",children:"Vehicle Make"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter vehicle make",value:l,onChange:e=>u(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-black",children:"Vehicle Model"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter vehicle model",value:c,onChange:e=>d(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-black",children:"Start Time"}),(0,ve.jsx)("input",{type:"time",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",value:b,onChange:e=>m(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-black",children:"End Time"}),(0,ve.jsx)("input",{type:"time",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",value:v,onChange:e=>y(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-black",children:"Start Date"}),(0,ve.jsx)("input",{type:"date",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",value:f,onChange:e=>h(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-black",children:"End Date"}),(0,ve.jsx)("input",{type:"date",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",value:g,onChange:e=>p(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{className:"flex items-center",children:[(0,ve.jsx)("button",{type:"button",className:"px-4 py-2 text-white bg-black rounded-md hover:bg-black focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black",onClick:()=>{const e=new Date,t=_t(e,1),A=qt(e,"yyyy-MM-dd"),r=qt(t,"yyyy-MM-dd"),n=qt(e,"HH:mm"),s=qt(_t(e,0),"HH:mm");h(A),p(r),m(n),y(s)},children:"Set End Date to 1 Day from Now"}),(0,ve.jsx)("p",{className:"ml-4 text-sm text-black",children:g?`Selected: ${qt(yN(g,"yyyy-MM-dd",new Date),"MMM dd, yyyy")}`:"Format: MMM dd, yyyy"})]}),(0,ve.jsx)("div",{children:(0,ve.jsx)("button",{type:"submit",className:"w-full py-3 text-white bg-black rounded-md hover:bg-black focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black",children:x})}),D&&(0,ve.jsx)("div",{className:"mt-8 text-center",children:(0,ve.jsx)("button",{onClick:()=>{if(w){const e=URL.createObjectURL(w),t=document.createElement("a");t.href=e,t.download="CanvasParkingPermit.pdf",t.click(),URL.revokeObjectURL(e)}},className:"px-6 py-3 text-white bg-black rounded-md hover:bg-black focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black",children:"Download PDF"})})]})]})},xN=()=>(0,ve.jsxs)("div",{className:"relative flex flex-col items-center justify-center min-h-screen p-8 bg-gradient-to-r from-gray-600 to-gray-900",children:[(0,ve.jsx)("div",{className:"absolute inset-0 bg-cover opacity-10 bg-[url('https://source.unsplash.com/random/1920x1080/?parking')]"}),(0,ve.jsx)("h1",{className:"relative z-10 mb-6 text-4xl font-bold text-white md:text-6xl",children:"About Guest Parking Permit Generator"}),(0,ve.jsxs)("div",{className:"relative z-10 max-w-4xl p-8 text-white bg-black shadow-xl bg-opacity-70 rounded-xl",children:[(0,ve.jsx)("p",{className:"mb-4 text-lg leading-8 md:text-xl",children:"This project is a guest parking permit generator for off-campus housing that uses physical, printed, guest parking temporary permits. It allows you to generate parking passes independently from the official housing system, giving you flexibility and convenience."}),(0,ve.jsx)("h2",{className:"mt-6 mb-4 text-2xl font-bold text-teal-300",children:"How to Use:"}),(0,ve.jsx)("p",{className:"mb-4 text-lg md:text-xl",children:"Go to the parking permit tab you are looking to create, fill out the form, download the PDF, and done!"}),(0,ve.jsx)("h2",{className:"mt-6 mb-4 text-2xl font-bold text-teal-300",children:"Why Use This Tool?"}),(0,ve.jsx)("p",{className:"mb-4 text-lg md:text-xl",children:"Many off-campus housing systems restrict the number of guest parking permits or impose strict monitoring policies. With this generator:"}),(0,ve.jsxs)("ul",{className:"pl-5 mt-2 space-y-2 text-lg list-disc md:text-xl",children:[(0,ve.jsx)("li",{children:"You bypass the limits imposed by some housing systems (e.g., 8 guest passes per month)."}),(0,ve.jsx)("li",{children:"No notifications are sent to management when you generate a guest pass, so you don\u2019t need to worry about being penalized for system abuse."}),(0,ve.jsx)("li",{children:"You can adjust the expiration date to suit your needs, allowing for more flexibility when managing guest parking."})]}),(0,ve.jsx)("h2",{className:"mt-6 mb-4 text-2xl font-bold text-teal-300",children:"Tips for Use:"}),(0,ve.jsxs)("ul",{className:"pl-5 space-y-2 text-lg list-disc md:text-xl",children:[(0,ve.jsx)("li",{children:"Do not leave a parking permit that has a multi-day expiration date as it may draw unwanted attention. Keep it to a few hours or a day at most."}),(0,ve.jsx)("li",{children:"You can create parking passes that expire on a future date if you need the pass in advance."})]}),(0,ve.jsxs)("p",{className:"mt-6 text-lg md:text-xl",children:[(0,ve.jsx)("strong",{children:"Disclaimer:"})," This tool is designed for convenience, but please be mindful of any local parking regulations or rules imposed by your housing management. Use it responsibly to avoid penalties or issues with your housing provider."]})]})]});function CN(e){if("undefined"===typeof Proxy)return e;const t=new Map;return new Proxy((function(){return e(...arguments)}),{get:(A,r)=>"create"===r?e:(t.has(r)||t.set(r,e(r)),t.get(r))})}function EN(e){return null!==e&&"object"===typeof e&&"function"===typeof e.start}const NN=e=>Array.isArray(e);function DN(e,t){if(!Array.isArray(t))return!1;const A=t.length;if(A!==e.length)return!1;for(let r=0;r<A;r++)if(t[r]!==e[r])return!1;return!0}function QN(e){return"string"===typeof e||Array.isArray(e)}function PN(e){const t=[{},{}];return null===e||void 0===e||e.values.forEach(((e,A)=>{t[0][A]=e.get(),t[1][A]=e.getVelocity()})),t}function IN(e,t,A,r){if("function"===typeof t){const[n,s]=PN(r);t=t(void 0!==A?A:e.custom,n,s)}if("string"===typeof t&&(t=e.variants&&e.variants[t]),"function"===typeof t){const[n,s]=PN(r);t=t(void 0!==A?A:e.custom,n,s)}return t}function LN(e,t,A){const r=e.getProps();return IN(r,t,void 0!==A?A:r.custom,e)}const kN=["animate","whileInView","whileFocus","whileHover","whileTap","whileDrag","exit"],GN=["initial",...kN],FN=["transformPerspective","x","y","z","translateX","translateY","translateZ","scale","scaleX","scaleY","rotate","rotateX","rotateY","rotateZ","skew","skewX","skewY"],SN=new Set(FN),WN=e=>1e3*e,ZN=e=>e/1e3,XN={type:"spring",stiffness:500,damping:25,restSpeed:10},MN={type:"keyframes",duration:.8},zN={type:"keyframes",ease:[.25,.1,.35,1],duration:.3},RN=(e,t)=>{let{keyframes:A}=t;return A.length>2?MN:SN.has(e)?e.startsWith("scale")?{type:"spring",stiffness:550,damping:0===A[1]?2*Math.sqrt(550):30,restSpeed:10}:XN:zN};function jN(e,t){return e[t]||e.default||e}const TN=!1,UN=!1,VN=!1,ON=e=>null!==e;function YN(e,t,A){let{repeat:r,repeatType:n="loop"}=t;const s=e.filter(ON),i=r&&"loop"!==n&&r%2===1?0:s.length-1;return i&&void 0!==A?A:s[i]}const HN=["read","resolveKeyframes","update","preRender","render","postRender"];function KN(e,t){let A=!1,r=!0;const n={delta:0,timestamp:0,isProcessing:!1},s=()=>A=!0,i=HN.reduce(((e,t)=>(e[t]=function(e){let t=new Set,A=new Set,r=!1,n=!1;const s=new WeakSet;let i={delta:0,timestamp:0,isProcessing:!1};function o(t){s.has(t)&&(a.schedule(t),e()),t(i)}const a={schedule:function(e){const n=arguments.length>2&&void 0!==arguments[2]&&arguments[2]&&r?t:A;return arguments.length>1&&void 0!==arguments[1]&&arguments[1]&&s.add(e),n.has(e)||n.add(e),e},cancel:e=>{A.delete(e),s.delete(e)},process:e=>{i=e,r?n=!0:(r=!0,[t,A]=[A,t],A.clear(),t.forEach(o),r=!1,n&&(n=!1,a.process(e)))}};return a}(s),e)),{}),{read:o,resolveKeyframes:a,update:l,preRender:u,render:c,postRender:d}=i,f=()=>{const s=UN?n.timestamp:performance.now();A=!1,n.delta=r?1e3/60:Math.max(Math.min(s-n.timestamp,40),1),n.timestamp=s,n.isProcessing=!0,o.process(n),a.process(n),l.process(n),u.process(n),c.process(n),d.process(n),n.isProcessing=!1,A&&t&&(r=!1,e(f))},h=HN.reduce(((t,s)=>{const o=i[s];return t[s]=function(t){let s=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return A||(A=!0,r=!0,n.isProcessing||e(f)),o.schedule(t,s,i)},t}),{});return{schedule:h,cancel:e=>{for(let t=0;t<HN.length;t++)i[HN[t]].cancel(e)},state:n,steps:i}}const{schedule:qN,cancel:JN,state:_N,steps:$N}=KN("undefined"!==typeof requestAnimationFrame?requestAnimationFrame:Qe,!0),eD=e=>/^0[^.\s]+$/u.test(e);const tD=e=>/^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(e),AD=e=>t=>"string"===typeof t&&t.startsWith(e),rD=AD("--"),nD=AD("var(--"),sD=e=>!!nD(e)&&iD.test(e.split("/*")[0].trim()),iD=/var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu,oD=/^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u;function aD(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;Ie(A<=4,`Max CSS variable fallback depth detected in property "${e}". This may indicate a circular fallback dependency.`);const[r,n]=function(e){const t=oD.exec(e);if(!t)return[,];const[,A,r,n]=t;return[`--${null!==A&&void 0!==A?A:r}`,n]}(e);if(!r)return;const s=window.getComputedStyle(t).getPropertyValue(r);if(s){const e=s.trim();return tD(e)?parseFloat(e):e}return sD(n)?aD(n,t,A+1):n}const lD=(e,t,A)=>A>t?t:A<e?e:A,uD={test:e=>"number"===typeof e,parse:parseFloat,transform:e=>e},cD={...uD,transform:e=>lD(0,1,e)},dD={...uD,default:1},fD=e=>Math.round(1e5*e)/1e5,hD=/-?(?:\d+(?:\.\d+)?|\.\d+)/gu,gD=/(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu,pD=/^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu;function bD(e){return"string"===typeof e}const mD=e=>({test:t=>bD(t)&&t.endsWith(e)&&1===t.split(" ").length,parse:parseFloat,transform:t=>`${t}${e}`}),vD=mD("deg"),yD=mD("%"),wD=mD("px"),BD=mD("vh"),xD=mD("vw"),CD={...yD,parse:e=>yD.parse(e)/100,transform:e=>yD.transform(100*e)},ED=new Set(["width","height","top","left","right","bottom","x","y","translateX","translateY"]),ND=e=>e===uD||e===wD,DD=(e,t)=>parseFloat(e.split(", ")[t]),QD=(e,t)=>(A,r)=>{let{transform:n}=r;if("none"===n||!n)return 0;const s=n.match(/^matrix3d\((.+)\)$/u);if(s)return DD(s[1],t);{const t=n.match(/^matrix\((.+)\)$/u);return t?DD(t[1],e):0}},PD=new Set(["x","y","z"]),ID=FN.filter((e=>!PD.has(e)));const LD={width:(e,t)=>{let{x:A}=e,{paddingLeft:r="0",paddingRight:n="0"}=t;return A.max-A.min-parseFloat(r)-parseFloat(n)},height:(e,t)=>{let{y:A}=e,{paddingTop:r="0",paddingBottom:n="0"}=t;return A.max-A.min-parseFloat(r)-parseFloat(n)},top:(e,t)=>{let{top:A}=t;return parseFloat(A)},left:(e,t)=>{let{left:A}=t;return parseFloat(A)},bottom:(e,t)=>{let{y:A}=e,{top:r}=t;return parseFloat(r)+(A.max-A.min)},right:(e,t)=>{let{x:A}=e,{left:r}=t;return parseFloat(r)+(A.max-A.min)},x:QD(4,13),y:QD(5,14)};LD.translateX=LD.x,LD.translateY=LD.y;const kD=e=>t=>t.test(e),GD=[uD,wD,yD,vD,xD,BD,{test:e=>"auto"===e,parse:e=>e}],FD=e=>GD.find(kD(e)),SD=new Set;let WD=!1,ZD=!1;function XD(){if(ZD){const e=Array.from(SD).filter((e=>e.needsMeasurement)),t=new Set(e.map((e=>e.element))),A=new Map;t.forEach((e=>{const t=function(e){const t=[];return ID.forEach((A=>{const r=e.getValue(A);void 0!==r&&(t.push([A,r.get()]),r.set(A.startsWith("scale")?1:0))})),t}(e);t.length&&(A.set(e,t),e.render())})),e.forEach((e=>e.measureInitialState())),t.forEach((e=>{e.render();const t=A.get(e);t&&t.forEach((t=>{let[A,r]=t;var n;null===(n=e.getValue(A))||void 0===n||n.set(r)}))})),e.forEach((e=>e.measureEndState())),e.forEach((e=>{void 0!==e.suspendedScrollY&&window.scrollTo(0,e.suspendedScrollY)}))}ZD=!1,WD=!1,SD.forEach((e=>e.complete())),SD.clear()}function MD(){SD.forEach((e=>{e.readKeyframes(),e.needsMeasurement&&(ZD=!0)}))}class zD{constructor(e,t,A,r,n){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];this.isComplete=!1,this.isAsync=!1,this.needsMeasurement=!1,this.isScheduled=!1,this.unresolvedKeyframes=[...e],this.onComplete=t,this.name=A,this.motionValue=r,this.element=n,this.isAsync=s}scheduleResolve(){this.isScheduled=!0,this.isAsync?(SD.add(this),WD||(WD=!0,qN.read(MD),qN.resolveKeyframes(XD))):(this.readKeyframes(),this.complete())}readKeyframes(){const{unresolvedKeyframes:e,name:t,element:A,motionValue:r}=this;for(let n=0;n<e.length;n++)if(null===e[n])if(0===n){const n=null===r||void 0===r?void 0:r.get(),s=e[e.length-1];if(void 0!==n)e[0]=n;else if(A&&t){const r=A.readValue(t,s);void 0!==r&&null!==r&&(e[0]=r)}void 0===e[0]&&(e[0]=s),r&&void 0===n&&r.set(e[0])}else e[n]=e[n-1]}setFinalKeyframe(){}measureInitialState(){}renderEndStyles(){}measureEndState(){}complete(){this.isComplete=!0,this.onComplete(this.unresolvedKeyframes,this.finalKeyframe),SD.delete(this)}cancel(){this.isComplete||(this.isScheduled=!1,SD.delete(this))}resume(){this.isComplete||this.scheduleResolve()}}const RD=(e,t)=>A=>Boolean(bD(A)&&pD.test(A)&&A.startsWith(e)||t&&!function(e){return null==e}(A)&&Object.prototype.hasOwnProperty.call(A,t)),jD=(e,t,A)=>r=>{if(!bD(r))return r;const[n,s,i,o]=r.match(hD);return{[e]:parseFloat(n),[t]:parseFloat(s),[A]:parseFloat(i),alpha:void 0!==o?parseFloat(o):1}},TD={...uD,transform:e=>Math.round((e=>lD(0,255,e))(e))},UD={test:RD("rgb","red"),parse:jD("red","green","blue"),transform:e=>{let{red:t,green:A,blue:r,alpha:n=1}=e;return"rgba("+TD.transform(t)+", "+TD.transform(A)+", "+TD.transform(r)+", "+fD(cD.transform(n))+")"}};const VD={test:RD("#"),parse:function(e){let t="",A="",r="",n="";return e.length>5?(t=e.substring(1,3),A=e.substring(3,5),r=e.substring(5,7),n=e.substring(7,9)):(t=e.substring(1,2),A=e.substring(2,3),r=e.substring(3,4),n=e.substring(4,5),t+=t,A+=A,r+=r,n+=n),{red:parseInt(t,16),green:parseInt(A,16),blue:parseInt(r,16),alpha:n?parseInt(n,16)/255:1}},transform:UD.transform},OD={test:RD("hsl","hue"),parse:jD("hue","saturation","lightness"),transform:e=>{let{hue:t,saturation:A,lightness:r,alpha:n=1}=e;return"hsla("+Math.round(t)+", "+yD.transform(fD(A))+", "+yD.transform(fD(r))+", "+fD(cD.transform(n))+")"}},YD={test:e=>UD.test(e)||VD.test(e)||OD.test(e),parse:e=>UD.test(e)?UD.parse(e):OD.test(e)?OD.parse(e):VD.parse(e),transform:e=>bD(e)?e:e.hasOwnProperty("red")?UD.transform(e):OD.transform(e)};const HD="number",KD="color",qD="var",JD="var(",_D="${}",$D=/var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;function eQ(e){const t=e.toString(),A=[],r={color:[],number:[],var:[]},n=[];let s=0;const i=t.replace($D,(e=>(YD.test(e)?(r.color.push(s),n.push(KD),A.push(YD.parse(e))):e.startsWith(JD)?(r.var.push(s),n.push(qD),A.push(e)):(r.number.push(s),n.push(HD),A.push(parseFloat(e))),++s,_D))).split(_D);return{values:A,split:i,indexes:r,types:n}}function tQ(e){return eQ(e).values}function AQ(e){const{split:t,types:A}=eQ(e),r=t.length;return e=>{let n="";for(let s=0;s<r;s++)if(n+=t[s],void 0!==e[s]){const t=A[s];n+=t===HD?fD(e[s]):t===KD?YD.transform(e[s]):e[s]}return n}}const rQ=e=>"number"===typeof e?0:e;const nQ={test:function(e){var t,A;return isNaN(e)&&bD(e)&&((null===(t=e.match(hD))||void 0===t?void 0:t.length)||0)+((null===(A=e.match(gD))||void 0===A?void 0:A.length)||0)>0},parse:tQ,createTransformer:AQ,getAnimatableNone:function(e){const t=tQ(e);return AQ(e)(t.map(rQ))}},sQ=new Set(["brightness","contrast","saturate","opacity"]);function iQ(e){const[t,A]=e.slice(0,-1).split("(");if("drop-shadow"===t)return e;const[r]=A.match(hD)||[];if(!r)return e;const n=A.replace(r,"");let s=sQ.has(t)?1:0;return r!==A&&(s*=100),t+"("+s+n+")"}const oQ=/\b([a-z-]*)\(.*?\)/gu,aQ={...nQ,getAnimatableNone:e=>{const t=e.match(oQ);return t?t.map(iQ).join(" "):e}},lQ={...uD,transform:Math.round},uQ={borderWidth:wD,borderTopWidth:wD,borderRightWidth:wD,borderBottomWidth:wD,borderLeftWidth:wD,borderRadius:wD,radius:wD,borderTopLeftRadius:wD,borderTopRightRadius:wD,borderBottomRightRadius:wD,borderBottomLeftRadius:wD,width:wD,maxWidth:wD,height:wD,maxHeight:wD,size:wD,top:wD,right:wD,bottom:wD,left:wD,padding:wD,paddingTop:wD,paddingRight:wD,paddingBottom:wD,paddingLeft:wD,margin:wD,marginTop:wD,marginRight:wD,marginBottom:wD,marginLeft:wD,rotate:vD,rotateX:vD,rotateY:vD,rotateZ:vD,scale:dD,scaleX:dD,scaleY:dD,scaleZ:dD,skew:vD,skewX:vD,skewY:vD,distance:wD,translateX:wD,translateY:wD,translateZ:wD,x:wD,y:wD,z:wD,perspective:wD,transformPerspective:wD,opacity:cD,originX:CD,originY:CD,originZ:wD,zIndex:lQ,backgroundPositionX:wD,backgroundPositionY:wD,fillOpacity:cD,strokeOpacity:cD,numOctaves:lQ},cQ={...uQ,color:YD,backgroundColor:YD,outlineColor:YD,fill:YD,stroke:YD,borderColor:YD,borderTopColor:YD,borderRightColor:YD,borderBottomColor:YD,borderLeftColor:YD,filter:aQ,WebkitFilter:aQ},dQ=e=>cQ[e];function fQ(e,t){let A=dQ(e);return A!==aQ&&(A=nQ),A.getAnimatableNone?A.getAnimatableNone(t):void 0}const hQ=new Set(["auto","none","0"]);class gQ extends zD{constructor(e,t,A,r,n){super(e,t,A,r,n,!0)}readKeyframes(){const{unresolvedKeyframes:e,element:t,name:A}=this;if(!t||!t.current)return;super.readKeyframes();for(let o=0;o<e.length;o++){let A=e[o];if("string"===typeof A&&(A=A.trim(),sD(A))){const r=aD(A,t.current);void 0!==r&&(e[o]=r),o===e.length-1&&(this.finalKeyframe=A)}}if(this.resolveNoneKeyframes(),!ED.has(A)||2!==e.length)return;const[r,n]=e,s=FD(r),i=FD(n);if(s!==i)if(ND(s)&&ND(i))for(let o=0;o<e.length;o++){const t=e[o];"string"===typeof t&&(e[o]=parseFloat(t))}else this.needsMeasurement=!0}resolveNoneKeyframes(){const{unresolvedKeyframes:e,name:t}=this,A=[];for(let n=0;n<e.length;n++)("number"===typeof(r=e[n])?0===r:null===r||"none"===r||"0"===r||eD(r))&&A.push(n);var r;A.length&&function(e,t,A){let r,n=0;for(;n<e.length&&!r;){const t=e[n];"string"===typeof t&&!hQ.has(t)&&eQ(t).values.length&&(r=e[n]),n++}if(r&&A)for(const s of t)e[s]=fQ(A,r)}(e,A,t)}measureInitialState(){const{element:e,unresolvedKeyframes:t,name:A}=this;if(!e||!e.current)return;"height"===A&&(this.suspendedScrollY=window.pageYOffset),this.measuredOrigin=LD[A](e.measureViewportBox(),window.getComputedStyle(e.current)),t[0]=this.measuredOrigin;const r=t[t.length-1];void 0!==r&&e.getValue(A,r).jump(r,!1)}measureEndState(){var e;const{element:t,name:A,unresolvedKeyframes:r}=this;if(!t||!t.current)return;const n=t.getValue(A);n&&n.jump(this.measuredOrigin,!1);const s=r.length-1,i=r[s];r[s]=LD[A](t.measureViewportBox(),window.getComputedStyle(t.current)),null!==i&&void 0===this.finalKeyframe&&(this.finalKeyframe=i),(null===(e=this.removedTransforms)||void 0===e?void 0:e.length)&&this.removedTransforms.forEach((e=>{let[A,r]=e;t.getValue(A).set(r)})),this.resolveNoneKeyframes()}}function pQ(e){let t;return()=>(void 0===t&&(t=e()),t)}let bQ;function mQ(){bQ=void 0}const vQ={now:()=>(void 0===bQ&&vQ.set(_N.isProcessing||UN?_N.timestamp:performance.now()),bQ),set:e=>{bQ=e,queueMicrotask(mQ)}},yQ=(e,t)=>"zIndex"!==t&&(!("number"!==typeof e&&!Array.isArray(e))||!("string"!==typeof e||!nQ.test(e)&&"0"!==e||e.startsWith("url(")));class wQ{constructor(e){let{autoplay:t=!0,delay:A=0,type:r="keyframes",repeat:n=0,repeatDelay:s=0,repeatType:i="loop",...o}=e;this.isStopped=!1,this.hasAttemptedResolve=!1,this.createdAt=vQ.now(),this.options={autoplay:t,delay:A,type:r,repeat:n,repeatDelay:s,repeatType:i,...o},this.updateFinishedPromise()}calcStartTime(){return this.resolvedAt&&this.resolvedAt-this.createdAt>40?this.resolvedAt:this.createdAt}get resolved(){return this._resolved||this.hasAttemptedResolve||(MD(),XD()),this._resolved}onKeyframesResolved(e,t){this.resolvedAt=vQ.now(),this.hasAttemptedResolve=!0;const{name:A,type:r,velocity:n,delay:s,onComplete:i,onUpdate:o,isGenerator:a}=this.options;if(!a&&!function(e,t,A,r){const n=e[0];if(null===n)return!1;if("display"===t||"visibility"===t)return!0;const s=e[e.length-1],i=yQ(n,t),o=yQ(s,t);return Pe(i===o,`You are trying to animate ${t} from "${n}" to "${s}". ${n} is not an animatable value - to enable this animation set ${n} to a value animatable to ${s} via the \`style\` property.`),!(!i||!o)&&(function(e){const t=e[0];if(1===e.length)return!0;for(let A=0;A<e.length;A++)if(e[A]!==t)return!0}(e)||"spring"===A&&r)}(e,A,r,n)){if(VN||!s)return null===o||void 0===o||o(YN(e,this.options,t)),null===i||void 0===i||i(),void this.resolveFinishedPromise();this.options.duration=0}const l=this.initPlayback(e,t);!1!==l&&(this._resolved={keyframes:e,finalKeyframe:t,...l},this.onPostResolved())}onPostResolved(){}then(e,t){return this.currentFinishedPromise.then(e,t)}updateFinishedPromise(){this.currentFinishedPromise=new Promise((e=>{this.resolveFinishedPromise=e}))}}function BQ(e,t){return t?e*(1e3/t):0}const xQ=5;function CQ(e,t,A){const r=Math.max(t-xQ,0);return BQ(A-e(r),t-r)}const EQ=.001,NQ=.01,DQ=10,QQ=.05,PQ=1;function IQ(e){let t,A,{duration:r=800,bounce:n=.25,velocity:s=0,mass:i=1}=e;Pe(r<=WN(DQ),"Spring duration must be 10 seconds or less");let o=1-n;o=lD(QQ,PQ,o),r=lD(NQ,DQ,ZN(r)),o<1?(t=e=>{const t=e*o,A=t*r,n=t-s,i=kQ(e,o),a=Math.exp(-A);return EQ-n/i*a},A=e=>{const A=e*o*r,n=A*s+s,i=Math.pow(o,2)*Math.pow(e,2)*r,a=Math.exp(-A),l=kQ(Math.pow(e,2),o);return(-t(e)+EQ>0?-1:1)*((n-i)*a)/l}):(t=e=>Math.exp(-e*r)*((e-s)*r+1)-EQ,A=e=>Math.exp(-e*r)*(r*r*(s-e)));const a=function(e,t,A){let r=A;for(let n=1;n<LQ;n++)r-=e(r)/t(r);return r}(t,A,5/r);if(r=WN(r),isNaN(a))return{stiffness:100,damping:10,duration:r};{const e=Math.pow(a,2)*i;return{stiffness:e,damping:2*o*Math.sqrt(i*e),duration:r}}}const LQ=12;function kQ(e,t){return e*Math.sqrt(1-t*t)}const GQ=["duration","bounce"],FQ=["stiffness","damping","mass"];function SQ(e,t){return t.some((t=>void 0!==e[t]))}function WQ(e){let{keyframes:t,restDelta:A,restSpeed:r,...n}=e;const s=t[0],i=t[t.length-1],o={done:!1,value:s},{stiffness:a,damping:l,mass:u,duration:c,velocity:d,isResolvedFromDuration:f}=function(e){let t={velocity:0,stiffness:100,damping:10,mass:1,isResolvedFromDuration:!1,...e};if(!SQ(e,FQ)&&SQ(e,GQ)){const A=IQ(e);t={...t,...A,mass:1},t.isResolvedFromDuration=!0}return t}({...n,velocity:-ZN(n.velocity||0)}),h=d||0,g=l/(2*Math.sqrt(a*u)),p=i-s,b=ZN(Math.sqrt(a/u)),m=Math.abs(p)<5;let v;if(r||(r=m?.01:2),A||(A=m?.005:.5),g<1){const e=kQ(b,g);v=t=>{const A=Math.exp(-g*b*t);return i-A*((h+g*b*p)/e*Math.sin(e*t)+p*Math.cos(e*t))}}else if(1===g)v=e=>i-Math.exp(-b*e)*(p+(h+b*p)*e);else{const e=b*Math.sqrt(g*g-1);v=t=>{const A=Math.exp(-g*b*t),r=Math.min(e*t,300);return i-A*((h+g*b*p)*Math.sinh(r)+e*p*Math.cosh(r))/e}}return{calculatedDuration:f&&c||null,next:e=>{const t=v(e);if(f)o.done=e>=c;else{let n=0;g<1&&(n=0===e?WN(h):CQ(v,e,t));const s=Math.abs(n)<=r,a=Math.abs(i-t)<=A;o.done=s&&a}return o.value=o.done?i:t,o}}}function ZQ(e){let{keyframes:t,velocity:A=0,power:r=.8,timeConstant:n=325,bounceDamping:s=10,bounceStiffness:i=500,modifyTarget:o,min:a,max:l,restDelta:u=.5,restSpeed:c}=e;const d=t[0],f={done:!1,value:d},h=e=>void 0===a?l:void 0===l||Math.abs(a-e)<Math.abs(l-e)?a:l;let g=r*A;const p=d+g,b=void 0===o?p:o(p);b!==p&&(g=b-d);const m=e=>-g*Math.exp(-e/n),v=e=>b+m(e),y=e=>{const t=m(e),A=v(e);f.done=Math.abs(t)<=u,f.value=f.done?b:A};let w,B;const x=e=>{var t;(t=f.value,void 0!==a&&t<a||void 0!==l&&t>l)&&(w=e,B=WQ({keyframes:[f.value,h(f.value)],velocity:CQ(v,e,f.value),damping:s,stiffness:i,restDelta:u,restSpeed:c}))};return x(0),{calculatedDuration:null,next:e=>{let t=!1;return B||void 0!==w||(t=!0,y(e),x(e)),void 0!==w&&e>=w?B.next(e-w):(!t&&y(e),f)}}}const XQ=(e,t,A)=>(((1-3*A+3*t)*e+(3*A-6*t))*e+3*t)*e,MQ=1e-7,zQ=12;function RQ(e,t,A,r){if(e===t&&A===r)return Qe;const n=t=>function(e,t,A,r,n){let s,i,o=0;do{i=t+(A-t)/2,s=XQ(i,r,n)-e,s>0?A=i:t=i}while(Math.abs(s)>MQ&&++o<zQ);return i}(t,0,1,e,A);return e=>0===e||1===e?e:XQ(n(e),t,r)}const jQ=RQ(.42,0,1,1),TQ=RQ(0,0,.58,1),UQ=RQ(.42,0,.58,1),VQ=e=>t=>t<=.5?e(2*t)/2:(2-e(2*(1-t)))/2,OQ=e=>t=>1-e(1-t),YQ=e=>1-Math.sin(Math.acos(e)),HQ=OQ(YQ),KQ=VQ(YQ),qQ=RQ(.33,1.53,.69,.99),JQ=OQ(qQ),_Q={linear:Qe,easeIn:jQ,easeInOut:UQ,easeOut:TQ,circIn:YQ,circInOut:KQ,circOut:HQ,backIn:JQ,backInOut:VQ(JQ),backOut:qQ,anticipate:e=>(e*=2)<1?.5*JQ(e):.5*(2-Math.pow(2,-10*(e-1)))},$Q=e=>{if(Array.isArray(e)){Ie(4===e.length,"Cubic bezier arrays must contain four numerical values.");const[t,A,r,n]=e;return RQ(t,A,r,n)}return"string"===typeof e?(Ie(void 0!==_Q[e],`Invalid easing type '${e}'`),_Q[e]):e},eP=(e,t)=>A=>t(e(A)),tP=function(){for(var e=arguments.length,t=new Array(e),A=0;A<e;A++)t[A]=arguments[A];return t.reduce(eP)},AP=(e,t,A)=>{const r=t-e;return 0===r?1:(A-e)/r},rP=(e,t,A)=>e+(t-e)*A;function nP(e,t,A){return A<0&&(A+=1),A>1&&(A-=1),A<1/6?e+6*(t-e)*A:A<.5?t:A<2/3?e+(t-e)*(2/3-A)*6:e}function sP(e,t){return A=>A>0?t:e}const iP=(e,t,A)=>{const r=e*e,n=A*(t*t-r)+r;return n<0?0:Math.sqrt(n)},oP=[VD,UD,OD];function aP(e){const t=(A=e,oP.find((e=>e.test(A))));var A;if(Pe(Boolean(t),`'${e}' is not an animatable color. Use the equivalent color code instead.`),!Boolean(t))return!1;let r=t.parse(e);return t===OD&&(r=function(e){let{hue:t,saturation:A,lightness:r,alpha:n}=e;t/=360,A/=100,r/=100;let s=0,i=0,o=0;if(A){const e=r<.5?r*(1+A):r+A-r*A,n=2*r-e;s=nP(n,e,t+1/3),i=nP(n,e,t),o=nP(n,e,t-1/3)}else s=i=o=r;return{red:Math.round(255*s),green:Math.round(255*i),blue:Math.round(255*o),alpha:n}}(r)),r}const lP=(e,t)=>{const A=aP(e),r=aP(t);if(!A||!r)return sP(e,t);const n={...A};return e=>(n.red=iP(A.red,r.red,e),n.green=iP(A.green,r.green,e),n.blue=iP(A.blue,r.blue,e),n.alpha=rP(A.alpha,r.alpha,e),UD.transform(n))},uP=new Set(["none","hidden"]);function cP(e,t){return A=>rP(e,t,A)}function dP(e){return"number"===typeof e?cP:"string"===typeof e?sD(e)?sP:YD.test(e)?lP:gP:Array.isArray(e)?fP:"object"===typeof e?YD.test(e)?lP:hP:sP}function fP(e,t){const A=[...e],r=A.length,n=e.map(((e,A)=>dP(e)(e,t[A])));return e=>{for(let t=0;t<r;t++)A[t]=n[t](e);return A}}function hP(e,t){const A={...e,...t},r={};for(const n in A)void 0!==e[n]&&void 0!==t[n]&&(r[n]=dP(e[n])(e[n],t[n]));return e=>{for(const t in r)A[t]=r[t](e);return A}}const gP=(e,t)=>{const A=nQ.createTransformer(t),r=eQ(e),n=eQ(t);return r.indexes.var.length===n.indexes.var.length&&r.indexes.color.length===n.indexes.color.length&&r.indexes.number.length>=n.indexes.number.length?uP.has(e)&&!n.values.length||uP.has(t)&&!r.values.length?function(e,t){return uP.has(e)?A=>A<=0?e:t:A=>A>=1?t:e}(e,t):tP(fP(function(e,t){var A;const r=[],n={color:0,var:0,number:0};for(let s=0;s<t.values.length;s++){const i=t.types[s],o=e.indexes[i][n[i]],a=null!==(A=e.values[o])&&void 0!==A?A:0;r[s]=a,n[i]++}return r}(r,n),n.values),A):(Pe(!0,`Complex values '${e}' and '${t}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`),sP(e,t))};function pP(e,t,A){if("number"===typeof e&&"number"===typeof t&&"number"===typeof A)return rP(e,t,A);return dP(e)(e,t)}function bP(e,t){let{clamp:A=!0,ease:r,mixer:n}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const s=e.length;if(Ie(s===t.length,"Both input and output ranges must be the same length"),1===s)return()=>t[0];if(2===s&&e[0]===e[1])return()=>t[1];e[0]>e[s-1]&&(e=[...e].reverse(),t=[...t].reverse());const i=function(e,t,A){const r=[],n=A||pP,s=e.length-1;for(let i=0;i<s;i++){let A=n(e[i],e[i+1]);if(t){const e=Array.isArray(t)?t[i]||Qe:t;A=tP(e,A)}r.push(A)}return r}(t,r,n),o=i.length,a=t=>{let A=0;if(o>1)for(;A<e.length-2&&!(t<e[A+1]);A++);const r=AP(e[A],e[A+1],t);return i[A](r)};return A?t=>a(lD(e[0],e[s-1],t)):a}function mP(e){const t=[0];return function(e,t){const A=e[e.length-1];for(let r=1;r<=t;r++){const n=AP(0,t,r);e.push(rP(A,1,n))}}(t,e.length-1),t}function vP(e){let{duration:t=300,keyframes:A,times:r,ease:n="easeInOut"}=e;const s=(e=>Array.isArray(e)&&"number"!==typeof e[0])(n)?n.map($Q):$Q(n),i={done:!1,value:A[0]},o=function(e,t){return e.map((e=>e*t))}(r&&r.length===A.length?r:mP(A),t),a=bP(o,A,{ease:Array.isArray(s)?s:(l=A,u=s,l.map((()=>u||UQ)).splice(0,l.length-1))});var l,u;return{calculatedDuration:t,next:e=>(i.value=a(e),i.done=e>=t,i)}}const yP=e=>{const t=t=>{let{timestamp:A}=t;return e(A)};return{start:()=>qN.update(t,!0),stop:()=>JN(t),now:()=>_N.isProcessing?_N.timestamp:vQ.now()}},wP={decay:ZQ,inertia:ZQ,tween:vP,keyframes:vP,spring:WQ},BP=e=>e/100;class xP extends wQ{constructor(e){super(e),this.holdTime=null,this.cancelTime=null,this.currentTime=0,this.playbackSpeed=1,this.pendingPlayState="running",this.startTime=null,this.state="idle",this.stop=()=>{if(this.resolver.cancel(),this.isStopped=!0,"idle"===this.state)return;this.teardown();const{onStop:e}=this.options;e&&e()};const{name:t,motionValue:A,element:r,keyframes:n}=this.options,s=(null===r||void 0===r?void 0:r.KeyframeResolver)||zD;this.resolver=new s(n,((e,t)=>this.onKeyframesResolved(e,t)),t,A,r),this.resolver.scheduleResolve()}initPlayback(e){const{type:t="keyframes",repeat:A=0,repeatDelay:r=0,repeatType:n,velocity:s=0}=this.options,i=wP[t]||vP;let o,a;i!==vP&&"number"!==typeof e[0]&&(o=tP(BP,pP(e[0],e[1])),e=[0,100]);const l=i({...this.options,keyframes:e});"mirror"===n&&(a=i({...this.options,keyframes:[...e].reverse(),velocity:-s})),null===l.calculatedDuration&&(l.calculatedDuration=function(e){let t=0,A=e.next(t);for(;!A.done&&t<2e4;)t+=50,A=e.next(t);return t>=2e4?1/0:t}(l));const{calculatedDuration:u}=l,c=u+r;return{generator:l,mirroredGenerator:a,mapPercentToKeyframes:o,calculatedDuration:u,resolvedDuration:c,totalDuration:c*(A+1)-r}}onPostResolved(){const{autoplay:e=!0}=this.options;this.play(),"paused"!==this.pendingPlayState&&e?this.state=this.pendingPlayState:this.pause()}tick(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const{resolved:A}=this;if(!A){const{keyframes:e}=this.options;return{done:!0,value:e[e.length-1]}}const{finalKeyframe:r,generator:n,mirroredGenerator:s,mapPercentToKeyframes:i,keyframes:o,calculatedDuration:a,totalDuration:l,resolvedDuration:u}=A;if(null===this.startTime)return n.next(0);const{delay:c,repeat:d,repeatType:f,repeatDelay:h,onUpdate:g}=this.options;this.speed>0?this.startTime=Math.min(this.startTime,e):this.speed<0&&(this.startTime=Math.min(e-l/this.speed,this.startTime)),t?this.currentTime=e:null!==this.holdTime?this.currentTime=this.holdTime:this.currentTime=Math.round(e-this.startTime)*this.speed;const p=this.currentTime-c*(this.speed>=0?1:-1),b=this.speed>=0?p<0:p>l;this.currentTime=Math.max(p,0),"finished"===this.state&&null===this.holdTime&&(this.currentTime=l);let m=this.currentTime,v=n;if(d){const e=Math.min(this.currentTime,l)/u;let t=Math.floor(e),A=e%1;!A&&e>=1&&(A=1),1===A&&t--,t=Math.min(t,d+1);Boolean(t%2)&&("reverse"===f?(A=1-A,h&&(A-=h/u)):"mirror"===f&&(v=s)),m=lD(0,1,A)*u}const y=b?{done:!1,value:o[0]}:v.next(m);i&&(y.value=i(y.value));let{done:w}=y;b||null===a||(w=this.speed>=0?this.currentTime>=l:this.currentTime<=0);const B=null===this.holdTime&&("finished"===this.state||"running"===this.state&&w);return B&&void 0!==r&&(y.value=YN(o,this.options,r)),g&&g(y.value),B&&this.finish(),y}get duration(){const{resolved:e}=this;return e?ZN(e.calculatedDuration):0}get time(){return ZN(this.currentTime)}set time(e){e=WN(e),this.currentTime=e,null!==this.holdTime||0===this.speed?this.holdTime=e:this.driver&&(this.startTime=this.driver.now()-e/this.speed)}get speed(){return this.playbackSpeed}set speed(e){const t=this.playbackSpeed!==e;this.playbackSpeed=e,t&&(this.time=ZN(this.currentTime))}play(){if(this.resolver.isScheduled||this.resolver.resume(),!this._resolved)return void(this.pendingPlayState="running");if(this.isStopped)return;const{driver:e=yP,onPlay:t,startTime:A}=this.options;this.driver||(this.driver=e((e=>this.tick(e)))),t&&t();const r=this.driver.now();null!==this.holdTime?this.startTime=r-this.holdTime:this.startTime?"finished"===this.state&&(this.startTime=r):this.startTime=null!==A&&void 0!==A?A:this.calcStartTime(),"finished"===this.state&&this.updateFinishedPromise(),this.cancelTime=this.startTime,this.holdTime=null,this.state="running",this.driver.start()}pause(){var e;this._resolved?(this.state="paused",this.holdTime=null!==(e=this.currentTime)&&void 0!==e?e:0):this.pendingPlayState="paused"}complete(){"running"!==this.state&&this.play(),this.pendingPlayState=this.state="finished",this.holdTime=null}finish(){this.teardown(),this.state="finished";const{onComplete:e}=this.options;e&&e()}cancel(){null!==this.cancelTime&&this.tick(this.cancelTime),this.teardown(),this.updateFinishedPromise()}teardown(){this.state="idle",this.stopDriver(),this.resolveFinishedPromise(),this.updateFinishedPromise(),this.startTime=this.cancelTime=null,this.resolver.cancel()}stopDriver(){this.driver&&(this.driver.stop(),this.driver=void 0)}sample(e){return this.startTime=0,this.tick(e,!0)}}const CP=new Set(["opacity","clipPath","filter","transform"]),EP=e=>Array.isArray(e)&&"number"===typeof e[0];function NP(e){return Boolean(!e||"string"===typeof e&&e in QP||EP(e)||Array.isArray(e)&&e.every(NP))}const DP=e=>{let[t,A,r,n]=e;return`cubic-bezier(${t}, ${A}, ${r}, ${n})`},QP={linear:"linear",ease:"ease",easeIn:"ease-in",easeOut:"ease-out",easeInOut:"ease-in-out",circIn:DP([0,.65,.55,1]),circOut:DP([.55,0,1,.45]),backIn:DP([.31,.01,.66,-.59]),backOut:DP([.33,1.53,.69,.99])};function PP(e){return IP(e)||QP.easeOut}function IP(e){return e?EP(e)?DP(e):Array.isArray(e)?e.map(PP):QP[e]:void 0}const LP=pQ((()=>Object.hasOwnProperty.call(Element.prototype,"animate")));class kP extends wQ{constructor(e){super(e);const{name:t,motionValue:A,element:r,keyframes:n}=this.options;this.resolver=new gQ(n,((e,t)=>this.onKeyframesResolved(e,t)),t,A,r),this.resolver.scheduleResolve()}initPlayback(e,t){var A;let{duration:r=300,times:n,ease:s,type:i,motionValue:o,name:a,startTime:l}=this.options;if(!(null===(A=o.owner)||void 0===A?void 0:A.current))return!1;if("spring"===(u=this.options).type||!NP(u.ease)){const{onComplete:t,onUpdate:A,motionValue:o,element:a,...l}=this.options,u=function(e,t){const A=new xP({...t,keyframes:e,repeat:0,delay:0,isGenerator:!0});let r={done:!1,value:e[0]};const n=[];let s=0;for(;!r.done&&s<2e4;)r=A.sample(s),n.push(r.value),s+=10;return{times:void 0,keyframes:n,duration:s-10,ease:"linear"}}(e,l);1===(e=u.keyframes).length&&(e[1]=e[0]),r=u.duration,n=u.times,s=u.ease,i="keyframes"}var u;const c=function(e,t,A){let{delay:r=0,duration:n=300,repeat:s=0,repeatType:i="loop",ease:o,times:a}=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const l={[t]:A};a&&(l.offset=a);const u=IP(o);return Array.isArray(u)&&(l.easing=u),e.animate(l,{delay:r,duration:n,easing:Array.isArray(u)?"linear":u,fill:"both",iterations:s+1,direction:"reverse"===i?"alternate":"normal"})}(o.owner.current,a,e,{...this.options,duration:r,times:n,ease:s});return c.startTime=null!==l&&void 0!==l?l:this.calcStartTime(),this.pendingTimeline?(c.timeline=this.pendingTimeline,this.pendingTimeline=void 0):c.onfinish=()=>{const{onComplete:A}=this.options;o.set(YN(e,this.options,t)),A&&A(),this.cancel(),this.resolveFinishedPromise()},{animation:c,duration:r,times:n,type:i,ease:s,keyframes:e}}get duration(){const{resolved:e}=this;if(!e)return 0;const{duration:t}=e;return ZN(t)}get time(){const{resolved:e}=this;if(!e)return 0;const{animation:t}=e;return ZN(t.currentTime||0)}set time(e){const{resolved:t}=this;if(!t)return;const{animation:A}=t;A.currentTime=WN(e)}get speed(){const{resolved:e}=this;if(!e)return 1;const{animation:t}=e;return t.playbackRate}set speed(e){const{resolved:t}=this;if(!t)return;const{animation:A}=t;A.playbackRate=e}get state(){const{resolved:e}=this;if(!e)return"idle";const{animation:t}=e;return t.playState}get startTime(){const{resolved:e}=this;if(!e)return null;const{animation:t}=e;return t.startTime}attachTimeline(e){if(this._resolved){const{resolved:t}=this;if(!t)return Qe;const{animation:A}=t;A.timeline=e,A.onfinish=null}else this.pendingTimeline=e;return Qe}play(){if(this.isStopped)return;const{resolved:e}=this;if(!e)return;const{animation:t}=e;"finished"===t.playState&&this.updateFinishedPromise(),t.play()}pause(){const{resolved:e}=this;if(!e)return;const{animation:t}=e;t.pause()}stop(){if(this.resolver.cancel(),this.isStopped=!0,"idle"===this.state)return;this.resolveFinishedPromise(),this.updateFinishedPromise();const{resolved:e}=this;if(!e)return;const{animation:t,keyframes:A,duration:r,type:n,ease:s,times:i}=e;if("idle"===t.playState||"finished"===t.playState)return;if(this.time){const{motionValue:e,onUpdate:t,onComplete:o,element:a,...l}=this.options,u=new xP({...l,keyframes:A,duration:r,type:n,ease:s,times:i,isGenerator:!0}),c=WN(this.time);e.setWithVelocity(u.sample(c-10).value,u.sample(c).value,10)}const{onStop:o}=this.options;o&&o(),this.cancel()}complete(){const{resolved:e}=this;e&&e.animation.finish()}cancel(){const{resolved:e}=this;e&&e.animation.cancel()}static supports(e){const{motionValue:t,name:A,repeatDelay:r,repeatType:n,damping:s,type:i}=e;return LP()&&A&&CP.has(A)&&t&&t.owner&&t.owner.current instanceof HTMLElement&&!t.owner.getProps().onUpdate&&!r&&"mirror"!==n&&0!==s&&"inertia"!==i}}const GP=pQ((()=>void 0!==window.ScrollTimeline));class FP{constructor(e){this.stop=()=>this.runAll("stop"),this.animations=e.filter(Boolean)}then(e,t){return Promise.all(this.animations).then(e).catch(t)}getAll(e){return this.animations[0][e]}setAll(e,t){for(let A=0;A<this.animations.length;A++)this.animations[A][e]=t}attachTimeline(e){const t=this.animations.map((t=>{if(!GP()||!t.attachTimeline)return t.pause(),function(e,t){let A;const r=()=>{const{currentTime:r}=t,n=(null===r?0:r.value)/100;A!==n&&e(n),A=n};return qN.update(r,!0),()=>JN(r)}((e=>{t.time=t.duration*e}),e);t.attachTimeline(e)}));return()=>{t.forEach(((e,t)=>{e&&e(),this.animations[t].stop()}))}}get time(){return this.getAll("time")}set time(e){this.setAll("time",e)}get speed(){return this.getAll("speed")}set speed(e){this.setAll("speed",e)}get startTime(){return this.getAll("startTime")}get duration(){let e=0;for(let t=0;t<this.animations.length;t++)e=Math.max(e,this.animations[t].duration);return e}runAll(e){this.animations.forEach((t=>t[e]()))}play(){this.runAll("play")}pause(){this.runAll("pause")}cancel(){this.runAll("cancel")}complete(){this.runAll("complete")}}const SP=function(e,t,A){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return o=>{const a=jN(r,e)||{},l=a.delay||r.delay||0;let{elapsed:u=0}=r;u-=WN(l);let c={keyframes:Array.isArray(A)?A:[null,A],ease:"easeOut",velocity:t.getVelocity(),...a,delay:-u,onUpdate:e=>{t.set(e),a.onUpdate&&a.onUpdate(e)},onComplete:()=>{o(),a.onComplete&&a.onComplete(),i&&i()},onStop:i,name:e,motionValue:t,element:s?void 0:n};(function(e){let{when:t,delay:A,delayChildren:r,staggerChildren:n,staggerDirection:s,repeat:i,repeatType:o,repeatDelay:a,from:l,elapsed:u,...c}=e;return!!Object.keys(c).length})(a)||(c={...c,...RN(e,c)}),c.duration&&(c.duration=WN(c.duration)),c.repeatDelay&&(c.repeatDelay=WN(c.repeatDelay)),void 0!==c.from&&(c.keyframes[0]=c.from);let d=!1;if((!1===c.type||0===c.duration&&!c.repeatDelay)&&(c.duration=0,0===c.delay&&(d=!0)),(VN||TN)&&(d=!0,c.duration=0,c.delay=0),d&&!s&&void 0!==t.get()){const e=YN(c.keyframes,a);if(void 0!==e)return qN.update((()=>{c.onUpdate(e),c.onComplete()})),new FP([])}return!s&&kP.supports(c)?new kP(c):new xP(c)}},WP=e=>Boolean(e&&"object"===typeof e&&e.mix&&e.toValue),ZP=e=>NN(e)?e[e.length-1]||0:e;function XP(e,t){-1===e.indexOf(t)&&e.push(t)}function MP(e,t){const A=e.indexOf(t);A>-1&&e.splice(A,1)}class zP{constructor(){this.subscriptions=[]}add(e){return XP(this.subscriptions,e),()=>MP(this.subscriptions,e)}notify(e,t,A){const r=this.subscriptions.length;if(r)if(1===r)this.subscriptions[0](e,t,A);else for(let n=0;n<r;n++){const r=this.subscriptions[n];r&&r(e,t,A)}}getSize(){return this.subscriptions.length}clear(){this.subscriptions.length=0}}const RP={current:void 0};class jP{constructor(e){var t=this;let A=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.version="11.5.4",this.canTrackVelocity=null,this.events={},this.updateAndNotify=function(e){let A=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const r=vQ.now();t.updatedAt!==r&&t.setPrevFrameValue(),t.prev=t.current,t.setCurrent(e),t.current!==t.prev&&t.events.change&&t.events.change.notify(t.current),A&&t.events.renderRequest&&t.events.renderRequest.notify(t.current)},this.hasAnimated=!1,this.setCurrent(e),this.owner=A.owner}setCurrent(e){var t;this.current=e,this.updatedAt=vQ.now(),null===this.canTrackVelocity&&void 0!==e&&(this.canTrackVelocity=(t=this.current,!isNaN(parseFloat(t))))}setPrevFrameValue(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.current;this.prevFrameValue=e,this.prevUpdatedAt=this.updatedAt}onChange(e){return this.on("change",e)}on(e,t){this.events[e]||(this.events[e]=new zP);const A=this.events[e].add(t);return"change"===e?()=>{A(),qN.read((()=>{this.events.change.getSize()||this.stop()}))}:A}clearListeners(){for(const e in this.events)this.events[e].clear()}attach(e,t){this.passiveEffect=e,this.stopPassiveEffect=t}set(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];t&&this.passiveEffect?this.passiveEffect(e,this.updateAndNotify):this.updateAndNotify(e,t)}setWithVelocity(e,t,A){this.set(t),this.prev=void 0,this.prevFrameValue=e,this.prevUpdatedAt=this.updatedAt-A}jump(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this.updateAndNotify(e),this.prev=e,this.prevUpdatedAt=this.prevFrameValue=void 0,t&&this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}get(){return RP.current&&RP.current.push(this),this.current}getPrevious(){return this.prev}getVelocity(){const e=vQ.now();if(!this.canTrackVelocity||void 0===this.prevFrameValue||e-this.updatedAt>30)return 0;const t=Math.min(this.updatedAt-this.prevUpdatedAt,30);return BQ(parseFloat(this.current)-parseFloat(this.prevFrameValue),t)}start(e){return this.stop(),new Promise((t=>{this.hasAnimated=!0,this.animation=e(t),this.events.animationStart&&this.events.animationStart.notify()})).then((()=>{this.events.animationComplete&&this.events.animationComplete.notify(),this.clearAnimation()}))}stop(){this.animation&&(this.animation.stop(),this.events.animationCancel&&this.events.animationCancel.notify()),this.clearAnimation()}isAnimating(){return!!this.animation}clearAnimation(){delete this.animation}destroy(){this.clearListeners(),this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}}function TP(e,t){return new jP(e,t)}function UP(e,t,A){e.hasValue(t)?e.getValue(t).set(A):e.addValue(t,TP(A))}const VP=e=>e.replace(/([a-z])([A-Z])/gu,"$1-$2").toLowerCase(),OP="data-"+VP("framerAppearId");function YP(e){return e.props[OP]}function HP(e){return SN.has(e)?"transform":CP.has(e)?VP(e):void 0}class KP extends jP{constructor(){super(...arguments),this.output=[],this.counts=new Map}add(e){const t=HP(e);if(!t)return;const A=this.counts.get(t)||0;this.counts.set(t,A+1),0===A&&(this.output.push(t),this.update());let r=!1;return()=>{if(r)return;r=!0;const e=this.counts.get(t)-1;this.counts.set(t,e),0===e&&(MP(this.output,t),this.update())}}update(){this.set(this.output.length?this.output.join(", "):"auto")}}const qP=e=>Boolean(e&&e.getVelocity);function JP(e,t){var A;if(!e.applyWillChange)return;let r=e.getValue("willChange");return r||(null===(A=e.props.style)||void 0===A?void 0:A.willChange)||(r=new KP("auto"),e.addValue("willChange",r)),n=r,Boolean(qP(n)&&n.add)?r.add(t):void 0;var n}function _P(e,t){let{protectedKeys:A,needsAnimating:r}=e;const n=A.hasOwnProperty(t)&&!0!==r[t];return r[t]=!1,n}function $P(e,t){let{delay:A=0,transitionOverride:r,type:n}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};var s;let{transition:i=e.getDefaultTransition(),transitionEnd:o,...a}=t;r&&(i=r);const l=[],u=n&&e.animationState&&e.animationState.getState()[n];for(const c in a){const t=e.getValue(c,null!==(s=e.latestValues[c])&&void 0!==s?s:null),r=a[c];if(void 0===r||u&&_P(u,c))continue;const n={delay:A,...jN(i||{},c)};let o=!1;if(window.MotionHandoffAnimation){const t=YP(e);if(t){const e=window.MotionHandoffAnimation(t,c,qN);null!==e&&(n.startTime=e,o=!0)}}t.start(SP(c,t,r,e.shouldReduceMotion&&SN.has(c)?{type:!1}:n,e,o,JP(e,c)));const d=t.animation;d&&l.push(d)}return o&&Promise.all(l).then((()=>{qN.update((()=>{o&&function(e,t){const A=LN(e,t);let{transitionEnd:r={},transition:n={},...s}=A||{};s={...s,...r};for(const i in s)UP(e,i,ZP(s[i]))}(e,o)}))})),l}function eI(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};var r;const n=LN(e,t,"exit"===A.type?null===(r=e.presenceContext)||void 0===r?void 0:r.custom:void 0);let{transition:s=e.getDefaultTransition()||{}}=n||{};A.transitionOverride&&(s=A.transitionOverride);const i=n?()=>Promise.all($P(e,n,A)):()=>Promise.resolve(),o=e.variantChildren&&e.variantChildren.size?function(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const{delayChildren:n=0,staggerChildren:i,staggerDirection:o}=s;return function(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,s=arguments.length>5?arguments[5]:void 0;const i=[],o=(e.variantChildren.size-1)*r,a=1===n?function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:0)*r}:function(){return o-(arguments.length>0&&void 0!==arguments[0]?arguments[0]:0)*r};return Array.from(e.variantChildren).sort(tI).forEach(((e,r)=>{e.notify("AnimationStart",t),i.push(eI(e,t,{...s,delay:A+a(r)}).then((()=>e.notify("AnimationComplete",t))))})),Promise.all(i)}(e,t,n+r,i,o,A)}:()=>Promise.resolve(),{when:a}=s;if(a){const[e,t]="beforeChildren"===a?[i,o]:[o,i];return e().then((()=>t()))}return Promise.all([i(),o(A.delay)])}function tI(e,t){return e.sortNodePosition(t)}const AI=[...kN].reverse(),rI=kN.length;function nI(e){return t=>Promise.all(t.map((t=>{let{animation:A,options:r}=t;return function(e,t){let A,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(e.notify("AnimationStart",t),Array.isArray(t)){const n=t.map((t=>eI(e,t,r)));A=Promise.all(n)}else if("string"===typeof t)A=eI(e,t,r);else{const n="function"===typeof t?LN(e,t,r.custom):t;A=Promise.all($P(e,n,r))}return A.then((()=>{e.notify("AnimationComplete",t)}))}(e,A,r)})))}function sI(e,t){return"string"===typeof t?t!==e:!!Array.isArray(t)&&!DN(t,e)}function iI(){return{isActive:arguments.length>0&&void 0!==arguments[0]&&arguments[0],protectedKeys:{},needsAnimating:{},prevResolvedValues:{}}}function oI(){return{animate:iI(!0),whileInView:iI(),whileHover:iI(),whileTap:iI(),whileDrag:iI(),whileFocus:iI(),exit:iI()}}class aI{constructor(e){this.isMounted=!1,this.node=e}update(){}}let lI=0;const uI={animation:{Feature:class extends aI{constructor(e){super(e),e.animationState||(e.animationState=function(e){let t=nI(e),A=oI(),r=!0;const n=t=>(A,r)=>{var n;const s=LN(e,r,"exit"===t?null===(n=e.presenceContext)||void 0===n?void 0:n.custom:void 0);if(s){const{transition:e,transitionEnd:t,...r}=s;A={...A,...r,...t}}return A};function s(s){const i=e.getProps(),o=e.getVariantContext(!0)||{},a=[],l=new Set;let u={},c=1/0;for(let t=0;t<rI;t++){const d=AI[t],f=A[d],h=void 0!==i[d]?i[d]:o[d],g=QN(h),p=d===s?f.isActive:null;!1===p&&(c=t);let b=h===o[d]&&h!==i[d]&&g;if(b&&r&&e.manuallyAnimateOnMount&&(b=!1),f.protectedKeys={...u},!f.isActive&&null===p||!h&&!f.prevProp||EN(h)||"boolean"===typeof h)continue;let m=sI(f.prevProp,h)||d===s&&f.isActive&&!b&&g||t>c&&g,v=!1;const y=Array.isArray(h)?h:[h];let w=y.reduce(n(d),{});!1===p&&(w={});const{prevResolvedValues:B={}}=f,x={...B,...w},C=t=>{m=!0,l.has(t)&&(v=!0,l.delete(t)),f.needsAnimating[t]=!0;const A=e.getValue(t);A&&(A.liveStyle=!1)};for(const e in x){const t=w[e],A=B[e];if(u.hasOwnProperty(e))continue;let r=!1;r=NN(t)&&NN(A)?!DN(t,A):t!==A,r?void 0!==t&&null!==t?C(e):l.add(e):void 0!==t&&l.has(e)?C(e):f.protectedKeys[e]=!0}f.prevProp=h,f.prevResolvedValues=w,f.isActive&&(u={...u,...w}),r&&e.blockInitialAnimation&&(m=!1),!m||b&&!v||a.push(...y.map((e=>({animation:e,options:{type:d}}))))}if(l.size){const t={};l.forEach((A=>{const r=e.getBaseTarget(A),n=e.getValue(A);n&&(n.liveStyle=!0),t[A]=null!==r&&void 0!==r?r:null})),a.push({animation:t})}let d=Boolean(a.length);return!r||!1!==i.initial&&i.initial!==i.animate||e.manuallyAnimateOnMount||(d=!1),r=!1,d?t(a):Promise.resolve()}return{animateChanges:s,setActive:function(t,r){var n;if(A[t].isActive===r)return Promise.resolve();null===(n=e.variantChildren)||void 0===n||n.forEach((e=>{var A;return null===(A=e.animationState)||void 0===A?void 0:A.setActive(t,r)})),A[t].isActive=r;const i=s(t);for(const e in A)A[e].protectedKeys={};return i},setAnimateFunction:function(A){t=A(e)},getState:()=>A,reset:()=>{A=oI(),r=!0}}}(e))}updateAnimationControlsSubscription(){const{animate:e}=this.node.getProps();EN(e)&&(this.unmountControls=e.subscribe(this.node))}mount(){this.updateAnimationControlsSubscription()}update(){const{animate:e}=this.node.getProps(),{animate:t}=this.node.prevProps||{};e!==t&&this.updateAnimationControlsSubscription()}unmount(){var e;this.node.animationState.reset(),null===(e=this.unmountControls)||void 0===e||e.call(this)}}},exit:{Feature:class extends aI{constructor(){super(...arguments),this.id=lI++}update(){if(!this.node.presenceContext)return;const{isPresent:e,onExitComplete:t}=this.node.presenceContext,{isPresent:A}=this.node.prevPresenceContext||{};if(!this.node.animationState||e===A)return;const r=this.node.animationState.setActive("exit",!e);t&&!e&&r.then((()=>t(this.id)))}mount(){const{register:e}=this.node.presenceContext||{};e&&(this.unmount=e(this.id))}unmount(){}}}},cI=e=>"mouse"===e.pointerType?"number"!==typeof e.button||e.button<=0:!1!==e.isPrimary;function dI(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"page";return{point:{x:e[`${t}X`],y:e[`${t}Y`]}}}const fI=e=>t=>cI(t)&&e(t,dI(t));function hI(e,t,A){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{passive:!0};return e.addEventListener(t,A,r),()=>e.removeEventListener(t,A)}function gI(e,t,A,r){return hI(e,t,fI(A),r)}const pI=(e,t)=>Math.abs(e-t);class bI{constructor(e,t){let{transformPagePoint:A,contextWindow:r,dragSnapToOrigin:n=!1}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.startEvent=null,this.lastMoveEvent=null,this.lastMoveEventInfo=null,this.handlers={},this.contextWindow=window,this.updatePoint=()=>{if(!this.lastMoveEvent||!this.lastMoveEventInfo)return;const e=yI(this.lastMoveEventInfo,this.history),t=null!==this.startEvent,A=function(e,t){const A=pI(e.x,t.x),r=pI(e.y,t.y);return Math.sqrt(A**2+r**2)}(e.offset,{x:0,y:0})>=3;if(!t&&!A)return;const{point:r}=e,{timestamp:n}=_N;this.history.push({...r,timestamp:n});const{onStart:s,onMove:i}=this.handlers;t||(s&&s(this.lastMoveEvent,e),this.startEvent=this.lastMoveEvent),i&&i(this.lastMoveEvent,e)},this.handlePointerMove=(e,t)=>{this.lastMoveEvent=e,this.lastMoveEventInfo=mI(t,this.transformPagePoint),qN.update(this.updatePoint,!0)},this.handlePointerUp=(e,t)=>{this.end();const{onEnd:A,onSessionEnd:r,resumeAnimation:n}=this.handlers;if(this.dragSnapToOrigin&&n&&n(),!this.lastMoveEvent||!this.lastMoveEventInfo)return;const s=yI("pointercancel"===e.type?this.lastMoveEventInfo:mI(t,this.transformPagePoint),this.history);this.startEvent&&A&&A(e,s),r&&r(e,s)},!cI(e))return;this.dragSnapToOrigin=n,this.handlers=t,this.transformPagePoint=A,this.contextWindow=r||window;const s=mI(dI(e),this.transformPagePoint),{point:i}=s,{timestamp:o}=_N;this.history=[{...i,timestamp:o}];const{onSessionStart:a}=t;a&&a(e,yI(s,this.history)),this.removeListeners=tP(gI(this.contextWindow,"pointermove",this.handlePointerMove),gI(this.contextWindow,"pointerup",this.handlePointerUp),gI(this.contextWindow,"pointercancel",this.handlePointerUp))}updateHandlers(e){this.handlers=e}end(){this.removeListeners&&this.removeListeners(),JN(this.updatePoint)}}function mI(e,t){return t?{point:t(e.point)}:e}function vI(e,t){return{x:e.x-t.x,y:e.y-t.y}}function yI(e,t){let{point:A}=e;return{point:A,delta:vI(A,BI(t)),offset:vI(A,wI(t)),velocity:xI(t,.1)}}function wI(e){return e[0]}function BI(e){return e[e.length-1]}function xI(e,t){if(e.length<2)return{x:0,y:0};let A=e.length-1,r=null;const n=BI(e);for(;A>=0&&(r=e[A],!(n.timestamp-r.timestamp>WN(t)));)A--;if(!r)return{x:0,y:0};const s=ZN(n.timestamp-r.timestamp);if(0===s)return{x:0,y:0};const i={x:(n.x-r.x)/s,y:(n.y-r.y)/s};return i.x===1/0&&(i.x=0),i.y===1/0&&(i.y=0),i}function CI(e){let t=null;return()=>{const A=()=>{t=null};return null===t&&(t=e,A)}}const EI=CI("dragHorizontal"),NI=CI("dragVertical");function DI(e){let t=!1;if("y"===e)t=NI();else if("x"===e)t=EI();else{const e=EI(),A=NI();e&&A?t=()=>{e(),A()}:(e&&e(),A&&A())}return t}function QI(){const e=DI(!0);return!e||(e(),!1)}function PI(e){return e&&"object"===typeof e&&Object.prototype.hasOwnProperty.call(e,"current")}const II=.9999,LI=1.0001,kI=-.01,GI=.01;function FI(e){return e.max-e.min}function SI(e,t,A){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;e.origin=r,e.originPoint=rP(t.min,t.max,e.origin),e.scale=FI(A)/FI(t),e.translate=rP(A.min,A.max,e.origin)-e.originPoint,(e.scale>=II&&e.scale<=LI||isNaN(e.scale))&&(e.scale=1),(e.translate>=kI&&e.translate<=GI||isNaN(e.translate))&&(e.translate=0)}function WI(e,t,A,r){SI(e.x,t.x,A.x,r?r.originX:void 0),SI(e.y,t.y,A.y,r?r.originY:void 0)}function ZI(e,t,A){e.min=A.min+t.min,e.max=e.min+FI(t)}function XI(e,t,A){e.min=t.min-A.min,e.max=e.min+FI(t)}function MI(e,t,A){XI(e.x,t.x,A.x),XI(e.y,t.y,A.y)}function zI(e,t,A){return{min:void 0!==t?e.min+t:void 0,max:void 0!==A?e.max+A-(e.max-e.min):void 0}}function RI(e,t){let A=t.min-e.min,r=t.max-e.max;return t.max-t.min<e.max-e.min&&([A,r]=[r,A]),{min:A,max:r}}const jI=.35;function TI(e,t,A){return{min:UI(e,t),max:UI(e,A)}}function UI(e,t){return"number"===typeof e?e:e[t]||0}const VI=()=>({x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}}),OI=()=>({x:{min:0,max:0},y:{min:0,max:0}});function YI(e){return[e("x"),e("y")]}function HI(e){let{top:t,left:A,right:r,bottom:n}=e;return{x:{min:A,max:r},y:{min:t,max:n}}}function KI(e){return void 0===e||1===e}function qI(e){let{scale:t,scaleX:A,scaleY:r}=e;return!KI(t)||!KI(A)||!KI(r)}function JI(e){return qI(e)||_I(e)||e.z||e.rotate||e.rotateX||e.rotateY||e.skewX||e.skewY}function _I(e){return $I(e.x)||$I(e.y)}function $I(e){return e&&"0%"!==e}function eL(e,t,A){return A+t*(e-A)}function tL(e,t,A,r,n){return void 0!==n&&(e=eL(e,n,r)),eL(e,A,r)+t}function AL(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,n=arguments.length>4?arguments[4]:void 0;e.min=tL(e.min,t,A,r,n),e.max=tL(e.max,t,A,r,n)}function rL(e,t){let{x:A,y:r}=t;AL(e.x,A.translate,A.scale,A.originPoint),AL(e.y,r.translate,r.scale,r.originPoint)}const nL=.999999999999,sL=1.0000000000001;function iL(e,t){e.min=e.min+t,e.max=e.max+t}function oL(e,t,A,r){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;AL(e,t,A,rP(e.min,e.max,n),r)}function aL(e,t){oL(e.x,t.x,t.scaleX,t.scale,t.originX),oL(e.y,t.y,t.scaleY,t.scale,t.originY)}function lL(e,t){return HI(function(e,t){if(!t)return e;const A=t({x:e.left,y:e.top}),r=t({x:e.right,y:e.bottom});return{top:A.y,left:A.x,bottom:r.y,right:r.x}}(e.getBoundingClientRect(),t))}const uL=e=>{let{current:t}=e;return t?t.ownerDocument.defaultView:null},cL=new WeakMap;class dL{constructor(e){this.openGlobalLock=null,this.isDragging=!1,this.currentDirection=null,this.originPoint={x:0,y:0},this.constraints=!1,this.hasMutatedConstraints=!1,this.elastic=OI(),this.visualElement=e}start(e){let{snapToCursor:t=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{presenceContext:A}=this.visualElement;if(A&&!1===A.isPresent)return;const{dragSnapToOrigin:r}=this.getProps();this.panSession=new bI(e,{onSessionStart:e=>{const{dragSnapToOrigin:A}=this.getProps();A?this.pauseAnimation():this.stopAnimation(),t&&this.snapToCursor(dI(e,"page").point)},onStart:(e,t)=>{var A;const{drag:r,dragPropagation:n,onDragStart:s}=this.getProps();if(r&&!n&&(this.openGlobalLock&&this.openGlobalLock(),this.openGlobalLock=DI(r),!this.openGlobalLock))return;this.isDragging=!0,this.currentDirection=null,this.resolveConstraints(),this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!0,this.visualElement.projection.target=void 0),YI((e=>{let t=this.getAxisMotionValue(e).get()||0;if(yD.test(t)){const{projection:A}=this.visualElement;if(A&&A.layout){const r=A.layout.layoutBox[e];if(r){t=FI(r)*(parseFloat(t)/100)}}}this.originPoint[e]=t})),s&&qN.postRender((()=>s(e,t))),null===(A=this.removeWillChange)||void 0===A||A.call(this),this.removeWillChange=JP(this.visualElement,"transform");const{animationState:i}=this.visualElement;i&&i.setActive("whileDrag",!0)},onMove:(e,t)=>{const{dragPropagation:A,dragDirectionLock:r,onDirectionLock:n,onDrag:s}=this.getProps();if(!A&&!this.openGlobalLock)return;const{offset:i}=t;if(r&&null===this.currentDirection)return this.currentDirection=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,A=null;Math.abs(e.y)>t?A="y":Math.abs(e.x)>t&&(A="x");return A}(i),void(null!==this.currentDirection&&n&&n(this.currentDirection));this.updateAxis("x",t.point,i),this.updateAxis("y",t.point,i),this.visualElement.render(),s&&s(e,t)},onSessionEnd:(e,t)=>this.stop(e,t),resumeAnimation:()=>YI((e=>{var t;return"paused"===this.getAnimationState(e)&&(null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.play())}))},{transformPagePoint:this.visualElement.getTransformPagePoint(),dragSnapToOrigin:r,contextWindow:uL(this.visualElement)})}stop(e,t){var A;null===(A=this.removeWillChange)||void 0===A||A.call(this);const r=this.isDragging;if(this.cancel(),!r)return;const{velocity:n}=t;this.startAnimation(n);const{onDragEnd:s}=this.getProps();s&&qN.postRender((()=>s(e,t)))}cancel(){this.isDragging=!1;const{projection:e,animationState:t}=this.visualElement;e&&(e.isAnimationBlocked=!1),this.panSession&&this.panSession.end(),this.panSession=void 0;const{dragPropagation:A}=this.getProps();!A&&this.openGlobalLock&&(this.openGlobalLock(),this.openGlobalLock=null),t&&t.setActive("whileDrag",!1)}updateAxis(e,t,A){const{drag:r}=this.getProps();if(!A||!fL(e,r,this.currentDirection))return;const n=this.getAxisMotionValue(e);let s=this.originPoint[e]+A[e];this.constraints&&this.constraints[e]&&(s=function(e,t,A){let{min:r,max:n}=t;return void 0!==r&&e<r?e=A?rP(r,e,A.min):Math.max(e,r):void 0!==n&&e>n&&(e=A?rP(n,e,A.max):Math.min(e,n)),e}(s,this.constraints[e],this.elastic[e])),n.set(s)}resolveConstraints(){var e;const{dragConstraints:t,dragElastic:A}=this.getProps(),r=this.visualElement.projection&&!this.visualElement.projection.layout?this.visualElement.projection.measure(!1):null===(e=this.visualElement.projection)||void 0===e?void 0:e.layout,n=this.constraints;t&&PI(t)?this.constraints||(this.constraints=this.resolveRefConstraints()):this.constraints=!(!t||!r)&&function(e,t){let{top:A,left:r,bottom:n,right:s}=t;return{x:zI(e.x,r,s),y:zI(e.y,A,n)}}(r.layoutBox,t),this.elastic=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:jI;return!1===e?e=0:!0===e&&(e=jI),{x:TI(e,"left","right"),y:TI(e,"top","bottom")}}(A),n!==this.constraints&&r&&this.constraints&&!this.hasMutatedConstraints&&YI((e=>{!1!==this.constraints&&this.getAxisMotionValue(e)&&(this.constraints[e]=function(e,t){const A={};return void 0!==t.min&&(A.min=t.min-e.min),void 0!==t.max&&(A.max=t.max-e.min),A}(r.layoutBox[e],this.constraints[e]))}))}resolveRefConstraints(){const{dragConstraints:e,onMeasureDragConstraints:t}=this.getProps();if(!e||!PI(e))return!1;const A=e.current;Ie(null!==A,"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");const{projection:r}=this.visualElement;if(!r||!r.layout)return!1;const n=function(e,t,A){const r=lL(e,A),{scroll:n}=t;return n&&(iL(r.x,n.offset.x),iL(r.y,n.offset.y)),r}(A,r.root,this.visualElement.getTransformPagePoint());let s=function(e,t){return{x:RI(e.x,t.x),y:RI(e.y,t.y)}}(r.layout.layoutBox,n);if(t){const e=t(function(e){let{x:t,y:A}=e;return{top:A.min,right:t.max,bottom:A.max,left:t.min}}(s));this.hasMutatedConstraints=!!e,e&&(s=HI(e))}return s}startAnimation(e){const{drag:t,dragMomentum:A,dragElastic:r,dragTransition:n,dragSnapToOrigin:s,onDragTransitionEnd:i}=this.getProps(),o=this.constraints||{},a=YI((i=>{if(!fL(i,t,this.currentDirection))return;let a=o&&o[i]||{};s&&(a={min:0,max:0});const l=r?200:1e6,u=r?40:1e7,c={type:"inertia",velocity:A?e[i]:0,bounceStiffness:l,bounceDamping:u,timeConstant:750,restDelta:1,restSpeed:10,...n,...a};return this.startAxisValueAnimation(i,c)}));return Promise.all(a).then(i)}startAxisValueAnimation(e,t){const A=this.getAxisMotionValue(e);return A.start(SP(e,A,0,t,this.visualElement,!1,JP(this.visualElement,e)))}stopAnimation(){YI((e=>this.getAxisMotionValue(e).stop()))}pauseAnimation(){YI((e=>{var t;return null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.pause()}))}getAnimationState(e){var t;return null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.state}getAxisMotionValue(e){const t=`_drag${e.toUpperCase()}`,A=this.visualElement.getProps(),r=A[t];return r||this.visualElement.getValue(e,(A.initial?A.initial[e]:void 0)||0)}snapToCursor(e){YI((t=>{const{drag:A}=this.getProps();if(!fL(t,A,this.currentDirection))return;const{projection:r}=this.visualElement,n=this.getAxisMotionValue(t);if(r&&r.layout){const{min:A,max:s}=r.layout.layoutBox[t];n.set(e[t]-rP(A,s,.5))}}))}scalePositionWithinConstraints(){if(!this.visualElement.current)return;const{drag:e,dragConstraints:t}=this.getProps(),{projection:A}=this.visualElement;if(!PI(t)||!A||!this.constraints)return;this.stopAnimation();const r={x:0,y:0};YI((e=>{const t=this.getAxisMotionValue(e);if(t&&!1!==this.constraints){const A=t.get();r[e]=function(e,t){let A=.5;const r=FI(e),n=FI(t);return n>r?A=AP(t.min,t.max-r,e.min):r>n&&(A=AP(e.min,e.max-n,t.min)),lD(0,1,A)}({min:A,max:A},this.constraints[e])}}));const{transformTemplate:n}=this.visualElement.getProps();this.visualElement.current.style.transform=n?n({},""):"none",A.root&&A.root.updateScroll(),A.updateLayout(),this.resolveConstraints(),YI((t=>{if(!fL(t,e,null))return;const A=this.getAxisMotionValue(t),{min:n,max:s}=this.constraints[t];A.set(rP(n,s,r[t]))}))}addListeners(){if(!this.visualElement.current)return;cL.set(this.visualElement,this);const e=gI(this.visualElement.current,"pointerdown",(e=>{const{drag:t,dragListener:A=!0}=this.getProps();t&&A&&this.start(e)})),t=()=>{const{dragConstraints:e}=this.getProps();PI(e)&&e.current&&(this.constraints=this.resolveRefConstraints())},{projection:A}=this.visualElement,r=A.addEventListener("measure",t);A&&!A.layout&&(A.root&&A.root.updateScroll(),A.updateLayout()),qN.read(t);const n=hI(window,"resize",(()=>this.scalePositionWithinConstraints())),s=A.addEventListener("didUpdate",(e=>{let{delta:t,hasLayoutChanged:A}=e;this.isDragging&&A&&(YI((e=>{const A=this.getAxisMotionValue(e);A&&(this.originPoint[e]+=t[e].translate,A.set(A.get()+t[e].translate))})),this.visualElement.render())}));return()=>{n(),e(),r(),s&&s()}}getProps(){const e=this.visualElement.getProps(),{drag:t=!1,dragDirectionLock:A=!1,dragPropagation:r=!1,dragConstraints:n=!1,dragElastic:s=jI,dragMomentum:i=!0}=e;return{...e,drag:t,dragDirectionLock:A,dragPropagation:r,dragConstraints:n,dragElastic:s,dragMomentum:i}}}function fL(e,t,A){return(!0===t||t===e)&&(null===A||A===e)}const hL=e=>(t,A)=>{e&&qN.postRender((()=>e(t,A)))};const gL=(0,n.createContext)({}),pL={hasAnimatedSinceResize:!0,hasEverUpdated:!1};function bL(e,t){return t.max===t.min?0:e/(t.max-t.min)*100}const mL={correct:(e,t)=>{if(!t.target)return e;if("string"===typeof e){if(!wD.test(e))return e;e=parseFloat(e)}return`${bL(e,t.target.x)}% ${bL(e,t.target.y)}%`}},vL={correct:(e,t)=>{let{treeScale:A,projectionDelta:r}=t;const n=e,s=nQ.parse(e);if(s.length>5)return n;const i=nQ.createTransformer(e),o="number"!==typeof s[0]?1:0,a=r.x.scale*A.x,l=r.y.scale*A.y;s[0+o]/=a,s[1+o]/=l;const u=rP(a,l,.5);return"number"===typeof s[2+o]&&(s[2+o]/=u),"number"===typeof s[3+o]&&(s[3+o]/=u),i(s)}},yL={};const{schedule:wL,cancel:BL}=KN(queueMicrotask,!1);class xL extends n.Component{componentDidMount(){const{visualElement:e,layoutGroup:t,switchLayoutGroup:A,layoutId:r}=this.props,{projection:n}=e;var s;s=EL,Object.assign(yL,s),n&&(t.group&&t.group.add(n),A&&A.register&&r&&A.register(n),n.root.didUpdate(),n.addEventListener("animationComplete",(()=>{this.safeToRemove()})),n.setOptions({...n.options,onExitComplete:()=>this.safeToRemove()})),pL.hasEverUpdated=!0}getSnapshotBeforeUpdate(e){const{layoutDependency:t,visualElement:A,drag:r,isPresent:n}=this.props,s=A.projection;return s?(s.isPresent=n,r||e.layoutDependency!==t||void 0===t?s.willUpdate():this.safeToRemove(),e.isPresent!==n&&(n?s.promote():s.relegate()||qN.postRender((()=>{const e=s.getStack();e&&e.members.length||this.safeToRemove()}))),null):null}componentDidUpdate(){const{projection:e}=this.props.visualElement;e&&(e.root.didUpdate(),wL.postRender((()=>{!e.currentAnimation&&e.isLead()&&this.safeToRemove()})))}componentWillUnmount(){const{visualElement:e,layoutGroup:t,switchLayoutGroup:A}=this.props,{projection:r}=e;r&&(r.scheduleCheckAfterUnmount(),t&&t.group&&t.group.remove(r),A&&A.deregister&&A.deregister(r))}safeToRemove(){const{safeToRemove:e}=this.props;e&&e()}render(){return null}}function CL(e){const[t,A]=function(){const e=(0,n.useContext)(ye);if(null===e)return[!0,null];const{isPresent:t,onExitComplete:A,register:r}=e,s=(0,n.useId)();(0,n.useEffect)((()=>r(s)),[]);const i=(0,n.useCallback)((()=>A&&A(s)),[s,A]);return!t&&A?[!1,i]:[!0]}(),r=(0,n.useContext)(De);return(0,ve.jsx)(xL,{...e,layoutGroup:r,switchLayoutGroup:(0,n.useContext)(gL),isPresent:t,safeToRemove:A})}const EL={borderRadius:{...mL,applyTo:["borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"]},borderTopLeftRadius:mL,borderTopRightRadius:mL,borderBottomLeftRadius:mL,borderBottomRightRadius:mL,boxShadow:vL},NL=["TopLeft","TopRight","BottomLeft","BottomRight"],DL=NL.length,QL=e=>"string"===typeof e?parseFloat(e):e,PL=e=>"number"===typeof e||wD.test(e);function IL(e,t){return void 0!==e[t]?e[t]:e.borderRadius}const LL=GL(0,.5,HQ),kL=GL(.5,.95,Qe);function GL(e,t,A){return r=>r<e?0:r>t?1:A(AP(e,t,r))}function FL(e,t){e.min=t.min,e.max=t.max}function SL(e,t){FL(e.x,t.x),FL(e.y,t.y)}function WL(e,t){e.translate=t.translate,e.scale=t.scale,e.originPoint=t.originPoint,e.origin=t.origin}function ZL(e,t,A,r,n){return e=eL(e-=t,1/A,r),void 0!==n&&(e=eL(e,1/n,r)),e}function XL(e,t,A,r,n){let[s,i,o]=A;!function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,n=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:e,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:e;yD.test(t)&&(t=parseFloat(t),t=rP(i.min,i.max,t/100)-i.min);if("number"!==typeof t)return;let o=rP(s.min,s.max,r);e===s&&(o-=t),e.min=ZL(e.min,t,A,o,n),e.max=ZL(e.max,t,A,o,n)}(e,t[s],t[i],t[o],t.scale,r,n)}const ML=["x","scaleX","originX"],zL=["y","scaleY","originY"];function RL(e,t,A,r){XL(e.x,t,ML,A?A.x:void 0,r?r.x:void 0),XL(e.y,t,zL,A?A.y:void 0,r?r.y:void 0)}function jL(e){return 0===e.translate&&1===e.scale}function TL(e){return jL(e.x)&&jL(e.y)}function UL(e,t){return e.min===t.min&&e.max===t.max}function VL(e,t){return Math.round(e.min)===Math.round(t.min)&&Math.round(e.max)===Math.round(t.max)}function OL(e,t){return VL(e.x,t.x)&&VL(e.y,t.y)}function YL(e){return FI(e.x)/FI(e.y)}function HL(e,t){return e.translate===t.translate&&e.scale===t.scale&&e.originPoint===t.originPoint}class KL{constructor(){this.members=[]}add(e){XP(this.members,e),e.scheduleRender()}remove(e){if(MP(this.members,e),e===this.prevLead&&(this.prevLead=void 0),e===this.lead){const e=this.members[this.members.length-1];e&&this.promote(e)}}relegate(e){const t=this.members.findIndex((t=>e===t));if(0===t)return!1;let A;for(let r=t;r>=0;r--){const e=this.members[r];if(!1!==e.isPresent){A=e;break}}return!!A&&(this.promote(A),!0)}promote(e,t){const A=this.lead;if(e!==A&&(this.prevLead=A,this.lead=e,e.show(),A)){A.instance&&A.scheduleRender(),e.scheduleRender(),e.resumeFrom=A,t&&(e.resumeFrom.preserveOpacity=!0),A.snapshot&&(e.snapshot=A.snapshot,e.snapshot.latestValues=A.animationValues||A.latestValues),e.root&&e.root.isUpdating&&(e.isLayoutDirty=!0);const{crossfade:r}=e.options;!1===r&&A.hide()}}exitAnimationComplete(){this.members.forEach((e=>{const{options:t,resumingFrom:A}=e;t.onExitComplete&&t.onExitComplete(),A&&A.options.onExitComplete&&A.options.onExitComplete()}))}scheduleRender(){this.members.forEach((e=>{e.instance&&e.scheduleRender(!1)}))}removeLeadSnapshot(){this.lead&&this.lead.snapshot&&(this.lead.snapshot=void 0)}}const qL=(e,t)=>e.depth-t.depth;class JL{constructor(){this.children=[],this.isDirty=!1}add(e){XP(this.children,e),this.isDirty=!0}remove(e){MP(this.children,e),this.isDirty=!0}forEach(e){this.isDirty&&this.children.sort(qL),this.isDirty=!1,this.children.forEach(e)}}function _L(e){const t=qP(e)?e.get():e;return WP(t)?t.toValue():t}const $L={type:"projectionFrame",totalNodes:0,resolvedTargetDeltas:0,recalculatedProjection:0},ek="undefined"!==typeof window&&void 0!==window.MotionDebug,tk=["","X","Y","Z"],Ak={visibility:"hidden"};let rk=0;function nk(e,t,A,r){const{latestValues:n}=t;n[e]&&(A[e]=n[e],t.setStaticValue(e,0),r&&(r[e]=0))}function sk(e){if(e.hasCheckedOptimisedAppear=!0,e.root===e)return;const{visualElement:t}=e.options;if(!t)return;const A=YP(t);if(window.MotionHasOptimisedAnimation(A,"transform")){const{layout:t,layoutId:r}=e.options;window.MotionCancelOptimisedAnimation(A,"transform",qN,!(t||r))}const{parent:r}=e;r&&!r.hasCheckedOptimisedAppear&&sk(r)}function ik(e){let{attachResizeListener:t,defaultParent:A,measureScroll:r,checkIsScrollRoot:n,resetTransform:s}=e;return class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null===A||void 0===A?void 0:A();this.id=rk++,this.animationId=0,this.children=new Set,this.options={},this.isTreeAnimating=!1,this.isAnimationBlocked=!1,this.isLayoutDirty=!1,this.isProjectionDirty=!1,this.isSharedProjectionDirty=!1,this.isTransformDirty=!1,this.updateManuallyBlocked=!1,this.updateBlockedByResize=!1,this.isUpdating=!1,this.isSVG=!1,this.needsReset=!1,this.shouldResetTransform=!1,this.hasCheckedOptimisedAppear=!1,this.treeScale={x:1,y:1},this.eventHandlers=new Map,this.hasTreeAnimated=!1,this.updateScheduled=!1,this.scheduleUpdate=()=>this.update(),this.projectionUpdateScheduled=!1,this.checkUpdateFailed=()=>{this.isUpdating&&(this.isUpdating=!1,this.clearAllSnapshots())},this.updateProjection=()=>{this.projectionUpdateScheduled=!1,ek&&($L.totalNodes=$L.resolvedTargetDeltas=$L.recalculatedProjection=0),this.nodes.forEach(lk),this.nodes.forEach(pk),this.nodes.forEach(bk),this.nodes.forEach(uk),ek&&window.MotionDebug.record($L)},this.resolvedRelativeTargetAt=0,this.hasProjected=!1,this.isVisible=!0,this.animationProgress=0,this.sharedNodes=new Map,this.latestValues=e,this.root=t?t.root||t:this,this.path=t?[...t.path,t]:[],this.parent=t,this.depth=t?t.depth+1:0;for(let A=0;A<this.path.length;A++)this.path[A].shouldResetTransform=!0;this.root===this&&(this.nodes=new JL)}addEventListener(e,t){return this.eventHandlers.has(e)||this.eventHandlers.set(e,new zP),this.eventHandlers.get(e).add(t)}notifyListeners(e){const t=this.eventHandlers.get(e);for(var A=arguments.length,r=new Array(A>1?A-1:0),n=1;n<A;n++)r[n-1]=arguments[n];t&&t.notify(...r)}hasListeners(e){return this.eventHandlers.has(e)}mount(e){let A=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.root.hasTreeAnimated;if(this.instance)return;var r;this.isSVG=(r=e)instanceof SVGElement&&"svg"!==r.tagName,this.instance=e;const{layoutId:n,layout:s,visualElement:i}=this.options;if(i&&!i.current&&i.mount(e),this.root.nodes.add(this),this.parent&&this.parent.children.add(this),A&&(s||n)&&(this.isLayoutDirty=!0),t){let A;const r=()=>this.root.updateBlockedByResize=!1;t(e,(()=>{this.root.updateBlockedByResize=!0,A&&A(),A=function(e,t){const A=vQ.now(),r=n=>{let{timestamp:s}=n;const i=s-A;i>=t&&(JN(r),e(i-t))};return qN.read(r,!0),()=>JN(r)}(r,250),pL.hasAnimatedSinceResize&&(pL.hasAnimatedSinceResize=!1,this.nodes.forEach(gk))}))}n&&this.root.registerSharedNode(n,this),!1!==this.options.animate&&i&&(n||s)&&this.addEventListener("didUpdate",(e=>{let{delta:t,hasLayoutChanged:A,hasRelativeTargetChanged:r,layout:n}=e;if(this.isTreeAnimationBlocked())return this.target=void 0,void(this.relativeTarget=void 0);const s=this.options.transition||i.getDefaultTransition()||xk,{onLayoutAnimationStart:o,onLayoutAnimationComplete:a}=i.getProps(),l=!this.targetLayout||!OL(this.targetLayout,n)||r,u=!A&&r;if(this.options.layoutRoot||this.resumeFrom&&this.resumeFrom.instance||u||A&&(l||!this.currentAnimation)){this.resumeFrom&&(this.resumingFrom=this.resumeFrom,this.resumingFrom.resumingFrom=void 0),this.setAnimationOrigin(t,u);const e={...jN(s,"layout"),onPlay:o,onComplete:a};(i.shouldReduceMotion||this.options.layoutRoot)&&(e.delay=0,e.type=!1),this.startAnimation(e)}else A||gk(this),this.isLead()&&this.options.onExitComplete&&this.options.onExitComplete();this.targetLayout=n}))}unmount(){this.options.layoutId&&this.willUpdate(),this.root.nodes.remove(this);const e=this.getStack();e&&e.remove(this),this.parent&&this.parent.children.delete(this),this.instance=void 0,JN(this.updateProjection)}blockUpdate(){this.updateManuallyBlocked=!0}unblockUpdate(){this.updateManuallyBlocked=!1}isUpdateBlocked(){return this.updateManuallyBlocked||this.updateBlockedByResize}isTreeAnimationBlocked(){return this.isAnimationBlocked||this.parent&&this.parent.isTreeAnimationBlocked()||!1}startUpdate(){this.isUpdateBlocked()||(this.isUpdating=!0,this.nodes&&this.nodes.forEach(mk),this.animationId++)}getTransformTemplate(){const{visualElement:e}=this.options;return e&&e.getProps().transformTemplate}willUpdate(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this.root.hasTreeAnimated=!0,this.root.isUpdateBlocked())return void(this.options.onExitComplete&&this.options.onExitComplete());if(window.MotionCancelOptimisedAnimation&&!this.hasCheckedOptimisedAppear&&sk(this),!this.root.isUpdating&&this.root.startUpdate(),this.isLayoutDirty)return;this.isLayoutDirty=!0;for(let n=0;n<this.path.length;n++){const e=this.path[n];e.shouldResetTransform=!0,e.updateScroll("snapshot"),e.options.layoutRoot&&e.willUpdate(!1)}const{layoutId:t,layout:A}=this.options;if(void 0===t&&!A)return;const r=this.getTransformTemplate();this.prevTransformTemplateValue=r?r(this.latestValues,""):void 0,this.updateSnapshot(),e&&this.notifyListeners("willUpdate")}update(){this.updateScheduled=!1;if(this.isUpdateBlocked())return this.unblockUpdate(),this.clearAllSnapshots(),void this.nodes.forEach(dk);this.isUpdating||this.nodes.forEach(fk),this.isUpdating=!1,this.nodes.forEach(hk),this.nodes.forEach(ok),this.nodes.forEach(ak),this.clearAllSnapshots();const e=vQ.now();_N.delta=lD(0,1e3/60,e-_N.timestamp),_N.timestamp=e,_N.isProcessing=!0,$N.update.process(_N),$N.preRender.process(_N),$N.render.process(_N),_N.isProcessing=!1}didUpdate(){this.updateScheduled||(this.updateScheduled=!0,wL.read(this.scheduleUpdate))}clearAllSnapshots(){this.nodes.forEach(ck),this.sharedNodes.forEach(vk)}scheduleUpdateProjection(){this.projectionUpdateScheduled||(this.projectionUpdateScheduled=!0,qN.preRender(this.updateProjection,!1,!0))}scheduleCheckAfterUnmount(){qN.postRender((()=>{this.isLayoutDirty?this.root.didUpdate():this.root.checkUpdateFailed()}))}updateSnapshot(){!this.snapshot&&this.instance&&(this.snapshot=this.measure())}updateLayout(){if(!this.instance)return;if(this.updateScroll(),(!this.options.alwaysMeasureLayout||!this.isLead())&&!this.isLayoutDirty)return;if(this.resumeFrom&&!this.resumeFrom.instance)for(let A=0;A<this.path.length;A++){this.path[A].updateScroll()}const e=this.layout;this.layout=this.measure(!1),this.layoutCorrected=OI(),this.isLayoutDirty=!1,this.projectionDelta=void 0,this.notifyListeners("measure",this.layout.layoutBox);const{visualElement:t}=this.options;t&&t.notify("LayoutMeasure",this.layout.layoutBox,e?e.layoutBox:void 0)}updateScroll(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"measure",t=Boolean(this.options.layoutScroll&&this.instance);if(this.scroll&&this.scroll.animationId===this.root.animationId&&this.scroll.phase===e&&(t=!1),t){const t=n(this.instance);this.scroll={animationId:this.root.animationId,phase:e,isRoot:t,offset:r(this.instance),wasRoot:this.scroll?this.scroll.isRoot:t}}}resetTransform(){if(!s)return;const e=this.isLayoutDirty||this.shouldResetTransform||this.options.alwaysMeasureLayout,t=this.projectionDelta&&!TL(this.projectionDelta),A=this.getTransformTemplate(),r=A?A(this.latestValues,""):void 0,n=r!==this.prevTransformTemplateValue;e&&(t||JI(this.latestValues)||n)&&(s(this.instance,r),this.shouldResetTransform=!1,this.scheduleRender())}measure(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const t=this.measurePageBox();let A=this.removeElementScroll(t);var r;return e&&(A=this.removeTransform(A)),Nk((r=A).x),Nk(r.y),{animationId:this.root.animationId,measuredBox:t,layoutBox:A,latestValues:{},source:this.id}}measurePageBox(){var e;const{visualElement:t}=this.options;if(!t)return OI();const A=t.measureViewportBox();if(!((null===(e=this.scroll)||void 0===e?void 0:e.wasRoot)||this.path.some(Qk))){const{scroll:e}=this.root;e&&(iL(A.x,e.offset.x),iL(A.y,e.offset.y))}return A}removeElementScroll(e){var t;const A=OI();if(SL(A,e),null===(t=this.scroll)||void 0===t?void 0:t.wasRoot)return A;for(let r=0;r<this.path.length;r++){const t=this.path[r],{scroll:n,options:s}=t;t!==this.root&&n&&s.layoutScroll&&(n.wasRoot&&SL(A,e),iL(A.x,n.offset.x),iL(A.y,n.offset.y))}return A}applyTransform(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const A=OI();SL(A,e);for(let r=0;r<this.path.length;r++){const e=this.path[r];!t&&e.options.layoutScroll&&e.scroll&&e!==e.root&&aL(A,{x:-e.scroll.offset.x,y:-e.scroll.offset.y}),JI(e.latestValues)&&aL(A,e.latestValues)}return JI(this.latestValues)&&aL(A,this.latestValues),A}removeTransform(e){const t=OI();SL(t,e);for(let A=0;A<this.path.length;A++){const e=this.path[A];if(!e.instance)continue;if(!JI(e.latestValues))continue;qI(e.latestValues)&&e.updateSnapshot();const r=OI();SL(r,e.measurePageBox()),RL(t,e.latestValues,e.snapshot?e.snapshot.layoutBox:void 0,r)}return JI(this.latestValues)&&RL(t,this.latestValues),t}setTargetDelta(e){this.targetDelta=e,this.root.scheduleUpdateProjection(),this.isProjectionDirty=!0}setOptions(e){this.options={...this.options,...e,crossfade:void 0===e.crossfade||e.crossfade}}clearMeasurements(){this.scroll=void 0,this.layout=void 0,this.snapshot=void 0,this.prevTransformTemplateValue=void 0,this.targetDelta=void 0,this.target=void 0,this.isLayoutDirty=!1}forceRelativeParentToResolveTarget(){this.relativeParent&&this.relativeParent.resolvedRelativeTargetAt!==_N.timestamp&&this.relativeParent.resolveTargetDelta(!0)}resolveTargetDelta(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];var t;const A=this.getLead();this.isProjectionDirty||(this.isProjectionDirty=A.isProjectionDirty),this.isTransformDirty||(this.isTransformDirty=A.isTransformDirty),this.isSharedProjectionDirty||(this.isSharedProjectionDirty=A.isSharedProjectionDirty);const r=Boolean(this.resumingFrom)||this!==A;if(!(e||r&&this.isSharedProjectionDirty||this.isProjectionDirty||(null===(t=this.parent)||void 0===t?void 0:t.isProjectionDirty)||this.attemptToResolveRelativeTarget||this.root.updateBlockedByResize))return;const{layout:n,layoutId:s}=this.options;if(this.layout&&(n||s)){if(this.resolvedRelativeTargetAt=_N.timestamp,!this.targetDelta&&!this.relativeTarget){const e=this.getClosestProjectingParent();e&&e.layout&&1!==this.animationProgress?(this.relativeParent=e,this.forceRelativeParentToResolveTarget(),this.relativeTarget=OI(),this.relativeTargetOrigin=OI(),MI(this.relativeTargetOrigin,this.layout.layoutBox,e.layout.layoutBox),SL(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}if(this.relativeTarget||this.targetDelta){var i,o,a;if(this.target||(this.target=OI(),this.targetWithTransforms=OI()),this.relativeTarget&&this.relativeTargetOrigin&&this.relativeParent&&this.relativeParent.target?(this.forceRelativeParentToResolveTarget(),i=this.target,o=this.relativeTarget,a=this.relativeParent.target,ZI(i.x,o.x,a.x),ZI(i.y,o.y,a.y)):this.targetDelta?(Boolean(this.resumingFrom)?this.target=this.applyTransform(this.layout.layoutBox):SL(this.target,this.layout.layoutBox),rL(this.target,this.targetDelta)):SL(this.target,this.layout.layoutBox),this.attemptToResolveRelativeTarget){this.attemptToResolveRelativeTarget=!1;const e=this.getClosestProjectingParent();e&&Boolean(e.resumingFrom)===Boolean(this.resumingFrom)&&!e.options.layoutScroll&&e.target&&1!==this.animationProgress?(this.relativeParent=e,this.forceRelativeParentToResolveTarget(),this.relativeTarget=OI(),this.relativeTargetOrigin=OI(),MI(this.relativeTargetOrigin,this.target,e.target),SL(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}ek&&$L.resolvedTargetDeltas++}}}getClosestProjectingParent(){if(this.parent&&!qI(this.parent.latestValues)&&!_I(this.parent.latestValues))return this.parent.isProjecting()?this.parent:this.parent.getClosestProjectingParent()}isProjecting(){return Boolean((this.relativeTarget||this.targetDelta||this.options.layoutRoot)&&this.layout)}calcProjection(){var e;const t=this.getLead(),A=Boolean(this.resumingFrom)||this!==t;let r=!0;if((this.isProjectionDirty||(null===(e=this.parent)||void 0===e?void 0:e.isProjectionDirty))&&(r=!1),A&&(this.isSharedProjectionDirty||this.isTransformDirty)&&(r=!1),this.resolvedRelativeTargetAt===_N.timestamp&&(r=!1),r)return;const{layout:n,layoutId:s}=this.options;if(this.isTreeAnimating=Boolean(this.parent&&this.parent.isTreeAnimating||this.currentAnimation||this.pendingAnimation),this.isTreeAnimating||(this.targetDelta=this.relativeTarget=void 0),!this.layout||!n&&!s)return;SL(this.layoutCorrected,this.layout.layoutBox);const i=this.treeScale.x,o=this.treeScale.y;!function(e,t,A){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const n=A.length;if(!n)return;let s,i;t.x=t.y=1;for(let o=0;o<n;o++){s=A[o],i=s.projectionDelta;const{visualElement:n}=s.options;n&&n.props.style&&"contents"===n.props.style.display||(r&&s.options.layoutScroll&&s.scroll&&s!==s.root&&aL(e,{x:-s.scroll.offset.x,y:-s.scroll.offset.y}),i&&(t.x*=i.x.scale,t.y*=i.y.scale,rL(e,i)),r&&JI(s.latestValues)&&aL(e,s.latestValues))}t.x<sL&&t.x>nL&&(t.x=1),t.y<sL&&t.y>nL&&(t.y=1)}(this.layoutCorrected,this.treeScale,this.path,A),!t.layout||t.target||1===this.treeScale.x&&1===this.treeScale.y||(t.target=t.layout.layoutBox,t.targetWithTransforms=OI());const{target:a}=t;a?(this.projectionDelta&&this.prevProjectionDelta?(WL(this.prevProjectionDelta.x,this.projectionDelta.x),WL(this.prevProjectionDelta.y,this.projectionDelta.y)):this.createProjectionDeltas(),WI(this.projectionDelta,this.layoutCorrected,a,this.latestValues),this.treeScale.x===i&&this.treeScale.y===o&&HL(this.projectionDelta.x,this.prevProjectionDelta.x)&&HL(this.projectionDelta.y,this.prevProjectionDelta.y)||(this.hasProjected=!0,this.scheduleRender(),this.notifyListeners("projectionUpdate",a)),ek&&$L.recalculatedProjection++):this.prevProjectionDelta&&(this.createProjectionDeltas(),this.scheduleRender())}hide(){this.isVisible=!1}show(){this.isVisible=!0}scheduleRender(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];var t;if(null===(t=this.options.visualElement)||void 0===t||t.scheduleRender(),e){const e=this.getStack();e&&e.scheduleRender()}this.resumingFrom&&!this.resumingFrom.instance&&(this.resumingFrom=void 0)}createProjectionDeltas(){this.prevProjectionDelta=VI(),this.projectionDelta=VI(),this.projectionDeltaWithTransform=VI()}setAnimationOrigin(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const A=this.snapshot,r=A?A.latestValues:{},n={...this.latestValues},s=VI();this.relativeParent&&this.relativeParent.options.layoutRoot||(this.relativeTarget=this.relativeTargetOrigin=void 0),this.attemptToResolveRelativeTarget=!t;const i=OI(),o=(A?A.source:void 0)!==(this.layout?this.layout.source:void 0),a=this.getStack(),l=!a||a.members.length<=1,u=Boolean(o&&!l&&!0===this.options.crossfade&&!this.path.some(Bk));let c;this.animationProgress=0,this.mixTargetDelta=t=>{const A=t/1e3;var a,d,f,h,g,p;yk(s.x,e.x,A),yk(s.y,e.y,A),this.setTargetDelta(s),this.relativeTarget&&this.relativeTargetOrigin&&this.layout&&this.relativeParent&&this.relativeParent.layout&&(MI(i,this.layout.layoutBox,this.relativeParent.layout.layoutBox),f=this.relativeTarget,h=this.relativeTargetOrigin,g=i,p=A,wk(f.x,h.x,g.x,p),wk(f.y,h.y,g.y,p),c&&(a=this.relativeTarget,d=c,UL(a.x,d.x)&&UL(a.y,d.y))&&(this.isProjectionDirty=!1),c||(c=OI()),SL(c,this.relativeTarget)),o&&(this.animationValues=n,function(e,t,A,r,n,s){n?(e.opacity=rP(0,void 0!==A.opacity?A.opacity:1,LL(r)),e.opacityExit=rP(void 0!==t.opacity?t.opacity:1,0,kL(r))):s&&(e.opacity=rP(void 0!==t.opacity?t.opacity:1,void 0!==A.opacity?A.opacity:1,r));for(let i=0;i<DL;i++){const n=`border${NL[i]}Radius`;let s=IL(t,n),o=IL(A,n);void 0===s&&void 0===o||(s||(s=0),o||(o=0),0===s||0===o||PL(s)===PL(o)?(e[n]=Math.max(rP(QL(s),QL(o),r),0),(yD.test(o)||yD.test(s))&&(e[n]+="%")):e[n]=o)}(t.rotate||A.rotate)&&(e.rotate=rP(t.rotate||0,A.rotate||0,r))}(n,r,this.latestValues,A,u,l)),this.root.scheduleUpdateProjection(),this.scheduleRender(),this.animationProgress=A},this.mixTargetDelta(this.options.layoutRoot?1e3:0)}startAnimation(e){this.notifyListeners("animationStart"),this.currentAnimation&&this.currentAnimation.stop(),this.resumingFrom&&this.resumingFrom.currentAnimation&&this.resumingFrom.currentAnimation.stop(),this.pendingAnimation&&(JN(this.pendingAnimation),this.pendingAnimation=void 0),this.pendingAnimation=qN.update((()=>{pL.hasAnimatedSinceResize=!0,this.currentAnimation=function(e,t,A){const r=qP(e)?e:TP(e);return r.start(SP("",r,t,A)),r.animation}(0,1e3,{...e,onUpdate:t=>{this.mixTargetDelta(t),e.onUpdate&&e.onUpdate(t)},onComplete:()=>{e.onComplete&&e.onComplete(),this.completeAnimation()}}),this.resumingFrom&&(this.resumingFrom.currentAnimation=this.currentAnimation),this.pendingAnimation=void 0}))}completeAnimation(){this.resumingFrom&&(this.resumingFrom.currentAnimation=void 0,this.resumingFrom.preserveOpacity=void 0);const e=this.getStack();e&&e.exitAnimationComplete(),this.resumingFrom=this.currentAnimation=this.animationValues=void 0,this.notifyListeners("animationComplete")}finishAnimation(){this.currentAnimation&&(this.mixTargetDelta&&this.mixTargetDelta(1e3),this.currentAnimation.stop()),this.completeAnimation()}applyTransformsToTarget(){const e=this.getLead();let{targetWithTransforms:t,target:A,layout:r,latestValues:n}=e;if(t&&A&&r){if(this!==e&&this.layout&&r&&Dk(this.options.animationType,this.layout.layoutBox,r.layoutBox)){A=this.target||OI();const t=FI(this.layout.layoutBox.x);A.x.min=e.target.x.min,A.x.max=A.x.min+t;const r=FI(this.layout.layoutBox.y);A.y.min=e.target.y.min,A.y.max=A.y.min+r}SL(t,A),aL(t,n),WI(this.projectionDeltaWithTransform,this.layoutCorrected,t,n)}}registerSharedNode(e,t){this.sharedNodes.has(e)||this.sharedNodes.set(e,new KL);this.sharedNodes.get(e).add(t);const A=t.options.initialPromotionConfig;t.promote({transition:A?A.transition:void 0,preserveFollowOpacity:A&&A.shouldPreserveFollowOpacity?A.shouldPreserveFollowOpacity(t):void 0})}isLead(){const e=this.getStack();return!e||e.lead===this}getLead(){var e;const{layoutId:t}=this.options;return t&&(null===(e=this.getStack())||void 0===e?void 0:e.lead)||this}getPrevLead(){var e;const{layoutId:t}=this.options;return t?null===(e=this.getStack())||void 0===e?void 0:e.prevLead:void 0}getStack(){const{layoutId:e}=this.options;if(e)return this.root.sharedNodes.get(e)}promote(){let{needsReset:e,transition:t,preserveFollowOpacity:A}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const r=this.getStack();r&&r.promote(this,A),e&&(this.projectionDelta=void 0,this.needsReset=!0),t&&this.setOptions({transition:t})}relegate(){const e=this.getStack();return!!e&&e.relegate(this)}resetSkewAndRotation(){const{visualElement:e}=this.options;if(!e)return;let t=!1;const{latestValues:A}=e;if((A.z||A.rotate||A.rotateX||A.rotateY||A.rotateZ||A.skewX||A.skewY)&&(t=!0),!t)return;const r={};A.z&&nk("z",e,r,this.animationValues);for(let n=0;n<tk.length;n++)nk(`rotate${tk[n]}`,e,r,this.animationValues),nk(`skew${tk[n]}`,e,r,this.animationValues);e.render();for(const n in r)e.setStaticValue(n,r[n]),this.animationValues&&(this.animationValues[n]=r[n]);e.scheduleRender()}getProjectionStyles(e){var t,A;if(!this.instance||this.isSVG)return;if(!this.isVisible)return Ak;const r={visibility:""},n=this.getTransformTemplate();if(this.needsReset)return this.needsReset=!1,r.opacity="",r.pointerEvents=_L(null===e||void 0===e?void 0:e.pointerEvents)||"",r.transform=n?n(this.latestValues,""):"none",r;const s=this.getLead();if(!this.projectionDelta||!this.layout||!s.target){const t={};return this.options.layoutId&&(t.opacity=void 0!==this.latestValues.opacity?this.latestValues.opacity:1,t.pointerEvents=_L(null===e||void 0===e?void 0:e.pointerEvents)||""),this.hasProjected&&!JI(this.latestValues)&&(t.transform=n?n({},""):"none",this.hasProjected=!1),t}const i=s.animationValues||s.latestValues;this.applyTransformsToTarget(),r.transform=function(e,t,A){let r="";const n=e.x.translate/t.x,s=e.y.translate/t.y,i=(null===A||void 0===A?void 0:A.z)||0;if((n||s||i)&&(r=`translate3d(${n}px, ${s}px, ${i}px) `),1===t.x&&1===t.y||(r+=`scale(${1/t.x}, ${1/t.y}) `),A){const{transformPerspective:e,rotate:t,rotateX:n,rotateY:s,skewX:i,skewY:o}=A;e&&(r=`perspective(${e}px) ${r}`),t&&(r+=`rotate(${t}deg) `),n&&(r+=`rotateX(${n}deg) `),s&&(r+=`rotateY(${s}deg) `),i&&(r+=`skewX(${i}deg) `),o&&(r+=`skewY(${o}deg) `)}const o=e.x.scale*t.x,a=e.y.scale*t.y;return 1===o&&1===a||(r+=`scale(${o}, ${a})`),r||"none"}(this.projectionDeltaWithTransform,this.treeScale,i),n&&(r.transform=n(i,r.transform));const{x:o,y:a}=this.projectionDelta;r.transformOrigin=`${100*o.origin}% ${100*a.origin}% 0`,s.animationValues?r.opacity=s===this?null!==(A=null!==(t=i.opacity)&&void 0!==t?t:this.latestValues.opacity)&&void 0!==A?A:1:this.preserveOpacity?this.latestValues.opacity:i.opacityExit:r.opacity=s===this?void 0!==i.opacity?i.opacity:"":void 0!==i.opacityExit?i.opacityExit:0;for(const l in yL){if(void 0===i[l])continue;const{correct:e,applyTo:t}=yL[l],A="none"===r.transform?i[l]:e(i[l],s);if(t){const e=t.length;for(let n=0;n<e;n++)r[t[n]]=A}else r[l]=A}return this.options.layoutId&&(r.pointerEvents=s===this?_L(null===e||void 0===e?void 0:e.pointerEvents)||"":"none"),r}clearSnapshot(){this.resumeFrom=this.snapshot=void 0}resetTree(){this.root.nodes.forEach((e=>{var t;return null===(t=e.currentAnimation)||void 0===t?void 0:t.stop()})),this.root.nodes.forEach(dk),this.root.sharedNodes.clear()}}}function ok(e){e.updateLayout()}function ak(e){var t;const A=(null===(t=e.resumeFrom)||void 0===t?void 0:t.snapshot)||e.snapshot;if(e.isLead()&&e.layout&&A&&e.hasListeners("didUpdate")){const{layoutBox:t,measuredBox:r}=e.layout,{animationType:n}=e.options,s=A.source!==e.layout.source;"size"===n?YI((e=>{const r=s?A.measuredBox[e]:A.layoutBox[e],n=FI(r);r.min=t[e].min,r.max=r.min+n})):Dk(n,A.layoutBox,t)&&YI((r=>{const n=s?A.measuredBox[r]:A.layoutBox[r],i=FI(t[r]);n.max=n.min+i,e.relativeTarget&&!e.currentAnimation&&(e.isProjectionDirty=!0,e.relativeTarget[r].max=e.relativeTarget[r].min+i)}));const i=VI();WI(i,t,A.layoutBox);const o=VI();s?WI(o,e.applyTransform(r,!0),A.measuredBox):WI(o,t,A.layoutBox);const a=!TL(i);let l=!1;if(!e.resumeFrom){const r=e.getClosestProjectingParent();if(r&&!r.resumeFrom){const{snapshot:n,layout:s}=r;if(n&&s){const i=OI();MI(i,A.layoutBox,n.layoutBox);const o=OI();MI(o,t,s.layoutBox),OL(i,o)||(l=!0),r.options.layoutRoot&&(e.relativeTarget=o,e.relativeTargetOrigin=i,e.relativeParent=r)}}}e.notifyListeners("didUpdate",{layout:t,snapshot:A,delta:o,layoutDelta:i,hasLayoutChanged:a,hasRelativeTargetChanged:l})}else if(e.isLead()){const{onExitComplete:t}=e.options;t&&t()}e.options.transition=void 0}function lk(e){ek&&$L.totalNodes++,e.parent&&(e.isProjecting()||(e.isProjectionDirty=e.parent.isProjectionDirty),e.isSharedProjectionDirty||(e.isSharedProjectionDirty=Boolean(e.isProjectionDirty||e.parent.isProjectionDirty||e.parent.isSharedProjectionDirty)),e.isTransformDirty||(e.isTransformDirty=e.parent.isTransformDirty))}function uk(e){e.isProjectionDirty=e.isSharedProjectionDirty=e.isTransformDirty=!1}function ck(e){e.clearSnapshot()}function dk(e){e.clearMeasurements()}function fk(e){e.isLayoutDirty=!1}function hk(e){const{visualElement:t}=e.options;t&&t.getProps().onBeforeLayoutMeasure&&t.notify("BeforeLayoutMeasure"),e.resetTransform()}function gk(e){e.finishAnimation(),e.targetDelta=e.relativeTarget=e.target=void 0,e.isProjectionDirty=!0}function pk(e){e.resolveTargetDelta()}function bk(e){e.calcProjection()}function mk(e){e.resetSkewAndRotation()}function vk(e){e.removeLeadSnapshot()}function yk(e,t,A){e.translate=rP(t.translate,0,A),e.scale=rP(t.scale,1,A),e.origin=t.origin,e.originPoint=t.originPoint}function wk(e,t,A,r){e.min=rP(t.min,A.min,r),e.max=rP(t.max,A.max,r)}function Bk(e){return e.animationValues&&void 0!==e.animationValues.opacityExit}const xk={duration:.45,ease:[.4,0,.1,1]},Ck=e=>"undefined"!==typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().includes(e),Ek=Ck("applewebkit/")&&!Ck("chrome/")?Math.round:Qe;function Nk(e){e.min=Ek(e.min),e.max=Ek(e.max)}function Dk(e,t,A){return"position"===e||"preserve-aspect"===e&&(r=YL(t),n=YL(A),s=.2,!(Math.abs(r-n)<=s));var r,n,s}function Qk(e){var t;return e!==e.root&&(null===(t=e.scroll)||void 0===t?void 0:t.wasRoot)}const Pk=ik({attachResizeListener:(e,t)=>hI(e,"resize",t),measureScroll:()=>({x:document.documentElement.scrollLeft||document.body.scrollLeft,y:document.documentElement.scrollTop||document.body.scrollTop}),checkIsScrollRoot:()=>!0}),Ik={current:void 0},Lk=ik({measureScroll:e=>({x:e.scrollLeft,y:e.scrollTop}),defaultParent:()=>{if(!Ik.current){const e=new Pk({});e.mount(window),e.setOptions({layoutScroll:!0}),Ik.current=e}return Ik.current},resetTransform:(e,t)=>{e.style.transform=void 0!==t?t:"none"},checkIsScrollRoot:e=>Boolean("fixed"===window.getComputedStyle(e).position)}),kk={pan:{Feature:class extends aI{constructor(){super(...arguments),this.removePointerDownListener=Qe}onPointerDown(e){this.session=new bI(e,this.createPanHandlers(),{transformPagePoint:this.node.getTransformPagePoint(),contextWindow:uL(this.node)})}createPanHandlers(){const{onPanSessionStart:e,onPanStart:t,onPan:A,onPanEnd:r}=this.node.getProps();return{onSessionStart:hL(e),onStart:hL(t),onMove:A,onEnd:(e,t)=>{delete this.session,r&&qN.postRender((()=>r(e,t)))}}}mount(){this.removePointerDownListener=gI(this.node.current,"pointerdown",(e=>this.onPointerDown(e)))}update(){this.session&&this.session.updateHandlers(this.createPanHandlers())}unmount(){this.removePointerDownListener(),this.session&&this.session.end()}}},drag:{Feature:class extends aI{constructor(e){super(e),this.removeGroupControls=Qe,this.removeListeners=Qe,this.controls=new dL(e)}mount(){const{dragControls:e}=this.node.getProps();e&&(this.removeGroupControls=e.subscribe(this.controls)),this.removeListeners=this.controls.addListeners()||Qe}unmount(){this.removeGroupControls(),this.removeListeners()}},ProjectionNode:Lk,MeasureLayout:CL}};function Gk(e,t){const A=t?"pointerenter":"pointerleave",r=t?"onHoverStart":"onHoverEnd";return gI(e.current,A,((A,n)=>{if("touch"===A.pointerType||QI())return;const s=e.getProps();e.animationState&&s.whileHover&&e.animationState.setActive("whileHover",t);const i=s[r];i&&qN.postRender((()=>i(A,n)))}),{passive:!e.getProps()[r]})}const Fk=(e,t)=>!!t&&(e===t||Fk(e,t.parentElement));function Sk(e,t){if(!t)return;const A=new PointerEvent("pointer"+e);t(A,dI(A))}const Wk=new WeakMap,Zk=new WeakMap,Xk=e=>{const t=Wk.get(e.target);t&&t(e)},Mk=e=>{e.forEach(Xk)};function zk(e,t,A){const r=function(e){let{root:t,...A}=e;const r=t||document;Zk.has(r)||Zk.set(r,{});const n=Zk.get(r),s=JSON.stringify(A);return n[s]||(n[s]=new IntersectionObserver(Mk,{root:t,...A})),n[s]}(t);return Wk.set(e,A),r.observe(e),()=>{Wk.delete(e),r.unobserve(e)}}const Rk={some:0,all:1};const jk={inView:{Feature:class extends aI{constructor(){super(...arguments),this.hasEnteredView=!1,this.isInView=!1}startObserver(){this.unmount();const{viewport:e={}}=this.node.getProps(),{root:t,margin:A,amount:r="some",once:n}=e,s={root:t?t.current:void 0,rootMargin:A,threshold:"number"===typeof r?r:Rk[r]};return zk(this.node.current,s,(e=>{const{isIntersecting:t}=e;if(this.isInView===t)return;if(this.isInView=t,n&&!t&&this.hasEnteredView)return;t&&(this.hasEnteredView=!0),this.node.animationState&&this.node.animationState.setActive("whileInView",t);const{onViewportEnter:A,onViewportLeave:r}=this.node.getProps(),s=t?A:r;s&&s(e)}))}mount(){this.startObserver()}update(){if("undefined"===typeof IntersectionObserver)return;const{props:e,prevProps:t}=this.node,A=["amount","margin","root"].some(function(e){let{viewport:t={}}=e,{viewport:A={}}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return e=>t[e]!==A[e]}(e,t));A&&this.startObserver()}unmount(){}}},tap:{Feature:class extends aI{constructor(){super(...arguments),this.removeStartListeners=Qe,this.removeEndListeners=Qe,this.removeAccessibleListeners=Qe,this.startPointerPress=(e,t)=>{if(this.isPressing)return;this.removeEndListeners();const A=this.node.getProps(),r=gI(window,"pointerup",((e,t)=>{if(!this.checkPressEnd())return;const{onTap:A,onTapCancel:r,globalTapTarget:n}=this.node.getProps(),s=n||Fk(this.node.current,e.target)?A:r;s&&qN.update((()=>s(e,t)))}),{passive:!(A.onTap||A.onPointerUp)}),n=gI(window,"pointercancel",((e,t)=>this.cancelPress(e,t)),{passive:!(A.onTapCancel||A.onPointerCancel)});this.removeEndListeners=tP(r,n),this.startPress(e,t)},this.startAccessiblePress=()=>{const e=hI(this.node.current,"keydown",(e=>{if("Enter"!==e.key||this.isPressing)return;this.removeEndListeners(),this.removeEndListeners=hI(this.node.current,"keyup",(e=>{"Enter"===e.key&&this.checkPressEnd()&&Sk("up",((e,t)=>{const{onTap:A}=this.node.getProps();A&&qN.postRender((()=>A(e,t)))}))})),Sk("down",((e,t)=>{this.startPress(e,t)}))})),t=hI(this.node.current,"blur",(()=>{this.isPressing&&Sk("cancel",((e,t)=>this.cancelPress(e,t)))}));this.removeAccessibleListeners=tP(e,t)}}startPress(e,t){this.isPressing=!0;const{onTapStart:A,whileTap:r}=this.node.getProps();r&&this.node.animationState&&this.node.animationState.setActive("whileTap",!0),A&&qN.postRender((()=>A(e,t)))}checkPressEnd(){this.removeEndListeners(),this.isPressing=!1;return this.node.getProps().whileTap&&this.node.animationState&&this.node.animationState.setActive("whileTap",!1),!QI()}cancelPress(e,t){if(!this.checkPressEnd())return;const{onTapCancel:A}=this.node.getProps();A&&qN.postRender((()=>A(e,t)))}mount(){const e=this.node.getProps(),t=gI(e.globalTapTarget?window:this.node.current,"pointerdown",this.startPointerPress,{passive:!(e.onTapStart||e.onPointerStart)}),A=hI(this.node.current,"focus",this.startAccessiblePress);this.removeStartListeners=tP(t,A)}unmount(){this.removeStartListeners(),this.removeEndListeners(),this.removeAccessibleListeners()}}},focus:{Feature:class extends aI{constructor(){super(...arguments),this.isActive=!1}onFocus(){let e=!1;try{e=this.node.current.matches(":focus-visible")}catch(tF){e=!0}e&&this.node.animationState&&(this.node.animationState.setActive("whileFocus",!0),this.isActive=!0)}onBlur(){this.isActive&&this.node.animationState&&(this.node.animationState.setActive("whileFocus",!1),this.isActive=!1)}mount(){this.unmount=tP(hI(this.node.current,"focus",(()=>this.onFocus())),hI(this.node.current,"blur",(()=>this.onBlur())))}unmount(){}}},hover:{Feature:class extends aI{mount(){this.unmount=tP(Gk(this.node,!0),Gk(this.node,!1))}unmount(){}}}},Tk={layout:{ProjectionNode:Lk,MeasureLayout:CL}},Uk=(0,n.createContext)({}),Vk=(0,n.createContext)({strict:!1});let Ok=!1;function Yk(e,t,A,r,s){var i;const{visualElement:o}=(0,n.useContext)(Uk),a=(0,n.useContext)(Vk),l=(0,n.useContext)(ye),u=(0,n.useContext)(Be).reducedMotion,c=(0,n.useRef)();r=r||a.renderer,!c.current&&r&&(c.current=r(e,{visualState:t,parent:o,props:A,presenceContext:l,blockInitialAnimation:!!l&&!1===l.initial,reducedMotionConfig:u}));const d=c.current,f=(0,n.useContext)(gL);!d||d.projection||!s||"html"!==d.type&&"svg"!==d.type||function(e,t,A,r){const{layoutId:n,layout:s,drag:i,dragConstraints:o,layoutScroll:a,layoutRoot:l}=t;e.projection=new A(e.latestValues,t["data-framer-portal-id"]?void 0:Kk(e.parent)),e.projection.setOptions({layoutId:n,layout:s,alwaysMeasureLayout:Boolean(i)||o&&PI(o),visualElement:e,animationType:"string"===typeof s?s:"both",initialPromotionConfig:r,layoutScroll:a,layoutRoot:l})}(c.current,A,s,f),(0,n.useInsertionEffect)((()=>{d&&d.update(A,l)}));const h=A[OP],g=(0,n.useRef)(Boolean(h)&&!window.MotionHandoffIsComplete&&(null===(i=window.MotionHasOptimisedAnimation)||void 0===i?void 0:i.call(window,h)));return Fe((()=>{d&&(d.updateFeatures(),wL.render(d.render),g.current&&d.animationState&&d.animationState.animateChanges())})),(0,n.useEffect)((()=>{d&&(!g.current&&d.animationState&&d.animationState.animateChanges(),g.current=!1,Ok||(Ok=!0,queueMicrotask(Hk)))})),d}function Hk(){window.MotionHandoffIsComplete=!0}function Kk(e){if(e)return!1!==e.options.allowProjection?e.projection:Kk(e.parent)}function qk(e,t,A){return(0,n.useCallback)((r=>{r&&e.mount&&e.mount(r),t&&(r?t.mount(r):t.unmount()),A&&("function"===typeof A?A(r):PI(A)&&(A.current=r))}),[t])}function Jk(e){return EN(e.animate)||GN.some((t=>QN(e[t])))}function _k(e){return Boolean(Jk(e)||e.variants)}function $k(e){const{initial:t,animate:A}=function(e,t){if(Jk(e)){const{initial:t,animate:A}=e;return{initial:!1===t||QN(t)?t:void 0,animate:QN(A)?A:void 0}}return!1!==e.inherit?t:{}}(e,(0,n.useContext)(Uk));return(0,n.useMemo)((()=>({initial:t,animate:A})),[eG(t),eG(A)])}function eG(e){return Array.isArray(e)?e.join(" "):e}const tG={animation:["animate","variants","whileHover","whileTap","exit","whileInView","whileFocus","whileDrag"],exit:["exit"],drag:["drag","dragControls"],focus:["whileFocus"],hover:["whileHover","onHoverStart","onHoverEnd"],tap:["whileTap","onTap","onTapStart","onTapCancel"],pan:["onPan","onPanStart","onPanSessionStart","onPanEnd"],inView:["whileInView","onViewportEnter","onViewportLeave"],layout:["layout","layoutId"]},AG={};for(const A in tG)AG[A]={isEnabled:e=>tG[A].some((t=>!!e[t]))};const rG=Symbol.for("motionComponentSymbol");function nG(e){let{preloadedFeatures:t,createVisualElement:A,useRender:r,useVisualState:s,Component:i}=e;t&&function(e){for(const t in e)AG[t]={...AG[t],...e[t]}}(t);const o=(0,n.forwardRef)((function(e,t){let o;const a={...(0,n.useContext)(Be),...e,layoutId:sG(e)},{isStatic:l}=a,u=$k(e),c=s(e,l);if(!l&&Ge){!function(){(0,n.useContext)(Vk).strict;0}();const e=function(e){const{drag:t,layout:A}=AG;if(!t&&!A)return{};const r={...t,...A};return{MeasureLayout:(null===t||void 0===t?void 0:t.isEnabled(e))||(null===A||void 0===A?void 0:A.isEnabled(e))?r.MeasureLayout:void 0,ProjectionNode:r.ProjectionNode}}(a);o=e.MeasureLayout,u.visualElement=Yk(i,c,a,A,e.ProjectionNode)}return(0,ve.jsxs)(Uk.Provider,{value:u,children:[o&&u.visualElement?(0,ve.jsx)(o,{visualElement:u.visualElement,...a}):null,r(i,e,qk(c,u.visualElement,t),c,l,u.visualElement)]})}));return o[rG]=i,o}function sG(e){let{layoutId:t}=e;const A=(0,n.useContext)(De).id;return A&&void 0!==t?A+"-"+t:t}const iG=["animate","circle","defs","desc","ellipse","g","image","line","filter","marker","mask","metadata","path","pattern","polygon","polyline","rect","stop","switch","symbol","svg","text","tspan","use","view"];function oG(e){return"string"===typeof e&&!e.includes("-")&&!!(iG.indexOf(e)>-1||/[A-Z]/u.test(e))}function aG(e,t,A,r){let{style:n,vars:s}=t;Object.assign(e.style,n,r&&r.getProjectionStyles(A));for(const i in s)e.style.setProperty(i,s[i])}const lG=new Set(["baseFrequency","diffuseConstant","kernelMatrix","kernelUnitLength","keySplines","keyTimes","limitingConeAngle","markerHeight","markerWidth","numOctaves","targetX","targetY","surfaceScale","specularConstant","specularExponent","stdDeviation","tableValues","viewBox","gradientTransform","pathLength","startOffset","textLength","lengthAdjust"]);function uG(e,t,A,r){aG(e,t,void 0,r);for(const n in t.attrs)e.setAttribute(lG.has(n)?n:VP(n),t.attrs[n])}function cG(e,t){let{layout:A,layoutId:r}=t;return SN.has(e)||e.startsWith("origin")||(A||void 0!==r)&&(!!yL[e]||"opacity"===e)}function dG(e,t,A){var r;const{style:n}=e,s={};for(const i in n)(qP(n[i])||t.style&&qP(t.style[i])||cG(i,e)||void 0!==(null===(r=null===A||void 0===A?void 0:A.getValue(i))||void 0===r?void 0:r.liveStyle))&&(s[i]=n[i]);return A&&n&&"string"===typeof n.willChange&&(A.applyWillChange=!1),s}function fG(e,t,A){const r=dG(e,t,A);for(const n in e)if(qP(e[n])||qP(t[n])){r[-1!==FN.indexOf(n)?"attr"+n.charAt(0).toUpperCase()+n.substring(1):n]=e[n]}return r}const hG=e=>(t,A)=>{const r=(0,n.useContext)(Uk),s=(0,n.useContext)(ye),i=()=>function(e,t,A,r,n){let{applyWillChange:s=!1,scrapeMotionValuesFromProps:i,createRenderState:o,onMount:a}=e;const l={latestValues:bG(t,A,r,!n&&s,i),renderState:o()};return a&&(l.mount=e=>a(t,e,l)),l}(e,t,r,s,A);return A?i():we(i)};function gG(e,t){const A=HP(t);A&&XP(e,A)}function pG(e,t,A){const r=Array.isArray(t)?t:[t];for(let n=0;n<r.length;n++){const t=IN(e,r[n]);if(t){const{transitionEnd:e,transition:r,...n}=t;A(n,e)}}}function bG(e,t,A,r,n){var s;const i={},o=[],a=r&&void 0===(null===(s=e.style)||void 0===s?void 0:s.willChange),l=n(e,{});for(const p in l)i[p]=_L(l[p]);let{initial:u,animate:c}=e;const d=Jk(e),f=_k(e);t&&f&&!d&&!1!==e.inherit&&(void 0===u&&(u=t.initial),void 0===c&&(c=t.animate));let h=!!A&&!1===A.initial;h=h||!1===u;const g=h?c:u;return g&&"boolean"!==typeof g&&!EN(g)&&pG(e,g,((e,t)=>{for(const A in e){let t=e[A];if(Array.isArray(t)){t=t[h?t.length-1:0]}null!==t&&(i[A]=t)}for(const A in t)i[A]=t[A]})),a&&(c&&!1!==u&&!EN(c)&&pG(e,c,(e=>{for(const t in e)gG(o,t)})),o.length&&(i.willChange=o.join(","))),i}const mG=()=>({style:{},transform:{},transformOrigin:{},vars:{}}),vG=()=>({...mG(),attrs:{}}),yG=(e,t)=>t&&"number"===typeof e?t.transform(e):e,wG={x:"translateX",y:"translateY",z:"translateZ",transformPerspective:"perspective"},BG=FN.length;function xG(e,t,A){const{style:r,vars:n,transformOrigin:s}=e;let i=!1,o=!1;for(const a in t){const e=t[a];if(SN.has(a))i=!0;else if(rD(a))n[a]=e;else{const t=yG(e,uQ[a]);a.startsWith("origin")?(o=!0,s[a]=t):r[a]=t}}if(t.transform||(i||A?r.transform=function(e,t,A){let r="",n=!0;for(let s=0;s<BG;s++){const i=FN[s],o=e[i];if(void 0===o)continue;let a=!0;if(a="number"===typeof o?o===(i.startsWith("scale")?1:0):0===parseFloat(o),!a||A){const e=yG(o,uQ[i]);a||(n=!1,r+=`${wG[i]||i}(${e}) `),A&&(t[i]=e)}}return r=r.trim(),A?r=A(t,n?"":r):n&&(r="none"),r}(t,e.transform,A):r.transform&&(r.transform="none")),o){const{originX:e="50%",originY:t="50%",originZ:A=0}=s;r.transformOrigin=`${e} ${t} ${A}`}}function CG(e,t,A){return"string"===typeof e?e:wD.transform(t+A*e)}const EG={offset:"stroke-dashoffset",array:"stroke-dasharray"},NG={offset:"strokeDashoffset",array:"strokeDasharray"};function DG(e,t,A,r){let{attrX:n,attrY:s,attrScale:i,originX:o,originY:a,pathLength:l,pathSpacing:u=1,pathOffset:c=0,...d}=t;if(xG(e,d,r),A)return void(e.style.viewBox&&(e.attrs.viewBox=e.style.viewBox));e.attrs=e.style,e.style={};const{attrs:f,style:h,dimensions:g}=e;f.transform&&(g&&(h.transform=f.transform),delete f.transform),g&&(void 0!==o||void 0!==a||h.transform)&&(h.transformOrigin=function(e,t,A){return`${CG(t,e.x,e.width)} ${CG(A,e.y,e.height)}`}(g,void 0!==o?o:.5,void 0!==a?a:.5)),void 0!==n&&(f.x=n),void 0!==s&&(f.y=s),void 0!==i&&(f.scale=i),void 0!==l&&function(e,t){let A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,n=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];e.pathLength=1;const s=n?EG:NG;e[s.offset]=wD.transform(-r);const i=wD.transform(t),o=wD.transform(A);e[s.array]=`${i} ${o}`}(f,l,u,c,!1)}const QG=e=>"string"===typeof e&&"svg"===e.toLowerCase(),PG={useVisualState:hG({scrapeMotionValuesFromProps:fG,createRenderState:vG,onMount:(e,t,A)=>{let{renderState:r,latestValues:n}=A;qN.read((()=>{try{r.dimensions="function"===typeof t.getBBox?t.getBBox():t.getBoundingClientRect()}catch(tF){r.dimensions={x:0,y:0,width:0,height:0}}})),qN.render((()=>{DG(r,n,QG(t.tagName),e.transformTemplate),uG(t,r)}))}})},IG={useVisualState:hG({applyWillChange:!0,scrapeMotionValuesFromProps:dG,createRenderState:mG})};function LG(e,t,A){for(const r in t)qP(t[r])||cG(r,A)||(e[r]=t[r])}function kG(e,t){const A={};return LG(A,e.style||{},e),Object.assign(A,function(e,t){let{transformTemplate:A}=e;return(0,n.useMemo)((()=>{const e=mG();return xG(e,t,A),Object.assign({},e.vars,e.style)}),[t])}(e,t)),A}function GG(e,t){const A={},r=kG(e,t);return e.drag&&!1!==e.dragListener&&(A.draggable=!1,r.userSelect=r.WebkitUserSelect=r.WebkitTouchCallout="none",r.touchAction=!0===e.drag?"none":"pan-"+("x"===e.drag?"y":"x")),void 0===e.tabIndex&&(e.onTap||e.onTapStart||e.whileTap)&&(A.tabIndex=0),A.style=r,A}const FG=new Set(["animate","exit","variants","initial","style","values","variants","transition","transformTemplate","custom","inherit","onBeforeLayoutMeasure","onAnimationStart","onAnimationComplete","onUpdate","onDragStart","onDrag","onDragEnd","onMeasureDragConstraints","onDirectionLock","onDragTransitionEnd","_dragX","_dragY","onHoverStart","onHoverEnd","onViewportEnter","onViewportLeave","globalTapTarget","ignoreStrict","viewport"]);function SG(e){return e.startsWith("while")||e.startsWith("drag")&&"draggable"!==e||e.startsWith("layout")||e.startsWith("onTap")||e.startsWith("onPan")||e.startsWith("onLayout")||FG.has(e)}let WG=e=>!SG(e);try{(ZG=require("@emotion/is-prop-valid").default)&&(WG=e=>e.startsWith("on")?!SG(e):ZG(e))}catch(AF){}var ZG;function XG(e,t,A,r){const s=(0,n.useMemo)((()=>{const A=vG();return DG(A,t,QG(r),e.transformTemplate),{...A.attrs,style:{...A.style}}}),[t]);if(e.style){const t={};LG(t,e.style,e),s.style={...t,...s.style}}return s}function MG(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(t,A,r,s,i)=>{let{latestValues:o}=s;const a=(oG(t)?XG:GG)(A,o,i,t),l=function(e,t,A){const r={};for(const n in e)"values"===n&&"object"===typeof e.values||(WG(n)||!0===A&&SG(n)||!t&&!SG(n)||e.draggable&&n.startsWith("onDrag"))&&(r[n]=e[n]);return r}(A,"string"===typeof t,e),u=t!==n.Fragment?{...l,...a,ref:r}:{},{children:c}=A,d=(0,n.useMemo)((()=>qP(c)?c.get():c),[c]);return(0,n.createElement)(t,{...u,children:d})}}function zG(e,t){return function(A){let{forwardMotionProps:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{forwardMotionProps:!1};return nG({...oG(A)?PG:IG,preloadedFeatures:e,useRender:MG(r),createVisualElement:t,Component:A})}}const RG={current:null},jG={current:!1};const TG=new WeakMap,UG=[...GD,YD,nQ],VG=["AnimationStart","AnimationComplete","Update","BeforeLayoutMeasure","LayoutMeasure","LayoutAnimationStart","LayoutAnimationComplete"],OG=GN.length;class YG{scrapeMotionValuesFromProps(e,t,A){return{}}constructor(e){let{parent:t,props:A,presenceContext:r,reducedMotionConfig:n,blockInitialAnimation:s,visualState:i}=e,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.applyWillChange=!1,this.current=null,this.children=new Set,this.isVariantNode=!1,this.isControllingVariants=!1,this.shouldReduceMotion=null,this.values=new Map,this.KeyframeResolver=zD,this.features={},this.valueSubscriptions=new Map,this.prevMotionValues={},this.events={},this.propEventSubscriptions={},this.notifyUpdate=()=>this.notify("Update",this.latestValues),this.render=()=>{this.isRenderScheduled=!1,this.current&&(this.triggerBuild(),this.renderInstance(this.current,this.renderState,this.props.style,this.projection))},this.isRenderScheduled=!1,this.scheduleRender=()=>{this.isRenderScheduled||(this.isRenderScheduled=!0,qN.render(this.render,!1,!0))};const{latestValues:a,renderState:l}=i;this.latestValues=a,this.baseTarget={...a},this.initialValues=A.initial?{...a}:{},this.renderState=l,this.parent=t,this.props=A,this.presenceContext=r,this.depth=t?t.depth+1:0,this.reducedMotionConfig=n,this.options=o,this.blockInitialAnimation=Boolean(s),this.isControllingVariants=Jk(A),this.isVariantNode=_k(A),this.isVariantNode&&(this.variantChildren=new Set),this.manuallyAnimateOnMount=Boolean(t&&t.current);const{willChange:u,...c}=this.scrapeMotionValuesFromProps(A,{},this);for(const d in c){const e=c[d];void 0!==a[d]&&qP(e)&&e.set(a[d],!1)}}mount(e){this.current=e,TG.set(e,this),this.projection&&!this.projection.instance&&this.projection.mount(e),this.parent&&this.isVariantNode&&!this.isControllingVariants&&(this.removeFromVariantTree=this.parent.addVariantChild(this)),this.values.forEach(((e,t)=>this.bindToMotionValue(t,e))),jG.current||function(){if(jG.current=!0,Ge)if(window.matchMedia){const e=window.matchMedia("(prefers-reduced-motion)"),t=()=>RG.current=e.matches;e.addListener(t),t()}else RG.current=!1}(),this.shouldReduceMotion="never"!==this.reducedMotionConfig&&("always"===this.reducedMotionConfig||RG.current),this.parent&&this.parent.children.add(this),this.update(this.props,this.presenceContext)}unmount(){TG.delete(this.current),this.projection&&this.projection.unmount(),JN(this.notifyUpdate),JN(this.render),this.valueSubscriptions.forEach((e=>e())),this.valueSubscriptions.clear(),this.removeFromVariantTree&&this.removeFromVariantTree(),this.parent&&this.parent.children.delete(this);for(const e in this.events)this.events[e].clear();for(const e in this.features){const t=this.features[e];t&&(t.unmount(),t.isMounted=!1)}this.current=null}bindToMotionValue(e,t){this.valueSubscriptions.has(e)&&this.valueSubscriptions.get(e)();const A=SN.has(e),r=t.on("change",(t=>{this.latestValues[e]=t,this.props.onUpdate&&qN.preRender(this.notifyUpdate),A&&this.projection&&(this.projection.isTransformDirty=!0)})),n=t.on("renderRequest",this.scheduleRender);let s;window.MotionCheckAppearSync&&(s=window.MotionCheckAppearSync(this,e,t)),this.valueSubscriptions.set(e,(()=>{r(),n(),s&&s(),t.owner&&t.stop()}))}sortNodePosition(e){return this.current&&this.sortInstanceNodePosition&&this.type===e.type?this.sortInstanceNodePosition(this.current,e.current):0}updateFeatures(){let e="animation";for(e in AG){const t=AG[e];if(!t)continue;const{isEnabled:A,Feature:r}=t;if(!this.features[e]&&r&&A(this.props)&&(this.features[e]=new r(this)),this.features[e]){const t=this.features[e];t.isMounted?t.update():(t.mount(),t.isMounted=!0)}}}triggerBuild(){this.build(this.renderState,this.latestValues,this.props)}measureViewportBox(){return this.current?this.measureInstanceViewportBox(this.current,this.props):OI()}getStaticValue(e){return this.latestValues[e]}setStaticValue(e,t){this.latestValues[e]=t}update(e,t){(e.transformTemplate||this.props.transformTemplate)&&this.scheduleRender(),this.prevProps=this.props,this.props=e,this.prevPresenceContext=this.presenceContext,this.presenceContext=t;for(let A=0;A<VG.length;A++){const t=VG[A];this.propEventSubscriptions[t]&&(this.propEventSubscriptions[t](),delete this.propEventSubscriptions[t]);const r=e["on"+t];r&&(this.propEventSubscriptions[t]=this.on(t,r))}this.prevMotionValues=function(e,t,A){for(const r in t){const n=t[r],s=A[r];if(qP(n))e.addValue(r,n);else if(qP(s))e.addValue(r,TP(n,{owner:e}));else if(s!==n)if(e.hasValue(r)){const t=e.getValue(r);!0===t.liveStyle?t.jump(n):t.hasAnimated||t.set(n)}else{const t=e.getStaticValue(r);e.addValue(r,TP(void 0!==t?t:n,{owner:e}))}}for(const r in A)void 0===t[r]&&e.removeValue(r);return t}(this,this.scrapeMotionValuesFromProps(e,this.prevProps,this),this.prevMotionValues),this.handleChildMotionValue&&this.handleChildMotionValue()}getProps(){return this.props}getVariant(e){return this.props.variants?this.props.variants[e]:void 0}getDefaultTransition(){return this.props.transition}getTransformPagePoint(){return this.props.transformPagePoint}getClosestVariantNode(){return this.isVariantNode?this:this.parent?this.parent.getClosestVariantNode():void 0}getVariantContext(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])return this.parent?this.parent.getVariantContext():void 0;if(!this.isControllingVariants){const e=this.parent&&this.parent.getVariantContext()||{};return void 0!==this.props.initial&&(e.initial=this.props.initial),e}const e={};for(let t=0;t<OG;t++){const A=GN[t],r=this.props[A];(QN(r)||!1===r)&&(e[A]=r)}return e}addVariantChild(e){const t=this.getClosestVariantNode();if(t)return t.variantChildren&&t.variantChildren.add(e),()=>t.variantChildren.delete(e)}addValue(e,t){const A=this.values.get(e);t!==A&&(A&&this.removeValue(e),this.bindToMotionValue(e,t),this.values.set(e,t),this.latestValues[e]=t.get())}removeValue(e){this.values.delete(e);const t=this.valueSubscriptions.get(e);t&&(t(),this.valueSubscriptions.delete(e)),delete this.latestValues[e],this.removeValueFromRenderState(e,this.renderState)}hasValue(e){return this.values.has(e)}getValue(e,t){if(this.props.values&&this.props.values[e])return this.props.values[e];let A=this.values.get(e);return void 0===A&&void 0!==t&&(A=TP(null===t?void 0:t,{owner:this}),this.addValue(e,A)),A}readValue(e,t){var A;let r=void 0===this.latestValues[e]&&this.current?null!==(A=this.getBaseTargetFromProps(this.props,e))&&void 0!==A?A:this.readValueFromInstance(this.current,e,this.options):this.latestValues[e];var n;return void 0!==r&&null!==r&&("string"===typeof r&&(tD(r)||eD(r))?r=parseFloat(r):(n=r,!UG.find(kD(n))&&nQ.test(t)&&(r=fQ(e,t))),this.setBaseTarget(e,qP(r)?r.get():r)),qP(r)?r.get():r}setBaseTarget(e,t){this.baseTarget[e]=t}getBaseTarget(e){var t;const{initial:A}=this.props;let r;if("string"===typeof A||"object"===typeof A){const n=IN(this.props,A,null===(t=this.presenceContext)||void 0===t?void 0:t.custom);n&&(r=n[e])}if(A&&void 0!==r)return r;const n=this.getBaseTargetFromProps(this.props,e);return void 0===n||qP(n)?void 0!==this.initialValues[e]&&void 0===r?void 0:this.baseTarget[e]:n}on(e,t){return this.events[e]||(this.events[e]=new zP),this.events[e].add(t)}notify(e){if(this.events[e]){for(var t=arguments.length,A=new Array(t>1?t-1:0),r=1;r<t;r++)A[r-1]=arguments[r];this.events[e].notify(...A)}}}class HG extends YG{constructor(){super(...arguments),this.KeyframeResolver=gQ}sortInstanceNodePosition(e,t){return 2&e.compareDocumentPosition(t)?1:-1}getBaseTargetFromProps(e,t){return e.style?e.style[t]:void 0}removeValueFromRenderState(e,t){let{vars:A,style:r}=t;delete A[e],delete r[e]}}class KG extends HG{constructor(){super(...arguments),this.type="html",this.applyWillChange=!0,this.renderInstance=aG}readValueFromInstance(e,t){if(SN.has(t)){const e=dQ(t);return e&&e.default||0}{const r=(A=e,window.getComputedStyle(A)),n=(rD(t)?r.getPropertyValue(t):r[t])||0;return"string"===typeof n?n.trim():n}var A}measureInstanceViewportBox(e,t){let{transformPagePoint:A}=t;return lL(e,A)}build(e,t,A){xG(e,t,A.transformTemplate)}scrapeMotionValuesFromProps(e,t,A){return dG(e,t,A)}handleChildMotionValue(){this.childSubscription&&(this.childSubscription(),delete this.childSubscription);const{children:e}=this.props;qP(e)&&(this.childSubscription=e.on("change",(e=>{this.current&&(this.current.textContent=`${e}`)})))}}class qG extends HG{constructor(){super(...arguments),this.type="svg",this.isSVGTag=!1,this.measureInstanceViewportBox=OI}getBaseTargetFromProps(e,t){return e[t]}readValueFromInstance(e,t){if(SN.has(t)){const e=dQ(t);return e&&e.default||0}return t=lG.has(t)?t:VP(t),e.getAttribute(t)}scrapeMotionValuesFromProps(e,t,A){return fG(e,t,A)}build(e,t,A){DG(e,t,this.isSVGTag,A.transformTemplate)}renderInstance(e,t,A,r){uG(e,t,0,r)}mount(e){this.isSVGTag=QG(e.tagName),super.mount(e)}}const JG=CN(zG({...uI,...jk,...kk,...Tk},((e,t)=>oG(e)?new qG(t):new KG(t,{allowProjection:e!==n.Fragment})))),_G={initial:{opacity:0,x:"100vw"},animate:{opacity:1,x:0},exit:{opacity:0,x:"-100vw"}},$G=e=>{let{children:t}=e;return(0,ve.jsx)(JG.div,{initial:"initial",animate:"animate",exit:"exit",variants:_G,transition:{duration:.5},children:t})},eF=()=>{const e=$();return(0,ve.jsxs)("div",{className:"flex flex-col min-h-screen bg-gray-100",children:[(0,ve.jsx)(Oe,{}),(0,ve.jsx)(Se,{mode:"wait",children:(0,ve.jsxs)(be,{location:e,children:[(0,ve.jsx)(ge,{path:"/",element:(0,ve.jsx)($G,{children:(0,ve.jsx)(Ye,{})})}),(0,ve.jsx)(ge,{path:"/cv-parking-permit",element:(0,ve.jsx)($G,{children:(0,ve.jsx)(yE,{})})}),(0,ve.jsx)(ge,{path:"/canvas-parking-permit",element:(0,ve.jsx)($G,{children:(0,ve.jsx)(BN,{})})}),(0,ve.jsx)(ge,{path:"/About",element:(0,ve.jsx)($G,{children:(0,ve.jsx)(xN,{})})})]},e.pathname)})]})};i.render((0,ve.jsx)(ze,{children:(0,ve.jsx)(eF,{})}),document.getElementById("root"))})()})();
//# sourceMappingURL=main.1d0a28f3.js.map