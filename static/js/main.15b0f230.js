/*! For license information please see main.15b0f230.js.LICENSE.txt */
(()=>{var e={4445:(e,t)=>{"use strict";t.byteLength=function(e){var t=A(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,i=A(e),o=i[0],a=i[1],l=new s(function(e,t,r){return 3*(t+r)/4-r}(0,o,a)),c=0,u=a>0?o-4:o;for(r=0;r<u;r+=4)t=n[e.charCodeAt(r)]<<18|n[e.charCodeAt(r+1)]<<12|n[e.charCodeAt(r+2)]<<6|n[e.charCodeAt(r+3)],l[c++]=t>>16&255,l[c++]=t>>8&255,l[c++]=255&t;2===a&&(t=n[e.charCodeAt(r)]<<2|n[e.charCodeAt(r+1)]>>4,l[c++]=255&t);1===a&&(t=n[e.charCodeAt(r)]<<10|n[e.charCodeAt(r+1)]<<4|n[e.charCodeAt(r+2)]>>2,l[c++]=t>>8&255,l[c++]=255&t);return l},t.fromByteArray=function(e){for(var t,n=e.length,s=n%3,i=[],o=16383,A=0,l=n-s;A<l;A+=o)i.push(a(e,A,A+o>l?l:A+o));1===s?(t=e[n-1],i.push(r[t>>2]+r[t<<4&63]+"==")):2===s&&(t=(e[n-2]<<8)+e[n-1],i.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return i.join("")};for(var r=[],n=[],s="undefined"!==typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0;o<64;++o)r[o]=i[o],n[i.charCodeAt(o)]=o;function A(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function a(e,t,n){for(var s,i,o=[],A=t;A<n;A+=3)s=(e[A]<<16&16711680)+(e[A+1]<<8&65280)+(255&e[A+2]),o.push(r[(i=s)>>18&63]+r[i>>12&63]+r[i>>6&63]+r[63&i]);return o.join("")}n["-".charCodeAt(0)]=62,n["_".charCodeAt(0)]=63},3192:e=>{var t=4096,r=new Uint32Array([0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215]);function n(e){this.buf_=new Uint8Array(8224),this.input_=e,this.reset()}n.READ_SIZE=t,n.IBUF_MASK=8191,n.prototype.reset=function(){this.buf_ptr_=0,this.val_=0,this.pos_=0,this.bit_pos_=0,this.bit_end_pos_=0,this.eos_=0,this.readMoreInput();for(var e=0;e<4;e++)this.val_|=this.buf_[this.pos_]<<8*e,++this.pos_;return this.bit_end_pos_>0},n.prototype.readMoreInput=function(){if(!(this.bit_end_pos_>256))if(this.eos_){if(this.bit_pos_>this.bit_end_pos_)throw new Error("Unexpected end of input "+this.bit_pos_+" "+this.bit_end_pos_)}else{var e=this.buf_ptr_,r=this.input_.read(this.buf_,e,t);if(r<0)throw new Error("Unexpected end of input");if(r<t){this.eos_=1;for(var n=0;n<32;n++)this.buf_[e+r+n]=0}if(0===e){for(n=0;n<32;n++)this.buf_[8192+n]=this.buf_[n];this.buf_ptr_=t}else this.buf_ptr_=0;this.bit_end_pos_+=r<<3}},n.prototype.fillBitWindow=function(){for(;this.bit_pos_>=8;)this.val_>>>=8,this.val_|=this.buf_[8191&this.pos_]<<24,++this.pos_,this.bit_pos_=this.bit_pos_-8>>>0,this.bit_end_pos_=this.bit_end_pos_-8>>>0},n.prototype.readBits=function(e){32-this.bit_pos_<e&&this.fillBitWindow();var t=this.val_>>>this.bit_pos_&r[e];return this.bit_pos_+=e,t},e.exports=n},6140:(e,t)=>{t.lookup=new Uint8Array([0,0,0,0,0,0,0,0,0,4,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,12,16,12,12,20,12,16,24,28,12,12,32,12,36,12,44,44,44,44,44,44,44,44,44,44,32,32,24,40,28,12,12,48,52,52,52,48,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,24,12,28,12,12,12,56,60,60,60,56,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,24,12,28,12,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,56,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,60,60,60,60,61,61,61,61,62,62,62,62,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),t.lookupOffsets=new Uint16Array([1024,1536,1280,1536,0,256,768,512])},4393:(e,t,r)=>{var n=r(9094).z,s=r(9094).y,i=r(3192),o=r(7887),A=r(9518).z,a=r(9518).u,l=r(6140),c=r(7479),u=r(615),d=8,h=16,f=256,g=704,p=26,m=6,w=2,v=8,b=255,y=1080,B=18,E=new Uint8Array([1,2,3,4,0,5,17,6,16,7,8,9,10,11,12,13,14,15]),C=16,x=new Uint8Array([3,2,1,0,3,3,3,3,3,3,2,2,2,2,2,2]),I=new Int8Array([0,0,0,0,-1,1,-2,2,-3,3,-1,1,-2,2,-3,3]),D=new Uint16Array([256,402,436,468,500,534,566,598,630,662,694,726,758,790,822,854,886,920,952,984,1016,1048,1080]);function Q(e){var t;return 0===e.readBits(1)?16:(t=e.readBits(3))>0?17+t:(t=e.readBits(3))>0?8+t:17}function P(e){if(e.readBits(1)){var t=e.readBits(3);return 0===t?1:e.readBits(t)+(1<<t)}return 0}function F(){this.meta_block_length=0,this.input_end=0,this.is_uncompressed=0,this.is_metadata=!1}function L(e){var t,r,n,s=new F;if(s.input_end=e.readBits(1),s.input_end&&e.readBits(1))return s;if(7===(t=e.readBits(2)+4)){if(s.is_metadata=!0,0!==e.readBits(1))throw new Error("Invalid reserved bit");if(0===(r=e.readBits(2)))return s;for(n=0;n<r;n++){var i=e.readBits(8);if(n+1===r&&r>1&&0===i)throw new Error("Invalid size byte");s.meta_block_length|=i<<8*n}}else for(n=0;n<t;++n){var o=e.readBits(4);if(n+1===t&&t>4&&0===o)throw new Error("Invalid size nibble");s.meta_block_length|=o<<4*n}return++s.meta_block_length,s.input_end||s.is_metadata||(s.is_uncompressed=e.readBits(1)),s}function M(e,t,r){var n;return r.fillBitWindow(),(n=e[t+=r.val_>>>r.bit_pos_&b].bits-v)>0&&(r.bit_pos_+=v,t+=e[t].value,t+=r.val_>>>r.bit_pos_&(1<<n)-1),r.bit_pos_+=e[t].bits,e[t].value}function S(e,t,r,n){var s,i,o=new Uint8Array(e);if(n.readMoreInput(),1===(i=n.readBits(2))){for(var l=e-1,c=0,u=new Int32Array(4),f=n.readBits(2)+1;l;)l>>=1,++c;for(g=0;g<f;++g)u[g]=n.readBits(c)%e,o[u[g]]=2;switch(o[u[0]]=1,f){case 1:break;case 3:if(u[0]===u[1]||u[0]===u[2]||u[1]===u[2])throw new Error("[ReadHuffmanCode] invalid symbols");break;case 2:if(u[0]===u[1])throw new Error("[ReadHuffmanCode] invalid symbols");o[u[1]]=1;break;case 4:if(u[0]===u[1]||u[0]===u[2]||u[0]===u[3]||u[1]===u[2]||u[1]===u[3]||u[2]===u[3])throw new Error("[ReadHuffmanCode] invalid symbols");n.readBits(1)?(o[u[2]]=3,o[u[3]]=3):o[u[0]]=2}}else{var g,p=new Uint8Array(B),m=32,w=0,b=[new A(2,0),new A(2,4),new A(2,3),new A(3,2),new A(2,0),new A(2,4),new A(2,3),new A(4,1),new A(2,0),new A(2,4),new A(2,3),new A(3,2),new A(2,0),new A(2,4),new A(2,3),new A(4,5)];for(g=i;g<B&&m>0;++g){var y,C=E[g],x=0;n.fillBitWindow(),x+=n.val_>>>n.bit_pos_&15,n.bit_pos_+=b[x].bits,y=b[x].value,p[C]=y,0!==y&&(m-=32>>y,++w)}if(1!==w&&0!==m)throw new Error("[ReadHuffmanCode] invalid num_codes or space");!function(e,t,r,n){for(var s=0,i=d,o=0,l=0,c=32768,u=[],f=0;f<32;f++)u.push(new A(0,0));for(a(u,0,5,e,B);s<t&&c>0;){var g,p=0;if(n.readMoreInput(),n.fillBitWindow(),p+=n.val_>>>n.bit_pos_&31,n.bit_pos_+=u[p].bits,(g=255&u[p].value)<h)o=0,r[s++]=g,0!==g&&(i=g,c-=32768>>g);else{var m,w,v=g-14,b=0;if(g===h&&(b=i),l!==b&&(o=0,l=b),m=o,o>0&&(o-=2,o<<=v),s+(w=(o+=n.readBits(v)+3)-m)>t)throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");for(var y=0;y<w;y++)r[s+y]=l;s+=w,0!==l&&(c-=w<<15-l)}}if(0!==c)throw new Error("[ReadHuffmanCodeLengths] space = "+c);for(;s<t;s++)r[s]=0}(p,e,o,n)}if(0===(s=a(t,r,v,o,e)))throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");return s}function N(e,t,r){var n,s;return n=M(e,t,r),s=c.kBlockLengthPrefixCode[n].nbits,c.kBlockLengthPrefixCode[n].offset+r.readBits(s)}function k(e,t,r){var n;return e<C?(r+=x[e],n=t[r&=3]+I[e]):n=e-C+1,n}function R(e,t){for(var r=e[t],n=t;n;--n)e[n]=e[n-1];e[0]=r}function T(e,t){this.alphabet_size=e,this.num_htrees=t,this.codes=new Array(t+t*D[e+31>>>5]),this.htrees=new Uint32Array(t)}function W(e,t){var r,n,s={num_htrees:null,context_map:null},i=0;t.readMoreInput();var o=s.num_htrees=P(t)+1,a=s.context_map=new Uint8Array(e);if(o<=1)return s;for(t.readBits(1)&&(i=t.readBits(4)+1),r=[],n=0;n<y;n++)r[n]=new A(0,0);for(S(o+i,r,0,t),n=0;n<e;){var l;if(t.readMoreInput(),0===(l=M(r,0,t)))a[n]=0,++n;else if(l<=i)for(var c=1+(1<<l)+t.readBits(l);--c;){if(n>=e)throw new Error("[DecodeContextMap] i >= context_map_size");a[n]=0,++n}else a[n]=l-i,++n}return t.readBits(1)&&function(e,t){var r,n=new Uint8Array(256);for(r=0;r<256;++r)n[r]=r;for(r=0;r<t;++r){var s=e[r];e[r]=n[s],s&&R(n,s)}}(a,e),s}function j(e,t,r,n,s,i,o){var A,a=2*r,l=r,c=M(t,r*y,o);(A=0===c?s[a+(1&i[l])]:1===c?s[a+(i[l]-1&1)]+1:c-2)>=e&&(A-=e),n[r]=A,s[a+(1&i[l])]=A,++i[l]}function G(e,t,r,n,s,o){var A,a=s+1,l=r&s,c=o.pos_&i.IBUF_MASK;if(t<8||o.bit_pos_+(t<<3)<o.bit_end_pos_)for(;t-- >0;)o.readMoreInput(),n[l++]=o.readBits(8),l===a&&(e.write(n,a),l=0);else{if(o.bit_end_pos_<32)throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");for(;o.bit_pos_<32;)n[l]=o.val_>>>o.bit_pos_,o.bit_pos_+=8,++l,--t;if(c+(A=o.bit_end_pos_-o.bit_pos_>>3)>i.IBUF_MASK){for(var u=i.IBUF_MASK+1-c,d=0;d<u;d++)n[l+d]=o.buf_[c+d];A-=u,l+=u,t-=u,c=0}for(d=0;d<A;d++)n[l+d]=o.buf_[c+d];if(t-=A,(l+=A)>=a){e.write(n,a),l-=a;for(d=0;d<l;d++)n[d]=n[a+d]}for(;l+t>=a;){if(A=a-l,o.input_.read(n,l,A)<A)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");e.write(n,a),t-=A,l=0}if(o.input_.read(n,l,t)<t)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");o.reset()}}function X(e){var t=e.bit_pos_+7&-8;return 0==e.readBits(t-e.bit_pos_)}function O(e){var t=new n(e),r=new i(t);return Q(r),L(r).meta_block_length}function z(e,t){var r,n,s,a,d,h,v,b,B,E,x=0,I=0,D=0,F=[16,15,11,4],R=0,O=0,z=0,Y=[new T(0,0),new T(0,0),new T(0,0)],H=128+i.READ_SIZE;s=(1<<(n=Q(E=new i(e))))-16,d=(a=1<<n)-1,h=new Uint8Array(a+H+o.maxDictionaryWordLength),v=a,b=[],B=[];for(var U=0;U<3*y;U++)b[U]=new A(0,0),B[U]=new A(0,0);for(;!I;){var V,q,Z,K,J,_,$,ee,te,re,ne,se=0,ie=[1<<28,1<<28,1<<28],oe=[0],Ae=[1,1,1],ae=[0,1,0,1,0,1],le=[0],ce=null,ue=null,de=0,he=null,fe=0,ge=0,pe=0;for(r=0;r<3;++r)Y[r].codes=null,Y[r].htrees=null;E.readMoreInput();var me=L(E);if(x+(se=me.meta_block_length)>t.buffer.length){var we=new Uint8Array(x+se);we.set(t.buffer),t.buffer=we}if(I=me.input_end,V=me.is_uncompressed,me.is_metadata)for(X(E);se>0;--se)E.readMoreInput(),E.readBits(8);else if(0!==se)if(V)E.bit_pos_=E.bit_pos_+7&-8,G(t,se,x,h,d,E),x+=se;else{for(r=0;r<3;++r)Ae[r]=P(E)+1,Ae[r]>=2&&(S(Ae[r]+2,b,r*y,E),S(p,B,r*y,E),ie[r]=N(B,r*y,E),le[r]=1);for(E.readMoreInput(),K=(1<<(q=E.readBits(2)))-1,J=(Z=C+(E.readBits(4)<<q))+(48<<q),ce=new Uint8Array(Ae[0]),r=0;r<Ae[0];++r)E.readMoreInput(),ce[r]=E.readBits(2)<<1;var ve=W(Ae[0]<<m,E);$=ve.num_htrees,_=ve.context_map;var be=W(Ae[2]<<w,E);for(te=be.num_htrees,ee=be.context_map,Y[0]=new T(f,$),Y[1]=new T(g,Ae[1]),Y[2]=new T(J,te),r=0;r<3;++r)Y[r].decode(E);for(ue=0,he=0,re=ce[oe[0]],ge=l.lookupOffsets[re],pe=l.lookupOffsets[re+1],ne=Y[1].htrees[0];se>0;){var ye,Be,Ee,Ce,xe,Ie,De,Qe,Pe,Fe,Le,Me;for(E.readMoreInput(),0===ie[1]&&(j(Ae[1],b,1,oe,ae,le,E),ie[1]=N(B,y,E),ne=Y[1].htrees[oe[1]]),--ie[1],(Be=(ye=M(Y[1].codes,ne,E))>>6)>=2?(Be-=2,De=-1):De=0,Ee=c.kInsertRangeLut[Be]+(ye>>3&7),Ce=c.kCopyRangeLut[Be]+(7&ye),xe=c.kInsertLengthPrefixCode[Ee].offset+E.readBits(c.kInsertLengthPrefixCode[Ee].nbits),Ie=c.kCopyLengthPrefixCode[Ce].offset+E.readBits(c.kCopyLengthPrefixCode[Ce].nbits),O=h[x-1&d],z=h[x-2&d],Pe=0;Pe<xe;++Pe)E.readMoreInput(),0===ie[0]&&(j(Ae[0],b,0,oe,ae,le,E),ie[0]=N(B,0,E),ue=oe[0]<<m,re=ce[oe[0]],ge=l.lookupOffsets[re],pe=l.lookupOffsets[re+1]),de=_[ue+(l.lookup[ge+O]|l.lookup[pe+z])],--ie[0],z=O,O=M(Y[0].codes,Y[0].htrees[de],E),h[x&d]=O,(x&d)===d&&t.write(h,a),++x;if((se-=xe)<=0)break;if(De<0)if(E.readMoreInput(),0===ie[2]&&(j(Ae[2],b,2,oe,ae,le,E),ie[2]=N(B,2*y,E),he=oe[2]<<w),--ie[2],fe=ee[he+(255&(Ie>4?3:Ie-2))],(De=M(Y[2].codes,Y[2].htrees[fe],E))>=Z)Me=(De-=Z)&K,De=Z+((Se=(2+(1&(De>>=q))<<(Le=1+(De>>1)))-4)+E.readBits(Le)<<q)+Me;if((Qe=k(De,F,R))<0)throw new Error("[BrotliDecompress] invalid distance");if(Fe=x&d,Qe>(D=x<s&&D!==s?x:s)){if(!(Ie>=o.minDictionaryWordLength&&Ie<=o.maxDictionaryWordLength))throw new Error("Invalid backward reference. pos: "+x+" distance: "+Qe+" len: "+Ie+" bytes left: "+se);var Se=o.offsetsByLength[Ie],Ne=Qe-D-1,ke=o.sizeBitsByLength[Ie],Re=Ne>>ke;if(Se+=(Ne&(1<<ke)-1)*Ie,!(Re<u.kNumTransforms))throw new Error("Invalid backward reference. pos: "+x+" distance: "+Qe+" len: "+Ie+" bytes left: "+se);var Te=u.transformDictionaryWord(h,Fe,Se,Ie,Re);if(x+=Te,se-=Te,(Fe+=Te)>=v){t.write(h,a);for(var We=0;We<Fe-v;We++)h[We]=h[v+We]}}else{if(De>0&&(F[3&R]=Qe,++R),Ie>se)throw new Error("Invalid backward reference. pos: "+x+" distance: "+Qe+" len: "+Ie+" bytes left: "+se);for(Pe=0;Pe<Ie;++Pe)h[x&d]=h[x-Qe&d],(x&d)===d&&t.write(h,a),++x,--se}O=h[x-1&d],z=h[x-2&d]}x&=1073741823}}t.write(h,x&d)}T.prototype.decode=function(e){var t,r=0;for(t=0;t<this.num_htrees;++t)this.htrees[t]=r,r+=S(this.alphabet_size,this.codes,r,e)},t.BrotliDecompressBuffer=function(e,t){var r=new n(e);null==t&&(t=O(e));var i=new Uint8Array(t),o=new s(i);return z(r,o),o.pos<o.buffer.length&&(o.buffer=o.buffer.subarray(0,o.pos)),o.buffer},o.init()},4814:(e,t,r)=>{var n=r(4445);t.init=function(){return(0,r(4393).BrotliDecompressBuffer)(n.toByteArray(r(7620)))}},7620:e=>{e.exports=""},7887:(e,t,r)=>{var n=r(4814);t.init=function(){t.dictionary=n.init()},t.offsetsByLength=new Uint32Array([0,0,0,0,0,4096,9216,21504,35840,44032,53248,63488,74752,87040,93696,100864,104704,106752,108928,113536,115968,118528,119872,121280,122016]),t.sizeBitsByLength=new Uint8Array([0,0,0,0,10,10,11,11,10,10,10,10,10,9,9,8,7,7,8,7,7,6,6,5,5]),t.minDictionaryWordLength=4,t.maxDictionaryWordLength=24},9518:(e,t)=>{function r(e,t){this.bits=e,this.value=t}t.z=r;var n=15;function s(e,t){for(var r=1<<t-1;e&r;)r>>=1;return(e&r-1)+r}function i(e,t,n,s,i){do{e[t+(s-=n)]=new r(i.bits,i.value)}while(s>0)}function o(e,t,r){for(var s=1<<t-r;t<n&&!((s-=e[t])<=0);)++t,s<<=1;return t-r}t.u=function(e,t,A,a,l){var c,u,d,h,f,g,p,m,w,v,b=t,y=new Int32Array(16),B=new Int32Array(16);for(v=new Int32Array(l),u=0;u<l;u++)y[a[u]]++;for(B[1]=0,c=1;c<n;c++)B[c+1]=B[c]+y[c];for(u=0;u<l;u++)0!==a[u]&&(v[B[a[u]]++]=u);if(w=m=1<<(p=A),1===B[15]){for(d=0;d<w;++d)e[t+d]=new r(0,65535&v[0]);return w}for(d=0,u=0,c=1,h=2;c<=A;++c,h<<=1)for(;y[c]>0;--y[c])i(e,t+d,h,m,new r(255&c,65535&v[u++])),d=s(d,c);for(g=w-1,f=-1,c=A+1,h=2;c<=n;++c,h<<=1)for(;y[c]>0;--y[c])(d&g)!==f&&(t+=m,w+=m=1<<(p=o(y,c,A)),e[b+(f=d&g)]=new r(p+A&255,t-b-f&65535)),i(e,t+(d>>A),h,m,new r(c-A&255,65535&v[u++])),d=s(d,c);return w}},7479:(e,t)=>{function r(e,t){this.offset=e,this.nbits=t}t.kBlockLengthPrefixCode=[new r(1,2),new r(5,2),new r(9,2),new r(13,2),new r(17,3),new r(25,3),new r(33,3),new r(41,3),new r(49,4),new r(65,4),new r(81,4),new r(97,4),new r(113,5),new r(145,5),new r(177,5),new r(209,5),new r(241,6),new r(305,6),new r(369,7),new r(497,8),new r(753,9),new r(1265,10),new r(2289,11),new r(4337,12),new r(8433,13),new r(16625,24)],t.kInsertLengthPrefixCode=[new r(0,0),new r(1,0),new r(2,0),new r(3,0),new r(4,0),new r(5,0),new r(6,1),new r(8,1),new r(10,2),new r(14,2),new r(18,3),new r(26,3),new r(34,4),new r(50,4),new r(66,5),new r(98,5),new r(130,6),new r(194,7),new r(322,8),new r(578,9),new r(1090,10),new r(2114,12),new r(6210,14),new r(22594,24)],t.kCopyLengthPrefixCode=[new r(2,0),new r(3,0),new r(4,0),new r(5,0),new r(6,0),new r(7,0),new r(8,0),new r(9,0),new r(10,1),new r(12,1),new r(14,2),new r(18,2),new r(22,3),new r(30,3),new r(38,4),new r(54,4),new r(70,5),new r(102,5),new r(134,6),new r(198,7),new r(326,8),new r(582,9),new r(1094,10),new r(2118,24)],t.kInsertRangeLut=[0,0,8,8,0,16,8,16,16],t.kCopyRangeLut=[0,8,0,8,16,0,16,8,16]},9094:(e,t)=>{function r(e){this.buffer=e,this.pos=0}function n(e){this.buffer=e,this.pos=0}r.prototype.read=function(e,t,r){this.pos+r>this.buffer.length&&(r=this.buffer.length-this.pos);for(var n=0;n<r;n++)e[t+n]=this.buffer[this.pos+n];return this.pos+=r,r},t.z=r,n.prototype.write=function(e,t){if(this.pos+t>this.buffer.length)throw new Error("Output buffer is not large enough");return this.buffer.set(e.subarray(0,t),this.pos),this.pos+=t,t},t.y=n},615:(e,t,r)=>{var n=r(7887),s=10,i=11;function o(e,t,r){this.prefix=new Uint8Array(e.length),this.transform=t,this.suffix=new Uint8Array(r.length);for(var n=0;n<e.length;n++)this.prefix[n]=e.charCodeAt(n);for(n=0;n<r.length;n++)this.suffix[n]=r.charCodeAt(n)}var A=[new o("",0,""),new o("",0," "),new o(" ",0," "),new o("",12,""),new o("",s," "),new o("",0," the "),new o(" ",0,""),new o("s ",0," "),new o("",0," of "),new o("",s,""),new o("",0," and "),new o("",13,""),new o("",1,""),new o(", ",0," "),new o("",0,", "),new o(" ",s," "),new o("",0," in "),new o("",0," to "),new o("e ",0," "),new o("",0,'"'),new o("",0,"."),new o("",0,'">'),new o("",0,"\n"),new o("",3,""),new o("",0,"]"),new o("",0," for "),new o("",14,""),new o("",2,""),new o("",0," a "),new o("",0," that "),new o(" ",s,""),new o("",0,". "),new o(".",0,""),new o(" ",0,", "),new o("",15,""),new o("",0," with "),new o("",0,"'"),new o("",0," from "),new o("",0," by "),new o("",16,""),new o("",17,""),new o(" the ",0,""),new o("",4,""),new o("",0,". The "),new o("",i,""),new o("",0," on "),new o("",0," as "),new o("",0," is "),new o("",7,""),new o("",1,"ing "),new o("",0,"\n\t"),new o("",0,":"),new o(" ",0,". "),new o("",0,"ed "),new o("",20,""),new o("",18,""),new o("",6,""),new o("",0,"("),new o("",s,", "),new o("",8,""),new o("",0," at "),new o("",0,"ly "),new o(" the ",0," of "),new o("",5,""),new o("",9,""),new o(" ",s,", "),new o("",s,'"'),new o(".",0,"("),new o("",i," "),new o("",s,'">'),new o("",0,'="'),new o(" ",0,"."),new o(".com/",0,""),new o(" the ",0," of the "),new o("",s,"'"),new o("",0,". This "),new o("",0,","),new o(".",0," "),new o("",s,"("),new o("",s,"."),new o("",0," not "),new o(" ",0,'="'),new o("",0,"er "),new o(" ",i," "),new o("",0,"al "),new o(" ",i,""),new o("",0,"='"),new o("",i,'"'),new o("",s,". "),new o(" ",0,"("),new o("",0,"ful "),new o(" ",s,". "),new o("",0,"ive "),new o("",0,"less "),new o("",i,"'"),new o("",0,"est "),new o(" ",s,"."),new o("",i,'">'),new o(" ",0,"='"),new o("",s,","),new o("",0,"ize "),new o("",i,"."),new o("\xc2\xa0",0,""),new o(" ",0,","),new o("",s,'="'),new o("",i,'="'),new o("",0,"ous "),new o("",i,", "),new o("",s,"='"),new o(" ",s,","),new o(" ",i,'="'),new o(" ",i,", "),new o("",i,","),new o("",i,"("),new o("",i,". "),new o(" ",i,"."),new o("",i,"='"),new o(" ",i,". "),new o(" ",s,'="'),new o(" ",i,"='"),new o(" ",s,"='")];function a(e,t){return e[t]<192?(e[t]>=97&&e[t]<=122&&(e[t]^=32),1):e[t]<224?(e[t+1]^=32,2):(e[t+2]^=5,3)}t.kTransforms=A,t.kNumTransforms=A.length,t.transformDictionaryWord=function(e,t,r,o,l){var c,u=A[l].prefix,d=A[l].suffix,h=A[l].transform,f=h<12?0:h-11,g=0,p=t;f>o&&(f=o);for(var m=0;m<u.length;)e[t++]=u[m++];for(r+=f,o-=f,h<=9&&(o-=h),g=0;g<o;g++)e[t++]=n.dictionary[r+g];if(c=t-o,h===s)a(e,c);else if(h===i)for(;o>0;){var w=a(e,c);c+=w,o-=w}for(var v=0;v<d.length;)e[t++]=d[v++];return t-p}},3245:(e,t,r)=>{e.exports=r(4393).BrotliDecompressBuffer},6382:(e,t,r)=>{"use strict";const n=r(4445),s=r(6900),i="function"===typeof Symbol&&"function"===typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.hp=a,t.IS=50;const o=2147483647;function A(e){if(e>o)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,a.prototype),t}function a(e,t,r){if("number"===typeof e){if("string"===typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return u(e)}return l(e,t,r)}function l(e,t,r){if("string"===typeof e)return function(e,t){"string"===typeof t&&""!==t||(t="utf8");if(!a.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const r=0|g(e,t);let n=A(r);const s=n.write(e,t);s!==r&&(n=n.slice(0,s));return n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(Z(e,Uint8Array)){const t=new Uint8Array(e);return h(t.buffer,t.byteOffset,t.byteLength)}return d(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(Z(e,ArrayBuffer)||e&&Z(e.buffer,ArrayBuffer))return h(e,t,r);if("undefined"!==typeof SharedArrayBuffer&&(Z(e,SharedArrayBuffer)||e&&Z(e.buffer,SharedArrayBuffer)))return h(e,t,r);if("number"===typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return a.from(n,t,r);const s=function(e){if(a.isBuffer(e)){const t=0|f(e.length),r=A(t);return 0===r.length||e.copy(r,0,0,t),r}if(void 0!==e.length)return"number"!==typeof e.length||K(e.length)?A(0):d(e);if("Buffer"===e.type&&Array.isArray(e.data))return d(e.data)}(e);if(s)return s;if("undefined"!==typeof Symbol&&null!=Symbol.toPrimitive&&"function"===typeof e[Symbol.toPrimitive])return a.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function c(e){if("number"!==typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function u(e){return c(e),A(e<0?0:0|f(e))}function d(e){const t=e.length<0?0:0|f(e.length),r=A(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function h(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');let n;return n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(n,a.prototype),n}function f(e){if(e>=o)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o.toString(16)+" bytes");return 0|e}function g(e,t){if(a.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||Z(e,ArrayBuffer))return e.byteLength;if("string"!==typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let s=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return U(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return V(e).length;default:if(s)return n?-1:U(e).length;t=(""+t).toLowerCase(),s=!0}}function p(e,t,r){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return F(this,t,r);case"utf8":case"utf-8":return I(this,t,r);case"ascii":return Q(this,t,r);case"latin1":case"binary":return P(this,t,r);case"base64":return x(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return L(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function m(e,t,r){const n=e[t];e[t]=e[r],e[r]=n}function w(e,t,r,n,s){if(0===e.length)return-1;if("string"===typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),K(r=+r)&&(r=s?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(s)return-1;r=e.length-1}else if(r<0){if(!s)return-1;r=0}if("string"===typeof t&&(t=a.from(t,n)),a.isBuffer(t))return 0===t.length?-1:v(e,t,r,n,s);if("number"===typeof t)return t&=255,"function"===typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):v(e,[t],r,n,s);throw new TypeError("val must be string, number or Buffer")}function v(e,t,r,n,s){let i,o=1,A=e.length,a=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;o=2,A/=2,a/=2,r/=2}function l(e,t){return 1===o?e[t]:e.readUInt16BE(t*o)}if(s){let n=-1;for(i=r;i<A;i++)if(l(e,i)===l(t,-1===n?0:i-n)){if(-1===n&&(n=i),i-n+1===a)return n*o}else-1!==n&&(i-=i-n),n=-1}else for(r+a>A&&(r=A-a),i=r;i>=0;i--){let r=!0;for(let n=0;n<a;n++)if(l(e,i+n)!==l(t,n)){r=!1;break}if(r)return i}return-1}function b(e,t,r,n){r=Number(r)||0;const s=e.length-r;n?(n=Number(n))>s&&(n=s):n=s;const i=t.length;let o;for(n>i/2&&(n=i/2),o=0;o<n;++o){const n=parseInt(t.substr(2*o,2),16);if(K(n))return o;e[r+o]=n}return o}function y(e,t,r,n){return q(U(t,e.length-r),e,r,n)}function B(e,t,r,n){return q(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function E(e,t,r,n){return q(V(t),e,r,n)}function C(e,t,r,n){return q(function(e,t){let r,n,s;const i=[];for(let o=0;o<e.length&&!((t-=2)<0);++o)r=e.charCodeAt(o),n=r>>8,s=r%256,i.push(s),i.push(n);return i}(t,e.length-r),e,r,n)}function x(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function I(e,t,r){r=Math.min(e.length,r);const n=[];let s=t;for(;s<r;){const t=e[s];let i=null,o=t>239?4:t>223?3:t>191?2:1;if(s+o<=r){let r,n,A,a;switch(o){case 1:t<128&&(i=t);break;case 2:r=e[s+1],128===(192&r)&&(a=(31&t)<<6|63&r,a>127&&(i=a));break;case 3:r=e[s+1],n=e[s+2],128===(192&r)&&128===(192&n)&&(a=(15&t)<<12|(63&r)<<6|63&n,a>2047&&(a<55296||a>57343)&&(i=a));break;case 4:r=e[s+1],n=e[s+2],A=e[s+3],128===(192&r)&&128===(192&n)&&128===(192&A)&&(a=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&A,a>65535&&a<1114112&&(i=a))}}null===i?(i=65533,o=1):i>65535&&(i-=65536,n.push(i>>>10&1023|55296),i=56320|1023&i),n.push(i),s+=o}return function(e){const t=e.length;if(t<=D)return String.fromCharCode.apply(String,e);let r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=D));return r}(n)}a.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),a.TYPED_ARRAY_SUPPORT||"undefined"===typeof console||"function"!==typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(a.prototype,"parent",{enumerable:!0,get:function(){if(a.isBuffer(this))return this.buffer}}),Object.defineProperty(a.prototype,"offset",{enumerable:!0,get:function(){if(a.isBuffer(this))return this.byteOffset}}),a.poolSize=8192,a.from=function(e,t,r){return l(e,t,r)},Object.setPrototypeOf(a.prototype,Uint8Array.prototype),Object.setPrototypeOf(a,Uint8Array),a.alloc=function(e,t,r){return function(e,t,r){return c(e),e<=0?A(e):void 0!==t?"string"===typeof r?A(e).fill(t,r):A(e).fill(t):A(e)}(e,t,r)},a.allocUnsafe=function(e){return u(e)},a.allocUnsafeSlow=function(e){return u(e)},a.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==a.prototype},a.compare=function(e,t){if(Z(e,Uint8Array)&&(e=a.from(e,e.offset,e.byteLength)),Z(t,Uint8Array)&&(t=a.from(t,t.offset,t.byteLength)),!a.isBuffer(e)||!a.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let s=0,i=Math.min(r,n);s<i;++s)if(e[s]!==t[s]){r=e[s],n=t[s];break}return r<n?-1:n<r?1:0},a.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},a.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return a.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const n=a.allocUnsafe(t);let s=0;for(r=0;r<e.length;++r){let t=e[r];if(Z(t,Uint8Array))s+t.length>n.length?(a.isBuffer(t)||(t=a.from(t)),t.copy(n,s)):Uint8Array.prototype.set.call(n,t,s);else{if(!a.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(n,s)}s+=t.length}return n},a.byteLength=g,a.prototype._isBuffer=!0,a.prototype.swap16=function(){const e=this.length;if(e%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)m(this,t,t+1);return this},a.prototype.swap32=function(){const e=this.length;if(e%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},a.prototype.swap64=function(){const e=this.length;if(e%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},a.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?I(this,0,e):p.apply(this,arguments)},a.prototype.toLocaleString=a.prototype.toString,a.prototype.equals=function(e){if(!a.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===a.compare(this,e)},a.prototype.inspect=function(){let e="";const r=t.IS;return e=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(e+=" ... "),"<Buffer "+e+">"},i&&(a.prototype[i]=a.prototype.inspect),a.prototype.compare=function(e,t,r,n,s){if(Z(e,Uint8Array)&&(e=a.from(e,e.offset,e.byteLength)),!a.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===s&&(s=this.length),t<0||r>e.length||n<0||s>this.length)throw new RangeError("out of range index");if(n>=s&&t>=r)return 0;if(n>=s)return-1;if(t>=r)return 1;if(this===e)return 0;let i=(s>>>=0)-(n>>>=0),o=(r>>>=0)-(t>>>=0);const A=Math.min(i,o),l=this.slice(n,s),c=e.slice(t,r);for(let a=0;a<A;++a)if(l[a]!==c[a]){i=l[a],o=c[a];break}return i<o?-1:o<i?1:0},a.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},a.prototype.indexOf=function(e,t,r){return w(this,e,t,r,!0)},a.prototype.lastIndexOf=function(e,t,r){return w(this,e,t,r,!1)},a.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"===typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}const s=this.length-t;if((void 0===r||r>s)&&(r=s),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let i=!1;for(;;)switch(n){case"hex":return b(this,e,t,r);case"utf8":case"utf-8":return y(this,e,t,r);case"ascii":case"latin1":case"binary":return B(this,e,t,r);case"base64":return E(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,e,t,r);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=!0}},a.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const D=4096;function Q(e,t,r){let n="";r=Math.min(e.length,r);for(let s=t;s<r;++s)n+=String.fromCharCode(127&e[s]);return n}function P(e,t,r){let n="";r=Math.min(e.length,r);for(let s=t;s<r;++s)n+=String.fromCharCode(e[s]);return n}function F(e,t,r){const n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let s="";for(let i=t;i<r;++i)s+=J[e[i]];return s}function L(e,t,r){const n=e.slice(t,r);let s="";for(let i=0;i<n.length-1;i+=2)s+=String.fromCharCode(n[i]+256*n[i+1]);return s}function M(e,t,r){if(e%1!==0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function S(e,t,r,n,s,i){if(!a.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>s||t<i)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function N(e,t,r,n,s){O(t,n,s,e,r,7);let i=Number(t&BigInt(4294967295));e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i;let o=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o,o>>=8,e[r++]=o,r}function k(e,t,r,n,s){O(t,n,s,e,r,7);let i=Number(t&BigInt(4294967295));e[r+7]=i,i>>=8,e[r+6]=i,i>>=8,e[r+5]=i,i>>=8,e[r+4]=i;let o=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=o,o>>=8,e[r+2]=o,o>>=8,e[r+1]=o,o>>=8,e[r]=o,r+8}function R(e,t,r,n,s,i){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function T(e,t,r,n,i){return t=+t,r>>>=0,i||R(e,0,r,4),s.write(e,t,r,n,23,4),r+4}function W(e,t,r,n,i){return t=+t,r>>>=0,i||R(e,0,r,8),s.write(e,t,r,n,52,8),r+8}a.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const n=this.subarray(e,t);return Object.setPrototypeOf(n,a.prototype),n},a.prototype.readUintLE=a.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||M(e,t,this.length);let n=this[e],s=1,i=0;for(;++i<t&&(s*=256);)n+=this[e+i]*s;return n},a.prototype.readUintBE=a.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||M(e,t,this.length);let n=this[e+--t],s=1;for(;t>0&&(s*=256);)n+=this[e+--t]*s;return n},a.prototype.readUint8=a.prototype.readUInt8=function(e,t){return e>>>=0,t||M(e,1,this.length),this[e]},a.prototype.readUint16LE=a.prototype.readUInt16LE=function(e,t){return e>>>=0,t||M(e,2,this.length),this[e]|this[e+1]<<8},a.prototype.readUint16BE=a.prototype.readUInt16BE=function(e,t){return e>>>=0,t||M(e,2,this.length),this[e]<<8|this[e+1]},a.prototype.readUint32LE=a.prototype.readUInt32LE=function(e,t){return e>>>=0,t||M(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},a.prototype.readUint32BE=a.prototype.readUInt32BE=function(e,t){return e>>>=0,t||M(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},a.prototype.readBigUInt64LE=_((function(e){z(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||Y(e,this.length-8);const n=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,s=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(n)+(BigInt(s)<<BigInt(32))})),a.prototype.readBigUInt64BE=_((function(e){z(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||Y(e,this.length-8);const n=t*2**24+65536*this[++e]+256*this[++e]+this[++e],s=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(s)})),a.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||M(e,t,this.length);let n=this[e],s=1,i=0;for(;++i<t&&(s*=256);)n+=this[e+i]*s;return s*=128,n>=s&&(n-=Math.pow(2,8*t)),n},a.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||M(e,t,this.length);let n=t,s=1,i=this[e+--n];for(;n>0&&(s*=256);)i+=this[e+--n]*s;return s*=128,i>=s&&(i-=Math.pow(2,8*t)),i},a.prototype.readInt8=function(e,t){return e>>>=0,t||M(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},a.prototype.readInt16LE=function(e,t){e>>>=0,t||M(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},a.prototype.readInt16BE=function(e,t){e>>>=0,t||M(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},a.prototype.readInt32LE=function(e,t){return e>>>=0,t||M(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},a.prototype.readInt32BE=function(e,t){return e>>>=0,t||M(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},a.prototype.readBigInt64LE=_((function(e){z(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||Y(e,this.length-8);const n=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),a.prototype.readBigInt64BE=_((function(e){z(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||Y(e,this.length-8);const n=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)})),a.prototype.readFloatLE=function(e,t){return e>>>=0,t||M(e,4,this.length),s.read(this,e,!0,23,4)},a.prototype.readFloatBE=function(e,t){return e>>>=0,t||M(e,4,this.length),s.read(this,e,!1,23,4)},a.prototype.readDoubleLE=function(e,t){return e>>>=0,t||M(e,8,this.length),s.read(this,e,!0,52,8)},a.prototype.readDoubleBE=function(e,t){return e>>>=0,t||M(e,8,this.length),s.read(this,e,!1,52,8)},a.prototype.writeUintLE=a.prototype.writeUIntLE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){S(this,e,t,r,Math.pow(2,8*r)-1,0)}let s=1,i=0;for(this[t]=255&e;++i<r&&(s*=256);)this[t+i]=e/s&255;return t+r},a.prototype.writeUintBE=a.prototype.writeUIntBE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){S(this,e,t,r,Math.pow(2,8*r)-1,0)}let s=r-1,i=1;for(this[t+s]=255&e;--s>=0&&(i*=256);)this[t+s]=e/i&255;return t+r},a.prototype.writeUint8=a.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,1,255,0),this[t]=255&e,t+1},a.prototype.writeUint16LE=a.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},a.prototype.writeUint16BE=a.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},a.prototype.writeUint32LE=a.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},a.prototype.writeUint32BE=a.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},a.prototype.writeBigUInt64LE=_((function(e){return N(this,e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,BigInt(0),BigInt("0xffffffffffffffff"))})),a.prototype.writeBigUInt64BE=_((function(e){return k(this,e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,BigInt(0),BigInt("0xffffffffffffffff"))})),a.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);S(this,e,t,r,n-1,-n)}let s=0,i=1,o=0;for(this[t]=255&e;++s<r&&(i*=256);)e<0&&0===o&&0!==this[t+s-1]&&(o=1),this[t+s]=(e/i|0)-o&255;return t+r},a.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){const n=Math.pow(2,8*r-1);S(this,e,t,r,n-1,-n)}let s=r-1,i=1,o=0;for(this[t+s]=255&e;--s>=0&&(i*=256);)e<0&&0===o&&0!==this[t+s+1]&&(o=1),this[t+s]=(e/i|0)-o&255;return t+r},a.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},a.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},a.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},a.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},a.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},a.prototype.writeBigInt64LE=_((function(e){return N(this,e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),a.prototype.writeBigInt64BE=_((function(e){return k(this,e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),a.prototype.writeFloatLE=function(e,t,r){return T(this,e,t,!0,r)},a.prototype.writeFloatBE=function(e,t,r){return T(this,e,t,!1,r)},a.prototype.writeDoubleLE=function(e,t,r){return W(this,e,t,!0,r)},a.prototype.writeDoubleBE=function(e,t,r){return W(this,e,t,!1,r)},a.prototype.copy=function(e,t,r,n){if(!a.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);const s=n-r;return this===e&&"function"===typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),s},a.prototype.fill=function(e,t,r,n){if("string"===typeof e){if("string"===typeof t?(n=t,t=0,r=this.length):"string"===typeof r&&(n=r,r=this.length),void 0!==n&&"string"!==typeof n)throw new TypeError("encoding must be a string");if("string"===typeof n&&!a.isEncoding(n))throw new TypeError("Unknown encoding: "+n);if(1===e.length){const t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"===typeof e?e&=255:"boolean"===typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;let s;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"===typeof e)for(s=t;s<r;++s)this[s]=e;else{const i=a.isBuffer(e)?e:a.from(e,n),o=i.length;if(0===o)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(s=0;s<r-t;++s)this[s+t]=i[s%o]}return this};const j={};function G(e,t,r){j[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function X(e){let t="",r=e.length;const n="-"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function O(e,t,r,n,s,i){if(e>r||e<t){const n="bigint"===typeof t?"n":"";let s;throw s=i>3?0===t||t===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(i+1)}${n}`:`>= -(2${n} ** ${8*(i+1)-1}${n}) and < 2 ** ${8*(i+1)-1}${n}`:`>= ${t}${n} and <= ${r}${n}`,new j.ERR_OUT_OF_RANGE("value",s,e)}!function(e,t,r){z(t,"offset"),void 0!==e[t]&&void 0!==e[t+r]||Y(t,e.length-(r+1))}(n,s,i)}function z(e,t){if("number"!==typeof e)throw new j.ERR_INVALID_ARG_TYPE(t,"number",e)}function Y(e,t,r){if(Math.floor(e)!==e)throw z(e,r),new j.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new j.ERR_BUFFER_OUT_OF_BOUNDS;throw new j.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${t}`,e)}G("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),G("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),G("ERR_OUT_OF_RANGE",(function(e,t,r){let n=`The value of "${e}" is out of range.`,s=r;return Number.isInteger(r)&&Math.abs(r)>2**32?s=X(String(r)):"bigint"===typeof r&&(s=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(s=X(s)),s+="n"),n+=` It must be ${t}. Received ${s}`,n}),RangeError);const H=/[^+/0-9A-Za-z-_]/g;function U(e,t){let r;t=t||1/0;const n=e.length;let s=null;const i=[];for(let o=0;o<n;++o){if(r=e.charCodeAt(o),r>55295&&r<57344){if(!s){if(r>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(o+1===n){(t-=3)>-1&&i.push(239,191,189);continue}s=r;continue}if(r<56320){(t-=3)>-1&&i.push(239,191,189),s=r;continue}r=65536+(s-55296<<10|r-56320)}else s&&(t-=3)>-1&&i.push(239,191,189);if(s=null,r<128){if((t-=1)<0)break;i.push(r)}else if(r<2048){if((t-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function V(e){return n.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(H,"")).length<2)return"";for(;e.length%4!==0;)e+="=";return e}(e))}function q(e,t,r,n){let s;for(s=0;s<n&&!(s+r>=t.length||s>=e.length);++s)t[s+r]=e[s];return s}function Z(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function K(e){return e!==e}const J=function(){const e="0123456789abcdef",t=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let s=0;s<16;++s)t[n+s]=e[r]+e[s]}return t}();function _(e){return"undefined"===typeof BigInt?$:e}function $(){throw new Error("BigInt not supported")}},224:e=>{var t=function(){"use strict";function e(e,t){return null!=t&&e instanceof t}var t,r,n;try{t=Map}catch(A){t=function(){}}try{r=Set}catch(A){r=function(){}}try{n=Promise}catch(A){n=function(){}}function s(i,A,a,l,c){"object"===typeof A&&(a=A.depth,l=A.prototype,c=A.includeNonEnumerable,A=A.circular);var u=[],d=[],h="undefined"!=typeof Buffer;return"undefined"==typeof A&&(A=!0),"undefined"==typeof a&&(a=1/0),function i(a,f){if(null===a)return null;if(0===f)return a;var g,p;if("object"!=typeof a)return a;if(e(a,t))g=new t;else if(e(a,r))g=new r;else if(e(a,n))g=new n((function(e,t){a.then((function(t){e(i(t,f-1))}),(function(e){t(i(e,f-1))}))}));else if(s.__isArray(a))g=[];else if(s.__isRegExp(a))g=new RegExp(a.source,o(a)),a.lastIndex&&(g.lastIndex=a.lastIndex);else if(s.__isDate(a))g=new Date(a.getTime());else{if(h&&Buffer.isBuffer(a))return g=Buffer.allocUnsafe?Buffer.allocUnsafe(a.length):new Buffer(a.length),a.copy(g),g;e(a,Error)?g=Object.create(a):"undefined"==typeof l?(p=Object.getPrototypeOf(a),g=Object.create(p)):(g=Object.create(l),p=l)}if(A){var m=u.indexOf(a);if(-1!=m)return d[m];u.push(a),d.push(g)}for(var w in e(a,t)&&a.forEach((function(e,t){var r=i(t,f-1),n=i(e,f-1);g.set(r,n)})),e(a,r)&&a.forEach((function(e){var t=i(e,f-1);g.add(t)})),a){var v;p&&(v=Object.getOwnPropertyDescriptor(p,w)),v&&null==v.set||(g[w]=i(a[w],f-1))}if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(a);for(w=0;w<b.length;w++){var y=b[w];(!(E=Object.getOwnPropertyDescriptor(a,y))||E.enumerable||c)&&(g[y]=i(a[y],f-1),E.enumerable||Object.defineProperty(g,y,{enumerable:!1}))}}if(c){var B=Object.getOwnPropertyNames(a);for(w=0;w<B.length;w++){var E,C=B[w];(E=Object.getOwnPropertyDescriptor(a,C))&&E.enumerable||(g[C]=i(a[C],f-1),Object.defineProperty(g,C,{enumerable:!1}))}}return g}(i,a)}function i(e){return Object.prototype.toString.call(e)}function o(e){var t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),t}return s.clonePrototype=function(e){if(null===e)return null;var t=function(){};return t.prototype=e,new t},s.__objToStr=i,s.__isDate=function(e){return"object"===typeof e&&"[object Date]"===i(e)},s.__isArray=function(e){return"object"===typeof e&&"[object Array]"===i(e)},s.__isRegExp=function(e){return"object"===typeof e&&"[object RegExp]"===i(e)},s.__getRegExpFlags=o,s}();e.exports&&(e.exports=t)},8301:e=>{"use strict";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},1139:(e,t,r)=>{var n=r(8301),s=r(9849),i=Object.hasOwnProperty,o=Object.create(null);for(var A in n)i.call(n,A)&&(o[n[A]]=A);var a=e.exports={to:{},get:{}};function l(e,t,r){return Math.min(Math.max(t,e),r)}function c(e){var t=Math.round(e).toString(16).toUpperCase();return t.length<2?"0"+t:t}a.get=function(e){var t,r;switch(e.substring(0,3).toLowerCase()){case"hsl":t=a.get.hsl(e),r="hsl";break;case"hwb":t=a.get.hwb(e),r="hwb";break;default:t=a.get.rgb(e),r="rgb"}return t?{model:r,value:t}:null},a.get.rgb=function(e){if(!e)return null;var t,r,s,o=[0,0,0,1];if(t=e.match(/^#([a-f0-9]{6})([a-f0-9]{2})?$/i)){for(s=t[2],t=t[1],r=0;r<3;r++){var A=2*r;o[r]=parseInt(t.slice(A,A+2),16)}s&&(o[3]=parseInt(s,16)/255)}else if(t=e.match(/^#([a-f0-9]{3,4})$/i)){for(s=(t=t[1])[3],r=0;r<3;r++)o[r]=parseInt(t[r]+t[r],16);s&&(o[3]=parseInt(s+s,16)/255)}else if(t=e.match(/^rgba?\(\s*([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/)){for(r=0;r<3;r++)o[r]=parseInt(t[r+1],0);t[4]&&(t[5]?o[3]=.01*parseFloat(t[4]):o[3]=parseFloat(t[4]))}else{if(!(t=e.match(/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/)))return(t=e.match(/^(\w+)$/))?"transparent"===t[1]?[0,0,0,0]:i.call(n,t[1])?((o=n[t[1]])[3]=1,o):null:null;for(r=0;r<3;r++)o[r]=Math.round(2.55*parseFloat(t[r+1]));t[4]&&(t[5]?o[3]=.01*parseFloat(t[4]):o[3]=parseFloat(t[4]))}for(r=0;r<3;r++)o[r]=l(o[r],0,255);return o[3]=l(o[3],0,1),o},a.get.hsl=function(e){if(!e)return null;var t=e.match(/^hsla?\(\s*([+-]?(?:\d{0,3}\.)?\d+)(?:deg)?\s*,?\s*([+-]?[\d\.]+)%\s*,?\s*([+-]?[\d\.]+)%\s*(?:[,|\/]\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/);if(t){var r=parseFloat(t[4]);return[(parseFloat(t[1])%360+360)%360,l(parseFloat(t[2]),0,100),l(parseFloat(t[3]),0,100),l(isNaN(r)?1:r,0,1)]}return null},a.get.hwb=function(e){if(!e)return null;var t=e.match(/^hwb\(\s*([+-]?\d{0,3}(?:\.\d+)?)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/);if(t){var r=parseFloat(t[4]);return[(parseFloat(t[1])%360+360)%360,l(parseFloat(t[2]),0,100),l(parseFloat(t[3]),0,100),l(isNaN(r)?1:r,0,1)]}return null},a.to.hex=function(){var e=s(arguments);return"#"+c(e[0])+c(e[1])+c(e[2])+(e[3]<1?c(Math.round(255*e[3])):"")},a.to.rgb=function(){var e=s(arguments);return e.length<4||1===e[3]?"rgb("+Math.round(e[0])+", "+Math.round(e[1])+", "+Math.round(e[2])+")":"rgba("+Math.round(e[0])+", "+Math.round(e[1])+", "+Math.round(e[2])+", "+e[3]+")"},a.to.rgb.percent=function(){var e=s(arguments),t=Math.round(e[0]/255*100),r=Math.round(e[1]/255*100),n=Math.round(e[2]/255*100);return e.length<4||1===e[3]?"rgb("+t+"%, "+r+"%, "+n+"%)":"rgba("+t+"%, "+r+"%, "+n+"%, "+e[3]+")"},a.to.hsl=function(){var e=s(arguments);return e.length<4||1===e[3]?"hsl("+e[0]+", "+e[1]+"%, "+e[2]+"%)":"hsla("+e[0]+", "+e[1]+"%, "+e[2]+"%, "+e[3]+")"},a.to.hwb=function(){var e=s(arguments),t="";return e.length>=4&&1!==e[3]&&(t=", "+e[3]),"hwb("+e[0]+", "+e[1]+"%, "+e[2]+"%"+t+")"},a.to.keyword=function(e){return o[e.slice(0,3)]}},2995:(e,t,r)=>{const n=r(1139),s=r(1256),i=["keyword","gray","hex"],o={};for(const h of Object.keys(s))o[[...s[h].labels].sort().join("")]=h;const A={};function a(e,t){if(!(this instanceof a))return new a(e,t);if(t&&t in i&&(t=null),t&&!(t in s))throw new Error("Unknown model: "+t);let r,l;if(null==e)this.model="rgb",this.color=[0,0,0],this.valpha=1;else if(e instanceof a)this.model=e.model,this.color=[...e.color],this.valpha=e.valpha;else if("string"===typeof e){const t=n.get(e);if(null===t)throw new Error("Unable to parse color from string: "+e);this.model=t.model,l=s[this.model].channels,this.color=t.value.slice(0,l),this.valpha="number"===typeof t.value[l]?t.value[l]:1}else if(e.length>0){this.model=t||"rgb",l=s[this.model].channels;const r=Array.prototype.slice.call(e,0,l);this.color=d(r,l),this.valpha="number"===typeof e[l]?e[l]:1}else if("number"===typeof e)this.model="rgb",this.color=[e>>16&255,e>>8&255,255&e],this.valpha=1;else{this.valpha=1;const t=Object.keys(e);"alpha"in e&&(t.splice(t.indexOf("alpha"),1),this.valpha="number"===typeof e.alpha?e.alpha:0);const n=t.sort().join("");if(!(n in o))throw new Error("Unable to parse color from object: "+JSON.stringify(e));this.model=o[n];const{labels:i}=s[this.model],A=[];for(r=0;r<i.length;r++)A.push(e[i[r]]);this.color=d(A)}if(A[this.model])for(l=s[this.model].channels,r=0;r<l;r++){const e=A[this.model][r];e&&(this.color[r]=e(this.color[r]))}this.valpha=Math.max(0,Math.min(1,this.valpha)),Object.freeze&&Object.freeze(this)}a.prototype={toString(){return this.string()},toJSON(){return this[this.model]()},string(e){let t=this.model in n.to?this:this.rgb();t=t.round("number"===typeof e?e:1);const r=1===t.valpha?t.color:[...t.color,this.valpha];return n.to[t.model](r)},percentString(e){const t=this.rgb().round("number"===typeof e?e:1),r=1===t.valpha?t.color:[...t.color,this.valpha];return n.to.rgb.percent(r)},array(){return 1===this.valpha?[...this.color]:[...this.color,this.valpha]},object(){const e={},{channels:t}=s[this.model],{labels:r}=s[this.model];for(let n=0;n<t;n++)e[r[n]]=this.color[n];return 1!==this.valpha&&(e.alpha=this.valpha),e},unitArray(){const e=this.rgb().color;return e[0]/=255,e[1]/=255,e[2]/=255,1!==this.valpha&&e.push(this.valpha),e},unitObject(){const e=this.rgb().object();return e.r/=255,e.g/=255,e.b/=255,1!==this.valpha&&(e.alpha=this.valpha),e},round(e){return e=Math.max(e||0,0),new a([...this.color.map(l(e)),this.valpha],this.model)},alpha(e){return void 0!==e?new a([...this.color,Math.max(0,Math.min(1,e))],this.model):this.valpha},red:c("rgb",0,u(255)),green:c("rgb",1,u(255)),blue:c("rgb",2,u(255)),hue:c(["hsl","hsv","hsl","hwb","hcg"],0,(e=>(e%360+360)%360)),saturationl:c("hsl",1,u(100)),lightness:c("hsl",2,u(100)),saturationv:c("hsv",1,u(100)),value:c("hsv",2,u(100)),chroma:c("hcg",1,u(100)),gray:c("hcg",2,u(100)),white:c("hwb",1,u(100)),wblack:c("hwb",2,u(100)),cyan:c("cmyk",0,u(100)),magenta:c("cmyk",1,u(100)),yellow:c("cmyk",2,u(100)),black:c("cmyk",3,u(100)),x:c("xyz",0,u(95.047)),y:c("xyz",1,u(100)),z:c("xyz",2,u(108.833)),l:c("lab",0,u(100)),a:c("lab",1),b:c("lab",2),keyword(e){return void 0!==e?new a(e):s[this.model].keyword(this.color)},hex(e){return void 0!==e?new a(e):n.to.hex(this.rgb().round().color)},hexa(e){if(void 0!==e)return new a(e);const t=this.rgb().round().color;let r=Math.round(255*this.valpha).toString(16).toUpperCase();return 1===r.length&&(r="0"+r),n.to.hex(t)+r},rgbNumber(){const e=this.rgb().color;return(255&e[0])<<16|(255&e[1])<<8|255&e[2]},luminosity(){const e=this.rgb().color,t=[];for(const[r,n]of e.entries()){const e=n/255;t[r]=e<=.04045?e/12.92:((e+.055)/1.055)**2.4}return.2126*t[0]+.7152*t[1]+.0722*t[2]},contrast(e){const t=this.luminosity(),r=e.luminosity();return t>r?(t+.05)/(r+.05):(r+.05)/(t+.05)},level(e){const t=this.contrast(e);return t>=7?"AAA":t>=4.5?"AA":""},isDark(){const e=this.rgb().color;return(2126*e[0]+7152*e[1]+722*e[2])/1e4<128},isLight(){return!this.isDark()},negate(){const e=this.rgb();for(let t=0;t<3;t++)e.color[t]=255-e.color[t];return e},lighten(e){const t=this.hsl();return t.color[2]+=t.color[2]*e,t},darken(e){const t=this.hsl();return t.color[2]-=t.color[2]*e,t},saturate(e){const t=this.hsl();return t.color[1]+=t.color[1]*e,t},desaturate(e){const t=this.hsl();return t.color[1]-=t.color[1]*e,t},whiten(e){const t=this.hwb();return t.color[1]+=t.color[1]*e,t},blacken(e){const t=this.hwb();return t.color[2]+=t.color[2]*e,t},grayscale(){const e=this.rgb().color,t=.3*e[0]+.59*e[1]+.11*e[2];return a.rgb(t,t,t)},fade(e){return this.alpha(this.valpha-this.valpha*e)},opaquer(e){return this.alpha(this.valpha+this.valpha*e)},rotate(e){const t=this.hsl();let r=t.color[0];return r=(r+e)%360,r=r<0?360+r:r,t.color[0]=r,t},mix(e,t){if(!e||!e.rgb)throw new Error('Argument to "mix" was not a Color instance, but rather an instance of '+typeof e);const r=e.rgb(),n=this.rgb(),s=void 0===t?.5:t,i=2*s-1,o=r.alpha()-n.alpha(),A=((i*o===-1?i:(i+o)/(1+i*o))+1)/2,l=1-A;return a.rgb(A*r.red()+l*n.red(),A*r.green()+l*n.green(),A*r.blue()+l*n.blue(),r.alpha()*s+n.alpha()*(1-s))}};for(const h of Object.keys(s)){if(i.includes(h))continue;const{channels:e}=s[h];a.prototype[h]=function(){if(this.model===h)return new a(this);for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return t.length>0?new a(t,h):new a([...(n=s[this.model][h].raw(this.color),Array.isArray(n)?n:[n]),this.valpha],h);var n},a[h]=function(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];let s=r[0];return"number"===typeof s&&(s=d(r,e)),new a(s,h)}}function l(e){return function(t){return function(e,t){return Number(e.toFixed(t))}(t,e)}}function c(e,t,r){e=Array.isArray(e)?e:[e];for(const n of e)(A[n]||(A[n]=[]))[t]=r;return e=e[0],function(n){let s;return void 0!==n?(r&&(n=r(n)),s=this[e](),s.color[t]=n,s):(s=this[e]().color[t],r&&(s=r(s)),s)}}function u(e){return function(t){return Math.max(0,Math.min(e,t))}}function d(e,t){for(let r=0;r<t;r++)"number"!==typeof e[r]&&(e[r]=0);return e}e.exports=a},341:(e,t,r)=>{const n=r(458),s={};for(const o of Object.keys(n))s[n[o]]=o;const i={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};e.exports=i;for(const o of Object.keys(i)){if(!("channels"in i[o]))throw new Error("missing channels property: "+o);if(!("labels"in i[o]))throw new Error("missing channel labels property: "+o);if(i[o].labels.length!==i[o].channels)throw new Error("channel and label counts mismatch: "+o);const{channels:e,labels:t}=i[o];delete i[o].channels,delete i[o].labels,Object.defineProperty(i[o],"channels",{value:e}),Object.defineProperty(i[o],"labels",{value:t})}i.rgb.hsl=function(e){const t=e[0]/255,r=e[1]/255,n=e[2]/255,s=Math.min(t,r,n),i=Math.max(t,r,n),o=i-s;let A,a;i===s?A=0:t===i?A=(r-n)/o:r===i?A=2+(n-t)/o:n===i&&(A=4+(t-r)/o),A=Math.min(60*A,360),A<0&&(A+=360);const l=(s+i)/2;return a=i===s?0:l<=.5?o/(i+s):o/(2-i-s),[A,100*a,100*l]},i.rgb.hsv=function(e){let t,r,n,s,i;const o=e[0]/255,A=e[1]/255,a=e[2]/255,l=Math.max(o,A,a),c=l-Math.min(o,A,a),u=function(e){return(l-e)/6/c+.5};return 0===c?(s=0,i=0):(i=c/l,t=u(o),r=u(A),n=u(a),o===l?s=n-r:A===l?s=1/3+t-n:a===l&&(s=2/3+r-t),s<0?s+=1:s>1&&(s-=1)),[360*s,100*i,100*l]},i.rgb.hwb=function(e){const t=e[0],r=e[1];let n=e[2];const s=i.rgb.hsl(e)[0],o=1/255*Math.min(t,Math.min(r,n));return n=1-1/255*Math.max(t,Math.max(r,n)),[s,100*o,100*n]},i.rgb.cmyk=function(e){const t=e[0]/255,r=e[1]/255,n=e[2]/255,s=Math.min(1-t,1-r,1-n);return[100*((1-t-s)/(1-s)||0),100*((1-r-s)/(1-s)||0),100*((1-n-s)/(1-s)||0),100*s]},i.rgb.keyword=function(e){const t=s[e];if(t)return t;let r,i=1/0;for(const s of Object.keys(n)){const t=n[s],a=(A=t,((o=e)[0]-A[0])**2+(o[1]-A[1])**2+(o[2]-A[2])**2);a<i&&(i=a,r=s)}var o,A;return r},i.keyword.rgb=function(e){return n[e]},i.rgb.xyz=function(e){let t=e[0]/255,r=e[1]/255,n=e[2]/255;t=t>.04045?((t+.055)/1.055)**2.4:t/12.92,r=r>.04045?((r+.055)/1.055)**2.4:r/12.92,n=n>.04045?((n+.055)/1.055)**2.4:n/12.92;return[100*(.4124*t+.3576*r+.1805*n),100*(.2126*t+.7152*r+.0722*n),100*(.0193*t+.1192*r+.9505*n)]},i.rgb.lab=function(e){const t=i.rgb.xyz(e);let r=t[0],n=t[1],s=t[2];r/=95.047,n/=100,s/=108.883,r=r>.008856?r**(1/3):7.787*r+16/116,n=n>.008856?n**(1/3):7.787*n+16/116,s=s>.008856?s**(1/3):7.787*s+16/116;return[116*n-16,500*(r-n),200*(n-s)]},i.hsl.rgb=function(e){const t=e[0]/360,r=e[1]/100,n=e[2]/100;let s,i,o;if(0===r)return o=255*n,[o,o,o];s=n<.5?n*(1+r):n+r-n*r;const A=2*n-s,a=[0,0,0];for(let l=0;l<3;l++)i=t+1/3*-(l-1),i<0&&i++,i>1&&i--,o=6*i<1?A+6*(s-A)*i:2*i<1?s:3*i<2?A+(s-A)*(2/3-i)*6:A,a[l]=255*o;return a},i.hsl.hsv=function(e){const t=e[0];let r=e[1]/100,n=e[2]/100,s=r;const i=Math.max(n,.01);n*=2,r*=n<=1?n:2-n,s*=i<=1?i:2-i;return[t,100*(0===n?2*s/(i+s):2*r/(n+r)),100*((n+r)/2)]},i.hsv.rgb=function(e){const t=e[0]/60,r=e[1]/100;let n=e[2]/100;const s=Math.floor(t)%6,i=t-Math.floor(t),o=255*n*(1-r),A=255*n*(1-r*i),a=255*n*(1-r*(1-i));switch(n*=255,s){case 0:return[n,a,o];case 1:return[A,n,o];case 2:return[o,n,a];case 3:return[o,A,n];case 4:return[a,o,n];case 5:return[n,o,A]}},i.hsv.hsl=function(e){const t=e[0],r=e[1]/100,n=e[2]/100,s=Math.max(n,.01);let i,o;o=(2-r)*n;const A=(2-r)*s;return i=r*s,i/=A<=1?A:2-A,i=i||0,o/=2,[t,100*i,100*o]},i.hwb.rgb=function(e){const t=e[0]/360;let r=e[1]/100,n=e[2]/100;const s=r+n;let i;s>1&&(r/=s,n/=s);const o=Math.floor(6*t),A=1-n;i=6*t-o,0!==(1&o)&&(i=1-i);const a=r+i*(A-r);let l,c,u;switch(o){default:case 6:case 0:l=A,c=a,u=r;break;case 1:l=a,c=A,u=r;break;case 2:l=r,c=A,u=a;break;case 3:l=r,c=a,u=A;break;case 4:l=a,c=r,u=A;break;case 5:l=A,c=r,u=a}return[255*l,255*c,255*u]},i.cmyk.rgb=function(e){const t=e[0]/100,r=e[1]/100,n=e[2]/100,s=e[3]/100;return[255*(1-Math.min(1,t*(1-s)+s)),255*(1-Math.min(1,r*(1-s)+s)),255*(1-Math.min(1,n*(1-s)+s))]},i.xyz.rgb=function(e){const t=e[0]/100,r=e[1]/100,n=e[2]/100;let s,i,o;return s=3.2406*t+-1.5372*r+-.4986*n,i=-.9689*t+1.8758*r+.0415*n,o=.0557*t+-.204*r+1.057*n,s=s>.0031308?1.055*s**(1/2.4)-.055:12.92*s,i=i>.0031308?1.055*i**(1/2.4)-.055:12.92*i,o=o>.0031308?1.055*o**(1/2.4)-.055:12.92*o,s=Math.min(Math.max(0,s),1),i=Math.min(Math.max(0,i),1),o=Math.min(Math.max(0,o),1),[255*s,255*i,255*o]},i.xyz.lab=function(e){let t=e[0],r=e[1],n=e[2];t/=95.047,r/=100,n/=108.883,t=t>.008856?t**(1/3):7.787*t+16/116,r=r>.008856?r**(1/3):7.787*r+16/116,n=n>.008856?n**(1/3):7.787*n+16/116;return[116*r-16,500*(t-r),200*(r-n)]},i.lab.xyz=function(e){let t,r,n;r=(e[0]+16)/116,t=e[1]/500+r,n=r-e[2]/200;const s=r**3,i=t**3,o=n**3;return r=s>.008856?s:(r-16/116)/7.787,t=i>.008856?i:(t-16/116)/7.787,n=o>.008856?o:(n-16/116)/7.787,t*=95.047,r*=100,n*=108.883,[t,r,n]},i.lab.lch=function(e){const t=e[0],r=e[1],n=e[2];let s;s=360*Math.atan2(n,r)/2/Math.PI,s<0&&(s+=360);return[t,Math.sqrt(r*r+n*n),s]},i.lch.lab=function(e){const t=e[0],r=e[1],n=e[2]/360*2*Math.PI;return[t,r*Math.cos(n),r*Math.sin(n)]},i.rgb.ansi16=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const[r,n,s]=e;let o=null===t?i.rgb.hsv(e)[2]:t;if(o=Math.round(o/50),0===o)return 30;let A=30+(Math.round(s/255)<<2|Math.round(n/255)<<1|Math.round(r/255));return 2===o&&(A+=60),A},i.hsv.ansi16=function(e){return i.rgb.ansi16(i.hsv.rgb(e),e[2])},i.rgb.ansi256=function(e){const t=e[0],r=e[1],n=e[2];if(t===r&&r===n)return t<8?16:t>248?231:Math.round((t-8)/247*24)+232;return 16+36*Math.round(t/255*5)+6*Math.round(r/255*5)+Math.round(n/255*5)},i.ansi16.rgb=function(e){let t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),t=t/10.5*255,[t,t,t];const r=.5*(1+~~(e>50));return[(1&t)*r*255,(t>>1&1)*r*255,(t>>2&1)*r*255]},i.ansi256.rgb=function(e){if(e>=232){const t=10*(e-232)+8;return[t,t,t]}let t;e-=16;return[Math.floor(e/36)/5*255,Math.floor((t=e%36)/6)/5*255,t%6/5*255]},i.rgb.hex=function(e){const t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},i.hex.rgb=function(e){const t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];let r=t[0];3===t[0].length&&(r=r.split("").map((e=>e+e)).join(""));const n=parseInt(r,16);return[n>>16&255,n>>8&255,255&n]},i.rgb.hcg=function(e){const t=e[0]/255,r=e[1]/255,n=e[2]/255,s=Math.max(Math.max(t,r),n),i=Math.min(Math.min(t,r),n),o=s-i;let A,a;return A=o<1?i/(1-o):0,a=o<=0?0:s===t?(r-n)/o%6:s===r?2+(n-t)/o:4+(t-r)/o,a/=6,a%=1,[360*a,100*o,100*A]},i.hsl.hcg=function(e){const t=e[1]/100,r=e[2]/100,n=r<.5?2*t*r:2*t*(1-r);let s=0;return n<1&&(s=(r-.5*n)/(1-n)),[e[0],100*n,100*s]},i.hsv.hcg=function(e){const t=e[1]/100,r=e[2]/100,n=t*r;let s=0;return n<1&&(s=(r-n)/(1-n)),[e[0],100*n,100*s]},i.hcg.rgb=function(e){const t=e[0]/360,r=e[1]/100,n=e[2]/100;if(0===r)return[255*n,255*n,255*n];const s=[0,0,0],i=t%1*6,o=i%1,A=1-o;let a=0;switch(Math.floor(i)){case 0:s[0]=1,s[1]=o,s[2]=0;break;case 1:s[0]=A,s[1]=1,s[2]=0;break;case 2:s[0]=0,s[1]=1,s[2]=o;break;case 3:s[0]=0,s[1]=A,s[2]=1;break;case 4:s[0]=o,s[1]=0,s[2]=1;break;default:s[0]=1,s[1]=0,s[2]=A}return a=(1-r)*n,[255*(r*s[0]+a),255*(r*s[1]+a),255*(r*s[2]+a)]},i.hcg.hsv=function(e){const t=e[1]/100,r=t+e[2]/100*(1-t);let n=0;return r>0&&(n=t/r),[e[0],100*n,100*r]},i.hcg.hsl=function(e){const t=e[1]/100,r=e[2]/100*(1-t)+.5*t;let n=0;return r>0&&r<.5?n=t/(2*r):r>=.5&&r<1&&(n=t/(2*(1-r))),[e[0],100*n,100*r]},i.hcg.hwb=function(e){const t=e[1]/100,r=t+e[2]/100*(1-t);return[e[0],100*(r-t),100*(1-r)]},i.hwb.hcg=function(e){const t=e[1]/100,r=1-e[2]/100,n=r-t;let s=0;return n<1&&(s=(r-n)/(1-n)),[e[0],100*n,100*s]},i.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},i.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},i.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},i.gray.hsl=function(e){return[0,0,e[0]]},i.gray.hsv=i.gray.hsl,i.gray.hwb=function(e){return[0,100,e[0]]},i.gray.cmyk=function(e){return[0,0,0,e[0]]},i.gray.lab=function(e){return[e[0],0,0]},i.gray.hex=function(e){const t=255&Math.round(e[0]/100*255),r=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(r.length)+r},i.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}},1256:(e,t,r)=>{const n=r(341),s=r(6729),i={};Object.keys(n).forEach((e=>{i[e]={},Object.defineProperty(i[e],"channels",{value:n[e].channels}),Object.defineProperty(i[e],"labels",{value:n[e].labels});const t=s(e);Object.keys(t).forEach((r=>{const n=t[r];i[e][r]=function(e){const t=function(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];const s=r[0];if(void 0===s||null===s)return s;s.length>1&&(r=s);const i=e(r);if("object"===typeof i)for(let e=i.length,o=0;o<e;o++)i[o]=Math.round(i[o]);return i};return"conversion"in e&&(t.conversion=e.conversion),t}(n),i[e][r].raw=function(e){const t=function(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];const s=r[0];return void 0===s||null===s?s:(s.length>1&&(r=s),e(r))};return"conversion"in e&&(t.conversion=e.conversion),t}(n)}))})),e.exports=i},6729:(e,t,r)=>{const n=r(341);function s(e){const t=function(){const e={},t=Object.keys(n);for(let r=t.length,n=0;n<r;n++)e[t[n]]={distance:-1,parent:null};return e}(),r=[e];for(t[e].distance=0;r.length;){const e=r.pop(),s=Object.keys(n[e]);for(let n=s.length,i=0;i<n;i++){const n=s[i],o=t[n];-1===o.distance&&(o.distance=t[e].distance+1,o.parent=e,r.unshift(n))}}return t}function i(e,t){return function(r){return t(e(r))}}function o(e,t){const r=[t[e].parent,e];let s=n[t[e].parent][e],o=t[e].parent;for(;t[o].parent;)r.unshift(t[o].parent),s=i(n[t[o].parent][o],s),o=t[o].parent;return s.conversion=r,s}e.exports=function(e){const t=s(e),r={},n=Object.keys(t);for(let s=n.length,i=0;i<s;i++){const e=n[i];null!==t[e].parent&&(r[e]=o(e,t))}return r}},458:e=>{"use strict";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},8493:e=>{"use strict";e.exports=class{constructor(e){this.stateTable=e.stateTable,this.accepting=e.accepting,this.tags=e.tags}match(e){var t=this;return{*[Symbol.iterator](){for(var r=1,n=null,s=null,i=null,o=0;o<e.length;o++){var A=e[o];i=r,0===(r=t.stateTable[r][A])&&(null!=n&&null!=s&&s>=n&&(yield[n,s,t.tags[i]]),r=t.stateTable[1][A],n=null),0!==r&&null==n&&(n=o),t.accepting[r]&&(s=o),0===r&&(r=1)}null!=n&&null!=s&&s>=n&&(yield[n,s,t.tags[r]])}}}apply(e,t){for(var[r,n,s]of this.match(e))for(var i of s)"function"===typeof t[i]&&t[i](r,n,e.slice(r,n+1))}}},122:e=>{"use strict";e.exports=function e(t,r){if(t===r)return!0;if(t&&r&&"object"==typeof t&&"object"==typeof r){if(t.constructor!==r.constructor)return!1;var n,s,i;if(Array.isArray(t)){if((n=t.length)!=r.length)return!1;for(s=n;0!==s--;)if(!e(t[s],r[s]))return!1;return!0}if(t.constructor===RegExp)return t.source===r.source&&t.flags===r.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===r.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===r.toString();if((n=(i=Object.keys(t)).length)!==Object.keys(r).length)return!1;for(s=n;0!==s--;)if(!Object.prototype.hasOwnProperty.call(r,i[s]))return!1;for(s=n;0!==s--;){var o=i[s];if(!e(t[o],r[o]))return!1}return!0}return t!==t&&r!==r}},4279:function(e,t,r){"use strict";var n=this&&this.__assign||function(){return n=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var s in t=arguments[r])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e},n.apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var s=r(8137),i=r(5397),o=r(7525),A=n(n({},s.namedReferences),{all:s.namedReferences.html5});function a(e,t,r){t.lastIndex=0;var n,s=t.exec(e);if(s){n="";var i=0;do{i!==s.index&&(n+=e.substring(i,s.index));var o=s[0];n+=r(o),i=s.index+o.length}while(s=t.exec(e));i!==e.length&&(n+=e.substring(i))}else n=e;return n}var l={specialChars:/[<>'"&]/g,nonAscii:/[<>'"&\u0080-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,nonAsciiPrintable:/[<>'"&\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,nonAsciiPrintableOnly:/[\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g,extensive:/[\x01-\x0c\x0e-\x1f\x21-\x2c\x2e-\x2f\x3a-\x40\x5b-\x60\x7b-\x7d\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/g},c={mode:"specialChars",level:"all",numeric:"decimal"};t.encode=function(e,t){var r=void 0===t?c:t,n=r.mode,s=void 0===n?"specialChars":n,i=r.numeric,u=void 0===i?"decimal":i,d=r.level;if(!e)return"";var h=l[s],f=A[void 0===d?"all":d].characters,g="hexadecimal"===u;return a(e,h,(function(e){var t=f[e];if(!t){var r=e.length>1?o.getCodePoint(e,0):e.charCodeAt(0);t=(g?"&#x"+r.toString(16):"&#"+r)+";"}return t}))};var u={scope:"body",level:"all"},d=/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);/g,h=/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g,f={xml:{strict:d,attribute:h,body:s.bodyRegExps.xml},html4:{strict:d,attribute:h,body:s.bodyRegExps.html4},html5:{strict:d,attribute:h,body:s.bodyRegExps.html5}},g=n(n({},f),{all:f.html5}),p=String.fromCharCode,m=p(65533),w={level:"all"};function v(e,t,r,n){var s=e,A=e[e.length-1];if(r&&"="===A)s=e;else if(n&&";"!==A)s=e;else{var a=t[e];if(a)s=a;else if("&"===e[0]&&"#"===e[1]){var l=e[2],c="x"==l||"X"==l?parseInt(e.substr(3),16):parseInt(e.substr(2));s=c>=1114111?m:c>65535?o.fromCodePoint(c):p(i.numericUnicodeMap[c]||c)}}return s}t.decodeEntity=function(e,t){var r=(void 0===t?w:t).level;return e?v(e,A[void 0===r?"all":r].entities,!1,!1):""},t.decode=function(e,t){var r=void 0===t?u:t,n=r.level,s=void 0===n?"all":n,i=r.scope,o=void 0===i?"xml"===s?"strict":"body":i;if(!e)return"";var l=g[s][o],c=A[s].entities,d="attribute"===o,h="strict"===o;return a(e,l,(function(e){return v(e,c,d,h)}))}},8137:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.bodyRegExps={xml:/&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html4:/&notin;|&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,html5:/&centerdot;|&copysr;|&divideontimes;|&gtcc;|&gtcir;|&gtdot;|&gtlPar;|&gtquest;|&gtrapprox;|&gtrarr;|&gtrdot;|&gtreqless;|&gtreqqless;|&gtrless;|&gtrsim;|&ltcc;|&ltcir;|&ltdot;|&lthree;|&ltimes;|&ltlarr;|&ltquest;|&ltrPar;|&ltri;|&ltrie;|&ltrif;|&notin;|&notinE;|&notindot;|&notinva;|&notinvb;|&notinvc;|&notni;|&notniva;|&notnivb;|&notnivc;|&parallel;|&timesb;|&timesbar;|&timesd;|&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g},t.namedReferences={xml:{entities:{"&lt;":"<","&gt;":">","&quot;":'"',"&apos;":"'","&amp;":"&"},characters:{"<":"&lt;",">":"&gt;",'"':"&quot;","'":"&apos;","&":"&amp;"}},html4:{entities:{"&apos;":"'","&nbsp":"\xa0","&nbsp;":"\xa0","&iexcl":"\xa1","&iexcl;":"\xa1","&cent":"\xa2","&cent;":"\xa2","&pound":"\xa3","&pound;":"\xa3","&curren":"\xa4","&curren;":"\xa4","&yen":"\xa5","&yen;":"\xa5","&brvbar":"\xa6","&brvbar;":"\xa6","&sect":"\xa7","&sect;":"\xa7","&uml":"\xa8","&uml;":"\xa8","&copy":"\xa9","&copy;":"\xa9","&ordf":"\xaa","&ordf;":"\xaa","&laquo":"\xab","&laquo;":"\xab","&not":"\xac","&not;":"\xac","&shy":"\xad","&shy;":"\xad","&reg":"\xae","&reg;":"\xae","&macr":"\xaf","&macr;":"\xaf","&deg":"\xb0","&deg;":"\xb0","&plusmn":"\xb1","&plusmn;":"\xb1","&sup2":"\xb2","&sup2;":"\xb2","&sup3":"\xb3","&sup3;":"\xb3","&acute":"\xb4","&acute;":"\xb4","&micro":"\xb5","&micro;":"\xb5","&para":"\xb6","&para;":"\xb6","&middot":"\xb7","&middot;":"\xb7","&cedil":"\xb8","&cedil;":"\xb8","&sup1":"\xb9","&sup1;":"\xb9","&ordm":"\xba","&ordm;":"\xba","&raquo":"\xbb","&raquo;":"\xbb","&frac14":"\xbc","&frac14;":"\xbc","&frac12":"\xbd","&frac12;":"\xbd","&frac34":"\xbe","&frac34;":"\xbe","&iquest":"\xbf","&iquest;":"\xbf","&Agrave":"\xc0","&Agrave;":"\xc0","&Aacute":"\xc1","&Aacute;":"\xc1","&Acirc":"\xc2","&Acirc;":"\xc2","&Atilde":"\xc3","&Atilde;":"\xc3","&Auml":"\xc4","&Auml;":"\xc4","&Aring":"\xc5","&Aring;":"\xc5","&AElig":"\xc6","&AElig;":"\xc6","&Ccedil":"\xc7","&Ccedil;":"\xc7","&Egrave":"\xc8","&Egrave;":"\xc8","&Eacute":"\xc9","&Eacute;":"\xc9","&Ecirc":"\xca","&Ecirc;":"\xca","&Euml":"\xcb","&Euml;":"\xcb","&Igrave":"\xcc","&Igrave;":"\xcc","&Iacute":"\xcd","&Iacute;":"\xcd","&Icirc":"\xce","&Icirc;":"\xce","&Iuml":"\xcf","&Iuml;":"\xcf","&ETH":"\xd0","&ETH;":"\xd0","&Ntilde":"\xd1","&Ntilde;":"\xd1","&Ograve":"\xd2","&Ograve;":"\xd2","&Oacute":"\xd3","&Oacute;":"\xd3","&Ocirc":"\xd4","&Ocirc;":"\xd4","&Otilde":"\xd5","&Otilde;":"\xd5","&Ouml":"\xd6","&Ouml;":"\xd6","&times":"\xd7","&times;":"\xd7","&Oslash":"\xd8","&Oslash;":"\xd8","&Ugrave":"\xd9","&Ugrave;":"\xd9","&Uacute":"\xda","&Uacute;":"\xda","&Ucirc":"\xdb","&Ucirc;":"\xdb","&Uuml":"\xdc","&Uuml;":"\xdc","&Yacute":"\xdd","&Yacute;":"\xdd","&THORN":"\xde","&THORN;":"\xde","&szlig":"\xdf","&szlig;":"\xdf","&agrave":"\xe0","&agrave;":"\xe0","&aacute":"\xe1","&aacute;":"\xe1","&acirc":"\xe2","&acirc;":"\xe2","&atilde":"\xe3","&atilde;":"\xe3","&auml":"\xe4","&auml;":"\xe4","&aring":"\xe5","&aring;":"\xe5","&aelig":"\xe6","&aelig;":"\xe6","&ccedil":"\xe7","&ccedil;":"\xe7","&egrave":"\xe8","&egrave;":"\xe8","&eacute":"\xe9","&eacute;":"\xe9","&ecirc":"\xea","&ecirc;":"\xea","&euml":"\xeb","&euml;":"\xeb","&igrave":"\xec","&igrave;":"\xec","&iacute":"\xed","&iacute;":"\xed","&icirc":"\xee","&icirc;":"\xee","&iuml":"\xef","&iuml;":"\xef","&eth":"\xf0","&eth;":"\xf0","&ntilde":"\xf1","&ntilde;":"\xf1","&ograve":"\xf2","&ograve;":"\xf2","&oacute":"\xf3","&oacute;":"\xf3","&ocirc":"\xf4","&ocirc;":"\xf4","&otilde":"\xf5","&otilde;":"\xf5","&ouml":"\xf6","&ouml;":"\xf6","&divide":"\xf7","&divide;":"\xf7","&oslash":"\xf8","&oslash;":"\xf8","&ugrave":"\xf9","&ugrave;":"\xf9","&uacute":"\xfa","&uacute;":"\xfa","&ucirc":"\xfb","&ucirc;":"\xfb","&uuml":"\xfc","&uuml;":"\xfc","&yacute":"\xfd","&yacute;":"\xfd","&thorn":"\xfe","&thorn;":"\xfe","&yuml":"\xff","&yuml;":"\xff","&quot":'"',"&quot;":'"',"&amp":"&","&amp;":"&","&lt":"<","&lt;":"<","&gt":">","&gt;":">","&OElig;":"\u0152","&oelig;":"\u0153","&Scaron;":"\u0160","&scaron;":"\u0161","&Yuml;":"\u0178","&circ;":"\u02c6","&tilde;":"\u02dc","&ensp;":"\u2002","&emsp;":"\u2003","&thinsp;":"\u2009","&zwnj;":"\u200c","&zwj;":"\u200d","&lrm;":"\u200e","&rlm;":"\u200f","&ndash;":"\u2013","&mdash;":"\u2014","&lsquo;":"\u2018","&rsquo;":"\u2019","&sbquo;":"\u201a","&ldquo;":"\u201c","&rdquo;":"\u201d","&bdquo;":"\u201e","&dagger;":"\u2020","&Dagger;":"\u2021","&permil;":"\u2030","&lsaquo;":"\u2039","&rsaquo;":"\u203a","&euro;":"\u20ac","&fnof;":"\u0192","&Alpha;":"\u0391","&Beta;":"\u0392","&Gamma;":"\u0393","&Delta;":"\u0394","&Epsilon;":"\u0395","&Zeta;":"\u0396","&Eta;":"\u0397","&Theta;":"\u0398","&Iota;":"\u0399","&Kappa;":"\u039a","&Lambda;":"\u039b","&Mu;":"\u039c","&Nu;":"\u039d","&Xi;":"\u039e","&Omicron;":"\u039f","&Pi;":"\u03a0","&Rho;":"\u03a1","&Sigma;":"\u03a3","&Tau;":"\u03a4","&Upsilon;":"\u03a5","&Phi;":"\u03a6","&Chi;":"\u03a7","&Psi;":"\u03a8","&Omega;":"\u03a9","&alpha;":"\u03b1","&beta;":"\u03b2","&gamma;":"\u03b3","&delta;":"\u03b4","&epsilon;":"\u03b5","&zeta;":"\u03b6","&eta;":"\u03b7","&theta;":"\u03b8","&iota;":"\u03b9","&kappa;":"\u03ba","&lambda;":"\u03bb","&mu;":"\u03bc","&nu;":"\u03bd","&xi;":"\u03be","&omicron;":"\u03bf","&pi;":"\u03c0","&rho;":"\u03c1","&sigmaf;":"\u03c2","&sigma;":"\u03c3","&tau;":"\u03c4","&upsilon;":"\u03c5","&phi;":"\u03c6","&chi;":"\u03c7","&psi;":"\u03c8","&omega;":"\u03c9","&thetasym;":"\u03d1","&upsih;":"\u03d2","&piv;":"\u03d6","&bull;":"\u2022","&hellip;":"\u2026","&prime;":"\u2032","&Prime;":"\u2033","&oline;":"\u203e","&frasl;":"\u2044","&weierp;":"\u2118","&image;":"\u2111","&real;":"\u211c","&trade;":"\u2122","&alefsym;":"\u2135","&larr;":"\u2190","&uarr;":"\u2191","&rarr;":"\u2192","&darr;":"\u2193","&harr;":"\u2194","&crarr;":"\u21b5","&lArr;":"\u21d0","&uArr;":"\u21d1","&rArr;":"\u21d2","&dArr;":"\u21d3","&hArr;":"\u21d4","&forall;":"\u2200","&part;":"\u2202","&exist;":"\u2203","&empty;":"\u2205","&nabla;":"\u2207","&isin;":"\u2208","&notin;":"\u2209","&ni;":"\u220b","&prod;":"\u220f","&sum;":"\u2211","&minus;":"\u2212","&lowast;":"\u2217","&radic;":"\u221a","&prop;":"\u221d","&infin;":"\u221e","&ang;":"\u2220","&and;":"\u2227","&or;":"\u2228","&cap;":"\u2229","&cup;":"\u222a","&int;":"\u222b","&there4;":"\u2234","&sim;":"\u223c","&cong;":"\u2245","&asymp;":"\u2248","&ne;":"\u2260","&equiv;":"\u2261","&le;":"\u2264","&ge;":"\u2265","&sub;":"\u2282","&sup;":"\u2283","&nsub;":"\u2284","&sube;":"\u2286","&supe;":"\u2287","&oplus;":"\u2295","&otimes;":"\u2297","&perp;":"\u22a5","&sdot;":"\u22c5","&lceil;":"\u2308","&rceil;":"\u2309","&lfloor;":"\u230a","&rfloor;":"\u230b","&lang;":"\u2329","&rang;":"\u232a","&loz;":"\u25ca","&spades;":"\u2660","&clubs;":"\u2663","&hearts;":"\u2665","&diams;":"\u2666"},characters:{"'":"&apos;","\xa0":"&nbsp;","\xa1":"&iexcl;","\xa2":"&cent;","\xa3":"&pound;","\xa4":"&curren;","\xa5":"&yen;","\xa6":"&brvbar;","\xa7":"&sect;","\xa8":"&uml;","\xa9":"&copy;","\xaa":"&ordf;","\xab":"&laquo;","\xac":"&not;","\xad":"&shy;","\xae":"&reg;","\xaf":"&macr;","\xb0":"&deg;","\xb1":"&plusmn;","\xb2":"&sup2;","\xb3":"&sup3;","\xb4":"&acute;","\xb5":"&micro;","\xb6":"&para;","\xb7":"&middot;","\xb8":"&cedil;","\xb9":"&sup1;","\xba":"&ordm;","\xbb":"&raquo;","\xbc":"&frac14;","\xbd":"&frac12;","\xbe":"&frac34;","\xbf":"&iquest;","\xc0":"&Agrave;","\xc1":"&Aacute;","\xc2":"&Acirc;","\xc3":"&Atilde;","\xc4":"&Auml;","\xc5":"&Aring;","\xc6":"&AElig;","\xc7":"&Ccedil;","\xc8":"&Egrave;","\xc9":"&Eacute;","\xca":"&Ecirc;","\xcb":"&Euml;","\xcc":"&Igrave;","\xcd":"&Iacute;","\xce":"&Icirc;","\xcf":"&Iuml;","\xd0":"&ETH;","\xd1":"&Ntilde;","\xd2":"&Ograve;","\xd3":"&Oacute;","\xd4":"&Ocirc;","\xd5":"&Otilde;","\xd6":"&Ouml;","\xd7":"&times;","\xd8":"&Oslash;","\xd9":"&Ugrave;","\xda":"&Uacute;","\xdb":"&Ucirc;","\xdc":"&Uuml;","\xdd":"&Yacute;","\xde":"&THORN;","\xdf":"&szlig;","\xe0":"&agrave;","\xe1":"&aacute;","\xe2":"&acirc;","\xe3":"&atilde;","\xe4":"&auml;","\xe5":"&aring;","\xe6":"&aelig;","\xe7":"&ccedil;","\xe8":"&egrave;","\xe9":"&eacute;","\xea":"&ecirc;","\xeb":"&euml;","\xec":"&igrave;","\xed":"&iacute;","\xee":"&icirc;","\xef":"&iuml;","\xf0":"&eth;","\xf1":"&ntilde;","\xf2":"&ograve;","\xf3":"&oacute;","\xf4":"&ocirc;","\xf5":"&otilde;","\xf6":"&ouml;","\xf7":"&divide;","\xf8":"&oslash;","\xf9":"&ugrave;","\xfa":"&uacute;","\xfb":"&ucirc;","\xfc":"&uuml;","\xfd":"&yacute;","\xfe":"&thorn;","\xff":"&yuml;",'"':"&quot;","&":"&amp;","<":"&lt;",">":"&gt;","\u0152":"&OElig;","\u0153":"&oelig;","\u0160":"&Scaron;","\u0161":"&scaron;","\u0178":"&Yuml;","\u02c6":"&circ;","\u02dc":"&tilde;","\u2002":"&ensp;","\u2003":"&emsp;","\u2009":"&thinsp;","\u200c":"&zwnj;","\u200d":"&zwj;","\u200e":"&lrm;","\u200f":"&rlm;","\u2013":"&ndash;","\u2014":"&mdash;","\u2018":"&lsquo;","\u2019":"&rsquo;","\u201a":"&sbquo;","\u201c":"&ldquo;","\u201d":"&rdquo;","\u201e":"&bdquo;","\u2020":"&dagger;","\u2021":"&Dagger;","\u2030":"&permil;","\u2039":"&lsaquo;","\u203a":"&rsaquo;","\u20ac":"&euro;","\u0192":"&fnof;","\u0391":"&Alpha;","\u0392":"&Beta;","\u0393":"&Gamma;","\u0394":"&Delta;","\u0395":"&Epsilon;","\u0396":"&Zeta;","\u0397":"&Eta;","\u0398":"&Theta;","\u0399":"&Iota;","\u039a":"&Kappa;","\u039b":"&Lambda;","\u039c":"&Mu;","\u039d":"&Nu;","\u039e":"&Xi;","\u039f":"&Omicron;","\u03a0":"&Pi;","\u03a1":"&Rho;","\u03a3":"&Sigma;","\u03a4":"&Tau;","\u03a5":"&Upsilon;","\u03a6":"&Phi;","\u03a7":"&Chi;","\u03a8":"&Psi;","\u03a9":"&Omega;","\u03b1":"&alpha;","\u03b2":"&beta;","\u03b3":"&gamma;","\u03b4":"&delta;","\u03b5":"&epsilon;","\u03b6":"&zeta;","\u03b7":"&eta;","\u03b8":"&theta;","\u03b9":"&iota;","\u03ba":"&kappa;","\u03bb":"&lambda;","\u03bc":"&mu;","\u03bd":"&nu;","\u03be":"&xi;","\u03bf":"&omicron;","\u03c0":"&pi;","\u03c1":"&rho;","\u03c2":"&sigmaf;","\u03c3":"&sigma;","\u03c4":"&tau;","\u03c5":"&upsilon;","\u03c6":"&phi;","\u03c7":"&chi;","\u03c8":"&psi;","\u03c9":"&omega;","\u03d1":"&thetasym;","\u03d2":"&upsih;","\u03d6":"&piv;","\u2022":"&bull;","\u2026":"&hellip;","\u2032":"&prime;","\u2033":"&Prime;","\u203e":"&oline;","\u2044":"&frasl;","\u2118":"&weierp;","\u2111":"&image;","\u211c":"&real;","\u2122":"&trade;","\u2135":"&alefsym;","\u2190":"&larr;","\u2191":"&uarr;","\u2192":"&rarr;","\u2193":"&darr;","\u2194":"&harr;","\u21b5":"&crarr;","\u21d0":"&lArr;","\u21d1":"&uArr;","\u21d2":"&rArr;","\u21d3":"&dArr;","\u21d4":"&hArr;","\u2200":"&forall;","\u2202":"&part;","\u2203":"&exist;","\u2205":"&empty;","\u2207":"&nabla;","\u2208":"&isin;","\u2209":"&notin;","\u220b":"&ni;","\u220f":"&prod;","\u2211":"&sum;","\u2212":"&minus;","\u2217":"&lowast;","\u221a":"&radic;","\u221d":"&prop;","\u221e":"&infin;","\u2220":"&ang;","\u2227":"&and;","\u2228":"&or;","\u2229":"&cap;","\u222a":"&cup;","\u222b":"&int;","\u2234":"&there4;","\u223c":"&sim;","\u2245":"&cong;","\u2248":"&asymp;","\u2260":"&ne;","\u2261":"&equiv;","\u2264":"&le;","\u2265":"&ge;","\u2282":"&sub;","\u2283":"&sup;","\u2284":"&nsub;","\u2286":"&sube;","\u2287":"&supe;","\u2295":"&oplus;","\u2297":"&otimes;","\u22a5":"&perp;","\u22c5":"&sdot;","\u2308":"&lceil;","\u2309":"&rceil;","\u230a":"&lfloor;","\u230b":"&rfloor;","\u2329":"&lang;","\u232a":"&rang;","\u25ca":"&loz;","\u2660":"&spades;","\u2663":"&clubs;","\u2665":"&hearts;","\u2666":"&diams;"}},html5:{entities:{"&AElig":"\xc6","&AElig;":"\xc6","&AMP":"&","&AMP;":"&","&Aacute":"\xc1","&Aacute;":"\xc1","&Abreve;":"\u0102","&Acirc":"\xc2","&Acirc;":"\xc2","&Acy;":"\u0410","&Afr;":"\ud835\udd04","&Agrave":"\xc0","&Agrave;":"\xc0","&Alpha;":"\u0391","&Amacr;":"\u0100","&And;":"\u2a53","&Aogon;":"\u0104","&Aopf;":"\ud835\udd38","&ApplyFunction;":"\u2061","&Aring":"\xc5","&Aring;":"\xc5","&Ascr;":"\ud835\udc9c","&Assign;":"\u2254","&Atilde":"\xc3","&Atilde;":"\xc3","&Auml":"\xc4","&Auml;":"\xc4","&Backslash;":"\u2216","&Barv;":"\u2ae7","&Barwed;":"\u2306","&Bcy;":"\u0411","&Because;":"\u2235","&Bernoullis;":"\u212c","&Beta;":"\u0392","&Bfr;":"\ud835\udd05","&Bopf;":"\ud835\udd39","&Breve;":"\u02d8","&Bscr;":"\u212c","&Bumpeq;":"\u224e","&CHcy;":"\u0427","&COPY":"\xa9","&COPY;":"\xa9","&Cacute;":"\u0106","&Cap;":"\u22d2","&CapitalDifferentialD;":"\u2145","&Cayleys;":"\u212d","&Ccaron;":"\u010c","&Ccedil":"\xc7","&Ccedil;":"\xc7","&Ccirc;":"\u0108","&Cconint;":"\u2230","&Cdot;":"\u010a","&Cedilla;":"\xb8","&CenterDot;":"\xb7","&Cfr;":"\u212d","&Chi;":"\u03a7","&CircleDot;":"\u2299","&CircleMinus;":"\u2296","&CirclePlus;":"\u2295","&CircleTimes;":"\u2297","&ClockwiseContourIntegral;":"\u2232","&CloseCurlyDoubleQuote;":"\u201d","&CloseCurlyQuote;":"\u2019","&Colon;":"\u2237","&Colone;":"\u2a74","&Congruent;":"\u2261","&Conint;":"\u222f","&ContourIntegral;":"\u222e","&Copf;":"\u2102","&Coproduct;":"\u2210","&CounterClockwiseContourIntegral;":"\u2233","&Cross;":"\u2a2f","&Cscr;":"\ud835\udc9e","&Cup;":"\u22d3","&CupCap;":"\u224d","&DD;":"\u2145","&DDotrahd;":"\u2911","&DJcy;":"\u0402","&DScy;":"\u0405","&DZcy;":"\u040f","&Dagger;":"\u2021","&Darr;":"\u21a1","&Dashv;":"\u2ae4","&Dcaron;":"\u010e","&Dcy;":"\u0414","&Del;":"\u2207","&Delta;":"\u0394","&Dfr;":"\ud835\udd07","&DiacriticalAcute;":"\xb4","&DiacriticalDot;":"\u02d9","&DiacriticalDoubleAcute;":"\u02dd","&DiacriticalGrave;":"`","&DiacriticalTilde;":"\u02dc","&Diamond;":"\u22c4","&DifferentialD;":"\u2146","&Dopf;":"\ud835\udd3b","&Dot;":"\xa8","&DotDot;":"\u20dc","&DotEqual;":"\u2250","&DoubleContourIntegral;":"\u222f","&DoubleDot;":"\xa8","&DoubleDownArrow;":"\u21d3","&DoubleLeftArrow;":"\u21d0","&DoubleLeftRightArrow;":"\u21d4","&DoubleLeftTee;":"\u2ae4","&DoubleLongLeftArrow;":"\u27f8","&DoubleLongLeftRightArrow;":"\u27fa","&DoubleLongRightArrow;":"\u27f9","&DoubleRightArrow;":"\u21d2","&DoubleRightTee;":"\u22a8","&DoubleUpArrow;":"\u21d1","&DoubleUpDownArrow;":"\u21d5","&DoubleVerticalBar;":"\u2225","&DownArrow;":"\u2193","&DownArrowBar;":"\u2913","&DownArrowUpArrow;":"\u21f5","&DownBreve;":"\u0311","&DownLeftRightVector;":"\u2950","&DownLeftTeeVector;":"\u295e","&DownLeftVector;":"\u21bd","&DownLeftVectorBar;":"\u2956","&DownRightTeeVector;":"\u295f","&DownRightVector;":"\u21c1","&DownRightVectorBar;":"\u2957","&DownTee;":"\u22a4","&DownTeeArrow;":"\u21a7","&Downarrow;":"\u21d3","&Dscr;":"\ud835\udc9f","&Dstrok;":"\u0110","&ENG;":"\u014a","&ETH":"\xd0","&ETH;":"\xd0","&Eacute":"\xc9","&Eacute;":"\xc9","&Ecaron;":"\u011a","&Ecirc":"\xca","&Ecirc;":"\xca","&Ecy;":"\u042d","&Edot;":"\u0116","&Efr;":"\ud835\udd08","&Egrave":"\xc8","&Egrave;":"\xc8","&Element;":"\u2208","&Emacr;":"\u0112","&EmptySmallSquare;":"\u25fb","&EmptyVerySmallSquare;":"\u25ab","&Eogon;":"\u0118","&Eopf;":"\ud835\udd3c","&Epsilon;":"\u0395","&Equal;":"\u2a75","&EqualTilde;":"\u2242","&Equilibrium;":"\u21cc","&Escr;":"\u2130","&Esim;":"\u2a73","&Eta;":"\u0397","&Euml":"\xcb","&Euml;":"\xcb","&Exists;":"\u2203","&ExponentialE;":"\u2147","&Fcy;":"\u0424","&Ffr;":"\ud835\udd09","&FilledSmallSquare;":"\u25fc","&FilledVerySmallSquare;":"\u25aa","&Fopf;":"\ud835\udd3d","&ForAll;":"\u2200","&Fouriertrf;":"\u2131","&Fscr;":"\u2131","&GJcy;":"\u0403","&GT":">","&GT;":">","&Gamma;":"\u0393","&Gammad;":"\u03dc","&Gbreve;":"\u011e","&Gcedil;":"\u0122","&Gcirc;":"\u011c","&Gcy;":"\u0413","&Gdot;":"\u0120","&Gfr;":"\ud835\udd0a","&Gg;":"\u22d9","&Gopf;":"\ud835\udd3e","&GreaterEqual;":"\u2265","&GreaterEqualLess;":"\u22db","&GreaterFullEqual;":"\u2267","&GreaterGreater;":"\u2aa2","&GreaterLess;":"\u2277","&GreaterSlantEqual;":"\u2a7e","&GreaterTilde;":"\u2273","&Gscr;":"\ud835\udca2","&Gt;":"\u226b","&HARDcy;":"\u042a","&Hacek;":"\u02c7","&Hat;":"^","&Hcirc;":"\u0124","&Hfr;":"\u210c","&HilbertSpace;":"\u210b","&Hopf;":"\u210d","&HorizontalLine;":"\u2500","&Hscr;":"\u210b","&Hstrok;":"\u0126","&HumpDownHump;":"\u224e","&HumpEqual;":"\u224f","&IEcy;":"\u0415","&IJlig;":"\u0132","&IOcy;":"\u0401","&Iacute":"\xcd","&Iacute;":"\xcd","&Icirc":"\xce","&Icirc;":"\xce","&Icy;":"\u0418","&Idot;":"\u0130","&Ifr;":"\u2111","&Igrave":"\xcc","&Igrave;":"\xcc","&Im;":"\u2111","&Imacr;":"\u012a","&ImaginaryI;":"\u2148","&Implies;":"\u21d2","&Int;":"\u222c","&Integral;":"\u222b","&Intersection;":"\u22c2","&InvisibleComma;":"\u2063","&InvisibleTimes;":"\u2062","&Iogon;":"\u012e","&Iopf;":"\ud835\udd40","&Iota;":"\u0399","&Iscr;":"\u2110","&Itilde;":"\u0128","&Iukcy;":"\u0406","&Iuml":"\xcf","&Iuml;":"\xcf","&Jcirc;":"\u0134","&Jcy;":"\u0419","&Jfr;":"\ud835\udd0d","&Jopf;":"\ud835\udd41","&Jscr;":"\ud835\udca5","&Jsercy;":"\u0408","&Jukcy;":"\u0404","&KHcy;":"\u0425","&KJcy;":"\u040c","&Kappa;":"\u039a","&Kcedil;":"\u0136","&Kcy;":"\u041a","&Kfr;":"\ud835\udd0e","&Kopf;":"\ud835\udd42","&Kscr;":"\ud835\udca6","&LJcy;":"\u0409","&LT":"<","&LT;":"<","&Lacute;":"\u0139","&Lambda;":"\u039b","&Lang;":"\u27ea","&Laplacetrf;":"\u2112","&Larr;":"\u219e","&Lcaron;":"\u013d","&Lcedil;":"\u013b","&Lcy;":"\u041b","&LeftAngleBracket;":"\u27e8","&LeftArrow;":"\u2190","&LeftArrowBar;":"\u21e4","&LeftArrowRightArrow;":"\u21c6","&LeftCeiling;":"\u2308","&LeftDoubleBracket;":"\u27e6","&LeftDownTeeVector;":"\u2961","&LeftDownVector;":"\u21c3","&LeftDownVectorBar;":"\u2959","&LeftFloor;":"\u230a","&LeftRightArrow;":"\u2194","&LeftRightVector;":"\u294e","&LeftTee;":"\u22a3","&LeftTeeArrow;":"\u21a4","&LeftTeeVector;":"\u295a","&LeftTriangle;":"\u22b2","&LeftTriangleBar;":"\u29cf","&LeftTriangleEqual;":"\u22b4","&LeftUpDownVector;":"\u2951","&LeftUpTeeVector;":"\u2960","&LeftUpVector;":"\u21bf","&LeftUpVectorBar;":"\u2958","&LeftVector;":"\u21bc","&LeftVectorBar;":"\u2952","&Leftarrow;":"\u21d0","&Leftrightarrow;":"\u21d4","&LessEqualGreater;":"\u22da","&LessFullEqual;":"\u2266","&LessGreater;":"\u2276","&LessLess;":"\u2aa1","&LessSlantEqual;":"\u2a7d","&LessTilde;":"\u2272","&Lfr;":"\ud835\udd0f","&Ll;":"\u22d8","&Lleftarrow;":"\u21da","&Lmidot;":"\u013f","&LongLeftArrow;":"\u27f5","&LongLeftRightArrow;":"\u27f7","&LongRightArrow;":"\u27f6","&Longleftarrow;":"\u27f8","&Longleftrightarrow;":"\u27fa","&Longrightarrow;":"\u27f9","&Lopf;":"\ud835\udd43","&LowerLeftArrow;":"\u2199","&LowerRightArrow;":"\u2198","&Lscr;":"\u2112","&Lsh;":"\u21b0","&Lstrok;":"\u0141","&Lt;":"\u226a","&Map;":"\u2905","&Mcy;":"\u041c","&MediumSpace;":"\u205f","&Mellintrf;":"\u2133","&Mfr;":"\ud835\udd10","&MinusPlus;":"\u2213","&Mopf;":"\ud835\udd44","&Mscr;":"\u2133","&Mu;":"\u039c","&NJcy;":"\u040a","&Nacute;":"\u0143","&Ncaron;":"\u0147","&Ncedil;":"\u0145","&Ncy;":"\u041d","&NegativeMediumSpace;":"\u200b","&NegativeThickSpace;":"\u200b","&NegativeThinSpace;":"\u200b","&NegativeVeryThinSpace;":"\u200b","&NestedGreaterGreater;":"\u226b","&NestedLessLess;":"\u226a","&NewLine;":"\n","&Nfr;":"\ud835\udd11","&NoBreak;":"\u2060","&NonBreakingSpace;":"\xa0","&Nopf;":"\u2115","&Not;":"\u2aec","&NotCongruent;":"\u2262","&NotCupCap;":"\u226d","&NotDoubleVerticalBar;":"\u2226","&NotElement;":"\u2209","&NotEqual;":"\u2260","&NotEqualTilde;":"\u2242\u0338","&NotExists;":"\u2204","&NotGreater;":"\u226f","&NotGreaterEqual;":"\u2271","&NotGreaterFullEqual;":"\u2267\u0338","&NotGreaterGreater;":"\u226b\u0338","&NotGreaterLess;":"\u2279","&NotGreaterSlantEqual;":"\u2a7e\u0338","&NotGreaterTilde;":"\u2275","&NotHumpDownHump;":"\u224e\u0338","&NotHumpEqual;":"\u224f\u0338","&NotLeftTriangle;":"\u22ea","&NotLeftTriangleBar;":"\u29cf\u0338","&NotLeftTriangleEqual;":"\u22ec","&NotLess;":"\u226e","&NotLessEqual;":"\u2270","&NotLessGreater;":"\u2278","&NotLessLess;":"\u226a\u0338","&NotLessSlantEqual;":"\u2a7d\u0338","&NotLessTilde;":"\u2274","&NotNestedGreaterGreater;":"\u2aa2\u0338","&NotNestedLessLess;":"\u2aa1\u0338","&NotPrecedes;":"\u2280","&NotPrecedesEqual;":"\u2aaf\u0338","&NotPrecedesSlantEqual;":"\u22e0","&NotReverseElement;":"\u220c","&NotRightTriangle;":"\u22eb","&NotRightTriangleBar;":"\u29d0\u0338","&NotRightTriangleEqual;":"\u22ed","&NotSquareSubset;":"\u228f\u0338","&NotSquareSubsetEqual;":"\u22e2","&NotSquareSuperset;":"\u2290\u0338","&NotSquareSupersetEqual;":"\u22e3","&NotSubset;":"\u2282\u20d2","&NotSubsetEqual;":"\u2288","&NotSucceeds;":"\u2281","&NotSucceedsEqual;":"\u2ab0\u0338","&NotSucceedsSlantEqual;":"\u22e1","&NotSucceedsTilde;":"\u227f\u0338","&NotSuperset;":"\u2283\u20d2","&NotSupersetEqual;":"\u2289","&NotTilde;":"\u2241","&NotTildeEqual;":"\u2244","&NotTildeFullEqual;":"\u2247","&NotTildeTilde;":"\u2249","&NotVerticalBar;":"\u2224","&Nscr;":"\ud835\udca9","&Ntilde":"\xd1","&Ntilde;":"\xd1","&Nu;":"\u039d","&OElig;":"\u0152","&Oacute":"\xd3","&Oacute;":"\xd3","&Ocirc":"\xd4","&Ocirc;":"\xd4","&Ocy;":"\u041e","&Odblac;":"\u0150","&Ofr;":"\ud835\udd12","&Ograve":"\xd2","&Ograve;":"\xd2","&Omacr;":"\u014c","&Omega;":"\u03a9","&Omicron;":"\u039f","&Oopf;":"\ud835\udd46","&OpenCurlyDoubleQuote;":"\u201c","&OpenCurlyQuote;":"\u2018","&Or;":"\u2a54","&Oscr;":"\ud835\udcaa","&Oslash":"\xd8","&Oslash;":"\xd8","&Otilde":"\xd5","&Otilde;":"\xd5","&Otimes;":"\u2a37","&Ouml":"\xd6","&Ouml;":"\xd6","&OverBar;":"\u203e","&OverBrace;":"\u23de","&OverBracket;":"\u23b4","&OverParenthesis;":"\u23dc","&PartialD;":"\u2202","&Pcy;":"\u041f","&Pfr;":"\ud835\udd13","&Phi;":"\u03a6","&Pi;":"\u03a0","&PlusMinus;":"\xb1","&Poincareplane;":"\u210c","&Popf;":"\u2119","&Pr;":"\u2abb","&Precedes;":"\u227a","&PrecedesEqual;":"\u2aaf","&PrecedesSlantEqual;":"\u227c","&PrecedesTilde;":"\u227e","&Prime;":"\u2033","&Product;":"\u220f","&Proportion;":"\u2237","&Proportional;":"\u221d","&Pscr;":"\ud835\udcab","&Psi;":"\u03a8","&QUOT":'"',"&QUOT;":'"',"&Qfr;":"\ud835\udd14","&Qopf;":"\u211a","&Qscr;":"\ud835\udcac","&RBarr;":"\u2910","&REG":"\xae","&REG;":"\xae","&Racute;":"\u0154","&Rang;":"\u27eb","&Rarr;":"\u21a0","&Rarrtl;":"\u2916","&Rcaron;":"\u0158","&Rcedil;":"\u0156","&Rcy;":"\u0420","&Re;":"\u211c","&ReverseElement;":"\u220b","&ReverseEquilibrium;":"\u21cb","&ReverseUpEquilibrium;":"\u296f","&Rfr;":"\u211c","&Rho;":"\u03a1","&RightAngleBracket;":"\u27e9","&RightArrow;":"\u2192","&RightArrowBar;":"\u21e5","&RightArrowLeftArrow;":"\u21c4","&RightCeiling;":"\u2309","&RightDoubleBracket;":"\u27e7","&RightDownTeeVector;":"\u295d","&RightDownVector;":"\u21c2","&RightDownVectorBar;":"\u2955","&RightFloor;":"\u230b","&RightTee;":"\u22a2","&RightTeeArrow;":"\u21a6","&RightTeeVector;":"\u295b","&RightTriangle;":"\u22b3","&RightTriangleBar;":"\u29d0","&RightTriangleEqual;":"\u22b5","&RightUpDownVector;":"\u294f","&RightUpTeeVector;":"\u295c","&RightUpVector;":"\u21be","&RightUpVectorBar;":"\u2954","&RightVector;":"\u21c0","&RightVectorBar;":"\u2953","&Rightarrow;":"\u21d2","&Ropf;":"\u211d","&RoundImplies;":"\u2970","&Rrightarrow;":"\u21db","&Rscr;":"\u211b","&Rsh;":"\u21b1","&RuleDelayed;":"\u29f4","&SHCHcy;":"\u0429","&SHcy;":"\u0428","&SOFTcy;":"\u042c","&Sacute;":"\u015a","&Sc;":"\u2abc","&Scaron;":"\u0160","&Scedil;":"\u015e","&Scirc;":"\u015c","&Scy;":"\u0421","&Sfr;":"\ud835\udd16","&ShortDownArrow;":"\u2193","&ShortLeftArrow;":"\u2190","&ShortRightArrow;":"\u2192","&ShortUpArrow;":"\u2191","&Sigma;":"\u03a3","&SmallCircle;":"\u2218","&Sopf;":"\ud835\udd4a","&Sqrt;":"\u221a","&Square;":"\u25a1","&SquareIntersection;":"\u2293","&SquareSubset;":"\u228f","&SquareSubsetEqual;":"\u2291","&SquareSuperset;":"\u2290","&SquareSupersetEqual;":"\u2292","&SquareUnion;":"\u2294","&Sscr;":"\ud835\udcae","&Star;":"\u22c6","&Sub;":"\u22d0","&Subset;":"\u22d0","&SubsetEqual;":"\u2286","&Succeeds;":"\u227b","&SucceedsEqual;":"\u2ab0","&SucceedsSlantEqual;":"\u227d","&SucceedsTilde;":"\u227f","&SuchThat;":"\u220b","&Sum;":"\u2211","&Sup;":"\u22d1","&Superset;":"\u2283","&SupersetEqual;":"\u2287","&Supset;":"\u22d1","&THORN":"\xde","&THORN;":"\xde","&TRADE;":"\u2122","&TSHcy;":"\u040b","&TScy;":"\u0426","&Tab;":"\t","&Tau;":"\u03a4","&Tcaron;":"\u0164","&Tcedil;":"\u0162","&Tcy;":"\u0422","&Tfr;":"\ud835\udd17","&Therefore;":"\u2234","&Theta;":"\u0398","&ThickSpace;":"\u205f\u200a","&ThinSpace;":"\u2009","&Tilde;":"\u223c","&TildeEqual;":"\u2243","&TildeFullEqual;":"\u2245","&TildeTilde;":"\u2248","&Topf;":"\ud835\udd4b","&TripleDot;":"\u20db","&Tscr;":"\ud835\udcaf","&Tstrok;":"\u0166","&Uacute":"\xda","&Uacute;":"\xda","&Uarr;":"\u219f","&Uarrocir;":"\u2949","&Ubrcy;":"\u040e","&Ubreve;":"\u016c","&Ucirc":"\xdb","&Ucirc;":"\xdb","&Ucy;":"\u0423","&Udblac;":"\u0170","&Ufr;":"\ud835\udd18","&Ugrave":"\xd9","&Ugrave;":"\xd9","&Umacr;":"\u016a","&UnderBar;":"_","&UnderBrace;":"\u23df","&UnderBracket;":"\u23b5","&UnderParenthesis;":"\u23dd","&Union;":"\u22c3","&UnionPlus;":"\u228e","&Uogon;":"\u0172","&Uopf;":"\ud835\udd4c","&UpArrow;":"\u2191","&UpArrowBar;":"\u2912","&UpArrowDownArrow;":"\u21c5","&UpDownArrow;":"\u2195","&UpEquilibrium;":"\u296e","&UpTee;":"\u22a5","&UpTeeArrow;":"\u21a5","&Uparrow;":"\u21d1","&Updownarrow;":"\u21d5","&UpperLeftArrow;":"\u2196","&UpperRightArrow;":"\u2197","&Upsi;":"\u03d2","&Upsilon;":"\u03a5","&Uring;":"\u016e","&Uscr;":"\ud835\udcb0","&Utilde;":"\u0168","&Uuml":"\xdc","&Uuml;":"\xdc","&VDash;":"\u22ab","&Vbar;":"\u2aeb","&Vcy;":"\u0412","&Vdash;":"\u22a9","&Vdashl;":"\u2ae6","&Vee;":"\u22c1","&Verbar;":"\u2016","&Vert;":"\u2016","&VerticalBar;":"\u2223","&VerticalLine;":"|","&VerticalSeparator;":"\u2758","&VerticalTilde;":"\u2240","&VeryThinSpace;":"\u200a","&Vfr;":"\ud835\udd19","&Vopf;":"\ud835\udd4d","&Vscr;":"\ud835\udcb1","&Vvdash;":"\u22aa","&Wcirc;":"\u0174","&Wedge;":"\u22c0","&Wfr;":"\ud835\udd1a","&Wopf;":"\ud835\udd4e","&Wscr;":"\ud835\udcb2","&Xfr;":"\ud835\udd1b","&Xi;":"\u039e","&Xopf;":"\ud835\udd4f","&Xscr;":"\ud835\udcb3","&YAcy;":"\u042f","&YIcy;":"\u0407","&YUcy;":"\u042e","&Yacute":"\xdd","&Yacute;":"\xdd","&Ycirc;":"\u0176","&Ycy;":"\u042b","&Yfr;":"\ud835\udd1c","&Yopf;":"\ud835\udd50","&Yscr;":"\ud835\udcb4","&Yuml;":"\u0178","&ZHcy;":"\u0416","&Zacute;":"\u0179","&Zcaron;":"\u017d","&Zcy;":"\u0417","&Zdot;":"\u017b","&ZeroWidthSpace;":"\u200b","&Zeta;":"\u0396","&Zfr;":"\u2128","&Zopf;":"\u2124","&Zscr;":"\ud835\udcb5","&aacute":"\xe1","&aacute;":"\xe1","&abreve;":"\u0103","&ac;":"\u223e","&acE;":"\u223e\u0333","&acd;":"\u223f","&acirc":"\xe2","&acirc;":"\xe2","&acute":"\xb4","&acute;":"\xb4","&acy;":"\u0430","&aelig":"\xe6","&aelig;":"\xe6","&af;":"\u2061","&afr;":"\ud835\udd1e","&agrave":"\xe0","&agrave;":"\xe0","&alefsym;":"\u2135","&aleph;":"\u2135","&alpha;":"\u03b1","&amacr;":"\u0101","&amalg;":"\u2a3f","&amp":"&","&amp;":"&","&and;":"\u2227","&andand;":"\u2a55","&andd;":"\u2a5c","&andslope;":"\u2a58","&andv;":"\u2a5a","&ang;":"\u2220","&ange;":"\u29a4","&angle;":"\u2220","&angmsd;":"\u2221","&angmsdaa;":"\u29a8","&angmsdab;":"\u29a9","&angmsdac;":"\u29aa","&angmsdad;":"\u29ab","&angmsdae;":"\u29ac","&angmsdaf;":"\u29ad","&angmsdag;":"\u29ae","&angmsdah;":"\u29af","&angrt;":"\u221f","&angrtvb;":"\u22be","&angrtvbd;":"\u299d","&angsph;":"\u2222","&angst;":"\xc5","&angzarr;":"\u237c","&aogon;":"\u0105","&aopf;":"\ud835\udd52","&ap;":"\u2248","&apE;":"\u2a70","&apacir;":"\u2a6f","&ape;":"\u224a","&apid;":"\u224b","&apos;":"'","&approx;":"\u2248","&approxeq;":"\u224a","&aring":"\xe5","&aring;":"\xe5","&ascr;":"\ud835\udcb6","&ast;":"*","&asymp;":"\u2248","&asympeq;":"\u224d","&atilde":"\xe3","&atilde;":"\xe3","&auml":"\xe4","&auml;":"\xe4","&awconint;":"\u2233","&awint;":"\u2a11","&bNot;":"\u2aed","&backcong;":"\u224c","&backepsilon;":"\u03f6","&backprime;":"\u2035","&backsim;":"\u223d","&backsimeq;":"\u22cd","&barvee;":"\u22bd","&barwed;":"\u2305","&barwedge;":"\u2305","&bbrk;":"\u23b5","&bbrktbrk;":"\u23b6","&bcong;":"\u224c","&bcy;":"\u0431","&bdquo;":"\u201e","&becaus;":"\u2235","&because;":"\u2235","&bemptyv;":"\u29b0","&bepsi;":"\u03f6","&bernou;":"\u212c","&beta;":"\u03b2","&beth;":"\u2136","&between;":"\u226c","&bfr;":"\ud835\udd1f","&bigcap;":"\u22c2","&bigcirc;":"\u25ef","&bigcup;":"\u22c3","&bigodot;":"\u2a00","&bigoplus;":"\u2a01","&bigotimes;":"\u2a02","&bigsqcup;":"\u2a06","&bigstar;":"\u2605","&bigtriangledown;":"\u25bd","&bigtriangleup;":"\u25b3","&biguplus;":"\u2a04","&bigvee;":"\u22c1","&bigwedge;":"\u22c0","&bkarow;":"\u290d","&blacklozenge;":"\u29eb","&blacksquare;":"\u25aa","&blacktriangle;":"\u25b4","&blacktriangledown;":"\u25be","&blacktriangleleft;":"\u25c2","&blacktriangleright;":"\u25b8","&blank;":"\u2423","&blk12;":"\u2592","&blk14;":"\u2591","&blk34;":"\u2593","&block;":"\u2588","&bne;":"=\u20e5","&bnequiv;":"\u2261\u20e5","&bnot;":"\u2310","&bopf;":"\ud835\udd53","&bot;":"\u22a5","&bottom;":"\u22a5","&bowtie;":"\u22c8","&boxDL;":"\u2557","&boxDR;":"\u2554","&boxDl;":"\u2556","&boxDr;":"\u2553","&boxH;":"\u2550","&boxHD;":"\u2566","&boxHU;":"\u2569","&boxHd;":"\u2564","&boxHu;":"\u2567","&boxUL;":"\u255d","&boxUR;":"\u255a","&boxUl;":"\u255c","&boxUr;":"\u2559","&boxV;":"\u2551","&boxVH;":"\u256c","&boxVL;":"\u2563","&boxVR;":"\u2560","&boxVh;":"\u256b","&boxVl;":"\u2562","&boxVr;":"\u255f","&boxbox;":"\u29c9","&boxdL;":"\u2555","&boxdR;":"\u2552","&boxdl;":"\u2510","&boxdr;":"\u250c","&boxh;":"\u2500","&boxhD;":"\u2565","&boxhU;":"\u2568","&boxhd;":"\u252c","&boxhu;":"\u2534","&boxminus;":"\u229f","&boxplus;":"\u229e","&boxtimes;":"\u22a0","&boxuL;":"\u255b","&boxuR;":"\u2558","&boxul;":"\u2518","&boxur;":"\u2514","&boxv;":"\u2502","&boxvH;":"\u256a","&boxvL;":"\u2561","&boxvR;":"\u255e","&boxvh;":"\u253c","&boxvl;":"\u2524","&boxvr;":"\u251c","&bprime;":"\u2035","&breve;":"\u02d8","&brvbar":"\xa6","&brvbar;":"\xa6","&bscr;":"\ud835\udcb7","&bsemi;":"\u204f","&bsim;":"\u223d","&bsime;":"\u22cd","&bsol;":"\\","&bsolb;":"\u29c5","&bsolhsub;":"\u27c8","&bull;":"\u2022","&bullet;":"\u2022","&bump;":"\u224e","&bumpE;":"\u2aae","&bumpe;":"\u224f","&bumpeq;":"\u224f","&cacute;":"\u0107","&cap;":"\u2229","&capand;":"\u2a44","&capbrcup;":"\u2a49","&capcap;":"\u2a4b","&capcup;":"\u2a47","&capdot;":"\u2a40","&caps;":"\u2229\ufe00","&caret;":"\u2041","&caron;":"\u02c7","&ccaps;":"\u2a4d","&ccaron;":"\u010d","&ccedil":"\xe7","&ccedil;":"\xe7","&ccirc;":"\u0109","&ccups;":"\u2a4c","&ccupssm;":"\u2a50","&cdot;":"\u010b","&cedil":"\xb8","&cedil;":"\xb8","&cemptyv;":"\u29b2","&cent":"\xa2","&cent;":"\xa2","&centerdot;":"\xb7","&cfr;":"\ud835\udd20","&chcy;":"\u0447","&check;":"\u2713","&checkmark;":"\u2713","&chi;":"\u03c7","&cir;":"\u25cb","&cirE;":"\u29c3","&circ;":"\u02c6","&circeq;":"\u2257","&circlearrowleft;":"\u21ba","&circlearrowright;":"\u21bb","&circledR;":"\xae","&circledS;":"\u24c8","&circledast;":"\u229b","&circledcirc;":"\u229a","&circleddash;":"\u229d","&cire;":"\u2257","&cirfnint;":"\u2a10","&cirmid;":"\u2aef","&cirscir;":"\u29c2","&clubs;":"\u2663","&clubsuit;":"\u2663","&colon;":":","&colone;":"\u2254","&coloneq;":"\u2254","&comma;":",","&commat;":"@","&comp;":"\u2201","&compfn;":"\u2218","&complement;":"\u2201","&complexes;":"\u2102","&cong;":"\u2245","&congdot;":"\u2a6d","&conint;":"\u222e","&copf;":"\ud835\udd54","&coprod;":"\u2210","&copy":"\xa9","&copy;":"\xa9","&copysr;":"\u2117","&crarr;":"\u21b5","&cross;":"\u2717","&cscr;":"\ud835\udcb8","&csub;":"\u2acf","&csube;":"\u2ad1","&csup;":"\u2ad0","&csupe;":"\u2ad2","&ctdot;":"\u22ef","&cudarrl;":"\u2938","&cudarrr;":"\u2935","&cuepr;":"\u22de","&cuesc;":"\u22df","&cularr;":"\u21b6","&cularrp;":"\u293d","&cup;":"\u222a","&cupbrcap;":"\u2a48","&cupcap;":"\u2a46","&cupcup;":"\u2a4a","&cupdot;":"\u228d","&cupor;":"\u2a45","&cups;":"\u222a\ufe00","&curarr;":"\u21b7","&curarrm;":"\u293c","&curlyeqprec;":"\u22de","&curlyeqsucc;":"\u22df","&curlyvee;":"\u22ce","&curlywedge;":"\u22cf","&curren":"\xa4","&curren;":"\xa4","&curvearrowleft;":"\u21b6","&curvearrowright;":"\u21b7","&cuvee;":"\u22ce","&cuwed;":"\u22cf","&cwconint;":"\u2232","&cwint;":"\u2231","&cylcty;":"\u232d","&dArr;":"\u21d3","&dHar;":"\u2965","&dagger;":"\u2020","&daleth;":"\u2138","&darr;":"\u2193","&dash;":"\u2010","&dashv;":"\u22a3","&dbkarow;":"\u290f","&dblac;":"\u02dd","&dcaron;":"\u010f","&dcy;":"\u0434","&dd;":"\u2146","&ddagger;":"\u2021","&ddarr;":"\u21ca","&ddotseq;":"\u2a77","&deg":"\xb0","&deg;":"\xb0","&delta;":"\u03b4","&demptyv;":"\u29b1","&dfisht;":"\u297f","&dfr;":"\ud835\udd21","&dharl;":"\u21c3","&dharr;":"\u21c2","&diam;":"\u22c4","&diamond;":"\u22c4","&diamondsuit;":"\u2666","&diams;":"\u2666","&die;":"\xa8","&digamma;":"\u03dd","&disin;":"\u22f2","&div;":"\xf7","&divide":"\xf7","&divide;":"\xf7","&divideontimes;":"\u22c7","&divonx;":"\u22c7","&djcy;":"\u0452","&dlcorn;":"\u231e","&dlcrop;":"\u230d","&dollar;":"$","&dopf;":"\ud835\udd55","&dot;":"\u02d9","&doteq;":"\u2250","&doteqdot;":"\u2251","&dotminus;":"\u2238","&dotplus;":"\u2214","&dotsquare;":"\u22a1","&doublebarwedge;":"\u2306","&downarrow;":"\u2193","&downdownarrows;":"\u21ca","&downharpoonleft;":"\u21c3","&downharpoonright;":"\u21c2","&drbkarow;":"\u2910","&drcorn;":"\u231f","&drcrop;":"\u230c","&dscr;":"\ud835\udcb9","&dscy;":"\u0455","&dsol;":"\u29f6","&dstrok;":"\u0111","&dtdot;":"\u22f1","&dtri;":"\u25bf","&dtrif;":"\u25be","&duarr;":"\u21f5","&duhar;":"\u296f","&dwangle;":"\u29a6","&dzcy;":"\u045f","&dzigrarr;":"\u27ff","&eDDot;":"\u2a77","&eDot;":"\u2251","&eacute":"\xe9","&eacute;":"\xe9","&easter;":"\u2a6e","&ecaron;":"\u011b","&ecir;":"\u2256","&ecirc":"\xea","&ecirc;":"\xea","&ecolon;":"\u2255","&ecy;":"\u044d","&edot;":"\u0117","&ee;":"\u2147","&efDot;":"\u2252","&efr;":"\ud835\udd22","&eg;":"\u2a9a","&egrave":"\xe8","&egrave;":"\xe8","&egs;":"\u2a96","&egsdot;":"\u2a98","&el;":"\u2a99","&elinters;":"\u23e7","&ell;":"\u2113","&els;":"\u2a95","&elsdot;":"\u2a97","&emacr;":"\u0113","&empty;":"\u2205","&emptyset;":"\u2205","&emptyv;":"\u2205","&emsp13;":"\u2004","&emsp14;":"\u2005","&emsp;":"\u2003","&eng;":"\u014b","&ensp;":"\u2002","&eogon;":"\u0119","&eopf;":"\ud835\udd56","&epar;":"\u22d5","&eparsl;":"\u29e3","&eplus;":"\u2a71","&epsi;":"\u03b5","&epsilon;":"\u03b5","&epsiv;":"\u03f5","&eqcirc;":"\u2256","&eqcolon;":"\u2255","&eqsim;":"\u2242","&eqslantgtr;":"\u2a96","&eqslantless;":"\u2a95","&equals;":"=","&equest;":"\u225f","&equiv;":"\u2261","&equivDD;":"\u2a78","&eqvparsl;":"\u29e5","&erDot;":"\u2253","&erarr;":"\u2971","&escr;":"\u212f","&esdot;":"\u2250","&esim;":"\u2242","&eta;":"\u03b7","&eth":"\xf0","&eth;":"\xf0","&euml":"\xeb","&euml;":"\xeb","&euro;":"\u20ac","&excl;":"!","&exist;":"\u2203","&expectation;":"\u2130","&exponentiale;":"\u2147","&fallingdotseq;":"\u2252","&fcy;":"\u0444","&female;":"\u2640","&ffilig;":"\ufb03","&fflig;":"\ufb00","&ffllig;":"\ufb04","&ffr;":"\ud835\udd23","&filig;":"\ufb01","&fjlig;":"fj","&flat;":"\u266d","&fllig;":"\ufb02","&fltns;":"\u25b1","&fnof;":"\u0192","&fopf;":"\ud835\udd57","&forall;":"\u2200","&fork;":"\u22d4","&forkv;":"\u2ad9","&fpartint;":"\u2a0d","&frac12":"\xbd","&frac12;":"\xbd","&frac13;":"\u2153","&frac14":"\xbc","&frac14;":"\xbc","&frac15;":"\u2155","&frac16;":"\u2159","&frac18;":"\u215b","&frac23;":"\u2154","&frac25;":"\u2156","&frac34":"\xbe","&frac34;":"\xbe","&frac35;":"\u2157","&frac38;":"\u215c","&frac45;":"\u2158","&frac56;":"\u215a","&frac58;":"\u215d","&frac78;":"\u215e","&frasl;":"\u2044","&frown;":"\u2322","&fscr;":"\ud835\udcbb","&gE;":"\u2267","&gEl;":"\u2a8c","&gacute;":"\u01f5","&gamma;":"\u03b3","&gammad;":"\u03dd","&gap;":"\u2a86","&gbreve;":"\u011f","&gcirc;":"\u011d","&gcy;":"\u0433","&gdot;":"\u0121","&ge;":"\u2265","&gel;":"\u22db","&geq;":"\u2265","&geqq;":"\u2267","&geqslant;":"\u2a7e","&ges;":"\u2a7e","&gescc;":"\u2aa9","&gesdot;":"\u2a80","&gesdoto;":"\u2a82","&gesdotol;":"\u2a84","&gesl;":"\u22db\ufe00","&gesles;":"\u2a94","&gfr;":"\ud835\udd24","&gg;":"\u226b","&ggg;":"\u22d9","&gimel;":"\u2137","&gjcy;":"\u0453","&gl;":"\u2277","&glE;":"\u2a92","&gla;":"\u2aa5","&glj;":"\u2aa4","&gnE;":"\u2269","&gnap;":"\u2a8a","&gnapprox;":"\u2a8a","&gne;":"\u2a88","&gneq;":"\u2a88","&gneqq;":"\u2269","&gnsim;":"\u22e7","&gopf;":"\ud835\udd58","&grave;":"`","&gscr;":"\u210a","&gsim;":"\u2273","&gsime;":"\u2a8e","&gsiml;":"\u2a90","&gt":">","&gt;":">","&gtcc;":"\u2aa7","&gtcir;":"\u2a7a","&gtdot;":"\u22d7","&gtlPar;":"\u2995","&gtquest;":"\u2a7c","&gtrapprox;":"\u2a86","&gtrarr;":"\u2978","&gtrdot;":"\u22d7","&gtreqless;":"\u22db","&gtreqqless;":"\u2a8c","&gtrless;":"\u2277","&gtrsim;":"\u2273","&gvertneqq;":"\u2269\ufe00","&gvnE;":"\u2269\ufe00","&hArr;":"\u21d4","&hairsp;":"\u200a","&half;":"\xbd","&hamilt;":"\u210b","&hardcy;":"\u044a","&harr;":"\u2194","&harrcir;":"\u2948","&harrw;":"\u21ad","&hbar;":"\u210f","&hcirc;":"\u0125","&hearts;":"\u2665","&heartsuit;":"\u2665","&hellip;":"\u2026","&hercon;":"\u22b9","&hfr;":"\ud835\udd25","&hksearow;":"\u2925","&hkswarow;":"\u2926","&hoarr;":"\u21ff","&homtht;":"\u223b","&hookleftarrow;":"\u21a9","&hookrightarrow;":"\u21aa","&hopf;":"\ud835\udd59","&horbar;":"\u2015","&hscr;":"\ud835\udcbd","&hslash;":"\u210f","&hstrok;":"\u0127","&hybull;":"\u2043","&hyphen;":"\u2010","&iacute":"\xed","&iacute;":"\xed","&ic;":"\u2063","&icirc":"\xee","&icirc;":"\xee","&icy;":"\u0438","&iecy;":"\u0435","&iexcl":"\xa1","&iexcl;":"\xa1","&iff;":"\u21d4","&ifr;":"\ud835\udd26","&igrave":"\xec","&igrave;":"\xec","&ii;":"\u2148","&iiiint;":"\u2a0c","&iiint;":"\u222d","&iinfin;":"\u29dc","&iiota;":"\u2129","&ijlig;":"\u0133","&imacr;":"\u012b","&image;":"\u2111","&imagline;":"\u2110","&imagpart;":"\u2111","&imath;":"\u0131","&imof;":"\u22b7","&imped;":"\u01b5","&in;":"\u2208","&incare;":"\u2105","&infin;":"\u221e","&infintie;":"\u29dd","&inodot;":"\u0131","&int;":"\u222b","&intcal;":"\u22ba","&integers;":"\u2124","&intercal;":"\u22ba","&intlarhk;":"\u2a17","&intprod;":"\u2a3c","&iocy;":"\u0451","&iogon;":"\u012f","&iopf;":"\ud835\udd5a","&iota;":"\u03b9","&iprod;":"\u2a3c","&iquest":"\xbf","&iquest;":"\xbf","&iscr;":"\ud835\udcbe","&isin;":"\u2208","&isinE;":"\u22f9","&isindot;":"\u22f5","&isins;":"\u22f4","&isinsv;":"\u22f3","&isinv;":"\u2208","&it;":"\u2062","&itilde;":"\u0129","&iukcy;":"\u0456","&iuml":"\xef","&iuml;":"\xef","&jcirc;":"\u0135","&jcy;":"\u0439","&jfr;":"\ud835\udd27","&jmath;":"\u0237","&jopf;":"\ud835\udd5b","&jscr;":"\ud835\udcbf","&jsercy;":"\u0458","&jukcy;":"\u0454","&kappa;":"\u03ba","&kappav;":"\u03f0","&kcedil;":"\u0137","&kcy;":"\u043a","&kfr;":"\ud835\udd28","&kgreen;":"\u0138","&khcy;":"\u0445","&kjcy;":"\u045c","&kopf;":"\ud835\udd5c","&kscr;":"\ud835\udcc0","&lAarr;":"\u21da","&lArr;":"\u21d0","&lAtail;":"\u291b","&lBarr;":"\u290e","&lE;":"\u2266","&lEg;":"\u2a8b","&lHar;":"\u2962","&lacute;":"\u013a","&laemptyv;":"\u29b4","&lagran;":"\u2112","&lambda;":"\u03bb","&lang;":"\u27e8","&langd;":"\u2991","&langle;":"\u27e8","&lap;":"\u2a85","&laquo":"\xab","&laquo;":"\xab","&larr;":"\u2190","&larrb;":"\u21e4","&larrbfs;":"\u291f","&larrfs;":"\u291d","&larrhk;":"\u21a9","&larrlp;":"\u21ab","&larrpl;":"\u2939","&larrsim;":"\u2973","&larrtl;":"\u21a2","&lat;":"\u2aab","&latail;":"\u2919","&late;":"\u2aad","&lates;":"\u2aad\ufe00","&lbarr;":"\u290c","&lbbrk;":"\u2772","&lbrace;":"{","&lbrack;":"[","&lbrke;":"\u298b","&lbrksld;":"\u298f","&lbrkslu;":"\u298d","&lcaron;":"\u013e","&lcedil;":"\u013c","&lceil;":"\u2308","&lcub;":"{","&lcy;":"\u043b","&ldca;":"\u2936","&ldquo;":"\u201c","&ldquor;":"\u201e","&ldrdhar;":"\u2967","&ldrushar;":"\u294b","&ldsh;":"\u21b2","&le;":"\u2264","&leftarrow;":"\u2190","&leftarrowtail;":"\u21a2","&leftharpoondown;":"\u21bd","&leftharpoonup;":"\u21bc","&leftleftarrows;":"\u21c7","&leftrightarrow;":"\u2194","&leftrightarrows;":"\u21c6","&leftrightharpoons;":"\u21cb","&leftrightsquigarrow;":"\u21ad","&leftthreetimes;":"\u22cb","&leg;":"\u22da","&leq;":"\u2264","&leqq;":"\u2266","&leqslant;":"\u2a7d","&les;":"\u2a7d","&lescc;":"\u2aa8","&lesdot;":"\u2a7f","&lesdoto;":"\u2a81","&lesdotor;":"\u2a83","&lesg;":"\u22da\ufe00","&lesges;":"\u2a93","&lessapprox;":"\u2a85","&lessdot;":"\u22d6","&lesseqgtr;":"\u22da","&lesseqqgtr;":"\u2a8b","&lessgtr;":"\u2276","&lesssim;":"\u2272","&lfisht;":"\u297c","&lfloor;":"\u230a","&lfr;":"\ud835\udd29","&lg;":"\u2276","&lgE;":"\u2a91","&lhard;":"\u21bd","&lharu;":"\u21bc","&lharul;":"\u296a","&lhblk;":"\u2584","&ljcy;":"\u0459","&ll;":"\u226a","&llarr;":"\u21c7","&llcorner;":"\u231e","&llhard;":"\u296b","&lltri;":"\u25fa","&lmidot;":"\u0140","&lmoust;":"\u23b0","&lmoustache;":"\u23b0","&lnE;":"\u2268","&lnap;":"\u2a89","&lnapprox;":"\u2a89","&lne;":"\u2a87","&lneq;":"\u2a87","&lneqq;":"\u2268","&lnsim;":"\u22e6","&loang;":"\u27ec","&loarr;":"\u21fd","&lobrk;":"\u27e6","&longleftarrow;":"\u27f5","&longleftrightarrow;":"\u27f7","&longmapsto;":"\u27fc","&longrightarrow;":"\u27f6","&looparrowleft;":"\u21ab","&looparrowright;":"\u21ac","&lopar;":"\u2985","&lopf;":"\ud835\udd5d","&loplus;":"\u2a2d","&lotimes;":"\u2a34","&lowast;":"\u2217","&lowbar;":"_","&loz;":"\u25ca","&lozenge;":"\u25ca","&lozf;":"\u29eb","&lpar;":"(","&lparlt;":"\u2993","&lrarr;":"\u21c6","&lrcorner;":"\u231f","&lrhar;":"\u21cb","&lrhard;":"\u296d","&lrm;":"\u200e","&lrtri;":"\u22bf","&lsaquo;":"\u2039","&lscr;":"\ud835\udcc1","&lsh;":"\u21b0","&lsim;":"\u2272","&lsime;":"\u2a8d","&lsimg;":"\u2a8f","&lsqb;":"[","&lsquo;":"\u2018","&lsquor;":"\u201a","&lstrok;":"\u0142","&lt":"<","&lt;":"<","&ltcc;":"\u2aa6","&ltcir;":"\u2a79","&ltdot;":"\u22d6","&lthree;":"\u22cb","&ltimes;":"\u22c9","&ltlarr;":"\u2976","&ltquest;":"\u2a7b","&ltrPar;":"\u2996","&ltri;":"\u25c3","&ltrie;":"\u22b4","&ltrif;":"\u25c2","&lurdshar;":"\u294a","&luruhar;":"\u2966","&lvertneqq;":"\u2268\ufe00","&lvnE;":"\u2268\ufe00","&mDDot;":"\u223a","&macr":"\xaf","&macr;":"\xaf","&male;":"\u2642","&malt;":"\u2720","&maltese;":"\u2720","&map;":"\u21a6","&mapsto;":"\u21a6","&mapstodown;":"\u21a7","&mapstoleft;":"\u21a4","&mapstoup;":"\u21a5","&marker;":"\u25ae","&mcomma;":"\u2a29","&mcy;":"\u043c","&mdash;":"\u2014","&measuredangle;":"\u2221","&mfr;":"\ud835\udd2a","&mho;":"\u2127","&micro":"\xb5","&micro;":"\xb5","&mid;":"\u2223","&midast;":"*","&midcir;":"\u2af0","&middot":"\xb7","&middot;":"\xb7","&minus;":"\u2212","&minusb;":"\u229f","&minusd;":"\u2238","&minusdu;":"\u2a2a","&mlcp;":"\u2adb","&mldr;":"\u2026","&mnplus;":"\u2213","&models;":"\u22a7","&mopf;":"\ud835\udd5e","&mp;":"\u2213","&mscr;":"\ud835\udcc2","&mstpos;":"\u223e","&mu;":"\u03bc","&multimap;":"\u22b8","&mumap;":"\u22b8","&nGg;":"\u22d9\u0338","&nGt;":"\u226b\u20d2","&nGtv;":"\u226b\u0338","&nLeftarrow;":"\u21cd","&nLeftrightarrow;":"\u21ce","&nLl;":"\u22d8\u0338","&nLt;":"\u226a\u20d2","&nLtv;":"\u226a\u0338","&nRightarrow;":"\u21cf","&nVDash;":"\u22af","&nVdash;":"\u22ae","&nabla;":"\u2207","&nacute;":"\u0144","&nang;":"\u2220\u20d2","&nap;":"\u2249","&napE;":"\u2a70\u0338","&napid;":"\u224b\u0338","&napos;":"\u0149","&napprox;":"\u2249","&natur;":"\u266e","&natural;":"\u266e","&naturals;":"\u2115","&nbsp":"\xa0","&nbsp;":"\xa0","&nbump;":"\u224e\u0338","&nbumpe;":"\u224f\u0338","&ncap;":"\u2a43","&ncaron;":"\u0148","&ncedil;":"\u0146","&ncong;":"\u2247","&ncongdot;":"\u2a6d\u0338","&ncup;":"\u2a42","&ncy;":"\u043d","&ndash;":"\u2013","&ne;":"\u2260","&neArr;":"\u21d7","&nearhk;":"\u2924","&nearr;":"\u2197","&nearrow;":"\u2197","&nedot;":"\u2250\u0338","&nequiv;":"\u2262","&nesear;":"\u2928","&nesim;":"\u2242\u0338","&nexist;":"\u2204","&nexists;":"\u2204","&nfr;":"\ud835\udd2b","&ngE;":"\u2267\u0338","&nge;":"\u2271","&ngeq;":"\u2271","&ngeqq;":"\u2267\u0338","&ngeqslant;":"\u2a7e\u0338","&nges;":"\u2a7e\u0338","&ngsim;":"\u2275","&ngt;":"\u226f","&ngtr;":"\u226f","&nhArr;":"\u21ce","&nharr;":"\u21ae","&nhpar;":"\u2af2","&ni;":"\u220b","&nis;":"\u22fc","&nisd;":"\u22fa","&niv;":"\u220b","&njcy;":"\u045a","&nlArr;":"\u21cd","&nlE;":"\u2266\u0338","&nlarr;":"\u219a","&nldr;":"\u2025","&nle;":"\u2270","&nleftarrow;":"\u219a","&nleftrightarrow;":"\u21ae","&nleq;":"\u2270","&nleqq;":"\u2266\u0338","&nleqslant;":"\u2a7d\u0338","&nles;":"\u2a7d\u0338","&nless;":"\u226e","&nlsim;":"\u2274","&nlt;":"\u226e","&nltri;":"\u22ea","&nltrie;":"\u22ec","&nmid;":"\u2224","&nopf;":"\ud835\udd5f","&not":"\xac","&not;":"\xac","&notin;":"\u2209","&notinE;":"\u22f9\u0338","&notindot;":"\u22f5\u0338","&notinva;":"\u2209","&notinvb;":"\u22f7","&notinvc;":"\u22f6","&notni;":"\u220c","&notniva;":"\u220c","&notnivb;":"\u22fe","&notnivc;":"\u22fd","&npar;":"\u2226","&nparallel;":"\u2226","&nparsl;":"\u2afd\u20e5","&npart;":"\u2202\u0338","&npolint;":"\u2a14","&npr;":"\u2280","&nprcue;":"\u22e0","&npre;":"\u2aaf\u0338","&nprec;":"\u2280","&npreceq;":"\u2aaf\u0338","&nrArr;":"\u21cf","&nrarr;":"\u219b","&nrarrc;":"\u2933\u0338","&nrarrw;":"\u219d\u0338","&nrightarrow;":"\u219b","&nrtri;":"\u22eb","&nrtrie;":"\u22ed","&nsc;":"\u2281","&nsccue;":"\u22e1","&nsce;":"\u2ab0\u0338","&nscr;":"\ud835\udcc3","&nshortmid;":"\u2224","&nshortparallel;":"\u2226","&nsim;":"\u2241","&nsime;":"\u2244","&nsimeq;":"\u2244","&nsmid;":"\u2224","&nspar;":"\u2226","&nsqsube;":"\u22e2","&nsqsupe;":"\u22e3","&nsub;":"\u2284","&nsubE;":"\u2ac5\u0338","&nsube;":"\u2288","&nsubset;":"\u2282\u20d2","&nsubseteq;":"\u2288","&nsubseteqq;":"\u2ac5\u0338","&nsucc;":"\u2281","&nsucceq;":"\u2ab0\u0338","&nsup;":"\u2285","&nsupE;":"\u2ac6\u0338","&nsupe;":"\u2289","&nsupset;":"\u2283\u20d2","&nsupseteq;":"\u2289","&nsupseteqq;":"\u2ac6\u0338","&ntgl;":"\u2279","&ntilde":"\xf1","&ntilde;":"\xf1","&ntlg;":"\u2278","&ntriangleleft;":"\u22ea","&ntrianglelefteq;":"\u22ec","&ntriangleright;":"\u22eb","&ntrianglerighteq;":"\u22ed","&nu;":"\u03bd","&num;":"#","&numero;":"\u2116","&numsp;":"\u2007","&nvDash;":"\u22ad","&nvHarr;":"\u2904","&nvap;":"\u224d\u20d2","&nvdash;":"\u22ac","&nvge;":"\u2265\u20d2","&nvgt;":">\u20d2","&nvinfin;":"\u29de","&nvlArr;":"\u2902","&nvle;":"\u2264\u20d2","&nvlt;":"<\u20d2","&nvltrie;":"\u22b4\u20d2","&nvrArr;":"\u2903","&nvrtrie;":"\u22b5\u20d2","&nvsim;":"\u223c\u20d2","&nwArr;":"\u21d6","&nwarhk;":"\u2923","&nwarr;":"\u2196","&nwarrow;":"\u2196","&nwnear;":"\u2927","&oS;":"\u24c8","&oacute":"\xf3","&oacute;":"\xf3","&oast;":"\u229b","&ocir;":"\u229a","&ocirc":"\xf4","&ocirc;":"\xf4","&ocy;":"\u043e","&odash;":"\u229d","&odblac;":"\u0151","&odiv;":"\u2a38","&odot;":"\u2299","&odsold;":"\u29bc","&oelig;":"\u0153","&ofcir;":"\u29bf","&ofr;":"\ud835\udd2c","&ogon;":"\u02db","&ograve":"\xf2","&ograve;":"\xf2","&ogt;":"\u29c1","&ohbar;":"\u29b5","&ohm;":"\u03a9","&oint;":"\u222e","&olarr;":"\u21ba","&olcir;":"\u29be","&olcross;":"\u29bb","&oline;":"\u203e","&olt;":"\u29c0","&omacr;":"\u014d","&omega;":"\u03c9","&omicron;":"\u03bf","&omid;":"\u29b6","&ominus;":"\u2296","&oopf;":"\ud835\udd60","&opar;":"\u29b7","&operp;":"\u29b9","&oplus;":"\u2295","&or;":"\u2228","&orarr;":"\u21bb","&ord;":"\u2a5d","&order;":"\u2134","&orderof;":"\u2134","&ordf":"\xaa","&ordf;":"\xaa","&ordm":"\xba","&ordm;":"\xba","&origof;":"\u22b6","&oror;":"\u2a56","&orslope;":"\u2a57","&orv;":"\u2a5b","&oscr;":"\u2134","&oslash":"\xf8","&oslash;":"\xf8","&osol;":"\u2298","&otilde":"\xf5","&otilde;":"\xf5","&otimes;":"\u2297","&otimesas;":"\u2a36","&ouml":"\xf6","&ouml;":"\xf6","&ovbar;":"\u233d","&par;":"\u2225","&para":"\xb6","&para;":"\xb6","&parallel;":"\u2225","&parsim;":"\u2af3","&parsl;":"\u2afd","&part;":"\u2202","&pcy;":"\u043f","&percnt;":"%","&period;":".","&permil;":"\u2030","&perp;":"\u22a5","&pertenk;":"\u2031","&pfr;":"\ud835\udd2d","&phi;":"\u03c6","&phiv;":"\u03d5","&phmmat;":"\u2133","&phone;":"\u260e","&pi;":"\u03c0","&pitchfork;":"\u22d4","&piv;":"\u03d6","&planck;":"\u210f","&planckh;":"\u210e","&plankv;":"\u210f","&plus;":"+","&plusacir;":"\u2a23","&plusb;":"\u229e","&pluscir;":"\u2a22","&plusdo;":"\u2214","&plusdu;":"\u2a25","&pluse;":"\u2a72","&plusmn":"\xb1","&plusmn;":"\xb1","&plussim;":"\u2a26","&plustwo;":"\u2a27","&pm;":"\xb1","&pointint;":"\u2a15","&popf;":"\ud835\udd61","&pound":"\xa3","&pound;":"\xa3","&pr;":"\u227a","&prE;":"\u2ab3","&prap;":"\u2ab7","&prcue;":"\u227c","&pre;":"\u2aaf","&prec;":"\u227a","&precapprox;":"\u2ab7","&preccurlyeq;":"\u227c","&preceq;":"\u2aaf","&precnapprox;":"\u2ab9","&precneqq;":"\u2ab5","&precnsim;":"\u22e8","&precsim;":"\u227e","&prime;":"\u2032","&primes;":"\u2119","&prnE;":"\u2ab5","&prnap;":"\u2ab9","&prnsim;":"\u22e8","&prod;":"\u220f","&profalar;":"\u232e","&profline;":"\u2312","&profsurf;":"\u2313","&prop;":"\u221d","&propto;":"\u221d","&prsim;":"\u227e","&prurel;":"\u22b0","&pscr;":"\ud835\udcc5","&psi;":"\u03c8","&puncsp;":"\u2008","&qfr;":"\ud835\udd2e","&qint;":"\u2a0c","&qopf;":"\ud835\udd62","&qprime;":"\u2057","&qscr;":"\ud835\udcc6","&quaternions;":"\u210d","&quatint;":"\u2a16","&quest;":"?","&questeq;":"\u225f","&quot":'"',"&quot;":'"',"&rAarr;":"\u21db","&rArr;":"\u21d2","&rAtail;":"\u291c","&rBarr;":"\u290f","&rHar;":"\u2964","&race;":"\u223d\u0331","&racute;":"\u0155","&radic;":"\u221a","&raemptyv;":"\u29b3","&rang;":"\u27e9","&rangd;":"\u2992","&range;":"\u29a5","&rangle;":"\u27e9","&raquo":"\xbb","&raquo;":"\xbb","&rarr;":"\u2192","&rarrap;":"\u2975","&rarrb;":"\u21e5","&rarrbfs;":"\u2920","&rarrc;":"\u2933","&rarrfs;":"\u291e","&rarrhk;":"\u21aa","&rarrlp;":"\u21ac","&rarrpl;":"\u2945","&rarrsim;":"\u2974","&rarrtl;":"\u21a3","&rarrw;":"\u219d","&ratail;":"\u291a","&ratio;":"\u2236","&rationals;":"\u211a","&rbarr;":"\u290d","&rbbrk;":"\u2773","&rbrace;":"}","&rbrack;":"]","&rbrke;":"\u298c","&rbrksld;":"\u298e","&rbrkslu;":"\u2990","&rcaron;":"\u0159","&rcedil;":"\u0157","&rceil;":"\u2309","&rcub;":"}","&rcy;":"\u0440","&rdca;":"\u2937","&rdldhar;":"\u2969","&rdquo;":"\u201d","&rdquor;":"\u201d","&rdsh;":"\u21b3","&real;":"\u211c","&realine;":"\u211b","&realpart;":"\u211c","&reals;":"\u211d","&rect;":"\u25ad","&reg":"\xae","&reg;":"\xae","&rfisht;":"\u297d","&rfloor;":"\u230b","&rfr;":"\ud835\udd2f","&rhard;":"\u21c1","&rharu;":"\u21c0","&rharul;":"\u296c","&rho;":"\u03c1","&rhov;":"\u03f1","&rightarrow;":"\u2192","&rightarrowtail;":"\u21a3","&rightharpoondown;":"\u21c1","&rightharpoonup;":"\u21c0","&rightleftarrows;":"\u21c4","&rightleftharpoons;":"\u21cc","&rightrightarrows;":"\u21c9","&rightsquigarrow;":"\u219d","&rightthreetimes;":"\u22cc","&ring;":"\u02da","&risingdotseq;":"\u2253","&rlarr;":"\u21c4","&rlhar;":"\u21cc","&rlm;":"\u200f","&rmoust;":"\u23b1","&rmoustache;":"\u23b1","&rnmid;":"\u2aee","&roang;":"\u27ed","&roarr;":"\u21fe","&robrk;":"\u27e7","&ropar;":"\u2986","&ropf;":"\ud835\udd63","&roplus;":"\u2a2e","&rotimes;":"\u2a35","&rpar;":")","&rpargt;":"\u2994","&rppolint;":"\u2a12","&rrarr;":"\u21c9","&rsaquo;":"\u203a","&rscr;":"\ud835\udcc7","&rsh;":"\u21b1","&rsqb;":"]","&rsquo;":"\u2019","&rsquor;":"\u2019","&rthree;":"\u22cc","&rtimes;":"\u22ca","&rtri;":"\u25b9","&rtrie;":"\u22b5","&rtrif;":"\u25b8","&rtriltri;":"\u29ce","&ruluhar;":"\u2968","&rx;":"\u211e","&sacute;":"\u015b","&sbquo;":"\u201a","&sc;":"\u227b","&scE;":"\u2ab4","&scap;":"\u2ab8","&scaron;":"\u0161","&sccue;":"\u227d","&sce;":"\u2ab0","&scedil;":"\u015f","&scirc;":"\u015d","&scnE;":"\u2ab6","&scnap;":"\u2aba","&scnsim;":"\u22e9","&scpolint;":"\u2a13","&scsim;":"\u227f","&scy;":"\u0441","&sdot;":"\u22c5","&sdotb;":"\u22a1","&sdote;":"\u2a66","&seArr;":"\u21d8","&searhk;":"\u2925","&searr;":"\u2198","&searrow;":"\u2198","&sect":"\xa7","&sect;":"\xa7","&semi;":";","&seswar;":"\u2929","&setminus;":"\u2216","&setmn;":"\u2216","&sext;":"\u2736","&sfr;":"\ud835\udd30","&sfrown;":"\u2322","&sharp;":"\u266f","&shchcy;":"\u0449","&shcy;":"\u0448","&shortmid;":"\u2223","&shortparallel;":"\u2225","&shy":"\xad","&shy;":"\xad","&sigma;":"\u03c3","&sigmaf;":"\u03c2","&sigmav;":"\u03c2","&sim;":"\u223c","&simdot;":"\u2a6a","&sime;":"\u2243","&simeq;":"\u2243","&simg;":"\u2a9e","&simgE;":"\u2aa0","&siml;":"\u2a9d","&simlE;":"\u2a9f","&simne;":"\u2246","&simplus;":"\u2a24","&simrarr;":"\u2972","&slarr;":"\u2190","&smallsetminus;":"\u2216","&smashp;":"\u2a33","&smeparsl;":"\u29e4","&smid;":"\u2223","&smile;":"\u2323","&smt;":"\u2aaa","&smte;":"\u2aac","&smtes;":"\u2aac\ufe00","&softcy;":"\u044c","&sol;":"/","&solb;":"\u29c4","&solbar;":"\u233f","&sopf;":"\ud835\udd64","&spades;":"\u2660","&spadesuit;":"\u2660","&spar;":"\u2225","&sqcap;":"\u2293","&sqcaps;":"\u2293\ufe00","&sqcup;":"\u2294","&sqcups;":"\u2294\ufe00","&sqsub;":"\u228f","&sqsube;":"\u2291","&sqsubset;":"\u228f","&sqsubseteq;":"\u2291","&sqsup;":"\u2290","&sqsupe;":"\u2292","&sqsupset;":"\u2290","&sqsupseteq;":"\u2292","&squ;":"\u25a1","&square;":"\u25a1","&squarf;":"\u25aa","&squf;":"\u25aa","&srarr;":"\u2192","&sscr;":"\ud835\udcc8","&ssetmn;":"\u2216","&ssmile;":"\u2323","&sstarf;":"\u22c6","&star;":"\u2606","&starf;":"\u2605","&straightepsilon;":"\u03f5","&straightphi;":"\u03d5","&strns;":"\xaf","&sub;":"\u2282","&subE;":"\u2ac5","&subdot;":"\u2abd","&sube;":"\u2286","&subedot;":"\u2ac3","&submult;":"\u2ac1","&subnE;":"\u2acb","&subne;":"\u228a","&subplus;":"\u2abf","&subrarr;":"\u2979","&subset;":"\u2282","&subseteq;":"\u2286","&subseteqq;":"\u2ac5","&subsetneq;":"\u228a","&subsetneqq;":"\u2acb","&subsim;":"\u2ac7","&subsub;":"\u2ad5","&subsup;":"\u2ad3","&succ;":"\u227b","&succapprox;":"\u2ab8","&succcurlyeq;":"\u227d","&succeq;":"\u2ab0","&succnapprox;":"\u2aba","&succneqq;":"\u2ab6","&succnsim;":"\u22e9","&succsim;":"\u227f","&sum;":"\u2211","&sung;":"\u266a","&sup1":"\xb9","&sup1;":"\xb9","&sup2":"\xb2","&sup2;":"\xb2","&sup3":"\xb3","&sup3;":"\xb3","&sup;":"\u2283","&supE;":"\u2ac6","&supdot;":"\u2abe","&supdsub;":"\u2ad8","&supe;":"\u2287","&supedot;":"\u2ac4","&suphsol;":"\u27c9","&suphsub;":"\u2ad7","&suplarr;":"\u297b","&supmult;":"\u2ac2","&supnE;":"\u2acc","&supne;":"\u228b","&supplus;":"\u2ac0","&supset;":"\u2283","&supseteq;":"\u2287","&supseteqq;":"\u2ac6","&supsetneq;":"\u228b","&supsetneqq;":"\u2acc","&supsim;":"\u2ac8","&supsub;":"\u2ad4","&supsup;":"\u2ad6","&swArr;":"\u21d9","&swarhk;":"\u2926","&swarr;":"\u2199","&swarrow;":"\u2199","&swnwar;":"\u292a","&szlig":"\xdf","&szlig;":"\xdf","&target;":"\u2316","&tau;":"\u03c4","&tbrk;":"\u23b4","&tcaron;":"\u0165","&tcedil;":"\u0163","&tcy;":"\u0442","&tdot;":"\u20db","&telrec;":"\u2315","&tfr;":"\ud835\udd31","&there4;":"\u2234","&therefore;":"\u2234","&theta;":"\u03b8","&thetasym;":"\u03d1","&thetav;":"\u03d1","&thickapprox;":"\u2248","&thicksim;":"\u223c","&thinsp;":"\u2009","&thkap;":"\u2248","&thksim;":"\u223c","&thorn":"\xfe","&thorn;":"\xfe","&tilde;":"\u02dc","&times":"\xd7","&times;":"\xd7","&timesb;":"\u22a0","&timesbar;":"\u2a31","&timesd;":"\u2a30","&tint;":"\u222d","&toea;":"\u2928","&top;":"\u22a4","&topbot;":"\u2336","&topcir;":"\u2af1","&topf;":"\ud835\udd65","&topfork;":"\u2ada","&tosa;":"\u2929","&tprime;":"\u2034","&trade;":"\u2122","&triangle;":"\u25b5","&triangledown;":"\u25bf","&triangleleft;":"\u25c3","&trianglelefteq;":"\u22b4","&triangleq;":"\u225c","&triangleright;":"\u25b9","&trianglerighteq;":"\u22b5","&tridot;":"\u25ec","&trie;":"\u225c","&triminus;":"\u2a3a","&triplus;":"\u2a39","&trisb;":"\u29cd","&tritime;":"\u2a3b","&trpezium;":"\u23e2","&tscr;":"\ud835\udcc9","&tscy;":"\u0446","&tshcy;":"\u045b","&tstrok;":"\u0167","&twixt;":"\u226c","&twoheadleftarrow;":"\u219e","&twoheadrightarrow;":"\u21a0","&uArr;":"\u21d1","&uHar;":"\u2963","&uacute":"\xfa","&uacute;":"\xfa","&uarr;":"\u2191","&ubrcy;":"\u045e","&ubreve;":"\u016d","&ucirc":"\xfb","&ucirc;":"\xfb","&ucy;":"\u0443","&udarr;":"\u21c5","&udblac;":"\u0171","&udhar;":"\u296e","&ufisht;":"\u297e","&ufr;":"\ud835\udd32","&ugrave":"\xf9","&ugrave;":"\xf9","&uharl;":"\u21bf","&uharr;":"\u21be","&uhblk;":"\u2580","&ulcorn;":"\u231c","&ulcorner;":"\u231c","&ulcrop;":"\u230f","&ultri;":"\u25f8","&umacr;":"\u016b","&uml":"\xa8","&uml;":"\xa8","&uogon;":"\u0173","&uopf;":"\ud835\udd66","&uparrow;":"\u2191","&updownarrow;":"\u2195","&upharpoonleft;":"\u21bf","&upharpoonright;":"\u21be","&uplus;":"\u228e","&upsi;":"\u03c5","&upsih;":"\u03d2","&upsilon;":"\u03c5","&upuparrows;":"\u21c8","&urcorn;":"\u231d","&urcorner;":"\u231d","&urcrop;":"\u230e","&uring;":"\u016f","&urtri;":"\u25f9","&uscr;":"\ud835\udcca","&utdot;":"\u22f0","&utilde;":"\u0169","&utri;":"\u25b5","&utrif;":"\u25b4","&uuarr;":"\u21c8","&uuml":"\xfc","&uuml;":"\xfc","&uwangle;":"\u29a7","&vArr;":"\u21d5","&vBar;":"\u2ae8","&vBarv;":"\u2ae9","&vDash;":"\u22a8","&vangrt;":"\u299c","&varepsilon;":"\u03f5","&varkappa;":"\u03f0","&varnothing;":"\u2205","&varphi;":"\u03d5","&varpi;":"\u03d6","&varpropto;":"\u221d","&varr;":"\u2195","&varrho;":"\u03f1","&varsigma;":"\u03c2","&varsubsetneq;":"\u228a\ufe00","&varsubsetneqq;":"\u2acb\ufe00","&varsupsetneq;":"\u228b\ufe00","&varsupsetneqq;":"\u2acc\ufe00","&vartheta;":"\u03d1","&vartriangleleft;":"\u22b2","&vartriangleright;":"\u22b3","&vcy;":"\u0432","&vdash;":"\u22a2","&vee;":"\u2228","&veebar;":"\u22bb","&veeeq;":"\u225a","&vellip;":"\u22ee","&verbar;":"|","&vert;":"|","&vfr;":"\ud835\udd33","&vltri;":"\u22b2","&vnsub;":"\u2282\u20d2","&vnsup;":"\u2283\u20d2","&vopf;":"\ud835\udd67","&vprop;":"\u221d","&vrtri;":"\u22b3","&vscr;":"\ud835\udccb","&vsubnE;":"\u2acb\ufe00","&vsubne;":"\u228a\ufe00","&vsupnE;":"\u2acc\ufe00","&vsupne;":"\u228b\ufe00","&vzigzag;":"\u299a","&wcirc;":"\u0175","&wedbar;":"\u2a5f","&wedge;":"\u2227","&wedgeq;":"\u2259","&weierp;":"\u2118","&wfr;":"\ud835\udd34","&wopf;":"\ud835\udd68","&wp;":"\u2118","&wr;":"\u2240","&wreath;":"\u2240","&wscr;":"\ud835\udccc","&xcap;":"\u22c2","&xcirc;":"\u25ef","&xcup;":"\u22c3","&xdtri;":"\u25bd","&xfr;":"\ud835\udd35","&xhArr;":"\u27fa","&xharr;":"\u27f7","&xi;":"\u03be","&xlArr;":"\u27f8","&xlarr;":"\u27f5","&xmap;":"\u27fc","&xnis;":"\u22fb","&xodot;":"\u2a00","&xopf;":"\ud835\udd69","&xoplus;":"\u2a01","&xotime;":"\u2a02","&xrArr;":"\u27f9","&xrarr;":"\u27f6","&xscr;":"\ud835\udccd","&xsqcup;":"\u2a06","&xuplus;":"\u2a04","&xutri;":"\u25b3","&xvee;":"\u22c1","&xwedge;":"\u22c0","&yacute":"\xfd","&yacute;":"\xfd","&yacy;":"\u044f","&ycirc;":"\u0177","&ycy;":"\u044b","&yen":"\xa5","&yen;":"\xa5","&yfr;":"\ud835\udd36","&yicy;":"\u0457","&yopf;":"\ud835\udd6a","&yscr;":"\ud835\udcce","&yucy;":"\u044e","&yuml":"\xff","&yuml;":"\xff","&zacute;":"\u017a","&zcaron;":"\u017e","&zcy;":"\u0437","&zdot;":"\u017c","&zeetrf;":"\u2128","&zeta;":"\u03b6","&zfr;":"\ud835\udd37","&zhcy;":"\u0436","&zigrarr;":"\u21dd","&zopf;":"\ud835\udd6b","&zscr;":"\ud835\udccf","&zwj;":"\u200d","&zwnj;":"\u200c"},characters:{"\xc6":"&AElig;","&":"&amp;","\xc1":"&Aacute;","\u0102":"&Abreve;","\xc2":"&Acirc;","\u0410":"&Acy;","\ud835\udd04":"&Afr;","\xc0":"&Agrave;","\u0391":"&Alpha;","\u0100":"&Amacr;","\u2a53":"&And;","\u0104":"&Aogon;","\ud835\udd38":"&Aopf;","\u2061":"&af;","\xc5":"&angst;","\ud835\udc9c":"&Ascr;","\u2254":"&coloneq;","\xc3":"&Atilde;","\xc4":"&Auml;","\u2216":"&ssetmn;","\u2ae7":"&Barv;","\u2306":"&doublebarwedge;","\u0411":"&Bcy;","\u2235":"&because;","\u212c":"&bernou;","\u0392":"&Beta;","\ud835\udd05":"&Bfr;","\ud835\udd39":"&Bopf;","\u02d8":"&breve;","\u224e":"&bump;","\u0427":"&CHcy;","\xa9":"&copy;","\u0106":"&Cacute;","\u22d2":"&Cap;","\u2145":"&DD;","\u212d":"&Cfr;","\u010c":"&Ccaron;","\xc7":"&Ccedil;","\u0108":"&Ccirc;","\u2230":"&Cconint;","\u010a":"&Cdot;","\xb8":"&cedil;","\xb7":"&middot;","\u03a7":"&Chi;","\u2299":"&odot;","\u2296":"&ominus;","\u2295":"&oplus;","\u2297":"&otimes;","\u2232":"&cwconint;","\u201d":"&rdquor;","\u2019":"&rsquor;","\u2237":"&Proportion;","\u2a74":"&Colone;","\u2261":"&equiv;","\u222f":"&DoubleContourIntegral;","\u222e":"&oint;","\u2102":"&complexes;","\u2210":"&coprod;","\u2233":"&awconint;","\u2a2f":"&Cross;","\ud835\udc9e":"&Cscr;","\u22d3":"&Cup;","\u224d":"&asympeq;","\u2911":"&DDotrahd;","\u0402":"&DJcy;","\u0405":"&DScy;","\u040f":"&DZcy;","\u2021":"&ddagger;","\u21a1":"&Darr;","\u2ae4":"&DoubleLeftTee;","\u010e":"&Dcaron;","\u0414":"&Dcy;","\u2207":"&nabla;","\u0394":"&Delta;","\ud835\udd07":"&Dfr;","\xb4":"&acute;","\u02d9":"&dot;","\u02dd":"&dblac;","`":"&grave;","\u02dc":"&tilde;","\u22c4":"&diamond;","\u2146":"&dd;","\ud835\udd3b":"&Dopf;","\xa8":"&uml;","\u20dc":"&DotDot;","\u2250":"&esdot;","\u21d3":"&dArr;","\u21d0":"&lArr;","\u21d4":"&iff;","\u27f8":"&xlArr;","\u27fa":"&xhArr;","\u27f9":"&xrArr;","\u21d2":"&rArr;","\u22a8":"&vDash;","\u21d1":"&uArr;","\u21d5":"&vArr;","\u2225":"&spar;","\u2193":"&downarrow;","\u2913":"&DownArrowBar;","\u21f5":"&duarr;","\u0311":"&DownBreve;","\u2950":"&DownLeftRightVector;","\u295e":"&DownLeftTeeVector;","\u21bd":"&lhard;","\u2956":"&DownLeftVectorBar;","\u295f":"&DownRightTeeVector;","\u21c1":"&rightharpoondown;","\u2957":"&DownRightVectorBar;","\u22a4":"&top;","\u21a7":"&mapstodown;","\ud835\udc9f":"&Dscr;","\u0110":"&Dstrok;","\u014a":"&ENG;","\xd0":"&ETH;","\xc9":"&Eacute;","\u011a":"&Ecaron;","\xca":"&Ecirc;","\u042d":"&Ecy;","\u0116":"&Edot;","\ud835\udd08":"&Efr;","\xc8":"&Egrave;","\u2208":"&isinv;","\u0112":"&Emacr;","\u25fb":"&EmptySmallSquare;","\u25ab":"&EmptyVerySmallSquare;","\u0118":"&Eogon;","\ud835\udd3c":"&Eopf;","\u0395":"&Epsilon;","\u2a75":"&Equal;","\u2242":"&esim;","\u21cc":"&rlhar;","\u2130":"&expectation;","\u2a73":"&Esim;","\u0397":"&Eta;","\xcb":"&Euml;","\u2203":"&exist;","\u2147":"&exponentiale;","\u0424":"&Fcy;","\ud835\udd09":"&Ffr;","\u25fc":"&FilledSmallSquare;","\u25aa":"&squf;","\ud835\udd3d":"&Fopf;","\u2200":"&forall;","\u2131":"&Fscr;","\u0403":"&GJcy;",">":"&gt;","\u0393":"&Gamma;","\u03dc":"&Gammad;","\u011e":"&Gbreve;","\u0122":"&Gcedil;","\u011c":"&Gcirc;","\u0413":"&Gcy;","\u0120":"&Gdot;","\ud835\udd0a":"&Gfr;","\u22d9":"&ggg;","\ud835\udd3e":"&Gopf;","\u2265":"&geq;","\u22db":"&gtreqless;","\u2267":"&geqq;","\u2aa2":"&GreaterGreater;","\u2277":"&gtrless;","\u2a7e":"&ges;","\u2273":"&gtrsim;","\ud835\udca2":"&Gscr;","\u226b":"&gg;","\u042a":"&HARDcy;","\u02c7":"&caron;","^":"&Hat;","\u0124":"&Hcirc;","\u210c":"&Poincareplane;","\u210b":"&hamilt;","\u210d":"&quaternions;","\u2500":"&boxh;","\u0126":"&Hstrok;","\u224f":"&bumpeq;","\u0415":"&IEcy;","\u0132":"&IJlig;","\u0401":"&IOcy;","\xcd":"&Iacute;","\xce":"&Icirc;","\u0418":"&Icy;","\u0130":"&Idot;","\u2111":"&imagpart;","\xcc":"&Igrave;","\u012a":"&Imacr;","\u2148":"&ii;","\u222c":"&Int;","\u222b":"&int;","\u22c2":"&xcap;","\u2063":"&ic;","\u2062":"&it;","\u012e":"&Iogon;","\ud835\udd40":"&Iopf;","\u0399":"&Iota;","\u2110":"&imagline;","\u0128":"&Itilde;","\u0406":"&Iukcy;","\xcf":"&Iuml;","\u0134":"&Jcirc;","\u0419":"&Jcy;","\ud835\udd0d":"&Jfr;","\ud835\udd41":"&Jopf;","\ud835\udca5":"&Jscr;","\u0408":"&Jsercy;","\u0404":"&Jukcy;","\u0425":"&KHcy;","\u040c":"&KJcy;","\u039a":"&Kappa;","\u0136":"&Kcedil;","\u041a":"&Kcy;","\ud835\udd0e":"&Kfr;","\ud835\udd42":"&Kopf;","\ud835\udca6":"&Kscr;","\u0409":"&LJcy;","<":"&lt;","\u0139":"&Lacute;","\u039b":"&Lambda;","\u27ea":"&Lang;","\u2112":"&lagran;","\u219e":"&twoheadleftarrow;","\u013d":"&Lcaron;","\u013b":"&Lcedil;","\u041b":"&Lcy;","\u27e8":"&langle;","\u2190":"&slarr;","\u21e4":"&larrb;","\u21c6":"&lrarr;","\u2308":"&lceil;","\u27e6":"&lobrk;","\u2961":"&LeftDownTeeVector;","\u21c3":"&downharpoonleft;","\u2959":"&LeftDownVectorBar;","\u230a":"&lfloor;","\u2194":"&leftrightarrow;","\u294e":"&LeftRightVector;","\u22a3":"&dashv;","\u21a4":"&mapstoleft;","\u295a":"&LeftTeeVector;","\u22b2":"&vltri;","\u29cf":"&LeftTriangleBar;","\u22b4":"&trianglelefteq;","\u2951":"&LeftUpDownVector;","\u2960":"&LeftUpTeeVector;","\u21bf":"&upharpoonleft;","\u2958":"&LeftUpVectorBar;","\u21bc":"&lharu;","\u2952":"&LeftVectorBar;","\u22da":"&lesseqgtr;","\u2266":"&leqq;","\u2276":"&lg;","\u2aa1":"&LessLess;","\u2a7d":"&les;","\u2272":"&lsim;","\ud835\udd0f":"&Lfr;","\u22d8":"&Ll;","\u21da":"&lAarr;","\u013f":"&Lmidot;","\u27f5":"&xlarr;","\u27f7":"&xharr;","\u27f6":"&xrarr;","\ud835\udd43":"&Lopf;","\u2199":"&swarrow;","\u2198":"&searrow;","\u21b0":"&lsh;","\u0141":"&Lstrok;","\u226a":"&ll;","\u2905":"&Map;","\u041c":"&Mcy;","\u205f":"&MediumSpace;","\u2133":"&phmmat;","\ud835\udd10":"&Mfr;","\u2213":"&mp;","\ud835\udd44":"&Mopf;","\u039c":"&Mu;","\u040a":"&NJcy;","\u0143":"&Nacute;","\u0147":"&Ncaron;","\u0145":"&Ncedil;","\u041d":"&Ncy;","\u200b":"&ZeroWidthSpace;","\n":"&NewLine;","\ud835\udd11":"&Nfr;","\u2060":"&NoBreak;","\xa0":"&nbsp;","\u2115":"&naturals;","\u2aec":"&Not;","\u2262":"&nequiv;","\u226d":"&NotCupCap;","\u2226":"&nspar;","\u2209":"&notinva;","\u2260":"&ne;","\u2242\u0338":"&nesim;","\u2204":"&nexists;","\u226f":"&ngtr;","\u2271":"&ngeq;","\u2267\u0338":"&ngeqq;","\u226b\u0338":"&nGtv;","\u2279":"&ntgl;","\u2a7e\u0338":"&nges;","\u2275":"&ngsim;","\u224e\u0338":"&nbump;","\u224f\u0338":"&nbumpe;","\u22ea":"&ntriangleleft;","\u29cf\u0338":"&NotLeftTriangleBar;","\u22ec":"&ntrianglelefteq;","\u226e":"&nlt;","\u2270":"&nleq;","\u2278":"&ntlg;","\u226a\u0338":"&nLtv;","\u2a7d\u0338":"&nles;","\u2274":"&nlsim;","\u2aa2\u0338":"&NotNestedGreaterGreater;","\u2aa1\u0338":"&NotNestedLessLess;","\u2280":"&nprec;","\u2aaf\u0338":"&npreceq;","\u22e0":"&nprcue;","\u220c":"&notniva;","\u22eb":"&ntriangleright;","\u29d0\u0338":"&NotRightTriangleBar;","\u22ed":"&ntrianglerighteq;","\u228f\u0338":"&NotSquareSubset;","\u22e2":"&nsqsube;","\u2290\u0338":"&NotSquareSuperset;","\u22e3":"&nsqsupe;","\u2282\u20d2":"&vnsub;","\u2288":"&nsubseteq;","\u2281":"&nsucc;","\u2ab0\u0338":"&nsucceq;","\u22e1":"&nsccue;","\u227f\u0338":"&NotSucceedsTilde;","\u2283\u20d2":"&vnsup;","\u2289":"&nsupseteq;","\u2241":"&nsim;","\u2244":"&nsimeq;","\u2247":"&ncong;","\u2249":"&napprox;","\u2224":"&nsmid;","\ud835\udca9":"&Nscr;","\xd1":"&Ntilde;","\u039d":"&Nu;","\u0152":"&OElig;","\xd3":"&Oacute;","\xd4":"&Ocirc;","\u041e":"&Ocy;","\u0150":"&Odblac;","\ud835\udd12":"&Ofr;","\xd2":"&Ograve;","\u014c":"&Omacr;","\u03a9":"&ohm;","\u039f":"&Omicron;","\ud835\udd46":"&Oopf;","\u201c":"&ldquo;","\u2018":"&lsquo;","\u2a54":"&Or;","\ud835\udcaa":"&Oscr;","\xd8":"&Oslash;","\xd5":"&Otilde;","\u2a37":"&Otimes;","\xd6":"&Ouml;","\u203e":"&oline;","\u23de":"&OverBrace;","\u23b4":"&tbrk;","\u23dc":"&OverParenthesis;","\u2202":"&part;","\u041f":"&Pcy;","\ud835\udd13":"&Pfr;","\u03a6":"&Phi;","\u03a0":"&Pi;","\xb1":"&pm;","\u2119":"&primes;","\u2abb":"&Pr;","\u227a":"&prec;","\u2aaf":"&preceq;","\u227c":"&preccurlyeq;","\u227e":"&prsim;","\u2033":"&Prime;","\u220f":"&prod;","\u221d":"&vprop;","\ud835\udcab":"&Pscr;","\u03a8":"&Psi;",'"':"&quot;","\ud835\udd14":"&Qfr;","\u211a":"&rationals;","\ud835\udcac":"&Qscr;","\u2910":"&drbkarow;","\xae":"&reg;","\u0154":"&Racute;","\u27eb":"&Rang;","\u21a0":"&twoheadrightarrow;","\u2916":"&Rarrtl;","\u0158":"&Rcaron;","\u0156":"&Rcedil;","\u0420":"&Rcy;","\u211c":"&realpart;","\u220b":"&niv;","\u21cb":"&lrhar;","\u296f":"&duhar;","\u03a1":"&Rho;","\u27e9":"&rangle;","\u2192":"&srarr;","\u21e5":"&rarrb;","\u21c4":"&rlarr;","\u2309":"&rceil;","\u27e7":"&robrk;","\u295d":"&RightDownTeeVector;","\u21c2":"&downharpoonright;","\u2955":"&RightDownVectorBar;","\u230b":"&rfloor;","\u22a2":"&vdash;","\u21a6":"&mapsto;","\u295b":"&RightTeeVector;","\u22b3":"&vrtri;","\u29d0":"&RightTriangleBar;","\u22b5":"&trianglerighteq;","\u294f":"&RightUpDownVector;","\u295c":"&RightUpTeeVector;","\u21be":"&upharpoonright;","\u2954":"&RightUpVectorBar;","\u21c0":"&rightharpoonup;","\u2953":"&RightVectorBar;","\u211d":"&reals;","\u2970":"&RoundImplies;","\u21db":"&rAarr;","\u211b":"&realine;","\u21b1":"&rsh;","\u29f4":"&RuleDelayed;","\u0429":"&SHCHcy;","\u0428":"&SHcy;","\u042c":"&SOFTcy;","\u015a":"&Sacute;","\u2abc":"&Sc;","\u0160":"&Scaron;","\u015e":"&Scedil;","\u015c":"&Scirc;","\u0421":"&Scy;","\ud835\udd16":"&Sfr;","\u2191":"&uparrow;","\u03a3":"&Sigma;","\u2218":"&compfn;","\ud835\udd4a":"&Sopf;","\u221a":"&radic;","\u25a1":"&square;","\u2293":"&sqcap;","\u228f":"&sqsubset;","\u2291":"&sqsubseteq;","\u2290":"&sqsupset;","\u2292":"&sqsupseteq;","\u2294":"&sqcup;","\ud835\udcae":"&Sscr;","\u22c6":"&sstarf;","\u22d0":"&Subset;","\u2286":"&subseteq;","\u227b":"&succ;","\u2ab0":"&succeq;","\u227d":"&succcurlyeq;","\u227f":"&succsim;","\u2211":"&sum;","\u22d1":"&Supset;","\u2283":"&supset;","\u2287":"&supseteq;","\xde":"&THORN;","\u2122":"&trade;","\u040b":"&TSHcy;","\u0426":"&TScy;","\t":"&Tab;","\u03a4":"&Tau;","\u0164":"&Tcaron;","\u0162":"&Tcedil;","\u0422":"&Tcy;","\ud835\udd17":"&Tfr;","\u2234":"&therefore;","\u0398":"&Theta;","\u205f\u200a":"&ThickSpace;","\u2009":"&thinsp;","\u223c":"&thksim;","\u2243":"&simeq;","\u2245":"&cong;","\u2248":"&thkap;","\ud835\udd4b":"&Topf;","\u20db":"&tdot;","\ud835\udcaf":"&Tscr;","\u0166":"&Tstrok;","\xda":"&Uacute;","\u219f":"&Uarr;","\u2949":"&Uarrocir;","\u040e":"&Ubrcy;","\u016c":"&Ubreve;","\xdb":"&Ucirc;","\u0423":"&Ucy;","\u0170":"&Udblac;","\ud835\udd18":"&Ufr;","\xd9":"&Ugrave;","\u016a":"&Umacr;",_:"&lowbar;","\u23df":"&UnderBrace;","\u23b5":"&bbrk;","\u23dd":"&UnderParenthesis;","\u22c3":"&xcup;","\u228e":"&uplus;","\u0172":"&Uogon;","\ud835\udd4c":"&Uopf;","\u2912":"&UpArrowBar;","\u21c5":"&udarr;","\u2195":"&varr;","\u296e":"&udhar;","\u22a5":"&perp;","\u21a5":"&mapstoup;","\u2196":"&nwarrow;","\u2197":"&nearrow;","\u03d2":"&upsih;","\u03a5":"&Upsilon;","\u016e":"&Uring;","\ud835\udcb0":"&Uscr;","\u0168":"&Utilde;","\xdc":"&Uuml;","\u22ab":"&VDash;","\u2aeb":"&Vbar;","\u0412":"&Vcy;","\u22a9":"&Vdash;","\u2ae6":"&Vdashl;","\u22c1":"&xvee;","\u2016":"&Vert;","\u2223":"&smid;","|":"&vert;","\u2758":"&VerticalSeparator;","\u2240":"&wreath;","\u200a":"&hairsp;","\ud835\udd19":"&Vfr;","\ud835\udd4d":"&Vopf;","\ud835\udcb1":"&Vscr;","\u22aa":"&Vvdash;","\u0174":"&Wcirc;","\u22c0":"&xwedge;","\ud835\udd1a":"&Wfr;","\ud835\udd4e":"&Wopf;","\ud835\udcb2":"&Wscr;","\ud835\udd1b":"&Xfr;","\u039e":"&Xi;","\ud835\udd4f":"&Xopf;","\ud835\udcb3":"&Xscr;","\u042f":"&YAcy;","\u0407":"&YIcy;","\u042e":"&YUcy;","\xdd":"&Yacute;","\u0176":"&Ycirc;","\u042b":"&Ycy;","\ud835\udd1c":"&Yfr;","\ud835\udd50":"&Yopf;","\ud835\udcb4":"&Yscr;","\u0178":"&Yuml;","\u0416":"&ZHcy;","\u0179":"&Zacute;","\u017d":"&Zcaron;","\u0417":"&Zcy;","\u017b":"&Zdot;","\u0396":"&Zeta;","\u2128":"&zeetrf;","\u2124":"&integers;","\ud835\udcb5":"&Zscr;","\xe1":"&aacute;","\u0103":"&abreve;","\u223e":"&mstpos;","\u223e\u0333":"&acE;","\u223f":"&acd;","\xe2":"&acirc;","\u0430":"&acy;","\xe6":"&aelig;","\ud835\udd1e":"&afr;","\xe0":"&agrave;","\u2135":"&aleph;","\u03b1":"&alpha;","\u0101":"&amacr;","\u2a3f":"&amalg;","\u2227":"&wedge;","\u2a55":"&andand;","\u2a5c":"&andd;","\u2a58":"&andslope;","\u2a5a":"&andv;","\u2220":"&angle;","\u29a4":"&ange;","\u2221":"&measuredangle;","\u29a8":"&angmsdaa;","\u29a9":"&angmsdab;","\u29aa":"&angmsdac;","\u29ab":"&angmsdad;","\u29ac":"&angmsdae;","\u29ad":"&angmsdaf;","\u29ae":"&angmsdag;","\u29af":"&angmsdah;","\u221f":"&angrt;","\u22be":"&angrtvb;","\u299d":"&angrtvbd;","\u2222":"&angsph;","\u237c":"&angzarr;","\u0105":"&aogon;","\ud835\udd52":"&aopf;","\u2a70":"&apE;","\u2a6f":"&apacir;","\u224a":"&approxeq;","\u224b":"&apid;","'":"&apos;","\xe5":"&aring;","\ud835\udcb6":"&ascr;","*":"&midast;","\xe3":"&atilde;","\xe4":"&auml;","\u2a11":"&awint;","\u2aed":"&bNot;","\u224c":"&bcong;","\u03f6":"&bepsi;","\u2035":"&bprime;","\u223d":"&bsim;","\u22cd":"&bsime;","\u22bd":"&barvee;","\u2305":"&barwedge;","\u23b6":"&bbrktbrk;","\u0431":"&bcy;","\u201e":"&ldquor;","\u29b0":"&bemptyv;","\u03b2":"&beta;","\u2136":"&beth;","\u226c":"&twixt;","\ud835\udd1f":"&bfr;","\u25ef":"&xcirc;","\u2a00":"&xodot;","\u2a01":"&xoplus;","\u2a02":"&xotime;","\u2a06":"&xsqcup;","\u2605":"&starf;","\u25bd":"&xdtri;","\u25b3":"&xutri;","\u2a04":"&xuplus;","\u290d":"&rbarr;","\u29eb":"&lozf;","\u25b4":"&utrif;","\u25be":"&dtrif;","\u25c2":"&ltrif;","\u25b8":"&rtrif;","\u2423":"&blank;","\u2592":"&blk12;","\u2591":"&blk14;","\u2593":"&blk34;","\u2588":"&block;","=\u20e5":"&bne;","\u2261\u20e5":"&bnequiv;","\u2310":"&bnot;","\ud835\udd53":"&bopf;","\u22c8":"&bowtie;","\u2557":"&boxDL;","\u2554":"&boxDR;","\u2556":"&boxDl;","\u2553":"&boxDr;","\u2550":"&boxH;","\u2566":"&boxHD;","\u2569":"&boxHU;","\u2564":"&boxHd;","\u2567":"&boxHu;","\u255d":"&boxUL;","\u255a":"&boxUR;","\u255c":"&boxUl;","\u2559":"&boxUr;","\u2551":"&boxV;","\u256c":"&boxVH;","\u2563":"&boxVL;","\u2560":"&boxVR;","\u256b":"&boxVh;","\u2562":"&boxVl;","\u255f":"&boxVr;","\u29c9":"&boxbox;","\u2555":"&boxdL;","\u2552":"&boxdR;","\u2510":"&boxdl;","\u250c":"&boxdr;","\u2565":"&boxhD;","\u2568":"&boxhU;","\u252c":"&boxhd;","\u2534":"&boxhu;","\u229f":"&minusb;","\u229e":"&plusb;","\u22a0":"&timesb;","\u255b":"&boxuL;","\u2558":"&boxuR;","\u2518":"&boxul;","\u2514":"&boxur;","\u2502":"&boxv;","\u256a":"&boxvH;","\u2561":"&boxvL;","\u255e":"&boxvR;","\u253c":"&boxvh;","\u2524":"&boxvl;","\u251c":"&boxvr;","\xa6":"&brvbar;","\ud835\udcb7":"&bscr;","\u204f":"&bsemi;","\\":"&bsol;","\u29c5":"&bsolb;","\u27c8":"&bsolhsub;","\u2022":"&bullet;","\u2aae":"&bumpE;","\u0107":"&cacute;","\u2229":"&cap;","\u2a44":"&capand;","\u2a49":"&capbrcup;","\u2a4b":"&capcap;","\u2a47":"&capcup;","\u2a40":"&capdot;","\u2229\ufe00":"&caps;","\u2041":"&caret;","\u2a4d":"&ccaps;","\u010d":"&ccaron;","\xe7":"&ccedil;","\u0109":"&ccirc;","\u2a4c":"&ccups;","\u2a50":"&ccupssm;","\u010b":"&cdot;","\u29b2":"&cemptyv;","\xa2":"&cent;","\ud835\udd20":"&cfr;","\u0447":"&chcy;","\u2713":"&checkmark;","\u03c7":"&chi;","\u25cb":"&cir;","\u29c3":"&cirE;","\u02c6":"&circ;","\u2257":"&cire;","\u21ba":"&olarr;","\u21bb":"&orarr;","\u24c8":"&oS;","\u229b":"&oast;","\u229a":"&ocir;","\u229d":"&odash;","\u2a10":"&cirfnint;","\u2aef":"&cirmid;","\u29c2":"&cirscir;","\u2663":"&clubsuit;",":":"&colon;",",":"&comma;","@":"&commat;","\u2201":"&complement;","\u2a6d":"&congdot;","\ud835\udd54":"&copf;","\u2117":"&copysr;","\u21b5":"&crarr;","\u2717":"&cross;","\ud835\udcb8":"&cscr;","\u2acf":"&csub;","\u2ad1":"&csube;","\u2ad0":"&csup;","\u2ad2":"&csupe;","\u22ef":"&ctdot;","\u2938":"&cudarrl;","\u2935":"&cudarrr;","\u22de":"&curlyeqprec;","\u22df":"&curlyeqsucc;","\u21b6":"&curvearrowleft;","\u293d":"&cularrp;","\u222a":"&cup;","\u2a48":"&cupbrcap;","\u2a46":"&cupcap;","\u2a4a":"&cupcup;","\u228d":"&cupdot;","\u2a45":"&cupor;","\u222a\ufe00":"&cups;","\u21b7":"&curvearrowright;","\u293c":"&curarrm;","\u22ce":"&cuvee;","\u22cf":"&cuwed;","\xa4":"&curren;","\u2231":"&cwint;","\u232d":"&cylcty;","\u2965":"&dHar;","\u2020":"&dagger;","\u2138":"&daleth;","\u2010":"&hyphen;","\u290f":"&rBarr;","\u010f":"&dcaron;","\u0434":"&dcy;","\u21ca":"&downdownarrows;","\u2a77":"&eDDot;","\xb0":"&deg;","\u03b4":"&delta;","\u29b1":"&demptyv;","\u297f":"&dfisht;","\ud835\udd21":"&dfr;","\u2666":"&diams;","\u03dd":"&gammad;","\u22f2":"&disin;","\xf7":"&divide;","\u22c7":"&divonx;","\u0452":"&djcy;","\u231e":"&llcorner;","\u230d":"&dlcrop;",$:"&dollar;","\ud835\udd55":"&dopf;","\u2251":"&eDot;","\u2238":"&minusd;","\u2214":"&plusdo;","\u22a1":"&sdotb;","\u231f":"&lrcorner;","\u230c":"&drcrop;","\ud835\udcb9":"&dscr;","\u0455":"&dscy;","\u29f6":"&dsol;","\u0111":"&dstrok;","\u22f1":"&dtdot;","\u25bf":"&triangledown;","\u29a6":"&dwangle;","\u045f":"&dzcy;","\u27ff":"&dzigrarr;","\xe9":"&eacute;","\u2a6e":"&easter;","\u011b":"&ecaron;","\u2256":"&eqcirc;","\xea":"&ecirc;","\u2255":"&eqcolon;","\u044d":"&ecy;","\u0117":"&edot;","\u2252":"&fallingdotseq;","\ud835\udd22":"&efr;","\u2a9a":"&eg;","\xe8":"&egrave;","\u2a96":"&eqslantgtr;","\u2a98":"&egsdot;","\u2a99":"&el;","\u23e7":"&elinters;","\u2113":"&ell;","\u2a95":"&eqslantless;","\u2a97":"&elsdot;","\u0113":"&emacr;","\u2205":"&varnothing;","\u2004":"&emsp13;","\u2005":"&emsp14;","\u2003":"&emsp;","\u014b":"&eng;","\u2002":"&ensp;","\u0119":"&eogon;","\ud835\udd56":"&eopf;","\u22d5":"&epar;","\u29e3":"&eparsl;","\u2a71":"&eplus;","\u03b5":"&epsilon;","\u03f5":"&varepsilon;","=":"&equals;","\u225f":"&questeq;","\u2a78":"&equivDD;","\u29e5":"&eqvparsl;","\u2253":"&risingdotseq;","\u2971":"&erarr;","\u212f":"&escr;","\u03b7":"&eta;","\xf0":"&eth;","\xeb":"&euml;","\u20ac":"&euro;","!":"&excl;","\u0444":"&fcy;","\u2640":"&female;","\ufb03":"&ffilig;","\ufb00":"&fflig;","\ufb04":"&ffllig;","\ud835\udd23":"&ffr;","\ufb01":"&filig;",fj:"&fjlig;","\u266d":"&flat;","\ufb02":"&fllig;","\u25b1":"&fltns;","\u0192":"&fnof;","\ud835\udd57":"&fopf;","\u22d4":"&pitchfork;","\u2ad9":"&forkv;","\u2a0d":"&fpartint;","\xbd":"&half;","\u2153":"&frac13;","\xbc":"&frac14;","\u2155":"&frac15;","\u2159":"&frac16;","\u215b":"&frac18;","\u2154":"&frac23;","\u2156":"&frac25;","\xbe":"&frac34;","\u2157":"&frac35;","\u215c":"&frac38;","\u2158":"&frac45;","\u215a":"&frac56;","\u215d":"&frac58;","\u215e":"&frac78;","\u2044":"&frasl;","\u2322":"&sfrown;","\ud835\udcbb":"&fscr;","\u2a8c":"&gtreqqless;","\u01f5":"&gacute;","\u03b3":"&gamma;","\u2a86":"&gtrapprox;","\u011f":"&gbreve;","\u011d":"&gcirc;","\u0433":"&gcy;","\u0121":"&gdot;","\u2aa9":"&gescc;","\u2a80":"&gesdot;","\u2a82":"&gesdoto;","\u2a84":"&gesdotol;","\u22db\ufe00":"&gesl;","\u2a94":"&gesles;","\ud835\udd24":"&gfr;","\u2137":"&gimel;","\u0453":"&gjcy;","\u2a92":"&glE;","\u2aa5":"&gla;","\u2aa4":"&glj;","\u2269":"&gneqq;","\u2a8a":"&gnapprox;","\u2a88":"&gneq;","\u22e7":"&gnsim;","\ud835\udd58":"&gopf;","\u210a":"&gscr;","\u2a8e":"&gsime;","\u2a90":"&gsiml;","\u2aa7":"&gtcc;","\u2a7a":"&gtcir;","\u22d7":"&gtrdot;","\u2995":"&gtlPar;","\u2a7c":"&gtquest;","\u2978":"&gtrarr;","\u2269\ufe00":"&gvnE;","\u044a":"&hardcy;","\u2948":"&harrcir;","\u21ad":"&leftrightsquigarrow;","\u210f":"&plankv;","\u0125":"&hcirc;","\u2665":"&heartsuit;","\u2026":"&mldr;","\u22b9":"&hercon;","\ud835\udd25":"&hfr;","\u2925":"&searhk;","\u2926":"&swarhk;","\u21ff":"&hoarr;","\u223b":"&homtht;","\u21a9":"&larrhk;","\u21aa":"&rarrhk;","\ud835\udd59":"&hopf;","\u2015":"&horbar;","\ud835\udcbd":"&hscr;","\u0127":"&hstrok;","\u2043":"&hybull;","\xed":"&iacute;","\xee":"&icirc;","\u0438":"&icy;","\u0435":"&iecy;","\xa1":"&iexcl;","\ud835\udd26":"&ifr;","\xec":"&igrave;","\u2a0c":"&qint;","\u222d":"&tint;","\u29dc":"&iinfin;","\u2129":"&iiota;","\u0133":"&ijlig;","\u012b":"&imacr;","\u0131":"&inodot;","\u22b7":"&imof;","\u01b5":"&imped;","\u2105":"&incare;","\u221e":"&infin;","\u29dd":"&infintie;","\u22ba":"&intercal;","\u2a17":"&intlarhk;","\u2a3c":"&iprod;","\u0451":"&iocy;","\u012f":"&iogon;","\ud835\udd5a":"&iopf;","\u03b9":"&iota;","\xbf":"&iquest;","\ud835\udcbe":"&iscr;","\u22f9":"&isinE;","\u22f5":"&isindot;","\u22f4":"&isins;","\u22f3":"&isinsv;","\u0129":"&itilde;","\u0456":"&iukcy;","\xef":"&iuml;","\u0135":"&jcirc;","\u0439":"&jcy;","\ud835\udd27":"&jfr;","\u0237":"&jmath;","\ud835\udd5b":"&jopf;","\ud835\udcbf":"&jscr;","\u0458":"&jsercy;","\u0454":"&jukcy;","\u03ba":"&kappa;","\u03f0":"&varkappa;","\u0137":"&kcedil;","\u043a":"&kcy;","\ud835\udd28":"&kfr;","\u0138":"&kgreen;","\u0445":"&khcy;","\u045c":"&kjcy;","\ud835\udd5c":"&kopf;","\ud835\udcc0":"&kscr;","\u291b":"&lAtail;","\u290e":"&lBarr;","\u2a8b":"&lesseqqgtr;","\u2962":"&lHar;","\u013a":"&lacute;","\u29b4":"&laemptyv;","\u03bb":"&lambda;","\u2991":"&langd;","\u2a85":"&lessapprox;","\xab":"&laquo;","\u291f":"&larrbfs;","\u291d":"&larrfs;","\u21ab":"&looparrowleft;","\u2939":"&larrpl;","\u2973":"&larrsim;","\u21a2":"&leftarrowtail;","\u2aab":"&lat;","\u2919":"&latail;","\u2aad":"&late;","\u2aad\ufe00":"&lates;","\u290c":"&lbarr;","\u2772":"&lbbrk;","{":"&lcub;","[":"&lsqb;","\u298b":"&lbrke;","\u298f":"&lbrksld;","\u298d":"&lbrkslu;","\u013e":"&lcaron;","\u013c":"&lcedil;","\u043b":"&lcy;","\u2936":"&ldca;","\u2967":"&ldrdhar;","\u294b":"&ldrushar;","\u21b2":"&ldsh;","\u2264":"&leq;","\u21c7":"&llarr;","\u22cb":"&lthree;","\u2aa8":"&lescc;","\u2a7f":"&lesdot;","\u2a81":"&lesdoto;","\u2a83":"&lesdotor;","\u22da\ufe00":"&lesg;","\u2a93":"&lesges;","\u22d6":"&ltdot;","\u297c":"&lfisht;","\ud835\udd29":"&lfr;","\u2a91":"&lgE;","\u296a":"&lharul;","\u2584":"&lhblk;","\u0459":"&ljcy;","\u296b":"&llhard;","\u25fa":"&lltri;","\u0140":"&lmidot;","\u23b0":"&lmoustache;","\u2268":"&lneqq;","\u2a89":"&lnapprox;","\u2a87":"&lneq;","\u22e6":"&lnsim;","\u27ec":"&loang;","\u21fd":"&loarr;","\u27fc":"&xmap;","\u21ac":"&rarrlp;","\u2985":"&lopar;","\ud835\udd5d":"&lopf;","\u2a2d":"&loplus;","\u2a34":"&lotimes;","\u2217":"&lowast;","\u25ca":"&lozenge;","(":"&lpar;","\u2993":"&lparlt;","\u296d":"&lrhard;","\u200e":"&lrm;","\u22bf":"&lrtri;","\u2039":"&lsaquo;","\ud835\udcc1":"&lscr;","\u2a8d":"&lsime;","\u2a8f":"&lsimg;","\u201a":"&sbquo;","\u0142":"&lstrok;","\u2aa6":"&ltcc;","\u2a79":"&ltcir;","\u22c9":"&ltimes;","\u2976":"&ltlarr;","\u2a7b":"&ltquest;","\u2996":"&ltrPar;","\u25c3":"&triangleleft;","\u294a":"&lurdshar;","\u2966":"&luruhar;","\u2268\ufe00":"&lvnE;","\u223a":"&mDDot;","\xaf":"&strns;","\u2642":"&male;","\u2720":"&maltese;","\u25ae":"&marker;","\u2a29":"&mcomma;","\u043c":"&mcy;","\u2014":"&mdash;","\ud835\udd2a":"&mfr;","\u2127":"&mho;","\xb5":"&micro;","\u2af0":"&midcir;","\u2212":"&minus;","\u2a2a":"&minusdu;","\u2adb":"&mlcp;","\u22a7":"&models;","\ud835\udd5e":"&mopf;","\ud835\udcc2":"&mscr;","\u03bc":"&mu;","\u22b8":"&mumap;","\u22d9\u0338":"&nGg;","\u226b\u20d2":"&nGt;","\u21cd":"&nlArr;","\u21ce":"&nhArr;","\u22d8\u0338":"&nLl;","\u226a\u20d2":"&nLt;","\u21cf":"&nrArr;","\u22af":"&nVDash;","\u22ae":"&nVdash;","\u0144":"&nacute;","\u2220\u20d2":"&nang;","\u2a70\u0338":"&napE;","\u224b\u0338":"&napid;","\u0149":"&napos;","\u266e":"&natural;","\u2a43":"&ncap;","\u0148":"&ncaron;","\u0146":"&ncedil;","\u2a6d\u0338":"&ncongdot;","\u2a42":"&ncup;","\u043d":"&ncy;","\u2013":"&ndash;","\u21d7":"&neArr;","\u2924":"&nearhk;","\u2250\u0338":"&nedot;","\u2928":"&toea;","\ud835\udd2b":"&nfr;","\u21ae":"&nleftrightarrow;","\u2af2":"&nhpar;","\u22fc":"&nis;","\u22fa":"&nisd;","\u045a":"&njcy;","\u2266\u0338":"&nleqq;","\u219a":"&nleftarrow;","\u2025":"&nldr;","\ud835\udd5f":"&nopf;","\xac":"&not;","\u22f9\u0338":"&notinE;","\u22f5\u0338":"&notindot;","\u22f7":"&notinvb;","\u22f6":"&notinvc;","\u22fe":"&notnivb;","\u22fd":"&notnivc;","\u2afd\u20e5":"&nparsl;","\u2202\u0338":"&npart;","\u2a14":"&npolint;","\u219b":"&nrightarrow;","\u2933\u0338":"&nrarrc;","\u219d\u0338":"&nrarrw;","\ud835\udcc3":"&nscr;","\u2284":"&nsub;","\u2ac5\u0338":"&nsubseteqq;","\u2285":"&nsup;","\u2ac6\u0338":"&nsupseteqq;","\xf1":"&ntilde;","\u03bd":"&nu;","#":"&num;","\u2116":"&numero;","\u2007":"&numsp;","\u22ad":"&nvDash;","\u2904":"&nvHarr;","\u224d\u20d2":"&nvap;","\u22ac":"&nvdash;","\u2265\u20d2":"&nvge;",">\u20d2":"&nvgt;","\u29de":"&nvinfin;","\u2902":"&nvlArr;","\u2264\u20d2":"&nvle;","<\u20d2":"&nvlt;","\u22b4\u20d2":"&nvltrie;","\u2903":"&nvrArr;","\u22b5\u20d2":"&nvrtrie;","\u223c\u20d2":"&nvsim;","\u21d6":"&nwArr;","\u2923":"&nwarhk;","\u2927":"&nwnear;","\xf3":"&oacute;","\xf4":"&ocirc;","\u043e":"&ocy;","\u0151":"&odblac;","\u2a38":"&odiv;","\u29bc":"&odsold;","\u0153":"&oelig;","\u29bf":"&ofcir;","\ud835\udd2c":"&ofr;","\u02db":"&ogon;","\xf2":"&ograve;","\u29c1":"&ogt;","\u29b5":"&ohbar;","\u29be":"&olcir;","\u29bb":"&olcross;","\u29c0":"&olt;","\u014d":"&omacr;","\u03c9":"&omega;","\u03bf":"&omicron;","\u29b6":"&omid;","\ud835\udd60":"&oopf;","\u29b7":"&opar;","\u29b9":"&operp;","\u2228":"&vee;","\u2a5d":"&ord;","\u2134":"&oscr;","\xaa":"&ordf;","\xba":"&ordm;","\u22b6":"&origof;","\u2a56":"&oror;","\u2a57":"&orslope;","\u2a5b":"&orv;","\xf8":"&oslash;","\u2298":"&osol;","\xf5":"&otilde;","\u2a36":"&otimesas;","\xf6":"&ouml;","\u233d":"&ovbar;","\xb6":"&para;","\u2af3":"&parsim;","\u2afd":"&parsl;","\u043f":"&pcy;","%":"&percnt;",".":"&period;","\u2030":"&permil;","\u2031":"&pertenk;","\ud835\udd2d":"&pfr;","\u03c6":"&phi;","\u03d5":"&varphi;","\u260e":"&phone;","\u03c0":"&pi;","\u03d6":"&varpi;","\u210e":"&planckh;","+":"&plus;","\u2a23":"&plusacir;","\u2a22":"&pluscir;","\u2a25":"&plusdu;","\u2a72":"&pluse;","\u2a26":"&plussim;","\u2a27":"&plustwo;","\u2a15":"&pointint;","\ud835\udd61":"&popf;","\xa3":"&pound;","\u2ab3":"&prE;","\u2ab7":"&precapprox;","\u2ab9":"&prnap;","\u2ab5":"&prnE;","\u22e8":"&prnsim;","\u2032":"&prime;","\u232e":"&profalar;","\u2312":"&profline;","\u2313":"&profsurf;","\u22b0":"&prurel;","\ud835\udcc5":"&pscr;","\u03c8":"&psi;","\u2008":"&puncsp;","\ud835\udd2e":"&qfr;","\ud835\udd62":"&qopf;","\u2057":"&qprime;","\ud835\udcc6":"&qscr;","\u2a16":"&quatint;","?":"&quest;","\u291c":"&rAtail;","\u2964":"&rHar;","\u223d\u0331":"&race;","\u0155":"&racute;","\u29b3":"&raemptyv;","\u2992":"&rangd;","\u29a5":"&range;","\xbb":"&raquo;","\u2975":"&rarrap;","\u2920":"&rarrbfs;","\u2933":"&rarrc;","\u291e":"&rarrfs;","\u2945":"&rarrpl;","\u2974":"&rarrsim;","\u21a3":"&rightarrowtail;","\u219d":"&rightsquigarrow;","\u291a":"&ratail;","\u2236":"&ratio;","\u2773":"&rbbrk;","}":"&rcub;","]":"&rsqb;","\u298c":"&rbrke;","\u298e":"&rbrksld;","\u2990":"&rbrkslu;","\u0159":"&rcaron;","\u0157":"&rcedil;","\u0440":"&rcy;","\u2937":"&rdca;","\u2969":"&rdldhar;","\u21b3":"&rdsh;","\u25ad":"&rect;","\u297d":"&rfisht;","\ud835\udd2f":"&rfr;","\u296c":"&rharul;","\u03c1":"&rho;","\u03f1":"&varrho;","\u21c9":"&rrarr;","\u22cc":"&rthree;","\u02da":"&ring;","\u200f":"&rlm;","\u23b1":"&rmoustache;","\u2aee":"&rnmid;","\u27ed":"&roang;","\u21fe":"&roarr;","\u2986":"&ropar;","\ud835\udd63":"&ropf;","\u2a2e":"&roplus;","\u2a35":"&rotimes;",")":"&rpar;","\u2994":"&rpargt;","\u2a12":"&rppolint;","\u203a":"&rsaquo;","\ud835\udcc7":"&rscr;","\u22ca":"&rtimes;","\u25b9":"&triangleright;","\u29ce":"&rtriltri;","\u2968":"&ruluhar;","\u211e":"&rx;","\u015b":"&sacute;","\u2ab4":"&scE;","\u2ab8":"&succapprox;","\u0161":"&scaron;","\u015f":"&scedil;","\u015d":"&scirc;","\u2ab6":"&succneqq;","\u2aba":"&succnapprox;","\u22e9":"&succnsim;","\u2a13":"&scpolint;","\u0441":"&scy;","\u22c5":"&sdot;","\u2a66":"&sdote;","\u21d8":"&seArr;","\xa7":"&sect;",";":"&semi;","\u2929":"&tosa;","\u2736":"&sext;","\ud835\udd30":"&sfr;","\u266f":"&sharp;","\u0449":"&shchcy;","\u0448":"&shcy;","\xad":"&shy;","\u03c3":"&sigma;","\u03c2":"&varsigma;","\u2a6a":"&simdot;","\u2a9e":"&simg;","\u2aa0":"&simgE;","\u2a9d":"&siml;","\u2a9f":"&simlE;","\u2246":"&simne;","\u2a24":"&simplus;","\u2972":"&simrarr;","\u2a33":"&smashp;","\u29e4":"&smeparsl;","\u2323":"&ssmile;","\u2aaa":"&smt;","\u2aac":"&smte;","\u2aac\ufe00":"&smtes;","\u044c":"&softcy;","/":"&sol;","\u29c4":"&solb;","\u233f":"&solbar;","\ud835\udd64":"&sopf;","\u2660":"&spadesuit;","\u2293\ufe00":"&sqcaps;","\u2294\ufe00":"&sqcups;","\ud835\udcc8":"&sscr;","\u2606":"&star;","\u2282":"&subset;","\u2ac5":"&subseteqq;","\u2abd":"&subdot;","\u2ac3":"&subedot;","\u2ac1":"&submult;","\u2acb":"&subsetneqq;","\u228a":"&subsetneq;","\u2abf":"&subplus;","\u2979":"&subrarr;","\u2ac7":"&subsim;","\u2ad5":"&subsub;","\u2ad3":"&subsup;","\u266a":"&sung;","\xb9":"&sup1;","\xb2":"&sup2;","\xb3":"&sup3;","\u2ac6":"&supseteqq;","\u2abe":"&supdot;","\u2ad8":"&supdsub;","\u2ac4":"&supedot;","\u27c9":"&suphsol;","\u2ad7":"&suphsub;","\u297b":"&suplarr;","\u2ac2":"&supmult;","\u2acc":"&supsetneqq;","\u228b":"&supsetneq;","\u2ac0":"&supplus;","\u2ac8":"&supsim;","\u2ad4":"&supsub;","\u2ad6":"&supsup;","\u21d9":"&swArr;","\u292a":"&swnwar;","\xdf":"&szlig;","\u2316":"&target;","\u03c4":"&tau;","\u0165":"&tcaron;","\u0163":"&tcedil;","\u0442":"&tcy;","\u2315":"&telrec;","\ud835\udd31":"&tfr;","\u03b8":"&theta;","\u03d1":"&vartheta;","\xfe":"&thorn;","\xd7":"&times;","\u2a31":"&timesbar;","\u2a30":"&timesd;","\u2336":"&topbot;","\u2af1":"&topcir;","\ud835\udd65":"&topf;","\u2ada":"&topfork;","\u2034":"&tprime;","\u25b5":"&utri;","\u225c":"&trie;","\u25ec":"&tridot;","\u2a3a":"&triminus;","\u2a39":"&triplus;","\u29cd":"&trisb;","\u2a3b":"&tritime;","\u23e2":"&trpezium;","\ud835\udcc9":"&tscr;","\u0446":"&tscy;","\u045b":"&tshcy;","\u0167":"&tstrok;","\u2963":"&uHar;","\xfa":"&uacute;","\u045e":"&ubrcy;","\u016d":"&ubreve;","\xfb":"&ucirc;","\u0443":"&ucy;","\u0171":"&udblac;","\u297e":"&ufisht;","\ud835\udd32":"&ufr;","\xf9":"&ugrave;","\u2580":"&uhblk;","\u231c":"&ulcorner;","\u230f":"&ulcrop;","\u25f8":"&ultri;","\u016b":"&umacr;","\u0173":"&uogon;","\ud835\udd66":"&uopf;","\u03c5":"&upsilon;","\u21c8":"&uuarr;","\u231d":"&urcorner;","\u230e":"&urcrop;","\u016f":"&uring;","\u25f9":"&urtri;","\ud835\udcca":"&uscr;","\u22f0":"&utdot;","\u0169":"&utilde;","\xfc":"&uuml;","\u29a7":"&uwangle;","\u2ae8":"&vBar;","\u2ae9":"&vBarv;","\u299c":"&vangrt;","\u228a\ufe00":"&vsubne;","\u2acb\ufe00":"&vsubnE;","\u228b\ufe00":"&vsupne;","\u2acc\ufe00":"&vsupnE;","\u0432":"&vcy;","\u22bb":"&veebar;","\u225a":"&veeeq;","\u22ee":"&vellip;","\ud835\udd33":"&vfr;","\ud835\udd67":"&vopf;","\ud835\udccb":"&vscr;","\u299a":"&vzigzag;","\u0175":"&wcirc;","\u2a5f":"&wedbar;","\u2259":"&wedgeq;","\u2118":"&wp;","\ud835\udd34":"&wfr;","\ud835\udd68":"&wopf;","\ud835\udccc":"&wscr;","\ud835\udd35":"&xfr;","\u03be":"&xi;","\u22fb":"&xnis;","\ud835\udd69":"&xopf;","\ud835\udccd":"&xscr;","\xfd":"&yacute;","\u044f":"&yacy;","\u0177":"&ycirc;","\u044b":"&ycy;","\xa5":"&yen;","\ud835\udd36":"&yfr;","\u0457":"&yicy;","\ud835\udd6a":"&yopf;","\ud835\udcce":"&yscr;","\u044e":"&yucy;","\xff":"&yuml;","\u017a":"&zacute;","\u017e":"&zcaron;","\u0437":"&zcy;","\u017c":"&zdot;","\u03b6":"&zeta;","\ud835\udd37":"&zfr;","\u0436":"&zhcy;","\u21dd":"&zigrarr;","\ud835\udd6b":"&zopf;","\ud835\udccf":"&zscr;","\u200d":"&zwj;","\u200c":"&zwnj;"}}}},5397:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.numericUnicodeMap={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376}},7525:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.fromCodePoint=String.fromCodePoint||function(e){return String.fromCharCode(Math.floor((e-65536)/1024)+55296,(e-65536)%1024+56320)},t.getCodePoint=String.prototype.codePointAt?function(e,t){return e.codePointAt(t)}:function(e,t){return 1024*(e.charCodeAt(t)-55296)+e.charCodeAt(t+1)-56320+65536},t.highSurrogateFrom=55296,t.highSurrogateTo=56319},6900:(e,t)=>{t.read=function(e,t,r,n,s){var i,o,A=8*s-n-1,a=(1<<A)-1,l=a>>1,c=-7,u=r?s-1:0,d=r?-1:1,h=e[t+u];for(u+=d,i=h&(1<<-c)-1,h>>=-c,c+=A;c>0;i=256*i+e[t+u],u+=d,c-=8);for(o=i&(1<<-c)-1,i>>=-c,c+=n;c>0;o=256*o+e[t+u],u+=d,c-=8);if(0===i)i=1-l;else{if(i===a)return o?NaN:1/0*(h?-1:1);o+=Math.pow(2,n),i-=l}return(h?-1:1)*o*Math.pow(2,i-n)},t.write=function(e,t,r,n,s,i){var o,A,a,l=8*i-s-1,c=(1<<l)-1,u=c>>1,d=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,h=n?0:i-1,f=n?1:-1,g=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(A=isNaN(t)?1:0,o=c):(o=Math.floor(Math.log(t)/Math.LN2),t*(a=Math.pow(2,-o))<1&&(o--,a*=2),(t+=o+u>=1?d/a:d*Math.pow(2,1-u))*a>=2&&(o++,a/=2),o+u>=c?(A=0,o=c):o+u>=1?(A=(t*a-1)*Math.pow(2,s),o+=u):(A=t*Math.pow(2,u-1)*Math.pow(2,s),o=0));s>=8;e[r+h]=255&A,h+=f,A/=256,s-=8);for(o=o<<s|A,l+=s;l>0;e[r+h]=255&o,h+=f,o/=256,l-=8);e[r+h-f]|=128*g}},2927:(e,t,r)=>{"use strict";t.qg=t.Z6=void 0;const n=r(4279);let s=!1;var i;!function(e){e[e.ELEMENT_NODE=1]="ELEMENT_NODE",e[e.TEXT_NODE=3]="TEXT_NODE",e[e.COMMENT_NODE=8]="COMMENT_NODE"}(i||(t.Z6=i={}));class o{constructor(){this.childNodes=[]}get text(){return(0,n.decode)(this.rawText)}remove(){return this.parentNode&&this.parentNode.removeChild(this),this}}class A extends o{constructor(e){super(),this.nodeType=i.TEXT_NODE,this.value=e}get rawText(){return this.value}get isWhitespace(){return/^(\s|&nbsp;)*$/.test(this.rawText)}toString(){return this.rawText}}class a extends o{constructor(e){super(),this.nodeType=i.COMMENT_NODE,this.value=e}get rawText(){return this.value}toString(){return`\x3c!--${this.rawText}--\x3e`}}const l={div:!0,p:!0,li:!0,td:!0,section:!0,br:!0};function c(e){return e[e.length-1]}class u extends o{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.tagName=e,this.rawAttrs=t,this.classNames=[],this.nodeType=i.ELEMENT_NODE,this.rawAttrs=t,this.parentNode=r,this.childNodes=[];let n={};for(let s;s=p.exec(t);)n[s[2]]=s[4]||s[5]||s[6];n.id&&(this.id=n.id),n.class&&(this.classNames=n.class.split(/\s+/))}removeChild(e){this.childNodes=this.childNodes.filter((t=>t!==e)),e instanceof u&&(e.parentNode=null)}exchangeChild(e,t){const r=this.childNodes.findIndex((t=>t===e));r>=0&&(this.childNodes[r]=t,e instanceof u&&(e.parentNode=null))}get rawText(){let e="";for(let t=0;t<this.childNodes.length;t++)e+=this.childNodes[t].rawText;return e}get structuredText(){let e=[];const t=[e];return function r(n){if(n.nodeType===i.ELEMENT_NODE)l[n.tagName]?(e.length>0&&t.push(e=[]),n.childNodes.forEach(r),e.length>0&&t.push(e=[])):n.childNodes.forEach(r);else if(n.nodeType===i.TEXT_NODE)if(n.isWhitespace)e.prependWhitespace=!0;else{let t=n.text;e.prependWhitespace&&(t=" "+t,e.prependWhitespace=!1),e.push(t)}}(this),t.map((function(e){return e.join("").trim().replace(/\s{2,}/g," ")})).join("\n").replace(/\s+$/,"")}get children(){return this.childNodes.filter((e=>e instanceof u))}toString(){const e=this.tagName;if(e){const t=/^(img|br|hr|area|base|input|doctype|link|meta)$/i.test(e),r=this.rawAttrs?" "+this.rawAttrs:"";return t?`<${e}${r} />`:`<${e}${r}>${this.innerHTML}</${e}>`}return this.innerHTML}get innerHTML(){return this.childNodes.map((e=>e.toString())).join("")}set innerHTML(e){const t=B(e);this.childNodes.forEach((e=>e.remove())),t.childNodes.forEach((e=>this.appendChild(e)))}set_content(e){if(e instanceof o)e=[e];else if("string"==typeof e){const t=B(e);e=t.childNodes.length?t.childNodes:[new A(e)]}this.childNodes=e}get outerHTML(){return this.toString()}trimRight(e){for(let t=0;t<this.childNodes.length;t++){const r=this.childNodes[t];if(r.nodeType===i.ELEMENT_NODE)r.trimRight(e);else{const n=r.rawText.search(e);n>-1&&(r.value=r.rawText.substr(0,n),this.childNodes.length=t+1)}}return this}get structure(){const e=[];let t=0;function r(r){e.push("  ".repeat(t)+r)}return function e(n){const s=n.id?"#"+n.id:"",o=n.classNames.length?"."+n.classNames.join("."):"";r(n.tagName+s+o),t++;for(let t=0;t<n.childNodes.length;t++){const s=n.childNodes[t];s.nodeType===i.ELEMENT_NODE?e(s):s.nodeType===i.TEXT_NODE&&(s.isWhitespace||r("#text"))}t--}(this),e.join("\n")}removeWhitespace(){let e=0;for(let t=0;t<this.childNodes.length;t++){const r=this.childNodes[t];if(r.nodeType===i.TEXT_NODE){if(r.isWhitespace)continue;r.value=r.rawText.trim()}else r.nodeType===i.ELEMENT_NODE&&r.removeWhitespace();this.childNodes[e++]=r}return this.childNodes.length=e,this}querySelectorAll(e){if(!(e instanceof f)){if(e.includes(",")){const t=e.split(","),r=new Set(t.map((e=>this.querySelectorAll(e.trim()))).flat());return Array.from(r)}return this.querySelectorAll(new f(e))}const t=e,r=new Set,n=[];for(this.childNodes.forEach((e=>n.push(e)));n.length>0;){const e=n.shift();e.nodeType===i.ELEMENT_NODE&&(t.advance(e)&&t.matched&&(r.add(e),t.rewind()),e.childNodes.forEach((e=>{n.push(e)})))}return Array.from(r)}querySelector(e){let t;e instanceof f?(t=e,t.reset()):t=new f(e);const r=[];for(let n=0;n<this.childNodes.length;n++)for(r.push([this.childNodes[n],0,!1]);r.length;){const e=c(r),n=e[0];if(0===e[1]){if(n.nodeType!==i.ELEMENT_NODE){r.pop();continue}if((e[2]=t.advance(n))&&t.matched)return n}e[1]<n.childNodes.length?r.push([n.childNodes[e[1]++],0,!1]):(e[2]&&t.rewind(),r.pop())}return null}appendChild(e){return this.childNodes.push(e),e instanceof u&&(e.parentNode=this),e}prependChild(e){return this.childNodes.unshift(e),e instanceof u&&(e.parentNode=this),e}get firstChild(){return this.childNodes[0]}get lastChild(){return c(this.childNodes)}get attributes(){if(this._attrs)return this._attrs;this._attrs={};const e=this.rawAttributes;for(const t in e)this._attrs[t]=(0,n.decode)(e[t]);return this._attrs}get rawAttributes(){if(this._rawAttrs)return this._rawAttrs;const e={};if(this.rawAttrs){let t;for(;t=m.exec(this.rawAttrs);)e[t[1]]=t[4]||t[5]||t[6]||""}return this._rawAttrs=e,e}setAttribute(e,t){"id"===e?this.id=t:"class"===e&&(this.classNames=t.split(/\s+/));const r=this.attributes;void 0===t?delete r[e]:r[e]=t+"",this._rawAttrs&&(void 0===t?delete this._rawAttrs[e]:this._rawAttrs[e]=(0,n.encode)(t+"")),this.rawAttrs=Object.keys(r).map((e=>e+(""===r[e]?"":'="'+(0,n.encode)(r[e])+'"'))).join(" ")}removeAttribute(e){this.setAttribute(e,void 0)}setAttributes(e){e.id?this.id=e.id:e.class&&(this.classNames=e.class.split(/\s+/)),this.attributes&&(Object.keys(this.attributes).forEach((e=>delete this.attributes[e])),Object.keys(e).forEach((t=>this.attributes[t]=e[t]+""))),this.rawAttributes&&(Object.keys(this.rawAttributes).forEach((e=>delete this.rawAttributes[e])),Object.keys(e).forEach((t=>this.rawAttributes[t]=(0,n.encode)(e[t]+"")))),this.rawAttrs=Object.keys(e).map((t=>t+(""===e[t]?"":'="'+(0,n.encode)(e[t]+"")+'"'))).join(" ")}}let d={};const h={f145:function(e,t,r,n,s){if(t=t||"",r=r||[],n=n||"",s=s||"",e.id!=t.substr(1))return!1;for(let i=r,o=0;o<i.length;o++)if(-1===e.classNames.indexOf(i[o]))return!1;return!0},f45:function(e,t,r,n,s){t=t||"",n=n||"",s=s||"";for(let i=r=r||[],o=0;o<i.length;o++)if(-1===e.classNames.indexOf(i[o]))return!1;return!0},f15:function(e,t,r,n,s){return t=t||"",r=r||[],n=n||"",s=s||"",e.id==t.substr(1)},f1:function(e,t,r,n,s){if(t=t||"",r=r||[],n=n||"",s=s||"",e.id!=t.substr(1))return!1},f5:function(e,t,r,n,s){return e=e||{},t=t||"",r=r||[],n=n||"",s=s||"",!0},f245:function(e,t,r,n,s){t=t||"",r=r||[],n=n||"",s=s||"";let i=e.attributes;for(let o in i){const e=i[o];if(o==n&&e==s)return!0}return!1},f25:function(e,t,r,n,s){t=t||"",r=r||[],n=n||"",s=s||"";let i=e.attributes;for(let o in i){const e=i[o];if(o==n&&e==s)return!0}return!1},f2:function(e,t,r,n,s){t=t||"",r=r||[],n=n||"",s=s||"";let i=e.attributes;for(let o in i){const e=i[o];if(o==n&&e==s)return!0}return!1},f345:function(e,t,r,n,s){if(t=t||"",r=r||[],n=n||"",s=s||"",e.tagName!=t)return!1;for(let i=r,o=0;o<i.length;o++)if(-1===e.classNames.indexOf(i[o]))return!1;return!0},f35:function(e,t,r,n,s){return t=t||"",r=r||[],n=n||"",s=s||"",e.tagName==t},f3:function(e,t,r,n,s){if(t=t||"",r=r||[],n=n||"",s=s||"",e.tagName!=t)return!1}};class f{constructor(e){this.nextMatch=0,h.f5=h.f5,this.matchers=e.split(" ").map((e=>{if(d[e])return d[e];const t=e.split("."),r=t[0],n=t.slice(1).sort();let s='"use strict";',i="f",o="",A="";if(r&&"*"!=r){let e;if("#"==r[0])s+="if (el.id != "+JSON.stringify(r.substr(1))+") return false;",i+="1";else if(e=r.match(/^\[\s*(\S+)\s*(=|!=)\s*((((["'])([^\6]*)\6))|(\S*?))\]\s*/)){o=e[1];let t=e[2];if("="!==t&&"!="!==t)throw new Error("Selector not supported, Expect [key${op}value].op must be =,!=");"="===t&&(t="=="),A=e[7]||e[8],s+=`let attrs = el.attributes;for (let key in attrs){const val = attrs[key]; if (key == "${o}" && val == "${A}"){return true;}} return false;`,i+="2"}else s+="if (el.tagName != "+JSON.stringify(r)+") return false;",i+="3"}n.length>0&&(s+="for (let cls = "+JSON.stringify(n)+", i = 0; i < cls.length; i++) if (el.classNames.indexOf(cls[i]) === -1) return false;",i+="4"),s+="return true;",i+="5";let a={func:h[i],tagName:r||"",classes:n||"",attr_key:o||"",value:A||""};return s=s||"",d[e]=a}))}advance(e){return!!(this.nextMatch<this.matchers.length&&this.matchers[this.nextMatch].func(e,this.matchers[this.nextMatch].tagName,this.matchers[this.nextMatch].classes,this.matchers[this.nextMatch].attr_key,this.matchers[this.nextMatch].value))&&(this.nextMatch++,!0)}rewind(){this.nextMatch--}get matched(){return this.nextMatch==this.matchers.length}reset(){this.nextMatch=0}flushCache(){d={}}}const g=/<!--[^]*?(?=-->)-->|<(\/?)([a-z][-.:0-9_a-z]*)((\s+[a-z][-.:0-9_a-z]*(\s*=\s*("[^"]*"|'([^']*')|([^\s\/>]+)))?)*)\s*(\/?)>/gi,p=/(^|\s)(id|class)\s*=\s*("([^"]+)"|'([^']+)'|(\S+))/gi,m=/([a-z][-.:0-9_a-z]*)(\s*=\s*("([^"]*)"|'([^']*)'|(\S+)))?/gi,w={area:!0,base:!0,br:!0,col:!0,hr:!0,img:!0,input:!0,link:!0,meta:!0,source:!0},v={li:{li:!0},p:{p:!0,div:!0},b:{div:!0},td:{td:!0,th:!0},th:{td:!0,th:!0},h1:{h1:!0},h2:{h2:!0},h3:{h3:!0},h4:{h4:!0},h5:{h5:!0},h6:{h6:!0}},b={li:{ul:!0,ol:!0},a:{div:!0},b:{div:!0},i:{div:!0},p:{div:!0},td:{tr:!0,table:!0},th:{tr:!0,table:!0}},y={script:!0,noscript:!0,style:!0,pre:!0};function B(e,t){const r=new u(null);let n=r;const i=[r];let o,l=0;for(t=t||{};o=g.exec(e);){if(l+o[0].length<g.lastIndex){const t=e.substring(l,g.lastIndex-o[0].length);s,n.appendChild(new A(t))}if(l=g.lastIndex,"!"!=o[0][1]){if(t.lowerCaseTagName&&(o[2]=o[2].toLowerCase()),!o[1]&&(!o[9]&&v[n.tagName]&&v[n.tagName][o[2]]&&(i.pop(),n=c(i)),n=n.appendChild(new u(o[2],o[3].trim())),i.push(n),y[o[2]])){let r="</"+o[2]+">",s=e.indexOf(r,g.lastIndex);if(t[o[2]]){let t;t=-1==s?e.substr(g.lastIndex):e.substring(g.lastIndex,s),t.length>0&&n.appendChild(new A(t))}-1==s?l=g.lastIndex=e.length+1:(l=g.lastIndex=s+r.length,o[1]="true")}if(o[1]||o[9]||w[o[2]])for(;;){if(n.tagName==o[2]){s,i.pop(),n=c(i);break}if(!b[n.tagName]||!b[n.tagName][o[2]])break;i.pop(),n=c(i)}}else if(t.comment){const t=e.substring(l-3,l-o[0].length+4);s,n.appendChild(new a(t))}}for(l<e.length&&r.appendChild(new A(e.substring(l))),r.valid=1===i.length;i.length>1;){const e=i.pop(),t=c(i);e.parentNode&&e.parentNode instanceof u&&e.parentNode.parentNode&&(e.parentNode===t&&e.tagName===t.tagName?(t.removeChild(e),e.childNodes.forEach((e=>{t.parentNode.appendChild(e)})),i.pop()):(t.removeChild(e),e.childNodes.forEach((e=>{t.appendChild(e)}))))}return r}t.qg=B;const E=["html","body","address","article","aside","blockquote","canvas","dd","div","dl","dt","fieldset","figcaption","figure","footer","form","header","hr","li","main","nav","noscript","ol","p","pre","section","tfoot","table","tbody","ul","video","th","td","tr","h1","h2","h3","h4","h5","h6"]},7717:(e,t,r)=>{"use strict";var n={};(0,r(5886).assign)(n,r(3706),r(898),r(4266)),e.exports=n},3706:(e,t,r)=>{"use strict";var n=r(9140),s=r(5886),i=r(7813),o=r(8135),A=r(301),a=Object.prototype.toString,l=0,c=-1,u=0,d=8;function h(e){if(!(this instanceof h))return new h(e);this.options=s.assign({level:c,method:d,chunkSize:16384,windowBits:15,memLevel:8,strategy:u,to:""},e||{});var t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new A,this.strm.avail_out=0;var r=n.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(r!==l)throw new Error(o[r]);if(t.header&&n.deflateSetHeader(this.strm,t.header),t.dictionary){var f;if(f="string"===typeof t.dictionary?i.string2buf(t.dictionary):"[object ArrayBuffer]"===a.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,(r=n.deflateSetDictionary(this.strm,f))!==l)throw new Error(o[r]);this._dict_set=!0}}function f(e,t){var r=new h(t);if(r.push(e,!0),r.err)throw r.msg||o[r.err];return r.result}h.prototype.push=function(e,t){var r,o,A=this.strm,c=this.options.chunkSize;if(this.ended)return!1;o=t===~~t?t:!0===t?4:0,"string"===typeof e?A.input=i.string2buf(e):"[object ArrayBuffer]"===a.call(e)?A.input=new Uint8Array(e):A.input=e,A.next_in=0,A.avail_in=A.input.length;do{if(0===A.avail_out&&(A.output=new s.Buf8(c),A.next_out=0,A.avail_out=c),1!==(r=n.deflate(A,o))&&r!==l)return this.onEnd(r),this.ended=!0,!1;0!==A.avail_out&&(0!==A.avail_in||4!==o&&2!==o)||("string"===this.options.to?this.onData(i.buf2binstring(s.shrinkBuf(A.output,A.next_out))):this.onData(s.shrinkBuf(A.output,A.next_out)))}while((A.avail_in>0||0===A.avail_out)&&1!==r);return 4===o?(r=n.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===l):2!==o||(this.onEnd(l),A.avail_out=0,!0)},h.prototype.onData=function(e){this.chunks.push(e)},h.prototype.onEnd=function(e){e===l&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=s.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},t.Deflate=h,t.deflate=f,t.deflateRaw=function(e,t){return(t=t||{}).raw=!0,f(e,t)},t.gzip=function(e,t){return(t=t||{}).gzip=!0,f(e,t)}},898:(e,t,r)=>{"use strict";var n=r(5960),s=r(5886),i=r(7813),o=r(4266),A=r(8135),a=r(301),l=r(4251),c=Object.prototype.toString;function u(e){if(!(this instanceof u))return new u(e);this.options=s.assign({chunkSize:16384,windowBits:0,to:""},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0===(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new a,this.strm.avail_out=0;var r=n.inflateInit2(this.strm,t.windowBits);if(r!==o.Z_OK)throw new Error(A[r]);if(this.header=new l,n.inflateGetHeader(this.strm,this.header),t.dictionary&&("string"===typeof t.dictionary?t.dictionary=i.string2buf(t.dictionary):"[object ArrayBuffer]"===c.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(r=n.inflateSetDictionary(this.strm,t.dictionary))!==o.Z_OK))throw new Error(A[r])}function d(e,t){var r=new u(t);if(r.push(e,!0),r.err)throw r.msg||A[r.err];return r.result}u.prototype.push=function(e,t){var r,A,a,l,u,d=this.strm,h=this.options.chunkSize,f=this.options.dictionary,g=!1;if(this.ended)return!1;A=t===~~t?t:!0===t?o.Z_FINISH:o.Z_NO_FLUSH,"string"===typeof e?d.input=i.binstring2buf(e):"[object ArrayBuffer]"===c.call(e)?d.input=new Uint8Array(e):d.input=e,d.next_in=0,d.avail_in=d.input.length;do{if(0===d.avail_out&&(d.output=new s.Buf8(h),d.next_out=0,d.avail_out=h),(r=n.inflate(d,o.Z_NO_FLUSH))===o.Z_NEED_DICT&&f&&(r=n.inflateSetDictionary(this.strm,f)),r===o.Z_BUF_ERROR&&!0===g&&(r=o.Z_OK,g=!1),r!==o.Z_STREAM_END&&r!==o.Z_OK)return this.onEnd(r),this.ended=!0,!1;d.next_out&&(0!==d.avail_out&&r!==o.Z_STREAM_END&&(0!==d.avail_in||A!==o.Z_FINISH&&A!==o.Z_SYNC_FLUSH)||("string"===this.options.to?(a=i.utf8border(d.output,d.next_out),l=d.next_out-a,u=i.buf2string(d.output,a),d.next_out=l,d.avail_out=h-l,l&&s.arraySet(d.output,d.output,a,l,0),this.onData(u)):this.onData(s.shrinkBuf(d.output,d.next_out)))),0===d.avail_in&&0===d.avail_out&&(g=!0)}while((d.avail_in>0||0===d.avail_out)&&r!==o.Z_STREAM_END);return r===o.Z_STREAM_END&&(A=o.Z_FINISH),A===o.Z_FINISH?(r=n.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===o.Z_OK):A!==o.Z_SYNC_FLUSH||(this.onEnd(o.Z_OK),d.avail_out=0,!0)},u.prototype.onData=function(e){this.chunks.push(e)},u.prototype.onEnd=function(e){e===o.Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=s.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},t.Inflate=u,t.inflate=d,t.inflateRaw=function(e,t){return(t=t||{}).raw=!0,d(e,t)},t.ungzip=d},5886:(e,t)=>{"use strict";var r="undefined"!==typeof Uint8Array&&"undefined"!==typeof Uint16Array&&"undefined"!==typeof Int32Array;function n(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var r=t.shift();if(r){if("object"!==typeof r)throw new TypeError(r+"must be non-object");for(var s in r)n(r,s)&&(e[s]=r[s])}}return e},t.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var s={arraySet:function(e,t,r,n,s){if(t.subarray&&e.subarray)e.set(t.subarray(r,r+n),s);else for(var i=0;i<n;i++)e[s+i]=t[r+i]},flattenChunks:function(e){var t,r,n,s,i,o;for(n=0,t=0,r=e.length;t<r;t++)n+=e[t].length;for(o=new Uint8Array(n),s=0,t=0,r=e.length;t<r;t++)i=e[t],o.set(i,s),s+=i.length;return o}},i={arraySet:function(e,t,r,n,s){for(var i=0;i<n;i++)e[s+i]=t[r+i]},flattenChunks:function(e){return[].concat.apply([],e)}};t.setTyped=function(e){e?(t.Buf8=Uint8Array,t.Buf16=Uint16Array,t.Buf32=Int32Array,t.assign(t,s)):(t.Buf8=Array,t.Buf16=Array,t.Buf32=Array,t.assign(t,i))},t.setTyped(r)},7813:(e,t,r)=>{"use strict";var n=r(5886),s=!0,i=!0;try{String.fromCharCode.apply(null,[0])}catch(l){s=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(l){i=!1}for(var o=new n.Buf8(256),A=0;A<256;A++)o[A]=A>=252?6:A>=248?5:A>=240?4:A>=224?3:A>=192?2:1;function a(e,t){if(t<65534&&(e.subarray&&i||!e.subarray&&s))return String.fromCharCode.apply(null,n.shrinkBuf(e,t));for(var r="",o=0;o<t;o++)r+=String.fromCharCode(e[o]);return r}o[254]=o[254]=1,t.string2buf=function(e){var t,r,s,i,o,A=e.length,a=0;for(i=0;i<A;i++)55296===(64512&(r=e.charCodeAt(i)))&&i+1<A&&56320===(64512&(s=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(s-56320),i++),a+=r<128?1:r<2048?2:r<65536?3:4;for(t=new n.Buf8(a),o=0,i=0;o<a;i++)55296===(64512&(r=e.charCodeAt(i)))&&i+1<A&&56320===(64512&(s=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(s-56320),i++),r<128?t[o++]=r:r<2048?(t[o++]=192|r>>>6,t[o++]=128|63&r):r<65536?(t[o++]=224|r>>>12,t[o++]=128|r>>>6&63,t[o++]=128|63&r):(t[o++]=240|r>>>18,t[o++]=128|r>>>12&63,t[o++]=128|r>>>6&63,t[o++]=128|63&r);return t},t.buf2binstring=function(e){return a(e,e.length)},t.binstring2buf=function(e){for(var t=new n.Buf8(e.length),r=0,s=t.length;r<s;r++)t[r]=e.charCodeAt(r);return t},t.buf2string=function(e,t){var r,n,s,i,A=t||e.length,l=new Array(2*A);for(n=0,r=0;r<A;)if((s=e[r++])<128)l[n++]=s;else if((i=o[s])>4)l[n++]=65533,r+=i-1;else{for(s&=2===i?31:3===i?15:7;i>1&&r<A;)s=s<<6|63&e[r++],i--;i>1?l[n++]=65533:s<65536?l[n++]=s:(s-=65536,l[n++]=55296|s>>10&1023,l[n++]=56320|1023&s)}return a(l,n)},t.utf8border=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;r>=0&&128===(192&e[r]);)r--;return r<0||0===r?t:r+o[e[r]]>t?r:t}},8374:e=>{"use strict";e.exports=function(e,t,r,n){for(var s=65535&e,i=e>>>16&65535,o=0;0!==r;){r-=o=r>2e3?2e3:r;do{i=i+(s=s+t[n++]|0)|0}while(--o);s%=65521,i%=65521}return s|i<<16}},4266:e=>{"use strict";e.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},5592:e=>{"use strict";var t=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}();e.exports=function(e,r,n,s){var i=t,o=s+n;e^=-1;for(var A=s;A<o;A++)e=e>>>8^i[255&(e^r[A])];return~e}},9140:(e,t,r)=>{"use strict";var n,s=r(5886),i=r(3422),o=r(8374),A=r(5592),a=r(8135),l=0,c=4,u=0,d=-2,h=-1,f=4,g=2,p=8,m=9,w=286,v=30,b=19,y=2*w+1,B=15,E=3,C=258,x=C+E+1,I=42,D=103,Q=113,P=666,F=1,L=2,M=3,S=4;function N(e,t){return e.msg=a[t],t}function k(e){return(e<<1)-(e>4?9:0)}function R(e){for(var t=e.length;--t>=0;)e[t]=0}function T(e){var t=e.state,r=t.pending;r>e.avail_out&&(r=e.avail_out),0!==r&&(s.arraySet(e.output,t.pending_buf,t.pending_out,r,e.next_out),e.next_out+=r,t.pending_out+=r,e.total_out+=r,e.avail_out-=r,t.pending-=r,0===t.pending&&(t.pending_out=0))}function W(e,t){i._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,T(e.strm)}function j(e,t){e.pending_buf[e.pending++]=t}function G(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t}function X(e,t,r,n){var i=e.avail_in;return i>n&&(i=n),0===i?0:(e.avail_in-=i,s.arraySet(t,e.input,e.next_in,i,r),1===e.state.wrap?e.adler=o(e.adler,t,i,r):2===e.state.wrap&&(e.adler=A(e.adler,t,i,r)),e.next_in+=i,e.total_in+=i,i)}function O(e,t){var r,n,s=e.max_chain_length,i=e.strstart,o=e.prev_length,A=e.nice_match,a=e.strstart>e.w_size-x?e.strstart-(e.w_size-x):0,l=e.window,c=e.w_mask,u=e.prev,d=e.strstart+C,h=l[i+o-1],f=l[i+o];e.prev_length>=e.good_match&&(s>>=2),A>e.lookahead&&(A=e.lookahead);do{if(l[(r=t)+o]===f&&l[r+o-1]===h&&l[r]===l[i]&&l[++r]===l[i+1]){i+=2,r++;do{}while(l[++i]===l[++r]&&l[++i]===l[++r]&&l[++i]===l[++r]&&l[++i]===l[++r]&&l[++i]===l[++r]&&l[++i]===l[++r]&&l[++i]===l[++r]&&l[++i]===l[++r]&&i<d);if(n=C-(d-i),i=d-C,n>o){if(e.match_start=t,o=n,n>=A)break;h=l[i+o-1],f=l[i+o]}}}while((t=u[t&c])>a&&0!==--s);return o<=e.lookahead?o:e.lookahead}function z(e){var t,r,n,i,o,A=e.w_size;do{if(i=e.window_size-e.lookahead-e.strstart,e.strstart>=A+(A-x)){s.arraySet(e.window,e.window,A,A,0),e.match_start-=A,e.strstart-=A,e.block_start-=A,t=r=e.hash_size;do{n=e.head[--t],e.head[t]=n>=A?n-A:0}while(--r);t=r=A;do{n=e.prev[--t],e.prev[t]=n>=A?n-A:0}while(--r);i+=A}if(0===e.strm.avail_in)break;if(r=X(e.strm,e.window,e.strstart+e.lookahead,i),e.lookahead+=r,e.lookahead+e.insert>=E)for(o=e.strstart-e.insert,e.ins_h=e.window[o],e.ins_h=(e.ins_h<<e.hash_shift^e.window[o+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[o+E-1])&e.hash_mask,e.prev[o&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=o,o++,e.insert--,!(e.lookahead+e.insert<E)););}while(e.lookahead<x&&0!==e.strm.avail_in)}function Y(e,t){for(var r,n;;){if(e.lookahead<x){if(z(e),e.lookahead<x&&t===l)return F;if(0===e.lookahead)break}if(r=0,e.lookahead>=E&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+E-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==r&&e.strstart-r<=e.w_size-x&&(e.match_length=O(e,r)),e.match_length>=E)if(n=i._tr_tally(e,e.strstart-e.match_start,e.match_length-E),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=E){e.match_length--;do{e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+E-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!==--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else n=i._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(W(e,!1),0===e.strm.avail_out))return F}return e.insert=e.strstart<E-1?e.strstart:E-1,t===c?(W(e,!0),0===e.strm.avail_out?M:S):e.last_lit&&(W(e,!1),0===e.strm.avail_out)?F:L}function H(e,t){for(var r,n,s;;){if(e.lookahead<x){if(z(e),e.lookahead<x&&t===l)return F;if(0===e.lookahead)break}if(r=0,e.lookahead>=E&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+E-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=E-1,0!==r&&e.prev_length<e.max_lazy_match&&e.strstart-r<=e.w_size-x&&(e.match_length=O(e,r),e.match_length<=5&&(1===e.strategy||e.match_length===E&&e.strstart-e.match_start>4096)&&(e.match_length=E-1)),e.prev_length>=E&&e.match_length<=e.prev_length){s=e.strstart+e.lookahead-E,n=i._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-E),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=s&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+E-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!==--e.prev_length);if(e.match_available=0,e.match_length=E-1,e.strstart++,n&&(W(e,!1),0===e.strm.avail_out))return F}else if(e.match_available){if((n=i._tr_tally(e,0,e.window[e.strstart-1]))&&W(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return F}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=i._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<E-1?e.strstart:E-1,t===c?(W(e,!0),0===e.strm.avail_out?M:S):e.last_lit&&(W(e,!1),0===e.strm.avail_out)?F:L}function U(e,t,r,n,s){this.good_length=e,this.max_lazy=t,this.nice_length=r,this.max_chain=n,this.func=s}function V(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=p,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new s.Buf16(2*y),this.dyn_dtree=new s.Buf16(2*(2*v+1)),this.bl_tree=new s.Buf16(2*(2*b+1)),R(this.dyn_ltree),R(this.dyn_dtree),R(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new s.Buf16(B+1),this.heap=new s.Buf16(2*w+1),R(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new s.Buf16(2*w+1),R(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function q(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=g,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?I:Q,e.adler=2===t.wrap?0:1,t.last_flush=l,i._tr_init(t),u):N(e,d)}function Z(e){var t,r=q(e);return r===u&&((t=e.state).window_size=2*t.w_size,R(t.head),t.max_lazy_match=n[t.level].max_lazy,t.good_match=n[t.level].good_length,t.nice_match=n[t.level].nice_length,t.max_chain_length=n[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=E-1,t.match_available=0,t.ins_h=0),r}function K(e,t,r,n,i,o){if(!e)return d;var A=1;if(t===h&&(t=6),n<0?(A=0,n=-n):n>15&&(A=2,n-=16),i<1||i>m||r!==p||n<8||n>15||t<0||t>9||o<0||o>f)return N(e,d);8===n&&(n=9);var a=new V;return e.state=a,a.strm=e,a.wrap=A,a.gzhead=null,a.w_bits=n,a.w_size=1<<a.w_bits,a.w_mask=a.w_size-1,a.hash_bits=i+7,a.hash_size=1<<a.hash_bits,a.hash_mask=a.hash_size-1,a.hash_shift=~~((a.hash_bits+E-1)/E),a.window=new s.Buf8(2*a.w_size),a.head=new s.Buf16(a.hash_size),a.prev=new s.Buf16(a.w_size),a.lit_bufsize=1<<i+6,a.pending_buf_size=4*a.lit_bufsize,a.pending_buf=new s.Buf8(a.pending_buf_size),a.d_buf=1*a.lit_bufsize,a.l_buf=3*a.lit_bufsize,a.level=t,a.strategy=o,a.method=r,Z(e)}n=[new U(0,0,0,0,(function(e,t){var r=65535;for(r>e.pending_buf_size-5&&(r=e.pending_buf_size-5);;){if(e.lookahead<=1){if(z(e),0===e.lookahead&&t===l)return F;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var n=e.block_start+r;if((0===e.strstart||e.strstart>=n)&&(e.lookahead=e.strstart-n,e.strstart=n,W(e,!1),0===e.strm.avail_out))return F;if(e.strstart-e.block_start>=e.w_size-x&&(W(e,!1),0===e.strm.avail_out))return F}return e.insert=0,t===c?(W(e,!0),0===e.strm.avail_out?M:S):(e.strstart>e.block_start&&(W(e,!1),e.strm.avail_out),F)})),new U(4,4,8,4,Y),new U(4,5,16,8,Y),new U(4,6,32,32,Y),new U(4,4,16,16,H),new U(8,16,32,32,H),new U(8,16,128,128,H),new U(8,32,128,256,H),new U(32,128,258,1024,H),new U(32,258,258,4096,H)],t.deflateInit=function(e,t){return K(e,t,p,15,8,0)},t.deflateInit2=K,t.deflateReset=Z,t.deflateResetKeep=q,t.deflateSetHeader=function(e,t){return e&&e.state?2!==e.state.wrap?d:(e.state.gzhead=t,u):d},t.deflate=function(e,t){var r,s,o,a;if(!e||!e.state||t>5||t<0)return e?N(e,d):d;if(s=e.state,!e.output||!e.input&&0!==e.avail_in||s.status===P&&t!==c)return N(e,0===e.avail_out?-5:d);if(s.strm=e,r=s.last_flush,s.last_flush=t,s.status===I)if(2===s.wrap)e.adler=0,j(s,31),j(s,139),j(s,8),s.gzhead?(j(s,(s.gzhead.text?1:0)+(s.gzhead.hcrc?2:0)+(s.gzhead.extra?4:0)+(s.gzhead.name?8:0)+(s.gzhead.comment?16:0)),j(s,255&s.gzhead.time),j(s,s.gzhead.time>>8&255),j(s,s.gzhead.time>>16&255),j(s,s.gzhead.time>>24&255),j(s,9===s.level?2:s.strategy>=2||s.level<2?4:0),j(s,255&s.gzhead.os),s.gzhead.extra&&s.gzhead.extra.length&&(j(s,255&s.gzhead.extra.length),j(s,s.gzhead.extra.length>>8&255)),s.gzhead.hcrc&&(e.adler=A(e.adler,s.pending_buf,s.pending,0)),s.gzindex=0,s.status=69):(j(s,0),j(s,0),j(s,0),j(s,0),j(s,0),j(s,9===s.level?2:s.strategy>=2||s.level<2?4:0),j(s,3),s.status=Q);else{var h=p+(s.w_bits-8<<4)<<8;h|=(s.strategy>=2||s.level<2?0:s.level<6?1:6===s.level?2:3)<<6,0!==s.strstart&&(h|=32),h+=31-h%31,s.status=Q,G(s,h),0!==s.strstart&&(G(s,e.adler>>>16),G(s,65535&e.adler)),e.adler=1}if(69===s.status)if(s.gzhead.extra){for(o=s.pending;s.gzindex<(65535&s.gzhead.extra.length)&&(s.pending!==s.pending_buf_size||(s.gzhead.hcrc&&s.pending>o&&(e.adler=A(e.adler,s.pending_buf,s.pending-o,o)),T(e),o=s.pending,s.pending!==s.pending_buf_size));)j(s,255&s.gzhead.extra[s.gzindex]),s.gzindex++;s.gzhead.hcrc&&s.pending>o&&(e.adler=A(e.adler,s.pending_buf,s.pending-o,o)),s.gzindex===s.gzhead.extra.length&&(s.gzindex=0,s.status=73)}else s.status=73;if(73===s.status)if(s.gzhead.name){o=s.pending;do{if(s.pending===s.pending_buf_size&&(s.gzhead.hcrc&&s.pending>o&&(e.adler=A(e.adler,s.pending_buf,s.pending-o,o)),T(e),o=s.pending,s.pending===s.pending_buf_size)){a=1;break}a=s.gzindex<s.gzhead.name.length?255&s.gzhead.name.charCodeAt(s.gzindex++):0,j(s,a)}while(0!==a);s.gzhead.hcrc&&s.pending>o&&(e.adler=A(e.adler,s.pending_buf,s.pending-o,o)),0===a&&(s.gzindex=0,s.status=91)}else s.status=91;if(91===s.status)if(s.gzhead.comment){o=s.pending;do{if(s.pending===s.pending_buf_size&&(s.gzhead.hcrc&&s.pending>o&&(e.adler=A(e.adler,s.pending_buf,s.pending-o,o)),T(e),o=s.pending,s.pending===s.pending_buf_size)){a=1;break}a=s.gzindex<s.gzhead.comment.length?255&s.gzhead.comment.charCodeAt(s.gzindex++):0,j(s,a)}while(0!==a);s.gzhead.hcrc&&s.pending>o&&(e.adler=A(e.adler,s.pending_buf,s.pending-o,o)),0===a&&(s.status=D)}else s.status=D;if(s.status===D&&(s.gzhead.hcrc?(s.pending+2>s.pending_buf_size&&T(e),s.pending+2<=s.pending_buf_size&&(j(s,255&e.adler),j(s,e.adler>>8&255),e.adler=0,s.status=Q)):s.status=Q),0!==s.pending){if(T(e),0===e.avail_out)return s.last_flush=-1,u}else if(0===e.avail_in&&k(t)<=k(r)&&t!==c)return N(e,-5);if(s.status===P&&0!==e.avail_in)return N(e,-5);if(0!==e.avail_in||0!==s.lookahead||t!==l&&s.status!==P){var f=2===s.strategy?function(e,t){for(var r;;){if(0===e.lookahead&&(z(e),0===e.lookahead)){if(t===l)return F;break}if(e.match_length=0,r=i._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,r&&(W(e,!1),0===e.strm.avail_out))return F}return e.insert=0,t===c?(W(e,!0),0===e.strm.avail_out?M:S):e.last_lit&&(W(e,!1),0===e.strm.avail_out)?F:L}(s,t):3===s.strategy?function(e,t){for(var r,n,s,o,A=e.window;;){if(e.lookahead<=C){if(z(e),e.lookahead<=C&&t===l)return F;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=E&&e.strstart>0&&(n=A[s=e.strstart-1])===A[++s]&&n===A[++s]&&n===A[++s]){o=e.strstart+C;do{}while(n===A[++s]&&n===A[++s]&&n===A[++s]&&n===A[++s]&&n===A[++s]&&n===A[++s]&&n===A[++s]&&n===A[++s]&&s<o);e.match_length=C-(o-s),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=E?(r=i._tr_tally(e,1,e.match_length-E),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(r=i._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),r&&(W(e,!1),0===e.strm.avail_out))return F}return e.insert=0,t===c?(W(e,!0),0===e.strm.avail_out?M:S):e.last_lit&&(W(e,!1),0===e.strm.avail_out)?F:L}(s,t):n[s.level].func(s,t);if(f!==M&&f!==S||(s.status=P),f===F||f===M)return 0===e.avail_out&&(s.last_flush=-1),u;if(f===L&&(1===t?i._tr_align(s):5!==t&&(i._tr_stored_block(s,0,0,!1),3===t&&(R(s.head),0===s.lookahead&&(s.strstart=0,s.block_start=0,s.insert=0))),T(e),0===e.avail_out))return s.last_flush=-1,u}return t!==c?u:s.wrap<=0?1:(2===s.wrap?(j(s,255&e.adler),j(s,e.adler>>8&255),j(s,e.adler>>16&255),j(s,e.adler>>24&255),j(s,255&e.total_in),j(s,e.total_in>>8&255),j(s,e.total_in>>16&255),j(s,e.total_in>>24&255)):(G(s,e.adler>>>16),G(s,65535&e.adler)),T(e),s.wrap>0&&(s.wrap=-s.wrap),0!==s.pending?u:1)},t.deflateEnd=function(e){var t;return e&&e.state?(t=e.state.status)!==I&&69!==t&&73!==t&&91!==t&&t!==D&&t!==Q&&t!==P?N(e,d):(e.state=null,t===Q?N(e,-3):u):d},t.deflateSetDictionary=function(e,t){var r,n,i,A,a,l,c,h,f=t.length;if(!e||!e.state)return d;if(2===(A=(r=e.state).wrap)||1===A&&r.status!==I||r.lookahead)return d;for(1===A&&(e.adler=o(e.adler,t,f,0)),r.wrap=0,f>=r.w_size&&(0===A&&(R(r.head),r.strstart=0,r.block_start=0,r.insert=0),h=new s.Buf8(r.w_size),s.arraySet(h,t,f-r.w_size,r.w_size,0),t=h,f=r.w_size),a=e.avail_in,l=e.next_in,c=e.input,e.avail_in=f,e.next_in=0,e.input=t,z(r);r.lookahead>=E;){n=r.strstart,i=r.lookahead-(E-1);do{r.ins_h=(r.ins_h<<r.hash_shift^r.window[n+E-1])&r.hash_mask,r.prev[n&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=n,n++}while(--i);r.strstart=n,r.lookahead=E-1,z(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=E-1,r.match_available=0,e.next_in=l,e.input=c,e.avail_in=a,r.wrap=A,u},t.deflateInfo="pako deflate (from Nodeca project)"},4251:e=>{"use strict";e.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},9946:e=>{"use strict";e.exports=function(e,t){var r,n,s,i,o,A,a,l,c,u,d,h,f,g,p,m,w,v,b,y,B,E,C,x,I;r=e.state,n=e.next_in,x=e.input,s=n+(e.avail_in-5),i=e.next_out,I=e.output,o=i-(t-e.avail_out),A=i+(e.avail_out-257),a=r.dmax,l=r.wsize,c=r.whave,u=r.wnext,d=r.window,h=r.hold,f=r.bits,g=r.lencode,p=r.distcode,m=(1<<r.lenbits)-1,w=(1<<r.distbits)-1;e:do{f<15&&(h+=x[n++]<<f,f+=8,h+=x[n++]<<f,f+=8),v=g[h&m];t:for(;;){if(h>>>=b=v>>>24,f-=b,0===(b=v>>>16&255))I[i++]=65535&v;else{if(!(16&b)){if(0===(64&b)){v=g[(65535&v)+(h&(1<<b)-1)];continue t}if(32&b){r.mode=12;break e}e.msg="invalid literal/length code",r.mode=30;break e}y=65535&v,(b&=15)&&(f<b&&(h+=x[n++]<<f,f+=8),y+=h&(1<<b)-1,h>>>=b,f-=b),f<15&&(h+=x[n++]<<f,f+=8,h+=x[n++]<<f,f+=8),v=p[h&w];r:for(;;){if(h>>>=b=v>>>24,f-=b,!(16&(b=v>>>16&255))){if(0===(64&b)){v=p[(65535&v)+(h&(1<<b)-1)];continue r}e.msg="invalid distance code",r.mode=30;break e}if(B=65535&v,f<(b&=15)&&(h+=x[n++]<<f,(f+=8)<b&&(h+=x[n++]<<f,f+=8)),(B+=h&(1<<b)-1)>a){e.msg="invalid distance too far back",r.mode=30;break e}if(h>>>=b,f-=b,B>(b=i-o)){if((b=B-b)>c&&r.sane){e.msg="invalid distance too far back",r.mode=30;break e}if(E=0,C=d,0===u){if(E+=l-b,b<y){y-=b;do{I[i++]=d[E++]}while(--b);E=i-B,C=I}}else if(u<b){if(E+=l+u-b,(b-=u)<y){y-=b;do{I[i++]=d[E++]}while(--b);if(E=0,u<y){y-=b=u;do{I[i++]=d[E++]}while(--b);E=i-B,C=I}}}else if(E+=u-b,b<y){y-=b;do{I[i++]=d[E++]}while(--b);E=i-B,C=I}for(;y>2;)I[i++]=C[E++],I[i++]=C[E++],I[i++]=C[E++],y-=3;y&&(I[i++]=C[E++],y>1&&(I[i++]=C[E++]))}else{E=i-B;do{I[i++]=I[E++],I[i++]=I[E++],I[i++]=I[E++],y-=3}while(y>2);y&&(I[i++]=I[E++],y>1&&(I[i++]=I[E++]))}break}}break}}while(n<s&&i<A);n-=y=f>>3,h&=(1<<(f-=y<<3))-1,e.next_in=n,e.next_out=i,e.avail_in=n<s?s-n+5:5-(n-s),e.avail_out=i<A?A-i+257:257-(i-A),r.hold=h,r.bits=f}},5960:(e,t,r)=>{"use strict";var n=r(5886),s=r(8374),i=r(5592),o=r(9946),A=r(5415),a=1,l=2,c=0,u=-2,d=1,h=12,f=30,g=852,p=592;function m(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function w(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new n.Buf16(320),this.work=new n.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function v(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=d,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new n.Buf32(g),t.distcode=t.distdyn=new n.Buf32(p),t.sane=1,t.back=-1,c):u}function b(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,v(e)):u}function y(e,t){var r,n;return e&&e.state?(n=e.state,t<0?(r=0,t=-t):(r=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?u:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=r,n.wbits=t,b(e))):u}function B(e,t){var r,n;return e?(n=new w,e.state=n,n.window=null,(r=y(e,t))!==c&&(e.state=null),r):u}var E,C,x=!0;function I(e){if(x){var t;for(E=new n.Buf32(512),C=new n.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(A(a,e.lens,0,288,E,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;A(l,e.lens,0,32,C,0,e.work,{bits:5}),x=!1}e.lencode=E,e.lenbits=9,e.distcode=C,e.distbits=5}function D(e,t,r,s){var i,o=e.state;return null===o.window&&(o.wsize=1<<o.wbits,o.wnext=0,o.whave=0,o.window=new n.Buf8(o.wsize)),s>=o.wsize?(n.arraySet(o.window,t,r-o.wsize,o.wsize,0),o.wnext=0,o.whave=o.wsize):((i=o.wsize-o.wnext)>s&&(i=s),n.arraySet(o.window,t,r-s,i,o.wnext),(s-=i)?(n.arraySet(o.window,t,r-s,s,0),o.wnext=s,o.whave=o.wsize):(o.wnext+=i,o.wnext===o.wsize&&(o.wnext=0),o.whave<o.wsize&&(o.whave+=i))),0}t.inflateReset=b,t.inflateReset2=y,t.inflateResetKeep=v,t.inflateInit=function(e){return B(e,15)},t.inflateInit2=B,t.inflate=function(e,t){var r,g,p,w,v,b,y,B,E,C,x,Q,P,F,L,M,S,N,k,R,T,W,j,G,X=0,O=new n.Buf8(4),z=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return u;(r=e.state).mode===h&&(r.mode=13),v=e.next_out,p=e.output,y=e.avail_out,w=e.next_in,g=e.input,b=e.avail_in,B=r.hold,E=r.bits,C=b,x=y,W=c;e:for(;;)switch(r.mode){case d:if(0===r.wrap){r.mode=13;break}for(;E<16;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}if(2&r.wrap&&35615===B){r.check=0,O[0]=255&B,O[1]=B>>>8&255,r.check=i(r.check,O,2,0),B=0,E=0,r.mode=2;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&B)<<8)+(B>>8))%31){e.msg="incorrect header check",r.mode=f;break}if(8!==(15&B)){e.msg="unknown compression method",r.mode=f;break}if(E-=4,T=8+(15&(B>>>=4)),0===r.wbits)r.wbits=T;else if(T>r.wbits){e.msg="invalid window size",r.mode=f;break}r.dmax=1<<T,e.adler=r.check=1,r.mode=512&B?10:h,B=0,E=0;break;case 2:for(;E<16;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}if(r.flags=B,8!==(255&r.flags)){e.msg="unknown compression method",r.mode=f;break}if(57344&r.flags){e.msg="unknown header flags set",r.mode=f;break}r.head&&(r.head.text=B>>8&1),512&r.flags&&(O[0]=255&B,O[1]=B>>>8&255,r.check=i(r.check,O,2,0)),B=0,E=0,r.mode=3;case 3:for(;E<32;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}r.head&&(r.head.time=B),512&r.flags&&(O[0]=255&B,O[1]=B>>>8&255,O[2]=B>>>16&255,O[3]=B>>>24&255,r.check=i(r.check,O,4,0)),B=0,E=0,r.mode=4;case 4:for(;E<16;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}r.head&&(r.head.xflags=255&B,r.head.os=B>>8),512&r.flags&&(O[0]=255&B,O[1]=B>>>8&255,r.check=i(r.check,O,2,0)),B=0,E=0,r.mode=5;case 5:if(1024&r.flags){for(;E<16;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}r.length=B,r.head&&(r.head.extra_len=B),512&r.flags&&(O[0]=255&B,O[1]=B>>>8&255,r.check=i(r.check,O,2,0)),B=0,E=0}else r.head&&(r.head.extra=null);r.mode=6;case 6:if(1024&r.flags&&((Q=r.length)>b&&(Q=b),Q&&(r.head&&(T=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Array(r.head.extra_len)),n.arraySet(r.head.extra,g,w,Q,T)),512&r.flags&&(r.check=i(r.check,g,Q,w)),b-=Q,w+=Q,r.length-=Q),r.length))break e;r.length=0,r.mode=7;case 7:if(2048&r.flags){if(0===b)break e;Q=0;do{T=g[w+Q++],r.head&&T&&r.length<65536&&(r.head.name+=String.fromCharCode(T))}while(T&&Q<b);if(512&r.flags&&(r.check=i(r.check,g,Q,w)),b-=Q,w+=Q,T)break e}else r.head&&(r.head.name=null);r.length=0,r.mode=8;case 8:if(4096&r.flags){if(0===b)break e;Q=0;do{T=g[w+Q++],r.head&&T&&r.length<65536&&(r.head.comment+=String.fromCharCode(T))}while(T&&Q<b);if(512&r.flags&&(r.check=i(r.check,g,Q,w)),b-=Q,w+=Q,T)break e}else r.head&&(r.head.comment=null);r.mode=9;case 9:if(512&r.flags){for(;E<16;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}if(B!==(65535&r.check)){e.msg="header crc mismatch",r.mode=f;break}B=0,E=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),e.adler=r.check=0,r.mode=h;break;case 10:for(;E<32;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}e.adler=r.check=m(B),B=0,E=0,r.mode=11;case 11:if(0===r.havedict)return e.next_out=v,e.avail_out=y,e.next_in=w,e.avail_in=b,r.hold=B,r.bits=E,2;e.adler=r.check=1,r.mode=h;case h:if(5===t||6===t)break e;case 13:if(r.last){B>>>=7&E,E-=7&E,r.mode=27;break}for(;E<3;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}switch(r.last=1&B,E-=1,3&(B>>>=1)){case 0:r.mode=14;break;case 1:if(I(r),r.mode=20,6===t){B>>>=2,E-=2;break e}break;case 2:r.mode=17;break;case 3:e.msg="invalid block type",r.mode=f}B>>>=2,E-=2;break;case 14:for(B>>>=7&E,E-=7&E;E<32;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}if((65535&B)!==(B>>>16^65535)){e.msg="invalid stored block lengths",r.mode=f;break}if(r.length=65535&B,B=0,E=0,r.mode=15,6===t)break e;case 15:r.mode=16;case 16:if(Q=r.length){if(Q>b&&(Q=b),Q>y&&(Q=y),0===Q)break e;n.arraySet(p,g,w,Q,v),b-=Q,w+=Q,y-=Q,v+=Q,r.length-=Q;break}r.mode=h;break;case 17:for(;E<14;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}if(r.nlen=257+(31&B),B>>>=5,E-=5,r.ndist=1+(31&B),B>>>=5,E-=5,r.ncode=4+(15&B),B>>>=4,E-=4,r.nlen>286||r.ndist>30){e.msg="too many length or distance symbols",r.mode=f;break}r.have=0,r.mode=18;case 18:for(;r.have<r.ncode;){for(;E<3;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}r.lens[z[r.have++]]=7&B,B>>>=3,E-=3}for(;r.have<19;)r.lens[z[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,j={bits:r.lenbits},W=A(0,r.lens,0,19,r.lencode,0,r.work,j),r.lenbits=j.bits,W){e.msg="invalid code lengths set",r.mode=f;break}r.have=0,r.mode=19;case 19:for(;r.have<r.nlen+r.ndist;){for(;M=(X=r.lencode[B&(1<<r.lenbits)-1])>>>16&255,S=65535&X,!((L=X>>>24)<=E);){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}if(S<16)B>>>=L,E-=L,r.lens[r.have++]=S;else{if(16===S){for(G=L+2;E<G;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}if(B>>>=L,E-=L,0===r.have){e.msg="invalid bit length repeat",r.mode=f;break}T=r.lens[r.have-1],Q=3+(3&B),B>>>=2,E-=2}else if(17===S){for(G=L+3;E<G;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}E-=L,T=0,Q=3+(7&(B>>>=L)),B>>>=3,E-=3}else{for(G=L+7;E<G;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}E-=L,T=0,Q=11+(127&(B>>>=L)),B>>>=7,E-=7}if(r.have+Q>r.nlen+r.ndist){e.msg="invalid bit length repeat",r.mode=f;break}for(;Q--;)r.lens[r.have++]=T}}if(r.mode===f)break;if(0===r.lens[256]){e.msg="invalid code -- missing end-of-block",r.mode=f;break}if(r.lenbits=9,j={bits:r.lenbits},W=A(a,r.lens,0,r.nlen,r.lencode,0,r.work,j),r.lenbits=j.bits,W){e.msg="invalid literal/lengths set",r.mode=f;break}if(r.distbits=6,r.distcode=r.distdyn,j={bits:r.distbits},W=A(l,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,j),r.distbits=j.bits,W){e.msg="invalid distances set",r.mode=f;break}if(r.mode=20,6===t)break e;case 20:r.mode=21;case 21:if(b>=6&&y>=258){e.next_out=v,e.avail_out=y,e.next_in=w,e.avail_in=b,r.hold=B,r.bits=E,o(e,x),v=e.next_out,p=e.output,y=e.avail_out,w=e.next_in,g=e.input,b=e.avail_in,B=r.hold,E=r.bits,r.mode===h&&(r.back=-1);break}for(r.back=0;M=(X=r.lencode[B&(1<<r.lenbits)-1])>>>16&255,S=65535&X,!((L=X>>>24)<=E);){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}if(M&&0===(240&M)){for(N=L,k=M,R=S;M=(X=r.lencode[R+((B&(1<<N+k)-1)>>N)])>>>16&255,S=65535&X,!(N+(L=X>>>24)<=E);){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}B>>>=N,E-=N,r.back+=N}if(B>>>=L,E-=L,r.back+=L,r.length=S,0===M){r.mode=26;break}if(32&M){r.back=-1,r.mode=h;break}if(64&M){e.msg="invalid literal/length code",r.mode=f;break}r.extra=15&M,r.mode=22;case 22:if(r.extra){for(G=r.extra;E<G;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}r.length+=B&(1<<r.extra)-1,B>>>=r.extra,E-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=23;case 23:for(;M=(X=r.distcode[B&(1<<r.distbits)-1])>>>16&255,S=65535&X,!((L=X>>>24)<=E);){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}if(0===(240&M)){for(N=L,k=M,R=S;M=(X=r.distcode[R+((B&(1<<N+k)-1)>>N)])>>>16&255,S=65535&X,!(N+(L=X>>>24)<=E);){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}B>>>=N,E-=N,r.back+=N}if(B>>>=L,E-=L,r.back+=L,64&M){e.msg="invalid distance code",r.mode=f;break}r.offset=S,r.extra=15&M,r.mode=24;case 24:if(r.extra){for(G=r.extra;E<G;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}r.offset+=B&(1<<r.extra)-1,B>>>=r.extra,E-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){e.msg="invalid distance too far back",r.mode=f;break}r.mode=25;case 25:if(0===y)break e;if(Q=x-y,r.offset>Q){if((Q=r.offset-Q)>r.whave&&r.sane){e.msg="invalid distance too far back",r.mode=f;break}Q>r.wnext?(Q-=r.wnext,P=r.wsize-Q):P=r.wnext-Q,Q>r.length&&(Q=r.length),F=r.window}else F=p,P=v-r.offset,Q=r.length;Q>y&&(Q=y),y-=Q,r.length-=Q;do{p[v++]=F[P++]}while(--Q);0===r.length&&(r.mode=21);break;case 26:if(0===y)break e;p[v++]=r.length,y--,r.mode=21;break;case 27:if(r.wrap){for(;E<32;){if(0===b)break e;b--,B|=g[w++]<<E,E+=8}if(x-=y,e.total_out+=x,r.total+=x,x&&(e.adler=r.check=r.flags?i(r.check,p,x,v-x):s(r.check,p,x,v-x)),x=y,(r.flags?B:m(B))!==r.check){e.msg="incorrect data check",r.mode=f;break}B=0,E=0}r.mode=28;case 28:if(r.wrap&&r.flags){for(;E<32;){if(0===b)break e;b--,B+=g[w++]<<E,E+=8}if(B!==(4294967295&r.total)){e.msg="incorrect length check",r.mode=f;break}B=0,E=0}r.mode=29;case 29:W=1;break e;case f:W=-3;break e;case 31:return-4;default:return u}return e.next_out=v,e.avail_out=y,e.next_in=w,e.avail_in=b,r.hold=B,r.bits=E,(r.wsize||x!==e.avail_out&&r.mode<f&&(r.mode<27||4!==t))&&D(e,e.output,e.next_out,x-e.avail_out)?(r.mode=31,-4):(C-=e.avail_in,x-=e.avail_out,e.total_in+=C,e.total_out+=x,r.total+=x,r.wrap&&x&&(e.adler=r.check=r.flags?i(r.check,p,x,e.next_out-x):s(r.check,p,x,e.next_out-x)),e.data_type=r.bits+(r.last?64:0)+(r.mode===h?128:0)+(20===r.mode||15===r.mode?256:0),(0===C&&0===x||4===t)&&W===c&&(W=-5),W)},t.inflateEnd=function(e){if(!e||!e.state)return u;var t=e.state;return t.window&&(t.window=null),e.state=null,c},t.inflateGetHeader=function(e,t){var r;return e&&e.state?0===(2&(r=e.state).wrap)?u:(r.head=t,t.done=!1,c):u},t.inflateSetDictionary=function(e,t){var r,n=t.length;return e&&e.state?0!==(r=e.state).wrap&&11!==r.mode?u:11===r.mode&&s(1,t,n,0)!==r.check?-3:D(e,t,n,n)?(r.mode=31,-4):(r.havedict=1,c):u},t.inflateInfo="pako inflate (from Nodeca project)"},5415:(e,t,r)=>{"use strict";var n=r(5886),s=15,i=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],o=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],A=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],a=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];e.exports=function(e,t,r,l,c,u,d,h){var f,g,p,m,w,v,b,y,B,E=h.bits,C=0,x=0,I=0,D=0,Q=0,P=0,F=0,L=0,M=0,S=0,N=null,k=0,R=new n.Buf16(16),T=new n.Buf16(16),W=null,j=0;for(C=0;C<=s;C++)R[C]=0;for(x=0;x<l;x++)R[t[r+x]]++;for(Q=E,D=s;D>=1&&0===R[D];D--);if(Q>D&&(Q=D),0===D)return c[u++]=20971520,c[u++]=20971520,h.bits=1,0;for(I=1;I<D&&0===R[I];I++);for(Q<I&&(Q=I),L=1,C=1;C<=s;C++)if(L<<=1,(L-=R[C])<0)return-1;if(L>0&&(0===e||1!==D))return-1;for(T[1]=0,C=1;C<s;C++)T[C+1]=T[C]+R[C];for(x=0;x<l;x++)0!==t[r+x]&&(d[T[t[r+x]]++]=x);if(0===e?(N=W=d,v=19):1===e?(N=i,k-=257,W=o,j-=257,v=256):(N=A,W=a,v=-1),S=0,x=0,C=I,w=u,P=Q,F=0,p=-1,m=(M=1<<Q)-1,1===e&&M>852||2===e&&M>592)return 1;for(;;){b=C-F,d[x]<v?(y=0,B=d[x]):d[x]>v?(y=W[j+d[x]],B=N[k+d[x]]):(y=96,B=0),f=1<<C-F,I=g=1<<P;do{c[w+(S>>F)+(g-=f)]=b<<24|y<<16|B}while(0!==g);for(f=1<<C-1;S&f;)f>>=1;if(0!==f?(S&=f-1,S+=f):S=0,x++,0===--R[C]){if(C===D)break;C=t[r+d[x]]}if(C>Q&&(S&m)!==p){for(0===F&&(F=Q),w+=I,L=1<<(P=C-F);P+F<D&&!((L-=R[P+F])<=0);)P++,L<<=1;if(M+=1<<P,1===e&&M>852||2===e&&M>592)return 1;c[p=S&m]=Q<<24|P<<16|w-u}}return 0!==S&&(c[w+S]=C-F<<24|64<<16),h.bits=Q,0}},8135:e=>{"use strict";e.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},3422:(e,t,r)=>{"use strict";var n=r(5886),s=0,i=1;function o(e){for(var t=e.length;--t>=0;)e[t]=0}var A=0,a=29,l=256,c=l+1+a,u=30,d=19,h=2*c+1,f=15,g=16,p=7,m=256,w=16,v=17,b=18,y=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],B=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],E=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],C=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],x=new Array(2*(c+2));o(x);var I=new Array(2*u);o(I);var D=new Array(512);o(D);var Q=new Array(256);o(Q);var P=new Array(a);o(P);var F,L,M,S=new Array(u);function N(e,t,r,n,s){this.static_tree=e,this.extra_bits=t,this.extra_base=r,this.elems=n,this.max_length=s,this.has_stree=e&&e.length}function k(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function R(e){return e<256?D[e]:D[256+(e>>>7)]}function T(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255}function W(e,t,r){e.bi_valid>g-r?(e.bi_buf|=t<<e.bi_valid&65535,T(e,e.bi_buf),e.bi_buf=t>>g-e.bi_valid,e.bi_valid+=r-g):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=r)}function j(e,t,r){W(e,r[2*t],r[2*t+1])}function G(e,t){var r=0;do{r|=1&e,e>>>=1,r<<=1}while(--t>0);return r>>>1}function X(e,t,r){var n,s,i=new Array(f+1),o=0;for(n=1;n<=f;n++)i[n]=o=o+r[n-1]<<1;for(s=0;s<=t;s++){var A=e[2*s+1];0!==A&&(e[2*s]=G(i[A]++,A))}}function O(e){var t;for(t=0;t<c;t++)e.dyn_ltree[2*t]=0;for(t=0;t<u;t++)e.dyn_dtree[2*t]=0;for(t=0;t<d;t++)e.bl_tree[2*t]=0;e.dyn_ltree[2*m]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function z(e){e.bi_valid>8?T(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function Y(e,t,r,n){var s=2*t,i=2*r;return e[s]<e[i]||e[s]===e[i]&&n[t]<=n[r]}function H(e,t,r){for(var n=e.heap[r],s=r<<1;s<=e.heap_len&&(s<e.heap_len&&Y(t,e.heap[s+1],e.heap[s],e.depth)&&s++,!Y(t,n,e.heap[s],e.depth));)e.heap[r]=e.heap[s],r=s,s<<=1;e.heap[r]=n}function U(e,t,r){var n,s,i,o,A=0;if(0!==e.last_lit)do{n=e.pending_buf[e.d_buf+2*A]<<8|e.pending_buf[e.d_buf+2*A+1],s=e.pending_buf[e.l_buf+A],A++,0===n?j(e,s,t):(j(e,(i=Q[s])+l+1,t),0!==(o=y[i])&&W(e,s-=P[i],o),j(e,i=R(--n),r),0!==(o=B[i])&&W(e,n-=S[i],o))}while(A<e.last_lit);j(e,m,t)}function V(e,t){var r,n,s,i=t.dyn_tree,o=t.stat_desc.static_tree,A=t.stat_desc.has_stree,a=t.stat_desc.elems,l=-1;for(e.heap_len=0,e.heap_max=h,r=0;r<a;r++)0!==i[2*r]?(e.heap[++e.heap_len]=l=r,e.depth[r]=0):i[2*r+1]=0;for(;e.heap_len<2;)i[2*(s=e.heap[++e.heap_len]=l<2?++l:0)]=1,e.depth[s]=0,e.opt_len--,A&&(e.static_len-=o[2*s+1]);for(t.max_code=l,r=e.heap_len>>1;r>=1;r--)H(e,i,r);s=a;do{r=e.heap[1],e.heap[1]=e.heap[e.heap_len--],H(e,i,1),n=e.heap[1],e.heap[--e.heap_max]=r,e.heap[--e.heap_max]=n,i[2*s]=i[2*r]+i[2*n],e.depth[s]=(e.depth[r]>=e.depth[n]?e.depth[r]:e.depth[n])+1,i[2*r+1]=i[2*n+1]=s,e.heap[1]=s++,H(e,i,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],function(e,t){var r,n,s,i,o,A,a=t.dyn_tree,l=t.max_code,c=t.stat_desc.static_tree,u=t.stat_desc.has_stree,d=t.stat_desc.extra_bits,g=t.stat_desc.extra_base,p=t.stat_desc.max_length,m=0;for(i=0;i<=f;i++)e.bl_count[i]=0;for(a[2*e.heap[e.heap_max]+1]=0,r=e.heap_max+1;r<h;r++)(i=a[2*a[2*(n=e.heap[r])+1]+1]+1)>p&&(i=p,m++),a[2*n+1]=i,n>l||(e.bl_count[i]++,o=0,n>=g&&(o=d[n-g]),A=a[2*n],e.opt_len+=A*(i+o),u&&(e.static_len+=A*(c[2*n+1]+o)));if(0!==m){do{for(i=p-1;0===e.bl_count[i];)i--;e.bl_count[i]--,e.bl_count[i+1]+=2,e.bl_count[p]--,m-=2}while(m>0);for(i=p;0!==i;i--)for(n=e.bl_count[i];0!==n;)(s=e.heap[--r])>l||(a[2*s+1]!==i&&(e.opt_len+=(i-a[2*s+1])*a[2*s],a[2*s+1]=i),n--)}}(e,t),X(i,l,e.bl_count)}function q(e,t,r){var n,s,i=-1,o=t[1],A=0,a=7,l=4;for(0===o&&(a=138,l=3),t[2*(r+1)+1]=65535,n=0;n<=r;n++)s=o,o=t[2*(n+1)+1],++A<a&&s===o||(A<l?e.bl_tree[2*s]+=A:0!==s?(s!==i&&e.bl_tree[2*s]++,e.bl_tree[2*w]++):A<=10?e.bl_tree[2*v]++:e.bl_tree[2*b]++,A=0,i=s,0===o?(a=138,l=3):s===o?(a=6,l=3):(a=7,l=4))}function Z(e,t,r){var n,s,i=-1,o=t[1],A=0,a=7,l=4;for(0===o&&(a=138,l=3),n=0;n<=r;n++)if(s=o,o=t[2*(n+1)+1],!(++A<a&&s===o)){if(A<l)do{j(e,s,e.bl_tree)}while(0!==--A);else 0!==s?(s!==i&&(j(e,s,e.bl_tree),A--),j(e,w,e.bl_tree),W(e,A-3,2)):A<=10?(j(e,v,e.bl_tree),W(e,A-3,3)):(j(e,b,e.bl_tree),W(e,A-11,7));A=0,i=s,0===o?(a=138,l=3):s===o?(a=6,l=3):(a=7,l=4)}}o(S);var K=!1;function J(e,t,r,s){W(e,(A<<1)+(s?1:0),3),function(e,t,r,s){z(e),s&&(T(e,r),T(e,~r)),n.arraySet(e.pending_buf,e.window,t,r,e.pending),e.pending+=r}(e,t,r,!0)}t._tr_init=function(e){K||(!function(){var e,t,r,n,s,i=new Array(f+1);for(r=0,n=0;n<a-1;n++)for(P[n]=r,e=0;e<1<<y[n];e++)Q[r++]=n;for(Q[r-1]=n,s=0,n=0;n<16;n++)for(S[n]=s,e=0;e<1<<B[n];e++)D[s++]=n;for(s>>=7;n<u;n++)for(S[n]=s<<7,e=0;e<1<<B[n]-7;e++)D[256+s++]=n;for(t=0;t<=f;t++)i[t]=0;for(e=0;e<=143;)x[2*e+1]=8,e++,i[8]++;for(;e<=255;)x[2*e+1]=9,e++,i[9]++;for(;e<=279;)x[2*e+1]=7,e++,i[7]++;for(;e<=287;)x[2*e+1]=8,e++,i[8]++;for(X(x,c+1,i),e=0;e<u;e++)I[2*e+1]=5,I[2*e]=G(e,5);F=new N(x,y,l+1,c,f),L=new N(I,B,0,u,f),M=new N(new Array(0),E,0,d,p)}(),K=!0),e.l_desc=new k(e.dyn_ltree,F),e.d_desc=new k(e.dyn_dtree,L),e.bl_desc=new k(e.bl_tree,M),e.bi_buf=0,e.bi_valid=0,O(e)},t._tr_stored_block=J,t._tr_flush_block=function(e,t,r,n){var o,A,a=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=function(e){var t,r=4093624447;for(t=0;t<=31;t++,r>>>=1)if(1&r&&0!==e.dyn_ltree[2*t])return s;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return i;for(t=32;t<l;t++)if(0!==e.dyn_ltree[2*t])return i;return s}(e)),V(e,e.l_desc),V(e,e.d_desc),a=function(e){var t;for(q(e,e.dyn_ltree,e.l_desc.max_code),q(e,e.dyn_dtree,e.d_desc.max_code),V(e,e.bl_desc),t=d-1;t>=3&&0===e.bl_tree[2*C[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),o=e.opt_len+3+7>>>3,(A=e.static_len+3+7>>>3)<=o&&(o=A)):o=A=r+5,r+4<=o&&-1!==t?J(e,t,r,n):4===e.strategy||A===o?(W(e,2+(n?1:0),3),U(e,x,I)):(W(e,4+(n?1:0),3),function(e,t,r,n){var s;for(W(e,t-257,5),W(e,r-1,5),W(e,n-4,4),s=0;s<n;s++)W(e,e.bl_tree[2*C[s]+1],3);Z(e,e.dyn_ltree,t-1),Z(e,e.dyn_dtree,r-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,a+1),U(e,e.dyn_ltree,e.dyn_dtree)),O(e),n&&z(e)},t._tr_tally=function(e,t,r){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&r,e.last_lit++,0===t?e.dyn_ltree[2*r]++:(e.matches++,t--,e.dyn_ltree[2*(Q[r]+l+1)]++,e.dyn_dtree[2*R(t)]++),e.last_lit===e.lit_bufsize-1},t._tr_align=function(e){W(e,2,3),j(e,m,x),function(e){16===e.bi_valid?(T(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},301:e=>{"use strict";e.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},2730:(e,t,r)=>{"use strict";var n=r(5043),s=r(8853);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,A={};function a(e,t){l(e,t),l(e+"Capture",t)}function l(e,t){for(A[e]=t,e=0;e<t.length;e++)o.add(t[e])}var c=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),u=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,h={},f={};function g(e,t,r,n,s,i,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=n,this.attributeNamespace=s,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=i,this.removeEmptyString=o}var p={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){p[e]=new g(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];p[t]=new g(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){p[e]=new g(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){p[e]=new g(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){p[e]=new g(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){p[e]=new g(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){p[e]=new g(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){p[e]=new g(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){p[e]=new g(e,5,!1,e.toLowerCase(),null,!1,!1)}));var m=/[\-:]([a-z])/g;function w(e){return e[1].toUpperCase()}function v(e,t,r,n){var s=p.hasOwnProperty(t)?p[t]:null;(null!==s?0!==s.type:n||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,r,n){if(null===t||"undefined"===typeof t||function(e,t,r,n){if(null!==r&&0===r.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!n&&(null!==r?!r.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,r,n))return!0;if(n)return!1;if(null!==r)switch(r.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,r,s,n)&&(r=null),n||null===s?function(e){return!!u.call(f,e)||!u.call(h,e)&&(d.test(e)?f[e]=!0:(h[e]=!0,!1))}(t)&&(null===r?e.removeAttribute(t):e.setAttribute(t,""+r)):s.mustUseProperty?e[s.propertyName]=null===r?3!==s.type&&"":r:(t=s.attributeName,n=s.attributeNamespace,null===r?e.removeAttribute(t):(r=3===(s=s.type)||4===s&&!0===r?"":""+r,n?e.setAttributeNS(n,t,r):e.setAttribute(t,r))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(m,w);p[t]=new g(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(m,w);p[t]=new g(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(m,w);p[t]=new g(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){p[e]=new g(e,1,!1,e.toLowerCase(),null,!1,!1)})),p.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){p[e]=new g(e,1,!1,e.toLowerCase(),null,!0,!0)}));var b=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,y=Symbol.for("react.element"),B=Symbol.for("react.portal"),E=Symbol.for("react.fragment"),C=Symbol.for("react.strict_mode"),x=Symbol.for("react.profiler"),I=Symbol.for("react.provider"),D=Symbol.for("react.context"),Q=Symbol.for("react.forward_ref"),P=Symbol.for("react.suspense"),F=Symbol.for("react.suspense_list"),L=Symbol.for("react.memo"),M=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var S=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var N=Symbol.iterator;function k(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=N&&e[N]||e["@@iterator"])?e:null}var R,T=Object.assign;function W(e){if(void 0===R)try{throw Error()}catch(r){var t=r.stack.trim().match(/\n( *(at )?)/);R=t&&t[1]||""}return"\n"+R+e}var j=!1;function G(e,t){if(!e||j)return"";j=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(l){var n=l}Reflect.construct(e,[],t)}else{try{t.call()}catch(l){n=l}e.call(t.prototype)}else{try{throw Error()}catch(l){n=l}e()}}catch(l){if(l&&n&&"string"===typeof l.stack){for(var s=l.stack.split("\n"),i=n.stack.split("\n"),o=s.length-1,A=i.length-1;1<=o&&0<=A&&s[o]!==i[A];)A--;for(;1<=o&&0<=A;o--,A--)if(s[o]!==i[A]){if(1!==o||1!==A)do{if(o--,0>--A||s[o]!==i[A]){var a="\n"+s[o].replace(" at new "," at ");return e.displayName&&a.includes("<anonymous>")&&(a=a.replace("<anonymous>",e.displayName)),a}}while(1<=o&&0<=A);break}}}finally{j=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?W(e):""}function X(e){switch(e.tag){case 5:return W(e.type);case 16:return W("Lazy");case 13:return W("Suspense");case 19:return W("SuspenseList");case 0:case 2:case 15:return e=G(e.type,!1);case 11:return e=G(e.type.render,!1);case 1:return e=G(e.type,!0);default:return""}}function O(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case E:return"Fragment";case B:return"Portal";case x:return"Profiler";case C:return"StrictMode";case P:return"Suspense";case F:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case D:return(e.displayName||"Context")+".Consumer";case I:return(e._context.displayName||"Context")+".Provider";case Q:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case L:return null!==(t=e.displayName||null)?t:O(e.type)||"Memo";case M:t=e._payload,e=e._init;try{return O(e(t))}catch(r){}}return null}function z(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return O(t);case 8:return t===C?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function Y(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function U(e){e._valueTracker||(e._valueTracker=function(e){var t=H(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof r&&"function"===typeof r.get&&"function"===typeof r.set){var s=r.get,i=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return s.call(this)},set:function(e){n=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return n},setValue:function(e){n=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function V(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),n="";return e&&(n=H(e)?e.checked?"true":"false":e.value),(e=n)!==r&&(t.setValue(e),!0)}function q(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var r=t.checked;return T({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function K(e,t){var r=null==t.defaultValue?"":t.defaultValue,n=null!=t.checked?t.checked:t.defaultChecked;r=Y(null!=t.value?t.value:r),e._wrapperState={initialChecked:n,initialValue:r,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function J(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function _(e,t){J(e,t);var r=Y(t.value),n=t.type;if(null!=r)"number"===n?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===n||"reset"===n)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,r):t.hasOwnProperty("defaultValue")&&ee(e,t.type,Y(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function $(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!("submit"!==n&&"reset"!==n||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function ee(e,t,r){"number"===t&&q(e.ownerDocument)===e||(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}var te=Array.isArray;function re(e,t,r,n){if(e=e.options,t){t={};for(var s=0;s<r.length;s++)t["$"+r[s]]=!0;for(r=0;r<e.length;r++)s=t.hasOwnProperty("$"+e[r].value),e[r].selected!==s&&(e[r].selected=s),s&&n&&(e[r].defaultSelected=!0)}else{for(r=""+Y(r),t=null,s=0;s<e.length;s++){if(e[s].value===r)return e[s].selected=!0,void(n&&(e[s].defaultSelected=!0));null!==t||e[s].disabled||(t=e[s])}null!==t&&(t.selected=!0)}}function ne(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return T({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function se(e,t){var r=t.value;if(null==r){if(r=t.children,t=t.defaultValue,null!=r){if(null!=t)throw Error(i(92));if(te(r)){if(1<r.length)throw Error(i(93));r=r[0]}t=r}null==t&&(t=""),r=t}e._wrapperState={initialValue:Y(r)}}function ie(e,t){var r=Y(t.value),n=Y(t.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==t.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=n&&(e.defaultValue=""+n)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function Ae(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ae(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Ae(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var le,ce,ue=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((le=le||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=le.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,r,n){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function de(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType)return void(r.nodeValue=t)}e.textContent=t}var he={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function ge(e,t,r){return null==t||"boolean"===typeof t||""===t?"":r||"number"!==typeof t||0===t||he.hasOwnProperty(e)&&he[e]?(""+t).trim():t+"px"}function pe(e,t){for(var r in e=e.style,t)if(t.hasOwnProperty(r)){var n=0===r.indexOf("--"),s=ge(r,t[r],n);"float"===r&&(r="cssFloat"),n?e.setProperty(r,s):e[r]=s}}Object.keys(he).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),he[t]=he[e]}))}));var me=T({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function we(e,t){if(t){if(me[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(i(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var be=null;function ye(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Be=null,Ee=null,Ce=null;function xe(e){if(e=vs(e)){if("function"!==typeof Be)throw Error(i(280));var t=e.stateNode;t&&(t=ys(t),Be(e.stateNode,e.type,t))}}function Ie(e){Ee?Ce?Ce.push(e):Ce=[e]:Ee=e}function De(){if(Ee){var e=Ee,t=Ce;if(Ce=Ee=null,xe(e),t)for(e=0;e<t.length;e++)xe(t[e])}}function Qe(e,t){return e(t)}function Pe(){}var Fe=!1;function Le(e,t,r){if(Fe)return e(t,r);Fe=!0;try{return Qe(e,t,r)}finally{Fe=!1,(null!==Ee||null!==Ce)&&(Pe(),De())}}function Me(e,t){var r=e.stateNode;if(null===r)return null;var n=ys(r);if(null===n)return null;r=n[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(n=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!n;break e;default:e=!1}if(e)return null;if(r&&"function"!==typeof r)throw Error(i(231,t,typeof r));return r}var Se=!1;if(c)try{var Ne={};Object.defineProperty(Ne,"passive",{get:function(){Se=!0}}),window.addEventListener("test",Ne,Ne),window.removeEventListener("test",Ne,Ne)}catch(ce){Se=!1}function ke(e,t,r,n,s,i,o,A,a){var l=Array.prototype.slice.call(arguments,3);try{t.apply(r,l)}catch(c){this.onError(c)}}var Re=!1,Te=null,We=!1,je=null,Ge={onError:function(e){Re=!0,Te=e}};function Xe(e,t,r,n,s,i,o,A,a){Re=!1,Te=null,ke.apply(Ge,arguments)}function Oe(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(r=t.return),e=t.return}while(e)}return 3===t.tag?r:null}function ze(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function Ye(e){if(Oe(e)!==e)throw Error(i(188))}function He(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Oe(e)))throw Error(i(188));return t!==e?null:e}for(var r=e,n=t;;){var s=r.return;if(null===s)break;var o=s.alternate;if(null===o){if(null!==(n=s.return)){r=n;continue}break}if(s.child===o.child){for(o=s.child;o;){if(o===r)return Ye(s),e;if(o===n)return Ye(s),t;o=o.sibling}throw Error(i(188))}if(r.return!==n.return)r=s,n=o;else{for(var A=!1,a=s.child;a;){if(a===r){A=!0,r=s,n=o;break}if(a===n){A=!0,n=s,r=o;break}a=a.sibling}if(!A){for(a=o.child;a;){if(a===r){A=!0,r=o,n=s;break}if(a===n){A=!0,n=o,r=s;break}a=a.sibling}if(!A)throw Error(i(189))}}if(r.alternate!==n)throw Error(i(190))}if(3!==r.tag)throw Error(i(188));return r.stateNode.current===r?e:t}(e))?Ue(e):null}function Ue(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ue(e);if(null!==t)return t;e=e.sibling}return null}var Ve=s.unstable_scheduleCallback,qe=s.unstable_cancelCallback,Ze=s.unstable_shouldYield,Ke=s.unstable_requestPaint,Je=s.unstable_now,_e=s.unstable_getCurrentPriorityLevel,$e=s.unstable_ImmediatePriority,et=s.unstable_UserBlockingPriority,tt=s.unstable_NormalPriority,rt=s.unstable_LowPriority,nt=s.unstable_IdlePriority,st=null,it=null;var ot=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(At(e)/at|0)|0},At=Math.log,at=Math.LN2;var lt=64,ct=4194304;function ut(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var r=e.pendingLanes;if(0===r)return 0;var n=0,s=e.suspendedLanes,i=e.pingedLanes,o=268435455&r;if(0!==o){var A=o&~s;0!==A?n=ut(A):0!==(i&=o)&&(n=ut(i))}else 0!==(o=r&~s)?n=ut(o):0!==i&&(n=ut(i));if(0===n)return 0;if(0!==t&&t!==n&&0===(t&s)&&((s=n&-n)>=(i=t&-t)||16===s&&0!==(4194240&i)))return t;if(0!==(4&n)&&(n|=16&r),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=n;0<t;)s=1<<(r=31-ot(t)),n|=e[r],t&=~s;return n}function ht(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function gt(){var e=lt;return 0===(4194240&(lt<<=1))&&(lt=64),e}function pt(e){for(var t=[],r=0;31>r;r++)t.push(e);return t}function mt(e,t,r){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=r}function wt(e,t){var r=e.entangledLanes|=t;for(e=e.entanglements;r;){var n=31-ot(r),s=1<<n;s&t|e[n]&t&&(e[n]|=t),r&=~s}}var vt=0;function bt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var yt,Bt,Et,Ct,xt,It=!1,Dt=[],Qt=null,Pt=null,Ft=null,Lt=new Map,Mt=new Map,St=[],Nt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function kt(e,t){switch(e){case"focusin":case"focusout":Qt=null;break;case"dragenter":case"dragleave":Pt=null;break;case"mouseover":case"mouseout":Ft=null;break;case"pointerover":case"pointerout":Lt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Mt.delete(t.pointerId)}}function Rt(e,t,r,n,s,i){return null===e||e.nativeEvent!==i?(e={blockedOn:t,domEventName:r,eventSystemFlags:n,nativeEvent:i,targetContainers:[s]},null!==t&&(null!==(t=vs(t))&&Bt(t)),e):(e.eventSystemFlags|=n,t=e.targetContainers,null!==s&&-1===t.indexOf(s)&&t.push(s),e)}function Tt(e){var t=ws(e.target);if(null!==t){var r=Oe(t);if(null!==r)if(13===(t=r.tag)){if(null!==(t=ze(r)))return e.blockedOn=t,void xt(e.priority,(function(){Et(r)}))}else if(3===t&&r.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===r.tag?r.stateNode.containerInfo:null)}e.blockedOn=null}function Wt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var r=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r)return null!==(t=vs(r))&&Bt(t),e.blockedOn=r,!1;var n=new(r=e.nativeEvent).constructor(r.type,r);be=n,r.target.dispatchEvent(n),be=null,t.shift()}return!0}function jt(e,t,r){Wt(e)&&r.delete(t)}function Gt(){It=!1,null!==Qt&&Wt(Qt)&&(Qt=null),null!==Pt&&Wt(Pt)&&(Pt=null),null!==Ft&&Wt(Ft)&&(Ft=null),Lt.forEach(jt),Mt.forEach(jt)}function Xt(e,t){e.blockedOn===t&&(e.blockedOn=null,It||(It=!0,s.unstable_scheduleCallback(s.unstable_NormalPriority,Gt)))}function Ot(e){function t(t){return Xt(t,e)}if(0<Dt.length){Xt(Dt[0],e);for(var r=1;r<Dt.length;r++){var n=Dt[r];n.blockedOn===e&&(n.blockedOn=null)}}for(null!==Qt&&Xt(Qt,e),null!==Pt&&Xt(Pt,e),null!==Ft&&Xt(Ft,e),Lt.forEach(t),Mt.forEach(t),r=0;r<St.length;r++)(n=St[r]).blockedOn===e&&(n.blockedOn=null);for(;0<St.length&&null===(r=St[0]).blockedOn;)Tt(r),null===r.blockedOn&&St.shift()}var zt=b.ReactCurrentBatchConfig,Yt=!0;function Ht(e,t,r,n){var s=vt,i=zt.transition;zt.transition=null;try{vt=1,Vt(e,t,r,n)}finally{vt=s,zt.transition=i}}function Ut(e,t,r,n){var s=vt,i=zt.transition;zt.transition=null;try{vt=4,Vt(e,t,r,n)}finally{vt=s,zt.transition=i}}function Vt(e,t,r,n){if(Yt){var s=Zt(e,t,r,n);if(null===s)Yn(e,t,n,qt,r),kt(e,n);else if(function(e,t,r,n,s){switch(t){case"focusin":return Qt=Rt(Qt,e,t,r,n,s),!0;case"dragenter":return Pt=Rt(Pt,e,t,r,n,s),!0;case"mouseover":return Ft=Rt(Ft,e,t,r,n,s),!0;case"pointerover":var i=s.pointerId;return Lt.set(i,Rt(Lt.get(i)||null,e,t,r,n,s)),!0;case"gotpointercapture":return i=s.pointerId,Mt.set(i,Rt(Mt.get(i)||null,e,t,r,n,s)),!0}return!1}(s,e,t,r,n))n.stopPropagation();else if(kt(e,n),4&t&&-1<Nt.indexOf(e)){for(;null!==s;){var i=vs(s);if(null!==i&&yt(i),null===(i=Zt(e,t,r,n))&&Yn(e,t,n,qt,r),i===s)break;s=i}null!==s&&n.stopPropagation()}else Yn(e,t,n,null,r)}}var qt=null;function Zt(e,t,r,n){if(qt=null,null!==(e=ws(e=ye(n))))if(null===(t=Oe(e)))e=null;else if(13===(r=t.tag)){if(null!==(e=ze(t)))return e;e=null}else if(3===r){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return qt=e,null}function Kt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(_e()){case $e:return 1;case et:return 4;case tt:case rt:return 16;case nt:return 536870912;default:return 16}default:return 16}}var Jt=null,_t=null,$t=null;function er(){if($t)return $t;var e,t,r=_t,n=r.length,s="value"in Jt?Jt.value:Jt.textContent,i=s.length;for(e=0;e<n&&r[e]===s[e];e++);var o=n-e;for(t=1;t<=o&&r[n-t]===s[i-t];t++);return $t=s.slice(e,1<t?1-t:void 0)}function tr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function rr(){return!0}function nr(){return!1}function sr(e){function t(t,r,n,s,i){for(var o in this._reactName=t,this._targetInst=n,this.type=r,this.nativeEvent=s,this.target=i,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(s):s[o]);return this.isDefaultPrevented=(null!=s.defaultPrevented?s.defaultPrevented:!1===s.returnValue)?rr:nr,this.isPropagationStopped=nr,this}return T(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rr)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rr)},persist:function(){},isPersistent:rr}),t}var ir,or,Ar,ar={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},lr=sr(ar),cr=T({},ar,{view:0,detail:0}),ur=sr(cr),dr=T({},cr,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cr,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==Ar&&(Ar&&"mousemove"===e.type?(ir=e.screenX-Ar.screenX,or=e.screenY-Ar.screenY):or=ir=0,Ar=e),ir)},movementY:function(e){return"movementY"in e?e.movementY:or}}),hr=sr(dr),fr=sr(T({},dr,{dataTransfer:0})),gr=sr(T({},cr,{relatedTarget:0})),pr=sr(T({},ar,{animationName:0,elapsedTime:0,pseudoElement:0})),mr=T({},ar,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),wr=sr(mr),vr=sr(T({},ar,{data:0})),br={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},yr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Br={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Er(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Br[e])&&!!t[e]}function Cr(){return Er}var xr=T({},cr,{key:function(e){if(e.key){var t=br[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?yr[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cr,charCode:function(e){return"keypress"===e.type?tr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Ir=sr(xr),Dr=sr(T({},dr,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Qr=sr(T({},cr,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cr})),Pr=sr(T({},ar,{propertyName:0,elapsedTime:0,pseudoElement:0})),Fr=T({},dr,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Lr=sr(Fr),Mr=[9,13,27,32],Sr=c&&"CompositionEvent"in window,Nr=null;c&&"documentMode"in document&&(Nr=document.documentMode);var kr=c&&"TextEvent"in window&&!Nr,Rr=c&&(!Sr||Nr&&8<Nr&&11>=Nr),Tr=String.fromCharCode(32),Wr=!1;function jr(e,t){switch(e){case"keyup":return-1!==Mr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Gr(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Xr=!1;var Or={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function zr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Or[e.type]:"textarea"===t}function Yr(e,t,r,n){Ie(n),0<(t=Un(t,"onChange")).length&&(r=new lr("onChange","change",null,r,n),e.push({event:r,listeners:t}))}var Hr=null,Ur=null;function Vr(e){Wn(e,0)}function qr(e){if(V(bs(e)))return e}function Zr(e,t){if("change"===e)return t}var Kr=!1;if(c){var Jr;if(c){var _r="oninput"in document;if(!_r){var $r=document.createElement("div");$r.setAttribute("oninput","return;"),_r="function"===typeof $r.oninput}Jr=_r}else Jr=!1;Kr=Jr&&(!document.documentMode||9<document.documentMode)}function en(){Hr&&(Hr.detachEvent("onpropertychange",tn),Ur=Hr=null)}function tn(e){if("value"===e.propertyName&&qr(Ur)){var t=[];Yr(t,Ur,e,ye(e)),Le(Vr,t)}}function rn(e,t,r){"focusin"===e?(en(),Ur=r,(Hr=t).attachEvent("onpropertychange",tn)):"focusout"===e&&en()}function nn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return qr(Ur)}function sn(e,t){if("click"===e)return qr(t)}function on(e,t){if("input"===e||"change"===e)return qr(t)}var An="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function an(e,t){if(An(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(n=0;n<r.length;n++){var s=r[n];if(!u.call(t,s)||!An(e[s],t[s]))return!1}return!0}function ln(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cn(e,t){var r,n=ln(e);for(e=0;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=ln(n)}}function un(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?un(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dn(){for(var e=window,t=q();t instanceof e.HTMLIFrameElement;){try{var r="string"===typeof t.contentWindow.location.href}catch(n){r=!1}if(!r)break;t=q((e=t.contentWindow).document)}return t}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fn(e){var t=dn(),r=e.focusedElem,n=e.selectionRange;if(t!==r&&r&&r.ownerDocument&&un(r.ownerDocument.documentElement,r)){if(null!==n&&hn(r))if(t=n.start,void 0===(e=n.end)&&(e=t),"selectionStart"in r)r.selectionStart=t,r.selectionEnd=Math.min(e,r.value.length);else if((e=(t=r.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var s=r.textContent.length,i=Math.min(n.start,s);n=void 0===n.end?i:Math.min(n.end,s),!e.extend&&i>n&&(s=n,n=i,i=s),s=cn(r,i);var o=cn(r,n);s&&o&&(1!==e.rangeCount||e.anchorNode!==s.node||e.anchorOffset!==s.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(s.node,s.offset),e.removeAllRanges(),i>n?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=r;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof r.focus&&r.focus(),r=0;r<t.length;r++)(e=t[r]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var gn=c&&"documentMode"in document&&11>=document.documentMode,pn=null,mn=null,wn=null,vn=!1;function bn(e,t,r){var n=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;vn||null==pn||pn!==q(n)||("selectionStart"in(n=pn)&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},wn&&an(wn,n)||(wn=n,0<(n=Un(mn,"onSelect")).length&&(t=new lr("onSelect","select",null,t,r),e.push({event:t,listeners:n}),t.target=pn)))}function yn(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var Bn={animationend:yn("Animation","AnimationEnd"),animationiteration:yn("Animation","AnimationIteration"),animationstart:yn("Animation","AnimationStart"),transitionend:yn("Transition","TransitionEnd")},En={},Cn={};function xn(e){if(En[e])return En[e];if(!Bn[e])return e;var t,r=Bn[e];for(t in r)if(r.hasOwnProperty(t)&&t in Cn)return En[e]=r[t];return e}c&&(Cn=document.createElement("div").style,"AnimationEvent"in window||(delete Bn.animationend.animation,delete Bn.animationiteration.animation,delete Bn.animationstart.animation),"TransitionEvent"in window||delete Bn.transitionend.transition);var In=xn("animationend"),Dn=xn("animationiteration"),Qn=xn("animationstart"),Pn=xn("transitionend"),Fn=new Map,Ln="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Mn(e,t){Fn.set(e,t),a(t,[e])}for(var Sn=0;Sn<Ln.length;Sn++){var Nn=Ln[Sn];Mn(Nn.toLowerCase(),"on"+(Nn[0].toUpperCase()+Nn.slice(1)))}Mn(In,"onAnimationEnd"),Mn(Dn,"onAnimationIteration"),Mn(Qn,"onAnimationStart"),Mn("dblclick","onDoubleClick"),Mn("focusin","onFocus"),Mn("focusout","onBlur"),Mn(Pn,"onTransitionEnd"),l("onMouseEnter",["mouseout","mouseover"]),l("onMouseLeave",["mouseout","mouseover"]),l("onPointerEnter",["pointerout","pointerover"]),l("onPointerLeave",["pointerout","pointerover"]),a("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),a("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),a("onBeforeInput",["compositionend","keypress","textInput","paste"]),a("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),a("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),a("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var kn="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Rn=new Set("cancel close invalid load scroll toggle".split(" ").concat(kn));function Tn(e,t,r){var n=e.type||"unknown-event";e.currentTarget=r,function(e,t,r,n,s,o,A,a,l){if(Xe.apply(this,arguments),Re){if(!Re)throw Error(i(198));var c=Te;Re=!1,Te=null,We||(We=!0,je=c)}}(n,t,void 0,e),e.currentTarget=null}function Wn(e,t){t=0!==(4&t);for(var r=0;r<e.length;r++){var n=e[r],s=n.event;n=n.listeners;e:{var i=void 0;if(t)for(var o=n.length-1;0<=o;o--){var A=n[o],a=A.instance,l=A.currentTarget;if(A=A.listener,a!==i&&s.isPropagationStopped())break e;Tn(s,A,l),i=a}else for(o=0;o<n.length;o++){if(a=(A=n[o]).instance,l=A.currentTarget,A=A.listener,a!==i&&s.isPropagationStopped())break e;Tn(s,A,l),i=a}}}if(We)throw e=je,We=!1,je=null,e}function jn(e,t){var r=t[gs];void 0===r&&(r=t[gs]=new Set);var n=e+"__bubble";r.has(n)||(zn(t,e,2,!1),r.add(n))}function Gn(e,t,r){var n=0;t&&(n|=4),zn(r,e,n,t)}var Xn="_reactListening"+Math.random().toString(36).slice(2);function On(e){if(!e[Xn]){e[Xn]=!0,o.forEach((function(t){"selectionchange"!==t&&(Rn.has(t)||Gn(t,!1,e),Gn(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Xn]||(t[Xn]=!0,Gn("selectionchange",!1,t))}}function zn(e,t,r,n){switch(Kt(t)){case 1:var s=Ht;break;case 4:s=Ut;break;default:s=Vt}r=s.bind(null,t,r,e),s=void 0,!Se||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(s=!0),n?void 0!==s?e.addEventListener(t,r,{capture:!0,passive:s}):e.addEventListener(t,r,!0):void 0!==s?e.addEventListener(t,r,{passive:s}):e.addEventListener(t,r,!1)}function Yn(e,t,r,n,s){var i=n;if(0===(1&t)&&0===(2&t)&&null!==n)e:for(;;){if(null===n)return;var o=n.tag;if(3===o||4===o){var A=n.stateNode.containerInfo;if(A===s||8===A.nodeType&&A.parentNode===s)break;if(4===o)for(o=n.return;null!==o;){var a=o.tag;if((3===a||4===a)&&((a=o.stateNode.containerInfo)===s||8===a.nodeType&&a.parentNode===s))return;o=o.return}for(;null!==A;){if(null===(o=ws(A)))return;if(5===(a=o.tag)||6===a){n=i=o;continue e}A=A.parentNode}}n=n.return}Le((function(){var n=i,s=ye(r),o=[];e:{var A=Fn.get(e);if(void 0!==A){var a=lr,l=e;switch(e){case"keypress":if(0===tr(r))break e;case"keydown":case"keyup":a=Ir;break;case"focusin":l="focus",a=gr;break;case"focusout":l="blur",a=gr;break;case"beforeblur":case"afterblur":a=gr;break;case"click":if(2===r.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":a=hr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":a=fr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":a=Qr;break;case In:case Dn:case Qn:a=pr;break;case Pn:a=Pr;break;case"scroll":a=ur;break;case"wheel":a=Lr;break;case"copy":case"cut":case"paste":a=wr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":a=Dr}var c=0!==(4&t),u=!c&&"scroll"===e,d=c?null!==A?A+"Capture":null:A;c=[];for(var h,f=n;null!==f;){var g=(h=f).stateNode;if(5===h.tag&&null!==g&&(h=g,null!==d&&(null!=(g=Me(f,d))&&c.push(Hn(f,g,h)))),u)break;f=f.return}0<c.length&&(A=new a(A,l,null,r,s),o.push({event:A,listeners:c}))}}if(0===(7&t)){if(a="mouseout"===e||"pointerout"===e,(!(A="mouseover"===e||"pointerover"===e)||r===be||!(l=r.relatedTarget||r.fromElement)||!ws(l)&&!l[fs])&&(a||A)&&(A=s.window===s?s:(A=s.ownerDocument)?A.defaultView||A.parentWindow:window,a?(a=n,null!==(l=(l=r.relatedTarget||r.toElement)?ws(l):null)&&(l!==(u=Oe(l))||5!==l.tag&&6!==l.tag)&&(l=null)):(a=null,l=n),a!==l)){if(c=hr,g="onMouseLeave",d="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(c=Dr,g="onPointerLeave",d="onPointerEnter",f="pointer"),u=null==a?A:bs(a),h=null==l?A:bs(l),(A=new c(g,f+"leave",a,r,s)).target=u,A.relatedTarget=h,g=null,ws(s)===n&&((c=new c(d,f+"enter",l,r,s)).target=h,c.relatedTarget=u,g=c),u=g,a&&l)e:{for(d=l,f=0,h=c=a;h;h=Vn(h))f++;for(h=0,g=d;g;g=Vn(g))h++;for(;0<f-h;)c=Vn(c),f--;for(;0<h-f;)d=Vn(d),h--;for(;f--;){if(c===d||null!==d&&c===d.alternate)break e;c=Vn(c),d=Vn(d)}c=null}else c=null;null!==a&&qn(o,A,a,c,!1),null!==l&&null!==u&&qn(o,u,l,c,!0)}if("select"===(a=(A=n?bs(n):window).nodeName&&A.nodeName.toLowerCase())||"input"===a&&"file"===A.type)var p=Zr;else if(zr(A))if(Kr)p=on;else{p=nn;var m=rn}else(a=A.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===A.type||"radio"===A.type)&&(p=sn);switch(p&&(p=p(e,n))?Yr(o,p,r,s):(m&&m(e,A,n),"focusout"===e&&(m=A._wrapperState)&&m.controlled&&"number"===A.type&&ee(A,"number",A.value)),m=n?bs(n):window,e){case"focusin":(zr(m)||"true"===m.contentEditable)&&(pn=m,mn=n,wn=null);break;case"focusout":wn=mn=pn=null;break;case"mousedown":vn=!0;break;case"contextmenu":case"mouseup":case"dragend":vn=!1,bn(o,r,s);break;case"selectionchange":if(gn)break;case"keydown":case"keyup":bn(o,r,s)}var w;if(Sr)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Xr?jr(e,r)&&(v="onCompositionEnd"):"keydown"===e&&229===r.keyCode&&(v="onCompositionStart");v&&(Rr&&"ko"!==r.locale&&(Xr||"onCompositionStart"!==v?"onCompositionEnd"===v&&Xr&&(w=er()):(_t="value"in(Jt=s)?Jt.value:Jt.textContent,Xr=!0)),0<(m=Un(n,v)).length&&(v=new vr(v,e,null,r,s),o.push({event:v,listeners:m}),w?v.data=w:null!==(w=Gr(r))&&(v.data=w))),(w=kr?function(e,t){switch(e){case"compositionend":return Gr(t);case"keypress":return 32!==t.which?null:(Wr=!0,Tr);case"textInput":return(e=t.data)===Tr&&Wr?null:e;default:return null}}(e,r):function(e,t){if(Xr)return"compositionend"===e||!Sr&&jr(e,t)?(e=er(),$t=_t=Jt=null,Xr=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Rr&&"ko"!==t.locale?null:t.data}}(e,r))&&(0<(n=Un(n,"onBeforeInput")).length&&(s=new vr("onBeforeInput","beforeinput",null,r,s),o.push({event:s,listeners:n}),s.data=w))}Wn(o,t)}))}function Hn(e,t,r){return{instance:e,listener:t,currentTarget:r}}function Un(e,t){for(var r=t+"Capture",n=[];null!==e;){var s=e,i=s.stateNode;5===s.tag&&null!==i&&(s=i,null!=(i=Me(e,r))&&n.unshift(Hn(e,i,s)),null!=(i=Me(e,t))&&n.push(Hn(e,i,s))),e=e.return}return n}function Vn(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function qn(e,t,r,n,s){for(var i=t._reactName,o=[];null!==r&&r!==n;){var A=r,a=A.alternate,l=A.stateNode;if(null!==a&&a===n)break;5===A.tag&&null!==l&&(A=l,s?null!=(a=Me(r,i))&&o.unshift(Hn(r,a,A)):s||null!=(a=Me(r,i))&&o.push(Hn(r,a,A))),r=r.return}0!==o.length&&e.push({event:t,listeners:o})}var Zn=/\r\n?/g,Kn=/\u0000|\uFFFD/g;function Jn(e){return("string"===typeof e?e:""+e).replace(Zn,"\n").replace(Kn,"")}function _n(e,t,r){if(t=Jn(t),Jn(e)!==t&&r)throw Error(i(425))}function $n(){}var es=null,ts=null;function rs(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ns="function"===typeof setTimeout?setTimeout:void 0,ss="function"===typeof clearTimeout?clearTimeout:void 0,is="function"===typeof Promise?Promise:void 0,os="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof is?function(e){return is.resolve(null).then(e).catch(As)}:ns;function As(e){setTimeout((function(){throw e}))}function as(e,t){var r=t,n=0;do{var s=r.nextSibling;if(e.removeChild(r),s&&8===s.nodeType)if("/$"===(r=s.data)){if(0===n)return e.removeChild(s),void Ot(t);n--}else"$"!==r&&"$?"!==r&&"$!"!==r||n++;r=s}while(r);Ot(t)}function ls(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function cs(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||"$!"===r||"$?"===r){if(0===t)return e;t--}else"/$"===r&&t++}e=e.previousSibling}return null}var us=Math.random().toString(36).slice(2),ds="__reactFiber$"+us,hs="__reactProps$"+us,fs="__reactContainer$"+us,gs="__reactEvents$"+us,ps="__reactListeners$"+us,ms="__reactHandles$"+us;function ws(e){var t=e[ds];if(t)return t;for(var r=e.parentNode;r;){if(t=r[fs]||r[ds]){if(r=t.alternate,null!==t.child||null!==r&&null!==r.child)for(e=cs(e);null!==e;){if(r=e[ds])return r;e=cs(e)}return t}r=(e=r).parentNode}return null}function vs(e){return!(e=e[ds]||e[fs])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function bs(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function ys(e){return e[hs]||null}var Bs=[],Es=-1;function Cs(e){return{current:e}}function xs(e){0>Es||(e.current=Bs[Es],Bs[Es]=null,Es--)}function Is(e,t){Es++,Bs[Es]=e.current,e.current=t}var Ds={},Qs=Cs(Ds),Ps=Cs(!1),Fs=Ds;function Ls(e,t){var r=e.type.contextTypes;if(!r)return Ds;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var s,i={};for(s in r)i[s]=t[s];return n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Ms(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Ss(){xs(Ps),xs(Qs)}function Ns(e,t,r){if(Qs.current!==Ds)throw Error(i(168));Is(Qs,t),Is(Ps,r)}function ks(e,t,r){var n=e.stateNode;if(t=t.childContextTypes,"function"!==typeof n.getChildContext)return r;for(var s in n=n.getChildContext())if(!(s in t))throw Error(i(108,z(e)||"Unknown",s));return T({},r,n)}function Rs(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ds,Fs=Qs.current,Is(Qs,e),Is(Ps,Ps.current),!0}function Ts(e,t,r){var n=e.stateNode;if(!n)throw Error(i(169));r?(e=ks(e,t,Fs),n.__reactInternalMemoizedMergedChildContext=e,xs(Ps),xs(Qs),Is(Qs,e)):xs(Ps),Is(Ps,r)}var Ws=null,js=!1,Gs=!1;function Xs(e){null===Ws?Ws=[e]:Ws.push(e)}function Os(){if(!Gs&&null!==Ws){Gs=!0;var e=0,t=vt;try{var r=Ws;for(vt=1;e<r.length;e++){var n=r[e];do{n=n(!0)}while(null!==n)}Ws=null,js=!1}catch(s){throw null!==Ws&&(Ws=Ws.slice(e+1)),Ve($e,Os),s}finally{vt=t,Gs=!1}}return null}var zs=[],Ys=0,Hs=null,Us=0,Vs=[],qs=0,Zs=null,Ks=1,Js="";function _s(e,t){zs[Ys++]=Us,zs[Ys++]=Hs,Hs=e,Us=t}function $s(e,t,r){Vs[qs++]=Ks,Vs[qs++]=Js,Vs[qs++]=Zs,Zs=e;var n=Ks;e=Js;var s=32-ot(n)-1;n&=~(1<<s),r+=1;var i=32-ot(t)+s;if(30<i){var o=s-s%5;i=(n&(1<<o)-1).toString(32),n>>=o,s-=o,Ks=1<<32-ot(t)+s|r<<s|n,Js=i+e}else Ks=1<<i|r<<s|n,Js=e}function ei(e){null!==e.return&&(_s(e,1),$s(e,1,0))}function ti(e){for(;e===Hs;)Hs=zs[--Ys],zs[Ys]=null,Us=zs[--Ys],zs[Ys]=null;for(;e===Zs;)Zs=Vs[--qs],Vs[qs]=null,Js=Vs[--qs],Vs[qs]=null,Ks=Vs[--qs],Vs[qs]=null}var ri=null,ni=null,si=!1,ii=null;function oi(e,t){var r=Ll(5,null,null,0);r.elementType="DELETED",r.stateNode=t,r.return=e,null===(t=e.deletions)?(e.deletions=[r],e.flags|=16):t.push(r)}function Ai(e,t){switch(e.tag){case 5:var r=e.type;return null!==(t=1!==t.nodeType||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ri=e,ni=ls(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ri=e,ni=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(r=null!==Zs?{id:Ks,overflow:Js}:null,e.memoizedState={dehydrated:t,treeContext:r,retryLane:1073741824},(r=Ll(18,null,null,0)).stateNode=t,r.return=e,e.child=r,ri=e,ni=null,!0);default:return!1}}function ai(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function li(e){if(si){var t=ni;if(t){var r=t;if(!Ai(e,t)){if(ai(e))throw Error(i(418));t=ls(r.nextSibling);var n=ri;t&&Ai(e,t)?oi(n,r):(e.flags=-4097&e.flags|2,si=!1,ri=e)}}else{if(ai(e))throw Error(i(418));e.flags=-4097&e.flags|2,si=!1,ri=e}}}function ci(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ri=e}function ui(e){if(e!==ri)return!1;if(!si)return ci(e),si=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!rs(e.type,e.memoizedProps)),t&&(t=ni)){if(ai(e))throw di(),Error(i(418));for(;t;)oi(e,t),t=ls(t.nextSibling)}if(ci(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var r=e.data;if("/$"===r){if(0===t){ni=ls(e.nextSibling);break e}t--}else"$"!==r&&"$!"!==r&&"$?"!==r||t++}e=e.nextSibling}ni=null}}else ni=ri?ls(e.stateNode.nextSibling):null;return!0}function di(){for(var e=ni;e;)e=ls(e.nextSibling)}function hi(){ni=ri=null,si=!1}function fi(e){null===ii?ii=[e]:ii.push(e)}var gi=b.ReactCurrentBatchConfig;function pi(e,t,r){if(null!==(e=r.ref)&&"function"!==typeof e&&"object"!==typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(i(309));var n=r.stateNode}if(!n)throw Error(i(147,e));var s=n,o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=s.refs;null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!==typeof e)throw Error(i(284));if(!r._owner)throw Error(i(290,e))}return e}function mi(e,t){throw e=Object.prototype.toString.call(t),Error(i(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function wi(e){return(0,e._init)(e._payload)}function vi(e){function t(t,r){if(e){var n=t.deletions;null===n?(t.deletions=[r],t.flags|=16):n.push(r)}}function r(r,n){if(!e)return null;for(;null!==n;)t(r,n),n=n.sibling;return null}function n(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function s(e,t){return(e=Sl(e,t)).index=0,e.sibling=null,e}function o(t,r,n){return t.index=n,e?null!==(n=t.alternate)?(n=n.index)<r?(t.flags|=2,r):n:(t.flags|=2,r):(t.flags|=1048576,r)}function A(t){return e&&null===t.alternate&&(t.flags|=2),t}function a(e,t,r,n){return null===t||6!==t.tag?((t=Tl(r,e.mode,n)).return=e,t):((t=s(t,r)).return=e,t)}function l(e,t,r,n){var i=r.type;return i===E?u(e,t,r.props.children,n,r.key):null!==t&&(t.elementType===i||"object"===typeof i&&null!==i&&i.$$typeof===M&&wi(i)===t.type)?((n=s(t,r.props)).ref=pi(e,t,r),n.return=e,n):((n=Nl(r.type,r.key,r.props,null,e.mode,n)).ref=pi(e,t,r),n.return=e,n)}function c(e,t,r,n){return null===t||4!==t.tag||t.stateNode.containerInfo!==r.containerInfo||t.stateNode.implementation!==r.implementation?((t=Wl(r,e.mode,n)).return=e,t):((t=s(t,r.children||[])).return=e,t)}function u(e,t,r,n,i){return null===t||7!==t.tag?((t=kl(r,e.mode,n,i)).return=e,t):((t=s(t,r)).return=e,t)}function d(e,t,r){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Tl(""+t,e.mode,r)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case y:return(r=Nl(t.type,t.key,t.props,null,e.mode,r)).ref=pi(e,null,t),r.return=e,r;case B:return(t=Wl(t,e.mode,r)).return=e,t;case M:return d(e,(0,t._init)(t._payload),r)}if(te(t)||k(t))return(t=kl(t,e.mode,r,null)).return=e,t;mi(e,t)}return null}function h(e,t,r,n){var s=null!==t?t.key:null;if("string"===typeof r&&""!==r||"number"===typeof r)return null!==s?null:a(e,t,""+r,n);if("object"===typeof r&&null!==r){switch(r.$$typeof){case y:return r.key===s?l(e,t,r,n):null;case B:return r.key===s?c(e,t,r,n):null;case M:return h(e,t,(s=r._init)(r._payload),n)}if(te(r)||k(r))return null!==s?null:u(e,t,r,n,null);mi(e,r)}return null}function f(e,t,r,n,s){if("string"===typeof n&&""!==n||"number"===typeof n)return a(t,e=e.get(r)||null,""+n,s);if("object"===typeof n&&null!==n){switch(n.$$typeof){case y:return l(t,e=e.get(null===n.key?r:n.key)||null,n,s);case B:return c(t,e=e.get(null===n.key?r:n.key)||null,n,s);case M:return f(e,t,r,(0,n._init)(n._payload),s)}if(te(n)||k(n))return u(t,e=e.get(r)||null,n,s,null);mi(t,n)}return null}function g(s,i,A,a){for(var l=null,c=null,u=i,g=i=0,p=null;null!==u&&g<A.length;g++){u.index>g?(p=u,u=null):p=u.sibling;var m=h(s,u,A[g],a);if(null===m){null===u&&(u=p);break}e&&u&&null===m.alternate&&t(s,u),i=o(m,i,g),null===c?l=m:c.sibling=m,c=m,u=p}if(g===A.length)return r(s,u),si&&_s(s,g),l;if(null===u){for(;g<A.length;g++)null!==(u=d(s,A[g],a))&&(i=o(u,i,g),null===c?l=u:c.sibling=u,c=u);return si&&_s(s,g),l}for(u=n(s,u);g<A.length;g++)null!==(p=f(u,s,g,A[g],a))&&(e&&null!==p.alternate&&u.delete(null===p.key?g:p.key),i=o(p,i,g),null===c?l=p:c.sibling=p,c=p);return e&&u.forEach((function(e){return t(s,e)})),si&&_s(s,g),l}function p(s,A,a,l){var c=k(a);if("function"!==typeof c)throw Error(i(150));if(null==(a=c.call(a)))throw Error(i(151));for(var u=c=null,g=A,p=A=0,m=null,w=a.next();null!==g&&!w.done;p++,w=a.next()){g.index>p?(m=g,g=null):m=g.sibling;var v=h(s,g,w.value,l);if(null===v){null===g&&(g=m);break}e&&g&&null===v.alternate&&t(s,g),A=o(v,A,p),null===u?c=v:u.sibling=v,u=v,g=m}if(w.done)return r(s,g),si&&_s(s,p),c;if(null===g){for(;!w.done;p++,w=a.next())null!==(w=d(s,w.value,l))&&(A=o(w,A,p),null===u?c=w:u.sibling=w,u=w);return si&&_s(s,p),c}for(g=n(s,g);!w.done;p++,w=a.next())null!==(w=f(g,s,p,w.value,l))&&(e&&null!==w.alternate&&g.delete(null===w.key?p:w.key),A=o(w,A,p),null===u?c=w:u.sibling=w,u=w);return e&&g.forEach((function(e){return t(s,e)})),si&&_s(s,p),c}return function e(n,i,o,a){if("object"===typeof o&&null!==o&&o.type===E&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case y:e:{for(var l=o.key,c=i;null!==c;){if(c.key===l){if((l=o.type)===E){if(7===c.tag){r(n,c.sibling),(i=s(c,o.props.children)).return=n,n=i;break e}}else if(c.elementType===l||"object"===typeof l&&null!==l&&l.$$typeof===M&&wi(l)===c.type){r(n,c.sibling),(i=s(c,o.props)).ref=pi(n,c,o),i.return=n,n=i;break e}r(n,c);break}t(n,c),c=c.sibling}o.type===E?((i=kl(o.props.children,n.mode,a,o.key)).return=n,n=i):((a=Nl(o.type,o.key,o.props,null,n.mode,a)).ref=pi(n,i,o),a.return=n,n=a)}return A(n);case B:e:{for(c=o.key;null!==i;){if(i.key===c){if(4===i.tag&&i.stateNode.containerInfo===o.containerInfo&&i.stateNode.implementation===o.implementation){r(n,i.sibling),(i=s(i,o.children||[])).return=n,n=i;break e}r(n,i);break}t(n,i),i=i.sibling}(i=Wl(o,n.mode,a)).return=n,n=i}return A(n);case M:return e(n,i,(c=o._init)(o._payload),a)}if(te(o))return g(n,i,o,a);if(k(o))return p(n,i,o,a);mi(n,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==i&&6===i.tag?(r(n,i.sibling),(i=s(i,o)).return=n,n=i):(r(n,i),(i=Tl(o,n.mode,a)).return=n,n=i),A(n)):r(n,i)}}var bi=vi(!0),yi=vi(!1),Bi=Cs(null),Ei=null,Ci=null,xi=null;function Ii(){xi=Ci=Ei=null}function Di(e){var t=Bi.current;xs(Bi),e._currentValue=t}function Qi(e,t,r){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==n&&(n.childLanes|=t)):null!==n&&(n.childLanes&t)!==t&&(n.childLanes|=t),e===r)break;e=e.return}}function Pi(e,t){Ei=e,xi=Ci=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(vA=!0),e.firstContext=null)}function Fi(e){var t=e._currentValue;if(xi!==e)if(e={context:e,memoizedValue:t,next:null},null===Ci){if(null===Ei)throw Error(i(308));Ci=e,Ei.dependencies={lanes:0,firstContext:e}}else Ci=Ci.next=e;return t}var Li=null;function Mi(e){null===Li?Li=[e]:Li.push(e)}function Si(e,t,r,n){var s=t.interleaved;return null===s?(r.next=r,Mi(t)):(r.next=s.next,s.next=r),t.interleaved=r,Ni(e,n)}function Ni(e,t){e.lanes|=t;var r=e.alternate;for(null!==r&&(r.lanes|=t),r=e,e=e.return;null!==e;)e.childLanes|=t,null!==(r=e.alternate)&&(r.childLanes|=t),r=e,e=e.return;return 3===r.tag?r.stateNode:null}var ki=!1;function Ri(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ti(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Wi(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ji(e,t,r){var n=e.updateQueue;if(null===n)return null;if(n=n.shared,0!==(2&Qa)){var s=n.pending;return null===s?t.next=t:(t.next=s.next,s.next=t),n.pending=t,Ni(e,r)}return null===(s=n.interleaved)?(t.next=t,Mi(n)):(t.next=s.next,s.next=t),n.interleaved=t,Ni(e,r)}function Gi(e,t,r){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&r))){var n=t.lanes;r|=n&=e.pendingLanes,t.lanes=r,wt(e,r)}}function Xi(e,t){var r=e.updateQueue,n=e.alternate;if(null!==n&&r===(n=n.updateQueue)){var s=null,i=null;if(null!==(r=r.firstBaseUpdate)){do{var o={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};null===i?s=i=o:i=i.next=o,r=r.next}while(null!==r);null===i?s=i=t:i=i.next=t}else s=i=t;return r={baseState:n.baseState,firstBaseUpdate:s,lastBaseUpdate:i,shared:n.shared,effects:n.effects},void(e.updateQueue=r)}null===(e=r.lastBaseUpdate)?r.firstBaseUpdate=t:e.next=t,r.lastBaseUpdate=t}function Oi(e,t,r,n){var s=e.updateQueue;ki=!1;var i=s.firstBaseUpdate,o=s.lastBaseUpdate,A=s.shared.pending;if(null!==A){s.shared.pending=null;var a=A,l=a.next;a.next=null,null===o?i=l:o.next=l,o=a;var c=e.alternate;null!==c&&((A=(c=c.updateQueue).lastBaseUpdate)!==o&&(null===A?c.firstBaseUpdate=l:A.next=l,c.lastBaseUpdate=a))}if(null!==i){var u=s.baseState;for(o=0,c=l=a=null,A=i;;){var d=A.lane,h=A.eventTime;if((n&d)===d){null!==c&&(c=c.next={eventTime:h,lane:0,tag:A.tag,payload:A.payload,callback:A.callback,next:null});e:{var f=e,g=A;switch(d=t,h=r,g.tag){case 1:if("function"===typeof(f=g.payload)){u=f.call(h,u,d);break e}u=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(d="function"===typeof(f=g.payload)?f.call(h,u,d):f)||void 0===d)break e;u=T({},u,d);break e;case 2:ki=!0}}null!==A.callback&&0!==A.lane&&(e.flags|=64,null===(d=s.effects)?s.effects=[A]:d.push(A))}else h={eventTime:h,lane:d,tag:A.tag,payload:A.payload,callback:A.callback,next:null},null===c?(l=c=h,a=u):c=c.next=h,o|=d;if(null===(A=A.next)){if(null===(A=s.shared.pending))break;A=(d=A).next,d.next=null,s.lastBaseUpdate=d,s.shared.pending=null}}if(null===c&&(a=u),s.baseState=a,s.firstBaseUpdate=l,s.lastBaseUpdate=c,null!==(t=s.shared.interleaved)){s=t;do{o|=s.lane,s=s.next}while(s!==t)}else null===i&&(s.shared.lanes=0);Ra|=o,e.lanes=o,e.memoizedState=u}}function zi(e,t,r){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var n=e[t],s=n.callback;if(null!==s){if(n.callback=null,n=r,"function"!==typeof s)throw Error(i(191,s));s.call(n)}}}var Yi={},Hi=Cs(Yi),Ui=Cs(Yi),Vi=Cs(Yi);function qi(e){if(e===Yi)throw Error(i(174));return e}function Zi(e,t){switch(Is(Vi,t),Is(Ui,e),Is(Hi,Yi),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ae(null,"");break;default:t=ae(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}xs(Hi),Is(Hi,t)}function Ki(){xs(Hi),xs(Ui),xs(Vi)}function Ji(e){qi(Vi.current);var t=qi(Hi.current),r=ae(t,e.type);t!==r&&(Is(Ui,e),Is(Hi,r))}function _i(e){Ui.current===e&&(xs(Hi),xs(Ui))}var $i=Cs(0);function eo(e){for(var t=e;null!==t;){if(13===t.tag){var r=t.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||"$?"===r.data||"$!"===r.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var to=[];function ro(){for(var e=0;e<to.length;e++)to[e]._workInProgressVersionPrimary=null;to.length=0}var no=b.ReactCurrentDispatcher,so=b.ReactCurrentBatchConfig,io=0,oo=null,Ao=null,ao=null,lo=!1,co=!1,uo=0,ho=0;function fo(){throw Error(i(321))}function go(e,t){if(null===t)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!An(e[r],t[r]))return!1;return!0}function po(e,t,r,n,s,o){if(io=o,oo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,no.current=null===e||null===e.memoizedState?$o:eA,e=r(n,s),co){o=0;do{if(co=!1,uo=0,25<=o)throw Error(i(301));o+=1,ao=Ao=null,t.updateQueue=null,no.current=tA,e=r(n,s)}while(co)}if(no.current=_o,t=null!==Ao&&null!==Ao.next,io=0,ao=Ao=oo=null,lo=!1,t)throw Error(i(300));return e}function mo(){var e=0!==uo;return uo=0,e}function wo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ao?oo.memoizedState=ao=e:ao=ao.next=e,ao}function vo(){if(null===Ao){var e=oo.alternate;e=null!==e?e.memoizedState:null}else e=Ao.next;var t=null===ao?oo.memoizedState:ao.next;if(null!==t)ao=t,Ao=e;else{if(null===e)throw Error(i(310));e={memoizedState:(Ao=e).memoizedState,baseState:Ao.baseState,baseQueue:Ao.baseQueue,queue:Ao.queue,next:null},null===ao?oo.memoizedState=ao=e:ao=ao.next=e}return ao}function bo(e,t){return"function"===typeof t?t(e):t}function yo(e){var t=vo(),r=t.queue;if(null===r)throw Error(i(311));r.lastRenderedReducer=e;var n=Ao,s=n.baseQueue,o=r.pending;if(null!==o){if(null!==s){var A=s.next;s.next=o.next,o.next=A}n.baseQueue=s=o,r.pending=null}if(null!==s){o=s.next,n=n.baseState;var a=A=null,l=null,c=o;do{var u=c.lane;if((io&u)===u)null!==l&&(l=l.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),n=c.hasEagerState?c.eagerState:e(n,c.action);else{var d={lane:u,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===l?(a=l=d,A=n):l=l.next=d,oo.lanes|=u,Ra|=u}c=c.next}while(null!==c&&c!==o);null===l?A=n:l.next=a,An(n,t.memoizedState)||(vA=!0),t.memoizedState=n,t.baseState=A,t.baseQueue=l,r.lastRenderedState=n}if(null!==(e=r.interleaved)){s=e;do{o=s.lane,oo.lanes|=o,Ra|=o,s=s.next}while(s!==e)}else null===s&&(r.lanes=0);return[t.memoizedState,r.dispatch]}function Bo(e){var t=vo(),r=t.queue;if(null===r)throw Error(i(311));r.lastRenderedReducer=e;var n=r.dispatch,s=r.pending,o=t.memoizedState;if(null!==s){r.pending=null;var A=s=s.next;do{o=e(o,A.action),A=A.next}while(A!==s);An(o,t.memoizedState)||(vA=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),r.lastRenderedState=o}return[o,n]}function Eo(){}function Co(e,t){var r=oo,n=vo(),s=t(),o=!An(n.memoizedState,s);if(o&&(n.memoizedState=s,vA=!0),n=n.queue,Ro(Do.bind(null,r,n,e),[e]),n.getSnapshot!==t||o||null!==ao&&1&ao.memoizedState.tag){if(r.flags|=2048,Lo(9,Io.bind(null,r,n,s,t),void 0,null),null===Pa)throw Error(i(349));0!==(30&io)||xo(r,t,s)}return s}function xo(e,t,r){e.flags|=16384,e={getSnapshot:t,value:r},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.stores=[e]):null===(r=t.stores)?t.stores=[e]:r.push(e)}function Io(e,t,r,n){t.value=r,t.getSnapshot=n,Qo(t)&&Po(e)}function Do(e,t,r){return r((function(){Qo(t)&&Po(e)}))}function Qo(e){var t=e.getSnapshot;e=e.value;try{var r=t();return!An(e,r)}catch(n){return!0}}function Po(e){var t=Ni(e,1);null!==t&&rl(t,e,1,-1)}function Fo(e){var t=wo();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:bo,lastRenderedState:e},t.queue=e,e=e.dispatch=qo.bind(null,oo,e),[t.memoizedState,e]}function Lo(e,t,r,n){return e={tag:e,create:t,destroy:r,deps:n,next:null},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.lastEffect=e.next=e):null===(r=t.lastEffect)?t.lastEffect=e.next=e:(n=r.next,r.next=e,e.next=n,t.lastEffect=e),e}function Mo(){return vo().memoizedState}function So(e,t,r,n){var s=wo();oo.flags|=e,s.memoizedState=Lo(1|t,r,void 0,void 0===n?null:n)}function No(e,t,r,n){var s=vo();n=void 0===n?null:n;var i=void 0;if(null!==Ao){var o=Ao.memoizedState;if(i=o.destroy,null!==n&&go(n,o.deps))return void(s.memoizedState=Lo(t,r,i,n))}oo.flags|=e,s.memoizedState=Lo(1|t,r,i,n)}function ko(e,t){return So(8390656,8,e,t)}function Ro(e,t){return No(2048,8,e,t)}function To(e,t){return No(4,2,e,t)}function Wo(e,t){return No(4,4,e,t)}function jo(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Go(e,t,r){return r=null!==r&&void 0!==r?r.concat([e]):null,No(4,4,jo.bind(null,t,e),r)}function Xo(){}function Oo(e,t){var r=vo();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&go(t,n[1])?n[0]:(r.memoizedState=[e,t],e)}function zo(e,t){var r=vo();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&go(t,n[1])?n[0]:(e=e(),r.memoizedState=[e,t],e)}function Yo(e,t,r){return 0===(21&io)?(e.baseState&&(e.baseState=!1,vA=!0),e.memoizedState=r):(An(r,t)||(r=gt(),oo.lanes|=r,Ra|=r,e.baseState=!0),t)}function Ho(e,t){var r=vt;vt=0!==r&&4>r?r:4,e(!0);var n=so.transition;so.transition={};try{e(!1),t()}finally{vt=r,so.transition=n}}function Uo(){return vo().memoizedState}function Vo(e,t,r){var n=tl(e);if(r={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null},Zo(e))Ko(t,r);else if(null!==(r=Si(e,t,r,n))){rl(r,e,n,el()),Jo(r,t,n)}}function qo(e,t,r){var n=tl(e),s={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null};if(Zo(e))Ko(t,s);else{var i=e.alternate;if(0===e.lanes&&(null===i||0===i.lanes)&&null!==(i=t.lastRenderedReducer))try{var o=t.lastRenderedState,A=i(o,r);if(s.hasEagerState=!0,s.eagerState=A,An(A,o)){var a=t.interleaved;return null===a?(s.next=s,Mi(t)):(s.next=a.next,a.next=s),void(t.interleaved=s)}}catch(l){}null!==(r=Si(e,t,s,n))&&(rl(r,e,n,s=el()),Jo(r,t,n))}}function Zo(e){var t=e.alternate;return e===oo||null!==t&&t===oo}function Ko(e,t){co=lo=!0;var r=e.pending;null===r?t.next=t:(t.next=r.next,r.next=t),e.pending=t}function Jo(e,t,r){if(0!==(4194240&r)){var n=t.lanes;r|=n&=e.pendingLanes,t.lanes=r,wt(e,r)}}var _o={readContext:Fi,useCallback:fo,useContext:fo,useEffect:fo,useImperativeHandle:fo,useInsertionEffect:fo,useLayoutEffect:fo,useMemo:fo,useReducer:fo,useRef:fo,useState:fo,useDebugValue:fo,useDeferredValue:fo,useTransition:fo,useMutableSource:fo,useSyncExternalStore:fo,useId:fo,unstable_isNewReconciler:!1},$o={readContext:Fi,useCallback:function(e,t){return wo().memoizedState=[e,void 0===t?null:t],e},useContext:Fi,useEffect:ko,useImperativeHandle:function(e,t,r){return r=null!==r&&void 0!==r?r.concat([e]):null,So(4194308,4,jo.bind(null,t,e),r)},useLayoutEffect:function(e,t){return So(4194308,4,e,t)},useInsertionEffect:function(e,t){return So(4,2,e,t)},useMemo:function(e,t){var r=wo();return t=void 0===t?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var n=wo();return t=void 0!==r?r(t):t,n.memoizedState=n.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},n.queue=e,e=e.dispatch=Vo.bind(null,oo,e),[n.memoizedState,e]},useRef:function(e){return e={current:e},wo().memoizedState=e},useState:Fo,useDebugValue:Xo,useDeferredValue:function(e){return wo().memoizedState=e},useTransition:function(){var e=Fo(!1),t=e[0];return e=Ho.bind(null,e[1]),wo().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,r){var n=oo,s=wo();if(si){if(void 0===r)throw Error(i(407));r=r()}else{if(r=t(),null===Pa)throw Error(i(349));0!==(30&io)||xo(n,t,r)}s.memoizedState=r;var o={value:r,getSnapshot:t};return s.queue=o,ko(Do.bind(null,n,o,e),[e]),n.flags|=2048,Lo(9,Io.bind(null,n,o,r,t),void 0,null),r},useId:function(){var e=wo(),t=Pa.identifierPrefix;if(si){var r=Js;t=":"+t+"R"+(r=(Ks&~(1<<32-ot(Ks)-1)).toString(32)+r),0<(r=uo++)&&(t+="H"+r.toString(32)),t+=":"}else t=":"+t+"r"+(r=ho++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},eA={readContext:Fi,useCallback:Oo,useContext:Fi,useEffect:Ro,useImperativeHandle:Go,useInsertionEffect:To,useLayoutEffect:Wo,useMemo:zo,useReducer:yo,useRef:Mo,useState:function(){return yo(bo)},useDebugValue:Xo,useDeferredValue:function(e){return Yo(vo(),Ao.memoizedState,e)},useTransition:function(){return[yo(bo)[0],vo().memoizedState]},useMutableSource:Eo,useSyncExternalStore:Co,useId:Uo,unstable_isNewReconciler:!1},tA={readContext:Fi,useCallback:Oo,useContext:Fi,useEffect:Ro,useImperativeHandle:Go,useInsertionEffect:To,useLayoutEffect:Wo,useMemo:zo,useReducer:Bo,useRef:Mo,useState:function(){return Bo(bo)},useDebugValue:Xo,useDeferredValue:function(e){var t=vo();return null===Ao?t.memoizedState=e:Yo(t,Ao.memoizedState,e)},useTransition:function(){return[Bo(bo)[0],vo().memoizedState]},useMutableSource:Eo,useSyncExternalStore:Co,useId:Uo,unstable_isNewReconciler:!1};function rA(e,t){if(e&&e.defaultProps){for(var r in t=T({},t),e=e.defaultProps)void 0===t[r]&&(t[r]=e[r]);return t}return t}function nA(e,t,r,n){r=null===(r=r(n,t=e.memoizedState))||void 0===r?t:T({},t,r),e.memoizedState=r,0===e.lanes&&(e.updateQueue.baseState=r)}var sA={isMounted:function(e){return!!(e=e._reactInternals)&&Oe(e)===e},enqueueSetState:function(e,t,r){e=e._reactInternals;var n=el(),s=tl(e),i=Wi(n,s);i.payload=t,void 0!==r&&null!==r&&(i.callback=r),null!==(t=ji(e,i,s))&&(rl(t,e,s,n),Gi(t,e,s))},enqueueReplaceState:function(e,t,r){e=e._reactInternals;var n=el(),s=tl(e),i=Wi(n,s);i.tag=1,i.payload=t,void 0!==r&&null!==r&&(i.callback=r),null!==(t=ji(e,i,s))&&(rl(t,e,s,n),Gi(t,e,s))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var r=el(),n=tl(e),s=Wi(r,n);s.tag=2,void 0!==t&&null!==t&&(s.callback=t),null!==(t=ji(e,s,n))&&(rl(t,e,n,r),Gi(t,e,n))}};function iA(e,t,r,n,s,i,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(n,i,o):!t.prototype||!t.prototype.isPureReactComponent||(!an(r,n)||!an(s,i))}function oA(e,t,r){var n=!1,s=Ds,i=t.contextType;return"object"===typeof i&&null!==i?i=Fi(i):(s=Ms(t)?Fs:Qs.current,i=(n=null!==(n=t.contextTypes)&&void 0!==n)?Ls(e,s):Ds),t=new t(r,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=sA,e.stateNode=t,t._reactInternals=e,n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=s,e.__reactInternalMemoizedMaskedChildContext=i),t}function AA(e,t,r,n){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(r,n),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(r,n),t.state!==e&&sA.enqueueReplaceState(t,t.state,null)}function aA(e,t,r,n){var s=e.stateNode;s.props=r,s.state=e.memoizedState,s.refs={},Ri(e);var i=t.contextType;"object"===typeof i&&null!==i?s.context=Fi(i):(i=Ms(t)?Fs:Qs.current,s.context=Ls(e,i)),s.state=e.memoizedState,"function"===typeof(i=t.getDerivedStateFromProps)&&(nA(e,t,i,r),s.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof s.getSnapshotBeforeUpdate||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||(t=s.state,"function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount(),t!==s.state&&sA.enqueueReplaceState(s,s.state,null),Oi(e,r,s,n),s.state=e.memoizedState),"function"===typeof s.componentDidMount&&(e.flags|=4194308)}function lA(e,t){try{var r="",n=t;do{r+=X(n),n=n.return}while(n);var s=r}catch(i){s="\nError generating stack: "+i.message+"\n"+i.stack}return{value:e,source:t,stack:s,digest:null}}function cA(e,t,r){return{value:e,source:null,stack:null!=r?r:null,digest:null!=t?t:null}}function uA(e,t){try{console.error(t.value)}catch(r){setTimeout((function(){throw r}))}}var dA="function"===typeof WeakMap?WeakMap:Map;function hA(e,t,r){(r=Wi(-1,r)).tag=3,r.payload={element:null};var n=t.value;return r.callback=function(){Ya||(Ya=!0,Ha=n),uA(0,t)},r}function fA(e,t,r){(r=Wi(-1,r)).tag=3;var n=e.type.getDerivedStateFromError;if("function"===typeof n){var s=t.value;r.payload=function(){return n(s)},r.callback=function(){uA(0,t)}}var i=e.stateNode;return null!==i&&"function"===typeof i.componentDidCatch&&(r.callback=function(){uA(0,t),"function"!==typeof n&&(null===Ua?Ua=new Set([this]):Ua.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),r}function gA(e,t,r){var n=e.pingCache;if(null===n){n=e.pingCache=new dA;var s=new Set;n.set(t,s)}else void 0===(s=n.get(t))&&(s=new Set,n.set(t,s));s.has(r)||(s.add(r),e=xl.bind(null,e,t,r),t.then(e,e))}function pA(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function mA(e,t,r,n,s){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,r.flags|=131072,r.flags&=-52805,1===r.tag&&(null===r.alternate?r.tag=17:((t=Wi(-1,1)).tag=2,ji(r,t,1))),r.lanes|=1),e):(e.flags|=65536,e.lanes=s,e)}var wA=b.ReactCurrentOwner,vA=!1;function bA(e,t,r,n){t.child=null===e?yi(t,null,r,n):bi(t,e.child,r,n)}function yA(e,t,r,n,s){r=r.render;var i=t.ref;return Pi(t,s),n=po(e,t,r,n,i,s),r=mo(),null===e||vA?(si&&r&&ei(t),t.flags|=1,bA(e,t,n,s),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,YA(e,t,s))}function BA(e,t,r,n,s){if(null===e){var i=r.type;return"function"!==typeof i||Ml(i)||void 0!==i.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=Nl(r.type,null,n,t,t.mode,s)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,EA(e,t,i,n,s))}if(i=e.child,0===(e.lanes&s)){var o=i.memoizedProps;if((r=null!==(r=r.compare)?r:an)(o,n)&&e.ref===t.ref)return YA(e,t,s)}return t.flags|=1,(e=Sl(i,n)).ref=t.ref,e.return=t,t.child=e}function EA(e,t,r,n,s){if(null!==e){var i=e.memoizedProps;if(an(i,n)&&e.ref===t.ref){if(vA=!1,t.pendingProps=n=i,0===(e.lanes&s))return t.lanes=e.lanes,YA(e,t,s);0!==(131072&e.flags)&&(vA=!0)}}return IA(e,t,r,n,s)}function CA(e,t,r){var n=t.pendingProps,s=n.children,i=null!==e?e.memoizedState:null;if("hidden"===n.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Is(Sa,Ma),Ma|=r;else{if(0===(1073741824&r))return e=null!==i?i.baseLanes|r:r,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Is(Sa,Ma),Ma|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},n=null!==i?i.baseLanes:r,Is(Sa,Ma),Ma|=n}else null!==i?(n=i.baseLanes|r,t.memoizedState=null):n=r,Is(Sa,Ma),Ma|=n;return bA(e,t,s,r),t.child}function xA(e,t){var r=t.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(t.flags|=512,t.flags|=2097152)}function IA(e,t,r,n,s){var i=Ms(r)?Fs:Qs.current;return i=Ls(t,i),Pi(t,s),r=po(e,t,r,n,i,s),n=mo(),null===e||vA?(si&&n&&ei(t),t.flags|=1,bA(e,t,r,s),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~s,YA(e,t,s))}function DA(e,t,r,n,s){if(Ms(r)){var i=!0;Rs(t)}else i=!1;if(Pi(t,s),null===t.stateNode)zA(e,t),oA(t,r,n),aA(t,r,n,s),n=!0;else if(null===e){var o=t.stateNode,A=t.memoizedProps;o.props=A;var a=o.context,l=r.contextType;"object"===typeof l&&null!==l?l=Fi(l):l=Ls(t,l=Ms(r)?Fs:Qs.current);var c=r.getDerivedStateFromProps,u="function"===typeof c||"function"===typeof o.getSnapshotBeforeUpdate;u||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(A!==n||a!==l)&&AA(t,o,n,l),ki=!1;var d=t.memoizedState;o.state=d,Oi(t,n,o,s),a=t.memoizedState,A!==n||d!==a||Ps.current||ki?("function"===typeof c&&(nA(t,r,c,n),a=t.memoizedState),(A=ki||iA(t,r,A,n,d,a,l))?(u||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(t.flags|=4194308)):("function"===typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=n,t.memoizedState=a),o.props=n,o.state=a,o.context=l,n=A):("function"===typeof o.componentDidMount&&(t.flags|=4194308),n=!1)}else{o=t.stateNode,Ti(e,t),A=t.memoizedProps,l=t.type===t.elementType?A:rA(t.type,A),o.props=l,u=t.pendingProps,d=o.context,"object"===typeof(a=r.contextType)&&null!==a?a=Fi(a):a=Ls(t,a=Ms(r)?Fs:Qs.current);var h=r.getDerivedStateFromProps;(c="function"===typeof h||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(A!==u||d!==a)&&AA(t,o,n,a),ki=!1,d=t.memoizedState,o.state=d,Oi(t,n,o,s);var f=t.memoizedState;A!==u||d!==f||Ps.current||ki?("function"===typeof h&&(nA(t,r,h,n),f=t.memoizedState),(l=ki||iA(t,r,l,n,d,f,a)||!1)?(c||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(n,f,a),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(n,f,a)),"function"===typeof o.componentDidUpdate&&(t.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof o.componentDidUpdate||A===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||A===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=n,t.memoizedState=f),o.props=n,o.state=f,o.context=a,n=l):("function"!==typeof o.componentDidUpdate||A===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||A===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),n=!1)}return QA(e,t,r,n,i,s)}function QA(e,t,r,n,s,i){xA(e,t);var o=0!==(128&t.flags);if(!n&&!o)return s&&Ts(t,r,!1),YA(e,t,i);n=t.stateNode,wA.current=t;var A=o&&"function"!==typeof r.getDerivedStateFromError?null:n.render();return t.flags|=1,null!==e&&o?(t.child=bi(t,e.child,null,i),t.child=bi(t,null,A,i)):bA(e,t,A,i),t.memoizedState=n.state,s&&Ts(t,r,!0),t.child}function PA(e){var t=e.stateNode;t.pendingContext?Ns(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ns(0,t.context,!1),Zi(e,t.containerInfo)}function FA(e,t,r,n,s){return hi(),fi(s),t.flags|=256,bA(e,t,r,n),t.child}var LA,MA,SA,NA,kA={dehydrated:null,treeContext:null,retryLane:0};function RA(e){return{baseLanes:e,cachePool:null,transitions:null}}function TA(e,t,r){var n,s=t.pendingProps,o=$i.current,A=!1,a=0!==(128&t.flags);if((n=a)||(n=(null===e||null!==e.memoizedState)&&0!==(2&o)),n?(A=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Is($i,1&o),null===e)return li(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(a=s.children,e=s.fallback,A?(s=t.mode,A=t.child,a={mode:"hidden",children:a},0===(1&s)&&null!==A?(A.childLanes=0,A.pendingProps=a):A=Rl(a,s,0,null),e=kl(e,s,r,null),A.return=t,e.return=t,A.sibling=e,t.child=A,t.child.memoizedState=RA(r),t.memoizedState=kA,e):WA(t,a));if(null!==(o=e.memoizedState)&&null!==(n=o.dehydrated))return function(e,t,r,n,s,o,A){if(r)return 256&t.flags?(t.flags&=-257,jA(e,t,A,n=cA(Error(i(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=n.fallback,s=t.mode,n=Rl({mode:"visible",children:n.children},s,0,null),(o=kl(o,s,A,null)).flags|=2,n.return=t,o.return=t,n.sibling=o,t.child=n,0!==(1&t.mode)&&bi(t,e.child,null,A),t.child.memoizedState=RA(A),t.memoizedState=kA,o);if(0===(1&t.mode))return jA(e,t,A,null);if("$!"===s.data){if(n=s.nextSibling&&s.nextSibling.dataset)var a=n.dgst;return n=a,jA(e,t,A,n=cA(o=Error(i(419)),n,void 0))}if(a=0!==(A&e.childLanes),vA||a){if(null!==(n=Pa)){switch(A&-A){case 4:s=2;break;case 16:s=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:s=32;break;case 536870912:s=268435456;break;default:s=0}0!==(s=0!==(s&(n.suspendedLanes|A))?0:s)&&s!==o.retryLane&&(o.retryLane=s,Ni(e,s),rl(n,e,s,-1))}return gl(),jA(e,t,A,n=cA(Error(i(421))))}return"$?"===s.data?(t.flags|=128,t.child=e.child,t=Dl.bind(null,e),s._reactRetry=t,null):(e=o.treeContext,ni=ls(s.nextSibling),ri=t,si=!0,ii=null,null!==e&&(Vs[qs++]=Ks,Vs[qs++]=Js,Vs[qs++]=Zs,Ks=e.id,Js=e.overflow,Zs=t),t=WA(t,n.children),t.flags|=4096,t)}(e,t,a,s,n,o,r);if(A){A=s.fallback,a=t.mode,n=(o=e.child).sibling;var l={mode:"hidden",children:s.children};return 0===(1&a)&&t.child!==o?((s=t.child).childLanes=0,s.pendingProps=l,t.deletions=null):(s=Sl(o,l)).subtreeFlags=14680064&o.subtreeFlags,null!==n?A=Sl(n,A):(A=kl(A,a,r,null)).flags|=2,A.return=t,s.return=t,s.sibling=A,t.child=s,s=A,A=t.child,a=null===(a=e.child.memoizedState)?RA(r):{baseLanes:a.baseLanes|r,cachePool:null,transitions:a.transitions},A.memoizedState=a,A.childLanes=e.childLanes&~r,t.memoizedState=kA,s}return e=(A=e.child).sibling,s=Sl(A,{mode:"visible",children:s.children}),0===(1&t.mode)&&(s.lanes=r),s.return=t,s.sibling=null,null!==e&&(null===(r=t.deletions)?(t.deletions=[e],t.flags|=16):r.push(e)),t.child=s,t.memoizedState=null,s}function WA(e,t){return(t=Rl({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function jA(e,t,r,n){return null!==n&&fi(n),bi(t,e.child,null,r),(e=WA(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function GA(e,t,r){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),Qi(e.return,t,r)}function XA(e,t,r,n,s){var i=e.memoizedState;null===i?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:r,tailMode:s}:(i.isBackwards=t,i.rendering=null,i.renderingStartTime=0,i.last=n,i.tail=r,i.tailMode=s)}function OA(e,t,r){var n=t.pendingProps,s=n.revealOrder,i=n.tail;if(bA(e,t,n.children,r),0!==(2&(n=$i.current)))n=1&n|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&GA(e,r,t);else if(19===e.tag)GA(e,r,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(Is($i,n),0===(1&t.mode))t.memoizedState=null;else switch(s){case"forwards":for(r=t.child,s=null;null!==r;)null!==(e=r.alternate)&&null===eo(e)&&(s=r),r=r.sibling;null===(r=s)?(s=t.child,t.child=null):(s=r.sibling,r.sibling=null),XA(t,!1,s,r,i);break;case"backwards":for(r=null,s=t.child,t.child=null;null!==s;){if(null!==(e=s.alternate)&&null===eo(e)){t.child=s;break}e=s.sibling,s.sibling=r,r=s,s=e}XA(t,!0,r,null,i);break;case"together":XA(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function zA(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function YA(e,t,r){if(null!==e&&(t.dependencies=e.dependencies),Ra|=t.lanes,0===(r&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(r=Sl(e=t.child,e.pendingProps),t.child=r,r.return=t;null!==e.sibling;)e=e.sibling,(r=r.sibling=Sl(e,e.pendingProps)).return=t;r.sibling=null}return t.child}function HA(e,t){if(!si)switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var n=null;null!==r;)null!==r.alternate&&(n=r),r=r.sibling;null===n?t||null===e.tail?e.tail=null:e.tail.sibling=null:n.sibling=null}}function UA(e){var t=null!==e.alternate&&e.alternate.child===e.child,r=0,n=0;if(t)for(var s=e.child;null!==s;)r|=s.lanes|s.childLanes,n|=14680064&s.subtreeFlags,n|=14680064&s.flags,s.return=e,s=s.sibling;else for(s=e.child;null!==s;)r|=s.lanes|s.childLanes,n|=s.subtreeFlags,n|=s.flags,s.return=e,s=s.sibling;return e.subtreeFlags|=n,e.childLanes=r,t}function VA(e,t,r){var n=t.pendingProps;switch(ti(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return UA(t),null;case 1:case 17:return Ms(t.type)&&Ss(),UA(t),null;case 3:return n=t.stateNode,Ki(),xs(Ps),xs(Qs),ro(),n.pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||(ui(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ii&&(ol(ii),ii=null))),MA(e,t),UA(t),null;case 5:_i(t);var s=qi(Vi.current);if(r=t.type,null!==e&&null!=t.stateNode)SA(e,t,r,n,s),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!n){if(null===t.stateNode)throw Error(i(166));return UA(t),null}if(e=qi(Hi.current),ui(t)){n=t.stateNode,r=t.type;var o=t.memoizedProps;switch(n[ds]=t,n[hs]=o,e=0!==(1&t.mode),r){case"dialog":jn("cancel",n),jn("close",n);break;case"iframe":case"object":case"embed":jn("load",n);break;case"video":case"audio":for(s=0;s<kn.length;s++)jn(kn[s],n);break;case"source":jn("error",n);break;case"img":case"image":case"link":jn("error",n),jn("load",n);break;case"details":jn("toggle",n);break;case"input":K(n,o),jn("invalid",n);break;case"select":n._wrapperState={wasMultiple:!!o.multiple},jn("invalid",n);break;case"textarea":se(n,o),jn("invalid",n)}for(var a in we(r,o),s=null,o)if(o.hasOwnProperty(a)){var l=o[a];"children"===a?"string"===typeof l?n.textContent!==l&&(!0!==o.suppressHydrationWarning&&_n(n.textContent,l,e),s=["children",l]):"number"===typeof l&&n.textContent!==""+l&&(!0!==o.suppressHydrationWarning&&_n(n.textContent,l,e),s=["children",""+l]):A.hasOwnProperty(a)&&null!=l&&"onScroll"===a&&jn("scroll",n)}switch(r){case"input":U(n),$(n,o,!0);break;case"textarea":U(n),oe(n);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(n.onclick=$n)}n=s,t.updateQueue=n,null!==n&&(t.flags|=4)}else{a=9===s.nodeType?s:s.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=Ae(r)),"http://www.w3.org/1999/xhtml"===e?"script"===r?((e=a.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof n.is?e=a.createElement(r,{is:n.is}):(e=a.createElement(r),"select"===r&&(a=e,n.multiple?a.multiple=!0:n.size&&(a.size=n.size))):e=a.createElementNS(e,r),e[ds]=t,e[hs]=n,LA(e,t,!1,!1),t.stateNode=e;e:{switch(a=ve(r,n),r){case"dialog":jn("cancel",e),jn("close",e),s=n;break;case"iframe":case"object":case"embed":jn("load",e),s=n;break;case"video":case"audio":for(s=0;s<kn.length;s++)jn(kn[s],e);s=n;break;case"source":jn("error",e),s=n;break;case"img":case"image":case"link":jn("error",e),jn("load",e),s=n;break;case"details":jn("toggle",e),s=n;break;case"input":K(e,n),s=Z(e,n),jn("invalid",e);break;case"option":default:s=n;break;case"select":e._wrapperState={wasMultiple:!!n.multiple},s=T({},n,{value:void 0}),jn("invalid",e);break;case"textarea":se(e,n),s=ne(e,n),jn("invalid",e)}for(o in we(r,s),l=s)if(l.hasOwnProperty(o)){var c=l[o];"style"===o?pe(e,c):"dangerouslySetInnerHTML"===o?null!=(c=c?c.__html:void 0)&&ue(e,c):"children"===o?"string"===typeof c?("textarea"!==r||""!==c)&&de(e,c):"number"===typeof c&&de(e,""+c):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(A.hasOwnProperty(o)?null!=c&&"onScroll"===o&&jn("scroll",e):null!=c&&v(e,o,c,a))}switch(r){case"input":U(e),$(e,n,!1);break;case"textarea":U(e),oe(e);break;case"option":null!=n.value&&e.setAttribute("value",""+Y(n.value));break;case"select":e.multiple=!!n.multiple,null!=(o=n.value)?re(e,!!n.multiple,o,!1):null!=n.defaultValue&&re(e,!!n.multiple,n.defaultValue,!0);break;default:"function"===typeof s.onClick&&(e.onclick=$n)}switch(r){case"button":case"input":case"select":case"textarea":n=!!n.autoFocus;break e;case"img":n=!0;break e;default:n=!1}}n&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return UA(t),null;case 6:if(e&&null!=t.stateNode)NA(e,t,e.memoizedProps,n);else{if("string"!==typeof n&&null===t.stateNode)throw Error(i(166));if(r=qi(Vi.current),qi(Hi.current),ui(t)){if(n=t.stateNode,r=t.memoizedProps,n[ds]=t,(o=n.nodeValue!==r)&&null!==(e=ri))switch(e.tag){case 3:_n(n.nodeValue,r,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&_n(n.nodeValue,r,0!==(1&e.mode))}o&&(t.flags|=4)}else(n=(9===r.nodeType?r:r.ownerDocument).createTextNode(n))[ds]=t,t.stateNode=n}return UA(t),null;case 13:if(xs($i),n=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(si&&null!==ni&&0!==(1&t.mode)&&0===(128&t.flags))di(),hi(),t.flags|=98560,o=!1;else if(o=ui(t),null!==n&&null!==n.dehydrated){if(null===e){if(!o)throw Error(i(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(i(317));o[ds]=t}else hi(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;UA(t),o=!1}else null!==ii&&(ol(ii),ii=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=r,t):((n=null!==n)!==(null!==e&&null!==e.memoizedState)&&n&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&$i.current)?0===Na&&(Na=3):gl())),null!==t.updateQueue&&(t.flags|=4),UA(t),null);case 4:return Ki(),MA(e,t),null===e&&On(t.stateNode.containerInfo),UA(t),null;case 10:return Di(t.type._context),UA(t),null;case 19:if(xs($i),null===(o=t.memoizedState))return UA(t),null;if(n=0!==(128&t.flags),null===(a=o.rendering))if(n)HA(o,!1);else{if(0!==Na||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(a=eo(e))){for(t.flags|=128,HA(o,!1),null!==(n=a.updateQueue)&&(t.updateQueue=n,t.flags|=4),t.subtreeFlags=0,n=r,r=t.child;null!==r;)e=n,(o=r).flags&=14680066,null===(a=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=a.childLanes,o.lanes=a.lanes,o.child=a.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=a.memoizedProps,o.memoizedState=a.memoizedState,o.updateQueue=a.updateQueue,o.type=a.type,e=a.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return Is($i,1&$i.current|2),t.child}e=e.sibling}null!==o.tail&&Je()>Oa&&(t.flags|=128,n=!0,HA(o,!1),t.lanes=4194304)}else{if(!n)if(null!==(e=eo(a))){if(t.flags|=128,n=!0,null!==(r=e.updateQueue)&&(t.updateQueue=r,t.flags|=4),HA(o,!0),null===o.tail&&"hidden"===o.tailMode&&!a.alternate&&!si)return UA(t),null}else 2*Je()-o.renderingStartTime>Oa&&1073741824!==r&&(t.flags|=128,n=!0,HA(o,!1),t.lanes=4194304);o.isBackwards?(a.sibling=t.child,t.child=a):(null!==(r=o.last)?r.sibling=a:t.child=a,o.last=a)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Je(),t.sibling=null,r=$i.current,Is($i,n?1&r|2:1&r),t):(UA(t),null);case 22:case 23:return ul(),n=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==n&&(t.flags|=8192),n&&0!==(1&t.mode)?0!==(1073741824&Ma)&&(UA(t),6&t.subtreeFlags&&(t.flags|=8192)):UA(t),null;case 24:case 25:return null}throw Error(i(156,t.tag))}function qA(e,t){switch(ti(t),t.tag){case 1:return Ms(t.type)&&Ss(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Ki(),xs(Ps),xs(Qs),ro(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return _i(t),null;case 13:if(xs($i),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(i(340));hi()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return xs($i),null;case 4:return Ki(),null;case 10:return Di(t.type._context),null;case 22:case 23:return ul(),null;default:return null}}LA=function(e,t){for(var r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},MA=function(){},SA=function(e,t,r,n){var s=e.memoizedProps;if(s!==n){e=t.stateNode,qi(Hi.current);var i,o=null;switch(r){case"input":s=Z(e,s),n=Z(e,n),o=[];break;case"select":s=T({},s,{value:void 0}),n=T({},n,{value:void 0}),o=[];break;case"textarea":s=ne(e,s),n=ne(e,n),o=[];break;default:"function"!==typeof s.onClick&&"function"===typeof n.onClick&&(e.onclick=$n)}for(c in we(r,n),r=null,s)if(!n.hasOwnProperty(c)&&s.hasOwnProperty(c)&&null!=s[c])if("style"===c){var a=s[c];for(i in a)a.hasOwnProperty(i)&&(r||(r={}),r[i]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(A.hasOwnProperty(c)?o||(o=[]):(o=o||[]).push(c,null));for(c in n){var l=n[c];if(a=null!=s?s[c]:void 0,n.hasOwnProperty(c)&&l!==a&&(null!=l||null!=a))if("style"===c)if(a){for(i in a)!a.hasOwnProperty(i)||l&&l.hasOwnProperty(i)||(r||(r={}),r[i]="");for(i in l)l.hasOwnProperty(i)&&a[i]!==l[i]&&(r||(r={}),r[i]=l[i])}else r||(o||(o=[]),o.push(c,r)),r=l;else"dangerouslySetInnerHTML"===c?(l=l?l.__html:void 0,a=a?a.__html:void 0,null!=l&&a!==l&&(o=o||[]).push(c,l)):"children"===c?"string"!==typeof l&&"number"!==typeof l||(o=o||[]).push(c,""+l):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(A.hasOwnProperty(c)?(null!=l&&"onScroll"===c&&jn("scroll",e),o||a===l||(o=[])):(o=o||[]).push(c,l))}r&&(o=o||[]).push("style",r);var c=o;(t.updateQueue=c)&&(t.flags|=4)}},NA=function(e,t,r,n){r!==n&&(t.flags|=4)};var ZA=!1,KA=!1,JA="function"===typeof WeakSet?WeakSet:Set,_A=null;function $A(e,t){var r=e.ref;if(null!==r)if("function"===typeof r)try{r(null)}catch(n){Cl(e,t,n)}else r.current=null}function ea(e,t,r){try{r()}catch(n){Cl(e,t,n)}}var ta=!1;function ra(e,t,r){var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var s=n=n.next;do{if((s.tag&e)===e){var i=s.destroy;s.destroy=void 0,void 0!==i&&ea(t,r,i)}s=s.next}while(s!==n)}}function na(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var r=t=t.next;do{if((r.tag&e)===e){var n=r.create;r.destroy=n()}r=r.next}while(r!==t)}}function sa(e){var t=e.ref;if(null!==t){var r=e.stateNode;e.tag,e=r,"function"===typeof t?t(e):t.current=e}}function ia(e){var t=e.alternate;null!==t&&(e.alternate=null,ia(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[ds],delete t[hs],delete t[gs],delete t[ps],delete t[ms])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function oa(e){return 5===e.tag||3===e.tag||4===e.tag}function Aa(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||oa(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function aa(e,t,r){var n=e.tag;if(5===n||6===n)e=e.stateNode,t?8===r.nodeType?r.parentNode.insertBefore(e,t):r.insertBefore(e,t):(8===r.nodeType?(t=r.parentNode).insertBefore(e,r):(t=r).appendChild(e),null!==(r=r._reactRootContainer)&&void 0!==r||null!==t.onclick||(t.onclick=$n));else if(4!==n&&null!==(e=e.child))for(aa(e,t,r),e=e.sibling;null!==e;)aa(e,t,r),e=e.sibling}function la(e,t,r){var n=e.tag;if(5===n||6===n)e=e.stateNode,t?r.insertBefore(e,t):r.appendChild(e);else if(4!==n&&null!==(e=e.child))for(la(e,t,r),e=e.sibling;null!==e;)la(e,t,r),e=e.sibling}var ca=null,ua=!1;function da(e,t,r){for(r=r.child;null!==r;)ha(e,t,r),r=r.sibling}function ha(e,t,r){if(it&&"function"===typeof it.onCommitFiberUnmount)try{it.onCommitFiberUnmount(st,r)}catch(A){}switch(r.tag){case 5:KA||$A(r,t);case 6:var n=ca,s=ua;ca=null,da(e,t,r),ua=s,null!==(ca=n)&&(ua?(e=ca,r=r.stateNode,8===e.nodeType?e.parentNode.removeChild(r):e.removeChild(r)):ca.removeChild(r.stateNode));break;case 18:null!==ca&&(ua?(e=ca,r=r.stateNode,8===e.nodeType?as(e.parentNode,r):1===e.nodeType&&as(e,r),Ot(e)):as(ca,r.stateNode));break;case 4:n=ca,s=ua,ca=r.stateNode.containerInfo,ua=!0,da(e,t,r),ca=n,ua=s;break;case 0:case 11:case 14:case 15:if(!KA&&(null!==(n=r.updateQueue)&&null!==(n=n.lastEffect))){s=n=n.next;do{var i=s,o=i.destroy;i=i.tag,void 0!==o&&(0!==(2&i)||0!==(4&i))&&ea(r,t,o),s=s.next}while(s!==n)}da(e,t,r);break;case 1:if(!KA&&($A(r,t),"function"===typeof(n=r.stateNode).componentWillUnmount))try{n.props=r.memoizedProps,n.state=r.memoizedState,n.componentWillUnmount()}catch(A){Cl(r,t,A)}da(e,t,r);break;case 21:da(e,t,r);break;case 22:1&r.mode?(KA=(n=KA)||null!==r.memoizedState,da(e,t,r),KA=n):da(e,t,r);break;default:da(e,t,r)}}function fa(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new JA),t.forEach((function(t){var n=Ql.bind(null,e,t);r.has(t)||(r.add(t),t.then(n,n))}))}}function ga(e,t){var r=t.deletions;if(null!==r)for(var n=0;n<r.length;n++){var s=r[n];try{var o=e,A=t,a=A;e:for(;null!==a;){switch(a.tag){case 5:ca=a.stateNode,ua=!1;break e;case 3:case 4:ca=a.stateNode.containerInfo,ua=!0;break e}a=a.return}if(null===ca)throw Error(i(160));ha(o,A,s),ca=null,ua=!1;var l=s.alternate;null!==l&&(l.return=null),s.return=null}catch(c){Cl(s,t,c)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)pa(t,e),t=t.sibling}function pa(e,t){var r=e.alternate,n=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ga(t,e),ma(e),4&n){try{ra(3,e,e.return),na(3,e)}catch(p){Cl(e,e.return,p)}try{ra(5,e,e.return)}catch(p){Cl(e,e.return,p)}}break;case 1:ga(t,e),ma(e),512&n&&null!==r&&$A(r,r.return);break;case 5:if(ga(t,e),ma(e),512&n&&null!==r&&$A(r,r.return),32&e.flags){var s=e.stateNode;try{de(s,"")}catch(p){Cl(e,e.return,p)}}if(4&n&&null!=(s=e.stateNode)){var o=e.memoizedProps,A=null!==r?r.memoizedProps:o,a=e.type,l=e.updateQueue;if(e.updateQueue=null,null!==l)try{"input"===a&&"radio"===o.type&&null!=o.name&&J(s,o),ve(a,A);var c=ve(a,o);for(A=0;A<l.length;A+=2){var u=l[A],d=l[A+1];"style"===u?pe(s,d):"dangerouslySetInnerHTML"===u?ue(s,d):"children"===u?de(s,d):v(s,u,d,c)}switch(a){case"input":_(s,o);break;case"textarea":ie(s,o);break;case"select":var h=s._wrapperState.wasMultiple;s._wrapperState.wasMultiple=!!o.multiple;var f=o.value;null!=f?re(s,!!o.multiple,f,!1):h!==!!o.multiple&&(null!=o.defaultValue?re(s,!!o.multiple,o.defaultValue,!0):re(s,!!o.multiple,o.multiple?[]:"",!1))}s[hs]=o}catch(p){Cl(e,e.return,p)}}break;case 6:if(ga(t,e),ma(e),4&n){if(null===e.stateNode)throw Error(i(162));s=e.stateNode,o=e.memoizedProps;try{s.nodeValue=o}catch(p){Cl(e,e.return,p)}}break;case 3:if(ga(t,e),ma(e),4&n&&null!==r&&r.memoizedState.isDehydrated)try{Ot(t.containerInfo)}catch(p){Cl(e,e.return,p)}break;case 4:default:ga(t,e),ma(e);break;case 13:ga(t,e),ma(e),8192&(s=e.child).flags&&(o=null!==s.memoizedState,s.stateNode.isHidden=o,!o||null!==s.alternate&&null!==s.alternate.memoizedState||(Xa=Je())),4&n&&fa(e);break;case 22:if(u=null!==r&&null!==r.memoizedState,1&e.mode?(KA=(c=KA)||u,ga(t,e),KA=c):ga(t,e),ma(e),8192&n){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!u&&0!==(1&e.mode))for(_A=e,u=e.child;null!==u;){for(d=_A=u;null!==_A;){switch(f=(h=_A).child,h.tag){case 0:case 11:case 14:case 15:ra(4,h,h.return);break;case 1:$A(h,h.return);var g=h.stateNode;if("function"===typeof g.componentWillUnmount){n=h,r=h.return;try{t=n,g.props=t.memoizedProps,g.state=t.memoizedState,g.componentWillUnmount()}catch(p){Cl(n,r,p)}}break;case 5:$A(h,h.return);break;case 22:if(null!==h.memoizedState){ya(d);continue}}null!==f?(f.return=h,_A=f):ya(d)}u=u.sibling}e:for(u=null,d=e;;){if(5===d.tag){if(null===u){u=d;try{s=d.stateNode,c?"function"===typeof(o=s.style).setProperty?o.setProperty("display","none","important"):o.display="none":(a=d.stateNode,A=void 0!==(l=d.memoizedProps.style)&&null!==l&&l.hasOwnProperty("display")?l.display:null,a.style.display=ge("display",A))}catch(p){Cl(e,e.return,p)}}}else if(6===d.tag){if(null===u)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(p){Cl(e,e.return,p)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;u===d&&(u=null),d=d.return}u===d&&(u=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:ga(t,e),ma(e),4&n&&fa(e);case 21:}}function ma(e){var t=e.flags;if(2&t){try{e:{for(var r=e.return;null!==r;){if(oa(r)){var n=r;break e}r=r.return}throw Error(i(160))}switch(n.tag){case 5:var s=n.stateNode;32&n.flags&&(de(s,""),n.flags&=-33),la(e,Aa(e),s);break;case 3:case 4:var o=n.stateNode.containerInfo;aa(e,Aa(e),o);break;default:throw Error(i(161))}}catch(A){Cl(e,e.return,A)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function wa(e,t,r){_A=e,va(e,t,r)}function va(e,t,r){for(var n=0!==(1&e.mode);null!==_A;){var s=_A,i=s.child;if(22===s.tag&&n){var o=null!==s.memoizedState||ZA;if(!o){var A=s.alternate,a=null!==A&&null!==A.memoizedState||KA;A=ZA;var l=KA;if(ZA=o,(KA=a)&&!l)for(_A=s;null!==_A;)a=(o=_A).child,22===o.tag&&null!==o.memoizedState?Ba(s):null!==a?(a.return=o,_A=a):Ba(s);for(;null!==i;)_A=i,va(i,t,r),i=i.sibling;_A=s,ZA=A,KA=l}ba(e)}else 0!==(8772&s.subtreeFlags)&&null!==i?(i.return=s,_A=i):ba(e)}}function ba(e){for(;null!==_A;){var t=_A;if(0!==(8772&t.flags)){var r=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:KA||na(5,t);break;case 1:var n=t.stateNode;if(4&t.flags&&!KA)if(null===r)n.componentDidMount();else{var s=t.elementType===t.type?r.memoizedProps:rA(t.type,r.memoizedProps);n.componentDidUpdate(s,r.memoizedState,n.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&zi(t,o,n);break;case 3:var A=t.updateQueue;if(null!==A){if(r=null,null!==t.child)switch(t.child.tag){case 5:case 1:r=t.child.stateNode}zi(t,A,r)}break;case 5:var a=t.stateNode;if(null===r&&4&t.flags){r=a;var l=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&r.focus();break;case"img":l.src&&(r.src=l.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var u=c.memoizedState;if(null!==u){var d=u.dehydrated;null!==d&&Ot(d)}}}break;default:throw Error(i(163))}KA||512&t.flags&&sa(t)}catch(h){Cl(t,t.return,h)}}if(t===e){_A=null;break}if(null!==(r=t.sibling)){r.return=t.return,_A=r;break}_A=t.return}}function ya(e){for(;null!==_A;){var t=_A;if(t===e){_A=null;break}var r=t.sibling;if(null!==r){r.return=t.return,_A=r;break}_A=t.return}}function Ba(e){for(;null!==_A;){var t=_A;try{switch(t.tag){case 0:case 11:case 15:var r=t.return;try{na(4,t)}catch(a){Cl(t,r,a)}break;case 1:var n=t.stateNode;if("function"===typeof n.componentDidMount){var s=t.return;try{n.componentDidMount()}catch(a){Cl(t,s,a)}}var i=t.return;try{sa(t)}catch(a){Cl(t,i,a)}break;case 5:var o=t.return;try{sa(t)}catch(a){Cl(t,o,a)}}}catch(a){Cl(t,t.return,a)}if(t===e){_A=null;break}var A=t.sibling;if(null!==A){A.return=t.return,_A=A;break}_A=t.return}}var Ea,Ca=Math.ceil,xa=b.ReactCurrentDispatcher,Ia=b.ReactCurrentOwner,Da=b.ReactCurrentBatchConfig,Qa=0,Pa=null,Fa=null,La=0,Ma=0,Sa=Cs(0),Na=0,ka=null,Ra=0,Ta=0,Wa=0,ja=null,Ga=null,Xa=0,Oa=1/0,za=null,Ya=!1,Ha=null,Ua=null,Va=!1,qa=null,Za=0,Ka=0,Ja=null,_a=-1,$a=0;function el(){return 0!==(6&Qa)?Je():-1!==_a?_a:_a=Je()}function tl(e){return 0===(1&e.mode)?1:0!==(2&Qa)&&0!==La?La&-La:null!==gi.transition?(0===$a&&($a=gt()),$a):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Kt(e.type)}function rl(e,t,r,n){if(50<Ka)throw Ka=0,Ja=null,Error(i(185));mt(e,r,n),0!==(2&Qa)&&e===Pa||(e===Pa&&(0===(2&Qa)&&(Ta|=r),4===Na&&Al(e,La)),nl(e,n),1===r&&0===Qa&&0===(1&t.mode)&&(Oa=Je()+500,js&&Os()))}function nl(e,t){var r=e.callbackNode;!function(e,t){for(var r=e.suspendedLanes,n=e.pingedLanes,s=e.expirationTimes,i=e.pendingLanes;0<i;){var o=31-ot(i),A=1<<o,a=s[o];-1===a?0!==(A&r)&&0===(A&n)||(s[o]=ht(A,t)):a<=t&&(e.expiredLanes|=A),i&=~A}}(e,t);var n=dt(e,e===Pa?La:0);if(0===n)null!==r&&qe(r),e.callbackNode=null,e.callbackPriority=0;else if(t=n&-n,e.callbackPriority!==t){if(null!=r&&qe(r),1===t)0===e.tag?function(e){js=!0,Xs(e)}(al.bind(null,e)):Xs(al.bind(null,e)),os((function(){0===(6&Qa)&&Os()})),r=null;else{switch(bt(n)){case 1:r=$e;break;case 4:r=et;break;case 16:default:r=tt;break;case 536870912:r=nt}r=Pl(r,sl.bind(null,e))}e.callbackPriority=t,e.callbackNode=r}}function sl(e,t){if(_a=-1,$a=0,0!==(6&Qa))throw Error(i(327));var r=e.callbackNode;if(Bl()&&e.callbackNode!==r)return null;var n=dt(e,e===Pa?La:0);if(0===n)return null;if(0!==(30&n)||0!==(n&e.expiredLanes)||t)t=pl(e,n);else{t=n;var s=Qa;Qa|=2;var o=fl();for(Pa===e&&La===t||(za=null,Oa=Je()+500,dl(e,t));;)try{wl();break}catch(a){hl(e,a)}Ii(),xa.current=o,Qa=s,null!==Fa?t=0:(Pa=null,La=0,t=Na)}if(0!==t){if(2===t&&(0!==(s=ft(e))&&(n=s,t=il(e,s))),1===t)throw r=ka,dl(e,0),Al(e,n),nl(e,Je()),r;if(6===t)Al(e,n);else{if(s=e.current.alternate,0===(30&n)&&!function(e){for(var t=e;;){if(16384&t.flags){var r=t.updateQueue;if(null!==r&&null!==(r=r.stores))for(var n=0;n<r.length;n++){var s=r[n],i=s.getSnapshot;s=s.value;try{if(!An(i(),s))return!1}catch(A){return!1}}}if(r=t.child,16384&t.subtreeFlags&&null!==r)r.return=t,t=r;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(s)&&(2===(t=pl(e,n))&&(0!==(o=ft(e))&&(n=o,t=il(e,o))),1===t))throw r=ka,dl(e,0),Al(e,n),nl(e,Je()),r;switch(e.finishedWork=s,e.finishedLanes=n,t){case 0:case 1:throw Error(i(345));case 2:case 5:yl(e,Ga,za);break;case 3:if(Al(e,n),(130023424&n)===n&&10<(t=Xa+500-Je())){if(0!==dt(e,0))break;if(((s=e.suspendedLanes)&n)!==n){el(),e.pingedLanes|=e.suspendedLanes&s;break}e.timeoutHandle=ns(yl.bind(null,e,Ga,za),t);break}yl(e,Ga,za);break;case 4:if(Al(e,n),(4194240&n)===n)break;for(t=e.eventTimes,s=-1;0<n;){var A=31-ot(n);o=1<<A,(A=t[A])>s&&(s=A),n&=~o}if(n=s,10<(n=(120>(n=Je()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Ca(n/1960))-n)){e.timeoutHandle=ns(yl.bind(null,e,Ga,za),n);break}yl(e,Ga,za);break;default:throw Error(i(329))}}}return nl(e,Je()),e.callbackNode===r?sl.bind(null,e):null}function il(e,t){var r=ja;return e.current.memoizedState.isDehydrated&&(dl(e,t).flags|=256),2!==(e=pl(e,t))&&(t=Ga,Ga=r,null!==t&&ol(t)),e}function ol(e){null===Ga?Ga=e:Ga.push.apply(Ga,e)}function Al(e,t){for(t&=~Wa,t&=~Ta,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var r=31-ot(t),n=1<<r;e[r]=-1,t&=~n}}function al(e){if(0!==(6&Qa))throw Error(i(327));Bl();var t=dt(e,0);if(0===(1&t))return nl(e,Je()),null;var r=pl(e,t);if(0!==e.tag&&2===r){var n=ft(e);0!==n&&(t=n,r=il(e,n))}if(1===r)throw r=ka,dl(e,0),Al(e,t),nl(e,Je()),r;if(6===r)throw Error(i(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,yl(e,Ga,za),nl(e,Je()),null}function ll(e,t){var r=Qa;Qa|=1;try{return e(t)}finally{0===(Qa=r)&&(Oa=Je()+500,js&&Os())}}function cl(e){null!==qa&&0===qa.tag&&0===(6&Qa)&&Bl();var t=Qa;Qa|=1;var r=Da.transition,n=vt;try{if(Da.transition=null,vt=1,e)return e()}finally{vt=n,Da.transition=r,0===(6&(Qa=t))&&Os()}}function ul(){Ma=Sa.current,xs(Sa)}function dl(e,t){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,ss(r)),null!==Fa)for(r=Fa.return;null!==r;){var n=r;switch(ti(n),n.tag){case 1:null!==(n=n.type.childContextTypes)&&void 0!==n&&Ss();break;case 3:Ki(),xs(Ps),xs(Qs),ro();break;case 5:_i(n);break;case 4:Ki();break;case 13:case 19:xs($i);break;case 10:Di(n.type._context);break;case 22:case 23:ul()}r=r.return}if(Pa=e,Fa=e=Sl(e.current,null),La=Ma=t,Na=0,ka=null,Wa=Ta=Ra=0,Ga=ja=null,null!==Li){for(t=0;t<Li.length;t++)if(null!==(n=(r=Li[t]).interleaved)){r.interleaved=null;var s=n.next,i=r.pending;if(null!==i){var o=i.next;i.next=s,n.next=o}r.pending=n}Li=null}return e}function hl(e,t){for(;;){var r=Fa;try{if(Ii(),no.current=_o,lo){for(var n=oo.memoizedState;null!==n;){var s=n.queue;null!==s&&(s.pending=null),n=n.next}lo=!1}if(io=0,ao=Ao=oo=null,co=!1,uo=0,Ia.current=null,null===r||null===r.return){Na=1,ka=t,Fa=null;break}e:{var o=e,A=r.return,a=r,l=t;if(t=La,a.flags|=32768,null!==l&&"object"===typeof l&&"function"===typeof l.then){var c=l,u=a,d=u.tag;if(0===(1&u.mode)&&(0===d||11===d||15===d)){var h=u.alternate;h?(u.updateQueue=h.updateQueue,u.memoizedState=h.memoizedState,u.lanes=h.lanes):(u.updateQueue=null,u.memoizedState=null)}var f=pA(A);if(null!==f){f.flags&=-257,mA(f,A,a,0,t),1&f.mode&&gA(o,c,t),l=c;var g=(t=f).updateQueue;if(null===g){var p=new Set;p.add(l),t.updateQueue=p}else g.add(l);break e}if(0===(1&t)){gA(o,c,t),gl();break e}l=Error(i(426))}else if(si&&1&a.mode){var m=pA(A);if(null!==m){0===(65536&m.flags)&&(m.flags|=256),mA(m,A,a,0,t),fi(lA(l,a));break e}}o=l=lA(l,a),4!==Na&&(Na=2),null===ja?ja=[o]:ja.push(o),o=A;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Xi(o,hA(0,l,t));break e;case 1:a=l;var w=o.type,v=o.stateNode;if(0===(128&o.flags)&&("function"===typeof w.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===Ua||!Ua.has(v)))){o.flags|=65536,t&=-t,o.lanes|=t,Xi(o,fA(o,a,t));break e}}o=o.return}while(null!==o)}bl(r)}catch(b){t=b,Fa===r&&null!==r&&(Fa=r=r.return);continue}break}}function fl(){var e=xa.current;return xa.current=_o,null===e?_o:e}function gl(){0!==Na&&3!==Na&&2!==Na||(Na=4),null===Pa||0===(268435455&Ra)&&0===(268435455&Ta)||Al(Pa,La)}function pl(e,t){var r=Qa;Qa|=2;var n=fl();for(Pa===e&&La===t||(za=null,dl(e,t));;)try{ml();break}catch(s){hl(e,s)}if(Ii(),Qa=r,xa.current=n,null!==Fa)throw Error(i(261));return Pa=null,La=0,Na}function ml(){for(;null!==Fa;)vl(Fa)}function wl(){for(;null!==Fa&&!Ze();)vl(Fa)}function vl(e){var t=Ea(e.alternate,e,Ma);e.memoizedProps=e.pendingProps,null===t?bl(e):Fa=t,Ia.current=null}function bl(e){var t=e;do{var r=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(r=VA(r,t,Ma)))return void(Fa=r)}else{if(null!==(r=qA(r,t)))return r.flags&=32767,void(Fa=r);if(null===e)return Na=6,void(Fa=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Fa=t);Fa=t=e}while(null!==t);0===Na&&(Na=5)}function yl(e,t,r){var n=vt,s=Da.transition;try{Da.transition=null,vt=1,function(e,t,r,n){do{Bl()}while(null!==qa);if(0!==(6&Qa))throw Error(i(327));r=e.finishedWork;var s=e.finishedLanes;if(null===r)return null;if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(i(177));e.callbackNode=null,e.callbackPriority=0;var o=r.lanes|r.childLanes;if(function(e,t){var r=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var n=e.eventTimes;for(e=e.expirationTimes;0<r;){var s=31-ot(r),i=1<<s;t[s]=0,n[s]=-1,e[s]=-1,r&=~i}}(e,o),e===Pa&&(Fa=Pa=null,La=0),0===(2064&r.subtreeFlags)&&0===(2064&r.flags)||Va||(Va=!0,Pl(tt,(function(){return Bl(),null}))),o=0!==(15990&r.flags),0!==(15990&r.subtreeFlags)||o){o=Da.transition,Da.transition=null;var A=vt;vt=1;var a=Qa;Qa|=4,Ia.current=null,function(e,t){if(es=Yt,hn(e=dn())){if("selectionStart"in e)var r={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(r=(r=e.ownerDocument)&&r.defaultView||window).getSelection&&r.getSelection();if(n&&0!==n.rangeCount){r=n.anchorNode;var s=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{r.nodeType,o.nodeType}catch(y){r=null;break e}var A=0,a=-1,l=-1,c=0,u=0,d=e,h=null;t:for(;;){for(var f;d!==r||0!==s&&3!==d.nodeType||(a=A+s),d!==o||0!==n&&3!==d.nodeType||(l=A+n),3===d.nodeType&&(A+=d.nodeValue.length),null!==(f=d.firstChild);)h=d,d=f;for(;;){if(d===e)break t;if(h===r&&++c===s&&(a=A),h===o&&++u===n&&(l=A),null!==(f=d.nextSibling))break;h=(d=h).parentNode}d=f}r=-1===a||-1===l?null:{start:a,end:l}}else r=null}r=r||{start:0,end:0}}else r=null;for(ts={focusedElem:e,selectionRange:r},Yt=!1,_A=t;null!==_A;)if(e=(t=_A).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,_A=e;else for(;null!==_A;){t=_A;try{var g=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==g){var p=g.memoizedProps,m=g.memoizedState,w=t.stateNode,v=w.getSnapshotBeforeUpdate(t.elementType===t.type?p:rA(t.type,p),m);w.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var b=t.stateNode.containerInfo;1===b.nodeType?b.textContent="":9===b.nodeType&&b.documentElement&&b.removeChild(b.documentElement);break;default:throw Error(i(163))}}catch(y){Cl(t,t.return,y)}if(null!==(e=t.sibling)){e.return=t.return,_A=e;break}_A=t.return}g=ta,ta=!1}(e,r),pa(r,e),fn(ts),Yt=!!es,ts=es=null,e.current=r,wa(r,e,s),Ke(),Qa=a,vt=A,Da.transition=o}else e.current=r;if(Va&&(Va=!1,qa=e,Za=s),o=e.pendingLanes,0===o&&(Ua=null),function(e){if(it&&"function"===typeof it.onCommitFiberRoot)try{it.onCommitFiberRoot(st,e,void 0,128===(128&e.current.flags))}catch(t){}}(r.stateNode),nl(e,Je()),null!==t)for(n=e.onRecoverableError,r=0;r<t.length;r++)s=t[r],n(s.value,{componentStack:s.stack,digest:s.digest});if(Ya)throw Ya=!1,e=Ha,Ha=null,e;0!==(1&Za)&&0!==e.tag&&Bl(),o=e.pendingLanes,0!==(1&o)?e===Ja?Ka++:(Ka=0,Ja=e):Ka=0,Os()}(e,t,r,n)}finally{Da.transition=s,vt=n}return null}function Bl(){if(null!==qa){var e=bt(Za),t=Da.transition,r=vt;try{if(Da.transition=null,vt=16>e?16:e,null===qa)var n=!1;else{if(e=qa,qa=null,Za=0,0!==(6&Qa))throw Error(i(331));var s=Qa;for(Qa|=4,_A=e.current;null!==_A;){var o=_A,A=o.child;if(0!==(16&_A.flags)){var a=o.deletions;if(null!==a){for(var l=0;l<a.length;l++){var c=a[l];for(_A=c;null!==_A;){var u=_A;switch(u.tag){case 0:case 11:case 15:ra(8,u,o)}var d=u.child;if(null!==d)d.return=u,_A=d;else for(;null!==_A;){var h=(u=_A).sibling,f=u.return;if(ia(u),u===c){_A=null;break}if(null!==h){h.return=f,_A=h;break}_A=f}}}var g=o.alternate;if(null!==g){var p=g.child;if(null!==p){g.child=null;do{var m=p.sibling;p.sibling=null,p=m}while(null!==p)}}_A=o}}if(0!==(2064&o.subtreeFlags)&&null!==A)A.return=o,_A=A;else e:for(;null!==_A;){if(0!==(2048&(o=_A).flags))switch(o.tag){case 0:case 11:case 15:ra(9,o,o.return)}var w=o.sibling;if(null!==w){w.return=o.return,_A=w;break e}_A=o.return}}var v=e.current;for(_A=v;null!==_A;){var b=(A=_A).child;if(0!==(2064&A.subtreeFlags)&&null!==b)b.return=A,_A=b;else e:for(A=v;null!==_A;){if(0!==(2048&(a=_A).flags))try{switch(a.tag){case 0:case 11:case 15:na(9,a)}}catch(B){Cl(a,a.return,B)}if(a===A){_A=null;break e}var y=a.sibling;if(null!==y){y.return=a.return,_A=y;break e}_A=a.return}}if(Qa=s,Os(),it&&"function"===typeof it.onPostCommitFiberRoot)try{it.onPostCommitFiberRoot(st,e)}catch(B){}n=!0}return n}finally{vt=r,Da.transition=t}}return!1}function El(e,t,r){e=ji(e,t=hA(0,t=lA(r,t),1),1),t=el(),null!==e&&(mt(e,1,t),nl(e,t))}function Cl(e,t,r){if(3===e.tag)El(e,e,r);else for(;null!==t;){if(3===t.tag){El(t,e,r);break}if(1===t.tag){var n=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof n.componentDidCatch&&(null===Ua||!Ua.has(n))){t=ji(t,e=fA(t,e=lA(r,e),1),1),e=el(),null!==t&&(mt(t,1,e),nl(t,e));break}}t=t.return}}function xl(e,t,r){var n=e.pingCache;null!==n&&n.delete(t),t=el(),e.pingedLanes|=e.suspendedLanes&r,Pa===e&&(La&r)===r&&(4===Na||3===Na&&(130023424&La)===La&&500>Je()-Xa?dl(e,0):Wa|=r),nl(e,t)}function Il(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ct,0===(130023424&(ct<<=1))&&(ct=4194304)));var r=el();null!==(e=Ni(e,t))&&(mt(e,t,r),nl(e,r))}function Dl(e){var t=e.memoizedState,r=0;null!==t&&(r=t.retryLane),Il(e,r)}function Ql(e,t){var r=0;switch(e.tag){case 13:var n=e.stateNode,s=e.memoizedState;null!==s&&(r=s.retryLane);break;case 19:n=e.stateNode;break;default:throw Error(i(314))}null!==n&&n.delete(t),Il(e,r)}function Pl(e,t){return Ve(e,t)}function Fl(e,t,r,n){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ll(e,t,r,n){return new Fl(e,t,r,n)}function Ml(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Sl(e,t){var r=e.alternate;return null===r?((r=Ll(e.tag,t,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.type=e.type,r.flags=0,r.subtreeFlags=0,r.deletions=null),r.flags=14680064&e.flags,r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Nl(e,t,r,n,s,o){var A=2;if(n=e,"function"===typeof e)Ml(e)&&(A=1);else if("string"===typeof e)A=5;else e:switch(e){case E:return kl(r.children,s,o,t);case C:A=8,s|=8;break;case x:return(e=Ll(12,r,t,2|s)).elementType=x,e.lanes=o,e;case P:return(e=Ll(13,r,t,s)).elementType=P,e.lanes=o,e;case F:return(e=Ll(19,r,t,s)).elementType=F,e.lanes=o,e;case S:return Rl(r,s,o,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case I:A=10;break e;case D:A=9;break e;case Q:A=11;break e;case L:A=14;break e;case M:A=16,n=null;break e}throw Error(i(130,null==e?e:typeof e,""))}return(t=Ll(A,r,t,s)).elementType=e,t.type=n,t.lanes=o,t}function kl(e,t,r,n){return(e=Ll(7,e,n,t)).lanes=r,e}function Rl(e,t,r,n){return(e=Ll(22,e,n,t)).elementType=S,e.lanes=r,e.stateNode={isHidden:!1},e}function Tl(e,t,r){return(e=Ll(6,e,null,t)).lanes=r,e}function Wl(e,t,r){return(t=Ll(4,null!==e.children?e.children:[],e.key,t)).lanes=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function jl(e,t,r,n,s){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=pt(0),this.expirationTimes=pt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=pt(0),this.identifierPrefix=n,this.onRecoverableError=s,this.mutableSourceEagerHydrationData=null}function Gl(e,t,r,n,s,i,o,A,a){return e=new jl(e,t,r,A,a),1===t?(t=1,!0===i&&(t|=8)):t=0,i=Ll(3,null,null,t),e.current=i,i.stateNode=e,i.memoizedState={element:n,isDehydrated:r,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ri(i),e}function Xl(e){if(!e)return Ds;e:{if(Oe(e=e._reactInternals)!==e||1!==e.tag)throw Error(i(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ms(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(i(171))}if(1===e.tag){var r=e.type;if(Ms(r))return ks(e,r,t)}return t}function Ol(e,t,r,n,s,i,o,A,a){return(e=Gl(r,n,!0,e,0,i,0,A,a)).context=Xl(null),r=e.current,(i=Wi(n=el(),s=tl(r))).callback=void 0!==t&&null!==t?t:null,ji(r,i,s),e.current.lanes=s,mt(e,s,n),nl(e,n),e}function zl(e,t,r,n){var s=t.current,i=el(),o=tl(s);return r=Xl(r),null===t.context?t.context=r:t.pendingContext=r,(t=Wi(i,o)).payload={element:e},null!==(n=void 0===n?null:n)&&(t.callback=n),null!==(e=ji(s,t,o))&&(rl(e,s,o,i),Gi(e,s,o)),o}function Yl(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Hl(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var r=e.retryLane;e.retryLane=0!==r&&r<t?r:t}}function Ul(e,t){Hl(e,t),(e=e.alternate)&&Hl(e,t)}Ea=function(e,t,r){if(null!==e)if(e.memoizedProps!==t.pendingProps||Ps.current)vA=!0;else{if(0===(e.lanes&r)&&0===(128&t.flags))return vA=!1,function(e,t,r){switch(t.tag){case 3:PA(t),hi();break;case 5:Ji(t);break;case 1:Ms(t.type)&&Rs(t);break;case 4:Zi(t,t.stateNode.containerInfo);break;case 10:var n=t.type._context,s=t.memoizedProps.value;Is(Bi,n._currentValue),n._currentValue=s;break;case 13:if(null!==(n=t.memoizedState))return null!==n.dehydrated?(Is($i,1&$i.current),t.flags|=128,null):0!==(r&t.child.childLanes)?TA(e,t,r):(Is($i,1&$i.current),null!==(e=YA(e,t,r))?e.sibling:null);Is($i,1&$i.current);break;case 19:if(n=0!==(r&t.childLanes),0!==(128&e.flags)){if(n)return OA(e,t,r);t.flags|=128}if(null!==(s=t.memoizedState)&&(s.rendering=null,s.tail=null,s.lastEffect=null),Is($i,$i.current),n)break;return null;case 22:case 23:return t.lanes=0,CA(e,t,r)}return YA(e,t,r)}(e,t,r);vA=0!==(131072&e.flags)}else vA=!1,si&&0!==(1048576&t.flags)&&$s(t,Us,t.index);switch(t.lanes=0,t.tag){case 2:var n=t.type;zA(e,t),e=t.pendingProps;var s=Ls(t,Qs.current);Pi(t,r),s=po(null,t,n,e,s,r);var o=mo();return t.flags|=1,"object"===typeof s&&null!==s&&"function"===typeof s.render&&void 0===s.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ms(n)?(o=!0,Rs(t)):o=!1,t.memoizedState=null!==s.state&&void 0!==s.state?s.state:null,Ri(t),s.updater=sA,t.stateNode=s,s._reactInternals=t,aA(t,n,e,r),t=QA(null,t,n,!0,o,r)):(t.tag=0,si&&o&&ei(t),bA(null,t,s,r),t=t.child),t;case 16:n=t.elementType;e:{switch(zA(e,t),e=t.pendingProps,n=(s=n._init)(n._payload),t.type=n,s=t.tag=function(e){if("function"===typeof e)return Ml(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===Q)return 11;if(e===L)return 14}return 2}(n),e=rA(n,e),s){case 0:t=IA(null,t,n,e,r);break e;case 1:t=DA(null,t,n,e,r);break e;case 11:t=yA(null,t,n,e,r);break e;case 14:t=BA(null,t,n,rA(n.type,e),r);break e}throw Error(i(306,n,""))}return t;case 0:return n=t.type,s=t.pendingProps,IA(e,t,n,s=t.elementType===n?s:rA(n,s),r);case 1:return n=t.type,s=t.pendingProps,DA(e,t,n,s=t.elementType===n?s:rA(n,s),r);case 3:e:{if(PA(t),null===e)throw Error(i(387));n=t.pendingProps,s=(o=t.memoizedState).element,Ti(e,t),Oi(t,n,null,r);var A=t.memoizedState;if(n=A.element,o.isDehydrated){if(o={element:n,isDehydrated:!1,cache:A.cache,pendingSuspenseBoundaries:A.pendingSuspenseBoundaries,transitions:A.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=FA(e,t,n,r,s=lA(Error(i(423)),t));break e}if(n!==s){t=FA(e,t,n,r,s=lA(Error(i(424)),t));break e}for(ni=ls(t.stateNode.containerInfo.firstChild),ri=t,si=!0,ii=null,r=yi(t,null,n,r),t.child=r;r;)r.flags=-3&r.flags|4096,r=r.sibling}else{if(hi(),n===s){t=YA(e,t,r);break e}bA(e,t,n,r)}t=t.child}return t;case 5:return Ji(t),null===e&&li(t),n=t.type,s=t.pendingProps,o=null!==e?e.memoizedProps:null,A=s.children,rs(n,s)?A=null:null!==o&&rs(n,o)&&(t.flags|=32),xA(e,t),bA(e,t,A,r),t.child;case 6:return null===e&&li(t),null;case 13:return TA(e,t,r);case 4:return Zi(t,t.stateNode.containerInfo),n=t.pendingProps,null===e?t.child=bi(t,null,n,r):bA(e,t,n,r),t.child;case 11:return n=t.type,s=t.pendingProps,yA(e,t,n,s=t.elementType===n?s:rA(n,s),r);case 7:return bA(e,t,t.pendingProps,r),t.child;case 8:case 12:return bA(e,t,t.pendingProps.children,r),t.child;case 10:e:{if(n=t.type._context,s=t.pendingProps,o=t.memoizedProps,A=s.value,Is(Bi,n._currentValue),n._currentValue=A,null!==o)if(An(o.value,A)){if(o.children===s.children&&!Ps.current){t=YA(e,t,r);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var a=o.dependencies;if(null!==a){A=o.child;for(var l=a.firstContext;null!==l;){if(l.context===n){if(1===o.tag){(l=Wi(-1,r&-r)).tag=2;var c=o.updateQueue;if(null!==c){var u=(c=c.shared).pending;null===u?l.next=l:(l.next=u.next,u.next=l),c.pending=l}}o.lanes|=r,null!==(l=o.alternate)&&(l.lanes|=r),Qi(o.return,r,t),a.lanes|=r;break}l=l.next}}else if(10===o.tag)A=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(A=o.return))throw Error(i(341));A.lanes|=r,null!==(a=A.alternate)&&(a.lanes|=r),Qi(A,r,t),A=o.sibling}else A=o.child;if(null!==A)A.return=o;else for(A=o;null!==A;){if(A===t){A=null;break}if(null!==(o=A.sibling)){o.return=A.return,A=o;break}A=A.return}o=A}bA(e,t,s.children,r),t=t.child}return t;case 9:return s=t.type,n=t.pendingProps.children,Pi(t,r),n=n(s=Fi(s)),t.flags|=1,bA(e,t,n,r),t.child;case 14:return s=rA(n=t.type,t.pendingProps),BA(e,t,n,s=rA(n.type,s),r);case 15:return EA(e,t,t.type,t.pendingProps,r);case 17:return n=t.type,s=t.pendingProps,s=t.elementType===n?s:rA(n,s),zA(e,t),t.tag=1,Ms(n)?(e=!0,Rs(t)):e=!1,Pi(t,r),oA(t,n,s),aA(t,n,s,r),QA(null,t,n,!0,e,r);case 19:return OA(e,t,r);case 22:return CA(e,t,r)}throw Error(i(156,t.tag))};var Vl="function"===typeof reportError?reportError:function(e){console.error(e)};function ql(e){this._internalRoot=e}function Zl(e){this._internalRoot=e}function Kl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Jl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function _l(){}function $l(e,t,r,n,s){var i=r._reactRootContainer;if(i){var o=i;if("function"===typeof s){var A=s;s=function(){var e=Yl(o);A.call(e)}}zl(t,o,e,s)}else o=function(e,t,r,n,s){if(s){if("function"===typeof n){var i=n;n=function(){var e=Yl(o);i.call(e)}}var o=Ol(t,n,e,0,null,!1,0,"",_l);return e._reactRootContainer=o,e[fs]=o.current,On(8===e.nodeType?e.parentNode:e),cl(),o}for(;s=e.lastChild;)e.removeChild(s);if("function"===typeof n){var A=n;n=function(){var e=Yl(a);A.call(e)}}var a=Gl(e,0,!1,null,0,!1,0,"",_l);return e._reactRootContainer=a,e[fs]=a.current,On(8===e.nodeType?e.parentNode:e),cl((function(){zl(t,a,r,n)})),a}(r,t,e,s,n);return Yl(o)}Zl.prototype.render=ql.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(i(409));zl(e,t,null,null)},Zl.prototype.unmount=ql.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;cl((function(){zl(null,e,null,null)})),t[fs]=null}},Zl.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ct();e={blockedOn:null,target:e,priority:t};for(var r=0;r<St.length&&0!==t&&t<St[r].priority;r++);St.splice(r,0,e),0===r&&Tt(e)}},yt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var r=ut(t.pendingLanes);0!==r&&(wt(t,1|r),nl(t,Je()),0===(6&Qa)&&(Oa=Je()+500,Os()))}break;case 13:cl((function(){var t=Ni(e,1);if(null!==t){var r=el();rl(t,e,1,r)}})),Ul(e,1)}},Bt=function(e){if(13===e.tag){var t=Ni(e,134217728);if(null!==t)rl(t,e,134217728,el());Ul(e,134217728)}},Et=function(e){if(13===e.tag){var t=tl(e),r=Ni(e,t);if(null!==r)rl(r,e,t,el());Ul(e,t)}},Ct=function(){return vt},xt=function(e,t){var r=vt;try{return vt=e,t()}finally{vt=r}},Be=function(e,t,r){switch(t){case"input":if(_(e,r),t=r.name,"radio"===r.type&&null!=t){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<r.length;t++){var n=r[t];if(n!==e&&n.form===e.form){var s=ys(n);if(!s)throw Error(i(90));V(n),_(n,s)}}}break;case"textarea":ie(e,r);break;case"select":null!=(t=r.value)&&re(e,!!r.multiple,t,!1)}},Qe=ll,Pe=cl;var ec={usingClientEntryPoint:!1,Events:[vs,bs,ys,Ie,De,ll]},tc={findFiberByHostInstance:ws,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},rc={bundleType:tc.bundleType,version:tc.version,rendererPackageName:tc.rendererPackageName,rendererConfig:tc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:b.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:tc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var nc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!nc.isDisabled&&nc.supportsFiber)try{st=nc.inject(rc),it=nc}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ec,t.createPortal=function(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Kl(t))throw Error(i(200));return function(e,t,r){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:B,key:null==n?null:""+n,children:e,containerInfo:t,implementation:r}}(e,t,null,r)},t.createRoot=function(e,t){if(!Kl(e))throw Error(i(299));var r=!1,n="",s=Vl;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(r=!0),void 0!==t.identifierPrefix&&(n=t.identifierPrefix),void 0!==t.onRecoverableError&&(s=t.onRecoverableError)),t=Gl(e,1,!1,null,0,r,0,n,s),e[fs]=t.current,On(8===e.nodeType?e.parentNode:e),new ql(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(i(188));throw e=Object.keys(e).join(","),Error(i(268,e))}return e=null===(e=He(t))?null:e.stateNode},t.flushSync=function(e){return cl(e)},t.hydrate=function(e,t,r){if(!Jl(t))throw Error(i(200));return $l(null,e,t,!0,r)},t.hydrateRoot=function(e,t,r){if(!Kl(e))throw Error(i(405));var n=null!=r&&r.hydratedSources||null,s=!1,o="",A=Vl;if(null!==r&&void 0!==r&&(!0===r.unstable_strictMode&&(s=!0),void 0!==r.identifierPrefix&&(o=r.identifierPrefix),void 0!==r.onRecoverableError&&(A=r.onRecoverableError)),t=Ol(t,null,e,1,null!=r?r:null,s,0,o,A),e[fs]=t.current,On(e),n)for(e=0;e<n.length;e++)s=(s=(r=n[e])._getVersion)(r._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[r,s]:t.mutableSourceEagerHydrationData.push(r,s);return new Zl(t)},t.render=function(e,t,r){if(!Jl(t))throw Error(i(200));return $l(null,e,t,!1,r)},t.unmountComponentAtNode=function(e){if(!Jl(e))throw Error(i(40));return!!e._reactRootContainer&&(cl((function(){$l(null,null,e,!1,(function(){e._reactRootContainer=null,e[fs]=null}))})),!0)},t.unstable_batchedUpdates=ll,t.unstable_renderSubtreeIntoContainer=function(e,t,r,n){if(!Jl(r))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return $l(e,t,r,!1,n)},t.version="18.3.1-next-f1338f8080-20240426"},7950:(e,t,r)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=r(2730)},1153:(e,t,r)=>{"use strict";var n=r(5043),s=Symbol.for("react.element"),i=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,A=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,r){var n,i={},l=null,c=null;for(n in void 0!==r&&(l=""+r),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(c=t.ref),t)o.call(t,n)&&!a.hasOwnProperty(n)&&(i[n]=t[n]);if(e&&e.defaultProps)for(n in t=e.defaultProps)void 0===i[n]&&(i[n]=t[n]);return{$$typeof:s,type:e,key:l,ref:c,props:i,_owner:A.current}}t.Fragment=i,t.jsx=l,t.jsxs=l},4202:(e,t)=>{"use strict";var r=Symbol.for("react.element"),n=Symbol.for("react.portal"),s=Symbol.for("react.fragment"),i=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),A=Symbol.for("react.provider"),a=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),u=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),h=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g=Object.assign,p={};function m(e,t,r){this.props=e,this.context=t,this.refs=p,this.updater=r||f}function w(){}function v(e,t,r){this.props=e,this.context=t,this.refs=p,this.updater=r||f}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=m.prototype;var b=v.prototype=new w;b.constructor=v,g(b,m.prototype),b.isPureReactComponent=!0;var y=Array.isArray,B=Object.prototype.hasOwnProperty,E={current:null},C={key:!0,ref:!0,__self:!0,__source:!0};function x(e,t,n){var s,i={},o=null,A=null;if(null!=t)for(s in void 0!==t.ref&&(A=t.ref),void 0!==t.key&&(o=""+t.key),t)B.call(t,s)&&!C.hasOwnProperty(s)&&(i[s]=t[s]);var a=arguments.length-2;if(1===a)i.children=n;else if(1<a){for(var l=Array(a),c=0;c<a;c++)l[c]=arguments[c+2];i.children=l}if(e&&e.defaultProps)for(s in a=e.defaultProps)void 0===i[s]&&(i[s]=a[s]);return{$$typeof:r,type:e,key:o,ref:A,props:i,_owner:E.current}}function I(e){return"object"===typeof e&&null!==e&&e.$$typeof===r}var D=/\/+/g;function Q(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,s,i,o){var A=typeof e;"undefined"!==A&&"boolean"!==A||(e=null);var a=!1;if(null===e)a=!0;else switch(A){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case r:case n:a=!0}}if(a)return o=o(a=e),e=""===i?"."+Q(a,0):i,y(o)?(s="",null!=e&&(s=e.replace(D,"$&/")+"/"),P(o,t,s,"",(function(e){return e}))):null!=o&&(I(o)&&(o=function(e,t){return{$$typeof:r,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,s+(!o.key||a&&a.key===o.key?"":(""+o.key).replace(D,"$&/")+"/")+e)),t.push(o)),1;if(a=0,i=""===i?".":i+":",y(e))for(var l=0;l<e.length;l++){var c=i+Q(A=e[l],l);a+=P(A,t,s,c,o)}else if(c=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=h&&e[h]||e["@@iterator"])?e:null}(e),"function"===typeof c)for(e=c.call(e),l=0;!(A=e.next()).done;)a+=P(A=A.value,t,s,c=i+Q(A,l++),o);else if("object"===A)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return a}function F(e,t,r){if(null==e)return e;var n=[],s=0;return P(e,n,"","",(function(e){return t.call(r,e,s++)})),n}function L(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var M={current:null},S={transition:null},N={ReactCurrentDispatcher:M,ReactCurrentBatchConfig:S,ReactCurrentOwner:E};function k(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:F,forEach:function(e,t,r){F(e,(function(){t.apply(this,arguments)}),r)},count:function(e){var t=0;return F(e,(function(){t++})),t},toArray:function(e){return F(e,(function(e){return e}))||[]},only:function(e){if(!I(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=m,t.Fragment=s,t.Profiler=o,t.PureComponent=v,t.StrictMode=i,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=N,t.act=k,t.cloneElement=function(e,t,n){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var s=g({},e.props),i=e.key,o=e.ref,A=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,A=E.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var a=e.type.defaultProps;for(l in t)B.call(t,l)&&!C.hasOwnProperty(l)&&(s[l]=void 0===t[l]&&void 0!==a?a[l]:t[l])}var l=arguments.length-2;if(1===l)s.children=n;else if(1<l){a=Array(l);for(var c=0;c<l;c++)a[c]=arguments[c+2];s.children=a}return{$$typeof:r,type:e.type,key:i,ref:o,props:s,_owner:A}},t.createContext=function(e){return(e={$$typeof:a,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:A,_context:e},e.Consumer=e},t.createElement=x,t.createFactory=function(e){var t=x.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=I,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:L}},t.memo=function(e,t){return{$$typeof:u,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=S.transition;S.transition={};try{e()}finally{S.transition=t}},t.unstable_act=k,t.useCallback=function(e,t){return M.current.useCallback(e,t)},t.useContext=function(e){return M.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return M.current.useDeferredValue(e)},t.useEffect=function(e,t){return M.current.useEffect(e,t)},t.useId=function(){return M.current.useId()},t.useImperativeHandle=function(e,t,r){return M.current.useImperativeHandle(e,t,r)},t.useInsertionEffect=function(e,t){return M.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return M.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return M.current.useMemo(e,t)},t.useReducer=function(e,t,r){return M.current.useReducer(e,t,r)},t.useRef=function(e){return M.current.useRef(e)},t.useState=function(e){return M.current.useState(e)},t.useSyncExternalStore=function(e,t,r){return M.current.useSyncExternalStore(e,t,r)},t.useTransition=function(){return M.current.useTransition()},t.version="18.3.1"},5043:(e,t,r)=>{"use strict";e.exports=r(4202)},579:(e,t,r)=>{"use strict";e.exports=r(1153)},7234:(e,t)=>{"use strict";function r(e,t){var r=e.length;e.push(t);e:for(;0<r;){var n=r-1>>>1,s=e[n];if(!(0<i(s,t)))break e;e[n]=t,e[r]=s,r=n}}function n(e){return 0===e.length?null:e[0]}function s(e){if(0===e.length)return null;var t=e[0],r=e.pop();if(r!==t){e[0]=r;e:for(var n=0,s=e.length,o=s>>>1;n<o;){var A=2*(n+1)-1,a=e[A],l=A+1,c=e[l];if(0>i(a,r))l<s&&0>i(c,a)?(e[n]=c,e[l]=r,n=l):(e[n]=a,e[A]=r,n=A);else{if(!(l<s&&0>i(c,r)))break e;e[n]=c,e[l]=r,n=l}}}return t}function i(e,t){var r=e.sortIndex-t.sortIndex;return 0!==r?r:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var A=Date,a=A.now();t.unstable_now=function(){return A.now()-a}}var l=[],c=[],u=1,d=null,h=3,f=!1,g=!1,p=!1,m="function"===typeof setTimeout?setTimeout:null,w="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function b(e){for(var t=n(c);null!==t;){if(null===t.callback)s(c);else{if(!(t.startTime<=e))break;s(c),t.sortIndex=t.expirationTime,r(l,t)}t=n(c)}}function y(e){if(p=!1,b(e),!g)if(null!==n(l))g=!0,S(B);else{var t=n(c);null!==t&&N(y,t.startTime-e)}}function B(e,r){g=!1,p&&(p=!1,w(I),I=-1),f=!0;var i=h;try{for(b(r),d=n(l);null!==d&&(!(d.expirationTime>r)||e&&!P());){var o=d.callback;if("function"===typeof o){d.callback=null,h=d.priorityLevel;var A=o(d.expirationTime<=r);r=t.unstable_now(),"function"===typeof A?d.callback=A:d===n(l)&&s(l),b(r)}else s(l);d=n(l)}if(null!==d)var a=!0;else{var u=n(c);null!==u&&N(y,u.startTime-r),a=!1}return a}finally{d=null,h=i,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var E,C=!1,x=null,I=-1,D=5,Q=-1;function P(){return!(t.unstable_now()-Q<D)}function F(){if(null!==x){var e=t.unstable_now();Q=e;var r=!0;try{r=x(!0,e)}finally{r?E():(C=!1,x=null)}}else C=!1}if("function"===typeof v)E=function(){v(F)};else if("undefined"!==typeof MessageChannel){var L=new MessageChannel,M=L.port2;L.port1.onmessage=F,E=function(){M.postMessage(null)}}else E=function(){m(F,0)};function S(e){x=e,C||(C=!0,E())}function N(e,r){I=m((function(){e(t.unstable_now())}),r)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){g||f||(g=!0,S(B))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):D=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return h},t.unstable_getFirstCallbackNode=function(){return n(l)},t.unstable_next=function(e){switch(h){case 1:case 2:case 3:var t=3;break;default:t=h}var r=h;h=t;try{return e()}finally{h=r}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=h;h=e;try{return t()}finally{h=r}},t.unstable_scheduleCallback=function(e,s,i){var o=t.unstable_now();switch("object"===typeof i&&null!==i?i="number"===typeof(i=i.delay)&&0<i?o+i:o:i=o,e){case 1:var A=-1;break;case 2:A=250;break;case 5:A=1073741823;break;case 4:A=1e4;break;default:A=5e3}return e={id:u++,callback:s,priorityLevel:e,startTime:i,expirationTime:A=i+A,sortIndex:-1},i>o?(e.sortIndex=i,r(c,e),null===n(l)&&e===n(c)&&(p?(w(I),I=-1):p=!0,N(y,i-o))):(e.sortIndex=A,r(l,e),g||f||(g=!0,S(B))),e},t.unstable_shouldYield=P,t.unstable_wrapCallback=function(e){var t=h;return function(){var r=h;h=t;try{return e.apply(this,arguments)}finally{h=r}}}},8853:(e,t,r)=>{"use strict";e.exports=r(7234)},9849:(e,t,r)=>{"use strict";var n=r(7199),s=Array.prototype.concat,i=Array.prototype.slice,o=e.exports=function(e){for(var t=[],r=0,o=e.length;r<o;r++){var A=e[r];n(A)?t=s.call(t,i.call(A)):t.push(A)}return t};o.wrap=function(e){return function(){return e(o(arguments))}}},7199:e=>{e.exports=function(e){return!(!e||"string"===typeof e)&&(e instanceof Array||Array.isArray(e)||e.length>=0&&(e.splice instanceof Function||Object.getOwnPropertyDescriptor(e,e.length-1)&&"String"!==e.constructor.name))}},8680:e=>{var t=0,r=-3;function n(){this.table=new Uint16Array(16),this.trans=new Uint16Array(288)}function s(e,t){this.source=e,this.sourceIndex=0,this.tag=0,this.bitcount=0,this.dest=t,this.destLen=0,this.ltree=new n,this.dtree=new n}var i=new n,o=new n,A=new Uint8Array(30),a=new Uint16Array(30),l=new Uint8Array(30),c=new Uint16Array(30),u=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),d=new n,h=new Uint8Array(320);function f(e,t,r,n){var s,i;for(s=0;s<r;++s)e[s]=0;for(s=0;s<30-r;++s)e[s+r]=s/r|0;for(i=n,s=0;s<30;++s)t[s]=i,i+=1<<e[s]}var g=new Uint16Array(16);function p(e,t,r,n){var s,i;for(s=0;s<16;++s)e.table[s]=0;for(s=0;s<n;++s)e.table[t[r+s]]++;for(e.table[0]=0,i=0,s=0;s<16;++s)g[s]=i,i+=e.table[s];for(s=0;s<n;++s)t[r+s]&&(e.trans[g[t[r+s]]++]=s)}function m(e){e.bitcount--||(e.tag=e.source[e.sourceIndex++],e.bitcount=7);var t=1&e.tag;return e.tag>>>=1,t}function w(e,t,r){if(!t)return r;for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;var n=e.tag&65535>>>16-t;return e.tag>>>=t,e.bitcount-=t,n+r}function v(e,t){for(;e.bitcount<24;)e.tag|=e.source[e.sourceIndex++]<<e.bitcount,e.bitcount+=8;var r=0,n=0,s=0,i=e.tag;do{n=2*n+(1&i),i>>>=1,++s,r+=t.table[s],n-=t.table[s]}while(n>=0);return e.tag=i,e.bitcount-=s,t.trans[r+n]}function b(e,t,r){var n,s,i,o,A,a;for(n=w(e,5,257),s=w(e,5,1),i=w(e,4,4),o=0;o<19;++o)h[o]=0;for(o=0;o<i;++o){var l=w(e,3,0);h[u[o]]=l}for(p(d,h,0,19),A=0;A<n+s;){var c=v(e,d);switch(c){case 16:var f=h[A-1];for(a=w(e,2,3);a;--a)h[A++]=f;break;case 17:for(a=w(e,3,3);a;--a)h[A++]=0;break;case 18:for(a=w(e,7,11);a;--a)h[A++]=0;break;default:h[A++]=c}}p(t,h,0,n),p(r,h,n,s)}function y(e,r,n){for(;;){var s,i,o,u,d=v(e,r);if(256===d)return t;if(d<256)e.dest[e.destLen++]=d;else for(s=w(e,A[d-=257],a[d]),i=v(e,n),u=o=e.destLen-w(e,l[i],c[i]);u<o+s;++u)e.dest[e.destLen++]=e.dest[u]}}function B(e){for(var n,s;e.bitcount>8;)e.sourceIndex--,e.bitcount-=8;if((n=256*(n=e.source[e.sourceIndex+1])+e.source[e.sourceIndex])!==(65535&~(256*e.source[e.sourceIndex+3]+e.source[e.sourceIndex+2])))return r;for(e.sourceIndex+=4,s=n;s;--s)e.dest[e.destLen++]=e.source[e.sourceIndex++];return e.bitcount=0,t}!function(e,t){var r;for(r=0;r<7;++r)e.table[r]=0;for(e.table[7]=24,e.table[8]=152,e.table[9]=112,r=0;r<24;++r)e.trans[r]=256+r;for(r=0;r<144;++r)e.trans[24+r]=r;for(r=0;r<8;++r)e.trans[168+r]=280+r;for(r=0;r<112;++r)e.trans[176+r]=144+r;for(r=0;r<5;++r)t.table[r]=0;for(t.table[5]=32,r=0;r<32;++r)t.trans[r]=r}(i,o),f(A,a,4,3),f(l,c,2,1),A[28]=0,a[28]=258,e.exports=function(e,n){var A,a,l=new s(e,n);do{switch(A=m(l),w(l,2,0)){case 0:a=B(l);break;case 1:a=y(l,i,o);break;case 2:b(l,l.ltree,l.dtree),a=y(l,l.ltree,l.dtree);break;default:a=r}if(a!==t)throw new Error("Data error")}while(!A);return l.destLen<l.dest.length?"function"===typeof l.dest.slice?l.dest.slice(0,l.destLen):l.dest.subarray(0,l.destLen):l.dest}},2582:(e,t,r)=>{const n=r(8680),{swap32LE:s}=r(8975);e.exports=class{constructor(e){const t="function"===typeof e.readUInt32BE&&"function"===typeof e.slice;if(t||e instanceof Uint8Array){let r;if(t)this.highStart=e.readUInt32LE(0),this.errorValue=e.readUInt32LE(4),r=e.readUInt32LE(8),e=e.slice(12);else{const t=new DataView(e.buffer);this.highStart=t.getUint32(0,!0),this.errorValue=t.getUint32(4,!0),r=t.getUint32(8,!0),e=e.subarray(12)}e=n(e,new Uint8Array(r)),e=n(e,new Uint8Array(r)),s(e),this.data=new Uint32Array(e.buffer)}else({data:this.data,highStart:this.highStart,errorValue:this.errorValue}=e)}get(e){let t;return e<0||e>1114111?this.errorValue:e<55296||e>56319&&e<=65535?(t=(this.data[e>>5]<<2)+(31&e),this.data[t]):e<=65535?(t=(this.data[2048+(e-55296>>5)]<<2)+(31&e),this.data[t]):e<this.highStart?(t=this.data[2080+(e>>11)],t=this.data[t+(e>>5&63)],t=(t<<2)+(31&e),this.data[t]):this.data[this.data.length-4]}}},8975:e=>{const t=18===new Uint8Array(new Uint32Array([305419896]).buffer)[0],r=(e,t,r)=>{let n=e[t];e[t]=e[r],e[r]=n};e.exports={swap32LE:e=>{t&&(e=>{const t=e.length;for(let n=0;n<t;n+=4)r(e,n,n+3),r(e,n+1,n+2)})(e)}}}},t={};function r(n){var s=t[n];if(void 0!==s)return s.exports;var i=t[n]={exports:{}};return e[n].call(i.exports,i,i.exports,r),i.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},(()=>{var e,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__;r.t=function(n,s){if(1&s&&(n=this(n)),8&s)return n;if("object"===typeof n&&n){if(4&s&&n.__esModule)return n;if(16&s&&"function"===typeof n.then)return n}var i=Object.create(null);r.r(i);var o={};e=e||[null,t({}),t([]),t(t)];for(var A=2&s&&n;"object"==typeof A&&!~e.indexOf(A);A=t(A))Object.getOwnPropertyNames(A).forEach((e=>o[e]=()=>n[e]));return o.default=()=>n,r.d(i,o),i}})(),r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";var e={};r.r(e),r.d(e,{AFRelationship:()=>zi,AcroButtonFlags:()=>qo,AcroChoiceFlags:()=>Ko,AcroFieldFlags:()=>Vo,AcroTextFlags:()=>Zo,AnnotationFlags:()=>KA,AppearanceCharacteristics:()=>Wo,BlendMode:()=>Pu,Cache:()=>Un,CharCodes:()=>Bs,ColorTypes:()=>wl,CombedTextLayoutError:()=>yc,CorruptPageTreeError:()=>is,CustomFontEmbedder:()=>Gi,CustomFontSubsetEmbedder:()=>Oi,Duplex:()=>Do,EncryptedPDFError:()=>cc,ExceededMaxLengthError:()=>Bc,FieldAlreadyExistsError:()=>mc,FieldExistsAsNonTerminalError:()=>vc,FileEmbedder:()=>Hi,FillRule:()=>Oa,FontkitNotRegisteredError:()=>uc,ForeignPageError:()=>dc,ImageAlignment:()=>Uc,IndexOutOfBoundsError:()=>os,InvalidAcroFieldValueError:()=>As,InvalidFieldNamePartError:()=>wc,InvalidMaxLengthError:()=>Ec,InvalidPDFDateStringError:()=>ns,InvalidTargetIndexError:()=>ss,JpegEmbedder:()=>Ki,LineCapStyle:()=>Ia,LineJoinStyle:()=>Qa,MethodNotImplementedError:()=>Vn,MissingCatalogError:()=>_n,MissingDAEntryError:()=>ls,MissingKeywordError:()=>bs,MissingOnValueCheckError:()=>pc,MissingPDFHeaderError:()=>vs,MissingPageContentsEmbeddingError:()=>$n,MissingTfOperatorError:()=>cs,MultiSelectValueError:()=>as,NextByteAssertionError:()=>hs,NoSuchFieldError:()=>fc,NonFullScreenPageMode:()=>Co,NumberParsingError:()=>us,PDFAcroButton:()=>zo,PDFAcroCheckBox:()=>Ho,PDFAcroChoice:()=>Jo,PDFAcroComboBox:()=>$o,PDFAcroField:()=>Mo,PDFAcroForm:()=>BA,PDFAcroListBox:()=>uA,PDFAcroNonTerminal:()=>tA,PDFAcroPushButton:()=>AA,PDFAcroRadioButton:()=>lA,PDFAcroSignature:()=>nA,PDFAcroTerminal:()=>Oo,PDFAcroText:()=>iA,PDFAnnotation:()=>Ro,PDFArray:()=>Ps,PDFArrayIsNotRectangleError:()=>rs,PDFBool:()=>Ms,PDFButton:()=>_u,PDFCatalog:()=>CA,PDFCheckBox:()=>Zc,PDFContentStream:()=>ri,PDFContext:()=>oi,PDFCrossRefSection:()=>di,PDFCrossRefStream:()=>xi,PDFDict:()=>Os,PDFDocument:()=>Du,PDFDropdown:()=>Kc,PDFEmbeddedPage:()=>zc,PDFField:()=>qc,PDFFlateStream:()=>ei,PDFFont:()=>Yc,PDFForm:()=>ru,PDFHeader:()=>Cs,PDFHexString:()=>Pi,PDFImage:()=>Hc,PDFInvalidObject:()=>Bi,PDFInvalidObjectParsingError:()=>gs,PDFJavaScript:()=>lu,PDFName:()=>js,PDFNull:()=>Gs,PDFNumber:()=>Ds,PDFObject:()=>xs,PDFObjectCopier:()=>ci,PDFObjectParser:()=>OA,PDFObjectParsingError:()=>fs,PDFObjectStream:()=>wi,PDFObjectStreamParser:()=>YA,PDFOperator:()=>Js,PDFOperatorNames:()=>$s,PDFOptionList:()=>Jc,PDFPage:()=>Ju,PDFPageEmbedder:()=>Bo,PDFPageLeaf:()=>ai,PDFPageTree:()=>IA,PDFParser:()=>qA,PDFParsingError:()=>ds,PDFRadioGroup:()=>_c,PDFRawStream:()=>Hs,PDFRef:()=>Zs,PDFSignature:()=>$c,PDFStream:()=>zs,PDFStreamParsingError:()=>ps,PDFStreamWriter:()=>Di,PDFString:()=>Wi,PDFTextField:()=>eu,PDFTrailer:()=>fi,PDFTrailerDict:()=>pi,PDFWidgetAnnotation:()=>Go,PDFWriter:()=>bi,PDFXRefStreamParser:()=>UA,PageEmbeddingMismatchedContextError:()=>ts,PageSizes:()=>ou,ParseSpeeds:()=>Au,PngEmbedder:()=>ro,PrintScaling:()=>Io,PrivateConstructorError:()=>qn,ReadingDirection:()=>xo,RemovePageFromEmptyDocumentError:()=>hc,ReparseError:()=>Jn,RichTextFieldReadError:()=>bc,RotationTypes:()=>ea,StalledParserError:()=>ws,StandardFontEmbedder:()=>Li,StandardFontValues:()=>Bn,StandardFonts:()=>tu,TextAlignment:()=>Cc,TextRenderingMode:()=>sl,UnbalancedParenthesisError:()=>ms,UnexpectedFieldTypeError:()=>gc,UnexpectedObjectTypeError:()=>Zn,UnrecognizedStreamTypeError:()=>es,UnsupportedEncodingError:()=>Kn,ViewerPreferences:()=>Po,addRandomSuffix:()=>ur,adjustDimsForRotation:()=>ca,appendBezierCurve:()=>Na,appendQuadraticCurve:()=>ka,arrayAsString:()=>Pr,asNumber:()=>$A,asPDFName:()=>JA,asPDFNumber:()=>_A,assertEachIs:()=>Tn,assertInteger:()=>Xn,assertIs:()=>kn,assertIsOneOf:()=>Pn,assertIsOneOfOrUndefined:()=>Fn,assertIsSubset:()=>Ln,assertMultiple:()=>Gn,assertOrUndefined:()=>Rn,assertPositive:()=>On,assertRange:()=>Wn,assertRangeOrUndefined:()=>jn,backtick:()=>xn,beginMarkedContent:()=>pl,beginText:()=>Ka,breakTextIntoLines:()=>yr,byAscendingId:()=>Fr,bytesFor:()=>sn,canBeConvertedToUint8Array:()=>Tr,charAtIndex:()=>vr,charFromCode:()=>or,charFromHexCode:()=>Ar,charSplit:()=>br,cleanText:()=>hr,clip:()=>da,clipEvenOdd:()=>ha,closePath:()=>Ra,cmyk:()=>Bl,colorString:()=>El,colorToComponents:()=>Fl,componentsToColor:()=>Pl,concatTransformationMatrix:()=>ma,copyStringIntoBuffer:()=>cr,createPDFAcroField:()=>hA,createPDFAcroFields:()=>dA,createTypeErrorMsg:()=>Nn,createValueErrorMsg:()=>Qn,decodeFromBase64:()=>$t,decodeFromBase64DataUri:()=>tr,decodePDFRawStream:()=>bo,defaultButtonAppearanceProvider:()=>jc,defaultCheckBoxAppearanceProvider:()=>Tc,defaultDropdownAppearanceProvider:()=>Xc,defaultOptionListAppearanceProvider:()=>Oc,defaultRadioGroupAppearanceProvider:()=>Wc,defaultTextFieldAppearanceProvider:()=>Gc,degrees:()=>ra,degreesToRadians:()=>ia,drawButton:()=>oc,drawCheckBox:()=>sc,drawCheckMark:()=>rc,drawEllipse:()=>ec,drawEllipsePath:()=>_l,drawImage:()=>Vl,drawLine:()=>Zl,drawLinesOfText:()=>Ul,drawObject:()=>ll,drawOptionList:()=>lc,drawPage:()=>ql,drawRadioButton:()=>ic,drawRectangle:()=>Kl,drawSvgPath:()=>tc,drawText:()=>Hl,drawTextField:()=>ac,drawTextLines:()=>Ac,encodeToBase64:()=>_t,endMarkedContent:()=>ml,endPath:()=>Ua,endText:()=>Ja,error:()=>on,escapeRegExp:()=>dr,escapedNewlineChars:()=>fr,fill:()=>za,fillAndStroke:()=>Ha,fillEvenOdd:()=>Ya,findLastMatch:()=>Cr,getType:()=>Mn,grayscale:()=>bl,hasSurrogates:()=>zr,hasUtf16BOM:()=>tn,highSurrogate:()=>Yr,isArrayEqual:()=>Mr,isNewlineChar:()=>pr,isStandardFont:()=>En,isType:()=>Sn,isWithinBMP:()=>Or,last:()=>xr,layoutCombedText:()=>Pc,layoutMultilineText:()=>Qc,layoutSinglelineText:()=>Fc,lineSplit:()=>mr,lineTo:()=>Wa,lowSurrogate:()=>Hr,mergeIntoTypedArray:()=>Dr,mergeLines:()=>wr,mergeUint8Arrays:()=>Qr,moveText:()=>qa,moveTo:()=>Ta,newlineChars:()=>gr,nextLine:()=>Va,normalizeAppearance:()=>Lc,numberToString:()=>rn,padStart:()=>ar,parseDate:()=>Er,pdfDocEncodingDecode:()=>Yn,pluckIndices:()=>Rr,popGraphicsState:()=>Ma,pushGraphicsState:()=>La,radians:()=>ta,radiansToDegrees:()=>oa,range:()=>kr,rectangle:()=>ja,rectanglesAreEqual:()=>Cn,reduceRotation:()=>la,restoreDashPattern:()=>xa,reverseArray:()=>Sr,rgb:()=>yl,rotateAndSkewTextDegreesAndTranslate:()=>al,rotateAndSkewTextRadiansAndTranslate:()=>Al,rotateDegrees:()=>ya,rotateInPlace:()=>nc,rotateRadians:()=>ba,rotateRectangle:()=>ua,scale:()=>va,setCharacterSpacing:()=>$a,setCharacterSqueeze:()=>tl,setDashPattern:()=>Ca,setFillingCmykColor:()=>fl,setFillingColor:()=>Dl,setFillingGrayscaleColor:()=>cl,setFillingRgbColor:()=>dl,setFontAndSize:()=>_a,setGraphicsState:()=>Fa,setLineCap:()=>Da,setLineHeight:()=>rl,setLineJoin:()=>Pa,setLineWidth:()=>Sa,setStrokingCmykColor:()=>gl,setStrokingColor:()=>Ql,setStrokingGrayscaleColor:()=>ul,setStrokingRgbColor:()=>hl,setTextMatrix:()=>ol,setTextRenderingMode:()=>il,setTextRise:()=>nl,setWordSpacing:()=>el,showText:()=>Za,singleQuote:()=>In,sizeInBytes:()=>nn,skewDegrees:()=>Ea,skewRadians:()=>Ba,sortedUniq:()=>Lr,square:()=>Ga,stringAsByteArray:()=>lr,stroke:()=>Xa,sum:()=>Nr,toCharCode:()=>rr,toCodePoint:()=>nr,toDegrees:()=>aa,toHexString:()=>ir,toHexStringOfMinLength:()=>sr,toRadians:()=>Aa,toUint8Array:()=>Wr,translate:()=>wa,typedArrayFor:()=>Ir,utf16Decode:()=>qr,utf16Encode:()=>Xr,utf8Encode:()=>Gr,values:()=>yn,waitForTick:()=>jr});var t={};r.r(t),r.d(t,{create:()=>bp,defaultLanguage:()=>yp,logErrors:()=>mp,registerFormat:()=>vp,setDefaultLanguage:()=>Bp});var n,s=r(5043),i=r.t(s,2),o=r(7950),A=r.t(o,2);function a(){return a=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},a.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(n||(n={}));const l="popstate";function c(e,t){if(!1===e||null===e||"undefined"===typeof e)throw new Error(t)}function u(e,t){if(!e){"undefined"!==typeof console&&console.warn(t);try{throw new Error(t)}catch(r){}}}function d(e,t){return{usr:e.state,key:e.key,idx:t}}function h(e,t,r,n){return void 0===r&&(r=null),a({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof t?g(t):t,{state:r,key:t&&t.key||n||Math.random().toString(36).substr(2,8)})}function f(e){let{pathname:t="/",search:r="",hash:n=""}=e;return r&&"?"!==r&&(t+="?"===r.charAt(0)?r:"?"+r),n&&"#"!==n&&(t+="#"===n.charAt(0)?n:"#"+n),t}function g(e){let t={};if(e){let r=e.indexOf("#");r>=0&&(t.hash=e.substr(r),e=e.substr(0,r));let n=e.indexOf("?");n>=0&&(t.search=e.substr(n),e=e.substr(0,n)),e&&(t.pathname=e)}return t}function p(e,t,r,s){void 0===s&&(s={});let{window:i=document.defaultView,v5Compat:o=!1}=s,A=i.history,u=n.Pop,g=null,p=m();function m(){return(A.state||{idx:null}).idx}function w(){u=n.Pop;let e=m(),t=null==e?null:e-p;p=e,g&&g({action:u,location:b.location,delta:t})}function v(e){let t="null"!==i.location.origin?i.location.origin:i.location.href,r="string"===typeof e?e:f(e);return r=r.replace(/ $/,"%20"),c(t,"No window.location.(origin|href) available to create URL for href: "+r),new URL(r,t)}null==p&&(p=0,A.replaceState(a({},A.state,{idx:p}),""));let b={get action(){return u},get location(){return e(i,A)},listen(e){if(g)throw new Error("A history only accepts one active listener");return i.addEventListener(l,w),g=e,()=>{i.removeEventListener(l,w),g=null}},createHref:e=>t(i,e),createURL:v,encodeLocation(e){let t=v(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(e,t){u=n.Push;let s=h(b.location,e,t);r&&r(s,e),p=m()+1;let a=d(s,p),l=b.createHref(s);try{A.pushState(a,"",l)}catch(on){if(on instanceof DOMException&&"DataCloneError"===on.name)throw on;i.location.assign(l)}o&&g&&g({action:u,location:b.location,delta:1})},replace:function(e,t){u=n.Replace;let s=h(b.location,e,t);r&&r(s,e),p=m();let i=d(s,p),a=b.createHref(s);A.replaceState(i,"",a),o&&g&&g({action:u,location:b.location,delta:0})},go:e=>A.go(e)};return b}var m;!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(m||(m={}));new Set(["lazy","caseSensitive","path","id","index","children"]);function w(e,t,r){return void 0===r&&(r="/"),v(e,t,r,!1)}function v(e,t,r,n){let s=S(("string"===typeof t?g(t):t).pathname||"/",r);if(null==s)return null;let i=b(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){let r=e.length===t.length&&e.slice(0,-1).every(((e,r)=>e===t[r]));return r?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(i);let o=null;for(let A=0;null==o&&A<i.length;++A){let e=M(s);o=F(i[A],e,n)}return o}function b(e,t,r,n){void 0===t&&(t=[]),void 0===r&&(r=[]),void 0===n&&(n="");let s=(e,s,i)=>{let o={relativePath:void 0===i?e.path||"":i,caseSensitive:!0===e.caseSensitive,childrenIndex:s,route:e};o.relativePath.startsWith("/")&&(c(o.relativePath.startsWith(n),'Absolute route path "'+o.relativePath+'" nested under path "'+n+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),o.relativePath=o.relativePath.slice(n.length));let A=W([n,o.relativePath]),a=r.concat(o);e.children&&e.children.length>0&&(c(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+A+'".'),b(e.children,t,a,A)),(null!=e.path||e.index)&&t.push({path:A,score:P(A,e.index),routesMeta:a})};return e.forEach(((e,t)=>{var r;if(""!==e.path&&null!=(r=e.path)&&r.includes("?"))for(let n of y(e.path))s(e,t,n);else s(e,t)})),t}function y(e){let t=e.split("/");if(0===t.length)return[];let[r,...n]=t,s=r.endsWith("?"),i=r.replace(/\?$/,"");if(0===n.length)return s?[i,""]:[i];let o=y(n.join("/")),A=[];return A.push(...o.map((e=>""===e?i:[i,e].join("/")))),s&&A.push(...o),A.map((t=>e.startsWith("/")&&""===t?"/":t))}const B=/^:[\w-]+$/,E=3,C=2,x=1,I=10,D=-2,Q=e=>"*"===e;function P(e,t){let r=e.split("/"),n=r.length;return r.some(Q)&&(n+=D),t&&(n+=C),r.filter((e=>!Q(e))).reduce(((e,t)=>e+(B.test(t)?E:""===t?x:I)),n)}function F(e,t,r){void 0===r&&(r=!1);let{routesMeta:n}=e,s={},i="/",o=[];for(let A=0;A<n.length;++A){let e=n[A],a=A===n.length-1,l="/"===i?t:t.slice(i.length)||"/",c=L({path:e.relativePath,caseSensitive:e.caseSensitive,end:a},l),u=e.route;if(!c&&a&&r&&!n[n.length-1].route.index&&(c=L({path:e.relativePath,caseSensitive:e.caseSensitive,end:!1},l)),!c)return null;Object.assign(s,c.params),o.push({params:s,pathname:W([i,c.pathname]),pathnameBase:j(W([i,c.pathnameBase])),route:u}),"/"!==c.pathnameBase&&(i=W([i,c.pathnameBase]))}return o}function L(e,t){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[r,n]=function(e,t,r){void 0===t&&(t=!1);void 0===r&&(r=!0);u("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let n=[],s="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,((e,t,r)=>(n.push({paramName:t,isOptional:null!=r}),r?"/?([^\\/]+)?":"/([^\\/]+)")));e.endsWith("*")?(n.push({paramName:"*"}),s+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):r?s+="\\/*$":""!==e&&"/"!==e&&(s+="(?:(?=\\/|$))");let i=new RegExp(s,t?void 0:"i");return[i,n]}(e.path,e.caseSensitive,e.end),s=t.match(r);if(!s)return null;let i=s[0],o=i.replace(/(.)\/+$/,"$1"),A=s.slice(1),a=n.reduce(((e,t,r)=>{let{paramName:n,isOptional:s}=t;if("*"===n){let e=A[r]||"";o=i.slice(0,i.length-e.length).replace(/(.)\/+$/,"$1")}const a=A[r];return e[n]=s&&!a?void 0:(a||"").replace(/%2F/g,"/"),e}),{});return{params:a,pathname:i,pathnameBase:o,pattern:e}}function M(e){try{return e.split("/").map((e=>decodeURIComponent(e).replace(/\//g,"%2F"))).join("/")}catch(on){return u(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+on+")."),e}}function S(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let r=t.endsWith("/")?t.length-1:t.length,n=e.charAt(r);return n&&"/"!==n?null:e.slice(r)||"/"}function N(e,t,r,n){return"Cannot include a '"+e+"' character in a manually specified `to."+t+"` field ["+JSON.stringify(n)+"].  Please separate it out to the `to."+r+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}function k(e){return e.filter(((e,t)=>0===t||e.route.path&&e.route.path.length>0))}function R(e,t){let r=k(e);return t?r.map(((e,t)=>t===r.length-1?e.pathname:e.pathnameBase)):r.map((e=>e.pathnameBase))}function T(e,t,r,n){let s;void 0===n&&(n=!1),"string"===typeof e?s=g(e):(s=a({},e),c(!s.pathname||!s.pathname.includes("?"),N("?","pathname","search",s)),c(!s.pathname||!s.pathname.includes("#"),N("#","pathname","hash",s)),c(!s.search||!s.search.includes("#"),N("#","search","hash",s)));let i,o=""===e||""===s.pathname,A=o?"/":s.pathname;if(null==A)i=r;else{let e=t.length-1;if(!n&&A.startsWith("..")){let t=A.split("/");for(;".."===t[0];)t.shift(),e-=1;s.pathname=t.join("/")}i=e>=0?t[e]:"/"}let l=function(e,t){void 0===t&&(t="/");let{pathname:r,search:n="",hash:s=""}="string"===typeof e?g(e):e,i=r?r.startsWith("/")?r:function(e,t){let r=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?r.length>1&&r.pop():"."!==e&&r.push(e)})),r.length>1?r.join("/"):"/"}(r,t):t;return{pathname:i,search:G(n),hash:X(s)}}(s,i),u=A&&"/"!==A&&A.endsWith("/"),d=(o||"."===A)&&r.endsWith("/");return l.pathname.endsWith("/")||!u&&!d||(l.pathname+="/"),l}const W=e=>e.join("/").replace(/\/\/+/g,"/"),j=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),G=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",X=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";Error;function O(e){return null!=e&&"number"===typeof e.status&&"string"===typeof e.statusText&&"boolean"===typeof e.internal&&"data"in e}const z=["post","put","patch","delete"],Y=(new Set(z),["get",...z]);new Set(Y),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred");function H(){return H=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},H.apply(this,arguments)}const U=s.createContext(null);const V=s.createContext(null);const q=s.createContext(null);const Z=s.createContext(null);const K=s.createContext({outlet:null,matches:[],isDataRoute:!1});const J=s.createContext(null);function _(){return null!=s.useContext(Z)}function $(){return _()||c(!1),s.useContext(Z).location}function ee(e){s.useContext(q).static||s.useLayoutEffect(e)}function te(){let{isDataRoute:e}=s.useContext(K);return e?function(){let{router:e}=ue(le.UseNavigateStable),t=he(ce.UseNavigateStable),r=s.useRef(!1);ee((()=>{r.current=!0}));let n=s.useCallback((function(n,s){void 0===s&&(s={}),r.current&&("number"===typeof n?e.navigate(n):e.navigate(n,H({fromRouteId:t},s)))}),[e,t]);return n}():function(){_()||c(!1);let e=s.useContext(U),{basename:t,future:r,navigator:n}=s.useContext(q),{matches:i}=s.useContext(K),{pathname:o}=$(),A=JSON.stringify(R(i,r.v7_relativeSplatPath)),a=s.useRef(!1);return ee((()=>{a.current=!0})),s.useCallback((function(r,s){if(void 0===s&&(s={}),!a.current)return;if("number"===typeof r)return void n.go(r);let i=T(r,JSON.parse(A),o,"path"===s.relative);null==e&&"/"!==t&&(i.pathname="/"===i.pathname?t:W([t,i.pathname])),(s.replace?n.replace:n.push)(i,s.state,s)}),[t,n,A,o,e])}()}function re(e,t){let{relative:r}=void 0===t?{}:t,{future:n}=s.useContext(q),{matches:i}=s.useContext(K),{pathname:o}=$(),A=JSON.stringify(R(i,n.v7_relativeSplatPath));return s.useMemo((()=>T(e,JSON.parse(A),o,"path"===r)),[e,A,o,r])}function ne(e,t,r,i){_()||c(!1);let{navigator:o}=s.useContext(q),{matches:A}=s.useContext(K),a=A[A.length-1],l=a?a.params:{},u=(a&&a.pathname,a?a.pathnameBase:"/");a&&a.route;let d,h=$();if(t){var f;let e="string"===typeof t?g(t):t;"/"===u||(null==(f=e.pathname)?void 0:f.startsWith(u))||c(!1),d=e}else d=h;let p=d.pathname||"/",m=p;if("/"!==u){let e=u.replace(/^\//,"").split("/");m="/"+p.replace(/^\//,"").split("/").slice(e.length).join("/")}let v=w(e,{pathname:m});let b=ae(v&&v.map((e=>Object.assign({},e,{params:Object.assign({},l,e.params),pathname:W([u,o.encodeLocation?o.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?u:W([u,o.encodeLocation?o.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),A,r,i);return t&&b?s.createElement(Z.Provider,{value:{location:H({pathname:"/",search:"",hash:"",state:null,key:"default"},d),navigationType:n.Pop}},b):b}function se(){let e=function(){var e;let t=s.useContext(J),r=de(ce.UseRouteError),n=he(ce.UseRouteError);if(void 0!==t)return t;return null==(e=r.errors)?void 0:e[n]}(),t=O(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),r=e instanceof Error?e.stack:null,n="rgba(200,200,200, 0.5)",i={padding:"0.5rem",backgroundColor:n};return s.createElement(s.Fragment,null,s.createElement("h2",null,"Unexpected Application Error!"),s.createElement("h3",{style:{fontStyle:"italic"}},t),r?s.createElement("pre",{style:i},r):null,null)}const ie=s.createElement(se,null);class oe extends s.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:void 0!==e.error?e.error:t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return void 0!==this.state.error?s.createElement(K.Provider,{value:this.props.routeContext},s.createElement(J.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function Ae(e){let{routeContext:t,match:r,children:n}=e,i=s.useContext(U);return i&&i.static&&i.staticContext&&(r.route.errorElement||r.route.ErrorBoundary)&&(i.staticContext._deepestRenderedBoundaryId=r.route.id),s.createElement(K.Provider,{value:t},n)}function ae(e,t,r,n){var i;if(void 0===t&&(t=[]),void 0===r&&(r=null),void 0===n&&(n=null),null==e){var o;if(!r)return null;if(r.errors)e=r.matches;else{if(!(null!=(o=n)&&o.v7_partialHydration&&0===t.length&&!r.initialized&&r.matches.length>0))return null;e=r.matches}}let A=e,a=null==(i=r)?void 0:i.errors;if(null!=a){let e=A.findIndex((e=>e.route.id&&void 0!==(null==a?void 0:a[e.route.id])));e>=0||c(!1),A=A.slice(0,Math.min(A.length,e+1))}let l=!1,u=-1;if(r&&n&&n.v7_partialHydration)for(let s=0;s<A.length;s++){let e=A[s];if((e.route.HydrateFallback||e.route.hydrateFallbackElement)&&(u=s),e.route.id){let{loaderData:t,errors:n}=r,s=e.route.loader&&void 0===t[e.route.id]&&(!n||void 0===n[e.route.id]);if(e.route.lazy||s){l=!0,A=u>=0?A.slice(0,u+1):[A[0]];break}}}return A.reduceRight(((e,n,i)=>{let o,c=!1,d=null,h=null;var f;r&&(o=a&&n.route.id?a[n.route.id]:void 0,d=n.route.errorElement||ie,l&&(u<0&&0===i?(f="route-fallback",!1||fe[f]||(fe[f]=!0),c=!0,h=null):u===i&&(c=!0,h=n.route.hydrateFallbackElement||null)));let g=t.concat(A.slice(0,i+1)),p=()=>{let t;return t=o?d:c?h:n.route.Component?s.createElement(n.route.Component,null):n.route.element?n.route.element:e,s.createElement(Ae,{match:n,routeContext:{outlet:e,matches:g,isDataRoute:null!=r},children:t})};return r&&(n.route.ErrorBoundary||n.route.errorElement||0===i)?s.createElement(oe,{location:r.location,revalidation:r.revalidation,component:d,error:o,children:p(),routeContext:{outlet:null,matches:g,isDataRoute:!0}}):p()}),null)}var le=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(le||{}),ce=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(ce||{});function ue(e){let t=s.useContext(U);return t||c(!1),t}function de(e){let t=s.useContext(V);return t||c(!1),t}function he(e){let t=function(){let e=s.useContext(K);return e||c(!1),e}(),r=t.matches[t.matches.length-1];return r.route.id||c(!1),r.route.id}const fe={};i.startTransition;function ge(e){c(!1)}function pe(e){let{basename:t="/",children:r=null,location:i,navigationType:o=n.Pop,navigator:A,static:a=!1,future:l}=e;_()&&c(!1);let u=t.replace(/^\/*/,"/"),d=s.useMemo((()=>({basename:u,navigator:A,static:a,future:H({v7_relativeSplatPath:!1},l)})),[u,l,A,a]);"string"===typeof i&&(i=g(i));let{pathname:h="/",search:f="",hash:p="",state:m=null,key:w="default"}=i,v=s.useMemo((()=>{let e=S(h,u);return null==e?null:{location:{pathname:e,search:f,hash:p,state:m,key:w},navigationType:o}}),[u,h,f,p,m,w,o]);return null==v?null:s.createElement(q.Provider,{value:d},s.createElement(Z.Provider,{children:r,value:v}))}function me(e){let{children:t,location:r}=e;return ne(we(t),r)}new Promise((()=>{}));s.Component;function we(e,t){void 0===t&&(t=[]);let r=[];return s.Children.forEach(e,((e,n)=>{if(!s.isValidElement(e))return;let i=[...t,n];if(e.type===s.Fragment)return void r.push.apply(r,we(e.props.children,i));e.type!==ge&&c(!1),e.props.index&&e.props.children&&c(!1);let o={id:e.props.id||i.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(o.children=we(e.props.children,i)),r.push(o)})),r}var ve=r(579);const be=(0,s.createContext)(null);function ye(e){const t=(0,s.useRef)(null);return null===t.current&&(t.current=e()),t.current}const Be=(0,s.createContext)({transformPagePoint:e=>e,isStatic:!1,reducedMotion:"never"});class Ee extends s.Component{getSnapshotBeforeUpdate(e){const t=this.props.childRef.current;if(t&&e.isPresent&&!this.props.isPresent){const e=this.props.sizeRef.current;e.height=t.offsetHeight||0,e.width=t.offsetWidth||0,e.top=t.offsetTop,e.left=t.offsetLeft}return null}componentDidUpdate(){}render(){return this.props.children}}function Ce(e){let{children:t,isPresent:r}=e;const n=(0,s.useId)(),i=(0,s.useRef)(null),o=(0,s.useRef)({width:0,height:0,top:0,left:0}),{nonce:A}=(0,s.useContext)(Be);return(0,s.useInsertionEffect)((()=>{const{width:e,height:t,top:s,left:a}=o.current;if(r||!i.current||!e||!t)return;i.current.dataset.motionPopId=n;const l=document.createElement("style");return A&&(l.nonce=A),document.head.appendChild(l),l.sheet&&l.sheet.insertRule(`\n          [data-motion-pop-id="${n}"] {\n            position: absolute !important;\n            width: ${e}px !important;\n            height: ${t}px !important;\n            top: ${s}px !important;\n            left: ${a}px !important;\n          }\n        `),()=>{document.head.removeChild(l)}}),[r]),(0,ve.jsx)(Ee,{isPresent:r,childRef:i,sizeRef:o,children:s.cloneElement(t,{ref:i})})}const xe=e=>{let{children:t,initial:r,isPresent:n,onExitComplete:i,custom:o,presenceAffectsLayout:A,mode:a}=e;const l=ye(Ie),c=(0,s.useId)(),u=(0,s.useMemo)((()=>({id:c,initial:r,isPresent:n,custom:o,onExitComplete:e=>{l.set(e,!0);for(const t of l.values())if(!t)return;i&&i()},register:e=>(l.set(e,!1),()=>l.delete(e))})),A?[Math.random()]:[n]);return(0,s.useMemo)((()=>{l.forEach(((e,t)=>l.set(t,!1)))}),[n]),s.useEffect((()=>{!n&&!l.size&&i&&i()}),[n]),"popLayout"===a&&(t=(0,ve.jsx)(Ce,{isPresent:n,children:t})),(0,ve.jsx)(be.Provider,{value:u,children:t})};function Ie(){return new Map}const De=(0,s.createContext)({}),Qe=e=>e;let Pe=Qe,Fe=Qe;const Le=e=>e.key||"";function Me(e){const t=[];return s.Children.forEach(e,(e=>{(0,s.isValidElement)(e)&&t.push(e)})),t}const Se="undefined"!==typeof window,Ne=Se?s.useLayoutEffect:s.useEffect,ke=e=>{let{children:t,exitBeforeEnter:r,custom:n,initial:i=!0,onExitComplete:o,presenceAffectsLayout:A=!0,mode:a="sync"}=e;Fe(!r,"Replace exitBeforeEnter with mode='wait'");const l=(0,s.useMemo)((()=>Me(t)),[t]),c=l.map(Le),u=(0,s.useRef)(!0),d=(0,s.useRef)(l),h=ye((()=>new Map)),[f,g]=(0,s.useState)(l),[p,m]=(0,s.useState)(l);Ne((()=>{u.current=!1,d.current=l;for(let e=0;e<p.length;e++){const t=Le(p[e]);c.includes(t)?h.delete(t):!0!==h.get(t)&&h.set(t,!1)}}),[p,c.length,c.join("-")]);const w=[];if(l!==f){let e=[...l];for(let t=0;t<p.length;t++){const r=p[t],n=Le(r);c.includes(n)||(e.splice(t,0,r),w.push(r))}return"wait"===a&&w.length&&(e=w),m(Me(e)),void g(l)}const{forceRender:v}=(0,s.useContext)(De);return(0,ve.jsx)(ve.Fragment,{children:p.map((e=>{const t=Le(e),r=l===p||c.includes(t);return(0,ve.jsx)(xe,{isPresent:r,initial:!(u.current&&!i)&&void 0,custom:r?void 0:n,presenceAffectsLayout:A,mode:a,onExitComplete:r?void 0:()=>{if(!h.has(t))return;h.set(t,!0);let e=!0;h.forEach((t=>{t||(e=!1)})),e&&(null===v||void 0===v||v(),m(d.current),o&&o())},children:e},t)}))})};function Re(){return Re=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},Re.apply(this,arguments)}function Te(e,t){if(null==e)return{};var r,n,s={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);const We=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset","unstable_viewTransition"];try{window.__reactRouterVersion="6"}catch(JM){}new Map;const je=i.startTransition;A.flushSync,i.useId;function Ge(e){let{basename:t,children:r,future:n,window:i}=e,o=s.useRef();var A;null==o.current&&(o.current=(void 0===(A={window:i,v5Compat:!0})&&(A={}),p((function(e,t){let{pathname:r,search:n,hash:s}=e.location;return h("",{pathname:r,search:n,hash:s},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"===typeof t?t:f(t)}),null,A)));let a=o.current,[l,c]=s.useState({action:a.action,location:a.location}),{v7_startTransition:u}=n||{},d=s.useCallback((e=>{u&&je?je((()=>c(e))):c(e)}),[c,u]);return s.useLayoutEffect((()=>a.listen(d)),[a,d]),s.createElement(pe,{basename:t,children:r,location:l.location,navigationType:l.action,navigator:a,future:n})}const Xe="undefined"!==typeof window&&"undefined"!==typeof window.document&&"undefined"!==typeof window.document.createElement,Oe=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,ze=s.forwardRef((function(e,t){let r,{onClick:n,relative:i,reloadDocument:o,replace:A,state:a,target:l,to:u,preventScrollReset:d,unstable_viewTransition:h}=e,g=Te(e,We),{basename:p}=s.useContext(q),m=!1;if("string"===typeof u&&Oe.test(u)&&(r=u,Xe))try{let e=new URL(window.location.href),t=u.startsWith("//")?new URL(e.protocol+u):new URL(u),r=S(t.pathname,p);t.origin===e.origin&&null!=r?u=r+t.search+t.hash:m=!0}catch(JM){}let w=function(e,t){let{relative:r}=void 0===t?{}:t;_()||c(!1);let{basename:n,navigator:i}=s.useContext(q),{hash:o,pathname:A,search:a}=re(e,{relative:r}),l=A;return"/"!==n&&(l="/"===A?n:W([n,A])),i.createHref({pathname:l,search:a,hash:o})}(u,{relative:i}),v=function(e,t){let{target:r,replace:n,state:i,preventScrollReset:o,relative:A,unstable_viewTransition:a}=void 0===t?{}:t,l=te(),c=$(),u=re(e,{relative:A});return s.useCallback((t=>{if(function(e,t){return 0===e.button&&(!t||"_self"===t)&&!function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)}(t,r)){t.preventDefault();let r=void 0!==n?n:f(c)===f(u);l(e,{replace:r,state:i,preventScrollReset:o,relative:A,unstable_viewTransition:a})}}),[c,l,u,n,i,r,e,o,A,a])}(u,{replace:A,state:a,target:l,preventScrollReset:d,relative:i,unstable_viewTransition:h});return s.createElement("a",Re({},g,{href:r||w,onClick:m||o?n:function(e){n&&n(e),e.defaultPrevented||v(e)},ref:t,target:l}))}));var Ye,He;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"})(Ye||(Ye={})),function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(He||(He={}));const Ue=()=>(0,ve.jsxs)("header",{className:"py-4 bg-black shadow-md",children:[(0,ve.jsx)("div",{className:"flex items-center justify-between",children:(0,ve.jsxs)("div",{className:"flex items-center space-x-8",children:[(0,ve.jsx)("h1",{className:"pl-4 text-2xl font-bold text-white",children:(0,ve.jsx)(ze,{to:"/",children:"Bryan's Generator"})}),(0,ve.jsx)("nav",{className:"hidden md:block",children:(0,ve.jsxs)("ul",{className:"flex space-x-6",children:[(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(ze,{to:"/",className:"text-white",children:"Home"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(ze,{to:"/cv-parking-permit",className:"text-white",children:"Campus View"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(ze,{to:"/canvas-parking-permit",className:"text-white",children:"Canvas"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(ze,{to:"/placeholder-parking-permit",className:"text-white",children:"Coming Soon"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(ze,{to:"/About",className:"text-white",children:"About"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]})]})})]})}),(0,ve.jsx)("div",{className:"block w-full mt-4 md:hidden",children:(0,ve.jsx)("nav",{children:(0,ve.jsxs)("ul",{className:"flex flex-col items-start pl-4 space-y-2",children:[(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(ze,{to:"/",className:"text-white",children:"Home"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(ze,{to:"/cv-parking-permit",className:"text-white",children:"Campus View"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(ze,{to:"/canvas-parking-permit",className:"text-white",children:"Canvas"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(ze,{to:"/placeholder-parking-permit",className:"text-white",children:"Coming Soon"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]}),(0,ve.jsxs)("li",{className:"relative group",children:[(0,ve.jsx)(ze,{to:"/About",className:"text-white",children:"About"}),(0,ve.jsx)("span",{className:"absolute bottom-0 left-0 block w-full h-0.5 bg-teal-300 scale-x-0 group-hover:scale-x-100 transition-transform origin-right duration-300 ease-out"})]})]})})})]}),Ve=()=>(0,ve.jsx)("div",{className:"flex items-center justify-center flex-grow p-6",children:(0,ve.jsx)("h2",{className:"text-3xl font-bold text-center text-gray-800",children:"Welcome to Bryan's Parking Pass Generator"})}),qe={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function Ze(e){return function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const r=t.width?String(t.width):e.defaultWidth;return e.formats[r]||e.formats[e.defaultWidth]}}const Ke={date:Ze({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:Ze({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:Ze({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},Je={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function _e(e){return(t,r)=>{let n;if("formatting"===(r?.context?String(r.context):"standalone")&&e.formattingValues){const t=e.defaultFormattingWidth||e.defaultWidth,s=r?.width?String(r.width):t;n=e.formattingValues[s]||e.formattingValues[t]}else{const t=e.defaultWidth,s=r?.width?String(r.width):e.defaultWidth;n=e.values[s]||e.values[t]}return n[e.argumentCallback?e.argumentCallback(t):t]}}const $e={ordinalNumber:(e,t)=>{const r=Number(e),n=r%100;if(n>20||n<10)switch(n%10){case 1:return r+"st";case 2:return r+"nd";case 3:return r+"rd"}return r+"th"},era:_e({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:_e({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:e=>e-1}),month:_e({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:_e({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:_e({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function et(e){return function(t){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=r.width,s=n&&e.matchPatterns[n]||e.matchPatterns[e.defaultMatchWidth],i=t.match(s);if(!i)return null;const o=i[0],A=n&&e.parsePatterns[n]||e.parsePatterns[e.defaultParseWidth],a=Array.isArray(A)?function(e,t){for(let r=0;r<e.length;r++)if(t(e[r]))return r;return}(A,(e=>e.test(o))):function(e,t){for(const r in e)if(Object.prototype.hasOwnProperty.call(e,r)&&t(e[r]))return r;return}(A,(e=>e.test(o)));let l;l=e.valueCallback?e.valueCallback(a):a,l=r.valueCallback?r.valueCallback(l):l;return{value:l,rest:t.slice(o.length)}}}var tt;const rt={code:"en-US",formatDistance:(e,t,r)=>{let n;const s=qe[e];return n="string"===typeof s?s:1===t?s.one:s.other.replace("{{count}}",t.toString()),r?.addSuffix?r.comparison&&r.comparison>0?"in "+n:n+" ago":n},formatLong:Ke,formatRelative:(e,t,r,n)=>Je[e],localize:$e,match:{ordinalNumber:(tt={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:e=>parseInt(e,10)},function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r=e.match(tt.matchPattern);if(!r)return null;const n=r[0],s=e.match(tt.parsePattern);if(!s)return null;let i=tt.valueCallback?tt.valueCallback(s[0]):s[0];return i=t.valueCallback?t.valueCallback(i):i,{value:i,rest:e.slice(n.length)}}),era:et({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:et({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:e=>e+1}),month:et({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:et({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:et({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}};let nt={};function st(){return nt}Math.pow(10,8);const it=6048e5,ot=864e5;function At(e){const t=Object.prototype.toString.call(e);return e instanceof Date||"object"===typeof e&&"[object Date]"===t?new e.constructor(+e):"number"===typeof e||"[object Number]"===t||"string"===typeof e||"[object String]"===t?new Date(e):new Date(NaN)}function at(e){const t=At(e);return t.setHours(0,0,0,0),t}function lt(e){const t=At(e),r=new Date(Date.UTC(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()));return r.setUTCFullYear(t.getFullYear()),+e-+r}function ct(e,t){const r=at(e),n=at(t),s=+r-lt(r),i=+n-lt(n);return Math.round((s-i)/ot)}function ut(e,t){return e instanceof Date?new e.constructor(t):new Date(t)}function dt(e){const t=At(e),r=ut(e,0);return r.setFullYear(t.getFullYear(),0,1),r.setHours(0,0,0,0),r}function ht(e){const t=At(e);return ct(t,dt(t))+1}function ft(e,t){const r=st(),n=t?.weekStartsOn??t?.locale?.options?.weekStartsOn??r.weekStartsOn??r.locale?.options?.weekStartsOn??0,s=At(e),i=s.getDay(),o=(i<n?7:0)+i-n;return s.setDate(s.getDate()-o),s.setHours(0,0,0,0),s}function gt(e){return ft(e,{weekStartsOn:1})}function pt(e){const t=At(e),r=t.getFullYear(),n=ut(e,0);n.setFullYear(r+1,0,4),n.setHours(0,0,0,0);const s=gt(n),i=ut(e,0);i.setFullYear(r,0,4),i.setHours(0,0,0,0);const o=gt(i);return t.getTime()>=s.getTime()?r+1:t.getTime()>=o.getTime()?r:r-1}function mt(e){const t=pt(e),r=ut(e,0);return r.setFullYear(t,0,4),r.setHours(0,0,0,0),gt(r)}function wt(e){const t=At(e),r=+gt(t)-+mt(t);return Math.round(r/it)+1}function vt(e,t){const r=At(e),n=r.getFullYear(),s=st(),i=t?.firstWeekContainsDate??t?.locale?.options?.firstWeekContainsDate??s.firstWeekContainsDate??s.locale?.options?.firstWeekContainsDate??1,o=ut(e,0);o.setFullYear(n+1,0,i),o.setHours(0,0,0,0);const A=ft(o,t),a=ut(e,0);a.setFullYear(n,0,i),a.setHours(0,0,0,0);const l=ft(a,t);return r.getTime()>=A.getTime()?n+1:r.getTime()>=l.getTime()?n:n-1}function bt(e,t){const r=st(),n=t?.firstWeekContainsDate??t?.locale?.options?.firstWeekContainsDate??r.firstWeekContainsDate??r.locale?.options?.firstWeekContainsDate??1,s=vt(e,t),i=ut(e,0);i.setFullYear(s,0,n),i.setHours(0,0,0,0);return ft(i,t)}function yt(e,t){const r=At(e),n=+ft(r,t)-+bt(r,t);return Math.round(n/it)+1}function Bt(e,t){return(e<0?"-":"")+Math.abs(e).toString().padStart(t,"0")}const Et={y(e,t){const r=e.getFullYear(),n=r>0?r:1-r;return Bt("yy"===t?n%100:n,t.length)},M(e,t){const r=e.getMonth();return"M"===t?String(r+1):Bt(r+1,2)},d:(e,t)=>Bt(e.getDate(),t.length),a(e,t){const r=e.getHours()/12>=1?"pm":"am";switch(t){case"a":case"aa":return r.toUpperCase();case"aaa":return r;case"aaaaa":return r[0];default:return"am"===r?"a.m.":"p.m."}},h:(e,t)=>Bt(e.getHours()%12||12,t.length),H:(e,t)=>Bt(e.getHours(),t.length),m:(e,t)=>Bt(e.getMinutes(),t.length),s:(e,t)=>Bt(e.getSeconds(),t.length),S(e,t){const r=t.length,n=e.getMilliseconds();return Bt(Math.trunc(n*Math.pow(10,r-3)),t.length)}},Ct="midnight",xt="noon",It="morning",Dt="afternoon",Qt="evening",Pt="night",Ft={G:function(e,t,r){const n=e.getFullYear()>0?1:0;switch(t){case"G":case"GG":case"GGG":return r.era(n,{width:"abbreviated"});case"GGGGG":return r.era(n,{width:"narrow"});default:return r.era(n,{width:"wide"})}},y:function(e,t,r){if("yo"===t){const t=e.getFullYear(),n=t>0?t:1-t;return r.ordinalNumber(n,{unit:"year"})}return Et.y(e,t)},Y:function(e,t,r,n){const s=vt(e,n),i=s>0?s:1-s;if("YY"===t){return Bt(i%100,2)}return"Yo"===t?r.ordinalNumber(i,{unit:"year"}):Bt(i,t.length)},R:function(e,t){return Bt(pt(e),t.length)},u:function(e,t){return Bt(e.getFullYear(),t.length)},Q:function(e,t,r){const n=Math.ceil((e.getMonth()+1)/3);switch(t){case"Q":return String(n);case"QQ":return Bt(n,2);case"Qo":return r.ordinalNumber(n,{unit:"quarter"});case"QQQ":return r.quarter(n,{width:"abbreviated",context:"formatting"});case"QQQQQ":return r.quarter(n,{width:"narrow",context:"formatting"});default:return r.quarter(n,{width:"wide",context:"formatting"})}},q:function(e,t,r){const n=Math.ceil((e.getMonth()+1)/3);switch(t){case"q":return String(n);case"qq":return Bt(n,2);case"qo":return r.ordinalNumber(n,{unit:"quarter"});case"qqq":return r.quarter(n,{width:"abbreviated",context:"standalone"});case"qqqqq":return r.quarter(n,{width:"narrow",context:"standalone"});default:return r.quarter(n,{width:"wide",context:"standalone"})}},M:function(e,t,r){const n=e.getMonth();switch(t){case"M":case"MM":return Et.M(e,t);case"Mo":return r.ordinalNumber(n+1,{unit:"month"});case"MMM":return r.month(n,{width:"abbreviated",context:"formatting"});case"MMMMM":return r.month(n,{width:"narrow",context:"formatting"});default:return r.month(n,{width:"wide",context:"formatting"})}},L:function(e,t,r){const n=e.getMonth();switch(t){case"L":return String(n+1);case"LL":return Bt(n+1,2);case"Lo":return r.ordinalNumber(n+1,{unit:"month"});case"LLL":return r.month(n,{width:"abbreviated",context:"standalone"});case"LLLLL":return r.month(n,{width:"narrow",context:"standalone"});default:return r.month(n,{width:"wide",context:"standalone"})}},w:function(e,t,r,n){const s=yt(e,n);return"wo"===t?r.ordinalNumber(s,{unit:"week"}):Bt(s,t.length)},I:function(e,t,r){const n=wt(e);return"Io"===t?r.ordinalNumber(n,{unit:"week"}):Bt(n,t.length)},d:function(e,t,r){return"do"===t?r.ordinalNumber(e.getDate(),{unit:"date"}):Et.d(e,t)},D:function(e,t,r){const n=ht(e);return"Do"===t?r.ordinalNumber(n,{unit:"dayOfYear"}):Bt(n,t.length)},E:function(e,t,r){const n=e.getDay();switch(t){case"E":case"EE":case"EEE":return r.day(n,{width:"abbreviated",context:"formatting"});case"EEEEE":return r.day(n,{width:"narrow",context:"formatting"});case"EEEEEE":return r.day(n,{width:"short",context:"formatting"});default:return r.day(n,{width:"wide",context:"formatting"})}},e:function(e,t,r,n){const s=e.getDay(),i=(s-n.weekStartsOn+8)%7||7;switch(t){case"e":return String(i);case"ee":return Bt(i,2);case"eo":return r.ordinalNumber(i,{unit:"day"});case"eee":return r.day(s,{width:"abbreviated",context:"formatting"});case"eeeee":return r.day(s,{width:"narrow",context:"formatting"});case"eeeeee":return r.day(s,{width:"short",context:"formatting"});default:return r.day(s,{width:"wide",context:"formatting"})}},c:function(e,t,r,n){const s=e.getDay(),i=(s-n.weekStartsOn+8)%7||7;switch(t){case"c":return String(i);case"cc":return Bt(i,t.length);case"co":return r.ordinalNumber(i,{unit:"day"});case"ccc":return r.day(s,{width:"abbreviated",context:"standalone"});case"ccccc":return r.day(s,{width:"narrow",context:"standalone"});case"cccccc":return r.day(s,{width:"short",context:"standalone"});default:return r.day(s,{width:"wide",context:"standalone"})}},i:function(e,t,r){const n=e.getDay(),s=0===n?7:n;switch(t){case"i":return String(s);case"ii":return Bt(s,t.length);case"io":return r.ordinalNumber(s,{unit:"day"});case"iii":return r.day(n,{width:"abbreviated",context:"formatting"});case"iiiii":return r.day(n,{width:"narrow",context:"formatting"});case"iiiiii":return r.day(n,{width:"short",context:"formatting"});default:return r.day(n,{width:"wide",context:"formatting"})}},a:function(e,t,r){const n=e.getHours()/12>=1?"pm":"am";switch(t){case"a":case"aa":return r.dayPeriod(n,{width:"abbreviated",context:"formatting"});case"aaa":return r.dayPeriod(n,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return r.dayPeriod(n,{width:"narrow",context:"formatting"});default:return r.dayPeriod(n,{width:"wide",context:"formatting"})}},b:function(e,t,r){const n=e.getHours();let s;switch(s=12===n?xt:0===n?Ct:n/12>=1?"pm":"am",t){case"b":case"bb":return r.dayPeriod(s,{width:"abbreviated",context:"formatting"});case"bbb":return r.dayPeriod(s,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return r.dayPeriod(s,{width:"narrow",context:"formatting"});default:return r.dayPeriod(s,{width:"wide",context:"formatting"})}},B:function(e,t,r){const n=e.getHours();let s;switch(s=n>=17?Qt:n>=12?Dt:n>=4?It:Pt,t){case"B":case"BB":case"BBB":return r.dayPeriod(s,{width:"abbreviated",context:"formatting"});case"BBBBB":return r.dayPeriod(s,{width:"narrow",context:"formatting"});default:return r.dayPeriod(s,{width:"wide",context:"formatting"})}},h:function(e,t,r){if("ho"===t){let t=e.getHours()%12;return 0===t&&(t=12),r.ordinalNumber(t,{unit:"hour"})}return Et.h(e,t)},H:function(e,t,r){return"Ho"===t?r.ordinalNumber(e.getHours(),{unit:"hour"}):Et.H(e,t)},K:function(e,t,r){const n=e.getHours()%12;return"Ko"===t?r.ordinalNumber(n,{unit:"hour"}):Bt(n,t.length)},k:function(e,t,r){let n=e.getHours();return 0===n&&(n=24),"ko"===t?r.ordinalNumber(n,{unit:"hour"}):Bt(n,t.length)},m:function(e,t,r){return"mo"===t?r.ordinalNumber(e.getMinutes(),{unit:"minute"}):Et.m(e,t)},s:function(e,t,r){return"so"===t?r.ordinalNumber(e.getSeconds(),{unit:"second"}):Et.s(e,t)},S:function(e,t){return Et.S(e,t)},X:function(e,t,r){const n=e.getTimezoneOffset();if(0===n)return"Z";switch(t){case"X":return Mt(n);case"XXXX":case"XX":return St(n);default:return St(n,":")}},x:function(e,t,r){const n=e.getTimezoneOffset();switch(t){case"x":return Mt(n);case"xxxx":case"xx":return St(n);default:return St(n,":")}},O:function(e,t,r){const n=e.getTimezoneOffset();switch(t){case"O":case"OO":case"OOO":return"GMT"+Lt(n,":");default:return"GMT"+St(n,":")}},z:function(e,t,r){const n=e.getTimezoneOffset();switch(t){case"z":case"zz":case"zzz":return"GMT"+Lt(n,":");default:return"GMT"+St(n,":")}},t:function(e,t,r){return Bt(Math.trunc(e.getTime()/1e3),t.length)},T:function(e,t,r){return Bt(e.getTime(),t.length)}};function Lt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const r=e>0?"-":"+",n=Math.abs(e),s=Math.trunc(n/60),i=n%60;return 0===i?r+String(s):r+String(s)+t+Bt(i,2)}function Mt(e,t){if(e%60===0){return(e>0?"-":"+")+Bt(Math.abs(e)/60,2)}return St(e,t)}function St(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const r=e>0?"-":"+",n=Math.abs(e);return r+Bt(Math.trunc(n/60),2)+t+Bt(n%60,2)}const Nt=(e,t)=>{switch(e){case"P":return t.date({width:"short"});case"PP":return t.date({width:"medium"});case"PPP":return t.date({width:"long"});default:return t.date({width:"full"})}},kt=(e,t)=>{switch(e){case"p":return t.time({width:"short"});case"pp":return t.time({width:"medium"});case"ppp":return t.time({width:"long"});default:return t.time({width:"full"})}},Rt={p:kt,P:(e,t)=>{const r=e.match(/(P+)(p+)?/)||[],n=r[1],s=r[2];if(!s)return Nt(e,t);let i;switch(n){case"P":i=t.dateTime({width:"short"});break;case"PP":i=t.dateTime({width:"medium"});break;case"PPP":i=t.dateTime({width:"long"});break;default:i=t.dateTime({width:"full"})}return i.replace("{{date}}",Nt(n,t)).replace("{{time}}",kt(s,t))}},Tt=/^D+$/,Wt=/^Y+$/,jt=["D","DD","YY","YYYY"];function Gt(e){return e instanceof Date||"object"===typeof e&&"[object Date]"===Object.prototype.toString.call(e)}function Xt(e){if(!Gt(e)&&"number"!==typeof e)return!1;const t=At(e);return!isNaN(Number(t))}const Ot=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,zt=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,Yt=/^'([^]*?)'?$/,Ht=/''/g,Ut=/[a-zA-Z]/;function Vt(e,t,r){const n=st(),s=r?.locale??n.locale??rt,i=r?.firstWeekContainsDate??r?.locale?.options?.firstWeekContainsDate??n.firstWeekContainsDate??n.locale?.options?.firstWeekContainsDate??1,o=r?.weekStartsOn??r?.locale?.options?.weekStartsOn??n.weekStartsOn??n.locale?.options?.weekStartsOn??0,A=At(e);if(!Xt(A))throw new RangeError("Invalid time value");let a=t.match(zt).map((e=>{const t=e[0];if("p"===t||"P"===t){return(0,Rt[t])(e,s.formatLong)}return e})).join("").match(Ot).map((e=>{if("''"===e)return{isToken:!1,value:"'"};const t=e[0];if("'"===t)return{isToken:!1,value:qt(e)};if(Ft[t])return{isToken:!0,value:e};if(t.match(Ut))throw new RangeError("Format string contains an unescaped latin alphabet character `"+t+"`");return{isToken:!1,value:e}}));s.localize.preprocessor&&(a=s.localize.preprocessor(A,a));const l={firstWeekContainsDate:i,weekStartsOn:o,locale:s};return a.map((n=>{if(!n.isToken)return n.value;const i=n.value;(!r?.useAdditionalWeekYearTokens&&function(e){return Wt.test(e)}(i)||!r?.useAdditionalDayOfYearTokens&&function(e){return Tt.test(e)}(i))&&function(e,t,r){const n=function(e,t,r){const n="Y"===e[0]?"years":"days of the month";return`Use \`${e.toLowerCase()}\` instead of \`${e}\` (in \`${t}\`) for formatting ${n} to the input \`${r}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`}(e,t,r);if(console.warn(n),jt.includes(e))throw new RangeError(n)}(i,t,String(e));return(0,Ft[i[0]])(A,i,s.localize,l)})).join("")}function qt(e){const t=e.match(Yt);return t?t[1].replace(Ht,"'"):e}function Zt(e,t){const r=At(e);return isNaN(t)?ut(e,NaN):t?(r.setDate(r.getDate()+t),r):r}const Kt="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Jt=new Uint8Array(256);for(let r=0;r<64;r++)Jt[Kt.charCodeAt(r)]=r;const _t=e=>{let t="";const r=e.length;for(let n=0;n<r;n+=3)t+=Kt[e[n]>>2],t+=Kt[(3&e[n])<<4|e[n+1]>>4],t+=Kt[(15&e[n+1])<<2|e[n+2]>>6],t+=Kt[63&e[n+2]];return r%3===2?t=t.substring(0,t.length-1)+"=":r%3===1&&(t=t.substring(0,t.length-2)+"=="),t},$t=e=>{let t=.75*e.length;const r=e.length;let n,s,i,o,A,a=0;"="===e[e.length-1]&&(t--,"="===e[e.length-2]&&t--);const l=new Uint8Array(t);for(n=0;n<r;n+=4)s=Jt[e.charCodeAt(n)],i=Jt[e.charCodeAt(n+1)],o=Jt[e.charCodeAt(n+2)],A=Jt[e.charCodeAt(n+3)],l[a++]=s<<2|i>>4,l[a++]=(15&i)<<4|o>>2,l[a++]=(3&o)<<6|63&A;return l},er=/^(data)?:?([\w\/\+]+)?;?(charset=[\w-]+|base64)?.*,/i,tr=e=>{const t=e.trim(),r=t.substring(0,100).match(er);if(!r)return $t(t);const[n]=r,s=t.substring(n.length);return $t(s)},rr=e=>e.charCodeAt(0),nr=e=>e.codePointAt(0),sr=(e,t)=>ar(e.toString(16),t,"0").toUpperCase(),ir=e=>sr(e,2),or=e=>String.fromCharCode(e),Ar=e=>or(parseInt(e,16)),ar=(e,t,r)=>{let n="";for(let s=0,i=t-e.length;s<i;s++)n+=r;return n+e},lr=e=>{const t=new Uint8Array(e.length);return cr(e,t,0),t},cr=(e,t,r)=>{const n=e.length;for(let s=0;s<n;s++)t[r++]=e.charCodeAt(s);return n},ur=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4;return`${e}-${Math.floor(Math.random()*10**t)}`},dr=e=>e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),hr=e=>e.replace(/\t|\u0085|\u2028|\u2029/g,"    ").replace(/[\b\v]/g,""),fr=["\\n","\\f","\\r","\\u000B"],gr=["\n","\f","\r","\v"],pr=e=>/^[\n\f\r\u000B]$/.test(e),mr=e=>e.split(/[\n\f\r\u000B]/),wr=e=>e.replace(/[\n\f\r\u000B]/g," "),vr=(e,t)=>{const r=e.charCodeAt(t);let n;const s=t+1;let i=1;return r>=55296&&r<=56319&&e.length>s&&(n=e.charCodeAt(s),n>=56320&&n<=57343&&(i=2)),[e.slice(t,t+i),i]},br=e=>{const t=[];for(let r=0,n=e.length;r<n;){const[n,s]=vr(e,r);t.push(n),r+=s}return t},yr=(e,t,r,n)=>{const s=(e=>{const t=fr.join("|"),r=["$"];for(let s=0,i=e.length;s<i;s++){const n=e[s];if(pr(n))throw new TypeError(`\`wordBreak\` must not include ${t}`);r.push(""===n?".":dr(n))}const n=r.join("|");return new RegExp(`(${t})|((.*?)(${n}))`,"gm")})(t),i=hr(e).match(s);let o="",A=0;const a=[],l=()=>{""!==o&&a.push(o),o="",A=0};for(let c=0,u=i.length;c<u;c++){const e=i[c];if(pr(e))l();else{const t=n(e);A+t>r&&l(),o+=e,A+=t}}return l(),a},Br=/^D:(\d\d\d\d)(\d\d)?(\d\d)?(\d\d)?(\d\d)?(\d\d)?([+\-Z])?(\d\d)?'?(\d\d)?'?$/,Er=e=>{const t=e.match(Br);if(!t)return;const[,r,n="01",s="01",i="00",o="00",A="00",a="Z",l="00",c="00"]=t;return new Date(`${r}-${n}-${s}T${i}:${o}:${A}${"Z"===a?"Z":`${a}${l}:${c}`}`)},Cr=(e,t)=>{var r;let n,s=0;for(;s<e.length;){const i=e.substring(s).match(t);if(!i)return{match:n,pos:s};n=i,s+=(null!==(r=i.index)&&void 0!==r?r:0)+i[0].length}return{match:n,pos:s}},xr=e=>e[e.length-1],Ir=e=>{if(e instanceof Uint8Array)return e;const t=e.length,r=new Uint8Array(t);for(let n=0;n<t;n++)r[n]=e.charCodeAt(n);return r},Dr=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];const n=t.length,s=[];for(let a=0;a<n;a++){const e=t[a];s[a]=e instanceof Uint8Array?e:Ir(e)}let i=0;for(let a=0;a<n;a++)i+=t[a].length;const o=new Uint8Array(i);let A=0;for(let a=0;a<n;a++){const e=s[a];for(let t=0,r=e.length;t<r;t++)o[A++]=e[t]}return o},Qr=e=>{let t=0;for(let s=0,i=e.length;s<i;s++)t+=e[s].length;const r=new Uint8Array(t);let n=0;for(let s=0,i=e.length;s<i;s++){const t=e[s];r.set(t,n),n+=t.length}return r},Pr=e=>{let t="";for(let r=0,n=e.length;r<n;r++)t+=or(e[r]);return t},Fr=(e,t)=>e.id-t.id,Lr=(e,t)=>{const r=[];for(let n=0,s=e.length;n<s;n++){const s=e[n],i=e[n-1];0!==n&&t(s)===t(i)||r.push(s)}return r},Mr=(e,t)=>{if(e.length!==t.length)return!1;for(let r=0,n=e.length;r<n;r++)if(e[r]!==t[r])return!1;return!0},Sr=e=>{const t=e.length;for(let r=0,n=Math.floor(t/2);r<n;r++){const n=r,s=t-r-1,i=e[r];e[n]=e[s],e[s]=i}return e},Nr=e=>{let t=0;for(let r=0,n=e.length;r<n;r++)t+=e[r];return t},kr=(e,t)=>{const r=new Array(t-e);for(let n=0,s=r.length;n<s;n++)r[n]=e+n;return r},Rr=(e,t)=>{const r=new Array(t.length);for(let n=0,s=t.length;n<s;n++)r[n]=e[t[n]];return r},Tr=e=>e instanceof Uint8Array||e instanceof ArrayBuffer||"string"===typeof e,Wr=e=>{if("string"===typeof e)return tr(e);if(e instanceof ArrayBuffer)return new Uint8Array(e);if(e instanceof Uint8Array)return e;throw new TypeError("`input` must be one of `string | ArrayBuffer | Uint8Array`")},jr=()=>new Promise((e=>{setTimeout((()=>e()),0)})),Gr=function(e){const t=[];(!(arguments.length>1&&void 0!==arguments[1])||arguments[1])&&t.push(239,187,191);for(let r=0,n=e.length;r<n;){const n=e.codePointAt(r);if(n<128){const e=127&n;t.push(e),r+=1}else if(n<2048){const e=n>>6&31|192,s=63&n|128;t.push(e,s),r+=1}else if(n<65536){const e=n>>12&15|224,s=n>>6&63|128,i=63&n|128;t.push(e,s,i),r+=1}else{if(!(n<1114112))throw new Error(`Invalid code point: 0x${ir(n)}`);{const e=n>>18&7|240,s=n>>12&63|128,i=n>>6&63|128,o=63&n|128;t.push(e,s,i,o),r+=2}}}return new Uint8Array(t)},Xr=function(e){const t=[];(!(arguments.length>1&&void 0!==arguments[1])||arguments[1])&&t.push(65279);for(let r=0,n=e.length;r<n;){const n=e.codePointAt(r);if(n<65536)t.push(n),r+=1;else{if(!(n<1114112))throw new Error(`Invalid code point: 0x${ir(n)}`);t.push(Yr(n),Hr(n)),r+=2}}return new Uint16Array(t)},Or=e=>e>=0&&e<=65535,zr=e=>e>=65536&&e<=1114111,Yr=e=>Math.floor((e-65536)/1024)+55296,Hr=e=>(e-65536)%1024+56320;var Ur;!function(e){e.BigEndian="BigEndian",e.LittleEndian="LittleEndian"}(Ur||(Ur={}));const Vr="\ufffd".codePointAt(0),qr=function(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(e.length<=1)return String.fromCodePoint(Vr);const r=t?_r(e):Ur.BigEndian;let n=t?2:0;const s=[];for(;e.length-n>=2;){const t=Jr(e[n++],e[n++],r);if(Zr(t))if(e.length-n<2)s.push(Vr);else{const i=Jr(e[n++],e[n++],r);Kr(i)?s.push(t,i):s.push(Vr)}else Kr(t)?(n+=2,s.push(Vr)):s.push(t)}return n<e.length&&s.push(Vr),String.fromCodePoint(...s)},Zr=e=>e>=55296&&e<=56319,Kr=e=>e>=56320&&e<=57343,Jr=(e,t,r)=>{if(r===Ur.LittleEndian)return t<<8|e;if(r===Ur.BigEndian)return e<<8|t;throw new Error(`Invalid byteOrder: ${r}`)},_r=e=>$r(e)?Ur.BigEndian:en(e)?Ur.LittleEndian:Ur.BigEndian,$r=e=>254===e[0]&&255===e[1],en=e=>255===e[0]&&254===e[1],tn=e=>$r(e)||en(e),rn=e=>{let t=String(e);if(Math.abs(e)<1){const r=parseInt(e.toString().split("e-")[1]);if(r){const n=e<0;n&&(e*=-1),e*=Math.pow(10,r-1),t="0."+new Array(r).join("0")+e.toString().substring(2),n&&(t="-"+t)}}else{let r=parseInt(e.toString().split("+")[1]);r>20&&(r-=20,t=(e/=Math.pow(10,r)).toString()+new Array(r+1).join("0"))}return t},nn=e=>Math.ceil(e.toString(2).length/8),sn=e=>{const t=new Uint8Array(nn(e));for(let r=1;r<=t.length;r++)t[r-1]=e>>8*(t.length-r);return t},on=e=>{throw new Error(e)};for(var An=r(7717),an=r.n(An),ln="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",cn=new Uint8Array(256),un=0;un<64;un++)cn[ln.charCodeAt(un)]=un;var dn=function(e){return function(e){for(var t="",r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t}(an().inflate(function(e){var t,r,n,s,i,o=.75*e.length,A=e.length,a=0;"="===e[e.length-1]&&(o--,"="===e[e.length-2]&&o--);var l=new Uint8Array(o);for(t=0;t<A;t+=4)r=cn[e.charCodeAt(t)],n=cn[e.charCodeAt(t+1)],s=cn[e.charCodeAt(t+2)],i=cn[e.charCodeAt(t+3)],l[a++]=r<<2|n>>4,l[a++]=(15&n)<<4|s>>2,l[a++]=(3&s)<<6|63&i;return l}(e)))};var hn,fn={Courier:"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","Courier-Bold":"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","Courier-Oblique":"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","Courier-BoldOblique":"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",Helvetica:"","Helvetica-Bold":"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","Helvetica-Oblique":"","Helvetica-BoldOblique":"","Times-Roman":"","Times-Bold":"","Times-Italic":"","Times-BoldItalic":"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",Symbol:"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",ZapfDingbats:"eJxtmNtu20YQhl+F4FULyMGeD7pz3AY1ChtG7NpFA18w1NomIlECSRcxgrx7SVk7+wOdG8H5OJydf2Z2d5gf9cV+t0v9VK/r+6vXsXlOlbHe28paq229qj/t++m62aXZ4J/m8PRb1z9/baZxefK63Z6eXN5dVMvTCh83u277xr/6kLrnl2XNq7TpXnczuZyabdee98/b2VzM/x4/dd/T5qab2pd6PQ2vaVVfvDRD005puE3Lu7eH1HbN9hTjx4/77/X6y5lcnUmjVzHIVVDicVX/1W/SsO36dLMfu6nb9/X6TAoBD+5euvZbn8axXtuZ36dhPJrVQqgPQoh5hev91LWLkIv94W1Ygq9+aX+tZAx2tfz64284/sblN/rqfLP/mqrbt3FKu7G67Nv9cNgPzZQ2H6rz7bb6vLgZq89pTMO/M/xfEqturJpqSM/d7GJIm2oamk3aNcO3av80O5xh3yyKmm1193ZIT02bqovTKjP+MAf++7zsZvZ3276kYyWWXB0z99S18/PbafPHQ71W4fjn/fxnFO+ZvkrT0LVzTr78qB/+nk38bHM9exgP8zr1z9U7jt6840YW5uSJKcZOCaBBnKgm5mU8MVNYyMwWFvO7Ukagkmgg6sDWQ5yFFqjzUrLEaQ3BEmiwNsMSaZS0vgWfOkPHWQowNeTUc0kumnxZvsgPxlGai6VTGUqAVCTQ6QkWnc77DKEiLktSUBJKqHIQZ86d8gCpHYoiEzMsb1ubYy8vW50DChB5ZhGqrijD0EqUIeiaEHIfCg5Kpuu0ApiToaGPSY0uaQsyr65L2oKi1yFt1PLaQ3lzfXTgXodGoJYzglndSLDMPg1sTPJpQJHJigw0QrGERqD9YhyTOgONQDUyuF1zaxuokc/BW2ztXCMrGZ9WMW1oQZHIXWNBkSCfRZEL5BMUiZw6CzVSFCfUSGZFNjIldoKDkonTKQiJIGzWmFd3BizJJ9SINoLDriOfUCOZS+zg+KGD1qGiLNMLxtJD1/ns00ON6EzyUCM6vbxhoBKaqbG3DFQCNiL1iHccBPV0DHhQH/JW8EW90dkyFKGywCJU0WkVSvSGeiSUODWFFD0HYdPQVoiRgfPMA+/nnRgiAyNYSjpWNQcNSMrtFCUH4ZIRpSCWocFCSuhCEY6hoUClc0WC52BJlCYYLQdhN+hygRRRlo5BKRRLS6oihSqh+ZzzRGG1Mo4Iz1LoP0qsxDGFzk0JE42ji0jCPejomJKCuwil4m5CiRMEUMVSzVLDUstSx1Juc0oVWMpqY295qVltmtWmWW2a1aZZbZrVplltmtWmWW2G1WZYbYbVZlhthtVmWG2G1WZYbYbVZlhtltVmWW2W1WZZbZbVZlltltVmWW2W1QYjQCh7E2aAQHeGhCFgPoNoy8KNb2wxBhmGKBxoUZXlLGsLI6AsftEDHV0wIURVbANLcTKlGGBIKPOAxCmhePCKUwFzAmpDFRQvjA9R06Hq8TONvshgKDCuRAZTXigUxjxNFfKRo3CLhnIJBMFRvMZpqpNBMlQJzGT5WFQMVQI/AikPMIhEU1aDjqJvQwmjSHB05cC9jbYwc5UtAHNLhDw41ha+lEqF4JaH3gmB61SYcqInxTDmQK8v08vjqv4zDf1N0w3Lf4A8/vwPpfK11w=="};!function(e){e.Courier="Courier",e.CourierBold="Courier-Bold",e.CourierOblique="Courier-Oblique",e.CourierBoldOblique="Courier-BoldOblique",e.Helvetica="Helvetica",e.HelveticaBold="Helvetica-Bold",e.HelveticaOblique="Helvetica-Oblique",e.HelveticaBoldOblique="Helvetica-BoldOblique",e.TimesRoman="Times-Roman",e.TimesRomanBold="Times-Bold",e.TimesRomanItalic="Times-Italic",e.TimesRomanBoldItalic="Times-BoldItalic",e.Symbol="Symbol",e.ZapfDingbats="ZapfDingbats"}(hn||(hn={}));var gn={},pn=function(){function e(){var e=this;this.getWidthOfGlyph=function(t){return e.CharWidths[t]},this.getXAxisKerningForPair=function(t,r){return(e.KernPairXAmounts[t]||{})[r]}}return e.load=function(t){var r=gn[t];if(r)return r;var n=dn(fn[t]),s=Object.assign(new e,JSON.parse(n));return s.CharWidths=s.CharMetrics.reduce((function(e,t){return e[t.N]=t.WX,e}),{}),s.KernPairXAmounts=s.KernPairs.reduce((function(e,t){var r=t[0],n=t[1],s=t[2];return e[r]||(e[r]={}),e[r][n]=s,e}),{}),gn[t]=s,s},e}();var mn=dn("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"),wn=JSON.parse(mn),vn=function(e,t){var r=this;this.canEncodeUnicodeCodePoint=function(e){return e in r.unicodeMappings},this.encodeUnicodeCodePoint=function(e){var t=r.unicodeMappings[e];if(!t){var n=String.fromCharCode(e),s="0x"+function(e,t,r){for(var n="",s=0,i=t-e.length;s<i;s++)n+=r;return n+e}(e.toString(16),4,"0"),i=r.name+' cannot encode "'+n+'" ('+s+")";throw new Error(i)}return{code:t[0],name:t[1]}},this.name=e,this.supportedCodePoints=Object.keys(t).map(Number).sort((function(e,t){return e-t})),this.unicodeMappings=t},bn={Symbol:new vn("Symbol",wn.symbol),ZapfDingbats:new vn("ZapfDingbats",wn.zapfdingbats),WinAnsi:new vn("WinAnsi",wn.win1252)};const yn=e=>Object.keys(e).map((t=>e[t])),Bn=yn(hn),En=e=>Bn.includes(e),Cn=(e,t)=>e.x===t.x&&e.y===t.y&&e.width===t.width&&e.height===t.height,xn=e=>`\`${e}\``,In=e=>`'${e}'`,Dn=e=>{const t=typeof e;return"string"===t?In(e):"undefined"===t?xn(e):e},Qn=(e,t,r)=>{const n=new Array(r.length);for(let i=0,o=r.length;i<o;i++){const e=r[i];n[i]=Dn(e)}const s=n.join(" or ");return`${xn(t)} must be one of ${s}, but was actually ${Dn(e)}`},Pn=(e,t,r)=>{Array.isArray(r)||(r=yn(r));for(let n=0,s=r.length;n<s;n++)if(e===r[n])return;throw new TypeError(Qn(e,t,r))},Fn=(e,t,r)=>{Array.isArray(r)||(r=yn(r)),Pn(e,t,r.concat(void 0))},Ln=(e,t,r)=>{Array.isArray(r)||(r=yn(r));for(let n=0,s=e.length;n<s;n++)Pn(e[n],t,r)},Mn=e=>null===e?"null":void 0===e?"undefined":"string"===typeof e?"string":isNaN(e)?"NaN":"number"===typeof e?"number":"boolean"===typeof e?"boolean":"symbol"===typeof e?"symbol":"bigint"===typeof e?"bigint":e.constructor&&e.constructor.name?e.constructor.name:e.name?e.name:e.constructor?String(e.constructor):String(e),Sn=(e,t)=>"null"===t?null===e:"undefined"===t?void 0===e:"string"===t?"string"===typeof e:"number"===t?"number"===typeof e&&!isNaN(e):"boolean"===t?"boolean"===typeof e:"symbol"===t?"symbol"===typeof e:"bigint"===t?"bigint"===typeof e:t===Date?e instanceof Date:t===Array?e instanceof Array:t===Uint8Array?e instanceof Uint8Array:t===ArrayBuffer?e instanceof ArrayBuffer:t===Function?e instanceof Function:e instanceof t[0],Nn=(e,t,r)=>{const n=new Array(r.length);for(let i=0,o=r.length;i<o;i++){const e=r[i];"null"===e&&(n[i]=xn("null")),"undefined"===e&&(n[i]=xn("undefined")),"string"===e?n[i]=xn("string"):"number"===e?n[i]=xn("number"):"boolean"===e?n[i]=xn("boolean"):"symbol"===e?n[i]=xn("symbol"):"bigint"===e?n[i]=xn("bigint"):e===Array?n[i]=xn("Array"):e===Uint8Array?n[i]=xn("Uint8Array"):e===ArrayBuffer?n[i]=xn("ArrayBuffer"):n[i]=xn(e[1])}const s=n.join(" or ");return`${xn(t)} must be of type ${s}, but was actually of type ${xn(Mn(e))}`},kn=(e,t,r)=>{for(let n=0,s=r.length;n<s;n++)if(Sn(e,r[n]))return;throw new TypeError(Nn(e,t,r))},Rn=(e,t,r)=>{kn(e,t,r.concat("undefined"))},Tn=(e,t,r)=>{for(let n=0,s=e.length;n<s;n++)kn(e[n],t,r)},Wn=(e,t,r,n)=>{if(kn(e,t,["number"]),kn(r,"min",["number"]),kn(n,"max",["number"]),n=Math.max(r,n),e<r||e>n)throw new Error(`${xn(t)} must be at least ${r} and at most ${n}, but was actually ${e}`)},jn=(e,t,r,n)=>{kn(e,t,["number","undefined"]),"number"===typeof e&&Wn(e,t,r,n)},Gn=(e,t,r)=>{if(kn(e,t,["number"]),e%r!==0)throw new Error(`${xn(t)} must be a multiple of ${r}, but was actually ${e}`)},Xn=(e,t)=>{if(!Number.isInteger(e))throw new Error(`${xn(t)} must be an integer, but was actually ${e}`)},On=(e,t)=>{if(![1,0].includes(Math.sign(e)))throw new Error(`${xn(t)} must be a positive number or 0, but was actually ${e}`)},zn=new Uint16Array(256);for(let r=0;r<256;r++)zn[r]=r;zn[22]=rr("\x17"),zn[24]=rr("\u02d8"),zn[25]=rr("\u02c7"),zn[26]=rr("\u02c6"),zn[27]=rr("\u02d9"),zn[28]=rr("\u02dd"),zn[29]=rr("\u02db"),zn[30]=rr("\u02da"),zn[31]=rr("\u02dc"),zn[127]=rr("\ufffd"),zn[128]=rr("\u2022"),zn[129]=rr("\u2020"),zn[130]=rr("\u2021"),zn[131]=rr("\u2026"),zn[132]=rr("\u2014"),zn[133]=rr("\u2013"),zn[134]=rr("\u0192"),zn[135]=rr("\u2044"),zn[136]=rr("\u2039"),zn[137]=rr("\u203a"),zn[138]=rr("\u2212"),zn[139]=rr("\u2030"),zn[140]=rr("\u201e"),zn[141]=rr("\u201c"),zn[142]=rr("\u201d"),zn[143]=rr("\u2018"),zn[144]=rr("\u2019"),zn[145]=rr("\u201a"),zn[146]=rr("\u2122"),zn[147]=rr("\ufb01"),zn[148]=rr("\ufb02"),zn[149]=rr("\u0141"),zn[150]=rr("\u0152"),zn[151]=rr("\u0160"),zn[152]=rr("\u0178"),zn[153]=rr("\u017d"),zn[154]=rr("\u0131"),zn[155]=rr("\u0142"),zn[156]=rr("\u0153"),zn[157]=rr("\u0161"),zn[158]=rr("\u017e"),zn[159]=rr("\ufffd"),zn[160]=rr("\u20ac"),zn[173]=rr("\ufffd");const Yn=e=>{const t=new Array(e.length);for(let r=0,n=e.length;r<n;r++)t[r]=zn[e[r]];return String.fromCodePoint(...t)};class Hn{constructor(e){this.populate=e,this.value=void 0}getValue(){return this.value}access(){return this.value||(this.value=this.populate()),this.value}invalidate(){this.value=void 0}}Hn.populatedBy=e=>new Hn(e);const Un=Hn;class Vn extends Error{constructor(e,t){super(`Method ${e}.${t}() not implemented`)}}class qn extends Error{constructor(e){super(`Cannot construct ${e} - it has a private constructor`)}}class Zn extends Error{constructor(e,t){const r=e=>{var t,r;return null!==(t=null===e||void 0===e?void 0:e.name)&&void 0!==t?t:null===(r=null===e||void 0===e?void 0:e.constructor)||void 0===r?void 0:r.name};super(`Expected instance of ${(Array.isArray(e)?e.map(r):[r(e)]).join(" or ")}, but got instance of ${t?r(t):t}`)}}class Kn extends Error{constructor(e){super(`${e} stream encoding not supported`)}}class Jn extends Error{constructor(e,t){super(`Cannot call ${e}.${t}() more than once`)}}class _n extends Error{constructor(e){super(`Missing catalog (ref=${e})`)}}class $n extends Error{constructor(){super("Can't embed page with missing Contents")}}class es extends Error{constructor(e){var t,r,n;super(`Unrecognized stream type: ${null!==(n=null!==(r=null===(t=null===e||void 0===e?void 0:e.contructor)||void 0===t?void 0:t.name)&&void 0!==r?r:null===e||void 0===e?void 0:e.name)&&void 0!==n?n:e}`)}}class ts extends Error{constructor(){super("Found mismatched contexts while embedding pages. All pages in the array passed to `PDFDocument.embedPages()` must be from the same document.")}}class rs extends Error{constructor(e){super(`Attempted to convert PDFArray with ${e} elements to rectangle, but must have exactly 4 elements.`)}}class ns extends Error{constructor(e){super(`Attempted to convert "${e}" to a date, but it does not match the PDF date string format.`)}}class ss extends Error{constructor(e,t){super(`Invalid targetIndex specified: targetIndex=${e} must be less than Count=${t}`)}}class is extends Error{constructor(e,t){super(`Failed to ${t} at targetIndex=${e} due to corrupt page tree: It is likely that one or more 'Count' entries are invalid`)}}class os extends Error{constructor(e,t,r){super(`index should be at least ${t} and at most ${r}, but was actually ${e}`)}}class As extends Error{constructor(){super("Attempted to set invalid field value")}}class as extends Error{constructor(){super("Attempted to select multiple values for single-select field")}}class ls extends Error{constructor(e){super(`No /DA (default appearance) entry found for field: ${e}`)}}class cs extends Error{constructor(e){super(`No Tf operator found for DA of field: ${e}`)}}class us extends Error{constructor(e,t){super(`Failed to parse number (line:${e.line} col:${e.column} offset=${e.offset}): "${t}"`)}}class ds extends Error{constructor(e,t){super(`Failed to parse PDF document (line:${e.line} col:${e.column} offset=${e.offset}): ${t}`)}}class hs extends ds{constructor(e,t,r){super(e,`Expected next byte to be ${t} but it was actually ${r}`)}}class fs extends ds{constructor(e,t){super(e,`Failed to parse PDF object starting with the following byte: ${t}`)}}class gs extends ds{constructor(e){super(e,"Failed to parse invalid PDF object")}}class ps extends ds{constructor(e){super(e,"Failed to parse PDF stream")}}class ms extends ds{constructor(e){super(e,"Failed to parse PDF literal string due to unbalanced parenthesis")}}class ws extends ds{constructor(e){super(e,"Parser stalled")}}class vs extends ds{constructor(e){super(e,"No PDF header found")}}class bs extends ds{constructor(e,t){super(e,`Did not find expected keyword '${Pr(t)}'`)}}var ys;!function(e){e[e.Null=0]="Null",e[e.Backspace=8]="Backspace",e[e.Tab=9]="Tab",e[e.Newline=10]="Newline",e[e.FormFeed=12]="FormFeed",e[e.CarriageReturn=13]="CarriageReturn",e[e.Space=32]="Space",e[e.ExclamationPoint=33]="ExclamationPoint",e[e.Hash=35]="Hash",e[e.Percent=37]="Percent",e[e.LeftParen=40]="LeftParen",e[e.RightParen=41]="RightParen",e[e.Plus=43]="Plus",e[e.Minus=45]="Minus",e[e.Dash=45]="Dash",e[e.Period=46]="Period",e[e.ForwardSlash=47]="ForwardSlash",e[e.Zero=48]="Zero",e[e.One=49]="One",e[e.Two=50]="Two",e[e.Three=51]="Three",e[e.Four=52]="Four",e[e.Five=53]="Five",e[e.Six=54]="Six",e[e.Seven=55]="Seven",e[e.Eight=56]="Eight",e[e.Nine=57]="Nine",e[e.LessThan=60]="LessThan",e[e.GreaterThan=62]="GreaterThan",e[e.A=65]="A",e[e.D=68]="D",e[e.E=69]="E",e[e.F=70]="F",e[e.O=79]="O",e[e.P=80]="P",e[e.R=82]="R",e[e.LeftSquareBracket=91]="LeftSquareBracket",e[e.BackSlash=92]="BackSlash",e[e.RightSquareBracket=93]="RightSquareBracket",e[e.a=97]="a",e[e.b=98]="b",e[e.d=100]="d",e[e.e=101]="e",e[e.f=102]="f",e[e.i=105]="i",e[e.j=106]="j",e[e.l=108]="l",e[e.m=109]="m",e[e.n=110]="n",e[e.o=111]="o",e[e.r=114]="r",e[e.s=115]="s",e[e.t=116]="t",e[e.u=117]="u",e[e.x=120]="x",e[e.LeftCurly=123]="LeftCurly",e[e.RightCurly=125]="RightCurly",e[e.Tilde=126]="Tilde"}(ys||(ys={}));const Bs=ys;class Es{constructor(e,t){this.major=String(e),this.minor=String(t)}toString(){const e=or(129);return`%PDF-${this.major}.${this.minor}\n%${e}${e}${e}${e}`}sizeInBytes(){return 12+this.major.length+this.minor.length}copyBytesInto(e,t){const r=t;return e[t++]=Bs.Percent,e[t++]=Bs.P,e[t++]=Bs.D,e[t++]=Bs.F,e[t++]=Bs.Dash,t+=cr(this.major,e,t),e[t++]=Bs.Period,t+=cr(this.minor,e,t),e[t++]=Bs.Newline,e[t++]=Bs.Percent,e[t++]=129,e[t++]=129,e[t++]=129,e[t++]=129,t-r}}Es.forVersion=(e,t)=>new Es(e,t);const Cs=Es;const xs=class{clone(e){throw new Vn(this.constructor.name,"clone")}toString(){throw new Vn(this.constructor.name,"toString")}sizeInBytes(){throw new Vn(this.constructor.name,"sizeInBytes")}copyBytesInto(e,t){throw new Vn(this.constructor.name,"copyBytesInto")}};class Is extends xs{constructor(e){super(),this.numberValue=e,this.stringValue=rn(e)}asNumber(){return this.numberValue}value(){return this.numberValue}clone(){return Is.of(this.numberValue)}toString(){return this.stringValue}sizeInBytes(){return this.stringValue.length}copyBytesInto(e,t){return t+=cr(this.stringValue,e,t),this.stringValue.length}}Is.of=e=>new Is(e);const Ds=Is;class Qs extends xs{constructor(e){super(),this.array=[],this.context=e}size(){return this.array.length}push(e){this.array.push(e)}insert(e,t){this.array.splice(e,0,t)}indexOf(e){const t=this.array.indexOf(e);return-1===t?void 0:t}remove(e){this.array.splice(e,1)}set(e,t){this.array[e]=t}get(e){return this.array[e]}lookupMaybe(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];return this.context.lookupMaybe(this.get(e),...r)}lookup(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];return this.context.lookup(this.get(e),...r)}asRectangle(){if(4!==this.size())throw new rs(this.size());const e=this.lookup(0,Ds).asNumber(),t=this.lookup(1,Ds).asNumber();return{x:e,y:t,width:this.lookup(2,Ds).asNumber()-e,height:this.lookup(3,Ds).asNumber()-t}}asArray(){return this.array.slice()}clone(e){const t=Qs.withContext(e||this.context);for(let r=0,n=this.size();r<n;r++)t.push(this.array[r]);return t}toString(){let e="[ ";for(let t=0,r=this.size();t<r;t++)e+=this.get(t).toString(),e+=" ";return e+="]",e}sizeInBytes(){let e=3;for(let t=0,r=this.size();t<r;t++)e+=this.get(t).sizeInBytes()+1;return e}copyBytesInto(e,t){const r=t;e[t++]=Bs.LeftSquareBracket,e[t++]=Bs.Space;for(let n=0,s=this.size();n<s;n++)t+=this.get(n).copyBytesInto(e,t),e[t++]=Bs.Space;return e[t++]=Bs.RightSquareBracket,t-r}scalePDFNumbers(e,t){for(let r=0,n=this.size();r<n;r++){const n=this.lookup(r);if(n instanceof Ds){const s=r%2===0?e:t;this.set(r,Ds.of(n.asNumber()*s))}}}}Qs.withContext=e=>new Qs(e);const Ps=Qs,Fs={};class Ls extends xs{constructor(e,t){if(e!==Fs)throw new qn("PDFBool");super(),this.value=t}asBoolean(){return this.value}clone(){return this}toString(){return String(this.value)}sizeInBytes(){return this.value?4:5}copyBytesInto(e,t){return this.value?(e[t++]=Bs.t,e[t++]=Bs.r,e[t++]=Bs.u,e[t++]=Bs.e,4):(e[t++]=Bs.f,e[t++]=Bs.a,e[t++]=Bs.l,e[t++]=Bs.s,e[t++]=Bs.e,5)}}Ls.True=new Ls(Fs,!0),Ls.False=new Ls(Fs,!1);const Ms=Ls,Ss=new Uint8Array(256);Ss[Bs.LeftParen]=1,Ss[Bs.RightParen]=1,Ss[Bs.LessThan]=1,Ss[Bs.GreaterThan]=1,Ss[Bs.LeftSquareBracket]=1,Ss[Bs.RightSquareBracket]=1,Ss[Bs.LeftCurly]=1,Ss[Bs.RightCurly]=1,Ss[Bs.ForwardSlash]=1,Ss[Bs.Percent]=1;const Ns=new Uint8Array(256);Ns[Bs.Null]=1,Ns[Bs.Tab]=1,Ns[Bs.Newline]=1,Ns[Bs.FormFeed]=1,Ns[Bs.CarriageReturn]=1,Ns[Bs.Space]=1;const ks=new Uint8Array(256);for(let r=0,$M=256;r<$M;r++)ks[r]=Ns[r]||Ss[r]?1:0;ks[Bs.Hash]=1;const Rs={},Ts=new Map;class Ws extends xs{constructor(e,t){if(e!==Rs)throw new qn("PDFName");super();let r="/";for(let s=0,i=t.length;s<i;s++){const e=t[s],i=rr(e);r+=(n=i)>=Bs.ExclamationPoint&&n<=Bs.Tilde&&!ks[n]?e:`#${ir(i)}`}var n;this.encodedName=r}asBytes(){const e=[];let t="",r=!1;const n=t=>{void 0!==t&&e.push(t),r=!1};for(let s=1,i=this.encodedName.length;s<i;s++){const e=this.encodedName[s],i=rr(e),o=this.encodedName[s+1];r?i>=Bs.Zero&&i<=Bs.Nine||i>=Bs.a&&i<=Bs.f||i>=Bs.A&&i<=Bs.F?(t+=e,2!==t.length&&(o>="0"&&o<="9"||o>="a"&&o<="f"||o>="A"&&o<="F")||(n(parseInt(t,16)),t="")):n(i):i===Bs.Hash?r=!0:n(i)}return new Uint8Array(e)}decodeText(){const e=this.asBytes();return String.fromCharCode(...Array.from(e))}asString(){return this.encodedName}value(){return this.encodedName}clone(){return this}toString(){return this.encodedName}sizeInBytes(){return this.encodedName.length}copyBytesInto(e,t){return t+=cr(this.encodedName,e,t),this.encodedName.length}}Ws.of=e=>{const t=(e=>e.replace(/#([\dABCDEF]{2})/g,((e,t)=>Ar(t))))(e);let r=Ts.get(t);return r||(r=new Ws(Rs,t),Ts.set(t,r)),r},Ws.Length=Ws.of("Length"),Ws.FlateDecode=Ws.of("FlateDecode"),Ws.Resources=Ws.of("Resources"),Ws.Font=Ws.of("Font"),Ws.XObject=Ws.of("XObject"),Ws.ExtGState=Ws.of("ExtGState"),Ws.Contents=Ws.of("Contents"),Ws.Type=Ws.of("Type"),Ws.Parent=Ws.of("Parent"),Ws.MediaBox=Ws.of("MediaBox"),Ws.Page=Ws.of("Page"),Ws.Annots=Ws.of("Annots"),Ws.TrimBox=Ws.of("TrimBox"),Ws.ArtBox=Ws.of("ArtBox"),Ws.BleedBox=Ws.of("BleedBox"),Ws.CropBox=Ws.of("CropBox"),Ws.Rotate=Ws.of("Rotate"),Ws.Title=Ws.of("Title"),Ws.Author=Ws.of("Author"),Ws.Subject=Ws.of("Subject"),Ws.Creator=Ws.of("Creator"),Ws.Keywords=Ws.of("Keywords"),Ws.Producer=Ws.of("Producer"),Ws.CreationDate=Ws.of("CreationDate"),Ws.ModDate=Ws.of("ModDate");const js=Ws;const Gs=new class extends xs{asNull(){return null}clone(){return this}toString(){return"null"}sizeInBytes(){return 4}copyBytesInto(e,t){return e[t++]=Bs.n,e[t++]=Bs.u,e[t++]=Bs.l,e[t++]=Bs.l,4}};class Xs extends xs{constructor(e,t){super(),this.suppressEncryption=!1,this.dict=e,this.context=t}keys(){return Array.from(this.dict.keys())}values(){return Array.from(this.dict.values())}entries(){return Array.from(this.dict.entries())}set(e,t){this.dict.set(e,t)}get(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const r=this.dict.get(e);if(r!==Gs||t)return r}has(e){const t=this.dict.get(e);return void 0!==t&&t!==Gs}lookupMaybe(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];const s=r.includes(Gs),i=this.context.lookupMaybe(this.get(e,s),...r);if(i!==Gs||s)return i}lookup(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];const s=r.includes(Gs),i=this.context.lookup(this.get(e,s),...r);if(i!==Gs||s)return i}delete(e){return this.dict.delete(e)}asMap(){return new Map(this.dict)}uniqueKey(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";const t=this.keys();let r=js.of(this.context.addRandomSuffix(e,10));for(;t.includes(r);)r=js.of(this.context.addRandomSuffix(e,10));return r}clone(e){const t=Xs.withContext(e||this.context),r=this.entries();for(let n=0,s=r.length;n<s;n++){const[e,s]=r[n];t.set(e,s)}return t}toString(){let e="<<\n";const t=this.entries();for(let r=0,n=t.length;r<n;r++){const[n,s]=t[r];e+=n.toString()+" "+s.toString()+"\n"}return e+=">>",e}sizeInBytes(){let e=5;const t=this.entries();for(let r=0,n=t.length;r<n;r++){const[n,s]=t[r];e+=n.sizeInBytes()+s.sizeInBytes()+2}return e}copyBytesInto(e,t){const r=t;e[t++]=Bs.LessThan,e[t++]=Bs.LessThan,e[t++]=Bs.Newline;const n=this.entries();for(let s=0,i=n.length;s<i;s++){const[r,i]=n[s];t+=r.copyBytesInto(e,t),e[t++]=Bs.Space,t+=i.copyBytesInto(e,t),e[t++]=Bs.Newline}return e[t++]=Bs.GreaterThan,e[t++]=Bs.GreaterThan,t-r}}Xs.withContext=e=>new Xs(new Map,e),Xs.fromMapWithContext=(e,t)=>new Xs(e,t);const Os=Xs;const zs=class extends xs{constructor(e){super(),this.dict=e}clone(e){throw new Vn(this.constructor.name,"clone")}getContentsString(){throw new Vn(this.constructor.name,"getContentsString")}getContents(){throw new Vn(this.constructor.name,"getContents")}getContentsSize(){throw new Vn(this.constructor.name,"getContentsSize")}updateDict(){const e=this.getContentsSize();this.dict.set(js.Length,Ds.of(e))}sizeInBytes(){return this.updateDict(),this.dict.sizeInBytes()+this.getContentsSize()+18}toString(){this.updateDict();let e=this.dict.toString();return e+="\nstream\n",e+=this.getContentsString(),e+="\nendstream",e}copyBytesInto(e,t){this.updateDict();const r=t;t+=this.dict.copyBytesInto(e,t),e[t++]=Bs.Newline,e[t++]=Bs.s,e[t++]=Bs.t,e[t++]=Bs.r,e[t++]=Bs.e,e[t++]=Bs.a,e[t++]=Bs.m,e[t++]=Bs.Newline;const n=this.getContents();for(let s=0,i=n.length;s<i;s++)e[t++]=n[s];return e[t++]=Bs.Newline,e[t++]=Bs.e,e[t++]=Bs.n,e[t++]=Bs.d,e[t++]=Bs.s,e[t++]=Bs.t,e[t++]=Bs.r,e[t++]=Bs.e,e[t++]=Bs.a,e[t++]=Bs.m,t-r}};class Ys extends zs{constructor(e,t,r){super(e),this.contents=t,this.transform=r}asUint8Array(){return this.contents.slice()}clone(e){return Ys.of(this.dict.clone(e),this.contents.slice())}getContentsString(){return Pr(this.contents)}getContents(){return this.contents}getContentsSize(){return this.contents.length}}Ys.of=(e,t,r)=>new Ys(e,t,r);const Hs=Ys,Us={},Vs=new Map;class qs extends xs{constructor(e,t,r){if(e!==Us)throw new qn("PDFRef");super(),this.objectNumber=t,this.generationNumber=r,this.tag=`${t} ${r} R`}clone(){return this}toString(){return this.tag}sizeInBytes(){return this.tag.length}copyBytesInto(e,t){return t+=cr(this.tag,e,t),this.tag.length}}qs.of=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const r=`${e} ${t} R`;let n=Vs.get(r);return n||(n=new qs(Us,e,t),Vs.set(r,n)),n};const Zs=qs;class Ks{constructor(e,t){this.name=e,this.args=t||[]}clone(e){const t=new Array(this.args.length);for(let r=0,n=t.length;r<n;r++){const n=this.args[r];t[r]=n instanceof xs?n.clone(e):n}return Ks.of(this.name,t)}toString(){let e="";for(let t=0,r=this.args.length;t<r;t++)e+=String(this.args[t])+" ";return e+=this.name,e}sizeInBytes(){let e=0;for(let t=0,r=this.args.length;t<r;t++){const r=this.args[t];e+=(r instanceof xs?r.sizeInBytes():r.length)+1}return e+=this.name.length,e}copyBytesInto(e,t){const r=t;for(let n=0,s=this.args.length;n<s;n++){const r=this.args[n];t+=r instanceof xs?r.copyBytesInto(e,t):cr(r,e,t),e[t++]=Bs.Space}return(t+=cr(this.name,e,t))-r}}Ks.of=(e,t)=>new Ks(e,t);const Js=Ks;var _s;!function(e){e.NonStrokingColor="sc",e.NonStrokingColorN="scn",e.NonStrokingColorRgb="rg",e.NonStrokingColorGray="g",e.NonStrokingColorCmyk="k",e.NonStrokingColorspace="cs",e.StrokingColor="SC",e.StrokingColorN="SCN",e.StrokingColorRgb="RG",e.StrokingColorGray="G",e.StrokingColorCmyk="K",e.StrokingColorspace="CS",e.BeginMarkedContentSequence="BDC",e.BeginMarkedContent="BMC",e.EndMarkedContent="EMC",e.MarkedContentPointWithProps="DP",e.MarkedContentPoint="MP",e.DrawObject="Do",e.ConcatTransformationMatrix="cm",e.PopGraphicsState="Q",e.PushGraphicsState="q",e.SetFlatness="i",e.SetGraphicsStateParams="gs",e.SetLineCapStyle="J",e.SetLineDashPattern="d",e.SetLineJoinStyle="j",e.SetLineMiterLimit="M",e.SetLineWidth="w",e.SetTextMatrix="Tm",e.SetRenderingIntent="ri",e.AppendRectangle="re",e.BeginInlineImage="BI",e.BeginInlineImageData="ID",e.EndInlineImage="EI",e.ClipEvenOdd="W*",e.ClipNonZero="W",e.CloseAndStroke="s",e.CloseFillEvenOddAndStroke="b*",e.CloseFillNonZeroAndStroke="b",e.ClosePath="h",e.AppendBezierCurve="c",e.CurveToReplicateFinalPoint="y",e.CurveToReplicateInitialPoint="v",e.EndPath="n",e.FillEvenOddAndStroke="B*",e.FillEvenOdd="f*",e.FillNonZeroAndStroke="B",e.FillNonZero="f",e.LegacyFillNonZero="F",e.LineTo="l",e.MoveTo="m",e.ShadingFill="sh",e.StrokePath="S",e.BeginText="BT",e.EndText="ET",e.MoveText="Td",e.MoveTextSetLeading="TD",e.NextLine="T*",e.SetCharacterSpacing="Tc",e.SetFontAndSize="Tf",e.SetTextHorizontalScaling="Tz",e.SetTextLineHeight="TL",e.SetTextRenderingMode="Tr",e.SetTextRise="Ts",e.SetWordSpacing="Tw",e.ShowText="Tj",e.ShowTextAdjusted="TJ",e.ShowTextLine="'",e.ShowTextLineAndSpace='"',e.Type3D0="d0",e.Type3D1="d1",e.BeginCompatibilitySection="BX",e.EndCompatibilitySection="EX"}(_s||(_s={}));const $s=_s;const ei=class extends zs{constructor(e,t){super(e),this.computeContents=()=>{const e=this.getUnencodedContents();return this.encode?An.deflate(e):e},this.encode=t,t&&e.set(js.of("Filter"),js.of("FlateDecode")),this.contentsCache=Un.populatedBy(this.computeContents)}getContents(){return this.contentsCache.access()}getContentsSize(){return this.contentsCache.access().length}getUnencodedContents(){throw new Vn(this.constructor.name,"getUnencodedContents")}};class ti extends ei{constructor(e,t){super(e,!(arguments.length>2&&void 0!==arguments[2])||arguments[2]),this.operators=t}push(){this.operators.push(...arguments)}clone(e){const t=new Array(this.operators.length);for(let s=0,i=this.operators.length;s<i;s++)t[s]=this.operators[s].clone(e);const{dict:r,encode:n}=this;return ti.of(r.clone(e),t,n)}getContentsString(){let e="";for(let t=0,r=this.operators.length;t<r;t++)e+=`${this.operators[t]}\n`;return e}getUnencodedContents(){const e=new Uint8Array(this.getUnencodedContentsSize());let t=0;for(let r=0,n=this.operators.length;r<n;r++)t+=this.operators[r].copyBytesInto(e,t),e[t++]=Bs.Newline;return e}getUnencodedContentsSize(){let e=0;for(let t=0,r=this.operators.length;t<r;t++)e+=this.operators[t].sizeInBytes()+1;return e}}ti.of=function(e,t){return new ti(e,t,!(arguments.length>2&&void 0!==arguments[2])||arguments[2])};const ri=ti;class ni{constructor(e){this.seed=e}nextInt(){const e=1e4*Math.sin(this.seed++);return e-Math.floor(e)}}ni.withSeed=e=>new ni(e);const si=(e,t)=>{let[r]=e,[n]=t;return r.objectNumber-n.objectNumber};class ii{constructor(){this.isDecrypted=!0,this.largestObjectNumber=0,this.header=Cs.forVersion(1,7),this.trailerInfo={},this.indirectObjects=new Map,this.rng=ni.withSeed(1)}assign(e,t){this.indirectObjects.set(e,t),e.objectNumber>this.largestObjectNumber&&(this.largestObjectNumber=e.objectNumber)}nextRef(){return this.largestObjectNumber+=1,Zs.of(this.largestObjectNumber)}register(e){const t=this.nextRef();return this.assign(t,e),t}delete(e){return this.indirectObjects.delete(e)}lookupMaybe(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];const s=r.includes(Gs),i=e instanceof Zs?this.indirectObjects.get(e):e;if(i&&(i!==Gs||s)){for(let e=0,t=r.length;e<t;e++){const t=r[e];if(t===Gs){if(i===Gs)return i}else if(i instanceof t)return i}throw new Zn(r,i)}}lookup(e){const t=e instanceof Zs?this.indirectObjects.get(e):e;for(var r=arguments.length,n=new Array(r>1?r-1:0),s=1;s<r;s++)n[s-1]=arguments[s];if(0===n.length)return t;for(let i=0,o=n.length;i<o;i++){const e=n[i];if(e===Gs){if(t===Gs)return t}else if(t instanceof e)return t}throw new Zn(n,t)}getObjectRef(e){const t=Array.from(this.indirectObjects.entries());for(let r=0,n=t.length;r<n;r++){const[n,s]=t[r];if(s===e)return n}}enumerateIndirectObjects(){return Array.from(this.indirectObjects.entries()).sort(si)}obj(e){if(e instanceof xs)return e;if(null===e||void 0===e)return Gs;if("string"===typeof e)return js.of(e);if("number"===typeof e)return Ds.of(e);if("boolean"===typeof e)return e?Ms.True:Ms.False;if(Array.isArray(e)){const t=Ps.withContext(this);for(let r=0,n=e.length;r<n;r++)t.push(this.obj(e[r]));return t}{const t=Os.withContext(this),r=Object.keys(e);for(let n=0,s=r.length;n<s;n++){const s=r[n],i=e[s];void 0!==i&&t.set(js.of(s),this.obj(i))}return t}}stream(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Hs.of(this.obj(t),Ir(e))}flateStream(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.stream(An.deflate(Ir(e)),{...t,Filter:"FlateDecode"})}contentStream(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ri.of(this.obj(t),e)}formXObject(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return this.contentStream(e,{BBox:this.obj([0,0,0,0]),Matrix:this.obj([1,0,0,1,0,0]),...t,Type:"XObject",Subtype:"Form"})}getPushGraphicsStateContentStream(){if(this.pushGraphicsStateContentStreamRef)return this.pushGraphicsStateContentStreamRef;const e=this.obj({}),t=Js.of($s.PushGraphicsState),r=ri.of(e,[t]);return this.pushGraphicsStateContentStreamRef=this.register(r),this.pushGraphicsStateContentStreamRef}getPopGraphicsStateContentStream(){if(this.popGraphicsStateContentStreamRef)return this.popGraphicsStateContentStreamRef;const e=this.obj({}),t=Js.of($s.PopGraphicsState),r=ri.of(e,[t]);return this.popGraphicsStateContentStreamRef=this.register(r),this.popGraphicsStateContentStreamRef}addRandomSuffix(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4;return`${e}-${Math.floor(this.rng.nextInt()*10**t)}`}}ii.create=()=>new ii;const oi=ii;class Ai extends Os{constructor(e,t){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(e,t),this.normalized=!1,this.autoNormalizeCTM=r}clone(e){const t=Ai.fromMapWithContext(new Map,e||this.context,this.autoNormalizeCTM),r=this.entries();for(let n=0,s=r.length;n<s;n++){const[e,s]=r[n];t.set(e,s)}return t}Parent(){return this.lookupMaybe(js.Parent,Os)}Contents(){return this.lookup(js.of("Contents"))}Annots(){return this.lookupMaybe(js.Annots,Ps)}BleedBox(){return this.lookupMaybe(js.BleedBox,Ps)}TrimBox(){return this.lookupMaybe(js.TrimBox,Ps)}ArtBox(){return this.lookupMaybe(js.ArtBox,Ps)}Resources(){const e=this.getInheritableAttribute(js.Resources);return this.context.lookupMaybe(e,Os)}MediaBox(){const e=this.getInheritableAttribute(js.MediaBox);return this.context.lookup(e,Ps)}CropBox(){const e=this.getInheritableAttribute(js.CropBox);return this.context.lookupMaybe(e,Ps)}Rotate(){const e=this.getInheritableAttribute(js.Rotate);return this.context.lookupMaybe(e,Ds)}getInheritableAttribute(e){let t;return this.ascend((r=>{t||(t=r.get(e))})),t}setParent(e){this.set(js.Parent,e)}addContentStream(e){const t=this.normalizedEntries().Contents||this.context.obj([]);this.set(js.Contents,t),t.push(e)}wrapContentStreams(e,t){const r=this.Contents();return r instanceof Ps&&(r.insert(0,e),r.push(t),!0)}addAnnot(e){const{Annots:t}=this.normalizedEntries();t.push(e)}removeAnnot(e){const{Annots:t}=this.normalizedEntries(),r=t.indexOf(e);void 0!==r&&t.remove(r)}setFontDictionary(e,t){const{Font:r}=this.normalizedEntries();r.set(e,t)}newFontDictionaryKey(e){const{Font:t}=this.normalizedEntries();return t.uniqueKey(e)}newFontDictionary(e,t){const r=this.newFontDictionaryKey(e);return this.setFontDictionary(r,t),r}setXObject(e,t){const{XObject:r}=this.normalizedEntries();r.set(e,t)}newXObjectKey(e){const{XObject:t}=this.normalizedEntries();return t.uniqueKey(e)}newXObject(e,t){const r=this.newXObjectKey(e);return this.setXObject(r,t),r}setExtGState(e,t){const{ExtGState:r}=this.normalizedEntries();r.set(e,t)}newExtGStateKey(e){const{ExtGState:t}=this.normalizedEntries();return t.uniqueKey(e)}newExtGState(e,t){const r=this.newExtGStateKey(e);return this.setExtGState(r,t),r}ascend(e){e(this);const t=this.Parent();t&&t.ascend(e)}normalize(){if(this.normalized)return;const{context:e}=this,t=this.get(js.Contents);this.context.lookup(t)instanceof zs&&this.set(js.Contents,e.obj([t])),this.autoNormalizeCTM&&this.wrapContentStreams(this.context.getPushGraphicsStateContentStream(),this.context.getPopGraphicsStateContentStream());const r=this.getInheritableAttribute(js.Resources),n=e.lookupMaybe(r,Os)||e.obj({});this.set(js.Resources,n);const s=n.lookupMaybe(js.Font,Os)||e.obj({});n.set(js.Font,s);const i=n.lookupMaybe(js.XObject,Os)||e.obj({});n.set(js.XObject,i);const o=n.lookupMaybe(js.ExtGState,Os)||e.obj({});n.set(js.ExtGState,o);const A=this.Annots()||e.obj([]);this.set(js.Annots,A),this.normalized=!0}normalizedEntries(){this.normalize();const e=this.Annots(),t=this.Resources();return{Annots:e,Resources:t,Contents:this.Contents(),Font:t.lookup(js.Font,Os),XObject:t.lookup(js.XObject,Os),ExtGState:t.lookup(js.ExtGState,Os)}}}Ai.InheritableEntries=["Resources","MediaBox","CropBox","Rotate"],Ai.withContextAndParent=(e,t)=>{const r=new Map;return r.set(js.Type,js.Page),r.set(js.Parent,t),r.set(js.Resources,e.obj({})),r.set(js.MediaBox,e.obj([0,0,612,792])),new Ai(r,e,!1)},Ai.fromMapWithContext=function(e,t){return new Ai(e,t,!(arguments.length>2&&void 0!==arguments[2])||arguments[2])};const ai=Ai;class li{constructor(e,t){this.traversedObjects=new Map,this.copy=e=>e instanceof ai?this.copyPDFPage(e):e instanceof Os?this.copyPDFDict(e):e instanceof Ps?this.copyPDFArray(e):e instanceof zs?this.copyPDFStream(e):e instanceof Zs?this.copyPDFIndirectObject(e):e.clone(),this.copyPDFPage=e=>{const t=e.clone(),{InheritableEntries:r}=ai;for(let n=0,s=r.length;n<s;n++){const e=js.of(r[n]),s=t.getInheritableAttribute(e);!t.get(e)&&s&&t.set(e,s)}return t.delete(js.of("Parent")),this.copyPDFDict(t)},this.copyPDFDict=e=>{if(this.traversedObjects.has(e))return this.traversedObjects.get(e);const t=e.clone(this.dest);this.traversedObjects.set(e,t);const r=e.entries();for(let n=0,s=r.length;n<s;n++){const[e,s]=r[n];t.set(e,this.copy(s))}return t},this.copyPDFArray=e=>{if(this.traversedObjects.has(e))return this.traversedObjects.get(e);const t=e.clone(this.dest);this.traversedObjects.set(e,t);for(let r=0,n=e.size();r<n;r++){const n=e.get(r);t.set(r,this.copy(n))}return t},this.copyPDFStream=e=>{if(this.traversedObjects.has(e))return this.traversedObjects.get(e);const t=e.clone(this.dest);this.traversedObjects.set(e,t);const r=e.dict.entries();for(let n=0,s=r.length;n<s;n++){const[e,s]=r[n];t.dict.set(e,this.copy(s))}return t},this.copyPDFIndirectObject=e=>{if(!this.traversedObjects.has(e)){const t=this.dest.nextRef();this.traversedObjects.set(e,t);const r=this.src.lookup(e);if(r){const e=this.copy(r);this.dest.assign(t,e)}}return this.traversedObjects.get(e)},this.src=e,this.dest=t}}li.for=(e,t)=>new li(e,t);const ci=li;class ui{constructor(e){this.subsections=e?[[e]]:[],this.chunkIdx=0,this.chunkLength=e?1:0}addEntry(e,t){this.append({ref:e,offset:t,deleted:!1})}addDeletedEntry(e,t){this.append({ref:e,offset:t,deleted:!0})}toString(){let e="xref\n";for(let t=0,r=this.subsections.length;t<r;t++){const r=this.subsections[t];e+=`${r[0].ref.objectNumber} ${r.length}\n`;for(let t=0,n=r.length;t<n;t++){const n=r[t];e+=ar(String(n.offset),10,"0"),e+=" ",e+=ar(String(n.ref.generationNumber),5,"0"),e+=" ",e+=n.deleted?"f":"n",e+=" \n"}}return e}sizeInBytes(){let e=5;for(let t=0,r=this.subsections.length;t<r;t++){const r=this.subsections[t],n=r.length,[s]=r;e+=2,e+=String(s.ref.objectNumber).length,e+=String(n).length,e+=20*n}return e}copyBytesInto(e,t){const r=t;return e[t++]=Bs.x,e[t++]=Bs.r,e[t++]=Bs.e,e[t++]=Bs.f,e[t++]=Bs.Newline,(t+=this.copySubsectionsIntoBuffer(this.subsections,e,t))-r}copySubsectionsIntoBuffer(e,t,r){const n=r,s=e.length;for(let i=0;i<s;i++){const e=this.subsections[i],n=String(e[0].ref.objectNumber);r+=cr(n,t,r),t[r++]=Bs.Space;const s=String(e.length);r+=cr(s,t,r),t[r++]=Bs.Newline,r+=this.copyEntriesIntoBuffer(e,t,r)}return r-n}copyEntriesIntoBuffer(e,t,r){const n=e.length;for(let s=0;s<n;s++){const n=e[s],i=ar(String(n.offset),10,"0");r+=cr(i,t,r),t[r++]=Bs.Space;const o=ar(String(n.ref.generationNumber),5,"0");r+=cr(o,t,r),t[r++]=Bs.Space,t[r++]=n.deleted?Bs.f:Bs.n,t[r++]=Bs.Space,t[r++]=Bs.Newline}return 20*n}append(e){if(0===this.chunkLength)return this.subsections.push([e]),this.chunkIdx=0,void(this.chunkLength=1);const t=this.subsections[this.chunkIdx],r=t[this.chunkLength-1];e.ref.objectNumber-r.ref.objectNumber>1?(this.subsections.push([e]),this.chunkIdx+=1,this.chunkLength=1):(t.push(e),this.chunkLength+=1)}}ui.create=()=>new ui({ref:Zs.of(0,65535),offset:0,deleted:!0}),ui.createEmpty=()=>new ui;const di=ui;class hi{constructor(e){this.lastXRefOffset=String(e)}toString(){return`startxref\n${this.lastXRefOffset}\n%%EOF`}sizeInBytes(){return 16+this.lastXRefOffset.length}copyBytesInto(e,t){const r=t;return e[t++]=Bs.s,e[t++]=Bs.t,e[t++]=Bs.a,e[t++]=Bs.r,e[t++]=Bs.t,e[t++]=Bs.x,e[t++]=Bs.r,e[t++]=Bs.e,e[t++]=Bs.f,e[t++]=Bs.Newline,t+=cr(this.lastXRefOffset,e,t),e[t++]=Bs.Newline,e[t++]=Bs.Percent,e[t++]=Bs.Percent,e[t++]=Bs.E,e[t++]=Bs.O,e[t++]=Bs.F,t-r}}hi.forLastCrossRefSectionOffset=e=>new hi(e);const fi=hi;class gi{constructor(e){this.dict=e}toString(){return`trailer\n${this.dict.toString()}`}sizeInBytes(){return 8+this.dict.sizeInBytes()}copyBytesInto(e,t){const r=t;return e[t++]=Bs.t,e[t++]=Bs.r,e[t++]=Bs.a,e[t++]=Bs.i,e[t++]=Bs.l,e[t++]=Bs.e,e[t++]=Bs.r,e[t++]=Bs.Newline,(t+=this.dict.copyBytesInto(e,t))-r}}gi.of=e=>new gi(e);const pi=gi;class mi extends ei{constructor(e,t){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(e.obj({}),r),this.objects=t,this.offsets=this.computeObjectOffsets(),this.offsetsString=this.computeOffsetsString(),this.dict.set(js.of("Type"),js.of("ObjStm")),this.dict.set(js.of("N"),Ds.of(this.objects.length)),this.dict.set(js.of("First"),Ds.of(this.offsetsString.length))}getObjectsCount(){return this.objects.length}clone(e){return mi.withContextAndObjects(e||this.dict.context,this.objects.slice(),this.encode)}getContentsString(){let e=this.offsetsString;for(let t=0,r=this.objects.length;t<r;t++){const[,r]=this.objects[t];e+=`${r}\n`}return e}getUnencodedContents(){const e=new Uint8Array(this.getUnencodedContentsSize());let t=cr(this.offsetsString,e,0);for(let r=0,n=this.objects.length;r<n;r++){const[,n]=this.objects[r];t+=n.copyBytesInto(e,t),e[t++]=Bs.Newline}return e}getUnencodedContentsSize(){return this.offsetsString.length+xr(this.offsets)[1]+xr(this.objects)[1].sizeInBytes()+1}computeOffsetsString(){let e="";for(let t=0,r=this.offsets.length;t<r;t++){const[r,n]=this.offsets[t];e+=`${r} ${n} `}return e}computeObjectOffsets(){let e=0;const t=new Array(this.objects.length);for(let r=0,n=this.objects.length;r<n;r++){const[n,s]=this.objects[r];t[r]=[n.objectNumber,e],e+=s.sizeInBytes()+1}return t}}mi.withContextAndObjects=function(e,t){return new mi(e,t,!(arguments.length>2&&void 0!==arguments[2])||arguments[2])};const wi=mi;class vi{constructor(e,t){this.parsedObjects=0,this.shouldWaitForTick=e=>(this.parsedObjects+=e,this.parsedObjects%this.objectsPerTick===0),this.context=e,this.objectsPerTick=t}async serializeToBuffer(){const{size:e,header:t,indirectObjects:r,xref:n,trailerDict:s,trailer:i}=await this.computeBufferSize();let o=0;const A=new Uint8Array(e);o+=t.copyBytesInto(A,o),A[o++]=Bs.Newline,A[o++]=Bs.Newline;for(let a=0,l=r.length;a<l;a++){const[e,t]=r[a],n=String(e.objectNumber);o+=cr(n,A,o),A[o++]=Bs.Space;const s=String(e.generationNumber);o+=cr(s,A,o),A[o++]=Bs.Space,A[o++]=Bs.o,A[o++]=Bs.b,A[o++]=Bs.j,A[o++]=Bs.Newline,o+=t.copyBytesInto(A,o),A[o++]=Bs.Newline,A[o++]=Bs.e,A[o++]=Bs.n,A[o++]=Bs.d,A[o++]=Bs.o,A[o++]=Bs.b,A[o++]=Bs.j,A[o++]=Bs.Newline,A[o++]=Bs.Newline;const i=t instanceof wi?t.getObjectsCount():1;this.shouldWaitForTick(i)&&await jr()}return n&&(o+=n.copyBytesInto(A,o),A[o++]=Bs.Newline),s&&(o+=s.copyBytesInto(A,o),A[o++]=Bs.Newline,A[o++]=Bs.Newline),o+=i.copyBytesInto(A,o),A}computeIndirectObjectSize(e){let[t,r]=e;return t.sizeInBytes()+3+(r.sizeInBytes()+9)}createTrailerDict(){return this.context.obj({Size:this.context.largestObjectNumber+1,Root:this.context.trailerInfo.Root,Encrypt:this.context.trailerInfo.Encrypt,Info:this.context.trailerInfo.Info,ID:this.context.trailerInfo.ID})}async computeBufferSize(){const e=Cs.forVersion(1,7);let t=e.sizeInBytes()+2;const r=di.create(),n=this.context.enumerateIndirectObjects();for(let A=0,a=n.length;A<a;A++){const e=n[A],[s]=e;r.addEntry(s,t),t+=this.computeIndirectObjectSize(e),this.shouldWaitForTick(1)&&await jr()}const s=t;t+=r.sizeInBytes()+1;const i=pi.of(this.createTrailerDict());t+=i.sizeInBytes()+2;const o=fi.forLastCrossRefSectionOffset(s);return t+=o.sizeInBytes(),{size:t,header:e,indirectObjects:n,xref:r,trailerDict:i,trailer:o}}}vi.forContext=(e,t)=>new vi(e,t);const bi=vi;class yi extends xs{constructor(e){super(),this.data=e}clone(){return yi.of(this.data.slice())}toString(){return`PDFInvalidObject(${this.data.length} bytes)`}sizeInBytes(){return this.data.length}copyBytesInto(e,t){const r=this.data.length;for(let n=0;n<r;n++)e[t++]=this.data[n];return r}}yi.of=e=>new yi(e);const Bi=yi;var Ei;!function(e){e[e.Deleted=0]="Deleted",e[e.Uncompressed=1]="Uncompressed",e[e.Compressed=2]="Compressed"}(Ei||(Ei={}));class Ci extends ei{constructor(e,t){super(e,!(arguments.length>2&&void 0!==arguments[2])||arguments[2]),this.computeIndex=()=>{const e=[];let t=0;for(let r=0,n=this.entries.length;r<n;r++){const n=this.entries[r],s=this.entries[r-1];0===r?e.push(n.ref.objectNumber):n.ref.objectNumber-s.ref.objectNumber>1&&(e.push(t),e.push(n.ref.objectNumber),t=0),t+=1}return e.push(t),e},this.computeEntryTuples=()=>{const e=new Array(this.entries.length);for(let t=0,r=this.entries.length;t<r;t++){const r=this.entries[t];if(r.type===Ei.Deleted){const{type:n,nextFreeObjectNumber:s,ref:i}=r;e[t]=[n,s,i.generationNumber]}if(r.type===Ei.Uncompressed){const{type:n,offset:s,ref:i}=r;e[t]=[n,s,i.generationNumber]}if(r.type===Ei.Compressed){const{type:n,objectStreamRef:s,index:i}=r;e[t]=[n,s.objectNumber,i]}}return e},this.computeMaxEntryByteWidths=()=>{const e=this.entryTuplesCache.access(),t=[0,0,0];for(let r=0,n=e.length;r<n;r++){const[n,s,i]=e[r],o=nn(n),A=nn(s),a=nn(i);o>t[0]&&(t[0]=o),A>t[1]&&(t[1]=A),a>t[2]&&(t[2]=a)}return t},this.entries=t||[],this.entryTuplesCache=Un.populatedBy(this.computeEntryTuples),this.maxByteWidthsCache=Un.populatedBy(this.computeMaxEntryByteWidths),this.indexCache=Un.populatedBy(this.computeIndex),e.set(js.of("Type"),js.of("XRef"))}addDeletedEntry(e,t){const r=Ei.Deleted;this.entries.push({type:r,ref:e,nextFreeObjectNumber:t}),this.entryTuplesCache.invalidate(),this.maxByteWidthsCache.invalidate(),this.indexCache.invalidate(),this.contentsCache.invalidate()}addUncompressedEntry(e,t){const r=Ei.Uncompressed;this.entries.push({type:r,ref:e,offset:t}),this.entryTuplesCache.invalidate(),this.maxByteWidthsCache.invalidate(),this.indexCache.invalidate(),this.contentsCache.invalidate()}addCompressedEntry(e,t,r){const n=Ei.Compressed;this.entries.push({type:n,ref:e,objectStreamRef:t,index:r}),this.entryTuplesCache.invalidate(),this.maxByteWidthsCache.invalidate(),this.indexCache.invalidate(),this.contentsCache.invalidate()}clone(e){const{dict:t,entries:r,encode:n}=this;return Ci.of(t.clone(e),r.slice(),n)}getContentsString(){const e=this.entryTuplesCache.access(),t=this.maxByteWidthsCache.access();let r="";for(let n=0,s=e.length;n<s;n++){const[s,i,o]=e[n],A=Sr(sn(s)),a=Sr(sn(i)),l=Sr(sn(o));for(let e=t[0]-1;e>=0;e--)r+=(A[e]||0).toString(2);for(let e=t[1]-1;e>=0;e--)r+=(a[e]||0).toString(2);for(let e=t[2]-1;e>=0;e--)r+=(l[e]||0).toString(2)}return r}getUnencodedContents(){const e=this.entryTuplesCache.access(),t=this.maxByteWidthsCache.access(),r=new Uint8Array(this.getUnencodedContentsSize());let n=0;for(let s=0,i=e.length;s<i;s++){const[i,o,A]=e[s],a=Sr(sn(i)),l=Sr(sn(o)),c=Sr(sn(A));for(let e=t[0]-1;e>=0;e--)r[n++]=a[e]||0;for(let e=t[1]-1;e>=0;e--)r[n++]=l[e]||0;for(let e=t[2]-1;e>=0;e--)r[n++]=c[e]||0}return r}getUnencodedContentsSize(){const e=this.maxByteWidthsCache.access();return Nr(e)*this.entries.length}updateDict(){super.updateDict();const e=this.maxByteWidthsCache.access(),t=this.indexCache.access(),{context:r}=this.dict;this.dict.set(js.of("W"),r.obj(e)),this.dict.set(js.of("Index"),r.obj(t))}}Ci.create=function(e){const t=new Ci(e,[],!(arguments.length>1&&void 0!==arguments[1])||arguments[1]);return t.addDeletedEntry(Zs.of(0,65535),0),t},Ci.of=function(e,t){return new Ci(e,t,!(arguments.length>2&&void 0!==arguments[2])||arguments[2])};const xi=Ci;class Ii extends bi{constructor(e,t,r,n){super(e,t),this.encodeStreams=r,this.objectsPerStream=n}async computeBufferSize(){let e=this.context.largestObjectNumber+1;const t=Cs.forVersion(1,7);let r=t.sizeInBytes()+2;const n=xi.create(this.createTrailerDict(),this.encodeStreams),s=[],i=[],o=[],A=this.context.enumerateIndirectObjects();for(let u=0,d=A.length;u<d;u++){const t=A[u],[a,l]=t;if(a===this.context.trailerInfo.Encrypt||l instanceof zs||l instanceof Bi||0!==a.generationNumber)s.push(t),n.addUncompressedEntry(a,r),r+=this.computeIndirectObjectSize(t),this.shouldWaitForTick(1)&&await jr();else{let r=xr(i),s=xr(o);r&&r.length%this.objectsPerStream!==0||(r=[],i.push(r),s=Zs.of(e++),o.push(s)),n.addCompressedEntry(a,s,r.length),r.push(t)}}for(let u=0,d=i.length;u<d;u++){const e=i[u],t=o[u],A=wi.withContextAndObjects(this.context,e,this.encodeStreams);n.addUncompressedEntry(t,r),r+=this.computeIndirectObjectSize([t,A]),s.push([t,A]),this.shouldWaitForTick(e.length)&&await jr()}const a=Zs.of(e++);n.dict.set(js.of("Size"),Ds.of(e)),n.addUncompressedEntry(a,r);const l=r;r+=this.computeIndirectObjectSize([a,n]),s.push([a,n]);const c=fi.forLastCrossRefSectionOffset(l);return r+=c.sizeInBytes(),{size:r,header:t,indirectObjects:s,trailer:c}}}Ii.forContext=function(e,t){return new Ii(e,t,!(arguments.length>2&&void 0!==arguments[2])||arguments[2],arguments.length>3&&void 0!==arguments[3]?arguments[3]:50)};const Di=Ii;class Qi extends xs{constructor(e){super(),this.value=e}asBytes(){const e=this.value+(this.value.length%2===1?"0":""),t=e.length,r=new Uint8Array(e.length/2);let n=0,s=0;for(;n<t;){const t=parseInt(e.substring(n,n+2),16);r[s]=t,n+=2,s+=1}return r}decodeText(){const e=this.asBytes();return tn(e)?qr(e):Yn(e)}decodeDate(){const e=this.decodeText(),t=Er(e);if(!t)throw new ns(e);return t}asString(){return this.value}clone(){return Qi.of(this.value)}toString(){return`<${this.value}>`}sizeInBytes(){return this.value.length+2}copyBytesInto(e,t){return e[t++]=Bs.LessThan,t+=cr(this.value,e,t),e[t++]=Bs.GreaterThan,this.value.length+2}}Qi.of=e=>new Qi(e),Qi.fromText=e=>{const t=Xr(e);let r="";for(let n=0,s=t.length;n<s;n++)r+=sr(t[n],4);return new Qi(r)};const Pi=Qi;class Fi{constructor(e,t){this.encoding=e===hn.ZapfDingbats?bn.ZapfDingbats:e===hn.Symbol?bn.Symbol:bn.WinAnsi,this.font=pn.load(e),this.fontName=this.font.FontName,this.customName=t}encodeText(e){const t=this.encodeTextAsGlyphs(e),r=new Array(t.length);for(let n=0,s=t.length;n<s;n++)r[n]=ir(t[n].code);return Pi.of(r.join(""))}widthOfTextAtSize(e,t){const r=this.encodeTextAsGlyphs(e);let n=0;for(let s=0,i=r.length;s<i;s++){const e=r[s].name,t=(r[s+1]||{}).name,i=this.font.getXAxisKerningForPair(e,t)||0;n+=this.widthOfGlyph(e)+i}return n*(t/1e3)}heightOfFontAtSize(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{descender:r=!0}=t,{Ascender:n,Descender:s,FontBBox:i}=this.font;let o=(n||i[3])-(s||i[1]);return r||(o+=s||0),o/1e3*e}sizeOfFontAtHeight(e){const{Ascender:t,Descender:r,FontBBox:n}=this.font;return 1e3*e/((t||n[3])-(r||n[1]))}embedIntoContext(e,t){const r=e.obj({Type:"Font",Subtype:"Type1",BaseFont:this.customName||this.fontName,Encoding:this.encoding===bn.WinAnsi?"WinAnsiEncoding":void 0});return t?(e.assign(t,r),t):e.register(r)}widthOfGlyph(e){return this.font.getWidthOfGlyph(e)||250}encodeTextAsGlyphs(e){const t=Array.from(e),r=new Array(t.length);for(let n=0,s=t.length;n<s;n++){const e=nr(t[n]);r[n]=this.encoding.encodeUnicodeCodePoint(e)}return r}}Fi.for=(e,t)=>new Fi(e,t);const Li=Fi,Mi=e=>`/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo <<\n  /Registry (Adobe)\n  /Ordering (UCS)\n  /Supplement 0\n>> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000><ffff>\nendcodespacerange\n${e.length} beginbfchar\n${e.map((e=>{let[t,r]=e;return`${t} ${r}`})).join("\n")}\nendbfchar\nendcmap\nCMapName currentdict /CMap defineresource pop\nend\nend`,Si=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return`<${t.join("")}>`},Ni=e=>sr(e,4),ki=e=>{if(Or(e))return Ni(e);if(zr(e)){const t=Yr(e),r=Hr(e);return`${Ni(t)}${Ni(r)}`}const t=ir(e);throw new Error(`0x${t} is not a valid UTF-8 or UTF-16 codepoint.`)},Ri=e=>{const t=e["OS/2"]?e["OS/2"].sFamilyClass:0;return(e=>{let t=0;const r=e=>{t|=1<<e-1};return e.fixedPitch&&r(1),e.serif&&r(2),e.symbolic&&r(3),e.script&&r(4),e.nonsymbolic&&r(6),e.italic&&r(7),e.allCap&&r(17),e.smallCap&&r(18),e.forceBold&&r(19),t})({fixedPitch:e.post.isFixedPitch,serif:1<=t&&t<=7,symbolic:!0,script:10===t,italic:e.head.macStyle.italic})};class Ti extends xs{constructor(e){super(),this.value=e}asBytes(){const e=[];let t="",r=!1;const n=t=>{void 0!==t&&e.push(t),r=!1};for(let s=0,i=this.value.length;s<i;s++){const e=this.value[s],i=rr(e),o=this.value[s+1];r?i===Bs.Newline||i===Bs.CarriageReturn?n():i===Bs.n?n(Bs.Newline):i===Bs.r?n(Bs.CarriageReturn):i===Bs.t?n(Bs.Tab):i===Bs.b?n(Bs.Backspace):i===Bs.f?n(Bs.FormFeed):i===Bs.LeftParen?n(Bs.LeftParen):i===Bs.RightParen?n(Bs.RightParen):i===Bs.Backspace?n(Bs.BackSlash):i>=Bs.Zero&&i<=Bs.Seven?(t+=e,3!==t.length&&o>="0"&&o<="7"||(n(parseInt(t,8)),t="")):n(i):i===Bs.BackSlash?r=!0:n(i)}return new Uint8Array(e)}decodeText(){const e=this.asBytes();return tn(e)?qr(e):Yn(e)}decodeDate(){const e=this.decodeText(),t=Er(e);if(!t)throw new ns(e);return t}asString(){return this.value}clone(){return Ti.of(this.value)}toString(){return`(${this.value})`}sizeInBytes(){return this.value.length+2}copyBytesInto(e,t){return e[t++]=Bs.LeftParen,t+=cr(this.value,e,t),e[t++]=Bs.RightParen,this.value.length+2}}Ti.of=e=>new Ti(e),Ti.fromDate=e=>{const t=ar(String(e.getUTCFullYear()),4,"0"),r=ar(String(e.getUTCMonth()+1),2,"0"),n=ar(String(e.getUTCDate()),2,"0"),s=ar(String(e.getUTCHours()),2,"0"),i=ar(String(e.getUTCMinutes()),2,"0"),o=ar(String(e.getUTCSeconds()),2,"0");return new Ti(`D:${t}${r}${n}${s}${i}${o}Z`)};const Wi=Ti;class ji{constructor(e,t,r,n){this.allGlyphsInFontSortedById=()=>{const e=new Array(this.font.characterSet.length);for(let t=0,r=e.length;t<r;t++){const r=this.font.characterSet[t];e[t]=this.font.glyphForCodePoint(r)}return Lr(e.sort(Fr),(e=>e.id))},this.font=e,this.scale=1e3/this.font.unitsPerEm,this.fontData=t,this.fontName=this.font.postscriptName||"Font",this.customName=r,this.fontFeatures=n,this.baseFontName="",this.glyphCache=Un.populatedBy(this.allGlyphsInFontSortedById)}static async for(e,t,r,n){const s=await e.create(t);return new ji(s,t,r,n)}encodeText(e){const{glyphs:t}=this.font.layout(e,this.fontFeatures),r=new Array(t.length);for(let n=0,s=t.length;n<s;n++)r[n]=sr(t[n].id,4);return Pi.of(r.join(""))}widthOfTextAtSize(e,t){const{glyphs:r}=this.font.layout(e,this.fontFeatures);let n=0;for(let s=0,i=r.length;s<i;s++)n+=r[s].advanceWidth*this.scale;return n*(t/1e3)}heightOfFontAtSize(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{descender:r=!0}=t,{ascent:n,descent:s,bbox:i}=this.font;let o=(n||i.maxY)*this.scale-(s||i.minY)*this.scale;return r||(o-=Math.abs(s)||0),o/1e3*e}sizeOfFontAtHeight(e){const{ascent:t,descent:r,bbox:n}=this.font;return 1e3*e/((t||n.maxY)*this.scale-(r||n.minY)*this.scale)}embedIntoContext(e,t){return this.baseFontName=this.customName||e.addRandomSuffix(this.fontName),this.embedFontDict(e,t)}async embedFontDict(e,t){const r=await this.embedCIDFontDict(e),n=this.embedUnicodeCmap(e),s=e.obj({Type:"Font",Subtype:"Type0",BaseFont:this.baseFontName,Encoding:"Identity-H",DescendantFonts:[r],ToUnicode:n});return t?(e.assign(t,s),t):e.register(s)}isCFF(){return this.font.cff}async embedCIDFontDict(e){const t=await this.embedFontDescriptor(e),r=e.obj({Type:"Font",Subtype:this.isCFF()?"CIDFontType0":"CIDFontType2",CIDToGIDMap:"Identity",BaseFont:this.baseFontName,CIDSystemInfo:{Registry:Wi.of("Adobe"),Ordering:Wi.of("Identity"),Supplement:0},FontDescriptor:t,W:this.computeWidths()});return e.register(r)}async embedFontDescriptor(e){const t=await this.embedFontStream(e),{scale:r}=this,{italicAngle:n,ascent:s,descent:i,capHeight:o,xHeight:A}=this.font,{minX:a,minY:l,maxX:c,maxY:u}=this.font.bbox,d=e.obj({Type:"FontDescriptor",FontName:this.baseFontName,Flags:Ri(this.font),FontBBox:[a*r,l*r,c*r,u*r],ItalicAngle:n,Ascent:s*r,Descent:i*r,CapHeight:(o||s)*r,XHeight:(A||0)*r,StemV:0,[this.isCFF()?"FontFile3":"FontFile2"]:t});return e.register(d)}async serializeFont(){return this.fontData}async embedFontStream(e){const t=e.flateStream(await this.serializeFont(),{Subtype:this.isCFF()?"CIDFontType0C":void 0});return e.register(t)}embedUnicodeCmap(e){const t=((e,t)=>{const r=new Array(e.length);for(let n=0,s=e.length;n<s;n++){const s=e[n],i=Si(Ni(t(s))),o=Si(...s.codePoints.map(ki));r[n]=[i,o]}return Mi(r)})(this.glyphCache.access(),this.glyphId.bind(this)),r=e.flateStream(t);return e.register(r)}glyphId(e){return e?e.id:-1}computeWidths(){const e=this.glyphCache.access(),t=[];let r=[];for(let n=0,s=e.length;n<s;n++){const s=e[n],i=e[n-1],o=this.glyphId(s),A=this.glyphId(i);0===n?t.push(o):o-A!==1&&(t.push(r),t.push(o),r=[]),r.push(s.advanceWidth*this.scale)}return t.push(r),t}}const Gi=ji;class Xi extends Gi{constructor(e,t,r,n){super(e,t,r,n),this.subset=this.font.createSubset(),this.glyphs=[],this.glyphCache=Un.populatedBy((()=>this.glyphs)),this.glyphIdMap=new Map}static async for(e,t,r,n){const s=await e.create(t);return new Xi(s,t,r,n)}encodeText(e){const{glyphs:t}=this.font.layout(e,this.fontFeatures),r=new Array(t.length);for(let n=0,s=t.length;n<s;n++){const e=t[n],s=this.subset.includeGlyph(e);this.glyphs[s-1]=e,this.glyphIdMap.set(e.id,s),r[n]=sr(s,4)}return this.glyphCache.invalidate(),Pi.of(r.join(""))}isCFF(){return this.subset.cff}glyphId(e){return e?this.glyphIdMap.get(e.id):-1}serializeFont(){return new Promise(((e,t)=>{if("encodeStream"in this.subset){const r=[];this.subset.encodeStream().on("data",(e=>r.push(e))).on("end",(()=>e(Qr(r)))).on("error",(e=>t(e)))}else if("encode"in this.subset)try{e(this.subset.encode())}catch(r){t(r)}else t(new Error("Subset does not have an encode method"))}))}}const Oi=Xi;var zi;!function(e){e.Source="Source",e.Data="Data",e.Alternative="Alternative",e.Supplement="Supplement",e.EncryptedPayload="EncryptedPayload",e.FormData="EncryptedPayload",e.Schema="Schema",e.Unspecified="Unspecified"}(zi||(zi={}));class Yi{constructor(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.fileData=e,this.fileName=t,this.options=r}static for(e,t){return new Yi(e,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}async embedIntoContext(e,t){const{mimeType:r,description:n,creationDate:s,modificationDate:i,afRelationship:o}=this.options,A=e.flateStream(this.fileData,{Type:"EmbeddedFile",Subtype:null!==r&&void 0!==r?r:void 0,Params:{Size:this.fileData.length,CreationDate:s?Wi.fromDate(s):void 0,ModDate:i?Wi.fromDate(i):void 0}}),a=e.register(A),l=e.obj({Type:"Filespec",F:Wi.of(this.fileName),UF:Pi.fromText(this.fileName),EF:{F:a},Desc:n?Pi.fromText(n):void 0,AFRelationship:null!==o&&void 0!==o?o:void 0});return t?(e.assign(t,l),t):e.register(l)}}const Hi=Yi,Ui=[65472,65473,65474,65475,65477,65478,65479,65480,65481,65482,65483,65484,65485,65486,65487];var Vi;!function(e){e.DeviceGray="DeviceGray",e.DeviceRGB="DeviceRGB",e.DeviceCMYK="DeviceCMYK"}(Vi||(Vi={}));const qi={1:Vi.DeviceGray,3:Vi.DeviceRGB,4:Vi.DeviceCMYK};class Zi{constructor(e,t,r,n,s){this.imageData=e,this.bitsPerComponent=t,this.width=r,this.height=n,this.colorSpace=s}static async for(e){const t=new DataView(e.buffer);if(65496!==t.getUint16(0))throw new Error("SOI not found in JPEG");let r,n=2;for(;n<t.byteLength&&(r=t.getUint16(n),n+=2,!Ui.includes(r));)n+=t.getUint16(n);if(!Ui.includes(r))throw new Error("Invalid JPEG");n+=2;const s=t.getUint8(n++),i=t.getUint16(n);n+=2;const o=t.getUint16(n);n+=2;const A=t.getUint8(n++),a=qi[A];if(!a)throw new Error("Unknown JPEG channel.");return new Zi(e,s,o,i,a)}async embedIntoContext(e,t){const r=e.stream(this.imageData,{Type:"XObject",Subtype:"Image",BitsPerComponent:this.bitsPerComponent,Width:this.width,Height:this.height,ColorSpace:this.colorSpace,Filter:"DCTDecode",Decode:this.colorSpace===Vi.DeviceCMYK?[1,0,1,0,1,0,1,0]:void 0});return t?(e.assign(t,r),t):e.register(r)}}const Ki=Zi;var Ji={toRGBA8:function(e){var t=e.width,r=e.height;if(null==e.tabs.acTL)return[Ji.toRGBA8.decodeImage(e.data,t,r,e).buffer];var n=[];null==e.frames[0].data&&(e.frames[0].data=e.data);for(var s=t*r*4,i=new Uint8Array(s),o=new Uint8Array(s),A=new Uint8Array(s),a=0;a<e.frames.length;a++){var l=e.frames[a],c=l.rect.x,u=l.rect.y,d=l.rect.width,h=l.rect.height,f=Ji.toRGBA8.decodeImage(l.data,d,h,e);if(0!=a)for(var g=0;g<s;g++)A[g]=i[g];if(0==l.blend?Ji._copyTile(f,d,h,i,t,r,c,u,0):1==l.blend&&Ji._copyTile(f,d,h,i,t,r,c,u,1),n.push(i.buffer.slice(0)),0==l.dispose);else if(1==l.dispose)Ji._copyTile(o,d,h,i,t,r,c,u,0);else if(2==l.dispose)for(g=0;g<s;g++)i[g]=A[g]}return n}};Ji.toRGBA8.decodeImage=function(e,t,r,n){var s=t*r,i=Ji.decode._getBPP(n),o=Math.ceil(t*i/8),A=new Uint8Array(4*s),a=new Uint32Array(A.buffer),l=n.ctype,c=n.depth,u=Ji._bin.readUshort;Date.now();if(6==l){var d=s<<2;if(8==c)for(var h=0;h<d;h+=4)A[h]=e[h],A[h+1]=e[h+1],A[h+2]=e[h+2],A[h+3]=e[h+3];if(16==c)for(h=0;h<d;h++)A[h]=e[h<<1]}else if(2==l){var f=n.tabs.tRNS;if(null==f){if(8==c)for(h=0;h<s;h++){var g=3*h;a[h]=255<<24|e[g+2]<<16|e[g+1]<<8|e[g]}if(16==c)for(h=0;h<s;h++){g=6*h;a[h]=255<<24|e[g+4]<<16|e[g+2]<<8|e[g]}}else{var p=f[0],m=f[1],w=f[2];if(8==c)for(h=0;h<s;h++){var v=h<<2;g=3*h;a[h]=255<<24|e[g+2]<<16|e[g+1]<<8|e[g],e[g]==p&&e[g+1]==m&&e[g+2]==w&&(A[v+3]=0)}if(16==c)for(h=0;h<s;h++){v=h<<2,g=6*h;a[h]=255<<24|e[g+4]<<16|e[g+2]<<8|e[g],u(e,g)==p&&u(e,g+2)==m&&u(e,g+4)==w&&(A[v+3]=0)}}}else if(3==l){var b=n.tabs.PLTE,y=n.tabs.tRNS,B=y?y.length:0;if(1==c)for(var E=0;E<r;E++){var C=E*o,x=E*t;for(h=0;h<t;h++){v=x+h<<2;var I=3*(D=e[C+(h>>3)]>>7-(7&h)&1);A[v]=b[I],A[v+1]=b[I+1],A[v+2]=b[I+2],A[v+3]=D<B?y[D]:255}}if(2==c)for(E=0;E<r;E++)for(C=E*o,x=E*t,h=0;h<t;h++){v=x+h<<2,I=3*(D=e[C+(h>>2)]>>6-((3&h)<<1)&3);A[v]=b[I],A[v+1]=b[I+1],A[v+2]=b[I+2],A[v+3]=D<B?y[D]:255}if(4==c)for(E=0;E<r;E++)for(C=E*o,x=E*t,h=0;h<t;h++){v=x+h<<2,I=3*(D=e[C+(h>>1)]>>4-((1&h)<<2)&15);A[v]=b[I],A[v+1]=b[I+1],A[v+2]=b[I+2],A[v+3]=D<B?y[D]:255}if(8==c)for(h=0;h<s;h++){var D;v=h<<2,I=3*(D=e[h]);A[v]=b[I],A[v+1]=b[I+1],A[v+2]=b[I+2],A[v+3]=D<B?y[D]:255}}else if(4==l){if(8==c)for(h=0;h<s;h++){v=h<<2;var Q=e[P=h<<1];A[v]=Q,A[v+1]=Q,A[v+2]=Q,A[v+3]=e[P+1]}if(16==c)for(h=0;h<s;h++){var P;v=h<<2,Q=e[P=h<<2];A[v]=Q,A[v+1]=Q,A[v+2]=Q,A[v+3]=e[P+2]}}else if(0==l)for(p=n.tabs.tRNS?n.tabs.tRNS:-1,E=0;E<r;E++){var F=E*o,L=E*t;if(1==c)for(var M=0;M<t;M++){var S=(Q=255*(e[F+(M>>>3)]>>>7-(7&M)&1))==255*p?0:255;a[L+M]=S<<24|Q<<16|Q<<8|Q}else if(2==c)for(M=0;M<t;M++){S=(Q=85*(e[F+(M>>>2)]>>>6-((3&M)<<1)&3))==85*p?0:255;a[L+M]=S<<24|Q<<16|Q<<8|Q}else if(4==c)for(M=0;M<t;M++){S=(Q=17*(e[F+(M>>>1)]>>>4-((1&M)<<2)&15))==17*p?0:255;a[L+M]=S<<24|Q<<16|Q<<8|Q}else if(8==c)for(M=0;M<t;M++){S=(Q=e[F+M])==p?0:255;a[L+M]=S<<24|Q<<16|Q<<8|Q}else if(16==c)for(M=0;M<t;M++){Q=e[F+(M<<1)],S=u(e,F+(M<<h))==p?0:255;a[L+M]=S<<24|Q<<16|Q<<8|Q}}return A},Ji.decode=function(e){for(var t,r=new Uint8Array(e),n=8,s=Ji._bin,i=s.readUshort,o=s.readUint,A={tabs:{},frames:[]},a=new Uint8Array(r.length),l=0,c=0,u=[137,80,78,71,13,10,26,10],d=0;d<8;d++)if(r[d]!=u[d])throw"The input is not a PNG file!";for(;n<r.length;){var h=s.readUint(r,n);n+=4;var f=s.readASCII(r,n,4);if(n+=4,"IHDR"==f)Ji.decode._IHDR(r,n,A);else if("IDAT"==f){for(d=0;d<h;d++)a[l+d]=r[n+d];l+=h}else if("acTL"==f)A.tabs[f]={num_frames:o(r,n),num_plays:o(r,n+4)},t=new Uint8Array(r.length);else if("fcTL"==f){var g;if(0!=c)(g=A.frames[A.frames.length-1]).data=Ji.decode._decompress(A,t.slice(0,c),g.rect.width,g.rect.height),c=0;var p={x:o(r,n+12),y:o(r,n+16),width:o(r,n+4),height:o(r,n+8)},m=i(r,n+22);m=i(r,n+20)/(0==m?100:m);var w={rect:p,delay:Math.round(1e3*m),dispose:r[n+24],blend:r[n+25]};A.frames.push(w)}else if("fdAT"==f){for(d=0;d<h-4;d++)t[c+d]=r[n+d+4];c+=h-4}else if("pHYs"==f)A.tabs[f]=[s.readUint(r,n),s.readUint(r,n+4),r[n+8]];else if("cHRM"==f){A.tabs[f]=[];for(d=0;d<8;d++)A.tabs[f].push(s.readUint(r,n+4*d))}else if("tEXt"==f){null==A.tabs[f]&&(A.tabs[f]={});var v=s.nextZero(r,n),b=s.readASCII(r,n,v-n),y=s.readASCII(r,v+1,n+h-v-1);A.tabs[f][b]=y}else if("iTXt"==f){null==A.tabs[f]&&(A.tabs[f]={});v=0;var B=n;v=s.nextZero(r,B);b=s.readASCII(r,B,v-B),r[B=v+1],r[B+1];B+=2,v=s.nextZero(r,B);s.readASCII(r,B,v-B);B=v+1,v=s.nextZero(r,B);s.readUTF8(r,B,v-B);B=v+1;y=s.readUTF8(r,B,h-(B-n));A.tabs[f][b]=y}else if("PLTE"==f)A.tabs[f]=s.readBytes(r,n,h);else if("hIST"==f){var E=A.tabs.PLTE.length/3;A.tabs[f]=[];for(d=0;d<E;d++)A.tabs[f].push(i(r,n+2*d))}else if("tRNS"==f)3==A.ctype?A.tabs[f]=s.readBytes(r,n,h):0==A.ctype?A.tabs[f]=i(r,n):2==A.ctype&&(A.tabs[f]=[i(r,n),i(r,n+2),i(r,n+4)]);else if("gAMA"==f)A.tabs[f]=s.readUint(r,n)/1e5;else if("sRGB"==f)A.tabs[f]=r[n];else if("bKGD"==f)0==A.ctype||4==A.ctype?A.tabs[f]=[i(r,n)]:2==A.ctype||6==A.ctype?A.tabs[f]=[i(r,n),i(r,n+2),i(r,n+4)]:3==A.ctype&&(A.tabs[f]=r[n]);else if("IEND"==f)break;n+=h;s.readUint(r,n);n+=4}0!=c&&((g=A.frames[A.frames.length-1]).data=Ji.decode._decompress(A,t.slice(0,c),g.rect.width,g.rect.height),c=0);return A.data=Ji.decode._decompress(A,a,A.width,A.height),delete A.compress,delete A.interlace,delete A.filter,A},Ji.decode._decompress=function(e,t,r,n){Date.now();var s=Ji.decode._getBPP(e),i=Math.ceil(r*s/8),o=new Uint8Array((i+1+e.interlace)*n);t=Ji.decode._inflate(t,o);Date.now();return 0==e.interlace?t=Ji.decode._filterZero(t,e,0,r,n):1==e.interlace&&(t=Ji.decode._readInterlace(t,e)),t},Ji.decode._inflate=function(e,t){return Ji.inflateRaw(new Uint8Array(e.buffer,2,e.length-6),t)},Ji.inflateRaw=function(){var e={H:{}};return e.H.N=function(t,r){var n,s,i=Uint8Array,o=0,A=0,a=0,l=0,c=0,u=0,d=0,h=0,f=0;if(3==t[0]&&0==t[1])return r||new i(0);var g=e.H,p=g.b,m=g.e,w=g.R,v=g.n,b=g.A,y=g.Z,B=g.m,E=null==r;for(E&&(r=new i(t.length>>>2<<3));0==o;)if(o=p(t,f,1),A=p(t,f+1,2),f+=3,0!=A){if(E&&(r=e.H.W(r,h+(1<<17))),1==A&&(n=B.J,s=B.h,u=511,d=31),2==A){a=m(t,f,5)+257,l=m(t,f+5,5)+1,c=m(t,f+10,4)+4;f+=14;for(var C=1,x=0;x<38;x+=2)B.Q[x]=0,B.Q[x+1]=0;for(x=0;x<c;x++){var I=m(t,f+3*x,3);B.Q[1+(B.X[x]<<1)]=I,I>C&&(C=I)}f+=3*c,v(B.Q,C),b(B.Q,C,B.u),n=B.w,s=B.d,f=w(B.u,(1<<C)-1,a+l,t,f,B.v);var D=g.V(B.v,0,a,B.C);u=(1<<D)-1;var Q=g.V(B.v,a,l,B.D);d=(1<<Q)-1,v(B.C,D),b(B.C,D,n),v(B.D,Q),b(B.D,Q,s)}for(;;){var P=n[y(t,f)&u];f+=15&P;var F=P>>>4;if(F>>>8==0)r[h++]=F;else{if(256==F)break;var L=h+F-254;if(F>264){var M=B.q[F-257];L=h+(M>>>3)+m(t,f,7&M),f+=7&M}var S=s[y(t,f)&d];f+=15&S;var N=S>>>4,k=B.c[N],R=(k>>>4)+p(t,f,15&k);for(f+=15&k;h<L;)r[h]=r[h++-R],r[h]=r[h++-R],r[h]=r[h++-R],r[h]=r[h++-R];h=L}}}else{0!=(7&f)&&(f+=8-(7&f));var T=4+(f>>>3),W=t[T-4]|t[T-3]<<8;E&&(r=e.H.W(r,h+W)),r.set(new i(t.buffer,t.byteOffset+T,W),h),f=T+W<<3,h+=W}return r.length==h?r:r.slice(0,h)},e.H.W=function(e,t){var r=e.length;if(t<=r)return e;var n=new Uint8Array(r<<1);return n.set(e,0),n},e.H.R=function(t,r,n,s,i,o){for(var A=e.H.e,a=e.H.Z,l=0;l<n;){var c=t[a(s,i)&r];i+=15&c;var u=c>>>4;if(u<=15)o[l]=u,l++;else{var d=0,h=0;16==u?(h=3+A(s,i,2),i+=2,d=o[l-1]):17==u?(h=3+A(s,i,3),i+=3):18==u&&(h=11+A(s,i,7),i+=7);for(var f=l+h;l<f;)o[l]=d,l++}}return i},e.H.V=function(e,t,r,n){for(var s=0,i=0,o=n.length>>>1;i<r;){var A=e[i+t];n[i<<1]=0,n[1+(i<<1)]=A,A>s&&(s=A),i++}for(;i<o;)n[i<<1]=0,n[1+(i<<1)]=0,i++;return s},e.H.n=function(t,r){for(var n,s,i,o,A=e.H.m,a=t.length,l=A.j,c=0;c<=r;c++)l[c]=0;for(c=1;c<a;c+=2)l[t[c]]++;var u=A.K;for(n=0,l[0]=0,s=1;s<=r;s++)n=n+l[s-1]<<1,u[s]=n;for(i=0;i<a;i+=2)0!=(o=t[i+1])&&(t[i]=u[o],u[o]++)},e.H.A=function(t,r,n){for(var s=t.length,i=e.H.m.r,o=0;o<s;o+=2)if(0!=t[o+1])for(var A=o>>1,a=t[o+1],l=A<<4|a,c=r-a,u=t[o]<<c,d=u+(1<<c);u!=d;){n[i[u]>>>15-r]=l,u++}},e.H.l=function(t,r){for(var n=e.H.m.r,s=15-r,i=0;i<t.length;i+=2){var o=t[i]<<r-t[i+1];t[i]=n[o]>>>s}},e.H.M=function(e,t,r){r<<=7&t;var n=t>>>3;e[n]|=r,e[n+1]|=r>>>8},e.H.I=function(e,t,r){r<<=7&t;var n=t>>>3;e[n]|=r,e[n+1]|=r>>>8,e[n+2]|=r>>>16},e.H.e=function(e,t,r){return(e[t>>>3]|e[1+(t>>>3)]<<8)>>>(7&t)&(1<<r)-1},e.H.b=function(e,t,r){return(e[t>>>3]|e[1+(t>>>3)]<<8|e[2+(t>>>3)]<<16)>>>(7&t)&(1<<r)-1},e.H.Z=function(e,t){return(e[t>>>3]|e[1+(t>>>3)]<<8|e[2+(t>>>3)]<<16)>>>(7&t)},e.H.i=function(e,t){return(e[t>>>3]|e[1+(t>>>3)]<<8|e[2+(t>>>3)]<<16|e[3+(t>>>3)]<<24)>>>(7&t)},e.H.m=function(){var e=Uint16Array,t=Uint32Array;return{K:new e(16),j:new e(16),X:[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],S:[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,999,999,999],T:[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0],q:new e(32),p:[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,65535,65535],z:[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0],c:new t(32),J:new e(512),_:[],h:new e(32),$:[],w:new e(32768),C:[],v:[],d:new e(32768),D:[],u:new e(512),Q:[],r:new e(32768),s:new t(286),Y:new t(30),a:new t(19),t:new t(15e3),k:new e(65536),g:new e(32768)}}(),function(){for(var t=e.H.m,r=0;r<32768;r++){var n=r;n=(4278255360&(n=(4042322160&(n=(3435973836&(n=(2863311530&n)>>>1|(1431655765&n)<<1))>>>2|(858993459&n)<<2))>>>4|(252645135&n)<<4))>>>8|(16711935&n)<<8,t.r[r]=(n>>>16|n<<16)>>>17}function s(e,t,r){for(;0!=t--;)e.push(0,r)}for(r=0;r<32;r++)t.q[r]=t.S[r]<<3|t.T[r],t.c[r]=t.p[r]<<4|t.z[r];s(t._,144,8),s(t._,112,9),s(t._,24,7),s(t._,8,8),e.H.n(t._,9),e.H.A(t._,9,t.J),e.H.l(t._,9),s(t.$,32,5),e.H.n(t.$,5),e.H.A(t.$,5,t.h),e.H.l(t.$,5),s(t.Q,19,0),s(t.C,286,0),s(t.D,30,0),s(t.v,320,0)}(),e.H.N}(),Ji.decode._readInterlace=function(e,t){for(var r=t.width,n=t.height,s=Ji.decode._getBPP(t),i=s>>3,o=Math.ceil(r*s/8),A=new Uint8Array(n*o),a=0,l=[0,0,4,0,2,0,1],c=[0,4,0,2,0,1,0],u=[8,8,8,4,4,2,2],d=[8,8,4,4,2,2,1],h=0;h<7;){for(var f=u[h],g=d[h],p=0,m=0,w=l[h];w<n;)w+=f,m++;for(var v=c[h];v<r;)v+=g,p++;var b=Math.ceil(p*s/8);Ji.decode._filterZero(e,t,a,p,m);for(var y=0,B=l[h];B<n;){for(var E=c[h],C=a+y*b<<3;E<r;){var x;if(1==s)x=(x=e[C>>3])>>7-(7&C)&1,A[B*o+(E>>3)]|=x<<7-(7&E);if(2==s)x=(x=e[C>>3])>>6-(7&C)&3,A[B*o+(E>>2)]|=x<<6-((3&E)<<1);if(4==s)x=(x=e[C>>3])>>4-(7&C)&15,A[B*o+(E>>1)]|=x<<4-((1&E)<<2);if(s>=8)for(var I=B*o+E*i,D=0;D<i;D++)A[I+D]=e[(C>>3)+D];C+=s,E+=g}y++,B+=f}p*m!=0&&(a+=m*(1+b)),h+=1}return A},Ji.decode._getBPP=function(e){return[1,null,3,1,2,null,4][e.ctype]*e.depth},Ji.decode._filterZero=function(e,t,r,n,s){var i=Ji.decode._getBPP(t),o=Math.ceil(n*i/8),A=Ji.decode._paeth;i=Math.ceil(i/8);var a=0,l=1,c=e[r],u=0;if(c>1&&(e[r]=[0,0,1][c-2]),3==c)for(u=i;u<o;u++)e[u+1]=e[u+1]+(e[u+1-i]>>>1)&255;for(var d=0;d<s;d++)if(u=0,0==(c=e[(l=(a=r+d*o)+d+1)-1]))for(;u<o;u++)e[a+u]=e[l+u];else if(1==c){for(;u<i;u++)e[a+u]=e[l+u];for(;u<o;u++)e[a+u]=e[l+u]+e[a+u-i]}else if(2==c)for(;u<o;u++)e[a+u]=e[l+u]+e[a+u-o];else if(3==c){for(;u<i;u++)e[a+u]=e[l+u]+(e[a+u-o]>>>1);for(;u<o;u++)e[a+u]=e[l+u]+(e[a+u-o]+e[a+u-i]>>>1)}else{for(;u<i;u++)e[a+u]=e[l+u]+A(0,e[a+u-o],0);for(;u<o;u++)e[a+u]=e[l+u]+A(e[a+u-i],e[a+u-o],e[a+u-i-o])}return e},Ji.decode._paeth=function(e,t,r){var n=e+t-r,s=n-e,i=n-t,o=n-r;return s*s<=i*i&&s*s<=o*o?e:i*i<=o*o?t:r},Ji.decode._IHDR=function(e,t,r){var n=Ji._bin;r.width=n.readUint(e,t),t+=4,r.height=n.readUint(e,t),t+=4,r.depth=e[t],t++,r.ctype=e[t],t++,r.compress=e[t],t++,r.filter=e[t],t++,r.interlace=e[t],t++},Ji._bin={nextZero:function(e,t){for(;0!=e[t];)t++;return t},readUshort:function(e,t){return e[t]<<8|e[t+1]},writeUshort:function(e,t,r){e[t]=r>>8&255,e[t+1]=255&r},readUint:function(e,t){return 16777216*e[t]+(e[t+1]<<16|e[t+2]<<8|e[t+3])},writeUint:function(e,t,r){e[t]=r>>24&255,e[t+1]=r>>16&255,e[t+2]=r>>8&255,e[t+3]=255&r},readASCII:function(e,t,r){for(var n="",s=0;s<r;s++)n+=String.fromCharCode(e[t+s]);return n},writeASCII:function(e,t,r){for(var n=0;n<r.length;n++)e[t+n]=r.charCodeAt(n)},readBytes:function(e,t,r){for(var n=[],s=0;s<r;s++)n.push(e[t+s]);return n},pad:function(e){return e.length<2?"0"+e:e},readUTF8:function(e,t,r){for(var n,s="",i=0;i<r;i++)s+="%"+Ji._bin.pad(e[t+i].toString(16));try{n=decodeURIComponent(s)}catch(JM){return Ji._bin.readASCII(e,t,r)}return n}},Ji._copyTile=function(e,t,r,n,s,i,o,A,a){for(var l=Math.min(t,s),c=Math.min(r,i),u=0,d=0,h=0;h<c;h++)for(var f=0;f<l;f++)if(o>=0&&A>=0?(u=h*t+f<<2,d=(A+h)*s+o+f<<2):(u=(-A+h)*t-o+f<<2,d=h*s+f<<2),0==a)n[d]=e[u],n[d+1]=e[u+1],n[d+2]=e[u+2],n[d+3]=e[u+3];else if(1==a){var g=e[u+3]*(1/255),p=e[u]*g,m=e[u+1]*g,w=e[u+2]*g,v=n[d+3]*(1/255),b=n[d]*v,y=n[d+1]*v,B=n[d+2]*v,E=1-g,C=g+v*E,x=0==C?0:1/C;n[d+3]=255*C,n[d+0]=(p+b*E)*x,n[d+1]=(m+y*E)*x,n[d+2]=(w+B*E)*x}else if(2==a){g=e[u+3],p=e[u],m=e[u+1],w=e[u+2],v=n[d+3],b=n[d],y=n[d+1],B=n[d+2];g==v&&p==b&&m==y&&w==B?(n[d]=0,n[d+1]=0,n[d+2]=0,n[d+3]=0):(n[d]=p,n[d+1]=m,n[d+2]=w,n[d+3]=g)}else if(3==a){g=e[u+3],p=e[u],m=e[u+1],w=e[u+2],v=n[d+3],b=n[d],y=n[d+1],B=n[d+2];if(g==v&&p==b&&m==y&&w==B)continue;if(g<220&&v>20)return!1}return!0},Ji.encode=function(e,t,r,n,s,i,o){null==n&&(n=0),null==o&&(o=!1);var A=Ji.encode.compress(e,t,r,n,[!1,!1,!1,0,o]);return Ji.encode.compressPNG(A,-1),Ji.encode._main(A,t,r,s,i)},Ji.encodeLL=function(e,t,r,n,s,i,o,A){for(var a={ctype:0+(1==n?0:2)+(0==s?0:4),depth:i,frames:[]},l=(Date.now(),(n+s)*i),c=l*t,u=0;u<e.length;u++)a.frames.push({rect:{x:0,y:0,width:t,height:r},img:new Uint8Array(e[u]),blend:0,dispose:1,bpp:Math.ceil(l/8),bpl:Math.ceil(c/8)});return Ji.encode.compressPNG(a,0,!0),Ji.encode._main(a,t,r,o,A)},Ji.encode._main=function(e,t,r,n,s){null==s&&(s={});var i=Ji.crc.crc,o=Ji._bin.writeUint,A=Ji._bin.writeUshort,a=Ji._bin.writeASCII,l=8,c=e.frames.length>1,u=!1,d=33+(c?20:0);if(null!=s.sRGB&&(d+=13),null!=s.pHYs&&(d+=21),3==e.ctype){for(var h=e.plte.length,f=0;f<h;f++)e.plte[f]>>>24!=255&&(u=!0);d+=8+3*h+4+(u?8+1*h+4:0)}for(var g=0;g<e.frames.length;g++){c&&(d+=38),d+=(C=e.frames[g]).cimg.length+12,0!=g&&(d+=4)}d+=12;var p=new Uint8Array(d),m=[137,80,78,71,13,10,26,10];for(f=0;f<8;f++)p[f]=m[f];if(o(p,l,13),a(p,l+=4,"IHDR"),o(p,l+=4,t),o(p,l+=4,r),p[l+=4]=e.depth,p[++l]=e.ctype,p[++l]=0,p[++l]=0,p[++l]=0,o(p,++l,i(p,l-17,17)),l+=4,null!=s.sRGB&&(o(p,l,1),a(p,l+=4,"sRGB"),p[l+=4]=s.sRGB,o(p,++l,i(p,l-5,5)),l+=4),null!=s.pHYs&&(o(p,l,9),a(p,l+=4,"pHYs"),o(p,l+=4,s.pHYs[0]),o(p,l+=4,s.pHYs[1]),p[l+=4]=s.pHYs[2],o(p,++l,i(p,l-13,13)),l+=4),c&&(o(p,l,8),a(p,l+=4,"acTL"),o(p,l+=4,e.frames.length),o(p,l+=4,null!=s.loop?s.loop:0),o(p,l+=4,i(p,l-12,12)),l+=4),3==e.ctype){o(p,l,3*(h=e.plte.length)),a(p,l+=4,"PLTE"),l+=4;for(f=0;f<h;f++){var w=3*f,v=e.plte[f],b=255&v,y=v>>>8&255,B=v>>>16&255;p[l+w+0]=b,p[l+w+1]=y,p[l+w+2]=B}if(o(p,l+=3*h,i(p,l-3*h-4,3*h+4)),l+=4,u){o(p,l,h),a(p,l+=4,"tRNS"),l+=4;for(f=0;f<h;f++)p[l+f]=e.plte[f]>>>24&255;o(p,l+=h,i(p,l-h-4,h+4)),l+=4}}var E=0;for(g=0;g<e.frames.length;g++){var C=e.frames[g];c&&(o(p,l,26),a(p,l+=4,"fcTL"),o(p,l+=4,E++),o(p,l+=4,C.rect.width),o(p,l+=4,C.rect.height),o(p,l+=4,C.rect.x),o(p,l+=4,C.rect.y),A(p,l+=4,n[g]),A(p,l+=2,1e3),p[l+=2]=C.dispose,p[++l]=C.blend,o(p,++l,i(p,l-30,30)),l+=4);var x=C.cimg;o(p,l,(h=x.length)+(0==g?0:4));var I=l+=4;a(p,l,0==g?"IDAT":"fdAT"),l+=4,0!=g&&(o(p,l,E++),l+=4),p.set(x,l),o(p,l+=h,i(p,I,l-I)),l+=4}return o(p,l,0),a(p,l+=4,"IEND"),o(p,l+=4,i(p,l-4,4)),l+=4,p.buffer},Ji.encode.compressPNG=function(e,t,r){for(var n=0;n<e.frames.length;n++){var s=e.frames[n],i=(s.rect.width,s.rect.height),o=new Uint8Array(i*s.bpl+i);s.cimg=Ji.encode._filterZero(s.img,i,s.bpp,s.bpl,o,t,r)}},Ji.encode.compress=function(e,t,r,n,s){for(var i=s[0],o=s[1],A=s[2],a=s[3],l=s[4],c=6,u=8,d=255,h=0;h<e.length;h++)for(var f=new Uint8Array(e[h]),g=f.length,p=0;p<g;p+=4)d&=f[p+3];var m=255!=d,w=Ji.encode.framize(e,t,r,i,o,A),v={},b=[],y=[];if(0!=n){var B=[];for(p=0;p<w.length;p++)B.push(w[p].img.buffer);var E=Ji.encode.concatRGBA(B),C=Ji.quantize(E,n),x=0,I=new Uint8Array(C.abuf);for(p=0;p<w.length;p++){var D=(H=w[p].img).length;y.push(new Uint8Array(C.inds.buffer,x>>2,D>>2));for(h=0;h<D;h+=4)H[h]=I[x+h],H[h+1]=I[x+h+1],H[h+2]=I[x+h+2],H[h+3]=I[x+h+3];x+=D}for(p=0;p<C.plte.length;p++)b.push(C.plte[p].est.rgba)}else for(h=0;h<w.length;h++){var Q=w[h],P=new Uint32Array(Q.img.buffer),F=Q.rect.width,L=(g=P.length,new Uint8Array(g));y.push(L);for(p=0;p<g;p++){var M=P[p];if(0!=p&&M==P[p-1])L[p]=L[p-1];else if(p>F&&M==P[p-F])L[p]=L[p-F];else{var S=v[M];if(null==S&&(v[M]=S=b.length,b.push(M),b.length>=300))break;L[p]=S}}}var N=b.length;N<=256&&0==l&&(u=N<=2?1:N<=4?2:N<=16?4:8,u=Math.max(u,a));for(h=0;h<w.length;h++){(Q=w[h]).rect.x,Q.rect.y,F=Q.rect.width;var k=Q.rect.height,R=Q.img,T=(new Uint32Array(R.buffer),4*F),W=4;if(N<=256&&0==l){T=Math.ceil(u*F/8);for(var j=new Uint8Array(T*k),G=y[h],X=0;X<k;X++){p=X*T;var O=X*F;if(8==u)for(var z=0;z<F;z++)j[p+z]=G[O+z];else if(4==u)for(z=0;z<F;z++)j[p+(z>>1)]|=G[O+z]<<4-4*(1&z);else if(2==u)for(z=0;z<F;z++)j[p+(z>>2)]|=G[O+z]<<6-2*(3&z);else if(1==u)for(z=0;z<F;z++)j[p+(z>>3)]|=G[O+z]<<7-1*(7&z)}R=j,c=3,W=1}else if(0==m&&1==w.length){j=new Uint8Array(F*k*3);var Y=F*k;for(p=0;p<Y;p++){var H,U=4*p;j[H=3*p]=R[U],j[H+1]=R[U+1],j[H+2]=R[U+2]}R=j,c=2,W=3,T=3*F}Q.img=R,Q.bpl=T,Q.bpp=W}return{ctype:c,depth:u,plte:b,frames:w}},Ji.encode.framize=function(e,t,r,n,s,i){for(var o=[],A=0;A<e.length;A++){var a,l=new Uint8Array(e[A]),c=new Uint32Array(l.buffer),u=0,d=0,h=t,f=r,g=n?1:0;if(0!=A){for(var p=i||n||1==A||0!=o[A-2].dispose?1:2,m=0,w=1e9,v=0;v<p;v++){for(var b=new Uint8Array(e[A-1-v]),y=new Uint32Array(e[A-1-v]),B=t,E=r,C=-1,x=-1,I=0;I<r;I++)for(var D=0;D<t;D++){c[N=I*t+D]!=y[N]&&(D<B&&(B=D),D>C&&(C=D),I<E&&(E=I),I>x&&(x=I))}-1==C&&(B=E=C=x=0),s&&(1==(1&B)&&B--,1==(1&E)&&E--);var Q=(C-B+1)*(x-E+1);Q<w&&(w=Q,m=v,u=B,d=E,h=C-B+1,f=x-E+1)}b=new Uint8Array(e[A-1-m]);1==m&&(o[A-1].dispose=2),a=new Uint8Array(h*f*4),Ji._copyTile(b,t,r,a,h,f,-u,-d,0),1==(g=Ji._copyTile(l,t,r,a,h,f,-u,-d,3)?1:0)?Ji.encode._prepareDiff(l,t,r,a,{x:u,y:d,width:h,height:f}):Ji._copyTile(l,t,r,a,h,f,-u,-d,0)}else a=l.slice(0);o.push({rect:{x:u,y:d,width:h,height:f},img:a,blend:g,dispose:0})}if(n)for(A=0;A<o.length;A++){if(1!=(k=o[A]).blend){var P=k.rect,F=o[A-1].rect,L=Math.min(P.x,F.x),M=Math.min(P.y,F.y),S={x:L,y:M,width:Math.max(P.x+P.width,F.x+F.width)-L,height:Math.max(P.y+P.height,F.y+F.height)-M};o[A-1].dispose=1,A-1!=0&&Ji.encode._updateFrame(e,t,r,o,A-1,S,s),Ji.encode._updateFrame(e,t,r,o,A,S,s)}}if(1!=e.length)for(var N=0;N<o.length;N++){var k;(k=o[N]).rect.width*k.rect.height}return o},Ji.encode._updateFrame=function(e,t,r,n,s,i,o){for(var A=Uint8Array,a=Uint32Array,l=new A(e[s-1]),c=new a(e[s-1]),u=s+1<e.length?new A(e[s+1]):null,d=new A(e[s]),h=new a(d.buffer),f=t,g=r,p=-1,m=-1,w=0;w<i.height;w++)for(var v=0;v<i.width;v++){var b=i.x+v,y=i.y+w,B=y*t+b,E=h[B];0==E||0==n[s-1].dispose&&c[B]==E&&(null==u||0!=u[4*B+3])||(b<f&&(f=b),b>p&&(p=b),y<g&&(g=y),y>m&&(m=y))}-1==p&&(f=g=p=m=0),o&&(1==(1&f)&&f--,1==(1&g)&&g--),i={x:f,y:g,width:p-f+1,height:m-g+1};var C=n[s];C.rect=i,C.blend=1,C.img=new Uint8Array(i.width*i.height*4),0==n[s-1].dispose?(Ji._copyTile(l,t,r,C.img,i.width,i.height,-i.x,-i.y,0),Ji.encode._prepareDiff(d,t,r,C.img,i)):Ji._copyTile(d,t,r,C.img,i.width,i.height,-i.x,-i.y,0)},Ji.encode._prepareDiff=function(e,t,r,n,s){Ji._copyTile(e,t,r,n,s.width,s.height,-s.x,-s.y,2)},Ji.encode._filterZero=function(e,t,r,n,s,i,o){var A,a=[],l=[0,1,2,3,4];-1!=i?l=[i]:(t*n>5e5||1==r)&&(l=[0]),o&&(A={level:0});for(var c=o&&null!=UZIP?UZIP:an(),u=0;u<l.length;u++){for(var d=0;d<t;d++)Ji.encode._filterLine(s,e,d,n,r,l[u]);a.push(c.deflate(s,A))}var h,f=1e9;for(u=0;u<a.length;u++)a[u].length<f&&(h=u,f=a[u].length);return a[h]},Ji.encode._filterLine=function(e,t,r,n,s,i){var o=r*n,A=o+r,a=Ji.decode._paeth;if(e[A]=i,A++,0==i)if(n<500)for(var l=0;l<n;l++)e[A+l]=t[o+l];else e.set(new Uint8Array(t.buffer,o,n),A);else if(1==i){for(l=0;l<s;l++)e[A+l]=t[o+l];for(l=s;l<n;l++)e[A+l]=t[o+l]-t[o+l-s]+256&255}else if(0==r){for(l=0;l<s;l++)e[A+l]=t[o+l];if(2==i)for(l=s;l<n;l++)e[A+l]=t[o+l];if(3==i)for(l=s;l<n;l++)e[A+l]=t[o+l]-(t[o+l-s]>>1)+256&255;if(4==i)for(l=s;l<n;l++)e[A+l]=t[o+l]-a(t[o+l-s],0,0)+256&255}else{if(2==i)for(l=0;l<n;l++)e[A+l]=t[o+l]+256-t[o+l-n]&255;if(3==i){for(l=0;l<s;l++)e[A+l]=t[o+l]+256-(t[o+l-n]>>1)&255;for(l=s;l<n;l++)e[A+l]=t[o+l]+256-(t[o+l-n]+t[o+l-s]>>1)&255}if(4==i){for(l=0;l<s;l++)e[A+l]=t[o+l]+256-a(0,t[o+l-n],0)&255;for(l=s;l<n;l++)e[A+l]=t[o+l]+256-a(t[o+l-s],t[o+l-n],t[o+l-s-n])&255}}},Ji.crc={table:function(){for(var e=new Uint32Array(256),t=0;t<256;t++){for(var r=t,n=0;n<8;n++)1&r?r=3988292384^r>>>1:r>>>=1;e[t]=r}return e}(),update:function(e,t,r,n){for(var s=0;s<n;s++)e=Ji.crc.table[255&(e^t[r+s])]^e>>>8;return e},crc:function(e,t,r){return 4294967295^Ji.crc.update(4294967295,e,t,r)}},Ji.quantize=function(e,t){for(var r=new Uint8Array(e),n=r.slice(0),s=new Uint32Array(n.buffer),i=Ji.quantize.getKDtree(n,t),o=i[0],A=i[1],a=(Ji.quantize.planeDst,r),l=s,c=a.length,u=new Uint8Array(r.length>>2),d=0;d<c;d+=4){var h=a[d]*(1/255),f=a[d+1]*(1/255),g=a[d+2]*(1/255),p=a[d+3]*(1/255),m=Ji.quantize.getNearest(o,h,f,g,p);u[d>>2]=m.ind,l[d>>2]=m.est.rgba}return{abuf:n.buffer,inds:u,plte:A}},Ji.quantize.getKDtree=function(e,t,r){null==r&&(r=1e-4);var n=new Uint32Array(e.buffer),s={i0:0,i1:e.length,bst:null,est:null,tdst:0,left:null,right:null};s.bst=Ji.quantize.stats(e,s.i0,s.i1),s.est=Ji.quantize.estats(s.bst);for(var i=[s];i.length<t;){for(var o=0,A=0,a=0;a<i.length;a++)i[a].est.L>o&&(o=i[a].est.L,A=a);if(o<r)break;var l=i[A],c=Ji.quantize.splitPixels(e,n,l.i0,l.i1,l.est.e,l.est.eMq255);if(l.i0>=c||l.i1<=c)l.est.L=0;else{var u={i0:l.i0,i1:c,bst:null,est:null,tdst:0,left:null,right:null};u.bst=Ji.quantize.stats(e,u.i0,u.i1),u.est=Ji.quantize.estats(u.bst);var d={i0:c,i1:l.i1,bst:null,est:null,tdst:0,left:null,right:null};d.bst={R:[],m:[],N:l.bst.N-u.bst.N};for(a=0;a<16;a++)d.bst.R[a]=l.bst.R[a]-u.bst.R[a];for(a=0;a<4;a++)d.bst.m[a]=l.bst.m[a]-u.bst.m[a];d.est=Ji.quantize.estats(d.bst),l.left=u,l.right=d,i[A]=u,i.push(d)}}i.sort((function(e,t){return t.bst.N-e.bst.N}));for(a=0;a<i.length;a++)i[a].ind=a;return[s,i]},Ji.quantize.getNearest=function(e,t,r,n,s){if(null==e.left)return e.tdst=Ji.quantize.dist(e.est.q,t,r,n,s),e;var i=Ji.quantize.planeDst(e.est,t,r,n,s),o=e.left,A=e.right;i>0&&(o=e.right,A=e.left);var a=Ji.quantize.getNearest(o,t,r,n,s);if(a.tdst<=i*i)return a;var l=Ji.quantize.getNearest(A,t,r,n,s);return l.tdst<a.tdst?l:a},Ji.quantize.planeDst=function(e,t,r,n,s){var i=e.e;return i[0]*t+i[1]*r+i[2]*n+i[3]*s-e.eMq},Ji.quantize.dist=function(e,t,r,n,s){var i=t-e[0],o=r-e[1],A=n-e[2],a=s-e[3];return i*i+o*o+A*A+a*a},Ji.quantize.splitPixels=function(e,t,r,n,s,i){var o=Ji.quantize.vecDot;n-=4;for(;r<n;){for(;o(e,r,s)<=i;)r+=4;for(;o(e,n,s)>i;)n-=4;if(r>=n)break;var A=t[r>>2];t[r>>2]=t[n>>2],t[n>>2]=A,r+=4,n-=4}for(;o(e,r,s)>i;)r-=4;return r+4},Ji.quantize.vecDot=function(e,t,r){return e[t]*r[0]+e[t+1]*r[1]+e[t+2]*r[2]+e[t+3]*r[3]},Ji.quantize.stats=function(e,t,r){for(var n=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],s=[0,0,0,0],i=r-t>>2,o=t;o<r;o+=4){var A=e[o]*(1/255),a=e[o+1]*(1/255),l=e[o+2]*(1/255),c=e[o+3]*(1/255);s[0]+=A,s[1]+=a,s[2]+=l,s[3]+=c,n[0]+=A*A,n[1]+=A*a,n[2]+=A*l,n[3]+=A*c,n[5]+=a*a,n[6]+=a*l,n[7]+=a*c,n[10]+=l*l,n[11]+=l*c,n[15]+=c*c}return n[4]=n[1],n[8]=n[2],n[9]=n[6],n[12]=n[3],n[13]=n[7],n[14]=n[11],{R:n,m:s,N:i}},Ji.quantize.estats=function(e){var t=e.R,r=e.m,n=e.N,s=r[0],i=r[1],o=r[2],A=r[3],a=0==n?0:1/n,l=[t[0]-s*s*a,t[1]-s*i*a,t[2]-s*o*a,t[3]-s*A*a,t[4]-i*s*a,t[5]-i*i*a,t[6]-i*o*a,t[7]-i*A*a,t[8]-o*s*a,t[9]-o*i*a,t[10]-o*o*a,t[11]-o*A*a,t[12]-A*s*a,t[13]-A*i*a,t[14]-A*o*a,t[15]-A*A*a],c=l,u=Ji.M4,d=[.5,.5,.5,.5],h=0,f=0;if(0!=n)for(var g=0;g<10&&(d=u.multVec(c,d),f=Math.sqrt(u.dot(d,d)),d=u.sml(1/f,d),!(Math.abs(f-h)<1e-9));g++)h=f;var p=[s*a,i*a,o*a,A*a];return{Cov:l,q:p,e:d,L:h,eMq255:u.dot(u.sml(255,p),d),eMq:u.dot(d,p),rgba:(Math.round(255*p[3])<<24|Math.round(255*p[2])<<16|Math.round(255*p[1])<<8|Math.round(255*p[0]))>>>0}},Ji.M4={multVec:function(e,t){return[e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3],e[4]*t[0]+e[5]*t[1]+e[6]*t[2]+e[7]*t[3],e[8]*t[0]+e[9]*t[1]+e[10]*t[2]+e[11]*t[3],e[12]*t[0]+e[13]*t[1]+e[14]*t[2]+e[15]*t[3]]},dot:function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]},sml:function(e,t){return[e*t[0],e*t[1],e*t[2],e*t[3]]}},Ji.encode.concatRGBA=function(e){for(var t=0,r=0;r<e.length;r++)t+=e[r].byteLength;var n=new Uint8Array(t),s=0;for(r=0;r<e.length;r++){for(var i=new Uint8Array(e[r]),o=i.length,A=0;A<o;A+=4){var a=i[A],l=i[A+1],c=i[A+2],u=i[A+3];0==u&&(a=l=c=0),n[s+A]=a,n[s+A+1]=l,n[s+A+2]=c,n[s+A+3]=u}s+=o}return n.buffer};const _i=Ji;var $i;!function(e){e.Greyscale="Greyscale",e.Truecolour="Truecolour",e.IndexedColour="IndexedColour",e.GreyscaleWithAlpha="GreyscaleWithAlpha",e.TruecolourWithAlpha="TruecolourWithAlpha"}($i||($i={}));class eo{constructor(e){const t=_i.decode(e),r=_i.toRGBA8(t);if(r.length>1)throw new Error("Animated PNGs are not supported");const n=new Uint8Array(r[0]),{rgbChannel:s,alphaChannel:i}=(e=>{const t=Math.floor(e.length/4),r=new Uint8Array(3*t),n=new Uint8Array(1*t);let s=0,i=0,o=0;for(;s<e.length;)r[i++]=e[s++],r[i++]=e[s++],r[i++]=e[s++],n[o++]=e[s++];return{rgbChannel:r,alphaChannel:n}})(n);this.rgbChannel=s;i.some((e=>e<255))&&(this.alphaChannel=i),this.type=(e=>{if(0===e)return $i.Greyscale;if(2===e)return $i.Truecolour;if(3===e)return $i.IndexedColour;if(4===e)return $i.GreyscaleWithAlpha;if(6===e)return $i.TruecolourWithAlpha;throw new Error(`Unknown color type: ${e}`)})(t.ctype),this.width=t.width,this.height=t.height,this.bitsPerComponent=8}}eo.load=e=>new eo(e);class to{constructor(e){this.image=e,this.bitsPerComponent=e.bitsPerComponent,this.width=e.width,this.height=e.height,this.colorSpace="DeviceRGB"}static async for(e){const t=eo.load(e);return new to(t)}async embedIntoContext(e,t){const r=this.embedAlphaChannel(e),n=e.flateStream(this.image.rgbChannel,{Type:"XObject",Subtype:"Image",BitsPerComponent:this.image.bitsPerComponent,Width:this.image.width,Height:this.image.height,ColorSpace:this.colorSpace,SMask:r});return t?(e.assign(t,n),t):e.register(n)}embedAlphaChannel(e){if(!this.image.alphaChannel)return;const t=e.flateStream(this.image.alphaChannel,{Type:"XObject",Subtype:"Image",Height:this.image.height,Width:this.image.width,BitsPerComponent:this.image.bitsPerComponent,ColorSpace:"DeviceGray",Decode:[0,1]});return e.register(t)}}const ro=to;class no{constructor(e,t,r){this.bytes=e,this.start=t||0,this.pos=this.start,this.end=t&&r?t+r:this.bytes.length}get length(){return this.end-this.start}get isEmpty(){return 0===this.length}getByte(){return this.pos>=this.end?-1:this.bytes[this.pos++]}getUint16(){const e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t}getInt32(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()}getBytes(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const r=this.bytes,n=this.pos,s=this.end;if(e){let i=n+e;i>s&&(i=s),this.pos=i;const o=r.subarray(n,i);return t?new Uint8ClampedArray(o):o}{const e=r.subarray(n,s);return t?new Uint8ClampedArray(e):e}}peekByte(){const e=this.getByte();return this.pos--,e}peekBytes(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const r=this.getBytes(e,t);return this.pos-=r.length,r}skip(e){e||(e=1),this.pos+=e}reset(){this.pos=this.start}moveStart(){this.start=this.pos}makeSubStream(e,t){return new no(this.bytes,e,t)}decode(){return this.bytes}}const so=no,io=new Uint8Array(0);const oo=class{constructor(e){if(this.pos=0,this.bufferLength=0,this.eof=!1,this.buffer=io,this.minBufferLength=512,e)for(;this.minBufferLength<e;)this.minBufferLength*=2}get isEmpty(){for(;!this.eof&&0===this.bufferLength;)this.readBlock();return 0===this.bufferLength}getByte(){const e=this.pos;for(;this.bufferLength<=e;){if(this.eof)return-1;this.readBlock()}return this.buffer[this.pos++]}getUint16(){const e=this.getByte(),t=this.getByte();return-1===e||-1===t?-1:(e<<8)+t}getInt32(){return(this.getByte()<<24)+(this.getByte()<<16)+(this.getByte()<<8)+this.getByte()}getBytes(e){let t,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=this.pos;if(e){for(this.ensureBuffer(n+e),t=n+e;!this.eof&&this.bufferLength<t;)this.readBlock();const r=this.bufferLength;t>r&&(t=r)}else{for(;!this.eof;)this.readBlock();t=this.bufferLength}this.pos=t;const s=this.buffer.subarray(n,t);return!r||s instanceof Uint8ClampedArray?s:new Uint8ClampedArray(s)}peekByte(){const e=this.getByte();return this.pos--,e}peekBytes(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const r=this.getBytes(e,t);return this.pos-=r.length,r}skip(e){e||(e=1),this.pos+=e}reset(){this.pos=0}makeSubStream(e,t){const r=e+t;for(;this.bufferLength<=r&&!this.eof;)this.readBlock();return new so(this.buffer,e,t)}decode(){for(;!this.eof;)this.readBlock();return this.buffer.subarray(0,this.bufferLength)}readBlock(){throw new Vn(this.constructor.name,"readBlock")}ensureBuffer(e){const t=this.buffer;if(e<=t.byteLength)return t;let r=this.minBufferLength;for(;r<e;)r*=2;const n=new Uint8Array(r);return n.set(t),this.buffer=n}},Ao=e=>32===e||9===e||13===e||10===e;const ao=class extends oo{constructor(e,t){super(t),this.stream=e,this.input=new Uint8Array(5),t&&(t*=.8)}readBlock(){const e=this.stream;let t=e.getByte();for(;Ao(t);)t=e.getByte();if(-1===t||126===t)return void(this.eof=!0);const r=this.bufferLength;let n,s;if(122===t){for(n=this.ensureBuffer(r+4),s=0;s<4;++s)n[r+s]=0;this.bufferLength+=4}else{const i=this.input;for(i[0]=t,s=1;s<5;++s){for(t=e.getByte();Ao(t);)t=e.getByte();if(i[s]=t,-1===t||126===t)break}if(n=this.ensureBuffer(r+s-1),this.bufferLength+=s-1,s<5){for(;s<5;++s)i[s]=117;this.eof=!0}let o=0;for(s=0;s<5;++s)o=85*o+(i[s]-33);for(s=3;s>=0;--s)n[r+s]=255&o,o>>=8}}};const lo=class extends oo{constructor(e,t){super(t),this.stream=e,this.firstDigit=-1,t&&(t*=.5)}readBlock(){const e=this.stream.getBytes(8e3);if(!e.length)return void(this.eof=!0);const t=e.length+1>>1,r=this.ensureBuffer(this.bufferLength+t);let n=this.bufferLength,s=this.firstDigit;for(let i=0,o=e.length;i<o;i++){const t=e[i];let o;if(t>=48&&t<=57)o=15&t;else{if(!(t>=65&&t<=70||t>=97&&t<=102)){if(62===t){this.eof=!0;break}continue}o=9+(15&t)}s<0?s=o:(r[n++]=s<<4|o,s=-1)}s>=0&&this.eof&&(r[n++]=s<<4,s=-1),this.firstDigit=s,this.bufferLength=n}},co=new Int32Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),uo=new Int32Array([3,4,5,6,7,8,9,10,65547,65549,65551,65553,131091,131095,131099,131103,196643,196651,196659,196667,262211,262227,262243,262259,327811,327843,327875,327907,258,258,258]),ho=new Int32Array([1,2,3,4,65541,65543,131081,131085,196625,196633,262177,262193,327745,327777,393345,393409,459009,459137,524801,525057,590849,591361,657409,658433,724993,727041,794625,798721,868353,876545]),fo=[new Int32Array([459008,524368,524304,524568,459024,524400,524336,590016,459016,524384,524320,589984,524288,524416,524352,590048,459012,524376,524312,589968,459028,524408,524344,590032,459020,524392,524328,59e4,524296,524424,524360,590064,459010,524372,524308,524572,459026,524404,524340,590024,459018,524388,524324,589992,524292,524420,524356,590056,459014,524380,524316,589976,459030,524412,524348,590040,459022,524396,524332,590008,524300,524428,524364,590072,459009,524370,524306,524570,459025,524402,524338,590020,459017,524386,524322,589988,524290,524418,524354,590052,459013,524378,524314,589972,459029,524410,524346,590036,459021,524394,524330,590004,524298,524426,524362,590068,459011,524374,524310,524574,459027,524406,524342,590028,459019,524390,524326,589996,524294,524422,524358,590060,459015,524382,524318,589980,459031,524414,524350,590044,459023,524398,524334,590012,524302,524430,524366,590076,459008,524369,524305,524569,459024,524401,524337,590018,459016,524385,524321,589986,524289,524417,524353,590050,459012,524377,524313,589970,459028,524409,524345,590034,459020,524393,524329,590002,524297,524425,524361,590066,459010,524373,524309,524573,459026,524405,524341,590026,459018,524389,524325,589994,524293,524421,524357,590058,459014,524381,524317,589978,459030,524413,524349,590042,459022,524397,524333,590010,524301,524429,524365,590074,459009,524371,524307,524571,459025,524403,524339,590022,459017,524387,524323,589990,524291,524419,524355,590054,459013,524379,524315,589974,459029,524411,524347,590038,459021,524395,524331,590006,524299,524427,524363,590070,459011,524375,524311,524575,459027,524407,524343,590030,459019,524391,524327,589998,524295,524423,524359,590062,459015,524383,524319,589982,459031,524415,524351,590046,459023,524399,524335,590014,524303,524431,524367,590078,459008,524368,524304,524568,459024,524400,524336,590017,459016,524384,524320,589985,524288,524416,524352,590049,459012,524376,524312,589969,459028,524408,524344,590033,459020,524392,524328,590001,524296,524424,524360,590065,459010,524372,524308,524572,459026,524404,524340,590025,459018,524388,524324,589993,524292,524420,524356,590057,459014,524380,524316,589977,459030,524412,524348,590041,459022,524396,524332,590009,524300,524428,524364,590073,459009,524370,524306,524570,459025,524402,524338,590021,459017,524386,524322,589989,524290,524418,524354,590053,459013,524378,524314,589973,459029,524410,524346,590037,459021,524394,524330,590005,524298,524426,524362,590069,459011,524374,524310,524574,459027,524406,524342,590029,459019,524390,524326,589997,524294,524422,524358,590061,459015,524382,524318,589981,459031,524414,524350,590045,459023,524398,524334,590013,524302,524430,524366,590077,459008,524369,524305,524569,459024,524401,524337,590019,459016,524385,524321,589987,524289,524417,524353,590051,459012,524377,524313,589971,459028,524409,524345,590035,459020,524393,524329,590003,524297,524425,524361,590067,459010,524373,524309,524573,459026,524405,524341,590027,459018,524389,524325,589995,524293,524421,524357,590059,459014,524381,524317,589979,459030,524413,524349,590043,459022,524397,524333,590011,524301,524429,524365,590075,459009,524371,524307,524571,459025,524403,524339,590023,459017,524387,524323,589991,524291,524419,524355,590055,459013,524379,524315,589975,459029,524411,524347,590039,459021,524395,524331,590007,524299,524427,524363,590071,459011,524375,524311,524575,459027,524407,524343,590031,459019,524391,524327,589999,524295,524423,524359,590063,459015,524383,524319,589983,459031,524415,524351,590047,459023,524399,524335,590015,524303,524431,524367,590079]),9],go=[new Int32Array([327680,327696,327688,327704,327684,327700,327692,327708,327682,327698,327690,327706,327686,327702,327694,0,327681,327697,327689,327705,327685,327701,327693,327709,327683,327699,327691,327707,327687,327703,327695,0]),5];const po=class extends oo{constructor(e,t){super(t),this.stream=e;const r=e.getByte(),n=e.getByte();if(-1===r||-1===n)throw new Error(`Invalid header in flate stream: ${r}, ${n}`);if(8!==(15&r))throw new Error(`Unknown compression method in flate stream: ${r}, ${n}`);if(((r<<8)+n)%31!==0)throw new Error(`Bad FCHECK in flate stream: ${r}, ${n}`);if(32&n)throw new Error(`FDICT bit set in flate stream: ${r}, ${n}`);this.codeSize=0,this.codeBuf=0}readBlock(){let e,t;const r=this.stream;let n,s,i=this.getBits(3);if(1&i&&(this.eof=!0),i>>=1,0===i){let t;if(-1===(t=r.getByte()))throw new Error("Bad block header in flate stream");let n=t;if(-1===(t=r.getByte()))throw new Error("Bad block header in flate stream");if(n|=t<<8,-1===(t=r.getByte()))throw new Error("Bad block header in flate stream");let s=t;if(-1===(t=r.getByte()))throw new Error("Bad block header in flate stream");if(s|=t<<8,s!==(65535&~n)&&(0!==n||0!==s))throw new Error("Bad uncompressed block length in flate stream");this.codeBuf=0,this.codeSize=0;const i=this.bufferLength;e=this.ensureBuffer(i+n);const o=i+n;if(this.bufferLength=o,0===n)-1===r.peekByte()&&(this.eof=!0);else for(let A=i;A<o;++A){if(-1===(t=r.getByte())){this.eof=!0;break}e[A]=t}return}if(1===i)n=fo,s=go;else{if(2!==i)throw new Error("Unknown block type in flate stream");{const e=this.getBits(5)+257,r=this.getBits(5)+1,i=this.getBits(4)+4,o=new Uint8Array(co.length);let A;for(A=0;A<i;++A)o[co[A]]=this.getBits(3);const a=this.generateHuffmanTable(o);t=0,A=0;const l=e+r,c=new Uint8Array(l);let u,d,h;for(;A<l;){const e=this.getCode(a);if(16===e)u=2,d=3,h=t;else if(17===e)u=3,d=3,h=t=0;else{if(18!==e){c[A++]=t=e;continue}u=7,d=11,h=t=0}let r=this.getBits(u)+d;for(;r-- >0;)c[A++]=h}n=this.generateHuffmanTable(c.subarray(0,e)),s=this.generateHuffmanTable(c.subarray(e,l))}}e=this.buffer;let o=e?e.length:0,A=this.bufferLength;for(;;){let r=this.getCode(n);if(r<256){A+1>=o&&(e=this.ensureBuffer(A+1),o=e.length),e[A++]=r;continue}if(256===r)return void(this.bufferLength=A);r-=257,r=uo[r];let i=r>>16;i>0&&(i=this.getBits(i)),t=(65535&r)+i,r=this.getCode(s),r=ho[r],i=r>>16,i>0&&(i=this.getBits(i));const a=(65535&r)+i;A+t>=o&&(e=this.ensureBuffer(A+t),o=e.length);for(let n=0;n<t;++n,++A)e[A]=e[A-a]}}getBits(e){const t=this.stream;let r,n=this.codeSize,s=this.codeBuf;for(;n<e;){if(-1===(r=t.getByte()))throw new Error("Bad encoding in flate stream");s|=r<<n,n+=8}return r=s&(1<<e)-1,this.codeBuf=s>>e,this.codeSize=n-=e,r}getCode(e){const t=this.stream,r=e[0],n=e[1];let s,i=this.codeSize,o=this.codeBuf;for(;i<n&&-1!==(s=t.getByte());)o|=s<<i,i+=8;const A=r[o&(1<<n)-1];"number"===typeof r&&console.log("FLATE:",A);const a=A>>16,l=65535&A;if(a<1||i<a)throw new Error("Bad encoding in flate stream");return this.codeBuf=o>>a,this.codeSize=i-a,l}generateHuffmanTable(e){const t=e.length;let r,n=0;for(r=0;r<t;++r)e[r]>n&&(n=e[r]);const s=1<<n,i=new Int32Array(s);for(let o=1,A=0,a=2;o<=n;++o,A<<=1,a<<=1)for(let n=0;n<t;++n)if(e[n]===o){let e=0,t=A;for(r=0;r<o;++r)e=e<<1|1&t,t>>=1;for(r=e;r<s;r+=a)i[r]=o<<16|n;++A}return[i,n]}};const mo=class extends oo{constructor(e,t,r){super(t),this.stream=e,this.cachedData=0,this.bitsCached=0;const n=4096,s={earlyChange:r,codeLength:9,nextCode:258,dictionaryValues:new Uint8Array(n),dictionaryLengths:new Uint16Array(n),dictionaryPrevCodes:new Uint16Array(n),currentSequence:new Uint8Array(n),currentSequenceLength:0};for(let i=0;i<256;++i)s.dictionaryValues[i]=i,s.dictionaryLengths[i]=1;this.lzwState=s}readBlock(){let e=1024;let t,r,n;const s=this.lzwState;if(!s)return;const i=s.earlyChange;let o=s.nextCode;const A=s.dictionaryValues,a=s.dictionaryLengths,l=s.dictionaryPrevCodes;let c=s.codeLength,u=s.prevCode;const d=s.currentSequence;let h=s.currentSequenceLength,f=0,g=this.bufferLength,p=this.ensureBuffer(this.bufferLength+e);for(t=0;t<512;t++){const t=this.readBits(c),s=h>0;if(!t||t<256)d[0]=t,h=1;else{if(!(t>=258)){if(256===t){c=9,o=258,h=0;continue}this.eof=!0,delete this.lzwState;break}if(t<o)for(h=a[t],r=h-1,n=t;r>=0;r--)d[r]=A[n],n=l[n];else d[h++]=d[0]}if(s&&(l[o]=u,a[o]=a[u]+1,A[o]=d[0],o++,c=o+i&o+i-1?c:0|Math.min(Math.log(o+i)/.6931471805599453+1,12)),u=t,f+=h,e<f){do{e+=512}while(e<f);p=this.ensureBuffer(this.bufferLength+e)}for(r=0;r<h;r++)p[g++]=d[r]}s.nextCode=o,s.codeLength=c,s.prevCode=u,s.currentSequenceLength=h,this.bufferLength=g}readBits(e){let t=this.bitsCached,r=this.cachedData;for(;t<e;){const e=this.stream.getByte();if(-1===e)return this.eof=!0,null;r=r<<8|e,t+=8}return this.bitsCached=t-=e,this.cachedData=r,r>>>t&(1<<e)-1}};const wo=class extends oo{constructor(e,t){super(t),this.stream=e}readBlock(){const e=this.stream.getBytes(2);if(!e||e.length<2||128===e[0])return void(this.eof=!0);let t,r=this.bufferLength,n=e[0];if(n<128){if(t=this.ensureBuffer(r+n+1),t[r++]=e[1],n>0){const e=this.stream.getBytes(n);t.set(e,r),r+=n}}else{n=257-n;const s=e[1];t=this.ensureBuffer(r+n+1);for(let e=0;e<n;e++)t[r++]=s}this.bufferLength=r}},vo=(e,t,r)=>{if(t===js.of("FlateDecode"))return new po(e);if(t===js.of("LZWDecode")){let t=1;if(r instanceof Os){const e=r.lookup(js.of("EarlyChange"));e instanceof Ds&&(t=e.asNumber())}return new mo(e,void 0,t)}if(t===js.of("ASCII85Decode"))return new ao(e);if(t===js.of("ASCIIHexDecode"))return new lo(e);if(t===js.of("RunLengthDecode"))return new wo(e);throw new Kn(t.asString())},bo=e=>{let{dict:t,contents:r,transform:n}=e,s=new so(r);n&&(s=n.createStream(s,r.length));const i=t.lookup(js.of("Filter")),o=t.lookup(js.of("DecodeParms"));if(i instanceof js)s=vo(s,i,o);else if(i instanceof Ps)for(let A=0,a=i.size();A<a;A++)s=vo(s,i.lookup(A,js),o&&o.lookupMaybe(A,Os));else if(i)throw new Zn([js,Ps],i);return s};class yo{constructor(e,t,r){this.page=e;const n=null!==t&&void 0!==t?t:(e=>{const t=e.MediaBox();return{left:0,bottom:0,right:t.lookup(2,Ds).asNumber()-t.lookup(0,Ds).asNumber(),top:t.lookup(3,Ds).asNumber()-t.lookup(1,Ds).asNumber()}})(e);this.width=n.right-n.left,this.height=n.top-n.bottom,this.boundingBox=n,this.transformationMatrix=null!==r&&void 0!==r?r:(e=>[1,0,0,1,-e.left,-e.bottom])(n)}static async for(e,t,r){return new yo(e,t,r)}async embedIntoContext(e,t){const{Contents:r,Resources:n}=this.page.normalizedEntries();if(!r)throw new $n;const s=this.decodeContents(r),{left:i,bottom:o,right:A,top:a}=this.boundingBox,l=e.flateStream(s,{Type:"XObject",Subtype:"Form",FormType:1,BBox:[i,o,A,a],Matrix:this.transformationMatrix,Resources:n});return t?(e.assign(t,l),t):e.register(l)}decodeContents(e){const t=Uint8Array.of(Bs.Newline),r=[];for(let n=0,s=e.size();n<s;n++){const s=e.lookup(n,zs);let i;if(s instanceof Hs)i=bo(s).decode();else{if(!(s instanceof ri))throw new es(s);i=s.getUnencodedContents()}r.push(i,t)}return Dr(...r)}}const Bo=yo,Eo=(e,t)=>{if(void 0!==e)return t[e]};var Co,xo,Io,Do;!function(e){e.UseNone="UseNone",e.UseOutlines="UseOutlines",e.UseThumbs="UseThumbs",e.UseOC="UseOC"}(Co||(Co={})),function(e){e.L2R="L2R",e.R2L="R2L"}(xo||(xo={})),function(e){e.None="None",e.AppDefault="AppDefault"}(Io||(Io={})),function(e){e.Simplex="Simplex",e.DuplexFlipShortEdge="DuplexFlipShortEdge",e.DuplexFlipLongEdge="DuplexFlipLongEdge"}(Do||(Do={}));class Qo{constructor(e){this.dict=e}lookupBool(e){const t=this.dict.lookup(js.of(e));if(t instanceof Ms)return t}lookupName(e){const t=this.dict.lookup(js.of(e));if(t instanceof js)return t}HideToolbar(){return this.lookupBool("HideToolbar")}HideMenubar(){return this.lookupBool("HideMenubar")}HideWindowUI(){return this.lookupBool("HideWindowUI")}FitWindow(){return this.lookupBool("FitWindow")}CenterWindow(){return this.lookupBool("CenterWindow")}DisplayDocTitle(){return this.lookupBool("DisplayDocTitle")}NonFullScreenPageMode(){return this.lookupName("NonFullScreenPageMode")}Direction(){return this.lookupName("Direction")}PrintScaling(){return this.lookupName("PrintScaling")}Duplex(){return this.lookupName("Duplex")}PickTrayByPDFSize(){return this.lookupBool("PickTrayByPDFSize")}PrintPageRange(){const e=this.dict.lookup(js.of("PrintPageRange"));if(e instanceof Ps)return e}NumCopies(){const e=this.dict.lookup(js.of("NumCopies"));if(e instanceof Ds)return e}getHideToolbar(){var e,t;return null!==(t=null===(e=this.HideToolbar())||void 0===e?void 0:e.asBoolean())&&void 0!==t&&t}getHideMenubar(){var e,t;return null!==(t=null===(e=this.HideMenubar())||void 0===e?void 0:e.asBoolean())&&void 0!==t&&t}getHideWindowUI(){var e,t;return null!==(t=null===(e=this.HideWindowUI())||void 0===e?void 0:e.asBoolean())&&void 0!==t&&t}getFitWindow(){var e,t;return null!==(t=null===(e=this.FitWindow())||void 0===e?void 0:e.asBoolean())&&void 0!==t&&t}getCenterWindow(){var e,t;return null!==(t=null===(e=this.CenterWindow())||void 0===e?void 0:e.asBoolean())&&void 0!==t&&t}getDisplayDocTitle(){var e,t;return null!==(t=null===(e=this.DisplayDocTitle())||void 0===e?void 0:e.asBoolean())&&void 0!==t&&t}getNonFullScreenPageMode(){var e,t;const r=null===(e=this.NonFullScreenPageMode())||void 0===e?void 0:e.decodeText();return null!==(t=Eo(r,Co))&&void 0!==t?t:Co.UseNone}getReadingDirection(){var e,t;const r=null===(e=this.Direction())||void 0===e?void 0:e.decodeText();return null!==(t=Eo(r,xo))&&void 0!==t?t:xo.L2R}getPrintScaling(){var e,t;const r=null===(e=this.PrintScaling())||void 0===e?void 0:e.decodeText();return null!==(t=Eo(r,Io))&&void 0!==t?t:Io.AppDefault}getDuplex(){var e;const t=null===(e=this.Duplex())||void 0===e?void 0:e.decodeText();return Eo(t,Do)}getPickTrayByPDFSize(){var e;return null===(e=this.PickTrayByPDFSize())||void 0===e?void 0:e.asBoolean()}getPrintPageRange(){const e=this.PrintPageRange();if(!e)return[];const t=[];for(let r=0;r<e.size();r+=2){const n=e.lookup(r,Ds).asNumber(),s=e.lookup(r+1,Ds).asNumber();t.push({start:n,end:s})}return t}getNumCopies(){var e,t;return null!==(t=null===(e=this.NumCopies())||void 0===e?void 0:e.asNumber())&&void 0!==t?t:1}setHideToolbar(e){const t=this.dict.context.obj(e);this.dict.set(js.of("HideToolbar"),t)}setHideMenubar(e){const t=this.dict.context.obj(e);this.dict.set(js.of("HideMenubar"),t)}setHideWindowUI(e){const t=this.dict.context.obj(e);this.dict.set(js.of("HideWindowUI"),t)}setFitWindow(e){const t=this.dict.context.obj(e);this.dict.set(js.of("FitWindow"),t)}setCenterWindow(e){const t=this.dict.context.obj(e);this.dict.set(js.of("CenterWindow"),t)}setDisplayDocTitle(e){const t=this.dict.context.obj(e);this.dict.set(js.of("DisplayDocTitle"),t)}setNonFullScreenPageMode(e){Pn(e,"nonFullScreenPageMode",Co);const t=js.of(e);this.dict.set(js.of("NonFullScreenPageMode"),t)}setReadingDirection(e){Pn(e,"readingDirection",xo);const t=js.of(e);this.dict.set(js.of("Direction"),t)}setPrintScaling(e){Pn(e,"printScaling",Io);const t=js.of(e);this.dict.set(js.of("PrintScaling"),t)}setDuplex(e){Pn(e,"duplex",Do);const t=js.of(e);this.dict.set(js.of("Duplex"),t)}setPickTrayByPDFSize(e){const t=this.dict.context.obj(e);this.dict.set(js.of("PickTrayByPDFSize"),t)}setPrintPageRange(e){Array.isArray(e)||(e=[e]);const t=[];for(let n=0,s=e.length;n<s;n++)t.push(e[n].start),t.push(e[n].end);Tn(t,"printPageRange",["number"]);const r=this.dict.context.obj(t);this.dict.set(js.of("PrintPageRange"),r)}setNumCopies(e){Wn(e,"numCopies",1,Number.MAX_VALUE),Xn(e,"numCopies");const t=this.dict.context.obj(e);this.dict.set(js.of("NumCopies"),t)}}Qo.fromDict=e=>new Qo(e),Qo.create=e=>{const t=e.obj({});return new Qo(t)};const Po=Qo,Fo=/\/([^\0\t\n\f\r\ ]+)[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]+Tf/;class Lo{constructor(e,t){this.dict=e,this.ref=t}T(){return this.dict.lookupMaybe(js.of("T"),Wi,Pi)}Ff(){const e=this.getInheritableAttribute(js.of("Ff"));return this.dict.context.lookupMaybe(e,Ds)}V(){const e=this.getInheritableAttribute(js.of("V"));return this.dict.context.lookup(e)}Kids(){return this.dict.lookupMaybe(js.of("Kids"),Ps)}DA(){const e=this.dict.lookup(js.of("DA"));if(e instanceof Wi||e instanceof Pi)return e}setKids(e){this.dict.set(js.of("Kids"),this.dict.context.obj(e))}getParent(){const e=this.dict.get(js.of("Parent"));if(e instanceof Zs){const t=this.dict.lookup(js.of("Parent"),Os);return new Lo(t,e)}}setParent(e){e?this.dict.set(js.of("Parent"),e):this.dict.delete(js.of("Parent"))}getFullyQualifiedName(){const e=this.getParent();return e?`${e.getFullyQualifiedName()}.${this.getPartialName()}`:this.getPartialName()}getPartialName(){var e;return null===(e=this.T())||void 0===e?void 0:e.decodeText()}setPartialName(e){e?this.dict.set(js.of("T"),Pi.fromText(e)):this.dict.delete(js.of("T"))}setDefaultAppearance(e){this.dict.set(js.of("DA"),Wi.of(e))}getDefaultAppearance(){const e=this.DA();return e instanceof Pi?e.decodeText():null===e||void 0===e?void 0:e.asString()}setFontSize(e){var t;const r=null!==(t=this.getFullyQualifiedName())&&void 0!==t?t:"",n=this.getDefaultAppearance();if(!n)throw new ls(r);const s=Cr(n,Fo);if(!s.match)throw new cs(r);const i=n.slice(0,s.pos-s.match[0].length),o=s.pos<=n.length?n.slice(s.pos):"",A=`${i} /${s.match[1]} ${e} Tf ${o}`;this.setDefaultAppearance(A)}getFlags(){var e,t;return null!==(t=null===(e=this.Ff())||void 0===e?void 0:e.asNumber())&&void 0!==t?t:0}setFlags(e){this.dict.set(js.of("Ff"),Ds.of(e))}hasFlag(e){return 0!==(this.getFlags()&e)}setFlag(e){const t=this.getFlags();this.setFlags(t|e)}clearFlag(e){const t=this.getFlags();this.setFlags(t&~e)}setFlagTo(e,t){t?this.setFlag(e):this.clearFlag(e)}getInheritableAttribute(e){let t;return this.ascend((r=>{t||(t=r.dict.get(e))})),t}ascend(e){e(this);const t=this.getParent();t&&t.ascend(e)}}const Mo=Lo;class So{constructor(e){this.dict=e}W(){const e=this.dict.lookup(js.of("W"));if(e instanceof Ds)return e}getWidth(){var e,t;return null!==(t=null===(e=this.W())||void 0===e?void 0:e.asNumber())&&void 0!==t?t:1}setWidth(e){const t=this.dict.context.obj(e);this.dict.set(js.of("W"),t)}}So.fromDict=e=>new So(e);const No=So;class ko{constructor(e){this.dict=e}Rect(){return this.dict.lookup(js.of("Rect"),Ps)}AP(){return this.dict.lookupMaybe(js.of("AP"),Os)}F(){const e=this.dict.lookup(js.of("F"));return this.dict.context.lookupMaybe(e,Ds)}getRectangle(){var e;const t=this.Rect();return null!==(e=null===t||void 0===t?void 0:t.asRectangle())&&void 0!==e?e:{x:0,y:0,width:0,height:0}}setRectangle(e){const{x:t,y:r,width:n,height:s}=e,i=this.dict.context.obj([t,r,t+n,r+s]);this.dict.set(js.of("Rect"),i)}getAppearanceState(){const e=this.dict.lookup(js.of("AS"));if(e instanceof js)return e}setAppearanceState(e){this.dict.set(js.of("AS"),e)}setAppearances(e){this.dict.set(js.of("AP"),e)}ensureAP(){let e=this.AP();return e||(e=this.dict.context.obj({}),this.dict.set(js.of("AP"),e)),e}getNormalAppearance(){const e=this.ensureAP().get(js.of("N"));if(e instanceof Zs||e instanceof Os)return e;throw new Error(`Unexpected N type: ${null===e||void 0===e?void 0:e.constructor.name}`)}setNormalAppearance(e){this.ensureAP().set(js.of("N"),e)}setRolloverAppearance(e){this.ensureAP().set(js.of("R"),e)}setDownAppearance(e){this.ensureAP().set(js.of("D"),e)}removeRolloverAppearance(){const e=this.AP();null===e||void 0===e||e.delete(js.of("R"))}removeDownAppearance(){const e=this.AP();null===e||void 0===e||e.delete(js.of("D"))}getAppearances(){const e=this.AP();if(!e)return;return{normal:e.lookup(js.of("N"),Os,zs),rollover:e.lookupMaybe(js.of("R"),Os,zs),down:e.lookupMaybe(js.of("D"),Os,zs)}}getFlags(){var e,t;return null!==(t=null===(e=this.F())||void 0===e?void 0:e.asNumber())&&void 0!==t?t:0}setFlags(e){this.dict.set(js.of("F"),Ds.of(e))}hasFlag(e){return 0!==(this.getFlags()&e)}setFlag(e){const t=this.getFlags();this.setFlags(t|e)}clearFlag(e){const t=this.getFlags();this.setFlags(t&~e)}setFlagTo(e,t){t?this.setFlag(e):this.clearFlag(e)}}ko.fromDict=e=>new ko(e);const Ro=ko;class To{constructor(e){this.dict=e}R(){const e=this.dict.lookup(js.of("R"));if(e instanceof Ds)return e}BC(){const e=this.dict.lookup(js.of("BC"));if(e instanceof Ps)return e}BG(){const e=this.dict.lookup(js.of("BG"));if(e instanceof Ps)return e}CA(){const e=this.dict.lookup(js.of("CA"));if(e instanceof Pi||e instanceof Wi)return e}RC(){const e=this.dict.lookup(js.of("RC"));if(e instanceof Pi||e instanceof Wi)return e}AC(){const e=this.dict.lookup(js.of("AC"));if(e instanceof Pi||e instanceof Wi)return e}getRotation(){var e;return null===(e=this.R())||void 0===e?void 0:e.asNumber()}getBorderColor(){const e=this.BC();if(!e)return;const t=[];for(let r=0,n=null===e||void 0===e?void 0:e.size();r<n;r++){const n=e.get(r);n instanceof Ds&&t.push(n.asNumber())}return t}getBackgroundColor(){const e=this.BG();if(!e)return;const t=[];for(let r=0,n=null===e||void 0===e?void 0:e.size();r<n;r++){const n=e.get(r);n instanceof Ds&&t.push(n.asNumber())}return t}getCaptions(){const e=this.CA(),t=this.RC(),r=this.AC();return{normal:null===e||void 0===e?void 0:e.decodeText(),rollover:null===t||void 0===t?void 0:t.decodeText(),down:null===r||void 0===r?void 0:r.decodeText()}}setRotation(e){const t=this.dict.context.obj(e);this.dict.set(js.of("R"),t)}setBorderColor(e){const t=this.dict.context.obj(e);this.dict.set(js.of("BC"),t)}setBackgroundColor(e){const t=this.dict.context.obj(e);this.dict.set(js.of("BG"),t)}setCaptions(e){const t=Pi.fromText(e.normal);if(this.dict.set(js.of("CA"),t),e.rollover){const t=Pi.fromText(e.rollover);this.dict.set(js.of("RC"),t)}else this.dict.delete(js.of("RC"));if(e.down){const t=Pi.fromText(e.down);this.dict.set(js.of("AC"),t)}else this.dict.delete(js.of("AC"))}}To.fromDict=e=>new To(e);const Wo=To;class jo extends Ro{MK(){const e=this.dict.lookup(js.of("MK"));if(e instanceof Os)return e}BS(){const e=this.dict.lookup(js.of("BS"));if(e instanceof Os)return e}DA(){const e=this.dict.lookup(js.of("DA"));if(e instanceof Wi||e instanceof Pi)return e}P(){const e=this.dict.get(js.of("P"));if(e instanceof Zs)return e}setP(e){this.dict.set(js.of("P"),e)}setDefaultAppearance(e){this.dict.set(js.of("DA"),Wi.of(e))}getDefaultAppearance(){const e=this.DA();return e instanceof Pi?e.decodeText():null===e||void 0===e?void 0:e.asString()}getAppearanceCharacteristics(){const e=this.MK();if(e)return Wo.fromDict(e)}getOrCreateAppearanceCharacteristics(){const e=this.MK();if(e)return Wo.fromDict(e);const t=Wo.fromDict(this.dict.context.obj({}));return this.dict.set(js.of("MK"),t.dict),t}getBorderStyle(){const e=this.BS();if(e)return No.fromDict(e)}getOrCreateBorderStyle(){const e=this.BS();if(e)return No.fromDict(e);const t=No.fromDict(this.dict.context.obj({}));return this.dict.set(js.of("BS"),t.dict),t}getOnValue(){var e;const t=null===(e=this.getAppearances())||void 0===e?void 0:e.normal;if(t instanceof Os){const e=t.keys();for(let t=0,r=e.length;t<r;t++){const r=e[t];if(r!==js.of("Off"))return r}}}}jo.fromDict=e=>new jo(e),jo.create=(e,t)=>{const r=e.obj({Type:"Annot",Subtype:"Widget",Rect:[0,0,0,0],Parent:t});return new jo(r)};const Go=jo;class Xo extends Mo{FT(){const e=this.getInheritableAttribute(js.of("FT"));return this.dict.context.lookup(e,js)}getWidgets(){const e=this.Kids();if(!e)return[Go.fromDict(this.dict)];const t=new Array(e.size());for(let r=0,n=e.size();r<n;r++){const n=e.lookup(r,Os);t[r]=Go.fromDict(n)}return t}addWidget(e){const{Kids:t}=this.normalizedEntries();t.push(e)}removeWidget(e){const t=this.Kids();if(t){if(e<0||e>t.size())throw new os(e,0,t.size());t.remove(e)}else{if(0!==e)throw new os(e,0,0);this.setKids([])}}normalizedEntries(){let e=this.Kids();return e||(e=this.dict.context.obj([this.ref]),this.dict.set(js.of("Kids"),e)),{Kids:e}}}Xo.fromDict=(e,t)=>new Xo(e,t);const Oo=Xo;const zo=class extends Oo{Opt(){return this.dict.lookupMaybe(js.of("Opt"),Wi,Pi,Ps)}setOpt(e){this.dict.set(js.of("Opt"),this.dict.context.obj(e))}getExportValues(){const e=this.Opt();if(!e)return;if(e instanceof Wi||e instanceof Pi)return[e];const t=[];for(let r=0,n=e.size();r<n;r++){const n=e.lookup(r);(n instanceof Wi||n instanceof Pi)&&t.push(n)}return t}removeExportValue(e){const t=this.Opt();if(t)if(t instanceof Wi||t instanceof Pi){if(0!==e)throw new os(e,0,0);this.setOpt([])}else{if(e<0||e>t.size())throw new os(e,0,t.size());t.remove(e)}}normalizeExportValues(){var e,t,r,n;const s=null!==(e=this.getExportValues())&&void 0!==e?e:[],i=[],o=this.getWidgets();for(let A=0,a=o.length;A<a;A++){const e=o[A],a=null!==(t=s[A])&&void 0!==t?t:Pi.fromText(null!==(n=null===(r=e.getOnValue())||void 0===r?void 0:r.decodeText())&&void 0!==n?n:"");i.push(a)}this.setOpt(i)}addOpt(e,t){var r;this.normalizeExportValues();const n=e.decodeText();let s;if(t){const e=null!==(r=this.getExportValues())&&void 0!==r?r:[];for(let t=0,r=e.length;t<r;t++){e[t].decodeText()===n&&(s=t)}}const i=this.Opt();return i.push(e),null!==s&&void 0!==s?s:i.size()-1}addWidgetWithOpt(e,t,r){const n=this.addOpt(t,r),s=js.of(String(n));return this.addWidget(e),s}};class Yo extends zo{setValue(e){var t;if(e!==(null!==(t=this.getOnValue())&&void 0!==t?t:js.of("Yes"))&&e!==js.of("Off"))throw new As;this.dict.set(js.of("V"),e);const r=this.getWidgets();for(let n=0,s=r.length;n<s;n++){const t=r[n],s=t.getOnValue()===e?e:js.of("Off");t.setAppearanceState(s)}}getValue(){const e=this.V();return e instanceof js?e:js.of("Off")}getOnValue(){const[e]=this.getWidgets();return null===e||void 0===e?void 0:e.getOnValue()}}Yo.fromDict=(e,t)=>new Yo(e,t),Yo.create=e=>{const t=e.obj({FT:"Btn",Kids:[]}),r=e.register(t);return new Yo(t,r)};const Ho=Yo,Uo=e=>1<<e;var Vo,qo,Zo,Ko;!function(e){e[e.ReadOnly=Uo(0)]="ReadOnly",e[e.Required=Uo(1)]="Required",e[e.NoExport=Uo(2)]="NoExport"}(Vo||(Vo={})),function(e){e[e.NoToggleToOff=Uo(14)]="NoToggleToOff",e[e.Radio=Uo(15)]="Radio",e[e.PushButton=Uo(16)]="PushButton",e[e.RadiosInUnison=Uo(25)]="RadiosInUnison"}(qo||(qo={})),function(e){e[e.Multiline=Uo(12)]="Multiline",e[e.Password=Uo(13)]="Password",e[e.FileSelect=Uo(20)]="FileSelect",e[e.DoNotSpellCheck=Uo(22)]="DoNotSpellCheck",e[e.DoNotScroll=Uo(23)]="DoNotScroll",e[e.Comb=Uo(24)]="Comb",e[e.RichText=Uo(25)]="RichText"}(Zo||(Zo={})),function(e){e[e.Combo=Uo(17)]="Combo",e[e.Edit=Uo(18)]="Edit",e[e.Sort=Uo(19)]="Sort",e[e.MultiSelect=Uo(21)]="MultiSelect",e[e.DoNotSpellCheck=Uo(22)]="DoNotSpellCheck",e[e.CommitOnSelChange=Uo(26)]="CommitOnSelChange"}(Ko||(Ko={}));const Jo=class extends Oo{setValues(e){if(this.hasFlag(Ko.Combo)&&!this.hasFlag(Ko.Edit)&&!this.valuesAreValid(e))throw new As;if(0===e.length&&this.dict.delete(js.of("V")),1===e.length&&this.dict.set(js.of("V"),e[0]),e.length>1){if(!this.hasFlag(Ko.MultiSelect))throw new as;this.dict.set(js.of("V"),this.dict.context.obj(e))}this.updateSelectedIndices(e)}valuesAreValid(e){const t=this.getOptions();for(let r=0,n=e.length;r<n;r++){const n=e[r].decodeText();if(!t.find((e=>n===(e.display||e.value).decodeText())))return!1}return!0}updateSelectedIndices(e){if(e.length>1){const t=new Array(e.length),r=this.getOptions();for(let n=0,s=e.length;n<s;n++){const s=e[n].decodeText();t[n]=r.findIndex((e=>s===(e.display||e.value).decodeText()))}this.dict.set(js.of("I"),this.dict.context.obj(t.sort()))}else this.dict.delete(js.of("I"))}getValues(){const e=this.V();if(e instanceof Wi||e instanceof Pi)return[e];if(e instanceof Ps){const t=[];for(let r=0,n=e.size();r<n;r++){const n=e.lookup(r);(n instanceof Wi||n instanceof Pi)&&t.push(n)}return t}return[]}Opt(){return this.dict.lookupMaybe(js.of("Opt"),Wi,Pi,Ps)}setOptions(e){const t=new Array(e.length);for(let r=0,n=e.length;r<n;r++){const{value:n,display:s}=e[r];t[r]=this.dict.context.obj([n,s||n])}this.dict.set(js.of("Opt"),this.dict.context.obj(t))}getOptions(){const e=this.Opt();if(e instanceof Wi||e instanceof Pi)return[{value:e,display:e}];if(e instanceof Ps){const t=[];for(let r=0,n=e.size();r<n;r++){const n=e.lookup(r);if((n instanceof Wi||n instanceof Pi)&&t.push({value:n,display:n}),n instanceof Ps&&n.size()>0){const e=n.lookup(0,Wi,Pi),r=n.lookupMaybe(1,Wi,Pi);t.push({value:e,display:r||e})}}return t}return[]}};class _o extends Jo{}_o.fromDict=(e,t)=>new _o(e,t),_o.create=e=>{const t=e.obj({FT:"Ch",Ff:Ko.Combo,Kids:[]}),r=e.register(t);return new _o(t,r)};const $o=_o;class eA extends Mo{addField(e){const{Kids:t}=this.normalizedEntries();null===t||void 0===t||t.push(e)}normalizedEntries(){let e=this.Kids();return e||(e=this.dict.context.obj([]),this.dict.set(js.of("Kids"),e)),{Kids:e}}}eA.fromDict=(e,t)=>new eA(e,t),eA.create=e=>{const t=e.obj({}),r=e.register(t);return new eA(t,r)};const tA=eA;class rA extends Oo{}rA.fromDict=(e,t)=>new rA(e,t);const nA=rA;class sA extends Oo{MaxLen(){const e=this.dict.lookup(js.of("MaxLen"));if(e instanceof Ds)return e}Q(){const e=this.dict.lookup(js.of("Q"));if(e instanceof Ds)return e}setMaxLength(e){this.dict.set(js.of("MaxLen"),Ds.of(e))}removeMaxLength(){this.dict.delete(js.of("MaxLen"))}getMaxLength(){var e;return null===(e=this.MaxLen())||void 0===e?void 0:e.asNumber()}setQuadding(e){this.dict.set(js.of("Q"),Ds.of(e))}getQuadding(){var e;return null===(e=this.Q())||void 0===e?void 0:e.asNumber()}setValue(e){this.dict.set(js.of("V"),e)}removeValue(){this.dict.delete(js.of("V"))}getValue(){const e=this.V();if(e instanceof Wi||e instanceof Pi)return e}}sA.fromDict=(e,t)=>new sA(e,t),sA.create=e=>{const t=e.obj({FT:"Tx",Kids:[]}),r=e.register(t);return new sA(t,r)};const iA=sA;class oA extends zo{}oA.fromDict=(e,t)=>new oA(e,t),oA.create=e=>{const t=e.obj({FT:"Btn",Ff:qo.PushButton,Kids:[]}),r=e.register(t);return new oA(t,r)};const AA=oA;class aA extends zo{setValue(e){if(!this.getOnValues().includes(e)&&e!==js.of("Off"))throw new As;this.dict.set(js.of("V"),e);const t=this.getWidgets();for(let r=0,n=t.length;r<n;r++){const n=t[r],s=n.getOnValue()===e?e:js.of("Off");n.setAppearanceState(s)}}getValue(){const e=this.V();return e instanceof js?e:js.of("Off")}getOnValues(){const e=this.getWidgets(),t=[];for(let r=0,n=e.length;r<n;r++){const n=e[r].getOnValue();n&&t.push(n)}return t}}aA.fromDict=(e,t)=>new aA(e,t),aA.create=e=>{const t=e.obj({FT:"Btn",Ff:qo.Radio,Kids:[]}),r=e.register(t);return new aA(t,r)};const lA=aA;class cA extends Jo{}cA.fromDict=(e,t)=>new cA(e,t),cA.create=e=>{const t=e.obj({FT:"Ch",Kids:[]}),r=e.register(t);return new cA(t,r)};const uA=cA,dA=e=>{if(!e)return[];const t=[];for(let r=0,n=e.size();r<n;r++){const n=e.get(r),s=e.lookup(r);n instanceof Zs&&s instanceof Os&&t.push([hA(s,n),n])}return t},hA=(e,t)=>fA(e)?tA.fromDict(e,t):gA(e,t),fA=e=>{const t=e.lookup(js.of("Kids"));if(t instanceof Ps)for(let r=0,n=t.size();r<n;r++){const e=t.lookup(r);if(e instanceof Os&&e.has(js.of("T")))return!0}return!1},gA=(e,t)=>{const r=vA(e,js.of("FT")),n=e.context.lookup(r,js);return n===js.of("Btn")?pA(e,t):n===js.of("Ch")?mA(e,t):n===js.of("Tx")?iA.fromDict(e,t):n===js.of("Sig")?nA.fromDict(e,t):Oo.fromDict(e,t)},pA=(e,t)=>{var r;const n=vA(e,js.of("Ff")),s=e.context.lookupMaybe(n,Ds),i=null!==(r=null===s||void 0===s?void 0:s.asNumber())&&void 0!==r?r:0;return wA(i,qo.PushButton)?AA.fromDict(e,t):wA(i,qo.Radio)?lA.fromDict(e,t):Ho.fromDict(e,t)},mA=(e,t)=>{var r;const n=vA(e,js.of("Ff")),s=e.context.lookupMaybe(n,Ds),i=null!==(r=null===s||void 0===s?void 0:s.asNumber())&&void 0!==r?r:0;return wA(i,Ko.Combo)?$o.fromDict(e,t):uA.fromDict(e,t)},wA=(e,t)=>0!==(e&t),vA=(e,t)=>{let r;return bA(e,(e=>{r||(r=e.get(t))})),r},bA=(e,t)=>{t(e);const r=e.lookupMaybe(js.of("Parent"),Os);r&&bA(r,t)};class yA{constructor(e){this.dict=e}Fields(){const e=this.dict.lookup(js.of("Fields"));if(e instanceof Ps)return e}getFields(){const{Fields:e}=this.normalizedEntries(),t=new Array(e.size());for(let r=0,n=e.size();r<n;r++){const n=e.get(r),s=e.lookup(r,Os);t[r]=[hA(s,n),n]}return t}getAllFields(){const e=[],t=r=>{if(r)for(let n=0,s=r.length;n<s;n++){const s=r[n];e.push(s);const[i]=s;i instanceof tA&&t(dA(i.Kids()))}};return t(this.getFields()),e}addField(e){const{Fields:t}=this.normalizedEntries();null===t||void 0===t||t.push(e)}removeField(e){const t=e.getParent(),r=void 0===t?this.normalizedEntries().Fields:t.Kids(),n=null===r||void 0===r?void 0:r.indexOf(e.ref);if(void 0===r||void 0===n)throw new Error(`Tried to remove inexistent field ${e.getFullyQualifiedName()}`);r.remove(n),void 0!==t&&0===r.size()&&this.removeField(t)}normalizedEntries(){let e=this.Fields();return e||(e=this.dict.context.obj([]),this.dict.set(js.of("Fields"),e)),{Fields:e}}}yA.fromDict=e=>new yA(e),yA.create=e=>{const t=e.obj({Fields:[]});return new yA(t)};const BA=yA;class EA extends Os{Pages(){return this.lookup(js.of("Pages"),Os)}AcroForm(){return this.lookupMaybe(js.of("AcroForm"),Os)}getAcroForm(){const e=this.AcroForm();if(e)return BA.fromDict(e)}getOrCreateAcroForm(){let e=this.getAcroForm();if(!e){e=BA.create(this.context);const t=this.context.register(e.dict);this.set(js.of("AcroForm"),t)}return e}ViewerPreferences(){return this.lookupMaybe(js.of("ViewerPreferences"),Os)}getViewerPreferences(){const e=this.ViewerPreferences();if(e)return Po.fromDict(e)}getOrCreateViewerPreferences(){let e=this.getViewerPreferences();if(!e){e=Po.create(this.context);const t=this.context.register(e.dict);this.set(js.of("ViewerPreferences"),t)}return e}insertLeafNode(e,t){const r=this.get(js.of("Pages"));return this.Pages().insertLeafNode(e,t)||r}removeLeafNode(e){this.Pages().removeLeafNode(e)}}EA.withContextAndPages=(e,t)=>{const r=new Map;return r.set(js.of("Type"),js.of("Catalog")),r.set(js.of("Pages"),t),new EA(r,e)},EA.fromMapWithContext=(e,t)=>new EA(e,t);const CA=EA;class xA extends Os{Parent(){return this.lookup(js.of("Parent"))}Kids(){return this.lookup(js.of("Kids"),Ps)}Count(){return this.lookup(js.of("Count"),Ds)}pushTreeNode(e){this.Kids().push(e)}pushLeafNode(e){const t=this.Kids();this.insertLeafKid(t.size(),e)}insertLeafNode(e,t){const r=this.Kids(),n=this.Count().asNumber();if(t>n)throw new ss(t,n);let s=t;for(let i=0,o=r.size();i<o;i++){if(0===s)return void this.insertLeafKid(i,e);const t=r.get(i),n=this.context.lookup(t);if(n instanceof xA){if(n.Count().asNumber()>s)return n.insertLeafNode(e,s)||t;s-=n.Count().asNumber()}n instanceof ai&&(s-=1)}if(0!==s)throw new is(t,"insertLeafNode");this.insertLeafKid(r.size(),e)}removeLeafNode(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const r=this.Kids(),n=this.Count().asNumber();if(e>=n)throw new ss(e,n);let s=e;for(let i=0,o=r.size();i<o;i++){const e=r.get(i),n=this.context.lookup(e);if(n instanceof xA){if(n.Count().asNumber()>s)return n.removeLeafNode(s,t),void(t&&0===n.Kids().size()&&r.remove(i));s-=n.Count().asNumber()}if(n instanceof ai){if(0===s)return void this.removeKid(i);s-=1}}throw new is(e,"removeLeafNode")}ascend(e){e(this);const t=this.Parent();t&&t.ascend(e)}traverse(e){const t=this.Kids();for(let r=0,n=t.size();r<n;r++){const n=t.get(r),s=this.context.lookup(n);s instanceof xA&&s.traverse(e),e(s,n)}}insertLeafKid(e,t){const r=this.Kids();this.ascend((e=>{const t=e.Count().asNumber()+1;e.set(js.of("Count"),Ds.of(t))})),r.insert(e,t)}removeKid(e){const t=this.Kids();t.lookup(e)instanceof ai&&this.ascend((e=>{const t=e.Count().asNumber()-1;e.set(js.of("Count"),Ds.of(t))})),t.remove(e)}}xA.withContext=(e,t)=>{const r=new Map;return r.set(js.of("Type"),js.of("Pages")),r.set(js.of("Kids"),e.obj([])),r.set(js.of("Count"),e.obj(0)),t&&r.set(js.of("Parent"),t),new xA(r,e)},xA.fromMapWithContext=(e,t)=>new xA(e,t);const IA=xA,DA=new Uint8Array(256);DA[Bs.Zero]=1,DA[Bs.One]=1,DA[Bs.Two]=1,DA[Bs.Three]=1,DA[Bs.Four]=1,DA[Bs.Five]=1,DA[Bs.Six]=1,DA[Bs.Seven]=1,DA[Bs.Eight]=1,DA[Bs.Nine]=1;const QA=new Uint8Array(256);QA[Bs.Period]=1,QA[Bs.Plus]=1,QA[Bs.Minus]=1;const PA=new Uint8Array(256);for(let r=0,$M=256;r<$M;r++)PA[r]=DA[r]||QA[r]?1:0;const{Newline:FA,CarriageReturn:LA}=Bs;const MA=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.bytes=e,this.capNumbers=t}parseRawInt(){let e="";for(;!this.bytes.done();){const t=this.bytes.peek();if(!DA[t])break;e+=or(this.bytes.next())}const t=Number(e);if(!e||!isFinite(t))throw new us(this.bytes.position(),e);return t}parseRawNumber(){let e="";for(;!this.bytes.done();){const t=this.bytes.peek();if(!PA[t])break;if(e+=or(this.bytes.next()),t===Bs.Period)break}for(;!this.bytes.done();){const t=this.bytes.peek();if(!DA[t])break;e+=or(this.bytes.next())}const t=Number(e);if(!e||!isFinite(t))throw new us(this.bytes.position(),e);if(t>Number.MAX_SAFE_INTEGER){if(this.capNumbers){const t=`Parsed number that is too large for some PDF readers: ${e}, using Number.MAX_SAFE_INTEGER instead.`;return console.warn(t),Number.MAX_SAFE_INTEGER}{const t=`Parsed number that is too large for some PDF readers: ${e}, not capping.`;console.warn(t)}}return t}skipWhitespace(){for(;!this.bytes.done()&&Ns[this.bytes.peek()];)this.bytes.next()}skipLine(){for(;!this.bytes.done();){const e=this.bytes.peek();if(e===FA||e===LA)return;this.bytes.next()}}skipComment(){if(this.bytes.peek()!==Bs.Percent)return!1;for(;!this.bytes.done();){const e=this.bytes.peek();if(e===FA||e===LA)return!0;this.bytes.next()}return!0}skipWhitespaceAndComments(){for(this.skipWhitespace();this.skipComment();)this.skipWhitespace()}matchKeyword(e){const t=this.bytes.offset();for(let r=0,n=e.length;r<n;r++)if(this.bytes.done()||this.bytes.next()!==e[r])return this.bytes.moveTo(t),!1;return!0}};class SA{constructor(e){this.idx=0,this.line=0,this.column=0,this.bytes=e,this.length=this.bytes.length}moveTo(e){this.idx=e}next(){const e=this.bytes[this.idx++];return e===Bs.Newline?(this.line+=1,this.column=0):this.column+=1,e}assertNext(e){if(this.peek()!==e)throw new hs(this.position(),e,this.peek());return this.next()}peek(){return this.bytes[this.idx]}peekAhead(e){return this.bytes[this.idx+e]}peekAt(e){return this.bytes[e]}done(){return this.idx>=this.length}offset(){return this.idx}slice(e,t){return this.bytes.slice(e,t)}position(){return{line:this.line,column:this.column,offset:this.idx}}}SA.of=e=>new SA(e),SA.fromPDFRawStream=e=>SA.of(bo(e).decode());const NA=SA,{Space:kA,CarriageReturn:RA,Newline:TA}=Bs,WA=[Bs.s,Bs.t,Bs.r,Bs.e,Bs.a,Bs.m],jA=[Bs.e,Bs.n,Bs.d,Bs.s,Bs.t,Bs.r,Bs.e,Bs.a,Bs.m],GA={header:[Bs.Percent,Bs.P,Bs.D,Bs.F,Bs.Dash],eof:[Bs.Percent,Bs.Percent,Bs.E,Bs.O,Bs.F],obj:[Bs.o,Bs.b,Bs.j],endobj:[Bs.e,Bs.n,Bs.d,Bs.o,Bs.b,Bs.j],xref:[Bs.x,Bs.r,Bs.e,Bs.f],trailer:[Bs.t,Bs.r,Bs.a,Bs.i,Bs.l,Bs.e,Bs.r],startxref:[Bs.s,Bs.t,Bs.a,Bs.r,Bs.t,Bs.x,Bs.r,Bs.e,Bs.f],true:[Bs.t,Bs.r,Bs.u,Bs.e],false:[Bs.f,Bs.a,Bs.l,Bs.s,Bs.e],null:[Bs.n,Bs.u,Bs.l,Bs.l],stream:WA,streamEOF1:[...WA,kA,RA,TA],streamEOF2:[...WA,RA,TA],streamEOF3:[...WA,RA],streamEOF4:[...WA,TA],endstream:jA,EOF1endstream:[RA,TA,...jA],EOF2endstream:[RA,...jA],EOF3endstream:[TA,...jA]};class XA extends MA{constructor(e,t){let r=arguments.length>3?arguments[3]:void 0;super(e,arguments.length>2&&void 0!==arguments[2]&&arguments[2]),this.context=t,this.cryptoFactory=r}parseObject(e){if(this.skipWhitespaceAndComments(),this.matchKeyword(GA.true))return Ms.True;if(this.matchKeyword(GA.false))return Ms.False;if(this.matchKeyword(GA.null))return Gs;const t=this.bytes.peek();if(t===Bs.LessThan&&this.bytes.peekAhead(1)===Bs.LessThan)return this.parseDictOrStream(e);if(t===Bs.LessThan)return this.parseHexString(e);if(t===Bs.LeftParen)return this.parseString(e);if(t===Bs.ForwardSlash)return this.parseName();if(t===Bs.LeftSquareBracket)return this.parseArray(e);if(PA[t])return this.parseNumberOrRef();throw new fs(this.bytes.position(),t)}parseNumberOrRef(){const e=this.parseRawNumber();this.skipWhitespaceAndComments();const t=this.bytes.offset();if(DA[this.bytes.peek()]){const t=this.parseRawNumber();if(this.skipWhitespaceAndComments(),this.bytes.peek()===Bs.R)return this.bytes.assertNext(Bs.R),Zs.of(e,t)}return this.bytes.moveTo(t),Ds.of(e)}parseHexString(e){let t="";for(this.bytes.assertNext(Bs.LessThan);!this.bytes.done()&&this.bytes.peek()!==Bs.GreaterThan;)t+=or(this.bytes.next());if(this.bytes.assertNext(Bs.GreaterThan),this.cryptoFactory&&e){t=this.cryptoFactory.createCipherTransform(e.objectNumber,e.generationNumber).decryptBytes(Pi.of(t).asBytes()).reduce(((e,t)=>e+t.toString(16).padStart(2,"0")),"")}return Pi.of(t)}parseString(e){let t=0,r=!1,n="";for(;!this.bytes.done();){const s=this.bytes.next();if(n+=or(s),r||(s===Bs.LeftParen&&(t+=1),s===Bs.RightParen&&(t-=1)),s===Bs.BackSlash?r=!r:r&&(r=!1),0===t){let t=n.substring(1,n.length-1);if(this.cryptoFactory&&e){t=this.cryptoFactory.createCipherTransform(e.objectNumber,e.generationNumber).decryptString(t)}return Wi.of(t)}}throw new ms(this.bytes.position())}parseName(){this.bytes.assertNext(Bs.ForwardSlash);let e="";for(;!this.bytes.done();){const t=this.bytes.peek();if(Ns[t]||Ss[t])break;e+=or(t),this.bytes.next()}return js.of(e)}parseArray(e){this.bytes.assertNext(Bs.LeftSquareBracket),this.skipWhitespaceAndComments();const t=Ps.withContext(this.context);for(;this.bytes.peek()!==Bs.RightSquareBracket;){const r=this.parseObject(e);t.push(r),this.skipWhitespaceAndComments()}return this.bytes.assertNext(Bs.RightSquareBracket),t}parseDict(e){this.bytes.assertNext(Bs.LessThan),this.bytes.assertNext(Bs.LessThan),this.skipWhitespaceAndComments();const t=new Map;for(;!this.bytes.done()&&this.bytes.peek()!==Bs.GreaterThan&&this.bytes.peekAhead(1)!==Bs.GreaterThan;){const r=this.parseName(),n=this.parseObject(e);t.set(r,n),this.skipWhitespaceAndComments()}this.skipWhitespaceAndComments(),this.bytes.assertNext(Bs.GreaterThan),this.bytes.assertNext(Bs.GreaterThan);const r=t.get(js.of("Type"));return r===js.of("Catalog")?CA.fromMapWithContext(t,this.context):r===js.of("Pages")?IA.fromMapWithContext(t,this.context):r===js.of("Page")?ai.fromMapWithContext(t,this.context):Os.fromMapWithContext(t,this.context)}parseDictOrStream(e){const t=this.bytes.position(),r=this.parseDict(e);if(this.skipWhitespaceAndComments(),!this.matchKeyword(GA.streamEOF1)&&!this.matchKeyword(GA.streamEOF2)&&!this.matchKeyword(GA.streamEOF3)&&!this.matchKeyword(GA.streamEOF4)&&!this.matchKeyword(GA.stream))return r;const n=this.bytes.offset();let s;const i=r.get(js.of("Length"));i instanceof Ds?(s=n+i.asNumber(),this.bytes.moveTo(s),this.skipWhitespaceAndComments(),this.matchKeyword(GA.endstream)||(this.bytes.moveTo(n),s=this.findEndOfStreamFallback(t))):s=this.findEndOfStreamFallback(t);let o=this.bytes.slice(n,s);if(this.cryptoFactory&&e){o=this.cryptoFactory.createCipherTransform(e.objectNumber,e.generationNumber).decryptBytes(o)}return Hs.of(r,o)}findEndOfStreamFallback(e){let t=1,r=this.bytes.offset();for(;!this.bytes.done()&&(r=this.bytes.offset(),this.matchKeyword(GA.stream)?t+=1:this.matchKeyword(GA.EOF1endstream)||this.matchKeyword(GA.EOF2endstream)||this.matchKeyword(GA.EOF3endstream)||this.matchKeyword(GA.endstream)?t-=1:this.bytes.next(),0!==t););if(0!==t)throw new ps(e);return r}}XA.forBytes=(e,t,r)=>new XA(NA.of(e),t,r),XA.forByteStream=function(e,t){return new XA(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])};const OA=XA;class zA extends OA{constructor(e,t){super(NA.fromPDFRawStream(e),e.dict.context);const{dict:r}=e;this.alreadyParsed=!1,this.shouldWaitForTick=t||(()=>!1),this.firstOffset=r.lookup(js.of("First"),Ds).asNumber(),this.objectCount=r.lookup(js.of("N"),Ds).asNumber()}async parseIntoContext(){if(this.alreadyParsed)throw new Jn("PDFObjectStreamParser","parseIntoContext");this.alreadyParsed=!0;const e=this.parseOffsetsAndObjectNumbers();for(let t=0,r=e.length;t<r;t++){const{objectNumber:r,offset:n}=e[t];this.bytes.moveTo(this.firstOffset+n);const s=Zs.of(r,0),i=this.parseObject(s);this.context.assign(s,i),this.shouldWaitForTick()&&await jr()}}parseOffsetsAndObjectNumbers(){const e=[];for(let t=0,r=this.objectCount;t<r;t++){this.skipWhitespaceAndComments();const t=this.parseRawInt();this.skipWhitespaceAndComments();const r=this.parseRawInt();e.push({objectNumber:t,offset:r})}return e}}zA.forStream=(e,t)=>new zA(e,t);const YA=zA;class HA{constructor(e){this.alreadyParsed=!1,this.dict=e.dict,this.bytes=NA.fromPDFRawStream(e),this.context=this.dict.context;const t=this.dict.lookup(js.of("Size"),Ds),r=this.dict.lookup(js.of("Index"));if(r instanceof Ps){this.subsections=[];for(let e=0,t=r.size();e<t;e+=2){const t=r.lookup(e+0,Ds).asNumber(),n=r.lookup(e+1,Ds).asNumber();this.subsections.push({firstObjectNumber:t,length:n})}}else this.subsections=[{firstObjectNumber:0,length:t.asNumber()}];const n=this.dict.lookup(js.of("W"),Ps);this.byteWidths=[-1,-1,-1];for(let s=0,i=n.size();s<i;s++)this.byteWidths[s]=n.lookup(s,Ds).asNumber()}parseIntoContext(){if(this.alreadyParsed)throw new Jn("PDFXRefStreamParser","parseIntoContext");this.alreadyParsed=!0,this.context.trailerInfo={Root:this.dict.get(js.of("Root")),Encrypt:this.dict.get(js.of("Encrypt")),Info:this.dict.get(js.of("Info")),ID:this.dict.get(js.of("ID"))};return this.parseEntries()}parseEntries(){const e=[],[t,r,n]=this.byteWidths;for(let s=0,i=this.subsections.length;s<i;s++){const{firstObjectNumber:i,length:o}=this.subsections[s];for(let s=0;s<o;s++){let o=0;for(let e=0,r=t;e<r;e++)o=o<<8|this.bytes.next();let A=0;for(let e=0,t=r;e<t;e++)A=A<<8|this.bytes.next();let a=0;for(let e=0,t=n;e<t;e++)a=a<<8|this.bytes.next();0===t&&(o=1);const l=i+s,c={ref:Zs.of(l,a),offset:A,deleted:0===o,inObjectStream:2===o};e.push(c)}}return e}}HA.forStream=e=>new HA(e);const UA=HA;class VA extends OA{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4?arguments[4]:void 0;super(NA.of(e),oi.create(),n,s),this.alreadyParsed=!1,this.parsedObjects=0,this.shouldWaitForTick=()=>(this.parsedObjects+=1,this.parsedObjects%this.objectsPerTick===0),this.objectsPerTick=t,this.throwOnInvalidObject=r,this.context.isDecrypted=!!(null===s||void 0===s?void 0:s.encryptionKey)}async parseDocument(){if(this.alreadyParsed)throw new Jn("PDFParser","parseDocument");let e;for(this.alreadyParsed=!0,this.context.header=this.parseHeader();!this.bytes.done();){await this.parseDocumentSection();const t=this.bytes.offset();if(t===e)throw new ws(this.bytes.position());e=t}return this.maybeRecoverRoot(),this.context.lookup(Zs.of(0))&&(console.warn("Removing parsed object: 0 0 R"),this.context.delete(Zs.of(0))),this.context}maybeRecoverRoot(){const e=e=>e instanceof Os&&e.lookup(js.of("Type"))===js.of("Catalog");if(!e(this.context.lookup(this.context.trailerInfo.Root))){const t=this.context.enumerateIndirectObjects();for(let r=0,n=t.length;r<n;r++){const[n,s]=t[r];e(s)&&(this.context.trailerInfo.Root=n)}}}parseHeader(){for(;!this.bytes.done();){if(this.matchKeyword(GA.header)){const e=this.parseRawInt();this.bytes.assertNext(Bs.Period);const t=this.parseRawInt(),r=Cs.forVersion(e,t);return this.skipBinaryHeaderComment(),r}this.bytes.next()}throw new vs(this.bytes.position())}parseIndirectObjectHeader(){this.skipWhitespaceAndComments();const e=this.parseRawInt();this.skipWhitespaceAndComments();const t=this.parseRawInt();if(this.skipWhitespaceAndComments(),!this.matchKeyword(GA.obj))throw new bs(this.bytes.position(),GA.obj);return Zs.of(e,t)}matchIndirectObjectHeader(){const e=this.bytes.offset();try{return this.parseIndirectObjectHeader(),!0}catch(JM){return this.bytes.moveTo(e),!1}}async parseIndirectObject(){const e=this.parseIndirectObjectHeader();this.skipWhitespaceAndComments();const t=this.parseObject(e);return this.skipWhitespaceAndComments(),this.matchKeyword(GA.endobj),t instanceof Hs&&t.dict.lookup(js.of("Type"))===js.of("ObjStm")?await YA.forStream(t,this.shouldWaitForTick).parseIntoContext():t instanceof Hs&&t.dict.lookup(js.of("Type"))===js.of("XRef")?UA.forStream(t).parseIntoContext():this.context.assign(e,t),e}tryToParseInvalidIndirectObject(){const e=this.bytes.position(),t=`Trying to parse invalid object: ${JSON.stringify(e)})`;if(this.throwOnInvalidObject)throw new Error(t);console.warn(t);const r=this.parseIndirectObjectHeader();console.warn(`Invalid object ref: ${r}`),this.skipWhitespaceAndComments();const n=this.bytes.offset();let s=!0;for(;!this.bytes.done()&&(this.matchKeyword(GA.endobj)&&(s=!1),s);)this.bytes.next();if(s)throw new gs(e);const i=this.bytes.offset()-GA.endobj.length,o=Bi.of(this.bytes.slice(n,i));return this.context.assign(r,o),r}async parseIndirectObjects(){for(this.skipWhitespaceAndComments();!this.bytes.done()&&DA[this.bytes.peek()];){const e=this.bytes.offset();try{await this.parseIndirectObject()}catch(JM){this.bytes.moveTo(e),this.tryToParseInvalidIndirectObject()}this.skipWhitespaceAndComments(),this.skipJibberish(),this.shouldWaitForTick()&&await jr()}}maybeParseCrossRefSection(){if(this.skipWhitespaceAndComments(),!this.matchKeyword(GA.xref))return;this.skipWhitespaceAndComments();let e=-1;const t=di.createEmpty();for(;!this.bytes.done()&&DA[this.bytes.peek()];){const r=this.parseRawInt();this.skipWhitespaceAndComments();const n=this.parseRawInt();this.skipWhitespaceAndComments();const s=this.bytes.peek();if(s===Bs.n||s===Bs.f){const s=Zs.of(e,n);this.bytes.next()===Bs.n?t.addEntry(s,r):t.addDeletedEntry(s,r),e+=1}else e=r;this.skipWhitespaceAndComments()}return t}maybeParseTrailerDict(){if(this.skipWhitespaceAndComments(),!this.matchKeyword(GA.trailer))return;this.skipWhitespaceAndComments();const e=this.parseDict(),{context:t}=this;t.trailerInfo={Root:e.get(js.of("Root"))||t.trailerInfo.Root,Encrypt:e.get(js.of("Encrypt"))||t.trailerInfo.Encrypt,Info:e.get(js.of("Info"))||t.trailerInfo.Info,ID:e.get(js.of("ID"))||t.trailerInfo.ID}}maybeParseTrailer(){if(this.skipWhitespaceAndComments(),!this.matchKeyword(GA.startxref))return;this.skipWhitespaceAndComments();const e=this.parseRawInt();return this.skipWhitespace(),this.matchKeyword(GA.eof),this.skipWhitespaceAndComments(),this.matchKeyword(GA.eof),this.skipWhitespaceAndComments(),fi.forLastCrossRefSectionOffset(e)}async parseDocumentSection(){await this.parseIndirectObjects(),this.maybeParseCrossRefSection(),this.maybeParseTrailerDict(),this.maybeParseTrailer(),this.skipJibberish()}skipJibberish(){for(this.skipWhitespaceAndComments();!this.bytes.done();){const e=this.bytes.offset(),t=this.bytes.peek();if(t>=Bs.Space&&t<=Bs.Tilde&&(this.matchKeyword(GA.xref)||this.matchKeyword(GA.trailer)||this.matchKeyword(GA.startxref)||this.matchIndirectObjectHeader())){this.bytes.moveTo(e);break}this.bytes.next()}}skipBinaryHeaderComment(){this.skipWhitespaceAndComments();try{const e=this.bytes.offset();this.parseIndirectObjectHeader(),this.bytes.moveTo(e)}catch(JM){this.bytes.next(),this.skipWhitespaceAndComments()}}}VA.forBytesWithOptions=(e,t,r,n,s)=>new VA(e,t,r,n,s);const qA=VA,ZA=e=>1<<e;var KA;!function(e){e[e.Invisible=ZA(0)]="Invisible",e[e.Hidden=ZA(1)]="Hidden",e[e.Print=ZA(2)]="Print",e[e.NoZoom=ZA(3)]="NoZoom",e[e.NoRotate=ZA(4)]="NoRotate",e[e.NoView=ZA(5)]="NoView",e[e.ReadOnly=ZA(6)]="ReadOnly",e[e.Locked=ZA(7)]="Locked",e[e.ToggleNoView=ZA(8)]="ToggleNoView",e[e.LockedContents=ZA(9)]="LockedContents"}(KA||(KA={}));const JA=e=>e instanceof js?e:js.of(e),_A=e=>e instanceof Ds?e:Ds.of(e),$A=e=>e instanceof Ds?e.asNumber():e;var ea;!function(e){e.Degrees="degrees",e.Radians="radians"}(ea||(ea={}));const ta=e=>(kn(e,"radianAngle",["number"]),{type:ea.Radians,angle:e}),ra=e=>(kn(e,"degreeAngle",["number"]),{type:ea.Degrees,angle:e}),{Radians:na,Degrees:sa}=ea,ia=e=>e*Math.PI/180,oa=e=>180*e/Math.PI,Aa=e=>e.type===na?e.angle:e.type===sa?ia(e.angle):on(`Invalid rotation: ${JSON.stringify(e)}`),aa=e=>e.type===na?oa(e.angle):e.type===sa?e.angle:on(`Invalid rotation: ${JSON.stringify(e)}`),la=function(){const e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:0)/90%4;return 0===e?0:1===e?90:2===e?180:3===e?270:0},ca=function(e){const t=la(arguments.length>1&&void 0!==arguments[1]?arguments[1]:0);return 90===t||270===t?{width:e.height,height:e.width}:{width:e.width,height:e.height}},ua=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const{x:n,y:s,width:i,height:o}=e,A=la(r),a=t/2;return 0===A?{x:n-a,y:s-a,width:i,height:o}:90===A?{x:n-o+a,y:s-a,width:o,height:i}:180===A?{x:n-i+a,y:s-o+a,width:i,height:o}:270===A?{x:n-a,y:s-i+a,width:o,height:i}:{x:n-a,y:s-a,width:i,height:o}},da=()=>Js.of($s.ClipNonZero),ha=()=>Js.of($s.ClipEvenOdd),{cos:fa,sin:ga,tan:pa}=Math,ma=(e,t,r,n,s,i)=>Js.of($s.ConcatTransformationMatrix,[_A(e),_A(t),_A(r),_A(n),_A(s),_A(i)]),wa=(e,t)=>ma(1,0,0,1,e,t),va=(e,t)=>ma(e,0,0,t,0,0),ba=e=>ma(fa($A(e)),ga($A(e)),-ga($A(e)),fa($A(e)),0,0),ya=e=>ba(ia($A(e))),Ba=(e,t)=>ma(1,pa($A(e)),pa($A(t)),1,0,0),Ea=(e,t)=>Ba(ia($A(e)),ia($A(t))),Ca=(e,t)=>Js.of($s.SetLineDashPattern,[`[${e.map(_A).join(" ")}]`,_A(t)]),xa=()=>Ca([],0);var Ia;!function(e){e[e.Butt=0]="Butt",e[e.Round=1]="Round",e[e.Projecting=2]="Projecting"}(Ia||(Ia={}));const Da=e=>Js.of($s.SetLineCapStyle,[_A(e)]);var Qa;!function(e){e[e.Miter=0]="Miter",e[e.Round=1]="Round",e[e.Bevel=2]="Bevel"}(Qa||(Qa={}));const Pa=e=>Js.of($s.SetLineJoinStyle,[_A(e)]),Fa=e=>Js.of($s.SetGraphicsStateParams,[JA(e)]),La=()=>Js.of($s.PushGraphicsState),Ma=()=>Js.of($s.PopGraphicsState),Sa=e=>Js.of($s.SetLineWidth,[_A(e)]),Na=(e,t,r,n,s,i)=>Js.of($s.AppendBezierCurve,[_A(e),_A(t),_A(r),_A(n),_A(s),_A(i)]),ka=(e,t,r,n)=>Js.of($s.CurveToReplicateInitialPoint,[_A(e),_A(t),_A(r),_A(n)]),Ra=()=>Js.of($s.ClosePath),Ta=(e,t)=>Js.of($s.MoveTo,[_A(e),_A(t)]),Wa=(e,t)=>Js.of($s.LineTo,[_A(e),_A(t)]),ja=(e,t,r,n)=>Js.of($s.AppendRectangle,[_A(e),_A(t),_A(r),_A(n)]),Ga=(e,t,r)=>ja(e,t,r,r),Xa=()=>Js.of($s.StrokePath);var Oa;!function(e){e.NonZero="f",e.EvenOdd="f*"}(Oa||(Oa={}));const za=()=>Js.of($s.FillNonZero),Ya=()=>Js.of($s.FillEvenOdd),Ha=()=>Js.of($s.FillNonZeroAndStroke),Ua=()=>Js.of($s.EndPath),Va=()=>Js.of($s.NextLine),qa=(e,t)=>Js.of($s.MoveText,[_A(e),_A(t)]),Za=e=>Js.of($s.ShowText,[e]),Ka=()=>Js.of($s.BeginText),Ja=()=>Js.of($s.EndText),_a=(e,t)=>Js.of($s.SetFontAndSize,[JA(e),_A(t)]),$a=e=>Js.of($s.SetCharacterSpacing,[_A(e)]),el=e=>Js.of($s.SetWordSpacing,[_A(e)]),tl=e=>Js.of($s.SetTextHorizontalScaling,[_A(e)]),rl=e=>Js.of($s.SetTextLineHeight,[_A(e)]),nl=e=>Js.of($s.SetTextRise,[_A(e)]);var sl;!function(e){e[e.Fill=0]="Fill",e[e.Outline=1]="Outline",e[e.FillAndOutline=2]="FillAndOutline",e[e.Invisible=3]="Invisible",e[e.FillAndClip=4]="FillAndClip",e[e.OutlineAndClip=5]="OutlineAndClip",e[e.FillAndOutlineAndClip=6]="FillAndOutlineAndClip",e[e.Clip=7]="Clip"}(sl||(sl={}));const il=e=>Js.of($s.SetTextRenderingMode,[_A(e)]),ol=(e,t,r,n,s,i)=>Js.of($s.SetTextMatrix,[_A(e),_A(t),_A(r),_A(n),_A(s),_A(i)]),Al=(e,t,r,n,s)=>ol(fa($A(e)),ga($A(e))+pa($A(t)),-ga($A(e))+pa($A(r)),fa($A(e)),n,s),al=(e,t,r,n,s)=>Al(ia($A(e)),ia($A(t)),ia($A(r)),n,s),ll=e=>Js.of($s.DrawObject,[JA(e)]),cl=e=>Js.of($s.NonStrokingColorGray,[_A(e)]),ul=e=>Js.of($s.StrokingColorGray,[_A(e)]),dl=(e,t,r)=>Js.of($s.NonStrokingColorRgb,[_A(e),_A(t),_A(r)]),hl=(e,t,r)=>Js.of($s.StrokingColorRgb,[_A(e),_A(t),_A(r)]),fl=(e,t,r,n)=>Js.of($s.NonStrokingColorCmyk,[_A(e),_A(t),_A(r),_A(n)]),gl=(e,t,r,n)=>Js.of($s.StrokingColorCmyk,[_A(e),_A(t),_A(r),_A(n)]),pl=e=>Js.of($s.BeginMarkedContent,[JA(e)]),ml=()=>Js.of($s.EndMarkedContent);var wl,vl=r(2995);!function(e){e.Grayscale="Grayscale",e.RGB="RGB",e.CMYK="CMYK"}(wl||(wl={}));const bl=e=>(Wn(e,"gray",0,1),{type:wl.Grayscale,gray:e}),yl=(e,t,r)=>(Wn(e,"red",0,1),Wn(t,"green",0,1),Wn(r,"blue",0,1),{type:wl.RGB,red:e,green:t,blue:r}),Bl=(e,t,r,n)=>(Wn(e,"cyan",0,1),Wn(t,"magenta",0,1),Wn(r,"yellow",0,1),Wn(n,"key",0,1),{type:wl.CMYK,cyan:e,magenta:t,yellow:r,key:n}),El=e=>{kn(e,"color",["string"]);const t=vl(e).unitObject();return{rgb:yl(t.r,t.g,t.b),alpha:t.alpha}},{Grayscale:Cl,RGB:xl,CMYK:Il}=wl,Dl=e=>e.type===Cl?cl(e.gray):e.type===xl?dl(e.red,e.green,e.blue):e.type===Il?fl(e.cyan,e.magenta,e.yellow,e.key):on(`Invalid color: ${JSON.stringify(e)}`),Ql=e=>e.type===Cl?ul(e.gray):e.type===xl?hl(e.red,e.green,e.blue):e.type===Il?gl(e.cyan,e.magenta,e.yellow,e.key):on(`Invalid color: ${JSON.stringify(e)}`),Pl=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return 1===(null===e||void 0===e?void 0:e.length)?bl(e[0]*t):3===(null===e||void 0===e?void 0:e.length)?yl(e[0]*t,e[1]*t,e[2]*t):4===(null===e||void 0===e?void 0:e.length)?Bl(e[0]*t,e[1]*t,e[2]*t,e[3]*t):void 0},Fl=e=>e.type===Cl?[e.gray]:e.type===xl?[e.red,e.green,e.blue]:e.type===Il?[e.cyan,e.magenta,e.yellow,e.key]:on(`Invalid color: ${JSON.stringify(e)}`);let Ll=0,Ml=0,Sl=0,Nl=0,kl=0,Rl=0;const Tl=new Map([["A",7],["a",7],["C",6],["c",6],["H",1],["h",1],["L",2],["l",2],["M",2],["m",2],["Q",4],["q",4],["S",4],["s",4],["T",2],["t",2],["V",1],["v",1],["Z",0],["z",0]]),Wl={M:e=>(Ll=e[0],Ml=e[1],Sl=Nl=null,kl=Ll,Rl=Ml,Ta(Ll,Ml)),m:e=>(Ll+=e[0],Ml+=e[1],Sl=Nl=null,kl=Ll,Rl=Ml,Ta(Ll,Ml)),C:e=>(Ll=e[4],Ml=e[5],Sl=e[2],Nl=e[3],Na(e[0],e[1],e[2],e[3],e[4],e[5])),c(e){const t=Na(e[0]+Ll,e[1]+Ml,e[2]+Ll,e[3]+Ml,e[4]+Ll,e[5]+Ml);return Sl=Ll+e[2],Nl=Ml+e[3],Ll+=e[4],Ml+=e[5],t},S(e){null!==Sl&&null!==Nl||(Sl=Ll,Nl=Ml);const t=Na(Ll-(Sl-Ll),Ml-(Nl-Ml),e[0],e[1],e[2],e[3]);return Sl=e[0],Nl=e[1],Ll=e[2],Ml=e[3],t},s(e){null!==Sl&&null!==Nl||(Sl=Ll,Nl=Ml);const t=Na(Ll-(Sl-Ll),Ml-(Nl-Ml),Ll+e[0],Ml+e[1],Ll+e[2],Ml+e[3]);return Sl=Ll+e[0],Nl=Ml+e[1],Ll+=e[2],Ml+=e[3],t},Q:e=>(Sl=e[0],Nl=e[1],Ll=e[2],Ml=e[3],ka(e[0],e[1],Ll,Ml)),q(e){const t=ka(e[0]+Ll,e[1]+Ml,e[2]+Ll,e[3]+Ml);return Sl=Ll+e[0],Nl=Ml+e[1],Ll+=e[2],Ml+=e[3],t},T(e){null===Sl||null===Nl?(Sl=Ll,Nl=Ml):(Sl=Ll-(Sl-Ll),Nl=Ml-(Nl-Ml));const t=ka(Sl,Nl,e[0],e[1]);return Ll=e[0],Ml=e[1],t},t(e){null===Sl||null===Nl?(Sl=Ll,Nl=Ml):(Sl=Ll-(Sl-Ll),Nl=Ml-(Nl-Ml));const t=ka(Sl,Nl,Ll+e[0],Ml+e[1]);return Ll+=e[0],Ml+=e[1],t},A(e){const t=jl(Ll,Ml,e);return Ll=e[5],Ml=e[6],t},a(e){e[5]+=Ll,e[6]+=Ml;const t=jl(Ll,Ml,e);return Ll=e[5],Ml=e[6],t},L:e=>(Ll=e[0],Ml=e[1],Sl=Nl=null,Wa(Ll,Ml)),l:e=>(Ll+=e[0],Ml+=e[1],Sl=Nl=null,Wa(Ll,Ml)),H:e=>(Ll=e[0],Sl=Nl=null,Wa(Ll,Ml)),h:e=>(Ll+=e[0],Sl=Nl=null,Wa(Ll,Ml)),V:e=>(Ml=e[0],Sl=Nl=null,Wa(Ll,Ml)),v:e=>(Ml+=e[0],Sl=Nl=null,Wa(Ll,Ml)),Z(){const e=Ra();return Ll=kl,Ml=Rl,e},z(){const e=Ra();return Ll=kl,Ml=Rl,e}},jl=(e,t,r)=>{const[n,s,i,o,A,a,l]=r,c=Gl(a,l,n,s,o,A,i,e,t),u=[];for(const d of c){const e=Xl(...d);u.push(Na(...e))}return u},Gl=(e,t,r,n,s,i,o,A,a)=>{const l=o*(Math.PI/180),c=Math.sin(l),u=Math.cos(l);r=Math.abs(r),n=Math.abs(n),Sl=u*(A-e)*.5+c*(a-t)*.5,Nl=u*(a-t)*.5-c*(A-e)*.5;let d=Sl*Sl/(r*r)+Nl*Nl/(n*n);d>1&&(d=Math.sqrt(d),r*=d,n*=d);const h=u/r,f=c/r,g=-c/n,p=u/n,m=h*A+f*a,w=g*A+p*a,v=h*e+f*t,b=g*e+p*t;let y=1/((v-m)*(v-m)+(b-w)*(b-w))-.25;y<0&&(y=0);let B=Math.sqrt(y);i===s&&(B=-B);const E=.5*(m+v)-B*(b-w),C=.5*(w+b)+B*(v-m),x=Math.atan2(w-C,m-E);let I=Math.atan2(b-C,v-E)-x;I<0&&1===i?I+=2*Math.PI:I>0&&0===i&&(I-=2*Math.PI);const D=Math.ceil(Math.abs(I/(.5*Math.PI+.001))),Q=[];for(let P=0;P<D;P++){const e=x+P*I/D,t=x+(P+1)*I/D;Q[P]=[E,C,e,t,r,n,c,u]}return Q},Xl=(e,t,r,n,s,i,o,A)=>{const a=A*s,l=-o*i,c=o*s,u=A*i,d=.5*(n-r),h=8/3*Math.sin(.5*d)*Math.sin(.5*d)/Math.sin(d),f=e+Math.cos(r)-h*Math.sin(r),g=t+Math.sin(r)+h*Math.cos(r),p=e+Math.cos(n),m=t+Math.sin(n),w=p+h*Math.sin(n),v=m-h*Math.cos(n);return[a*f+l*g,c*f+u*g,a*w+l*v,c*w+u*v,a*p+l*m,c*p+u*m]},Ol=e=>(e=>{Ll=Ml=Sl=Nl=kl=Rl=0;let t=[];for(let r=0;r<e.length;r++){const n=e[r];if(n.cmd&&"function"===typeof Wl[n.cmd]){const e=Wl[n.cmd](n.args);Array.isArray(e)?t=t.concat(e):t.push(e)}}return t})((e=>{let t;const r=[];let n=[],s="",i=!1,o=0;for(const A of e)if(Tl.has(A))o=Tl.get(A),t&&(s.length>0&&(n[n.length]=+s),r[r.length]={cmd:t,args:n},n=[],s="",i=!1),t=A;else if([" ",","].includes(A)||"-"===A&&s.length>0&&"e"!==s[s.length-1]||"."===A&&i){if(0===s.length)continue;n.length===o?(r[r.length]={cmd:t,args:n},n=[+s],"M"===t&&(t="L"),"m"===t&&(t="l")):n[n.length]=+s,i="."===A,s=["-","."].includes(A)?A:""}else s+=A,"."===A&&(i=!0);return s.length>0&&(n.length===o?(r[r.length]={cmd:t,args:n},n=[+s],"M"===t&&(t="L"),"m"===t&&(t="l")):n[n.length]=+s),r[r.length]={cmd:t,args:n},r})(e)),zl=e=>{let{topLeft:t,topRight:r,bottomRight:n,bottomLeft:s}=e;return[Ta(t.x,t.y),Wa(r.x,r.y),Wa(n.x,n.y),Wa(s.x,s.y),Ra(),da(),Ua()]},Yl=e=>e.flatMap(zl),Hl=(e,t)=>[La(),t.graphicsState&&Fa(t.graphicsState),Ka(),Dl(t.color),_a(t.font,t.size),Al(Aa(t.rotate),Aa(t.xSkew),Aa(t.ySkew),t.x,t.y),Za(e),Ja(),Ma()].filter(Boolean),Ul=(e,t)=>{const r=[La(),t.graphicsState&&Fa(t.graphicsState),...t.clipSpaces?Yl(t.clipSpaces):[],t.matrix&&ma(...t.matrix),Ka(),Dl(t.color),_a(t.font,t.size),rl(t.lineHeight),Al(Aa(t.rotate),Aa(t.xSkew),Aa(t.ySkew),t.x,t.y)].filter(Boolean);for(let n=0,s=e.length;n<s;n++)r.push(Za(e[n]),Va());return r.push(Ja(),Ma()),r},Vl=(e,t)=>[La(),t.graphicsState&&Fa(t.graphicsState),...t.clipSpaces?Yl(t.clipSpaces):[],t.matrix&&ma(...t.matrix),wa(t.x,t.y),ba(Aa(t.rotate)),va(t.width,t.height),Ba(Aa(t.xSkew),Aa(t.ySkew)),ll(e),Ma()].filter(Boolean),ql=(e,t)=>[La(),t.graphicsState&&Fa(t.graphicsState),wa(t.x,t.y),ba(Aa(t.rotate)),va(t.xScale,t.yScale),Ba(Aa(t.xSkew),Aa(t.ySkew)),ll(e),Ma()].filter(Boolean),Zl=e=>{var t,r;return[La(),e.graphicsState&&Fa(e.graphicsState),...e.clipSpaces?Yl(e.clipSpaces):[],e.matrix&&ma(...e.matrix),e.color&&Ql(e.color),Sa(e.thickness),Ca(null!==(t=e.dashArray)&&void 0!==t?t:[],null!==(r=e.dashPhase)&&void 0!==r?r:0),Ta(e.start.x,e.start.y),e.lineCap&&Da(e.lineCap),Ta(e.start.x,e.start.y),Wa(e.end.x,e.end.y),Xa(),Ma()].filter(Boolean)},Kl=e=>{var t,r;return[La(),e.graphicsState&&Fa(e.graphicsState),e.color&&Dl(e.color),e.borderColor&&Ql(e.borderColor),Sa(e.borderWidth),e.borderLineCap&&Da(e.borderLineCap),Ca(null!==(t=e.borderDashArray)&&void 0!==t?t:[],null!==(r=e.borderDashPhase)&&void 0!==r?r:0),...e.clipSpaces?Yl(e.clipSpaces):[],e.matrix&&ma(...e.matrix),wa(e.x,e.y),ba(Aa(e.rotate)),Ba(Aa(e.xSkew),Aa(e.ySkew)),Ta(0,0),Wa(0,e.height),Wa(e.width,e.height),Wa(e.width,0),Ra(),e.color&&e.borderWidth?Ha():e.color?za():e.borderColor?Xa():Ra(),Ma()].filter(Boolean)},Jl=(Math.sqrt(2)-1)/3*4,_l=e=>{let t=$A(e.x),r=$A(e.y);const n=$A(e.xScale),s=$A(e.yScale);t-=n,r-=s;const i=n*Jl,o=s*Jl,A=t+2*n,a=r+2*s,l=t+n,c=r+s;return[La(),Ta(t,c),Na(t,c-o,l-i,r,l,r),Na(l+i,r,A,c-o,A,c),Na(A,c+o,l+i,a,l,a),Na(l-i,a,t,c+o,t,c),Ma()]},$l=e=>{const t=$A(e.x),r=$A(e.y),n=$A(e.xScale),s=$A(e.yScale),i=-n,o=-s,A=n*Jl,a=s*Jl,l=i+2*n,c=o+2*s,u=i+n,d=o+s;return[wa(t,r),ba(Aa(e.rotate)),Ta(i,d),Na(i,d-a,u-A,o,u,o),Na(u+A,o,l,d-a,l,d),Na(l,d+a,u+A,c,u,c),Na(u-A,c,i,d+a,i,d)]},ec=e=>{var t,r,n;return[La(),e.graphicsState&&Fa(e.graphicsState),e.color&&Dl(e.color),e.borderColor&&Ql(e.borderColor),...e.clipSpaces?Yl(e.clipSpaces):[],e.matrix&&ma(...e.matrix),Sa(e.borderWidth),e.borderLineCap&&Da(e.borderLineCap),Ca(null!==(t=e.borderDashArray)&&void 0!==t?t:[],null!==(r=e.borderDashPhase)&&void 0!==r?r:0),...void 0===e.rotate?_l({x:e.x,y:e.y,xScale:e.xScale,yScale:e.yScale}):$l({x:e.x,y:e.y,xScale:e.xScale,yScale:e.yScale,rotate:null!==(n=e.rotate)&&void 0!==n?n:ra(0)}),e.color&&e.borderWidth?Ha():e.color?za():e.borderColor?Xa():Ra(),Ma()].filter(Boolean)},tc=(e,t)=>{var r,n,s;return[La(),t.graphicsState&&Fa(t.graphicsState),...t.clipSpaces?Yl(t.clipSpaces):[],t.matrix&&ma(...t.matrix),wa(t.x,t.y),ba(Aa(null!==(r=t.rotate)&&void 0!==r?r:ra(0))),t.scale&&va(t.scale,t.scale),t.color&&Dl(t.color),t.borderColor&&Ql(t.borderColor),t.borderWidth&&Sa(t.borderWidth),t.borderLineCap&&Da(t.borderLineCap),Ca(null!==(n=t.borderDashArray)&&void 0!==n?n:[],null!==(s=t.borderDashPhase)&&void 0!==s?s:0),...Ol(e),t.color&&t.borderWidth?Ha():t.color?t.fillRule===Oa.EvenOdd?Ya():za():t.borderColor?Xa():Ra(),Ma()].filter(Boolean)},rc=e=>{const t=$A(e.size),r=-.25,n=-.49,s=-.675,i=.3995/.965+n;return[La(),e.color&&Ql(e.color),Sa(e.thickness),wa(e.x,e.y),Ta(s*t,i*t),Wa(r*t,n*t),Wa(.69*t,.475*t),Xa(),Ma()].filter(Boolean)},nc=e=>0===e.rotation?[wa(0,0),ya(0)]:90===e.rotation?[wa(e.width,0),ya(90)]:180===e.rotation?[wa(e.width,e.height),ya(180)]:270===e.rotation?[wa(0,e.height),ya(270)]:[],sc=e=>{const t=Kl({x:e.x,y:e.y,width:e.width,height:e.height,borderWidth:e.borderWidth,color:e.color,borderColor:e.borderColor,rotate:ra(0),xSkew:ra(0),ySkew:ra(0)});if(!e.filled)return t;const r=$A(e.width),n=$A(e.height),s=Math.min(r,n)/2,i=rc({x:r/2,y:n/2,size:s,thickness:e.thickness,color:e.markColor});return[La(),...t,...i,Ma()]},ic=e=>{const t=$A(e.width),r=$A(e.height),n=Math.min(t,r)/2,s=ec({x:e.x,y:e.y,xScale:n,yScale:n,color:e.color,borderColor:e.borderColor,borderWidth:e.borderWidth});if(!e.filled)return s;const i=ec({x:e.x,y:e.y,xScale:.45*n,yScale:.45*n,color:e.dotColor,borderColor:void 0,borderWidth:0});return[La(),...s,...i,Ma()]},oc=e=>{const t=$A(e.x),r=$A(e.y),n=$A(e.width),s=$A(e.height),i=Kl({x:t,y:r,width:n,height:s,borderWidth:e.borderWidth,color:e.color,borderColor:e.borderColor,rotate:ra(0),xSkew:ra(0),ySkew:ra(0)}),o=Ac(e.textLines,{color:e.textColor,font:e.font,size:e.fontSize,rotate:ra(0),xSkew:ra(0),ySkew:ra(0)});return[La(),...i,...o,Ma()]},Ac=(e,t)=>{const r=[Ka(),Dl(t.color),_a(t.font,t.size)];for(let n=0,s=e.length;n<s;n++){const{encoded:s,x:i,y:o}=e[n];r.push(Al(Aa(t.rotate),Aa(t.xSkew),Aa(t.ySkew),i,o),Za(s))}return r.push(Ja()),r},ac=e=>{const t=$A(e.x),r=$A(e.y),n=$A(e.width),s=$A(e.height),i=$A(e.borderWidth),o=$A(e.padding),A=t+i/2+o,a=r+i/2+o,l=n-2*(i/2+o),c=s-2*(i/2+o),u=[Ta(A,a),Wa(A,a+c),Wa(A+l,a+c),Wa(A+l,a),Ra(),da(),Ua()],d=Kl({x:t,y:r,width:n,height:s,borderWidth:e.borderWidth,color:e.color,borderColor:e.borderColor,rotate:ra(0),xSkew:ra(0),ySkew:ra(0)}),h=Ac(e.textLines,{color:e.textColor,font:e.font,size:e.fontSize,rotate:ra(0),xSkew:ra(0),ySkew:ra(0)}),f=[pl("Tx"),La(),...h,Ma(),ml()];return[La(),...d,...u,...f,Ma()]},lc=e=>{const t=$A(e.x),r=$A(e.y),n=$A(e.width),s=$A(e.height),i=$A(e.lineHeight),o=$A(e.borderWidth),A=$A(e.padding),a=t+o/2+A,l=r+o/2+A,c=n-2*(o/2+A),u=s-2*(o/2+A),d=[Ta(a,l),Wa(a,l+u),Wa(a+c,l+u),Wa(a+c,l),Ra(),da(),Ua()],h=Kl({x:t,y:r,width:n,height:s,borderWidth:e.borderWidth,color:e.color,borderColor:e.borderColor,rotate:ra(0),xSkew:ra(0),ySkew:ra(0)}),f=[];for(let m=0,w=e.selectedLines.length;m<w;m++){const t=e.textLines[e.selectedLines[m]];f.push(...Kl({x:t.x-A,y:t.y-(i-t.height)/2,width:n-o,height:t.height+(i-t.height)/2,borderWidth:0,color:e.selectedColor,borderColor:void 0,rotate:ra(0),xSkew:ra(0),ySkew:ra(0)}))}const g=Ac(e.textLines,{color:e.textColor,font:e.font,size:e.fontSize,rotate:ra(0),xSkew:ra(0),ySkew:ra(0)}),p=[pl("Tx"),La(),...g,Ma(),ml()];return[La(),...h,...f,...d,...p,Ma()]};class cc extends Error{constructor(){super("Input document to `PDFDocument.load` is encrypted. You can use `PDFDocument.load(..., { ignoreEncryption: true })` if you wish to load the document anyways.")}}class uc extends Error{constructor(){super("Input to `PDFDocument.embedFont` was a custom font, but no `fontkit` instance was found. You must register a `fontkit` instance with `PDFDocument.registerFontkit(...)` before embedding custom fonts.")}}class dc extends Error{constructor(){super("A `page` passed to `PDFDocument.addPage` or `PDFDocument.insertPage` was from a different (foreign) PDF document. If you want to copy pages from one PDFDocument to another, you must use `PDFDocument.copyPages(...)` to copy the pages before adding or inserting them.")}}class hc extends Error{constructor(){super("PDFDocument has no pages so `PDFDocument.removePage` cannot be called")}}class fc extends Error{constructor(e){super(`PDFDocument has no form field with the name "${e}"`)}}class gc extends Error{constructor(e,t,r){var n,s;super(`Expected field "${e}" to be of type ${null===t||void 0===t?void 0:t.name}, but it is actually of type ${null!==(s=null===(n=null===r||void 0===r?void 0:r.constructor)||void 0===n?void 0:n.name)&&void 0!==s?s:r}`)}}class pc extends Error{constructor(e){super(`Failed to select check box due to missing onValue: "${e}"`)}}class mc extends Error{constructor(e){super(`A field already exists with the specified name: "${e}"`)}}class wc extends Error{constructor(e){super(`Field name contains invalid component: "${e}"`)}}class vc extends Error{constructor(e){super(`A non-terminal field already exists with the specified name: "${e}"`)}}class bc extends Error{constructor(e){super(`Reading rich text fields is not supported: Attempted to read rich text field: ${e}`)}}class yc extends Error{constructor(e,t){super(`Failed to layout combed text as lineLength=${e} is greater than cellCount=${t}`)}}class Bc extends Error{constructor(e,t,r){super(`Attempted to set text with length=${e} for TextField with maxLength=${t} and name=${r}`)}}class Ec extends Error{constructor(e,t,r){super(`Attempted to set maxLength=${t}, which is less than ${e}, the length of this field's current value (name=${r})`)}}var Cc;!function(e){e[e.Left=0]="Left",e[e.Center=1]="Center",e[e.Right=2]="Right"}(Cc||(Cc={}));const xc=function(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=4;for(;s<500;){let i=0;for(let n=0,A=e.length;n<A;n++){i+=1;const o=e[n].split(" ");let A=r.width;for(let e=0,n=o.length;e<n;e++){const a=e===n-1?o[e]:o[e]+" ",l=t.widthOfTextAtSize(a,s);A-=l,A<=0&&(i+=1,A=r.width-l)}}if(!n&&i>e.length)return s-1;const o=t.heightAtSize(s);if((o+.2*o)*i>Math.abs(r.height))return s-1;s+=1}return s},Ic=e=>{for(let t=e.length;t>0;t--)if(/\s/.test(e[t]))return t},Dc=(e,t,r,n)=>{var s;let i=e.length;for(;i>0;){const o=e.substring(0,i),A=r.encodeText(o),a=r.widthOfTextAtSize(o,n);if(a<t){return{line:o,encoded:A,width:a,remainder:e.substring(i)||void 0}}i=null!==(s=Ic(o))&&void 0!==s?s:0}return{line:e,encoded:r.encodeText(e),width:r.widthOfTextAtSize(e,n),remainder:void 0}},Qc=(e,t)=>{let{alignment:r,fontSize:n,font:s,bounds:i}=t;const o=mr(hr(e));void 0!==n&&0!==n||(n=xc(o,s,i,!0));const A=s.heightAtSize(n),a=A+.2*A,l=[];let c=i.x,u=i.y,d=i.x+i.width,h=i.y+i.height,f=i.y+i.height;for(let g=0,p=o.length;g<p;g++){let e=o[g];for(;void 0!==e;){const{line:t,encoded:o,width:g,remainder:p}=Dc(e,i.width,s,n),m=r===Cc.Left?i.x:r===Cc.Center?i.x+i.width/2-g/2:r===Cc.Right?i.x+i.width-g:i.x;f-=a,m<c&&(c=m),f<u&&(u=f),m+g>d&&(d=m+g),f+A>h&&(h=f+A),l.push({text:t,encoded:o,width:g,height:A,x:m,y:f}),e=null===p||void 0===p?void 0:p.trim()}}return{fontSize:n,lineHeight:a,lines:l,bounds:{x:c,y:u,width:d-c,height:h-u}}},Pc=(e,t)=>{let{fontSize:r,font:n,bounds:s,cellCount:i}=t;const o=wr(hr(e));if(o.length>i)throw new yc(o.length,i);void 0!==r&&0!==r||(r=((e,t,r,n)=>{const s=r.width/n,i=r.height;let o=4;const A=br(e);for(;o<500;){for(let e=0,r=A.length;e<r;e++){const r=A[e];if(t.widthOfTextAtSize(r,o)>.75*s)return o-1}if(t.heightAtSize(o,{descender:!1})>i)return o-1;o+=1}return o})(o,n,s,i));const A=s.width/i,a=n.heightAtSize(r,{descender:!1}),l=s.y+(s.height/2-a/2),c=[];let u=s.x,d=s.y,h=s.x+s.width,f=s.y+s.height,g=0,p=0;for(;g<i;){const[e,t]=vr(o,p),i=n.encodeText(e),m=n.widthOfTextAtSize(e,r),w=s.x+(A*g+A/2)-m/2;w<u&&(u=w),l<d&&(d=l),w+m>h&&(h=w+m),l+a>f&&(f=l+a),c.push({text:o,encoded:i,width:m,height:a,x:w,y:l}),g+=1,p+=t}return{fontSize:r,cells:c,bounds:{x:u,y:d,width:h-u,height:f-d}}},Fc=(e,t)=>{let{alignment:r,fontSize:n,font:s,bounds:i}=t;const o=wr(hr(e));void 0!==n&&0!==n||(n=xc([o],s,i));const A=s.encodeText(o),a=s.widthOfTextAtSize(o,n),l=s.heightAtSize(n,{descender:!1}),c=r===Cc.Left?i.x:r===Cc.Center?i.x+i.width/2-a/2:r===Cc.Right?i.x+i.width-a:i.x,u=i.y+(i.height/2-l/2);return{fontSize:n,line:{text:o,encoded:A,width:a,height:l,x:c,y:u},bounds:{x:c,y:u,width:a,height:l}}},Lc=e=>"normal"in e?e:{normal:e},Mc=/\/([^\0\t\n\f\r\ ]+)[\0\t\n\f\r\ ]+(\d*\.\d+|\d+)[\0\t\n\f\r\ ]+Tf/,Sc=e=>{var t,r;const n=null!==(t=e.getDefaultAppearance())&&void 0!==t?t:"",s=null!==(r=Cr(n,Mc).match)&&void 0!==r?r:[],i=Number(s[2]);return isFinite(i)?i:void 0},Nc=/(\d*\.\d+|\d+)[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]*(\d*\.\d+|\d+)?[\0\t\n\f\r\ ]+(g|rg|k)/,kc=e=>{var t;const r=null!==(t=e.getDefaultAppearance())&&void 0!==t?t:"",n=Cr(r,Nc).match,[,s,i,o,A,a]=null!==n&&void 0!==n?n:[];return"g"===a&&s?bl(Number(s)):"rg"===a&&s&&i&&o?yl(Number(s),Number(i),Number(o)):"k"===a&&s&&i&&o&&A?Bl(Number(s),Number(i),Number(o),Number(A)):void 0},Rc=function(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;var s;const i=[Dl(t).toString(),_a(null!==(s=null===r||void 0===r?void 0:r.name)&&void 0!==s?s:"dummy__noop",n).toString()].join("\n");e.setDefaultAppearance(i)},Tc=(e,t)=>{var r,n,s;const i=kc(t),o=kc(e.acroField),A=t.getRectangle(),a=t.getAppearanceCharacteristics(),l=t.getBorderStyle(),c=null!==(r=null===l||void 0===l?void 0:l.getWidth())&&void 0!==r?r:0,u=la(null===a||void 0===a?void 0:a.getRotation()),{width:d,height:h}=ca(A,u),f=nc({...A,rotation:u}),g=yl(0,0,0),p=null!==(n=Pl(null===a||void 0===a?void 0:a.getBorderColor()))&&void 0!==n?n:g,m=Pl(null===a||void 0===a?void 0:a.getBackgroundColor()),w=Pl(null===a||void 0===a?void 0:a.getBackgroundColor(),.8),v=null!==(s=null!==i&&void 0!==i?i:o)&&void 0!==s?s:g;Rc(i?t:e.acroField,v);const b={x:0+c/2,y:0+c/2,width:d-c,height:h-c,thickness:1.5,borderWidth:c,borderColor:p,markColor:v};return{normal:{on:[...f,...sc({...b,color:m,filled:!0})],off:[...f,...sc({...b,color:m,filled:!1})]},down:{on:[...f,...sc({...b,color:w,filled:!0})],off:[...f,...sc({...b,color:w,filled:!1})]}}},Wc=(e,t)=>{var r,n,s;const i=kc(t),o=kc(e.acroField),A=t.getRectangle(),a=t.getAppearanceCharacteristics(),l=t.getBorderStyle(),c=null!==(r=null===l||void 0===l?void 0:l.getWidth())&&void 0!==r?r:0,u=la(null===a||void 0===a?void 0:a.getRotation()),{width:d,height:h}=ca(A,u),f=nc({...A,rotation:u}),g=yl(0,0,0),p=null!==(n=Pl(null===a||void 0===a?void 0:a.getBorderColor()))&&void 0!==n?n:g,m=Pl(null===a||void 0===a?void 0:a.getBackgroundColor()),w=Pl(null===a||void 0===a?void 0:a.getBackgroundColor(),.8),v=null!==(s=null!==i&&void 0!==i?i:o)&&void 0!==s?s:g;Rc(i?t:e.acroField,v);const b={x:d/2,y:h/2,width:d-c,height:h-c,borderWidth:c,borderColor:p,dotColor:v};return{normal:{on:[...f,...ic({...b,color:m,filled:!0})],off:[...f,...ic({...b,color:m,filled:!1})]},down:{on:[...f,...ic({...b,color:w,filled:!0})],off:[...f,...ic({...b,color:w,filled:!1})]}}},jc=(e,t,r)=>{var n,s,i,o,A;const a=kc(t),l=kc(e.acroField),c=Sc(t),u=Sc(e.acroField),d=t.getRectangle(),h=t.getAppearanceCharacteristics(),f=t.getBorderStyle(),g=null===h||void 0===h?void 0:h.getCaptions(),p=null!==(n=null===g||void 0===g?void 0:g.normal)&&void 0!==n?n:"",m=null!==(i=null!==(s=null===g||void 0===g?void 0:g.down)&&void 0!==s?s:p)&&void 0!==i?i:"",w=null!==(o=null===f||void 0===f?void 0:f.getWidth())&&void 0!==o?o:0,v=la(null===h||void 0===h?void 0:h.getRotation()),{width:b,height:y}=ca(d,v),B=nc({...d,rotation:v}),E=yl(0,0,0),C=Pl(null===h||void 0===h?void 0:h.getBorderColor()),x=Pl(null===h||void 0===h?void 0:h.getBackgroundColor()),I=Pl(null===h||void 0===h?void 0:h.getBackgroundColor(),.8),D={x:w,y:w,width:b-2*w,height:y-2*w},Q=Fc(p,{alignment:Cc.Center,fontSize:null!==c&&void 0!==c?c:u,font:r,bounds:D}),P=Fc(m,{alignment:Cc.Center,fontSize:null!==c&&void 0!==c?c:u,font:r,bounds:D}),F=Math.min(Q.fontSize,P.fontSize),L=null!==(A=null!==a&&void 0!==a?a:l)&&void 0!==A?A:E;Rc(a||void 0!==c?t:e.acroField,L,r,F);const M={x:0+w/2,y:0+w/2,width:b-w,height:y-w,borderWidth:w,borderColor:C,textColor:L,font:r.name,fontSize:F};return{normal:[...B,...oc({...M,color:x,textLines:[Q.line]})],down:[...B,...oc({...M,color:I,textLines:[P.line]})]}},Gc=(e,t,r)=>{var n,s,i,o;const A=kc(t),a=kc(e.acroField),l=Sc(t),c=Sc(e.acroField),u=t.getRectangle(),d=t.getAppearanceCharacteristics(),h=t.getBorderStyle(),f=null!==(n=e.getText())&&void 0!==n?n:"",g=null!==(s=null===h||void 0===h?void 0:h.getWidth())&&void 0!==s?s:0,p=la(null===d||void 0===d?void 0:d.getRotation()),{width:m,height:w}=ca(u,p),v=nc({...u,rotation:p}),b=yl(0,0,0),y=Pl(null===d||void 0===d?void 0:d.getBorderColor()),B=Pl(null===d||void 0===d?void 0:d.getBackgroundColor());let E,C;const x=e.isCombed()?0:1,I={x:g+x,y:g+x,width:m-2*(g+x),height:w-2*(g+x)};if(e.isMultiline()){const t=Qc(f,{alignment:e.getAlignment(),fontSize:null!==l&&void 0!==l?l:c,font:r,bounds:I});E=t.lines,C=t.fontSize}else if(e.isCombed()){const t=Pc(f,{fontSize:null!==l&&void 0!==l?l:c,font:r,bounds:I,cellCount:null!==(i=e.getMaxLength())&&void 0!==i?i:0});E=t.cells,C=t.fontSize}else{const t=Fc(f,{alignment:e.getAlignment(),fontSize:null!==l&&void 0!==l?l:c,font:r,bounds:I});E=[t.line],C=t.fontSize}const D=null!==(o=null!==A&&void 0!==A?A:a)&&void 0!==o?o:b;Rc(A||void 0!==l?t:e.acroField,D,r,C);const Q={x:0+g/2,y:0+g/2,width:m-g,height:w-g,borderWidth:null!==g&&void 0!==g?g:0,borderColor:y,textColor:D,font:r.name,fontSize:C,color:B,textLines:E,padding:x};return[...v,...ac(Q)]},Xc=(e,t,r)=>{var n,s,i;const o=kc(t),A=kc(e.acroField),a=Sc(t),l=Sc(e.acroField),c=t.getRectangle(),u=t.getAppearanceCharacteristics(),d=t.getBorderStyle(),h=null!==(n=e.getSelected()[0])&&void 0!==n?n:"",f=null!==(s=null===d||void 0===d?void 0:d.getWidth())&&void 0!==s?s:0,g=la(null===u||void 0===u?void 0:u.getRotation()),{width:p,height:m}=ca(c,g),w=nc({...c,rotation:g}),v=yl(0,0,0),b=Pl(null===u||void 0===u?void 0:u.getBorderColor()),y=Pl(null===u||void 0===u?void 0:u.getBackgroundColor()),B={x:f+1,y:f+1,width:p-2*(f+1),height:m-2*(f+1)},{line:E,fontSize:C}=Fc(h,{alignment:Cc.Left,fontSize:null!==a&&void 0!==a?a:l,font:r,bounds:B}),x=null!==(i=null!==o&&void 0!==o?o:A)&&void 0!==i?i:v;Rc(o||void 0!==a?t:e.acroField,x,r,C);const I={x:0+f/2,y:0+f/2,width:p-f,height:m-f,borderWidth:null!==f&&void 0!==f?f:0,borderColor:b,textColor:x,font:r.name,fontSize:C,color:y,textLines:[E],padding:1};return[...w,...ac(I)]},Oc=(e,t,r)=>{var n,s;const i=kc(t),o=kc(e.acroField),A=Sc(t),a=Sc(e.acroField),l=t.getRectangle(),c=t.getAppearanceCharacteristics(),u=t.getBorderStyle(),d=null!==(n=null===u||void 0===u?void 0:u.getWidth())&&void 0!==n?n:0,h=la(null===c||void 0===c?void 0:c.getRotation()),{width:f,height:g}=ca(l,h),p=nc({...l,rotation:h}),m=yl(0,0,0),w=Pl(null===c||void 0===c?void 0:c.getBorderColor()),v=Pl(null===c||void 0===c?void 0:c.getBackgroundColor()),b=e.getOptions(),y=e.getSelected();e.isSorted()&&b.sort();let B="";for(let F=0,L=b.length;F<L;F++)B+=b[F],F<L-1&&(B+="\n");const E={x:d+1,y:d+1,width:f-2*(d+1),height:g-2*(d+1)},{lines:C,fontSize:x,lineHeight:I}=Qc(B,{alignment:Cc.Left,fontSize:null!==A&&void 0!==A?A:a,font:r,bounds:E}),D=[];for(let F=0,L=C.length;F<L;F++){const e=C[F];y.includes(e.text)&&D.push(F)}const Q=yl(.6,193/255,218/255),P=null!==(s=null!==i&&void 0!==i?i:o)&&void 0!==s?s:m;return Rc(i||void 0!==A?t:e.acroField,P,r,x),[...p,...lc({x:0+d/2,y:0+d/2,width:f-d,height:g-d,borderWidth:null!==d&&void 0!==d?d:0,borderColor:w,textColor:P,font:r.name,fontSize:x,color:v,textLines:C,lineHeight:I,selectedColor:Q,selectedLines:D,padding:1})]};class zc{constructor(e,t,r){this.alreadyEmbedded=!1,kn(e,"ref",[[Zs,"PDFRef"]]),kn(t,"doc",[[Du,"PDFDocument"]]),kn(r,"embedder",[[Bo,"PDFPageEmbedder"]]),this.ref=e,this.doc=t,this.width=r.width,this.height=r.height,this.embedder=r}scale(e){return kn(e,"factor",["number"]),{width:this.width*e,height:this.height*e}}size(){return this.scale(1)}async embed(){this.alreadyEmbedded||(await this.embedder.embedIntoContext(this.doc.context,this.ref),this.alreadyEmbedded=!0)}}zc.of=(e,t,r)=>new zc(e,t,r);class Yc{constructor(e,t,r){this.modified=!0,kn(e,"ref",[[Zs,"PDFRef"]]),kn(t,"doc",[[Du,"PDFDocument"]]),kn(r,"embedder",[[Gi,"CustomFontEmbedder"],[Li,"StandardFontEmbedder"]]),this.ref=e,this.doc=t,this.name=r.fontName,this.embedder=r}encodeText(e){return kn(e,"text",["string"]),this.modified=!0,this.embedder.encodeText(e)}widthOfTextAtSize(e,t){return kn(e,"text",["string"]),kn(t,"size",["number"]),this.embedder.widthOfTextAtSize(e,t)}heightAtSize(e,t){var r;return kn(e,"size",["number"]),Rn(null===t||void 0===t?void 0:t.descender,"options.descender",["boolean"]),this.embedder.heightOfFontAtSize(e,{descender:null===(r=null===t||void 0===t?void 0:t.descender)||void 0===r||r})}sizeAtHeight(e){return kn(e,"height",["number"]),this.embedder.sizeOfFontAtHeight(e)}getCharacterSet(){return this.embedder instanceof Li?this.embedder.encoding.supportedCodePoints:this.embedder.font.characterSet}async embed(){this.modified&&(await this.embedder.embedIntoContext(this.doc.context,this.ref),this.modified=!1)}}Yc.of=(e,t,r)=>new Yc(e,t,r);class Hc{constructor(e,t,r){kn(e,"ref",[[Zs,"PDFRef"]]),kn(t,"doc",[[Du,"PDFDocument"]]),kn(r,"embedder",[[Ki,"JpegEmbedder"],[ro,"PngEmbedder"]]),this.ref=e,this.doc=t,this.width=r.width,this.height=r.height,this.embedder=r}scale(e){return kn(e,"factor",["number"]),{width:this.width*e,height:this.height*e}}scaleToFit(e,t){kn(e,"width",["number"]),kn(t,"height",["number"]);const r=e/this.width,n=t/this.height,s=Math.min(r,n);return this.scale(s)}size(){return this.scale(1)}async embed(){if(this.embedder){if(!this.embedTask){const{doc:e,ref:t}=this;this.embedTask=this.embedder.embedIntoContext(e.context,t)}await this.embedTask,this.embedder=void 0}}}var Uc;Hc.of=(e,t,r)=>new Hc(e,t,r),function(e){e[e.Left=0]="Left",e[e.Center=1]="Center",e[e.Right=2]="Right"}(Uc||(Uc={}));const Vc=e=>{Rn(null===e||void 0===e?void 0:e.x,"options.x",["number"]),Rn(null===e||void 0===e?void 0:e.y,"options.y",["number"]),Rn(null===e||void 0===e?void 0:e.width,"options.width",["number"]),Rn(null===e||void 0===e?void 0:e.height,"options.height",["number"]),Rn(null===e||void 0===e?void 0:e.textColor,"options.textColor",[[Object,"Color"]]),Rn(null===e||void 0===e?void 0:e.backgroundColor,"options.backgroundColor",[[Object,"Color"]]),Rn(null===e||void 0===e?void 0:e.borderColor,"options.borderColor",[[Object,"Color"]]),Rn(null===e||void 0===e?void 0:e.borderWidth,"options.borderWidth",["number"]),Rn(null===e||void 0===e?void 0:e.rotate,"options.rotate",[[Object,"Rotation"]])};class qc{constructor(e,t,r){kn(e,"acroField",[[Oo,"PDFAcroTerminal"]]),kn(t,"ref",[[Zs,"PDFRef"]]),kn(r,"doc",[[Du,"PDFDocument"]]),this.acroField=e,this.ref=t,this.doc=r}getName(){var e;return null!==(e=this.acroField.getFullyQualifiedName())&&void 0!==e?e:""}isReadOnly(){return this.acroField.hasFlag(Vo.ReadOnly)}enableReadOnly(){this.acroField.setFlagTo(Vo.ReadOnly,!0)}disableReadOnly(){this.acroField.setFlagTo(Vo.ReadOnly,!1)}isRequired(){return this.acroField.hasFlag(Vo.Required)}enableRequired(){this.acroField.setFlagTo(Vo.Required,!0)}disableRequired(){this.acroField.setFlagTo(Vo.Required,!1)}isExported(){return!this.acroField.hasFlag(Vo.NoExport)}enableExporting(){this.acroField.setFlagTo(Vo.NoExport,!1)}disableExporting(){this.acroField.setFlagTo(Vo.NoExport,!0)}needsAppearancesUpdate(){throw new Vn(this.constructor.name,"needsAppearancesUpdate")}defaultUpdateAppearances(e){throw new Vn(this.constructor.name,"defaultUpdateAppearances")}markAsDirty(){this.doc.getForm().markFieldAsDirty(this.ref)}markAsClean(){this.doc.getForm().markFieldAsClean(this.ref)}isDirty(){return this.doc.getForm().fieldIsDirty(this.ref)}createWidget(e){var t;const r=e.textColor,n=e.backgroundColor,s=e.borderColor,i=e.borderWidth,o=aa(e.rotate),A=e.caption,a=e.x,l=e.y,c=e.width+i,u=e.height+i,d=Boolean(e.hidden),h=e.page;Gn(o,"degreesAngle",90);const f=Go.create(this.doc.context,this.ref),g=ua({x:a,y:l,width:c,height:u},i,o);f.setRectangle(g),h&&f.setP(h);const p=f.getOrCreateAppearanceCharacteristics();n&&p.setBackgroundColor(Fl(n)),p.setRotation(o),A&&p.setCaptions({normal:A}),s&&p.setBorderColor(Fl(s));const m=f.getOrCreateBorderStyle();if(void 0!==i&&m.setWidth(i),f.setFlagTo(KA.Print,!0),f.setFlagTo(KA.Hidden,d),f.setFlagTo(KA.Invisible,!1),r){const e=(null!==(t=this.acroField.getDefaultAppearance())&&void 0!==t?t:"")+"\n"+Dl(r).toString();this.acroField.setDefaultAppearance(e)}return f}updateWidgetAppearanceWithFont(e,t,r){let{normal:n,rollover:s,down:i}=r;this.updateWidgetAppearances(e,{normal:this.createAppearanceStream(e,n,t),rollover:s&&this.createAppearanceStream(e,s,t),down:i&&this.createAppearanceStream(e,i,t)})}updateOnOffWidgetAppearance(e,t,r){let{normal:n,rollover:s,down:i}=r;this.updateWidgetAppearances(e,{normal:this.createAppearanceDict(e,n,t),rollover:s&&this.createAppearanceDict(e,s,t),down:i&&this.createAppearanceDict(e,i,t)})}updateWidgetAppearances(e,t){let{normal:r,rollover:n,down:s}=t;e.setNormalAppearance(r),n?e.setRolloverAppearance(n):e.removeRolloverAppearance(),s?e.setDownAppearance(s):e.removeDownAppearance()}createAppearanceStream(e,t,r){const{context:n}=this.acroField.dict,{width:s,height:i}=e.getRectangle(),o=r&&{Font:{[r.name]:r.ref}},A=n.formXObject(t,{Resources:o,BBox:n.obj([0,0,s,i]),Matrix:n.obj([1,0,0,1,0,0])});return n.register(A)}createImageAppearanceStream(e,t,r){var n;const{context:s}=this.acroField.dict,i=e.getRectangle(),o=e.getAppearanceCharacteristics(),A=e.getBorderStyle(),a=null!==(n=null===A||void 0===A?void 0:A.getWidth())&&void 0!==n?n:0,l=la(null===o||void 0===o?void 0:o.getRotation()),c=nc({...i,rotation:l}),u=ca(i,l),d=t.scaleToFit(u.width-2*a,u.height-2*a),h={x:a,y:a,width:d.width,height:d.height,rotate:ra(0),xSkew:ra(0),ySkew:ra(0)};r===Uc.Center?(h.x+=(u.width-2*a)/2-d.width/2,h.y+=(u.height-2*a)/2-d.height/2):r===Uc.Right&&(h.x=u.width-a-d.width,h.y=u.height-a-d.height);const f=this.doc.context.addRandomSuffix("Image",10),g=[...c,...Vl(f,h)],p={XObject:{[f]:t.ref}},m=s.formXObject(g,{Resources:p,BBox:s.obj([0,0,i.width,i.height]),Matrix:s.obj([1,0,0,1,0,0])});return s.register(m)}createAppearanceDict(e,t,r){const{context:n}=this.acroField.dict,s=this.createAppearanceStream(e,t.on),i=this.createAppearanceStream(e,t.off),o=n.obj({});return o.set(r,s),o.set(js.of("Off"),i),o}}class Zc extends qc{constructor(e,t,r){super(e,t,r),kn(e,"acroCheckBox",[[Ho,"PDFAcroCheckBox"]]),this.acroField=e}check(){var e;const t=null!==(e=this.acroField.getOnValue())&&void 0!==e?e:js.of("Yes");this.markAsDirty(),this.acroField.setValue(t)}uncheck(){this.markAsDirty(),this.acroField.setValue(js.of("Off"))}isChecked(){const e=this.acroField.getOnValue();return!!e&&e===this.acroField.getValue()}addToPage(e,t){var r,n,s,i,o,A;kn(e,"page",[[Ju,"PDFPage"]]),Vc(t),t||(t={}),"textColor"in t||(t.textColor=yl(0,0,0)),"backgroundColor"in t||(t.backgroundColor=yl(1,1,1)),"borderColor"in t||(t.borderColor=yl(0,0,0)),"borderWidth"in t||(t.borderWidth=1);const a=this.createWidget({x:null!==(r=t.x)&&void 0!==r?r:0,y:null!==(n=t.y)&&void 0!==n?n:0,width:null!==(s=t.width)&&void 0!==s?s:50,height:null!==(i=t.height)&&void 0!==i?i:50,textColor:t.textColor,backgroundColor:t.backgroundColor,borderColor:t.borderColor,borderWidth:null!==(o=t.borderWidth)&&void 0!==o?o:0,rotate:null!==(A=t.rotate)&&void 0!==A?A:ra(0),hidden:t.hidden,page:e.ref}),l=this.doc.context.register(a.dict);this.acroField.addWidget(l),a.setAppearanceState(js.of("Off")),this.updateWidgetAppearance(a,js.of("Yes")),e.node.addAnnot(l)}needsAppearancesUpdate(){var e;const t=this.acroField.getWidgets();for(let r=0,n=t.length;r<n;r++){const n=t[r],s=n.getAppearanceState(),i=null===(e=n.getAppearances())||void 0===e?void 0:e.normal;if(!(i instanceof Os))return!0;if(s&&!i.has(s))return!0}return!1}defaultUpdateAppearances(){this.updateAppearances()}updateAppearances(e){var t;Rn(e,"provider",[Function]);const r=this.acroField.getWidgets();for(let n=0,s=r.length;n<s;n++){const s=r[n],i=null!==(t=s.getOnValue())&&void 0!==t?t:js.of("Yes");i&&this.updateWidgetAppearance(s,i,e)}this.markAsClean()}updateWidgetAppearance(e,t,r){const n=Lc((null!==r&&void 0!==r?r:Tc)(this,e));this.updateOnOffWidgetAppearance(e,t,n)}}Zc.of=(e,t,r)=>new Zc(e,t,r);class Kc extends qc{constructor(e,t,r){super(e,t,r),kn(e,"acroComboBox",[[$o,"PDFAcroComboBox"]]),this.acroField=e}getOptions(){const e=this.acroField.getOptions(),t=new Array(e.length);for(let r=0,n=t.length;r<n;r++){const{display:n,value:s}=e[r];t[r]=(null!==n&&void 0!==n?n:s).decodeText()}return t}getSelected(){const e=this.acroField.getValues(),t=new Array(e.length);for(let r=0,n=e.length;r<n;r++)t[r]=e[r].decodeText();return t}setOptions(e){kn(e,"options",[Array]);const t=new Array(e.length);for(let r=0,n=e.length;r<n;r++)t[r]={value:Pi.fromText(e[r])};this.acroField.setOptions(t)}addOptions(e){kn(e,"options",["string",Array]);const t=Array.isArray(e)?e:[e],r=this.acroField.getOptions(),n=new Array(t.length);for(let s=0,i=t.length;s<i;s++)n[s]={value:Pi.fromText(t[s])};this.acroField.setOptions(r.concat(n))}select(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];kn(e,"options",["string",Array]),kn(t,"merge",["boolean"]);const r=Array.isArray(e)?e:[e],n=this.getOptions();r.find((e=>!n.includes(e)))&&this.enableEditing(),this.markAsDirty(),(r.length>1||1===r.length&&t)&&this.enableMultiselect();const s=new Array(r.length);for(let i=0,o=r.length;i<o;i++)s[i]=Pi.fromText(r[i]);if(t){const e=this.acroField.getValues();this.acroField.setValues(e.concat(s))}else this.acroField.setValues(s)}clear(){this.markAsDirty(),this.acroField.setValues([])}setFontSize(e){On(e,"fontSize"),this.acroField.setFontSize(e),this.markAsDirty()}isEditable(){return this.acroField.hasFlag(Ko.Edit)}enableEditing(){this.acroField.setFlagTo(Ko.Edit,!0)}disableEditing(){this.acroField.setFlagTo(Ko.Edit,!1)}isSorted(){return this.acroField.hasFlag(Ko.Sort)}enableSorting(){this.acroField.setFlagTo(Ko.Sort,!0)}disableSorting(){this.acroField.setFlagTo(Ko.Sort,!1)}isMultiselect(){return this.acroField.hasFlag(Ko.MultiSelect)}enableMultiselect(){this.acroField.setFlagTo(Ko.MultiSelect,!0)}disableMultiselect(){this.acroField.setFlagTo(Ko.MultiSelect,!1)}isSpellChecked(){return!this.acroField.hasFlag(Ko.DoNotSpellCheck)}enableSpellChecking(){this.acroField.setFlagTo(Ko.DoNotSpellCheck,!1)}disableSpellChecking(){this.acroField.setFlagTo(Ko.DoNotSpellCheck,!0)}isSelectOnClick(){return this.acroField.hasFlag(Ko.CommitOnSelChange)}enableSelectOnClick(){this.acroField.setFlagTo(Ko.CommitOnSelChange,!0)}disableSelectOnClick(){this.acroField.setFlagTo(Ko.CommitOnSelChange,!1)}addToPage(e,t){var r,n,s,i,o,A,a;kn(e,"page",[[Ju,"PDFPage"]]),Vc(t),t||(t={}),"textColor"in t||(t.textColor=yl(0,0,0)),"backgroundColor"in t||(t.backgroundColor=yl(1,1,1)),"borderColor"in t||(t.borderColor=yl(0,0,0)),"borderWidth"in t||(t.borderWidth=1);const l=this.createWidget({x:null!==(r=t.x)&&void 0!==r?r:0,y:null!==(n=t.y)&&void 0!==n?n:0,width:null!==(s=t.width)&&void 0!==s?s:200,height:null!==(i=t.height)&&void 0!==i?i:50,textColor:t.textColor,backgroundColor:t.backgroundColor,borderColor:t.borderColor,borderWidth:null!==(o=t.borderWidth)&&void 0!==o?o:0,rotate:null!==(A=t.rotate)&&void 0!==A?A:ra(0),hidden:t.hidden,page:e.ref}),c=this.doc.context.register(l.dict);this.acroField.addWidget(c);const u=null!==(a=t.font)&&void 0!==a?a:this.doc.getForm().getDefaultFont();this.updateWidgetAppearance(l,u),e.node.addAnnot(c)}needsAppearancesUpdate(){var e;if(this.isDirty())return!0;const t=this.acroField.getWidgets();for(let r=0,n=t.length;r<n;r++){if(!((null===(e=t[r].getAppearances())||void 0===e?void 0:e.normal)instanceof zs))return!0}return!1}defaultUpdateAppearances(e){kn(e,"font",[[Yc,"PDFFont"]]),this.updateAppearances(e)}updateAppearances(e,t){kn(e,"font",[[Yc,"PDFFont"]]),Rn(t,"provider",[Function]);const r=this.acroField.getWidgets();for(let n=0,s=r.length;n<s;n++){const s=r[n];this.updateWidgetAppearance(s,e,t)}this.markAsClean()}updateWidgetAppearance(e,t,r){const n=Lc((null!==r&&void 0!==r?r:Xc)(this,e,t));this.updateWidgetAppearanceWithFont(e,t,n)}}Kc.of=(e,t,r)=>new Kc(e,t,r);class Jc extends qc{constructor(e,t,r){super(e,t,r),kn(e,"acroListBox",[[uA,"PDFAcroListBox"]]),this.acroField=e}getOptions(){const e=this.acroField.getOptions(),t=new Array(e.length);for(let r=0,n=t.length;r<n;r++){const{display:n,value:s}=e[r];t[r]=(null!==n&&void 0!==n?n:s).decodeText()}return t}getSelected(){const e=this.acroField.getValues(),t=new Array(e.length);for(let r=0,n=e.length;r<n;r++)t[r]=e[r].decodeText();return t}setOptions(e){kn(e,"options",[Array]),this.markAsDirty();const t=new Array(e.length);for(let r=0,n=e.length;r<n;r++)t[r]={value:Pi.fromText(e[r])};this.acroField.setOptions(t)}addOptions(e){kn(e,"options",["string",Array]),this.markAsDirty();const t=Array.isArray(e)?e:[e],r=this.acroField.getOptions(),n=new Array(t.length);for(let s=0,i=t.length;s<i;s++)n[s]={value:Pi.fromText(t[s])};this.acroField.setOptions(r.concat(n))}select(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];kn(e,"options",["string",Array]),kn(t,"merge",["boolean"]);const r=Array.isArray(e)?e:[e],n=this.getOptions();Ln(r,"option",n),this.markAsDirty(),(r.length>1||1===r.length&&t)&&this.enableMultiselect();const s=new Array(r.length);for(let i=0,o=r.length;i<o;i++)s[i]=Pi.fromText(r[i]);if(t){const e=this.acroField.getValues();this.acroField.setValues(e.concat(s))}else this.acroField.setValues(s)}clear(){this.markAsDirty(),this.acroField.setValues([])}setFontSize(e){On(e,"fontSize"),this.acroField.setFontSize(e),this.markAsDirty()}isSorted(){return this.acroField.hasFlag(Ko.Sort)}enableSorting(){this.acroField.setFlagTo(Ko.Sort,!0)}disableSorting(){this.acroField.setFlagTo(Ko.Sort,!1)}isMultiselect(){return this.acroField.hasFlag(Ko.MultiSelect)}enableMultiselect(){this.acroField.setFlagTo(Ko.MultiSelect,!0)}disableMultiselect(){this.acroField.setFlagTo(Ko.MultiSelect,!1)}isSelectOnClick(){return this.acroField.hasFlag(Ko.CommitOnSelChange)}enableSelectOnClick(){this.acroField.setFlagTo(Ko.CommitOnSelChange,!0)}disableSelectOnClick(){this.acroField.setFlagTo(Ko.CommitOnSelChange,!1)}addToPage(e,t){var r,n,s,i,o,A,a;kn(e,"page",[[Ju,"PDFPage"]]),Vc(t),t||(t={}),"textColor"in t||(t.textColor=yl(0,0,0)),"backgroundColor"in t||(t.backgroundColor=yl(1,1,1)),"borderColor"in t||(t.borderColor=yl(0,0,0)),"borderWidth"in t||(t.borderWidth=1);const l=this.createWidget({x:null!==(r=t.x)&&void 0!==r?r:0,y:null!==(n=t.y)&&void 0!==n?n:0,width:null!==(s=t.width)&&void 0!==s?s:200,height:null!==(i=t.height)&&void 0!==i?i:100,textColor:t.textColor,backgroundColor:t.backgroundColor,borderColor:t.borderColor,borderWidth:null!==(o=t.borderWidth)&&void 0!==o?o:0,rotate:null!==(A=t.rotate)&&void 0!==A?A:ra(0),hidden:t.hidden,page:e.ref}),c=this.doc.context.register(l.dict);this.acroField.addWidget(c);const u=null!==(a=t.font)&&void 0!==a?a:this.doc.getForm().getDefaultFont();this.updateWidgetAppearance(l,u),e.node.addAnnot(c)}needsAppearancesUpdate(){var e;if(this.isDirty())return!0;const t=this.acroField.getWidgets();for(let r=0,n=t.length;r<n;r++){if(!((null===(e=t[r].getAppearances())||void 0===e?void 0:e.normal)instanceof zs))return!0}return!1}defaultUpdateAppearances(e){kn(e,"font",[[Yc,"PDFFont"]]),this.updateAppearances(e)}updateAppearances(e,t){kn(e,"font",[[Yc,"PDFFont"]]),Rn(t,"provider",[Function]);const r=this.acroField.getWidgets();for(let n=0,s=r.length;n<s;n++){const s=r[n];this.updateWidgetAppearance(s,e,t)}this.markAsClean()}updateWidgetAppearance(e,t,r){const n=Lc((null!==r&&void 0!==r?r:Oc)(this,e,t));this.updateWidgetAppearanceWithFont(e,t,n)}}Jc.of=(e,t,r)=>new Jc(e,t,r);class _c extends qc{constructor(e,t,r){super(e,t,r),kn(e,"acroRadioButton",[[lA,"PDFAcroRadioButton"]]),this.acroField=e}getOptions(){const e=this.acroField.getExportValues();if(e){const t=new Array(e.length);for(let r=0,n=e.length;r<n;r++)t[r]=e[r].decodeText();return t}const t=this.acroField.getOnValues(),r=new Array(t.length);for(let n=0,s=r.length;n<s;n++)r[n]=t[n].decodeText();return r}getSelected(){const e=this.acroField.getValue();if(e===js.of("Off"))return;const t=this.acroField.getExportValues();if(t){const r=this.acroField.getOnValues();for(let n=0,s=r.length;n<s;n++)if(r[n]===e)return t[n].decodeText()}return e.decodeText()}select(e){kn(e,"option",["string"]);const t=this.getOptions();Pn(e,"option",t),this.markAsDirty();const r=this.acroField.getOnValues(),n=this.acroField.getExportValues();if(n)for(let s=0,i=n.length;s<i;s++)n[s].decodeText()===e&&this.acroField.setValue(r[s]);else for(let s=0,i=r.length;s<i;s++){const t=r[s];t.decodeText()===e&&this.acroField.setValue(t)}}clear(){this.markAsDirty(),this.acroField.setValue(js.of("Off"))}isOffToggleable(){return!this.acroField.hasFlag(qo.NoToggleToOff)}enableOffToggling(){this.acroField.setFlagTo(qo.NoToggleToOff,!1)}disableOffToggling(){this.acroField.setFlagTo(qo.NoToggleToOff,!0)}isMutuallyExclusive(){return!this.acroField.hasFlag(qo.RadiosInUnison)}enableMutualExclusion(){this.acroField.setFlagTo(qo.RadiosInUnison,!1)}disableMutualExclusion(){this.acroField.setFlagTo(qo.RadiosInUnison,!0)}addOptionToPage(e,t,r){var n,s,i,o,A,a,l,c,u;kn(e,"option",["string"]),kn(t,"page",[[Ju,"PDFPage"]]),Vc(r);const d=this.createWidget({x:null!==(n=null===r||void 0===r?void 0:r.x)&&void 0!==n?n:0,y:null!==(s=null===r||void 0===r?void 0:r.y)&&void 0!==s?s:0,width:null!==(i=null===r||void 0===r?void 0:r.width)&&void 0!==i?i:50,height:null!==(o=null===r||void 0===r?void 0:r.height)&&void 0!==o?o:50,textColor:null!==(A=null===r||void 0===r?void 0:r.textColor)&&void 0!==A?A:yl(0,0,0),backgroundColor:null!==(a=null===r||void 0===r?void 0:r.backgroundColor)&&void 0!==a?a:yl(1,1,1),borderColor:null!==(l=null===r||void 0===r?void 0:r.borderColor)&&void 0!==l?l:yl(0,0,0),borderWidth:null!==(c=null===r||void 0===r?void 0:r.borderWidth)&&void 0!==c?c:1,rotate:null!==(u=null===r||void 0===r?void 0:r.rotate)&&void 0!==u?u:ra(0),hidden:null===r||void 0===r?void 0:r.hidden,page:t.ref}),h=this.doc.context.register(d.dict),f=this.acroField.addWidgetWithOpt(h,Pi.fromText(e),!this.isMutuallyExclusive());d.setAppearanceState(js.of("Off")),this.updateWidgetAppearance(d,f),t.node.addAnnot(h)}needsAppearancesUpdate(){var e;const t=this.acroField.getWidgets();for(let r=0,n=t.length;r<n;r++){const n=t[r],s=n.getAppearanceState(),i=null===(e=n.getAppearances())||void 0===e?void 0:e.normal;if(!(i instanceof Os))return!0;if(s&&!i.has(s))return!0}return!1}defaultUpdateAppearances(){this.updateAppearances()}updateAppearances(e){Rn(e,"provider",[Function]);const t=this.acroField.getWidgets();for(let r=0,n=t.length;r<n;r++){const n=t[r],s=n.getOnValue();s&&this.updateWidgetAppearance(n,s,e)}}updateWidgetAppearance(e,t,r){const n=Lc((null!==r&&void 0!==r?r:Wc)(this,e));this.updateOnOffWidgetAppearance(e,t,n)}}_c.of=(e,t,r)=>new _c(e,t,r);class $c extends qc{constructor(e,t,r){super(e,t,r),kn(e,"acroSignature",[[nA,"PDFAcroSignature"]]),this.acroField=e}needsAppearancesUpdate(){return!1}}$c.of=(e,t,r)=>new $c(e,t,r);class eu extends qc{constructor(e,t,r){super(e,t,r),kn(e,"acroText",[[iA,"PDFAcroText"]]),this.acroField=e}getText(){const e=this.acroField.getValue();if(!e&&this.isRichFormatted())throw new bc(this.getName());return null===e||void 0===e?void 0:e.decodeText()}setText(e){Rn(e,"text",["string"]);const t=this.getMaxLength();if(void 0!==t&&e&&e.length>t)throw new Bc(e.length,t,this.getName());this.markAsDirty(),this.disableRichFormatting(),e?this.acroField.setValue(Pi.fromText(e)):this.acroField.removeValue()}getAlignment(){const e=this.acroField.getQuadding();return 0===e?Cc.Left:1===e?Cc.Center:2===e?Cc.Right:Cc.Left}setAlignment(e){Pn(e,"alignment",Cc),this.markAsDirty(),this.acroField.setQuadding(e)}getMaxLength(){return this.acroField.getMaxLength()}setMaxLength(e){if(jn(e,"maxLength",0,Number.MAX_SAFE_INTEGER),this.markAsDirty(),void 0===e)this.acroField.removeMaxLength();else{const t=this.getText();if(t&&t.length>e)throw new Ec(t.length,e,this.getName());this.acroField.setMaxLength(e)}}removeMaxLength(){this.markAsDirty(),this.acroField.removeMaxLength()}setImage(e){const t=this.getAlignment(),r=t===Cc.Center?Uc.Center:t===Cc.Right?Uc.Right:Uc.Left,n=this.acroField.getWidgets();for(let s=0,i=n.length;s<i;s++){const t=n[s],i=this.createImageAppearanceStream(t,e,r);this.updateWidgetAppearances(t,{normal:i})}this.markAsClean()}setFontSize(e){On(e,"fontSize"),this.acroField.setFontSize(e),this.markAsDirty()}isMultiline(){return this.acroField.hasFlag(Zo.Multiline)}enableMultiline(){this.markAsDirty(),this.acroField.setFlagTo(Zo.Multiline,!0)}disableMultiline(){this.markAsDirty(),this.acroField.setFlagTo(Zo.Multiline,!1)}isPassword(){return this.acroField.hasFlag(Zo.Password)}enablePassword(){this.acroField.setFlagTo(Zo.Password,!0)}disablePassword(){this.acroField.setFlagTo(Zo.Password,!1)}isFileSelector(){return this.acroField.hasFlag(Zo.FileSelect)}enableFileSelection(){this.acroField.setFlagTo(Zo.FileSelect,!0)}disableFileSelection(){this.acroField.setFlagTo(Zo.FileSelect,!1)}isSpellChecked(){return!this.acroField.hasFlag(Zo.DoNotSpellCheck)}enableSpellChecking(){this.acroField.setFlagTo(Zo.DoNotSpellCheck,!1)}disableSpellChecking(){this.acroField.setFlagTo(Zo.DoNotSpellCheck,!0)}isScrollable(){return!this.acroField.hasFlag(Zo.DoNotScroll)}enableScrolling(){this.acroField.setFlagTo(Zo.DoNotScroll,!1)}disableScrolling(){this.acroField.setFlagTo(Zo.DoNotScroll,!0)}isCombed(){return this.acroField.hasFlag(Zo.Comb)&&!this.isMultiline()&&!this.isPassword()&&!this.isFileSelector()&&void 0!==this.getMaxLength()}enableCombing(){if(void 0===this.getMaxLength()){const e="PDFTextFields must have a max length in order to be combed";console.warn(e)}this.markAsDirty(),this.disableMultiline(),this.disablePassword(),this.disableFileSelection(),this.acroField.setFlagTo(Zo.Comb,!0)}disableCombing(){this.markAsDirty(),this.acroField.setFlagTo(Zo.Comb,!1)}isRichFormatted(){return this.acroField.hasFlag(Zo.RichText)}enableRichFormatting(){this.acroField.setFlagTo(Zo.RichText,!0)}disableRichFormatting(){this.acroField.setFlagTo(Zo.RichText,!1)}addToPage(e,t){var r,n,s,i,o,A,a;kn(e,"page",[[Ju,"PDFPage"]]),Vc(t),t||(t={}),"textColor"in t||(t.textColor=yl(0,0,0)),"backgroundColor"in t||(t.backgroundColor=yl(1,1,1)),"borderColor"in t||(t.borderColor=yl(0,0,0)),"borderWidth"in t||(t.borderWidth=1);const l=this.createWidget({x:null!==(r=t.x)&&void 0!==r?r:0,y:null!==(n=t.y)&&void 0!==n?n:0,width:null!==(s=t.width)&&void 0!==s?s:200,height:null!==(i=t.height)&&void 0!==i?i:50,textColor:t.textColor,backgroundColor:t.backgroundColor,borderColor:t.borderColor,borderWidth:null!==(o=t.borderWidth)&&void 0!==o?o:0,rotate:null!==(A=t.rotate)&&void 0!==A?A:ra(0),hidden:t.hidden,page:e.ref}),c=this.doc.context.register(l.dict);this.acroField.addWidget(c);const u=null!==(a=t.font)&&void 0!==a?a:this.doc.getForm().getDefaultFont();this.updateWidgetAppearance(l,u),e.node.addAnnot(c)}needsAppearancesUpdate(){var e;if(this.isDirty())return!0;const t=this.acroField.getWidgets();for(let r=0,n=t.length;r<n;r++){if(!((null===(e=t[r].getAppearances())||void 0===e?void 0:e.normal)instanceof zs))return!0}return!1}defaultUpdateAppearances(e){kn(e,"font",[[Yc,"PDFFont"]]),this.updateAppearances(e)}updateAppearances(e,t){kn(e,"font",[[Yc,"PDFFont"]]),Rn(t,"provider",[Function]);const r=this.acroField.getWidgets();for(let n=0,s=r.length;n<s;n++){const s=r[n];this.updateWidgetAppearance(s,e,t)}this.markAsClean()}updateWidgetAppearance(e,t,r){const n=Lc((null!==r&&void 0!==r?r:Gc)(this,e,t));this.updateWidgetAppearanceWithFont(e,t,n)}}var tu;eu.of=(e,t,r)=>new eu(e,t,r),function(e){e.Courier="Courier",e.CourierBold="Courier-Bold",e.CourierOblique="Courier-Oblique",e.CourierBoldOblique="Courier-BoldOblique",e.Helvetica="Helvetica",e.HelveticaBold="Helvetica-Bold",e.HelveticaOblique="Helvetica-Oblique",e.HelveticaBoldOblique="Helvetica-BoldOblique",e.TimesRoman="Times-Roman",e.TimesRomanBold="Times-Bold",e.TimesRomanItalic="Times-Italic",e.TimesRomanBoldItalic="Times-BoldItalic",e.Symbol="Symbol",e.ZapfDingbats="ZapfDingbats"}(tu||(tu={}));class ru{constructor(e,t){this.embedDefaultFont=()=>this.doc.embedStandardFont(tu.Helvetica),kn(e,"acroForm",[[BA,"PDFAcroForm"]]),kn(t,"doc",[[Du,"PDFDocument"]]),this.acroForm=e,this.doc=t,this.dirtyFields=new Set,this.defaultFontCache=Un.populatedBy(this.embedDefaultFont)}hasXFA(){return this.acroForm.dict.has(js.of("XFA"))}deleteXFA(){this.acroForm.dict.delete(js.of("XFA"))}getFields(){const e=this.acroForm.getAllFields(),t=[];for(let r=0,n=e.length;r<n;r++){const[n,s]=e[r],i=nu(n,s,this.doc);i&&t.push(i)}return t}getFieldMaybe(e){kn(e,"name",["string"]);const t=this.getFields();for(let r=0,n=t.length;r<n;r++){const n=t[r];if(n.getName()===e)return n}}getField(e){kn(e,"name",["string"]);const t=this.getFieldMaybe(e);if(t)return t;throw new fc(e)}getButton(e){kn(e,"name",["string"]);const t=this.getField(e);if(t instanceof _u)return t;throw new gc(e,_u,t)}getCheckBox(e){kn(e,"name",["string"]);const t=this.getField(e);if(t instanceof Zc)return t;throw new gc(e,Zc,t)}getDropdown(e){kn(e,"name",["string"]);const t=this.getField(e);if(t instanceof Kc)return t;throw new gc(e,Kc,t)}getOptionList(e){kn(e,"name",["string"]);const t=this.getField(e);if(t instanceof Jc)return t;throw new gc(e,Jc,t)}getRadioGroup(e){kn(e,"name",["string"]);const t=this.getField(e);if(t instanceof _c)return t;throw new gc(e,_c,t)}getSignature(e){kn(e,"name",["string"]);const t=this.getField(e);if(t instanceof $c)return t;throw new gc(e,$c,t)}getTextField(e){kn(e,"name",["string"]);const t=this.getField(e);if(t instanceof eu)return t;throw new gc(e,eu,t)}createButton(e){kn(e,"name",["string"]);const t=su(e),r=this.findOrCreateNonTerminals(t.nonTerminal),n=AA.create(this.doc.context);return n.setPartialName(t.terminal),iu(r,[n,n.ref],t.terminal),_u.of(n,n.ref,this.doc)}createCheckBox(e){kn(e,"name",["string"]);const t=su(e),r=this.findOrCreateNonTerminals(t.nonTerminal),n=Ho.create(this.doc.context);return n.setPartialName(t.terminal),iu(r,[n,n.ref],t.terminal),Zc.of(n,n.ref,this.doc)}createDropdown(e){kn(e,"name",["string"]);const t=su(e),r=this.findOrCreateNonTerminals(t.nonTerminal),n=$o.create(this.doc.context);return n.setPartialName(t.terminal),iu(r,[n,n.ref],t.terminal),Kc.of(n,n.ref,this.doc)}createOptionList(e){kn(e,"name",["string"]);const t=su(e),r=this.findOrCreateNonTerminals(t.nonTerminal),n=uA.create(this.doc.context);return n.setPartialName(t.terminal),iu(r,[n,n.ref],t.terminal),Jc.of(n,n.ref,this.doc)}createRadioGroup(e){kn(e,"name",["string"]);const t=su(e),r=this.findOrCreateNonTerminals(t.nonTerminal),n=lA.create(this.doc.context);return n.setPartialName(t.terminal),iu(r,[n,n.ref],t.terminal),_c.of(n,n.ref,this.doc)}createTextField(e){kn(e,"name",["string"]);const t=su(e),r=this.findOrCreateNonTerminals(t.nonTerminal),n=iA.create(this.doc.context);return n.setPartialName(t.terminal),iu(r,[n,n.ref],t.terminal),eu.of(n,n.ref,this.doc)}flatten(){(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{updateFieldAppearances:!0}).updateFieldAppearances&&this.updateFieldAppearances();const e=this.getFields();for(let r=0,n=e.length;r<n;r++){const n=e[r],s=n.acroField.getWidgets();for(let e=0,r=s.length;e<r;e++)try{const t=s[e],r=this.findWidgetPage(t),i=this.findWidgetAppearanceRef(n,t),o=r.node.newXObject("FlatWidget",i),A=t.getRectangle(),a=[La(),wa(A.x,A.y),...nc({...A,rotation:0}),ll(o),Ma()].filter(Boolean);r.pushOperators(...a)}catch(t){console.error(t)}this.removeField(n)}}removeField(e){const t=e.acroField.getWidgets(),r=new Set;for(let o=0,A=t.length;o<A;o++)try{const n=t[o],s=this.findWidgetAppearanceRef(e,n),i=this.findWidgetPage(n);r.add(i),i.node.removeAnnot(s)}catch(i){console.error(i)}r.forEach((t=>t.node.removeAnnot(e.ref))),this.acroForm.removeField(e.acroField);const n=e.acroField.normalizedEntries().Kids,s=n.size();for(let o=0;o<s;o++){const e=n.get(o);e instanceof Zs&&this.doc.context.delete(e)}this.doc.context.delete(e.ref)}updateFieldAppearances(e){Rn(e,"font",[[Yc,"PDFFont"]]),e=null!==e&&void 0!==e?e:this.getDefaultFont();const t=this.getFields();for(let r=0,n=t.length;r<n;r++){const n=t[r];n.needsAppearancesUpdate()&&n.defaultUpdateAppearances(e)}}markFieldAsDirty(e){Rn(e,"fieldRef",[[Zs,"PDFRef"]]),this.dirtyFields.add(e)}markFieldAsClean(e){Rn(e,"fieldRef",[[Zs,"PDFRef"]]),this.dirtyFields.delete(e)}fieldIsDirty(e){return Rn(e,"fieldRef",[[Zs,"PDFRef"]]),this.dirtyFields.has(e)}getDefaultFont(){return this.defaultFontCache.access()}findWidgetPage(e){const t=e.P();let r=this.doc.getPages().find((e=>e.ref===t));if(void 0===r){const t=this.doc.context.getObjectRef(e.dict);if(void 0===t)throw new Error("Could not find PDFRef for PDFObject");if(r=this.doc.findPageForAnnotationRef(t),void 0===r)throw new Error(`Could not find page for PDFRef ${t}`)}return r}findWidgetAppearanceRef(e,t){var r;let n=t.getNormalAppearance();if(n instanceof Os&&(e instanceof Zc||e instanceof _c)){const t=e.acroField.getValue(),s=null!==(r=n.get(t))&&void 0!==r?r:n.get(js.of("Off"));s instanceof Zs&&(n=s)}if(!(n instanceof Zs)){const t=e.getName();throw new Error(`Failed to extract appearance ref for: ${t}`)}return n}findOrCreateNonTerminals(e){let t=[this.acroForm];for(let r=0,n=e.length;r<n;r++){const n=e[r];if(!n)throw new wc(n);const[s,i]=t,o=this.findNonTerminal(n,s);if(o)t=o;else{const e=tA.create(this.doc.context);e.setPartialName(n),e.setParent(i);const r=this.doc.context.register(e.dict);s.addField(r),t=[e,r]}}return t}findNonTerminal(e,t){const r=t instanceof BA?this.acroForm.getFields():dA(t.Kids());for(let n=0,s=r.length;n<s;n++){const[t,s]=r[n];if(t.getPartialName()===e){if(t instanceof tA)return[t,s];throw new mc(e)}}}}ru.of=(e,t)=>new ru(e,t);const nu=(e,t,r)=>e instanceof AA?_u.of(e,t,r):e instanceof Ho?Zc.of(e,t,r):e instanceof $o?Kc.of(e,t,r):e instanceof uA?Jc.of(e,t,r):e instanceof iA?eu.of(e,t,r):e instanceof lA?_c.of(e,t,r):e instanceof nA?$c.of(e,t,r):void 0,su=e=>{if(0===e.length)throw new Error("PDF field names must not be empty strings");const t=e.split(".");for(let r=0,n=t.length;r<n;r++)if(""===t[r])throw new Error(`Periods in PDF field names must be separated by at least one character: "${e}"`);return 1===t.length?{nonTerminal:[],terminal:t[0]}:{nonTerminal:t.slice(0,t.length-1),terminal:t[t.length-1]}},iu=(e,t,r)=>{let[n,s]=e,[i,o]=t;const A=n.normalizedEntries(),a=dA("Kids"in A?A.Kids:A.Fields);for(let l=0,c=a.length;l<c;l++)if(a[l][0].getPartialName()===r)throw new mc(r);n.addField(o),i.setParent(s)},ou={"4A0":[4767.87,6740.79],"2A0":[3370.39,4767.87],A0:[2383.94,3370.39],A1:[1683.78,2383.94],A2:[1190.55,1683.78],A3:[841.89,1190.55],A4:[595.28,841.89],A5:[419.53,595.28],A6:[297.64,419.53],A7:[209.76,297.64],A8:[147.4,209.76],A9:[104.88,147.4],A10:[73.7,104.88],B0:[2834.65,4008.19],B1:[2004.09,2834.65],B2:[1417.32,2004.09],B3:[1000.63,1417.32],B4:[708.66,1000.63],B5:[498.9,708.66],B6:[354.33,498.9],B7:[249.45,354.33],B8:[175.75,249.45],B9:[124.72,175.75],B10:[87.87,124.72],C0:[2599.37,3676.54],C1:[1836.85,2599.37],C2:[1298.27,1836.85],C3:[918.43,1298.27],C4:[649.13,918.43],C5:[459.21,649.13],C6:[323.15,459.21],C7:[229.61,323.15],C8:[161.57,229.61],C9:[113.39,161.57],C10:[79.37,113.39],RA0:[2437.8,3458.27],RA1:[1729.13,2437.8],RA2:[1218.9,1729.13],RA3:[864.57,1218.9],RA4:[609.45,864.57],SRA0:[2551.18,3628.35],SRA1:[1814.17,2551.18],SRA2:[1275.59,1814.17],SRA3:[907.09,1275.59],SRA4:[637.8,907.09],Executive:[521.86,756],Folio:[612,936],Legal:[612,1008],Letter:[612,792],Tabloid:[792,1224]};var Au;!function(e){e[e.Fastest=1/0]="Fastest",e[e.Fast=1500]="Fast",e[e.Medium=500]="Medium",e[e.Slow=100]="Slow"}(Au||(Au={}));class au{constructor(e,t,r){this.alreadyEmbedded=!1,this.ref=e,this.doc=t,this.embedder=r}async embed(){if(!this.alreadyEmbedded){const e=await this.embedder.embedIntoContext(this.doc.context,this.ref);this.doc.catalog.has(js.of("Names"))||this.doc.catalog.set(js.of("Names"),this.doc.context.obj({}));const t=this.doc.catalog.lookup(js.of("Names"),Os);t.has(js.of("EmbeddedFiles"))||t.set(js.of("EmbeddedFiles"),this.doc.context.obj({}));const r=t.lookup(js.of("EmbeddedFiles"),Os);r.has(js.of("Names"))||r.set(js.of("Names"),this.doc.context.obj([]));const n=r.lookup(js.of("Names"),Ps);n.push(Pi.fromText(this.embedder.fileName)),n.push(e),this.doc.catalog.has(js.of("AF"))||this.doc.catalog.set(js.of("AF"),this.doc.context.obj([]));this.doc.catalog.lookup(js.of("AF"),Ps).push(e),this.alreadyEmbedded=!0}}}au.of=(e,t,r)=>new au(e,t,r);class lu{constructor(e,t,r){this.alreadyEmbedded=!1,this.ref=e,this.doc=t,this.embedder=r}async embed(){if(!this.alreadyEmbedded){const{catalog:e,context:t}=this.doc,r=await this.embedder.embedIntoContext(this.doc.context,this.ref);e.has(js.of("Names"))||e.set(js.of("Names"),t.obj({}));const n=e.lookup(js.of("Names"),Os);n.has(js.of("JavaScript"))||n.set(js.of("JavaScript"),t.obj({}));const s=n.lookup(js.of("JavaScript"),Os);s.has(js.of("Names"))||s.set(js.of("Names"),t.obj([]));const i=s.lookup(js.of("Names"),Ps);i.push(Pi.fromText(this.embedder.scriptName)),i.push(r),this.alreadyEmbedded=!0}}}lu.of=(e,t,r)=>new lu(e,t,r);class cu{constructor(e,t){this.script=e,this.scriptName=t}static for(e,t){return new cu(e,t)}async embedIntoContext(e,t){const r=e.obj({Type:"Action",S:"JavaScript",JS:Pi.fromText(this.script)});return t?(e.assign(t,r),t):e.register(r)}}const uu=cu;const du=class extends oo{constructor(e,t,r){super(r),this.stream=e,this.decrypt=t,this.nextChunk=null,this.initialized=!1}readBlock(){let e;if(this.initialized?e=this.nextChunk:(e=this.stream.getBytes(512),this.initialized=!0),!e||0===e.length)return void(this.eof=!0);this.nextChunk=this.stream.getBytes(512);const t=this.nextChunk&&this.nextChunk.length>0;e=(0,this.decrypt)(e,!t);const r=this.bufferLength,n=r+e.length;this.ensureBuffer(n).set(e,r),this.bufferLength=n}};class hu{constructor(e){this.a=0,this.b=0;const t=new Uint8Array(256),r=e.length;for(let n=0;n<256;++n)t[n]=n;for(let n=0,s=0;n<256;++n){const i=t[n];s=s+i+e[n%r]&255,t[n]=t[s],t[s]=i}this.s=t}encryptBlock(e){let t=this.a,r=this.b;const n=this.s,s=e.length,i=new Uint8Array(s);for(let o=0;o<s;++o){t=t+1&255;const s=n[t];r=r+s&255;const A=n[r];n[t]=A,n[r]=s,i[o]=e[o]^n[s+A&255]}return this.a=t,this.b=r,i}decryptBlock(e){return this.encryptBlock(e)}encrypt(e){return this.encryptBlock(e)}}const fu=function(){const e=new Uint8Array([7,12,17,22,7,12,17,22,7,12,17,22,7,12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,15,21,6,10,15,21,6,10,15,21,6,10,15,21]),t=new Int32Array([-680876936,-389564586,606105819,-1044525330,-176418897,1200080426,-1473231341,-45705983,1770035416,-1958414417,-42063,-1990404162,1804603682,-40341101,-1502002290,1236535329,-165796510,-1069501632,643717713,-373897302,-701558691,38016083,-660478335,-405537848,568446438,-1019803690,-187363961,1163531501,-1444681467,-51403784,1735328473,-1926607734,-378558,-2022574463,1839030562,-35309556,-1530992060,1272893353,-155497632,-1094730640,681279174,-358537222,-722521979,76029189,-640364487,-421815835,530742520,-995338651,-198630844,1126891415,-1416354905,-57434055,1700485571,-1894986606,-1051523,-2054922799,1873313359,-30611744,-1560198380,1309151649,-145523070,-1120210379,718787259,-343485551]);return function(r,n,s){let i=1732584193,o=-271733879,A=-1732584194,a=271733878;const l=s+72&-64,c=new Uint8Array(l);let u,d;for(u=0;u<s;++u)c[u]=r[n++];c[u++]=128;const h=l-8;for(;u<h;)c[u++]=0;c[u++]=s<<3&255,c[u++]=s>>5&255,c[u++]=s>>13&255,c[u++]=s>>21&255,c[u++]=s>>>29&255,c[u++]=0,c[u++]=0,c[u++]=0;const f=new Int32Array(16);for(u=0;u<l;){for(d=0;d<16;++d,u+=4)f[d]=c[u]|c[u+1]<<8|c[u+2]<<16|c[u+3]<<24;let r,n,s=i,l=o,h=A,g=a;for(d=0;d<64;++d){d<16?(r=l&h|~l&g,n=d):d<32?(r=g&l|~g&h,n=5*d+1&15):d<48?(r=l^h^g,n=3*d+5&15):(r=h^(l|~g),n=7*d&15);const i=g,o=s+r+t[d]+f[n]|0,A=e[d];g=h,h=l,l=l+(o<<A|o>>>32-A)|0,s=i}i=i+s|0,o=o+l|0,A=A+h|0,a=a+g|0}return new Uint8Array([255&i,i>>8&255,i>>16&255,i>>>24&255,255&o,o>>8&255,o>>16&255,o>>>24&255,255&A,A>>8&255,A>>16&255,A>>>24&255,255&a,a>>8&255,a>>16&255,a>>>24&255])}}();class gu{constructor(e,t){this.high=0|e,this.low=0|t}and(e){this.high&=e.high,this.low&=e.low}xor(e){this.high^=e.high,this.low^=e.low}or(e){this.high|=e.high,this.low|=e.low}shiftRight(e){e>=32?(this.low=this.high>>>e-32|0,this.high=0):(this.low=this.low>>>e|this.high<<32-e,this.high=this.high>>>e|0)}shiftLeft(e){e>=32?(this.high=this.low<<e-32,this.low=0):(this.high=this.high<<e|this.low>>>32-e,this.low<<=e)}rotateRight(e){let t,r;32&e?(r=this.low,t=this.high):(t=this.low,r=this.high),e&=31,this.low=t>>>e|r<<32-e,this.high=r>>>e|t<<32-e}not(){this.high=~this.high,this.low=~this.low}add(e){const t=(this.low>>>0)+(e.low>>>0);let r=(this.high>>>0)+(e.high>>>0);t>4294967295&&(r+=1),this.low=0|t,this.high=0|r}copyTo(e,t){e[t]=this.high>>>24&255,e[t+1]=this.high>>16&255,e[t+2]=this.high>>8&255,e[t+3]=255&this.high,e[t+4]=this.low>>>24&255,e[t+5]=this.low>>16&255,e[t+6]=this.low>>8&255,e[t+7]=255&this.low}assign(e){this.high=e.high,this.low=e.low}}const pu=function(){function e(e,t){return e>>>t|e<<32-t}function t(e,t,r){return e&t^~e&r}function r(e,t,r){return e&t^e&r^t&r}function n(t){return e(t,2)^e(t,13)^e(t,22)}function s(t){return e(t,6)^e(t,11)^e(t,25)}function i(t){return e(t,7)^e(t,18)^t>>>3}const o=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];return function(A,a,l){let c=1779033703,u=3144134277,d=1013904242,h=2773480762,f=1359893119,g=2600822924,p=528734635,m=1541459225;const w=64*Math.ceil((l+9)/64),v=new Uint8Array(w);let b,y;for(b=0;b<l;++b)v[b]=A[a++];v[b++]=128;const B=w-8;for(;b<B;)v[b++]=0;v[b++]=0,v[b++]=0,v[b++]=0,v[b++]=l>>>29&255,v[b++]=l>>21&255,v[b++]=l>>13&255,v[b++]=l>>5&255,v[b++]=l<<3&255;const E=new Uint32Array(64);for(b=0;b<w;){for(y=0;y<16;++y)E[y]=v[b]<<24|v[b+1]<<16|v[b+2]<<8|v[b+3],b+=4;for(y=16;y<64;++y)E[y]=0|(e(C=E[y-2],17)^e(C,19)^C>>>10)+E[y-7]+i(E[y-15])+E[y-16];let A,a,l=c,w=u,B=d,x=h,I=f,D=g,Q=p,P=m;for(y=0;y<64;++y)A=P+s(I)+t(I,D,Q)+o[y]+E[y],a=n(l)+r(l,w,B),P=Q,Q=D,D=I,I=x+A|0,x=B,B=w,w=l,l=A+a|0;c=c+l|0,u=u+w|0,d=d+B|0,h=h+x|0,f=f+I|0,g=g+D|0,p=p+Q|0,m=m+P|0}var C;return new Uint8Array([c>>24&255,c>>16&255,c>>8&255,255&c,u>>24&255,u>>16&255,u>>8&255,255&u,d>>24&255,d>>16&255,d>>8&255,255&d,h>>24&255,h>>16&255,h>>8&255,255&h,f>>24&255,f>>16&255,f>>8&255,255&f,g>>24&255,g>>16&255,g>>8&255,255&g,p>>24&255,p>>16&255,p>>8&255,255&p,m>>24&255,m>>16&255,m>>8&255,255&m])}}(),mu=function(){function e(e,t,r,n,s){e.assign(t),e.and(r),s.assign(t),s.not(),s.and(n),e.xor(s)}function t(e,t,r,n,s){e.assign(t),e.and(r),s.assign(t),s.and(n),e.xor(s),s.assign(r),s.and(n),e.xor(s)}function r(e,t,r){e.assign(t),e.rotateRight(28),r.assign(t),r.rotateRight(34),e.xor(r),r.assign(t),r.rotateRight(39),e.xor(r)}function n(e,t,r){e.assign(t),e.rotateRight(14),r.assign(t),r.rotateRight(18),e.xor(r),r.assign(t),r.rotateRight(41),e.xor(r)}function s(e,t,r){e.assign(t),e.rotateRight(1),r.assign(t),r.rotateRight(8),e.xor(r),r.assign(t),r.shiftRight(7),e.xor(r)}function i(e,t,r){e.assign(t),e.rotateRight(19),r.assign(t),r.rotateRight(61),e.xor(r),r.assign(t),r.shiftRight(6),e.xor(r)}const o=[new gu(1116352408,3609767458),new gu(1899447441,602891725),new gu(3049323471,3964484399),new gu(3921009573,2173295548),new gu(961987163,4081628472),new gu(1508970993,3053834265),new gu(2453635748,2937671579),new gu(2870763221,3664609560),new gu(3624381080,2734883394),new gu(310598401,1164996542),new gu(607225278,1323610764),new gu(1426881987,3590304994),new gu(1925078388,4068182383),new gu(2162078206,991336113),new gu(2614888103,633803317),new gu(3248222580,3479774868),new gu(3835390401,2666613458),new gu(4022224774,944711139),new gu(264347078,2341262773),new gu(604807628,2007800933),new gu(770255983,1495990901),new gu(1249150122,1856431235),new gu(1555081692,3175218132),new gu(1996064986,2198950837),new gu(2554220882,3999719339),new gu(2821834349,766784016),new gu(2952996808,2566594879),new gu(3210313671,3203337956),new gu(3336571891,1034457026),new gu(3584528711,2466948901),new gu(113926993,3758326383),new gu(338241895,168717936),new gu(666307205,1188179964),new gu(773529912,1546045734),new gu(1294757372,1522805485),new gu(1396182291,2643833823),new gu(1695183700,2343527390),new gu(1986661051,1014477480),new gu(2177026350,1206759142),new gu(2456956037,344077627),new gu(2730485921,1290863460),new gu(2820302411,3158454273),new gu(3259730800,3505952657),new gu(3345764771,106217008),new gu(3516065817,3606008344),new gu(3600352804,1432725776),new gu(4094571909,1467031594),new gu(275423344,851169720),new gu(430227734,3100823752),new gu(506948616,1363258195),new gu(659060556,3750685593),new gu(883997877,3785050280),new gu(958139571,3318307427),new gu(1322822218,3812723403),new gu(1537002063,2003034995),new gu(1747873779,3602036899),new gu(1955562222,1575990012),new gu(2024104815,1125592928),new gu(2227730452,2716904306),new gu(2361852424,442776044),new gu(2428436474,593698344),new gu(2756734187,3733110249),new gu(3204031479,2999351573),new gu(3329325298,3815920427),new gu(3391569614,3928383900),new gu(3515267271,566280711),new gu(3940187606,3454069534),new gu(4118630271,4000239992),new gu(116418474,1914138554),new gu(174292421,2731055270),new gu(289380356,3203993006),new gu(460393269,320620315),new gu(685471733,587496836),new gu(852142971,1086792851),new gu(1017036298,365543100),new gu(1126000580,2618297676),new gu(1288033470,3409855158),new gu(1501505948,4234509866),new gu(1607167915,987167468),new gu(1816402316,1246189591)];return function(A,a,l){let c,u,d,h,f,g,p,m,w=arguments.length>3&&void 0!==arguments[3]&&arguments[3];w?(c=new gu(3418070365,3238371032),u=new gu(1654270250,914150663),d=new gu(2438529370,812702999),h=new gu(355462360,4144912697),f=new gu(1731405415,4290775857),g=new gu(2394180231,1750603025),p=new gu(3675008525,1694076839),m=new gu(1203062813,3204075428)):(c=new gu(1779033703,4089235720),u=new gu(3144134277,2227873595),d=new gu(1013904242,4271175723),h=new gu(2773480762,1595750129),f=new gu(1359893119,2917565137),g=new gu(2600822924,725511199),p=new gu(528734635,4215389547),m=new gu(1541459225,327033209));const v=128*Math.ceil((l+17)/128),b=new Uint8Array(v);let y,B;for(y=0;y<l;++y)b[y]=A[a++];b[y++]=128;const E=v-16;for(;y<E;)b[y++]=0;b[y++]=0,b[y++]=0,b[y++]=0,b[y++]=0,b[y++]=0,b[y++]=0,b[y++]=0,b[y++]=0,b[y++]=0,b[y++]=0,b[y++]=0,b[y++]=l>>>29&255,b[y++]=l>>21&255,b[y++]=l>>13&255,b[y++]=l>>5&255,b[y++]=l<<3&255;const C=new Array(80);for(y=0;y<80;y++)C[y]=new gu(0,0);let x=new gu(0,0),I=new gu(0,0),D=new gu(0,0),Q=new gu(0,0),P=new gu(0,0),F=new gu(0,0),L=new gu(0,0),M=new gu(0,0);const S=new gu(0,0),N=new gu(0,0),k=new gu(0,0),R=new gu(0,0);let T,W;for(y=0;y<v;){for(B=0;B<16;++B)C[B].high=b[y]<<24|b[y+1]<<16|b[y+2]<<8|b[y+3],C[B].low=b[y+4]<<24|b[y+5]<<16|b[y+6]<<8|b[y+7],y+=8;for(B=16;B<80;++B)T=C[B],i(T,C[B-2],R),T.add(C[B-7]),s(k,C[B-15],R),T.add(k),T.add(C[B-16]);for(x.assign(c),I.assign(u),D.assign(d),Q.assign(h),P.assign(f),F.assign(g),L.assign(p),M.assign(m),B=0;B<80;++B)S.assign(M),n(k,P,R),S.add(k),e(k,P,F,L,R),S.add(k),S.add(o[B]),S.add(C[B]),r(N,x,R),t(k,x,I,D,R),N.add(k),T=M,M=L,L=F,F=P,Q.add(S),P=Q,Q=D,D=I,I=x,T.assign(S),T.add(N),x=T;c.add(x),u.add(I),d.add(D),h.add(Q),f.add(P),g.add(F),p.add(L),m.add(M)}return w?(W=new Uint8Array(48),c.copyTo(W,0),u.copyTo(W,8),d.copyTo(W,16),h.copyTo(W,24),f.copyTo(W,32),g.copyTo(W,40)):(W=new Uint8Array(64),c.copyTo(W,0),u.copyTo(W,8),d.copyTo(W,16),h.copyTo(W,24),f.copyTo(W,32),g.copyTo(W,40),p.copyTo(W,48),m.copyTo(W,56)),W}}();function wu(e,t,r){return mu(e,t,r,!0)}class vu{decryptBlock(e){return e}encrypt(e){return e}}class bu{constructor(){if(this.constructor===bu)throw new Error("Cannot initialize AESBaseCipher.");this._s=new Uint8Array([99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22]),this._inv_s=new Uint8Array([82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125]),this._mix=new Uint32Array([0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795]),this._mixCol=new Uint8Array(256);for(let e=0;e<256;e++)this._mixCol[e]=e<128?e<<1:e<<1^27;this.buffer=new Uint8Array(16),this.bufferPosition=0}_expandKey(e){throw new Error("Cannot call `_expandKey` on the base class")}_decrypt(e,t){let r,n,s;const i=new Uint8Array(16);i.set(e);for(let o=0,A=this._keySize;o<16;++o,++A)i[o]^=t[A];for(let o=this._cyclesOfRepetition-1;o>=1;--o){r=i[13],i[13]=i[9],i[9]=i[5],i[5]=i[1],i[1]=r,r=i[14],n=i[10],i[14]=i[6],i[10]=i[2],i[6]=r,i[2]=n,r=i[15],n=i[11],s=i[7],i[15]=i[3],i[11]=r,i[7]=n,i[3]=s;for(let e=0;e<16;++e)i[e]=this._inv_s[i[e]];for(let e=0,r=16*o;e<16;++e,++r)i[e]^=t[r];for(let e=0;e<16;e+=4){const t=this._mix[i[e]],n=this._mix[i[e+1]],s=this._mix[i[e+2]],o=this._mix[i[e+3]];r=t^n>>>8^n<<24^s>>>16^s<<16^o>>>24^o<<8,i[e]=r>>>24&255,i[e+1]=r>>16&255,i[e+2]=r>>8&255,i[e+3]=255&r}}r=i[13],i[13]=i[9],i[9]=i[5],i[5]=i[1],i[1]=r,r=i[14],n=i[10],i[14]=i[6],i[10]=i[2],i[6]=r,i[2]=n,r=i[15],n=i[11],s=i[7],i[15]=i[3],i[11]=r,i[7]=n,i[3]=s;for(let o=0;o<16;++o)i[o]=this._inv_s[i[o]],i[o]^=t[o];return i}_encrypt(e,t){const r=this._s;let n,s,i;const o=new Uint8Array(16);o.set(e);for(let A=0;A<16;++A)o[A]^=t[A];for(let A=1;A<this._cyclesOfRepetition;A++){for(let e=0;e<16;++e)o[e]=r[o[e]];i=o[1],o[1]=o[5],o[5]=o[9],o[9]=o[13],o[13]=i,i=o[2],s=o[6],o[2]=o[10],o[6]=o[14],o[10]=i,o[14]=s,i=o[3],s=o[7],n=o[11],o[3]=o[15],o[7]=i,o[11]=s,o[15]=n;for(let e=0;e<16;e+=4){const t=o[e+0],r=o[e+1],s=o[e+2],i=o[e+3];n=t^r^s^i,o[e+0]^=n^this._mixCol[t^r],o[e+1]^=n^this._mixCol[r^s],o[e+2]^=n^this._mixCol[s^i],o[e+3]^=n^this._mixCol[i^t]}for(let e=0,r=16*A;e<16;++e,++r)o[e]^=t[r]}for(let A=0;A<16;++A)o[A]=r[o[A]];i=o[1],o[1]=o[5],o[5]=o[9],o[9]=o[13],o[13]=i,i=o[2],s=o[6],o[2]=o[10],o[6]=o[14],o[10]=i,o[14]=s,i=o[3],s=o[7],n=o[11],o[3]=o[15],o[7]=i,o[11]=s,o[15]=n;for(let A=0,a=this._keySize;A<16;++A,++a)o[A]^=t[a];return o}_decryptBlock2(e,t){const r=e.length;let n=this.buffer,s=this.bufferPosition;const i=[];let o=this.iv;for(let l=0;l<r;++l){if(n[s]=e[l],++s,s<16)continue;const t=this._decrypt(n,this._key);for(let e=0;e<16;++e)t[e]^=o[e];o=n,i.push(t),n=new Uint8Array(16),s=0}if(this.buffer=n,this.bufferLength=s,this.iv=o,0===i.length)return new Uint8Array(0);let A=16*i.length;if(t){const e=i[i.length-1];let t=e[15];if(t<=16){for(let r=15,n=16-t;r>=n;--r)if(e[r]!==t){t=0;break}A-=t,i[i.length-1]=e.subarray(0,16-t)}}const a=new Uint8Array(A);for(let l=0,c=0,u=i.length;l<u;++l,c+=16)a.set(i[l],c);return a}decryptBlock(e,t,r){const n=e.length,s=this.buffer;let i=this.bufferPosition;if(r)this.iv=r;else{for(let t=0;i<16&&t<n;++t,++i)s[i]=e[t];if(i<16)return this.bufferLength=i,new Uint8Array(0);this.iv=s,e=e.subarray(16)}return this.buffer=new Uint8Array(16),this.bufferLength=0,this.decryptBlock=this._decryptBlock2,this.decryptBlock(e,t)}encrypt(e,t){const r=e.length;let n=this.buffer,s=this.bufferPosition;const i=[];t||(t=new Uint8Array(16));for(let a=0;a<r;++a){if(n[s]=e[a],++s,s<16)continue;for(let e=0;e<16;++e)n[e]^=t[e];const r=this._encrypt(n,this._key);t=r,i.push(r),n=new Uint8Array(16),s=0}if(this.buffer=n,this.bufferLength=s,this.iv=t,0===i.length)return new Uint8Array(0);const o=16*i.length,A=new Uint8Array(o);for(let a=0,l=0,c=i.length;a<c;++a,l+=16)A.set(i[a],l);return A}}class yu extends bu{constructor(e){super(),this._cyclesOfRepetition=10,this._keySize=160,this._rcon=new Uint8Array([141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141]),this._key=this._expandKey(e)}_expandKey(e){const t=this._s,r=this._rcon,n=new Uint8Array(176);n.set(e);for(let s=16,i=1;s<176;++i){let e=n[s-3],o=n[s-2],A=n[s-1],a=n[s-4];e=t[e],o=t[o],A=t[A],a=t[a],e^=r[i];for(let t=0;t<4;++t)n[s]=e^=n[s-16],s++,n[s]=o^=n[s-16],s++,n[s]=A^=n[s-16],s++,n[s]=a^=n[s-16],s++}return n}}class Bu extends bu{constructor(e){super(),this._cyclesOfRepetition=14,this._keySize=224,this._key=this._expandKey(e)}_expandKey(e){const t=this._s,r=new Uint8Array(240);r.set(e);let n=1,s=0,i=0,o=0,A=0;for(let a=32,l=1;a<240;++l){a%32===16?(s=t[s],i=t[i],o=t[o],A=t[A]):a%32===0&&(s=r[a-3],i=r[a-2],o=r[a-1],A=r[a-4],s=t[s],i=t[i],o=t[o],A=t[A],s^=n,(n<<=1)>=256&&(n=255&(27^n)));for(let e=0;e<4;++e)r[a]=s^=r[a-32],a++,r[a]=i^=r[a-32],a++,r[a]=o^=r[a-32],a++,r[a]=A^=r[a-32],a++}return r}}class Eu{checkOwnerPassword(e,t,r,n){const s=new Uint8Array(e.length+56);s.set(e,0),s.set(t,e.length),s.set(r,e.length+t.length);const i=pu(s,0,s.length);return Mr(i,n)}checkUserPassword(e,t,r){const n=new Uint8Array(e.length+8);n.set(e,0),n.set(t,e.length);const s=pu(n,0,n.length);return Mr(s,r)}getOwnerKey(e,t,r,n){const s=new Uint8Array(e.length+56);s.set(e,0),s.set(t,e.length),s.set(r,e.length+t.length);const i=pu(s,0,s.length);return new Bu(i).decryptBlock(n,!1,new Uint8Array(16))}getUserKey(e,t,r){const n=new Uint8Array(e.length+8);n.set(e,0),n.set(t,e.length);const s=pu(n,0,n.length);return new Bu(s).decryptBlock(r,!1,new Uint8Array(16))}}class Cu{calculatePDF20Hash(e,t,r){let n=pu(t,0,t.length).subarray(0,32),s=new Uint8Array([0]),i=0;for(;i<64||s[s.length-1]>i-32;){const t=e.length+n.length+r.length,o=new Uint8Array(t);let A=0;o.set(e,A),A+=e.length,o.set(n,A),A+=n.length,o.set(r,A);const a=new Uint8Array(64*t);for(let e=0,r=0;e<64;e++,r+=t)a.set(o,r);s=new yu(n.subarray(0,16)).encrypt(a,n.subarray(16,32));const l=s.slice(0,16).reduce(((e,t)=>e+t),0)%3;0===l?n=pu(s,0,s.length):1===l?n=wu(s,0,s.length):2===l&&(n=mu(s,0,s.length)),i++}return n.subarray(0,32)}hash(e,t,r){return this.calculatePDF20Hash(e,t,r)}checkOwnerPassword(e,t,r,n){const s=new Uint8Array(e.length+56);s.set(e,0),s.set(t,e.length),s.set(r,e.length+t.length);const i=this.calculatePDF20Hash(e,s,r);return Mr(i,n)}checkUserPassword(e,t,r){const n=new Uint8Array(e.length+8);n.set(e,0),n.set(t,e.length);const s=this.calculatePDF20Hash(e,n,new Uint8Array);return Mr(s,r)}getOwnerKey(e,t,r,n){const s=new Uint8Array(e.length+56);s.set(e,0),s.set(t,e.length),s.set(r,e.length+t.length);const i=this.calculatePDF20Hash(e,s,r);return new Bu(i).decryptBlock(n,!1,new Uint8Array(16))}getUserKey(e,t,r){const n=new Uint8Array(e.length+8);n.set(e,0),n.set(t,e.length);const s=this.calculatePDF20Hash(e,n,new Uint8Array);return new Bu(s).decryptBlock(r,!1,new Uint8Array(16))}}class xu{constructor(e,t){this.StringCipherConstructor=e,this.StreamCipherConstructor=t}createStream(e,t){const r=this.StreamCipherConstructor();return new du(e,(function(e,t){return r.decryptBlock(e,t)}),t)}decryptString(e){const t=this.StringCipherConstructor();let r=lr(e);return r=t.decryptBlock(r,!0),Pr(r)}decryptBytes(e){return this.StringCipherConstructor().decryptBlock(e,!0)}encryptString(e){const t=this.StringCipherConstructor();if(t instanceof bu){const r=16-e.length%16;e+=String.fromCharCode(r).repeat(r);const n=new Uint8Array(16);if("undefined"!==typeof crypto)crypto.getRandomValues(n);else for(let e=0;e<16;e++)n[e]=Math.floor(256*Math.random());let s=lr(e);s=t.encrypt(s,n);const i=new Uint8Array(16+s.length);return i.set(n),i.set(s,16),Pr(i)}let r=lr(e);return r=t.encrypt(r),Pr(r)}}class Iu{constructor(e,t,r){var n;this.defaultPasswordBytes=new Uint8Array([40,191,78,94,78,117,138,65,100,0,78,86,255,250,1,8,46,46,0,182,208,104,62,128,47,12,169,254,100,83,105,122]),this.identityName=js.of("Identity");const s=e.get(js.of("Filter"));if("/Standard"!==s.asString())throw new Error("unknown encryption method");this.filterName=s.asString(),this.dict=e;const i=e.get(js.of("V")).asNumber();if(!Number.isInteger(i)||1!==i&&2!==i&&4!==i&&5!==i)throw new Error("unsupported encryption algorithm");this.algorithm=i;let o=e.get(js.of("Length")).asNumber();if(!o)if(i<=3)o=40;else{const t=e.get(js.of("CF")),r=e.get(js.of("StmF"));if(t instanceof Os&&r instanceof js){t.suppressEncryption=!0;const e=t.get(js.of(r.asString()));let n=null;e&&(n=e.get(js.of("Length"))),o=n&&n.asNumber()||128,o<40&&(o<<=3)}}if(!Number.isInteger(o)||o<40||o%8!==0)throw new Error("invalid key length");const A=e.get(js.of("O")).asBytes(),a=e.get(js.of("U")).asBytes(),l=A.subarray(0,32),c=a.subarray(0,32),u=e.get(js.of("P")).asNumber(),d=e.get(js.of("R")).asNumber(),h=(4===i||5===i)&&!1!==(null===(n=e.get(js.of("EncryptMetadata")))||void 0===n?void 0:n.asBoolean());let f,g;if(this.encryptMetadata=h,r){if(6===d)try{r=unescape(encodeURIComponent(r))}catch(p){console.warn("CipherTransformFactory: Unable to convert UTF8 encoded password.")}f=lr(r)}if(5!==i)g=this.prepareKeyData(t,f,l,c,u,d,o,h);else{const t=A.subarray(32,40),r=A.subarray(40,48),n=a.subarray(0,48),s=a.subarray(32,40),i=a.subarray(40,48),o=e.get(js.of("OE")).asBytes(),u=e.get(js.of("UE")).asBytes(),h=e.get(js.of("Perms")).asBytes();g=this.createEncryptionKey20(d,f,l,t,r,n,c,s,i,o,u,h)}if(!g&&!r)throw new Error("NEEDS PASSWORD");if(!g&&r){const e=this.decodeUserPassword(f,l,d,o);g=this.prepareKeyData(t,e,l,c,u,d,o,h)}if(!g)throw new Error("Password incorrect");if(this.encryptionKey=g,i>=4){const t=e.get(js.of("CF"));t instanceof Os&&(t.suppressEncryption=!0),this.cf=t,this.stmf=e.get(js.of("StmF"))||this.identityName,this.strf=e.get(js.of("StrF"))||this.identityName,this.eff=e.get(js.of("EFF"))||this.stmf}}createCipherTransform(e,t){if(4===this.algorithm||5===this.algorithm)return new xu(this.buildCipherConstructor(this.cf,this.strf,e,t,this.encryptionKey),this.buildCipherConstructor(this.cf,this.stmf,e,t,this.encryptionKey));const r=this.buildObjectKey(e,t,this.encryptionKey,!1),n=function(){return new hu(r)};return new xu(n,n)}createEncryptionKey20(e,t,r,n,s,i,o,A,a,l,c,u){if(t){const e=Math.min(127,t.length);t=t.subarray(0,e)}else t=new Uint8Array;let d;return d=6===e?new Cu:new Eu,d.checkUserPassword(t,A,o)?d.getUserKey(t,a,c):t.length&&d.checkOwnerPassword(t,n,i,r)?d.getOwnerKey(t,s,i,l):null}prepareKeyData(e,t,r,n,s,i,o,A){const a=40+r.length+e.length,l=new Uint8Array(a);let c,u,d=0;if(t)for(u=Math.min(32,t.length);d<u;++d)l[d]=t[d];for(c=0;d<32;)l[d++]=this.defaultPasswordBytes[c++];for(c=0,u=r.length;c<u;++c)l[d++]=r[c];for(l[d++]=255&s,l[d++]=s>>8&255,l[d++]=s>>16&255,l[d++]=s>>>24&255,c=0,u=e.length;c<u;++c)l[d++]=e[c];i>=4&&!A&&(l[d++]=255,l[d++]=255,l[d++]=255,l[d++]=255);let h=fu(l,0,d);const f=o>>3;if(i>=3)for(c=0;c<50;++c)h=fu(h,0,f);const g=h.subarray(0,f);let p,m;if(i>=3){for(d=0;d<32;++d)l[d]=this.defaultPasswordBytes[d];for(c=0,u=e.length;c<u;++c)l[d++]=e[c];p=new hu(g),m=p.encryptBlock(fu(l,0,d)),u=g.length;const t=new Uint8Array(u);for(c=1;c<=19;++c){for(let e=0;e<u;++e)t[e]=g[e]^c;p=new hu(t),m=p.encryptBlock(m)}for(c=0,u=m.length;c<u;++c)if(n[c]!==m[c])return null}else for(p=new hu(g),m=p.encryptBlock(this.defaultPasswordBytes),c=0,u=m.length;c<u;++c)if(n[c]!==m[c])return null;return g}decodeUserPassword(e,t,r,n){const s=new Uint8Array(32);let i=0;const o=Math.min(32,e.length);for(;i<o;++i)s[i]=e[i];let A=0;for(;i<32;)s[i++]=this.defaultPasswordBytes[A++];let a=fu(s,0,i);const l=n>>3;if(r>=3)for(A=0;A<50;++A)a=fu(a,0,a.length);let c,u;if(r>=3){u=t;const e=new Uint8Array(l);for(A=19;A>=0;A--){for(let t=0;t<l;++t)e[t]=a[t]^A;c=new hu(e),u=c.encryptBlock(u)}}else c=new hu(a.subarray(0,l)),u=c.encryptBlock(t);return u}buildObjectKey(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=new Uint8Array(r.length+9),i=r.length;let o;for(o=0;o<i;++o)s[o]=r[o];s[o++]=255&e,s[o++]=e>>8&255,s[o++]=e>>16&255,s[o++]=255&t,s[o++]=t>>8&255,n&&(s[o++]=115,s[o++]=65,s[o++]=108,s[o++]=84);return fu(s,0,o).subarray(0,Math.min(r.length+5,16))}buildCipherConstructor(e,t,r,n,s){if(!(t instanceof js))throw new Error("Invalid crypt filter name.");const i=e.get(js.of(t.asString().replace("/","")));let o;if(null!==i&&void 0!==i&&(o=i.get(js.of("CFM"))),!o||"/None"===o.asString())return function(){return new vu};if("/V2"===o.asString())return()=>new hu(this.buildObjectKey(r,n,s,!1));if("/AESV2"===o.asString())return()=>new yu(this.buildObjectKey(r,n,s,!0));if("/AESV3"===o.asString())return()=>new Bu(s);throw new Error("Unknown crypto method")}}class Du{constructor(e,t,r){if(this.defaultWordBreaks=[" "],this.computePages=()=>{const e=[];return this.catalog.Pages().traverse(((t,r)=>{if(t instanceof ai){let n=this.pageMap.get(t);n||(n=Ju.of(t,r,this),this.pageMap.set(t,n)),e.push(n)}})),e},this.getOrCreateForm=()=>{const e=this.catalog.getOrCreateAcroForm();return ru.of(e,this)},kn(e,"context",[[oi,"PDFContext"]]),kn(t,"ignoreEncryption",["boolean"]),this.context=e,this.catalog=e.lookup(e.trailerInfo.Root),e.lookup(e.trailerInfo.Encrypt)&&e.isDecrypted&&delete e.trailerInfo.Encrypt,this.isEncrypted=!!e.lookup(e.trailerInfo.Encrypt),this.pageCache=Un.populatedBy(this.computePages),this.pageMap=new Map,this.formCache=Un.populatedBy(this.getOrCreateForm),this.fonts=[],this.images=[],this.embeddedPages=[],this.embeddedFiles=[],this.javaScripts=[],!t&&this.isEncrypted)throw new cc;r&&this.updateInfoDict()}static async load(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{ignoreEncryption:r=!1,parseSpeed:n=Au.Slow,throwOnInvalidObject:s=!1,updateMetadata:i=!0,capNumbers:o=!1,password:A}=t;kn(e,"pdf",["string",Uint8Array,ArrayBuffer]),kn(r,"ignoreEncryption",["boolean"]),kn(n,"parseSpeed",["number"]),kn(s,"throwOnInvalidObject",["boolean"]),kn(A,"password",["string","undefined"]);const a=Wr(e),l=await qA.forBytesWithOptions(a,n,s,o).parseDocument();if(l.lookup(l.trailerInfo.Encrypt)&&void 0!==A){const e=l.lookup(l.trailerInfo.ID,Ps),t=l.lookup(l.trailerInfo.Encrypt,Os),r=await qA.forBytesWithOptions(a,n,s,o,new Iu(t,e.get(0).asBytes(),A)).parseDocument();return new Du(r,!0,i)}return new Du(l,r,i)}static async create(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{updateMetadata:t=!0}=e,r=oi.create(),n=IA.withContext(r),s=r.register(n),i=CA.withContextAndPages(r,s);return r.trailerInfo.Root=r.register(i),new Du(r,!1,t)}registerFontkit(e){this.fontkit=e}getForm(){const e=this.formCache.access();return e.hasXFA()&&(console.warn("Removing XFA form data as pdf-lib does not support reading or writing XFA"),e.deleteXFA()),e}getTitle(){const e=this.getInfoDict().lookup(js.Title);if(e)return Qu(e),e.decodeText()}getAuthor(){const e=this.getInfoDict().lookup(js.Author);if(e)return Qu(e),e.decodeText()}getSubject(){const e=this.getInfoDict().lookup(js.Subject);if(e)return Qu(e),e.decodeText()}getKeywords(){const e=this.getInfoDict().lookup(js.Keywords);if(e)return Qu(e),e.decodeText()}getCreator(){const e=this.getInfoDict().lookup(js.Creator);if(e)return Qu(e),e.decodeText()}getProducer(){const e=this.getInfoDict().lookup(js.Producer);if(e)return Qu(e),e.decodeText()}getCreationDate(){const e=this.getInfoDict().lookup(js.CreationDate);if(e)return Qu(e),e.decodeDate()}getModificationDate(){const e=this.getInfoDict().lookup(js.ModDate);if(e)return Qu(e),e.decodeDate()}setTitle(e,t){kn(e,"title",["string"]);const r=js.of("Title");if(this.getInfoDict().set(r,Pi.fromText(e)),null===t||void 0===t?void 0:t.showInWindowTitleBar){this.catalog.getOrCreateViewerPreferences().setDisplayDocTitle(!0)}}setAuthor(e){kn(e,"author",["string"]);const t=js.of("Author");this.getInfoDict().set(t,Pi.fromText(e))}setSubject(e){kn(e,"author",["string"]);const t=js.of("Subject");this.getInfoDict().set(t,Pi.fromText(e))}setKeywords(e){kn(e,"keywords",[Array]);const t=js.of("Keywords");this.getInfoDict().set(t,Pi.fromText(e.join(" ")))}setCreator(e){kn(e,"creator",["string"]);const t=js.of("Creator");this.getInfoDict().set(t,Pi.fromText(e))}setProducer(e){kn(e,"creator",["string"]);const t=js.of("Producer");this.getInfoDict().set(t,Pi.fromText(e))}setLanguage(e){kn(e,"language",["string"]);const t=js.of("Lang");this.catalog.set(t,Wi.of(e))}setCreationDate(e){kn(e,"creationDate",[[Date,"Date"]]);const t=js.of("CreationDate");this.getInfoDict().set(t,Wi.fromDate(e))}setModificationDate(e){kn(e,"modificationDate",[[Date,"Date"]]);const t=js.of("ModDate");this.getInfoDict().set(t,Wi.fromDate(e))}getPageCount(){return void 0===this.pageCount&&(this.pageCount=this.getPages().length),this.pageCount}getPages(){return this.pageCache.access()}getPage(e){const t=this.getPages();return Wn(e,"index",0,t.length-1),t[e]}getPageIndices(){return kr(0,this.getPageCount())}removePage(e){const t=this.getPageCount();if(0===this.pageCount)throw new hc;Wn(e,"index",0,t-1),this.catalog.removeLeafNode(e),this.pageCount=t-1}addPage(e){return kn(e,"page",["undefined",[Ju,"PDFPage"],Array]),this.insertPage(this.getPageCount(),e)}insertPage(e,t){const r=this.getPageCount();if(Wn(e,"index",0,r),kn(t,"page",["undefined",[Ju,"PDFPage"],Array]),!t||Array.isArray(t)){const e=Array.isArray(t)?t:ou.A4;(t=Ju.create(this)).setSize(...e)}else if(t.doc!==this)throw new dc;const n=this.catalog.insertLeafNode(t.ref,e);return t.node.setParent(n),this.pageMap.set(t.node,t),this.pageCache.invalidate(),this.pageCount=r+1,t}async copyPages(e,t){kn(e,"srcDoc",[[Du,"PDFDocument"]]),kn(t,"indices",[Array]),await e.flush();const r=ci.for(e.context,this.context),n=e.getPages(),s=new Array(t.length);for(let i=0,o=t.length;i<o;i++){const e=n[t[i]],o=r.copy(e.node),A=this.context.register(o);s[i]=Ju.of(o,A,this)}return s}async copy(){const e=await Du.create(),t=await e.copyPages(this,this.getPageIndices());for(let r=0,n=t.length;r<n;r++)e.addPage(t[r]);return void 0!==this.getAuthor()&&e.setAuthor(this.getAuthor()),void 0!==this.getCreationDate()&&e.setCreationDate(this.getCreationDate()),void 0!==this.getCreator()&&e.setCreator(this.getCreator()),void 0!==this.getModificationDate()&&e.setModificationDate(this.getModificationDate()),void 0!==this.getProducer()&&e.setProducer(this.getProducer()),void 0!==this.getSubject()&&e.setSubject(this.getSubject()),void 0!==this.getTitle()&&e.setTitle(this.getTitle()),e.defaultWordBreaks=this.defaultWordBreaks,e}addJavaScript(e,t){kn(e,"name",["string"]),kn(t,"script",["string"]);const r=uu.for(t,e),n=this.context.nextRef(),s=lu.of(n,this,r);this.javaScripts.push(s)}async attach(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};kn(e,"attachment",["string",Uint8Array,ArrayBuffer]),kn(t,"name",["string"]),Rn(r.mimeType,"mimeType",["string"]),Rn(r.description,"description",["string"]),Rn(r.creationDate,"options.creationDate",[Date]),Rn(r.modificationDate,"options.modificationDate",[Date]),Fn(r.afRelationship,"options.afRelationship",zi);const n=Wr(e),s=Hi.for(n,t,r),i=this.context.nextRef(),o=au.of(i,this,s);this.embeddedFiles.push(o)}async embedFont(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{subset:r=!1,customName:n,features:s}=t;let i;if(kn(e,"font",["string",Uint8Array,ArrayBuffer]),kn(r,"subset",["boolean"]),En(e))i=Li.for(e,n);else{if(!Tr(e))throw new TypeError("`font` must be one of `StandardFonts | string | Uint8Array | ArrayBuffer`");{const t=Wr(e),o=this.assertFontkit();i=r?await Oi.for(o,t,n,s):await Gi.for(o,t,n,s)}}const o=this.context.nextRef(),A=Yc.of(o,this,i);return this.fonts.push(A),A}embedStandardFont(e,t){if(kn(e,"font",["string"]),!En(e))throw new TypeError("`font` must be one of type `StandardFonts`");const r=Li.for(e,t),n=this.context.nextRef(),s=Yc.of(n,this,r);return this.fonts.push(s),s}async embedJpg(e){kn(e,"jpg",["string",Uint8Array,ArrayBuffer]);const t=Wr(e),r=await Ki.for(t),n=this.context.nextRef(),s=Hc.of(n,this,r);return this.images.push(s),s}async embedPng(e){kn(e,"png",["string",Uint8Array,ArrayBuffer]);const t=Wr(e),r=await ro.for(t),n=this.context.nextRef(),s=Hc.of(n,this,r);return this.images.push(s),s}async embedPdf(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[0];kn(e,"pdf",["string",Uint8Array,ArrayBuffer,[Du,"PDFDocument"]]),kn(t,"indices",[Array]);const r=e instanceof Du?e:await Du.load(e),n=Rr(r.getPages(),t);return this.embedPages(n)}async embedPage(e,t,r){kn(e,"page",[[Ju,"PDFPage"]]);const[n]=await this.embedPages([e],[t],[r]);return n}async embedPages(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];if(0===e.length)return[];for(let o=0,A=e.length-1;o<A;o++){const t=e[o],r=e[o+1];if(t.node.context!==r.node.context)throw new ts}const n=e[0].node.context,s=n===this.context?e=>e:ci.for(n,this.context).copy,i=new Array(e.length);for(let o=0,A=e.length;o<A;o++){const n=s(e[o].node),A=t[o],a=r[o],l=await Bo.for(n,A,a),c=this.context.nextRef();i[o]=zc.of(c,this,l)}return this.embeddedPages.push(...i),i}async flush(){await this.embedAll(this.fonts),await this.embedAll(this.images),await this.embedAll(this.embeddedPages),await this.embedAll(this.embeddedFiles),await this.embedAll(this.javaScripts)}async save(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{useObjectStreams:t=!0,addDefaultPage:r=!0,objectsPerTick:n=50,updateFieldAppearances:s=!0}=e;if(kn(t,"useObjectStreams",["boolean"]),kn(r,"addDefaultPage",["boolean"]),kn(n,"objectsPerTick",["number"]),kn(s,"updateFieldAppearances",["boolean"]),r&&0===this.getPageCount()&&this.addPage(),s){const e=this.formCache.getValue();e&&e.updateFieldAppearances()}await this.flush();return(t?Di:bi).forContext(this.context,n).serializeToBuffer()}async saveAsBase64(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{dataUri:t=!1,...r}=e;kn(t,"dataUri",["boolean"]);const n=await this.save(r),s=_t(n);return t?`data:application/pdf;base64,${s}`:s}findPageForAnnotationRef(e){const t=this.getPages();for(let r=0,n=t.length;r<n;r++){const n=t[r],s=n.node.Annots();if(void 0!==(null===s||void 0===s?void 0:s.indexOf(e)))return n}}async embedAll(e){for(let t=0,r=e.length;t<r;t++)await e[t].embed()}updateInfoDict(){const e="pdf-lib (https://github.com/Hopding/pdf-lib)",t=new Date,r=this.getInfoDict();this.setProducer(e),this.setModificationDate(t),r.get(js.of("Creator"))||this.setCreator(e),r.get(js.of("CreationDate"))||this.setCreationDate(t)}getInfoDict(){const e=this.context.lookup(this.context.trailerInfo.Info);if(e instanceof Os)return e;const t=this.context.obj({});return this.context.trailerInfo.Info=this.context.register(t),t}assertFontkit(){if(!this.fontkit)throw new uc;return this.fontkit}}function Qu(e){if(!(e instanceof Pi)&&!(e instanceof Wi))throw new Zn([Pi,Wi],e)}var Pu;!function(e){e.Normal="Normal",e.Multiply="Multiply",e.Screen="Screen",e.Overlay="Overlay",e.Darken="Darken",e.Lighten="Lighten",e.ColorDodge="ColorDodge",e.ColorBurn="ColorBurn",e.HardLight="HardLight",e.SoftLight="SoftLight",e.Difference="Difference",e.Exclusion="Exclusion"}(Pu||(Pu={}));var Fu=r(2927);const Lu=[1,0,0,1,0,0],Mu=(e,t)=>{let[r,n,s,i,o,A]=e,[a,l,c,u,d,h]=t;return[r*a+s*l,n*a+i*l,r*c+s*u,n*c+i*u,r*d+s*h+o,n*d+i*h+A]},Su=(e,t)=>{let[r,n,s,i,o,A]=e,{x:a,y:l}=t;return{x:r*a+s*l+o,y:n*a+i*l+A}},Nu=(e,t)=>{switch(e){case"scale":case"scaleX":case"scaleY":{const[r,n=r]=t;return["scaleY"===e?1:r,0,0,"scaleX"===e?1:n,0,0]}case"translate":case"translateX":case"translateY":{const[r,n=r]=t;return[1,0,0,1,"translateY"===e?0:r,"translateX"===e?0:-n]}case"rotate":{const[e,r=0,n=0]=t,s=Nu("translate",[r,n]),i=Nu("translate",[-r,-n]),o=ia(-e),A=[Math.cos(o),Math.sin(o),-Math.sin(o),Math.cos(o),0,0];return Mu(Mu(s,A),i)}case"skewY":case"skewX":{const r=ia(-t[0]),n=Math.tan(r);return[1,"skewY"===e?n:0,"skewX"===e?n:0,1,0,0]}case"matrix":{const[e,r,n,s,i,o]=t,A=Nu("scale",[1,-1]);return Mu(Mu(A,[e,r,n,s,i,o]),A)}default:return Lu}},ku=(e,t,r)=>Mu(e,Nu(t,r)),Ru={butt:Ia.Butt,round:Ia.Round,square:Ia.Projecting},Tu={evenodd:Oa.EvenOdd,nonzero:Oa.NonZero},Wu={bevel:Qa.Bevel,miter:Qa.Miter,round:Qa.Round},ju=(e,t)=>({async text(r){const n=r.svgAttributes.textAnchor,s=r.svgAttributes.dominantBaseline,i=r.text.trim().replace(/\s/g," "),o=r.svgAttributes.fontSize||12;const A=t.fonts&&function(e,t){const r=e.fontFamily;if(!r)return;const n="bold"===e.fontWeight||Number(e.fontWeight)>=700,s="italic"===e.fontStyle,i=(e,r,n)=>t[n+(e?"_bold":"")+(r?"_italic":"")];return i(n,s,r)||i(n,!1,r)||i(!1,s,r)||i(!1,!1,r)||Object.keys(t).find((e=>e.startsWith(r)))}(r.svgAttributes,t.fonts),a=(A||e.getFont()[0]).widthOfTextAtSize(i,o),l=(A||e.getFont()[0]).heightAtSize(o),c="middle"===n?a/2:"end"===n?a:0,u="text-before-edge"===s?l:"text-after-edge"===s?-l:"middle"===s?l/2:0;e.drawText(i,{x:-c,y:-u,font:A,size:o,color:r.svgAttributes.fill,opacity:r.svgAttributes.fillOpacity,matrix:r.svgAttributes.matrix,clipSpaces:r.svgAttributes.clipSpaces})},async line(t){e.drawLine({start:{x:t.svgAttributes.x1||0,y:-t.svgAttributes.y1||0},end:{x:t.svgAttributes.x2||0,y:-t.svgAttributes.y2||0},thickness:t.svgAttributes.strokeWidth,color:t.svgAttributes.stroke,opacity:t.svgAttributes.strokeOpacity,lineCap:t.svgAttributes.strokeLineCap,matrix:t.svgAttributes.matrix,clipSpaces:t.svgAttributes.clipSpaces})},async path(t){t.svgAttributes.d&&e.drawSvgPath(t.svgAttributes.d,{x:0,y:0,borderColor:t.svgAttributes.stroke,borderWidth:t.svgAttributes.strokeWidth,borderOpacity:t.svgAttributes.strokeOpacity,borderLineCap:t.svgAttributes.strokeLineCap,color:t.svgAttributes.fill,opacity:t.svgAttributes.fillOpacity,fillRule:t.svgAttributes.fillRule,matrix:t.svgAttributes.matrix,clipSpaces:t.svgAttributes.clipSpaces})},async image(t){const{src:r}=t.svgAttributes;if(!r)return;const n=r.match(/\.png(\?|$)|^data:image\/png;base64/gim)?await e.doc.embedPng(r):await e.doc.embedJpg(r),{x:s,y:i,width:o,height:A}=Yu(n.width,n.height,t.svgAttributes.width||n.width,t.svgAttributes.height||n.height,t.svgAttributes.preserveAspectRatio);e.drawImage(n,{x:s,y:-i-A,width:o,height:A,opacity:t.svgAttributes.fillOpacity,matrix:t.svgAttributes.matrix,clipSpaces:t.svgAttributes.clipSpaces})},async rect(t){(t.svgAttributes.fill||t.svgAttributes.stroke)&&e.drawRectangle({x:0,y:0,width:t.svgAttributes.width,height:-1*t.svgAttributes.height,borderColor:t.svgAttributes.stroke,borderWidth:t.svgAttributes.strokeWidth,borderOpacity:t.svgAttributes.strokeOpacity,borderLineCap:t.svgAttributes.strokeLineCap,color:t.svgAttributes.fill,opacity:t.svgAttributes.fillOpacity,matrix:t.svgAttributes.matrix,clipSpaces:t.svgAttributes.clipSpaces})},async ellipse(t){e.drawEllipse({x:t.svgAttributes.cx||0,y:-(t.svgAttributes.cy||0),xScale:t.svgAttributes.rx,yScale:t.svgAttributes.ry,borderColor:t.svgAttributes.stroke,borderWidth:t.svgAttributes.strokeWidth,borderOpacity:t.svgAttributes.strokeOpacity,borderLineCap:t.svgAttributes.strokeLineCap,color:t.svgAttributes.fill,opacity:t.svgAttributes.fillOpacity,matrix:t.svgAttributes.matrix,clipSpaces:t.svgAttributes.clipSpaces})},circle:async r=>ju(e,t).ellipse(r)}),Gu=(e,t,r,n)=>{const s=t[r]||e[r];return s||"undefined"===typeof n?s:n},Xu=e=>{const t=/([^:\s]+)*\s*:\s*([^;]+)/g,r={};let n=t.exec(e);for(;null!=n;)r[n[1]]=n[2],n=t.exec(e);return r},Ou=(e,t)=>{if(!e||0===e.length)return;if(["none","transparent"].includes(e))return;if("currentColor"===e)return t||Ou("#000000");const r=El(e);return{rgb:r.rgb,alpha:r.alpha?r.alpha+"":void 0}},zu=(e,t,r)=>{var n,s,i,o;const A=e.attributes,a=Xu(A.style),l=Gu(A,a,"width",""),c=Gu(A,a,"height",""),u=Ou(Gu(A,a,"fill")),d=Gu(A,a,"fill-opacity"),h=Gu(A,a,"opacity"),f=Ou(Gu(A,a,"stroke")),g=Gu(A,a,"stroke-opacity"),p=Gu(A,a,"stroke-linecap"),m=Gu(A,a,"stroke-linejoin"),w=Gu(A,a,"fill-rule"),v=Gu(A,a,"stroke-width"),b=Gu(A,a,"font-family"),y=Gu(A,a,"font-style"),B=Gu(A,a,"font-weight"),E=Gu(A,a,"font-size"),C=qu(l,t.width),x=qu(c,t.height),I=qu(A.x,t.width),D=qu(A.y,t.height),Q=qu(A.x1,t.width),P=qu(A.x2,t.width),F=qu(A.y1,t.height),L=qu(A.y2,t.height),M=qu(A.cx,t.width),S=qu(A.cy,t.height),N=qu(A.rx||A.r,t.width),k=qu(A.ry||A.r,t.height),R={fontFamily:b||t.fontFamily,fontStyle:y||t.fontStyle,fontWeight:B||t.fontWeight,fontSize:null!==(n=qu(E))&&void 0!==n?n:t.fontSize,fill:(null===u||void 0===u?void 0:u.rgb)||t.fill,fillOpacity:null!==(s=qu(d||h||(null===u||void 0===u?void 0:u.alpha)))&&void 0!==s?s:t.fillOpacity,fillRule:Tu[w]||t.fillRule,stroke:(null===f||void 0===f?void 0:f.rgb)||t.stroke,strokeWidth:null!==(i=qu(v))&&void 0!==i?i:t.strokeWidth,strokeOpacity:null!==(o=qu(g||h||(null===f||void 0===f?void 0:f.alpha)))&&void 0!==o?o:t.strokeOpacity,strokeLineCap:Ru[p]||t.strokeLineCap,strokeLineJoin:Wu[m]||t.strokeLineJoin,width:C||t.width,height:x||t.height,rotation:t.rotation,viewBox:"svg"===e.tagName&&e.attributes.viewBox?Zu(e.attributes.viewBox):t.viewBox},T={src:A.src||A["xlink:href"],textAnchor:A["text-anchor"],dominantBaseline:A["dominant-baseline"],preserveAspectRatio:A.preserveAspectRatio};let W=A.transform||"";["translate","translateX","translateY","skewX","skewY","rotate","scale","scaleX","scaleY","matrix"].forEach((e=>{A[e]&&(W=A[e]+" "+W)})),(I||D)&&(W+=`translate(${I||0} ${D||0}) `);let j=r;if(W){const e=/(\w+)\((.+?)\)/g;let t=e.exec(W);for(;null!==t;){const[,r,n]=t,s=(n||"").split(/\s*,\s*|\s+/).filter((e=>e.length>0)).map((e=>parseFloat(e)));j=ku(j,r,s),t=e.exec(W)}}if(T.x=I,T.y=D,(A.cx||A.cy)&&(T.cx=M,T.cy=S),(A.rx||A.ry||A.r)&&(T.rx=N,T.ry=k),(A.x1||A.y1)&&(T.x1=Q,T.y1=F),(A.x2||A.y2)&&(T.x2=P,T.y2=L),(A.width||A.height)&&(T.width=null!==C&&void 0!==C?C:t.width,T.height=null!==x&&void 0!==x?x:t.height),A.d&&(j=ku(j,"scale",[1,-1]),T.d=A.d),E&&R.fontSize&&(R.fontSize=R.fontSize),R.fontFamily){const e=R.fontFamily.match(/^"(.*?)"|^'(.*?)'/);e&&(R.fontFamily=e[1]||e[2])}return R.strokeWidth&&(T.strokeWidth=R.strokeWidth),{inherited:R,svgAttributes:T,tagName:e.tagName,matrix:j}},Yu=(e,t,r,n,s)=>{if("none"===s)return{x:0,y:0,width:r,height:n};const i=e/t,o=r/n,A=o>i?i*n:r,a=o>=i?n:r/i,l=r-A,c=n-a,[u,d]=(()=>{switch(s){case"xMinYMin":return[0,0];case"xMidYMin":return[l/2,0];case"xMaxYMin":case"xMaxYMid":return[l,c/2];case"xMinYMid":case"xMinYMax":return[0,c];case"xMidYMax":return[l/2,c];case"xMaxYMax":return[l,c];default:return[l/2,c/2]}})();return{x:u,y:d,width:A,height:a}},Hu=(e,t,r,n)=>{if(e.nodeType===Fu.Z6.COMMENT_NODE)return[];if(e.nodeType===Fu.Z6.TEXT_NODE)return[];if("g"===e.tagName)return Vu(e,t,r,n);if("svg"===e.tagName)return Uu(e,t,r,n);{"polygon"===e.tagName&&(e.tagName="path",e.attributes.d=`M${e.attributes.points}Z`,delete e.attributes.points);const s=zu(e,t,r),i={...s.inherited,...s.svgAttributes,matrix:s.matrix,clipSpaces:n};return Object.assign(e,{svgAttributes:i}),[e]}},Uu=(e,t,r,n)=>{var s,i;null!==(s=e.attributes.width)&&void 0!==s||e.setAttribute("width",t.viewBox.width+""),null!==(i=e.attributes.height)&&void 0!==i||e.setAttribute("height",t.viewBox.height+"");const o=zu(e,t,r),A=[],a=e.attributes.viewBox?Zu(e.attributes.viewBox):e.attributes.width&&e.attributes.height?Zu(`0 0 ${e.attributes.width} ${e.attributes.height}`):t.viewBox,l=parseFloat(e.attributes.x)||0,c=parseFloat(e.attributes.y)||0;let u=ku(r,"translate",[l,c]);const{clipBox:d,content:h}=((e,t,r,n,s,i)=>{const o=n/t,A=s/r,a=ku(e,"scale",[o,A]);if("none"===i)return{clipBox:a,content:a};const l=n>s?A:o,c=n-t*l,u=s-r*l,[d,h]=(()=>{switch(i){case"xMinYMin":return[0,0];case"xMidYMin":return[c/2,0];case"xMaxYMin":case"xMaxYMid":return[c,u/2];case"xMinYMid":case"xMinYMax":return[0,u];case"xMidYMax":return[c/2,u];case"xMaxYMax":return[c,u];default:return[c/2,u/2]}})();return{clipBox:a,content:ku(ku(e,"translate",[d,h]),"scale",[l])}})(u,a.width,a.height,parseFloat(e.attributes.width),parseFloat(e.attributes.height),e.attributes.preserveAspectRatio||"xMidYMid"),f={topLeft:Su(d,{x:0,y:0}),topRight:Su(d,{x:a.width,y:0}),bottomRight:Su(d,{x:a.width,y:-a.height}),bottomLeft:Su(d,{x:0,y:-a.height})};return u=ku(h,"translate",[-a.x,-a.y]),e.childNodes.forEach((e=>{const t=Hu(e,{...o.inherited,viewBox:a},u,[...n,f]);A.push(...t)})),A},Vu=(e,t,r,n)=>{const s=zu(e,t,r),i=[];return e.childNodes.forEach((e=>{i.push(...Hu(e,s.inherited,s.matrix,n))})),i},qu=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(!e)return;const r=parseFloat(e);return isNaN(r)?void 0:e.endsWith("%")?r*t/100:r},Zu=e=>{if(!e)return;const[t=0,r=0,n=1,s=1]=(e||"").split(" ").map((e=>qu(e)));return{x:t,y:r,width:n,height:s}},Ku=async(e,t,r)=>{if(!t)return;const n=e.getSize(),s=(0,Fu.qg)(t).firstChild,i=s.attributes,o=Xu(i.style),A=Gu(i,o,"width",""),a=Gu(i,o,"height",""),l=void 0!==r.width?r.width:parseFloat(A),c=void 0!==r.height?r.height:parseFloat(a);i.viewBox||s.setAttribute("viewBox",`0 0 ${A||l} ${a||c}`),(r.width||r.height)&&(void 0!==l&&(o.width=l+(isNaN(l)?"":"px")),void 0!==c&&(o.height=c+(isNaN(c)?"":"px")),s.setAttribute("style",Object.entries(o).map((e=>{let[t,r]=e;return`${t}:${r};`})).join("")));const u=[1,0,0,1,r.x||0,r.y||0],d=ju(e,r),h=((e,t,r,n)=>{let{width:s,height:i,fontSize:o}=t;const A=(0,Fu.qg)(e).firstChild;return s&&A.setAttribute("width",s+""),i&&A.setAttribute("height",i+""),o&&A.setAttribute("font-size",o+""),Hu(A,{...r,viewBox:Zu(A.attributes.viewBox||"0 0 1 1")},n,[])})(s.outerHTML,r,n,u);await h.reduce((async(e,t)=>{var r;return await e,null===(r=d[t.tagName])||void 0===r?void 0:r.call(d,t)}),Promise.resolve())};class Ju{constructor(e,t,r){this.fontSize=24,this.fontColor=yl(0,0,0),this.lineHeight=24,this.x=0,this.y=0,kn(e,"leafNode",[[ai,"PDFPageLeaf"]]),kn(t,"ref",[[Zs,"PDFRef"]]),kn(r,"doc",[[Du,"PDFDocument"]]),this.node=e,this.ref=t,this.doc=r}setRotation(e){const t=aa(e);Gn(t,"degreesAngle",90),this.node.set(js.of("Rotate"),this.doc.context.obj(t))}getRotation(){const e=this.node.Rotate();return ra(e?e.asNumber():0)}setSize(e,t){kn(e,"width",["number"]),kn(t,"height",["number"]);const r=this.getMediaBox();this.setMediaBox(r.x,r.y,e,t);const n=this.getCropBox(),s=this.getBleedBox(),i=this.getTrimBox(),o=this.getArtBox(),A=this.node.CropBox(),a=this.node.BleedBox(),l=this.node.TrimBox(),c=this.node.ArtBox();A&&Cn(n,r)&&this.setCropBox(r.x,r.y,e,t),a&&Cn(s,r)&&this.setBleedBox(r.x,r.y,e,t),l&&Cn(i,r)&&this.setTrimBox(r.x,r.y,e,t),c&&Cn(o,r)&&this.setArtBox(r.x,r.y,e,t)}setWidth(e){kn(e,"width",["number"]),this.setSize(e,this.getSize().height)}setHeight(e){kn(e,"height",["number"]),this.setSize(this.getSize().width,e)}setMediaBox(e,t,r,n){kn(e,"x",["number"]),kn(t,"y",["number"]),kn(r,"width",["number"]),kn(n,"height",["number"]);const s=this.doc.context.obj([e,t,e+r,t+n]);this.node.set(js.MediaBox,s)}setCropBox(e,t,r,n){kn(e,"x",["number"]),kn(t,"y",["number"]),kn(r,"width",["number"]),kn(n,"height",["number"]);const s=this.doc.context.obj([e,t,e+r,t+n]);this.node.set(js.CropBox,s)}setBleedBox(e,t,r,n){kn(e,"x",["number"]),kn(t,"y",["number"]),kn(r,"width",["number"]),kn(n,"height",["number"]);const s=this.doc.context.obj([e,t,e+r,t+n]);this.node.set(js.BleedBox,s)}setTrimBox(e,t,r,n){kn(e,"x",["number"]),kn(t,"y",["number"]),kn(r,"width",["number"]),kn(n,"height",["number"]);const s=this.doc.context.obj([e,t,e+r,t+n]);this.node.set(js.TrimBox,s)}setArtBox(e,t,r,n){kn(e,"x",["number"]),kn(t,"y",["number"]),kn(r,"width",["number"]),kn(n,"height",["number"]);const s=this.doc.context.obj([e,t,e+r,t+n]);this.node.set(js.ArtBox,s)}getSize(){const{width:e,height:t}=this.getMediaBox();return{width:e,height:t}}getWidth(){return this.getSize().width}getHeight(){return this.getSize().height}getMediaBox(){return this.node.MediaBox().asRectangle()}getCropBox(){var e;const t=this.node.CropBox();return null!==(e=null===t||void 0===t?void 0:t.asRectangle())&&void 0!==e?e:this.getMediaBox()}getBleedBox(){var e;const t=this.node.BleedBox();return null!==(e=null===t||void 0===t?void 0:t.asRectangle())&&void 0!==e?e:this.getCropBox()}getTrimBox(){var e;const t=this.node.TrimBox();return null!==(e=null===t||void 0===t?void 0:t.asRectangle())&&void 0!==e?e:this.getCropBox()}getArtBox(){var e;const t=this.node.ArtBox();return null!==(e=null===t||void 0===t?void 0:t.asRectangle())&&void 0!==e?e:this.getCropBox()}translateContent(e,t){kn(e,"x",["number"]),kn(t,"y",["number"]),this.node.normalize(),this.getContentStream();const r=this.createContentStream(La(),wa(e,t)),n=this.doc.context.register(r),s=this.createContentStream(Ma()),i=this.doc.context.register(s);this.node.wrapContentStreams(n,i)}scale(e,t){kn(e,"x",["number"]),kn(t,"y",["number"]),this.setSize(this.getWidth()*e,this.getHeight()*t),this.scaleContent(e,t),this.scaleAnnotations(e,t)}scaleContent(e,t){kn(e,"x",["number"]),kn(t,"y",["number"]),this.node.normalize(),this.getContentStream();const r=this.createContentStream(La(),va(e,t)),n=this.doc.context.register(r),s=this.createContentStream(Ma()),i=this.doc.context.register(s);this.node.wrapContentStreams(n,i)}scaleAnnotations(e,t){kn(e,"x",["number"]),kn(t,"y",["number"]);const r=this.node.Annots();if(r)for(let n=0;n<r.size();n++){const s=r.lookup(n);s instanceof Os&&this.scaleAnnot(s,e,t)}}resetPosition(){this.getContentStream(!1),this.x=0,this.y=0}setFont(e){kn(e,"font",[[Yc,"PDFFont"]]),this.font=e,this.fontKey=this.node.newFontDictionary(this.font.name,this.font.ref)}setFontSize(e){kn(e,"fontSize",["number"]),this.fontSize=e}setFontColor(e){kn(e,"fontColor",[[Object,"Color"]]),this.fontColor=e}setLineHeight(e){kn(e,"lineHeight",["number"]),this.lineHeight=e}getPosition(){return{x:this.x,y:this.y}}getX(){return this.x}getY(){return this.y}moveTo(e,t){kn(e,"x",["number"]),kn(t,"y",["number"]),this.x=e,this.y=t}moveDown(e){kn(e,"yDecrease",["number"]),this.y-=e}moveUp(e){kn(e,"yIncrease",["number"]),this.y+=e}moveLeft(e){kn(e,"xDecrease",["number"]),this.x-=e}moveRight(e){kn(e,"xIncrease",["number"]),this.x+=e}pushOperators(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];Tn(t,"operator",[[Js,"PDFOperator"]]);this.getContentStream().push(...t)}drawText(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var r,n,s,i,o,A,a;kn(e,"text",["string"]),Rn(t.color,"options.color",[[Object,"Color"]]),jn(t.opacity,"opacity.opacity",0,1),Rn(t.font,"options.font",[[Yc,"PDFFont"]]),Rn(t.size,"options.size",["number"]),Rn(t.rotate,"options.rotate",[[Object,"Rotation"]]),Rn(t.xSkew,"options.xSkew",[[Object,"Rotation"]]),Rn(t.ySkew,"options.ySkew",[[Object,"Rotation"]]),Rn(t.x,"options.x",["number"]),Rn(t.y,"options.y",["number"]),Rn(t.lineHeight,"options.lineHeight",["number"]),Rn(t.maxWidth,"options.maxWidth",["number"]),Rn(t.wordBreaks,"options.wordBreaks",[Array]),Fn(t.blendMode,"options.blendMode",Pu);const{oldFont:l,newFont:c,newFontKey:u}=this.setOrEmbedFont(t.font),d=t.size||this.fontSize,h=t.wordBreaks||this.doc.defaultWordBreaks,f=void 0===t.maxWidth?mr(hr(e)):yr(e,h,t.maxWidth,(e=>c.widthOfTextAtSize(e,d))),g=new Array(f.length);for(let m=0,w=f.length;m<w;m++)g[m]=c.encodeText(f[m]);const p=this.maybeEmbedGraphicsState({opacity:t.opacity,blendMode:t.blendMode});this.getContentStream().push(...Ul(g,{color:null!==(r=t.color)&&void 0!==r?r:this.fontColor,font:u,size:d,rotate:null!==(n=t.rotate)&&void 0!==n?n:ra(0),xSkew:null!==(s=t.xSkew)&&void 0!==s?s:ra(0),ySkew:null!==(i=t.ySkew)&&void 0!==i?i:ra(0),x:null!==(o=t.x)&&void 0!==o?o:this.x,y:null!==(A=t.y)&&void 0!==A?A:this.y,lineHeight:null!==(a=t.lineHeight)&&void 0!==a?a:this.lineHeight,graphicsState:p,matrix:t.matrix,clipSpaces:t.clipSpaces})),t.font&&(l?this.setFont(l):this.resetFont())}drawImage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var r,n,s,i,o,A,a;kn(e,"image",[[Hc,"PDFImage"]]),Rn(t.x,"options.x",["number"]),Rn(t.y,"options.y",["number"]),Rn(t.width,"options.width",["number"]),Rn(t.height,"options.height",["number"]),Rn(t.rotate,"options.rotate",[[Object,"Rotation"]]),Rn(t.xSkew,"options.xSkew",[[Object,"Rotation"]]),Rn(t.ySkew,"options.ySkew",[[Object,"Rotation"]]),jn(t.opacity,"opacity.opacity",0,1),Fn(t.blendMode,"options.blendMode",Pu);const l=this.node.newXObject("Image",e.ref),c=this.maybeEmbedGraphicsState({opacity:t.opacity,blendMode:t.blendMode});this.getContentStream().push(...Vl(l,{x:null!==(r=t.x)&&void 0!==r?r:this.x,y:null!==(n=t.y)&&void 0!==n?n:this.y,width:null!==(s=t.width)&&void 0!==s?s:e.size().width,height:null!==(i=t.height)&&void 0!==i?i:e.size().height,rotate:null!==(o=t.rotate)&&void 0!==o?o:ra(0),xSkew:null!==(A=t.xSkew)&&void 0!==A?A:ra(0),ySkew:null!==(a=t.ySkew)&&void 0!==a?a:ra(0),graphicsState:c,matrix:t.matrix,clipSpaces:t.clipSpaces}))}drawPage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var r,n,s,i,o;kn(e,"embeddedPage",[[zc,"PDFEmbeddedPage"]]),Rn(t.x,"options.x",["number"]),Rn(t.y,"options.y",["number"]),Rn(t.xScale,"options.xScale",["number"]),Rn(t.yScale,"options.yScale",["number"]),Rn(t.width,"options.width",["number"]),Rn(t.height,"options.height",["number"]),Rn(t.rotate,"options.rotate",[[Object,"Rotation"]]),Rn(t.xSkew,"options.xSkew",[[Object,"Rotation"]]),Rn(t.ySkew,"options.ySkew",[[Object,"Rotation"]]),jn(t.opacity,"opacity.opacity",0,1),Fn(t.blendMode,"options.blendMode",Pu);const A=this.node.newXObject("EmbeddedPdfPage",e.ref),a=this.maybeEmbedGraphicsState({opacity:t.opacity,blendMode:t.blendMode}),l=void 0!==t.width?t.width/e.width:void 0!==t.xScale?t.xScale:1,c=void 0!==t.height?t.height/e.height:void 0!==t.yScale?t.yScale:1;this.getContentStream().push(...ql(A,{x:null!==(r=t.x)&&void 0!==r?r:this.x,y:null!==(n=t.y)&&void 0!==n?n:this.y,xScale:l,yScale:c,rotate:null!==(s=t.rotate)&&void 0!==s?s:ra(0),xSkew:null!==(i=t.xSkew)&&void 0!==i?i:ra(0),ySkew:null!==(o=t.ySkew)&&void 0!==o?o:ra(0),graphicsState:a}))}drawSvgPath(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var r,n,s,i,o,A,a,l,c;kn(e,"path",["string"]),Rn(t.x,"options.x",["number"]),Rn(t.y,"options.y",["number"]),Rn(t.scale,"options.scale",["number"]),Rn(t.rotate,"options.rotate",[[Object,"Rotation"]]),Rn(t.borderWidth,"options.borderWidth",["number"]),Rn(t.color,"options.color",[[Object,"Color"]]),jn(t.opacity,"opacity.opacity",0,1),Rn(t.borderColor,"options.borderColor",[[Object,"Color"]]),Rn(t.borderDashArray,"options.borderDashArray",[Array]),Rn(t.borderDashPhase,"options.borderDashPhase",["number"]),Fn(t.borderLineCap,"options.borderLineCap",Ia),jn(t.borderOpacity,"options.borderOpacity",0,1),Fn(t.blendMode,"options.blendMode",Pu),Fn(t.fillRule,"options.fillRule",Oa);const u=this.maybeEmbedGraphicsState({opacity:t.opacity,borderOpacity:t.borderOpacity,blendMode:t.blendMode});"color"in t||"borderColor"in t||(t.borderColor=yl(0,0,0));this.getContentStream().push(...tc(e,{x:null!==(r=t.x)&&void 0!==r?r:this.x,y:null!==(n=t.y)&&void 0!==n?n:this.y,scale:t.scale,rotate:null!==(s=t.rotate)&&void 0!==s?s:ra(0),color:null!==(i=t.color)&&void 0!==i?i:void 0,borderColor:null!==(o=t.borderColor)&&void 0!==o?o:void 0,borderWidth:null!==(A=t.borderWidth)&&void 0!==A?A:0,borderDashArray:null!==(a=t.borderDashArray)&&void 0!==a?a:void 0,borderDashPhase:null!==(l=t.borderDashPhase)&&void 0!==l?l:void 0,borderLineCap:null!==(c=t.borderLineCap)&&void 0!==c?c:void 0,graphicsState:u,fillRule:t.fillRule,matrix:t.matrix,clipSpaces:t.clipSpaces}))}drawLine(e){var t,r,n,s,i;kn(e.start,"options.start",[[Object,"{ x: number, y: number }"]]),kn(e.end,"options.end",[[Object,"{ x: number, y: number }"]]),kn(e.start.x,"options.start.x",["number"]),kn(e.start.y,"options.start.y",["number"]),kn(e.end.x,"options.end.x",["number"]),kn(e.end.y,"options.end.y",["number"]),Rn(e.thickness,"options.thickness",["number"]),Rn(e.color,"options.color",[[Object,"Color"]]),Rn(e.dashArray,"options.dashArray",[Array]),Rn(e.dashPhase,"options.dashPhase",["number"]),Fn(e.lineCap,"options.lineCap",Ia),jn(e.opacity,"opacity.opacity",0,1),Fn(e.blendMode,"options.blendMode",Pu);const o=this.maybeEmbedGraphicsState({borderOpacity:e.opacity,blendMode:e.blendMode});"color"in e||(e.color=yl(0,0,0));this.getContentStream().push(...Zl({start:e.start,end:e.end,thickness:null!==(t=e.thickness)&&void 0!==t?t:1,color:null!==(r=e.color)&&void 0!==r?r:void 0,dashArray:null!==(n=e.dashArray)&&void 0!==n?n:void 0,dashPhase:null!==(s=e.dashPhase)&&void 0!==s?s:void 0,lineCap:null!==(i=e.lineCap)&&void 0!==i?i:void 0,graphicsState:o,matrix:e.matrix,clipSpaces:e.clipSpaces}))}drawRectangle(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};var t,r,n,s,i,o,A,a,l,c,u,d,h;Rn(e.x,"options.x",["number"]),Rn(e.y,"options.y",["number"]),Rn(e.width,"options.width",["number"]),Rn(e.height,"options.height",["number"]),Rn(e.rotate,"options.rotate",[[Object,"Rotation"]]),Rn(e.xSkew,"options.xSkew",[[Object,"Rotation"]]),Rn(e.ySkew,"options.ySkew",[[Object,"Rotation"]]),Rn(e.borderWidth,"options.borderWidth",["number"]),Rn(e.color,"options.color",[[Object,"Color"]]),jn(e.opacity,"opacity.opacity",0,1),Rn(e.borderColor,"options.borderColor",[[Object,"Color"]]),Rn(e.borderDashArray,"options.borderDashArray",[Array]),Rn(e.borderDashPhase,"options.borderDashPhase",["number"]),Fn(e.borderLineCap,"options.borderLineCap",Ia),jn(e.borderOpacity,"options.borderOpacity",0,1),Fn(e.blendMode,"options.blendMode",Pu);const f=this.maybeEmbedGraphicsState({opacity:e.opacity,borderOpacity:e.borderOpacity,blendMode:e.blendMode});"color"in e||"borderColor"in e||(e.color=yl(0,0,0));this.getContentStream().push(...Kl({x:null!==(t=e.x)&&void 0!==t?t:this.x,y:null!==(r=e.y)&&void 0!==r?r:this.y,width:null!==(n=e.width)&&void 0!==n?n:150,height:null!==(s=e.height)&&void 0!==s?s:100,rotate:null!==(i=e.rotate)&&void 0!==i?i:ra(0),xSkew:null!==(o=e.xSkew)&&void 0!==o?o:ra(0),ySkew:null!==(A=e.ySkew)&&void 0!==A?A:ra(0),borderWidth:null!==(a=e.borderWidth)&&void 0!==a?a:0,color:null!==(l=e.color)&&void 0!==l?l:void 0,borderColor:null!==(c=e.borderColor)&&void 0!==c?c:void 0,borderDashArray:null!==(u=e.borderDashArray)&&void 0!==u?u:void 0,borderDashPhase:null!==(d=e.borderDashPhase)&&void 0!==d?d:void 0,graphicsState:f,borderLineCap:null!==(h=e.borderLineCap)&&void 0!==h?h:void 0,matrix:e.matrix,clipSpaces:e.clipSpaces}))}drawSquare(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{size:t}=e;Rn(t,"size",["number"]),this.drawRectangle({...e,width:t,height:t})}drawEllipse(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};var t,r,n,s,i,o,A,a,l,c,u;Rn(e.x,"options.x",["number"]),Rn(e.y,"options.y",["number"]),Rn(e.xScale,"options.xScale",["number"]),Rn(e.yScale,"options.yScale",["number"]),Rn(e.rotate,"options.rotate",[[Object,"Rotation"]]),Rn(e.color,"options.color",[[Object,"Color"]]),jn(e.opacity,"opacity.opacity",0,1),Rn(e.borderColor,"options.borderColor",[[Object,"Color"]]),jn(e.borderOpacity,"options.borderOpacity",0,1),Rn(e.borderWidth,"options.borderWidth",["number"]),Rn(e.borderDashArray,"options.borderDashArray",[Array]),Rn(e.borderDashPhase,"options.borderDashPhase",["number"]),Fn(e.borderLineCap,"options.borderLineCap",Ia),Fn(e.blendMode,"options.blendMode",Pu);const d=this.maybeEmbedGraphicsState({opacity:e.opacity,borderOpacity:e.borderOpacity,blendMode:e.blendMode});"color"in e||"borderColor"in e||(e.color=yl(0,0,0));this.getContentStream().push(...ec({x:null!==(t=e.x)&&void 0!==t?t:this.x,y:null!==(r=e.y)&&void 0!==r?r:this.y,xScale:null!==(n=e.xScale)&&void 0!==n?n:100,yScale:null!==(s=e.yScale)&&void 0!==s?s:100,rotate:null!==(i=e.rotate)&&void 0!==i?i:void 0,color:null!==(o=e.color)&&void 0!==o?o:void 0,borderColor:null!==(A=e.borderColor)&&void 0!==A?A:void 0,borderWidth:null!==(a=e.borderWidth)&&void 0!==a?a:0,borderDashArray:null!==(l=e.borderDashArray)&&void 0!==l?l:void 0,borderDashPhase:null!==(c=e.borderDashPhase)&&void 0!==c?c:void 0,borderLineCap:null!==(u=e.borderLineCap)&&void 0!==u?u:void 0,graphicsState:d,matrix:e.matrix,clipSpaces:e.clipSpaces}))}drawCircle(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{size:t=100}=e;Rn(t,"size",["number"]),this.drawEllipse({...e,xScale:t,yScale:t})}setOrEmbedFont(e){const t=this.font,r=this.fontKey;e?this.setFont(e):this.getFont();return{oldFont:t,oldFontKey:r,newFont:this.font,newFontKey:this.fontKey}}async drawSvg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};var r,n;kn(e,"svg",["string"]),Rn(t.x,"options.x",["number"]),Rn(t.y,"options.y",["number"]),Rn(t.width,"options.width",["number"]),Rn(t.height,"options.height",["number"]),await Ku(this,e,{x:null!==(r=t.x)&&void 0!==r?r:this.x,y:null!==(n=t.y)&&void 0!==n?n:this.y,fonts:t.fonts,width:t.width,height:t.height})}getFont(){if(!this.font||!this.fontKey){const e=this.doc.embedStandardFont(tu.Helvetica);this.setFont(e)}return[this.font,this.fontKey]}resetFont(){this.font=void 0,this.fontKey=void 0}getContentStream(){return arguments.length>0&&void 0!==arguments[0]&&!arguments[0]||!this.contentStream?(this.contentStream=this.createContentStream(),this.contentStreamRef=this.doc.context.register(this.contentStream),this.node.addContentStream(this.contentStreamRef),this.contentStream):this.contentStream}createContentStream(){const e=this.doc.context.obj({});for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return ri.of(e,r)}maybeEmbedGraphicsState(e){const{opacity:t,borderOpacity:r,blendMode:n}=e;if(void 0===t&&void 0===r&&void 0===n)return;const s=this.doc.context.obj({Type:"ExtGState",ca:t,CA:r,BM:n});return this.node.newExtGState("GS",s)}scaleAnnot(e,t,r){const n=["RD","CL","Vertices","QuadPoints","L","Rect"];for(let i=0,o=n.length;i<o;i++){const s=e.lookup(js.of(n[i]));s instanceof Ps&&s.scalePDFNumbers(t,r)}const s=e.lookup(js.of("InkList"));if(s instanceof Ps)for(let i=0,o=s.size();i<o;i++){const e=s.lookup(i);e instanceof Ps&&e.scalePDFNumbers(t,r)}}}Ju.of=(e,t,r)=>new Ju(e,t,r),Ju.create=e=>{kn(e,"doc",[[Du,"PDFDocument"]]);const t=Zs.of(-1),r=ai.withContextAndParent(e.context,t),n=e.context.register(r);return new Ju(r,n,e)};class _u extends qc{constructor(e,t,r){super(e,t,r),kn(e,"acroButton",[[AA,"PDFAcroPushButton"]]),this.acroField=e}setImage(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Uc.Center;const r=this.acroField.getWidgets();for(let n=0,s=r.length;n<s;n++){const s=r[n],i=this.createImageAppearanceStream(s,e,t);this.updateWidgetAppearances(s,{normal:i})}this.markAsClean()}setFontSize(e){On(e,"fontSize"),this.acroField.setFontSize(e),this.markAsDirty()}addToPage(e,t,r){var n,s,i,o,A,a,l,c,u,d,h;Rn(e,"text",["string"]),Rn(t,"page",[[Ju,"PDFPage"]]),Vc(r);const f=this.createWidget({x:(null!==(n=null===r||void 0===r?void 0:r.x)&&void 0!==n?n:0)-(null!==(s=null===r||void 0===r?void 0:r.borderWidth)&&void 0!==s?s:0)/2,y:(null!==(i=null===r||void 0===r?void 0:r.y)&&void 0!==i?i:0)-(null!==(o=null===r||void 0===r?void 0:r.borderWidth)&&void 0!==o?o:0)/2,width:null!==(A=null===r||void 0===r?void 0:r.width)&&void 0!==A?A:100,height:null!==(a=null===r||void 0===r?void 0:r.height)&&void 0!==a?a:50,textColor:null!==(l=null===r||void 0===r?void 0:r.textColor)&&void 0!==l?l:yl(0,0,0),backgroundColor:null!==(c=null===r||void 0===r?void 0:r.backgroundColor)&&void 0!==c?c:yl(.75,.75,.75),borderColor:null===r||void 0===r?void 0:r.borderColor,borderWidth:null!==(u=null===r||void 0===r?void 0:r.borderWidth)&&void 0!==u?u:0,rotate:null!==(d=null===r||void 0===r?void 0:r.rotate)&&void 0!==d?d:ra(0),caption:e,hidden:null===r||void 0===r?void 0:r.hidden,page:t.ref}),g=this.doc.context.register(f.dict);this.acroField.addWidget(g);const p=null!==(h=null===r||void 0===r?void 0:r.font)&&void 0!==h?h:this.doc.getForm().getDefaultFont();this.updateWidgetAppearance(f,p),t.node.addAnnot(g)}needsAppearancesUpdate(){var e;if(this.isDirty())return!0;const t=this.acroField.getWidgets();for(let r=0,n=t.length;r<n;r++){if(!((null===(e=t[r].getAppearances())||void 0===e?void 0:e.normal)instanceof zs))return!0}return!1}defaultUpdateAppearances(e){kn(e,"font",[[Yc,"PDFFont"]]),this.updateAppearances(e)}updateAppearances(e,t){kn(e,"font",[[Yc,"PDFFont"]]),Rn(t,"provider",[Function]);const r=this.acroField.getWidgets();for(let n=0,s=r.length;n<s;n++){const s=r[n];this.updateWidgetAppearance(s,e,t)}}updateWidgetAppearance(e,t,r){const n=Lc((null!==r&&void 0!==r?r:jc)(this,e,t));this.updateWidgetAppearanceWithFont(e,t,n)}}var $u,ed;_u.of=(e,t,r)=>new _u(e,t,r),function(e){e.assertEqual=e=>e,e.assertIs=function(e){},e.assertNever=function(e){throw new Error},e.arrayToEnum=e=>{const t={};for(const r of e)t[r]=r;return t},e.getValidEnumValues=t=>{const r=e.objectKeys(t).filter((e=>"number"!==typeof t[t[e]])),n={};for(const e of r)n[e]=t[e];return e.objectValues(n)},e.objectValues=t=>e.objectKeys(t).map((function(e){return t[e]})),e.objectKeys="function"===typeof Object.keys?e=>Object.keys(e):e=>{const t=[];for(const r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.push(r);return t},e.find=(e,t)=>{for(const r of e)if(t(r))return r},e.isInteger="function"===typeof Number.isInteger?e=>Number.isInteger(e):e=>"number"===typeof e&&isFinite(e)&&Math.floor(e)===e,e.joinValues=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:" | ";return e.map((e=>"string"===typeof e?`'${e}'`:e)).join(t)},e.jsonStringifyReplacer=(e,t)=>"bigint"===typeof t?t.toString():t}($u||($u={})),function(e){e.mergeShapes=(e,t)=>({...e,...t})}(ed||(ed={}));const td=$u.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),rd=e=>{switch(typeof e){case"undefined":return td.undefined;case"string":return td.string;case"number":return isNaN(e)?td.nan:td.number;case"boolean":return td.boolean;case"function":return td.function;case"bigint":return td.bigint;case"symbol":return td.symbol;case"object":return Array.isArray(e)?td.array:null===e?td.null:e.then&&"function"===typeof e.then&&e.catch&&"function"===typeof e.catch?td.promise:"undefined"!==typeof Map&&e instanceof Map?td.map:"undefined"!==typeof Set&&e instanceof Set?td.set:"undefined"!==typeof Date&&e instanceof Date?td.date:td.object;default:return td.unknown}},nd=$u.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]);class sd extends Error{constructor(e){var t;super(),t=this,this.issues=[],this.addIssue=e=>{this.issues=[...this.issues,e]},this.addIssues=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];t.issues=[...t.issues,...e]};const r=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,r):this.__proto__=r,this.name="ZodError",this.issues=e}get errors(){return this.issues}format(e){const t=e||function(e){return e.message},r={_errors:[]},n=e=>{for(const s of e.issues)if("invalid_union"===s.code)s.unionErrors.map(n);else if("invalid_return_type"===s.code)n(s.returnTypeError);else if("invalid_arguments"===s.code)n(s.argumentsError);else if(0===s.path.length)r._errors.push(t(s));else{let e=r,n=0;for(;n<s.path.length;){const r=s.path[n];n===s.path.length-1?(e[r]=e[r]||{_errors:[]},e[r]._errors.push(t(s))):e[r]=e[r]||{_errors:[]},e=e[r],n++}}};return n(this),r}static assert(e){if(!(e instanceof sd))throw new Error(`Not a ZodError: ${e}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,$u.jsonStringifyReplacer,2)}get isEmpty(){return 0===this.issues.length}flatten(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e=>e.message;const t={},r=[];for(const n of this.issues)n.path.length>0?(t[n.path[0]]=t[n.path[0]]||[],t[n.path[0]].push(e(n))):r.push(e(n));return{formErrors:r,fieldErrors:t}}get formErrors(){return this.flatten()}}sd.create=e=>new sd(e);const id=(e,t)=>{let r;switch(e.code){case nd.invalid_type:r=e.received===td.undefined?"Required":`Expected ${e.expected}, received ${e.received}`;break;case nd.invalid_literal:r=`Invalid literal value, expected ${JSON.stringify(e.expected,$u.jsonStringifyReplacer)}`;break;case nd.unrecognized_keys:r=`Unrecognized key(s) in object: ${$u.joinValues(e.keys,", ")}`;break;case nd.invalid_union:r="Invalid input";break;case nd.invalid_union_discriminator:r=`Invalid discriminator value. Expected ${$u.joinValues(e.options)}`;break;case nd.invalid_enum_value:r=`Invalid enum value. Expected ${$u.joinValues(e.options)}, received '${e.received}'`;break;case nd.invalid_arguments:r="Invalid function arguments";break;case nd.invalid_return_type:r="Invalid function return type";break;case nd.invalid_date:r="Invalid date";break;case nd.invalid_string:"object"===typeof e.validation?"includes"in e.validation?(r=`Invalid input: must include "${e.validation.includes}"`,"number"===typeof e.validation.position&&(r=`${r} at one or more positions greater than or equal to ${e.validation.position}`)):"startsWith"in e.validation?r=`Invalid input: must start with "${e.validation.startsWith}"`:"endsWith"in e.validation?r=`Invalid input: must end with "${e.validation.endsWith}"`:$u.assertNever(e.validation):r="regex"!==e.validation?`Invalid ${e.validation}`:"Invalid";break;case nd.too_small:r="array"===e.type?`Array must contain ${e.exact?"exactly":e.inclusive?"at least":"more than"} ${e.minimum} element(s)`:"string"===e.type?`String must contain ${e.exact?"exactly":e.inclusive?"at least":"over"} ${e.minimum} character(s)`:"number"===e.type?`Number must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${e.minimum}`:"date"===e.type?`Date must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(e.minimum))}`:"Invalid input";break;case nd.too_big:r="array"===e.type?`Array must contain ${e.exact?"exactly":e.inclusive?"at most":"less than"} ${e.maximum} element(s)`:"string"===e.type?`String must contain ${e.exact?"exactly":e.inclusive?"at most":"under"} ${e.maximum} character(s)`:"number"===e.type?`Number must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:"bigint"===e.type?`BigInt must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:"date"===e.type?`Date must be ${e.exact?"exactly":e.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(e.maximum))}`:"Invalid input";break;case nd.custom:r="Invalid input";break;case nd.invalid_intersection_types:r="Intersection results could not be merged";break;case nd.not_multiple_of:r=`Number must be a multiple of ${e.multipleOf}`;break;case nd.not_finite:r="Number must be finite";break;default:r=t.defaultError,$u.assertNever(e)}return{message:r}};let od=id;function Ad(){return od}const ad=e=>{const{data:t,path:r,errorMaps:n,issueData:s}=e,i=[...r,...s.path||[]],o={...s,path:i};if(void 0!==s.message)return{...s,path:i,message:s.message};let A="";const a=n.filter((e=>!!e)).slice().reverse();for(const l of a)A=l(o,{data:t,defaultError:A}).message;return{...s,path:i,message:A}};function ld(e,t){const r=Ad(),n=ad({issueData:t,data:e.data,path:e.path,errorMaps:[e.common.contextualErrorMap,e.schemaErrorMap,r,r===id?void 0:id].filter((e=>!!e))});e.common.issues.push(n)}class cd{constructor(){this.value="valid"}dirty(){"valid"===this.value&&(this.value="dirty")}abort(){"aborted"!==this.value&&(this.value="aborted")}static mergeArray(e,t){const r=[];for(const n of t){if("aborted"===n.status)return ud;"dirty"===n.status&&e.dirty(),r.push(n.value)}return{status:e.value,value:r}}static async mergeObjectAsync(e,t){const r=[];for(const n of t){const e=await n.key,t=await n.value;r.push({key:e,value:t})}return cd.mergeObjectSync(e,r)}static mergeObjectSync(e,t){const r={};for(const n of t){const{key:t,value:s}=n;if("aborted"===t.status)return ud;if("aborted"===s.status)return ud;"dirty"===t.status&&e.dirty(),"dirty"===s.status&&e.dirty(),"__proto__"===t.value||"undefined"===typeof s.value&&!n.alwaysSet||(r[t.value]=s.value)}return{status:e.value,value:r}}}const ud=Object.freeze({status:"aborted"}),dd=e=>({status:"dirty",value:e}),hd=e=>({status:"valid",value:e}),fd=e=>"aborted"===e.status,gd=e=>"dirty"===e.status,pd=e=>"valid"===e.status,md=e=>"undefined"!==typeof Promise&&e instanceof Promise;function wd(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"===typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)}function vd(e,t,r,n,s){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!s)throw new TypeError("Private accessor was defined without a setter");if("function"===typeof t?e!==t||!s:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?s.call(e,r):s?s.value=r:t.set(e,r),r}var bd,yd,Bd;"function"===typeof SuppressedError&&SuppressedError,function(e){e.errToObj=e=>"string"===typeof e?{message:e}:e||{},e.toString=e=>"string"===typeof e?e:null===e||void 0===e?void 0:e.message}(bd||(bd={}));class Ed{constructor(e,t,r,n){this._cachedPath=[],this.parent=e,this.data=t,this._path=r,this._key=n}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}}const Cd=(e,t)=>{if(pd(t))return{success:!0,data:t.value};if(!e.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;const t=new sd(e.common.issues);return this._error=t,this._error}}};function xd(e){if(!e)return{};const{errorMap:t,invalid_type_error:r,required_error:n,description:s}=e;if(t&&(r||n))throw new Error('Can\'t use "invalid_type_error" or "required_error" in conjunction with custom error map.');if(t)return{errorMap:t,description:s};return{errorMap:(t,s)=>{var i,o;const{message:A}=e;return"invalid_enum_value"===t.code?{message:null!==A&&void 0!==A?A:s.defaultError}:"undefined"===typeof s.data?{message:null!==(i=null!==A&&void 0!==A?A:n)&&void 0!==i?i:s.defaultError}:"invalid_type"!==t.code?{message:s.defaultError}:{message:null!==(o=null!==A&&void 0!==A?A:r)&&void 0!==o?o:s.defaultError}},description:s}}class Id{constructor(e){this.spa=this.safeParseAsync,this._def=e,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(e){return rd(e.data)}_getOrReturnCtx(e,t){return t||{common:e.parent.common,data:e.data,parsedType:rd(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}_processInputParams(e){return{status:new cd,ctx:{common:e.parent.common,data:e.data,parsedType:rd(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}}_parseSync(e){const t=this._parse(e);if(md(t))throw new Error("Synchronous parse encountered promise.");return t}_parseAsync(e){const t=this._parse(e);return Promise.resolve(t)}parse(e,t){const r=this.safeParse(e,t);if(r.success)return r.data;throw r.error}safeParse(e,t){var r;const n={common:{issues:[],async:null!==(r=null===t||void 0===t?void 0:t.async)&&void 0!==r&&r,contextualErrorMap:null===t||void 0===t?void 0:t.errorMap},path:(null===t||void 0===t?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:rd(e)},s=this._parseSync({data:e,path:n.path,parent:n});return Cd(n,s)}async parseAsync(e,t){const r=await this.safeParseAsync(e,t);if(r.success)return r.data;throw r.error}async safeParseAsync(e,t){const r={common:{issues:[],contextualErrorMap:null===t||void 0===t?void 0:t.errorMap,async:!0},path:(null===t||void 0===t?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:rd(e)},n=this._parse({data:e,path:r.path,parent:r}),s=await(md(n)?n:Promise.resolve(n));return Cd(r,s)}refine(e,t){const r=e=>"string"===typeof t||"undefined"===typeof t?{message:t}:"function"===typeof t?t(e):t;return this._refinement(((t,n)=>{const s=e(t),i=()=>n.addIssue({code:nd.custom,...r(t)});return"undefined"!==typeof Promise&&s instanceof Promise?s.then((e=>!!e||(i(),!1))):!!s||(i(),!1)}))}refinement(e,t){return this._refinement(((r,n)=>!!e(r)||(n.addIssue("function"===typeof t?t(r,n):t),!1)))}_refinement(e){return new yh({schema:this,typeName:Sh.ZodEffects,effect:{type:"refinement",refinement:e}})}superRefine(e){return this._refinement(e)}optional(){return Bh.create(this,this._def)}nullable(){return Eh.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return rh.create(this,this._def)}promise(){return bh.create(this,this._def)}or(e){return ih.create([this,e],this._def)}and(e){return lh.create(this,e,this._def)}transform(e){return new yh({...xd(this._def),schema:this,typeName:Sh.ZodEffects,effect:{type:"transform",transform:e}})}default(e){const t="function"===typeof e?e:()=>e;return new Ch({...xd(this._def),innerType:this,defaultValue:t,typeName:Sh.ZodDefault})}brand(){return new Qh({typeName:Sh.ZodBranded,type:this,...xd(this._def)})}catch(e){const t="function"===typeof e?e:()=>e;return new xh({...xd(this._def),innerType:this,catchValue:t,typeName:Sh.ZodCatch})}describe(e){return new(0,this.constructor)({...this._def,description:e})}pipe(e){return Ph.create(this,e)}readonly(){return Fh.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}}const Dd=/^c[^\s-]{8,}$/i,Qd=/^[0-9a-z]+$/,Pd=/^[0-9A-HJKMNP-TV-Z]{26}$/,Fd=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,Ld=/^[a-z0-9_-]{21}$/i,Md=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,Sd=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i;let Nd;const kd=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,Rd=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,Td=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,Wd="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",jd=new RegExp(`^${Wd}$`);function Gd(e){let t="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return e.precision?t=`${t}\\.\\d{${e.precision}}`:null==e.precision&&(t=`${t}(\\.\\d+)?`),t}function Xd(e){return new RegExp(`^${Gd(e)}$`)}function Od(e){let t=`${Wd}T${Gd(e)}`;const r=[];return r.push(e.local?"Z?":"Z"),e.offset&&r.push("([+-]\\d{2}:?\\d{2})"),t=`${t}(${r.join("|")})`,new RegExp(`^${t}$`)}class zd extends Id{_parse(e){this._def.coerce&&(e.data=String(e.data));if(this._getType(e)!==td.string){const t=this._getOrReturnCtx(e);return ld(t,{code:nd.invalid_type,expected:td.string,received:t.parsedType}),ud}const t=new cd;let r;for(const o of this._def.checks)if("min"===o.kind)e.data.length<o.value&&(r=this._getOrReturnCtx(e,r),ld(r,{code:nd.too_small,minimum:o.value,type:"string",inclusive:!0,exact:!1,message:o.message}),t.dirty());else if("max"===o.kind)e.data.length>o.value&&(r=this._getOrReturnCtx(e,r),ld(r,{code:nd.too_big,maximum:o.value,type:"string",inclusive:!0,exact:!1,message:o.message}),t.dirty());else if("length"===o.kind){const n=e.data.length>o.value,s=e.data.length<o.value;(n||s)&&(r=this._getOrReturnCtx(e,r),n?ld(r,{code:nd.too_big,maximum:o.value,type:"string",inclusive:!0,exact:!0,message:o.message}):s&&ld(r,{code:nd.too_small,minimum:o.value,type:"string",inclusive:!0,exact:!0,message:o.message}),t.dirty())}else if("email"===o.kind)Sd.test(e.data)||(r=this._getOrReturnCtx(e,r),ld(r,{validation:"email",code:nd.invalid_string,message:o.message}),t.dirty());else if("emoji"===o.kind)Nd||(Nd=new RegExp("^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$","u")),Nd.test(e.data)||(r=this._getOrReturnCtx(e,r),ld(r,{validation:"emoji",code:nd.invalid_string,message:o.message}),t.dirty());else if("uuid"===o.kind)Fd.test(e.data)||(r=this._getOrReturnCtx(e,r),ld(r,{validation:"uuid",code:nd.invalid_string,message:o.message}),t.dirty());else if("nanoid"===o.kind)Ld.test(e.data)||(r=this._getOrReturnCtx(e,r),ld(r,{validation:"nanoid",code:nd.invalid_string,message:o.message}),t.dirty());else if("cuid"===o.kind)Dd.test(e.data)||(r=this._getOrReturnCtx(e,r),ld(r,{validation:"cuid",code:nd.invalid_string,message:o.message}),t.dirty());else if("cuid2"===o.kind)Qd.test(e.data)||(r=this._getOrReturnCtx(e,r),ld(r,{validation:"cuid2",code:nd.invalid_string,message:o.message}),t.dirty());else if("ulid"===o.kind)Pd.test(e.data)||(r=this._getOrReturnCtx(e,r),ld(r,{validation:"ulid",code:nd.invalid_string,message:o.message}),t.dirty());else if("url"===o.kind)try{new URL(e.data)}catch(i){r=this._getOrReturnCtx(e,r),ld(r,{validation:"url",code:nd.invalid_string,message:o.message}),t.dirty()}else if("regex"===o.kind){o.regex.lastIndex=0;o.regex.test(e.data)||(r=this._getOrReturnCtx(e,r),ld(r,{validation:"regex",code:nd.invalid_string,message:o.message}),t.dirty())}else if("trim"===o.kind)e.data=e.data.trim();else if("includes"===o.kind)e.data.includes(o.value,o.position)||(r=this._getOrReturnCtx(e,r),ld(r,{code:nd.invalid_string,validation:{includes:o.value,position:o.position},message:o.message}),t.dirty());else if("toLowerCase"===o.kind)e.data=e.data.toLowerCase();else if("toUpperCase"===o.kind)e.data=e.data.toUpperCase();else if("startsWith"===o.kind)e.data.startsWith(o.value)||(r=this._getOrReturnCtx(e,r),ld(r,{code:nd.invalid_string,validation:{startsWith:o.value},message:o.message}),t.dirty());else if("endsWith"===o.kind)e.data.endsWith(o.value)||(r=this._getOrReturnCtx(e,r),ld(r,{code:nd.invalid_string,validation:{endsWith:o.value},message:o.message}),t.dirty());else if("datetime"===o.kind){Od(o).test(e.data)||(r=this._getOrReturnCtx(e,r),ld(r,{code:nd.invalid_string,validation:"datetime",message:o.message}),t.dirty())}else if("date"===o.kind){jd.test(e.data)||(r=this._getOrReturnCtx(e,r),ld(r,{code:nd.invalid_string,validation:"date",message:o.message}),t.dirty())}else if("time"===o.kind){Xd(o).test(e.data)||(r=this._getOrReturnCtx(e,r),ld(r,{code:nd.invalid_string,validation:"time",message:o.message}),t.dirty())}else"duration"===o.kind?Md.test(e.data)||(r=this._getOrReturnCtx(e,r),ld(r,{validation:"duration",code:nd.invalid_string,message:o.message}),t.dirty()):"ip"===o.kind?(n=e.data,("v4"!==(s=o.version)&&s||!kd.test(n))&&("v6"!==s&&s||!Rd.test(n))&&(r=this._getOrReturnCtx(e,r),ld(r,{validation:"ip",code:nd.invalid_string,message:o.message}),t.dirty())):"base64"===o.kind?Td.test(e.data)||(r=this._getOrReturnCtx(e,r),ld(r,{validation:"base64",code:nd.invalid_string,message:o.message}),t.dirty()):$u.assertNever(o);var n,s;return{status:t.value,value:e.data}}_regex(e,t,r){return this.refinement((t=>e.test(t)),{validation:t,code:nd.invalid_string,...bd.errToObj(r)})}_addCheck(e){return new zd({...this._def,checks:[...this._def.checks,e]})}email(e){return this._addCheck({kind:"email",...bd.errToObj(e)})}url(e){return this._addCheck({kind:"url",...bd.errToObj(e)})}emoji(e){return this._addCheck({kind:"emoji",...bd.errToObj(e)})}uuid(e){return this._addCheck({kind:"uuid",...bd.errToObj(e)})}nanoid(e){return this._addCheck({kind:"nanoid",...bd.errToObj(e)})}cuid(e){return this._addCheck({kind:"cuid",...bd.errToObj(e)})}cuid2(e){return this._addCheck({kind:"cuid2",...bd.errToObj(e)})}ulid(e){return this._addCheck({kind:"ulid",...bd.errToObj(e)})}base64(e){return this._addCheck({kind:"base64",...bd.errToObj(e)})}ip(e){return this._addCheck({kind:"ip",...bd.errToObj(e)})}datetime(e){var t,r;return"string"===typeof e?this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:e}):this._addCheck({kind:"datetime",precision:"undefined"===typeof(null===e||void 0===e?void 0:e.precision)?null:null===e||void 0===e?void 0:e.precision,offset:null!==(t=null===e||void 0===e?void 0:e.offset)&&void 0!==t&&t,local:null!==(r=null===e||void 0===e?void 0:e.local)&&void 0!==r&&r,...bd.errToObj(null===e||void 0===e?void 0:e.message)})}date(e){return this._addCheck({kind:"date",message:e})}time(e){return"string"===typeof e?this._addCheck({kind:"time",precision:null,message:e}):this._addCheck({kind:"time",precision:"undefined"===typeof(null===e||void 0===e?void 0:e.precision)?null:null===e||void 0===e?void 0:e.precision,...bd.errToObj(null===e||void 0===e?void 0:e.message)})}duration(e){return this._addCheck({kind:"duration",...bd.errToObj(e)})}regex(e,t){return this._addCheck({kind:"regex",regex:e,...bd.errToObj(t)})}includes(e,t){return this._addCheck({kind:"includes",value:e,position:null===t||void 0===t?void 0:t.position,...bd.errToObj(null===t||void 0===t?void 0:t.message)})}startsWith(e,t){return this._addCheck({kind:"startsWith",value:e,...bd.errToObj(t)})}endsWith(e,t){return this._addCheck({kind:"endsWith",value:e,...bd.errToObj(t)})}min(e,t){return this._addCheck({kind:"min",value:e,...bd.errToObj(t)})}max(e,t){return this._addCheck({kind:"max",value:e,...bd.errToObj(t)})}length(e,t){return this._addCheck({kind:"length",value:e,...bd.errToObj(t)})}nonempty(e){return this.min(1,bd.errToObj(e))}trim(){return new zd({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new zd({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new zd({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find((e=>"datetime"===e.kind))}get isDate(){return!!this._def.checks.find((e=>"date"===e.kind))}get isTime(){return!!this._def.checks.find((e=>"time"===e.kind))}get isDuration(){return!!this._def.checks.find((e=>"duration"===e.kind))}get isEmail(){return!!this._def.checks.find((e=>"email"===e.kind))}get isURL(){return!!this._def.checks.find((e=>"url"===e.kind))}get isEmoji(){return!!this._def.checks.find((e=>"emoji"===e.kind))}get isUUID(){return!!this._def.checks.find((e=>"uuid"===e.kind))}get isNANOID(){return!!this._def.checks.find((e=>"nanoid"===e.kind))}get isCUID(){return!!this._def.checks.find((e=>"cuid"===e.kind))}get isCUID2(){return!!this._def.checks.find((e=>"cuid2"===e.kind))}get isULID(){return!!this._def.checks.find((e=>"ulid"===e.kind))}get isIP(){return!!this._def.checks.find((e=>"ip"===e.kind))}get isBase64(){return!!this._def.checks.find((e=>"base64"===e.kind))}get minLength(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxLength(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}}function Yd(e,t){const r=(e.toString().split(".")[1]||"").length,n=(t.toString().split(".")[1]||"").length,s=r>n?r:n;return parseInt(e.toFixed(s).replace(".",""))%parseInt(t.toFixed(s).replace(".",""))/Math.pow(10,s)}zd.create=e=>{var t;return new zd({checks:[],typeName:Sh.ZodString,coerce:null!==(t=null===e||void 0===e?void 0:e.coerce)&&void 0!==t&&t,...xd(e)})};class Hd extends Id{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(e){this._def.coerce&&(e.data=Number(e.data));if(this._getType(e)!==td.number){const t=this._getOrReturnCtx(e);return ld(t,{code:nd.invalid_type,expected:td.number,received:t.parsedType}),ud}let t;const r=new cd;for(const n of this._def.checks)if("int"===n.kind)$u.isInteger(e.data)||(t=this._getOrReturnCtx(e,t),ld(t,{code:nd.invalid_type,expected:"integer",received:"float",message:n.message}),r.dirty());else if("min"===n.kind){(n.inclusive?e.data<n.value:e.data<=n.value)&&(t=this._getOrReturnCtx(e,t),ld(t,{code:nd.too_small,minimum:n.value,type:"number",inclusive:n.inclusive,exact:!1,message:n.message}),r.dirty())}else if("max"===n.kind){(n.inclusive?e.data>n.value:e.data>=n.value)&&(t=this._getOrReturnCtx(e,t),ld(t,{code:nd.too_big,maximum:n.value,type:"number",inclusive:n.inclusive,exact:!1,message:n.message}),r.dirty())}else"multipleOf"===n.kind?0!==Yd(e.data,n.value)&&(t=this._getOrReturnCtx(e,t),ld(t,{code:nd.not_multiple_of,multipleOf:n.value,message:n.message}),r.dirty()):"finite"===n.kind?Number.isFinite(e.data)||(t=this._getOrReturnCtx(e,t),ld(t,{code:nd.not_finite,message:n.message}),r.dirty()):$u.assertNever(n);return{status:r.value,value:e.data}}gte(e,t){return this.setLimit("min",e,!0,bd.toString(t))}gt(e,t){return this.setLimit("min",e,!1,bd.toString(t))}lte(e,t){return this.setLimit("max",e,!0,bd.toString(t))}lt(e,t){return this.setLimit("max",e,!1,bd.toString(t))}setLimit(e,t,r,n){return new Hd({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:r,message:bd.toString(n)}]})}_addCheck(e){return new Hd({...this._def,checks:[...this._def.checks,e]})}int(e){return this._addCheck({kind:"int",message:bd.toString(e)})}positive(e){return this._addCheck({kind:"min",value:0,inclusive:!1,message:bd.toString(e)})}negative(e){return this._addCheck({kind:"max",value:0,inclusive:!1,message:bd.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:0,inclusive:!0,message:bd.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:0,inclusive:!0,message:bd.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:bd.toString(t)})}finite(e){return this._addCheck({kind:"finite",message:bd.toString(e)})}safe(e){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:bd.toString(e)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:bd.toString(e)})}get minValue(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}get isInt(){return!!this._def.checks.find((e=>"int"===e.kind||"multipleOf"===e.kind&&$u.isInteger(e.value)))}get isFinite(){let e=null,t=null;for(const r of this._def.checks){if("finite"===r.kind||"int"===r.kind||"multipleOf"===r.kind)return!0;"min"===r.kind?(null===t||r.value>t)&&(t=r.value):"max"===r.kind&&(null===e||r.value<e)&&(e=r.value)}return Number.isFinite(t)&&Number.isFinite(e)}}Hd.create=e=>new Hd({checks:[],typeName:Sh.ZodNumber,coerce:(null===e||void 0===e?void 0:e.coerce)||!1,...xd(e)});class Ud extends Id{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(e){this._def.coerce&&(e.data=BigInt(e.data));if(this._getType(e)!==td.bigint){const t=this._getOrReturnCtx(e);return ld(t,{code:nd.invalid_type,expected:td.bigint,received:t.parsedType}),ud}let t;const r=new cd;for(const n of this._def.checks)if("min"===n.kind){(n.inclusive?e.data<n.value:e.data<=n.value)&&(t=this._getOrReturnCtx(e,t),ld(t,{code:nd.too_small,type:"bigint",minimum:n.value,inclusive:n.inclusive,message:n.message}),r.dirty())}else if("max"===n.kind){(n.inclusive?e.data>n.value:e.data>=n.value)&&(t=this._getOrReturnCtx(e,t),ld(t,{code:nd.too_big,type:"bigint",maximum:n.value,inclusive:n.inclusive,message:n.message}),r.dirty())}else"multipleOf"===n.kind?e.data%n.value!==BigInt(0)&&(t=this._getOrReturnCtx(e,t),ld(t,{code:nd.not_multiple_of,multipleOf:n.value,message:n.message}),r.dirty()):$u.assertNever(n);return{status:r.value,value:e.data}}gte(e,t){return this.setLimit("min",e,!0,bd.toString(t))}gt(e,t){return this.setLimit("min",e,!1,bd.toString(t))}lte(e,t){return this.setLimit("max",e,!0,bd.toString(t))}lt(e,t){return this.setLimit("max",e,!1,bd.toString(t))}setLimit(e,t,r,n){return new Ud({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:r,message:bd.toString(n)}]})}_addCheck(e){return new Ud({...this._def,checks:[...this._def.checks,e]})}positive(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:bd.toString(e)})}negative(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:bd.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:bd.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:bd.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:bd.toString(t)})}get minValue(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}}Ud.create=e=>{var t;return new Ud({checks:[],typeName:Sh.ZodBigInt,coerce:null!==(t=null===e||void 0===e?void 0:e.coerce)&&void 0!==t&&t,...xd(e)})};class Vd extends Id{_parse(e){this._def.coerce&&(e.data=Boolean(e.data));if(this._getType(e)!==td.boolean){const t=this._getOrReturnCtx(e);return ld(t,{code:nd.invalid_type,expected:td.boolean,received:t.parsedType}),ud}return hd(e.data)}}Vd.create=e=>new Vd({typeName:Sh.ZodBoolean,coerce:(null===e||void 0===e?void 0:e.coerce)||!1,...xd(e)});class qd extends Id{_parse(e){this._def.coerce&&(e.data=new Date(e.data));if(this._getType(e)!==td.date){const t=this._getOrReturnCtx(e);return ld(t,{code:nd.invalid_type,expected:td.date,received:t.parsedType}),ud}if(isNaN(e.data.getTime())){return ld(this._getOrReturnCtx(e),{code:nd.invalid_date}),ud}const t=new cd;let r;for(const n of this._def.checks)"min"===n.kind?e.data.getTime()<n.value&&(r=this._getOrReturnCtx(e,r),ld(r,{code:nd.too_small,message:n.message,inclusive:!0,exact:!1,minimum:n.value,type:"date"}),t.dirty()):"max"===n.kind?e.data.getTime()>n.value&&(r=this._getOrReturnCtx(e,r),ld(r,{code:nd.too_big,message:n.message,inclusive:!0,exact:!1,maximum:n.value,type:"date"}),t.dirty()):$u.assertNever(n);return{status:t.value,value:new Date(e.data.getTime())}}_addCheck(e){return new qd({...this._def,checks:[...this._def.checks,e]})}min(e,t){return this._addCheck({kind:"min",value:e.getTime(),message:bd.toString(t)})}max(e,t){return this._addCheck({kind:"max",value:e.getTime(),message:bd.toString(t)})}get minDate(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return null!=e?new Date(e):null}get maxDate(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return null!=e?new Date(e):null}}qd.create=e=>new qd({checks:[],coerce:(null===e||void 0===e?void 0:e.coerce)||!1,typeName:Sh.ZodDate,...xd(e)});class Zd extends Id{_parse(e){if(this._getType(e)!==td.symbol){const t=this._getOrReturnCtx(e);return ld(t,{code:nd.invalid_type,expected:td.symbol,received:t.parsedType}),ud}return hd(e.data)}}Zd.create=e=>new Zd({typeName:Sh.ZodSymbol,...xd(e)});class Kd extends Id{_parse(e){if(this._getType(e)!==td.undefined){const t=this._getOrReturnCtx(e);return ld(t,{code:nd.invalid_type,expected:td.undefined,received:t.parsedType}),ud}return hd(e.data)}}Kd.create=e=>new Kd({typeName:Sh.ZodUndefined,...xd(e)});class Jd extends Id{_parse(e){if(this._getType(e)!==td.null){const t=this._getOrReturnCtx(e);return ld(t,{code:nd.invalid_type,expected:td.null,received:t.parsedType}),ud}return hd(e.data)}}Jd.create=e=>new Jd({typeName:Sh.ZodNull,...xd(e)});class _d extends Id{constructor(){super(...arguments),this._any=!0}_parse(e){return hd(e.data)}}_d.create=e=>new _d({typeName:Sh.ZodAny,...xd(e)});class $d extends Id{constructor(){super(...arguments),this._unknown=!0}_parse(e){return hd(e.data)}}$d.create=e=>new $d({typeName:Sh.ZodUnknown,...xd(e)});class eh extends Id{_parse(e){const t=this._getOrReturnCtx(e);return ld(t,{code:nd.invalid_type,expected:td.never,received:t.parsedType}),ud}}eh.create=e=>new eh({typeName:Sh.ZodNever,...xd(e)});class th extends Id{_parse(e){if(this._getType(e)!==td.undefined){const t=this._getOrReturnCtx(e);return ld(t,{code:nd.invalid_type,expected:td.void,received:t.parsedType}),ud}return hd(e.data)}}th.create=e=>new th({typeName:Sh.ZodVoid,...xd(e)});class rh extends Id{_parse(e){const{ctx:t,status:r}=this._processInputParams(e),n=this._def;if(t.parsedType!==td.array)return ld(t,{code:nd.invalid_type,expected:td.array,received:t.parsedType}),ud;if(null!==n.exactLength){const e=t.data.length>n.exactLength.value,s=t.data.length<n.exactLength.value;(e||s)&&(ld(t,{code:e?nd.too_big:nd.too_small,minimum:s?n.exactLength.value:void 0,maximum:e?n.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:n.exactLength.message}),r.dirty())}if(null!==n.minLength&&t.data.length<n.minLength.value&&(ld(t,{code:nd.too_small,minimum:n.minLength.value,type:"array",inclusive:!0,exact:!1,message:n.minLength.message}),r.dirty()),null!==n.maxLength&&t.data.length>n.maxLength.value&&(ld(t,{code:nd.too_big,maximum:n.maxLength.value,type:"array",inclusive:!0,exact:!1,message:n.maxLength.message}),r.dirty()),t.common.async)return Promise.all([...t.data].map(((e,r)=>n.type._parseAsync(new Ed(t,e,t.path,r))))).then((e=>cd.mergeArray(r,e)));const s=[...t.data].map(((e,r)=>n.type._parseSync(new Ed(t,e,t.path,r))));return cd.mergeArray(r,s)}get element(){return this._def.type}min(e,t){return new rh({...this._def,minLength:{value:e,message:bd.toString(t)}})}max(e,t){return new rh({...this._def,maxLength:{value:e,message:bd.toString(t)}})}length(e,t){return new rh({...this._def,exactLength:{value:e,message:bd.toString(t)}})}nonempty(e){return this.min(1,e)}}function nh(e){if(e instanceof sh){const t={};for(const r in e.shape){const n=e.shape[r];t[r]=Bh.create(nh(n))}return new sh({...e._def,shape:()=>t})}return e instanceof rh?new rh({...e._def,type:nh(e.element)}):e instanceof Bh?Bh.create(nh(e.unwrap())):e instanceof Eh?Eh.create(nh(e.unwrap())):e instanceof ch?ch.create(e.items.map((e=>nh(e)))):e}rh.create=(e,t)=>new rh({type:e,minLength:null,maxLength:null,exactLength:null,typeName:Sh.ZodArray,...xd(t)});class sh extends Id{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(null!==this._cached)return this._cached;const e=this._def.shape(),t=$u.objectKeys(e);return this._cached={shape:e,keys:t}}_parse(e){if(this._getType(e)!==td.object){const t=this._getOrReturnCtx(e);return ld(t,{code:nd.invalid_type,expected:td.object,received:t.parsedType}),ud}const{status:t,ctx:r}=this._processInputParams(e),{shape:n,keys:s}=this._getCached(),i=[];if(!(this._def.catchall instanceof eh&&"strip"===this._def.unknownKeys))for(const A in r.data)s.includes(A)||i.push(A);const o=[];for(const A of s){const e=n[A],t=r.data[A];o.push({key:{status:"valid",value:A},value:e._parse(new Ed(r,t,r.path,A)),alwaysSet:A in r.data})}if(this._def.catchall instanceof eh){const e=this._def.unknownKeys;if("passthrough"===e)for(const t of i)o.push({key:{status:"valid",value:t},value:{status:"valid",value:r.data[t]}});else if("strict"===e)i.length>0&&(ld(r,{code:nd.unrecognized_keys,keys:i}),t.dirty());else if("strip"!==e)throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{const e=this._def.catchall;for(const t of i){const n=r.data[t];o.push({key:{status:"valid",value:t},value:e._parse(new Ed(r,n,r.path,t)),alwaysSet:t in r.data})}}return r.common.async?Promise.resolve().then((async()=>{const e=[];for(const t of o){const r=await t.key,n=await t.value;e.push({key:r,value:n,alwaysSet:t.alwaysSet})}return e})).then((e=>cd.mergeObjectSync(t,e))):cd.mergeObjectSync(t,o)}get shape(){return this._def.shape()}strict(e){return bd.errToObj,new sh({...this._def,unknownKeys:"strict",...void 0!==e?{errorMap:(t,r)=>{var n,s,i,o;const A=null!==(i=null===(s=(n=this._def).errorMap)||void 0===s?void 0:s.call(n,t,r).message)&&void 0!==i?i:r.defaultError;return"unrecognized_keys"===t.code?{message:null!==(o=bd.errToObj(e).message)&&void 0!==o?o:A}:{message:A}}}:{}})}strip(){return new sh({...this._def,unknownKeys:"strip"})}passthrough(){return new sh({...this._def,unknownKeys:"passthrough"})}extend(e){return new sh({...this._def,shape:()=>({...this._def.shape(),...e})})}merge(e){return new sh({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:()=>({...this._def.shape(),...e._def.shape()}),typeName:Sh.ZodObject})}setKey(e,t){return this.augment({[e]:t})}catchall(e){return new sh({...this._def,catchall:e})}pick(e){const t={};return $u.objectKeys(e).forEach((r=>{e[r]&&this.shape[r]&&(t[r]=this.shape[r])})),new sh({...this._def,shape:()=>t})}omit(e){const t={};return $u.objectKeys(this.shape).forEach((r=>{e[r]||(t[r]=this.shape[r])})),new sh({...this._def,shape:()=>t})}deepPartial(){return nh(this)}partial(e){const t={};return $u.objectKeys(this.shape).forEach((r=>{const n=this.shape[r];e&&!e[r]?t[r]=n:t[r]=n.optional()})),new sh({...this._def,shape:()=>t})}required(e){const t={};return $u.objectKeys(this.shape).forEach((r=>{if(e&&!e[r])t[r]=this.shape[r];else{let e=this.shape[r];for(;e instanceof Bh;)e=e._def.innerType;t[r]=e}})),new sh({...this._def,shape:()=>t})}keyof(){return mh($u.objectKeys(this.shape))}}sh.create=(e,t)=>new sh({shape:()=>e,unknownKeys:"strip",catchall:eh.create(),typeName:Sh.ZodObject,...xd(t)}),sh.strictCreate=(e,t)=>new sh({shape:()=>e,unknownKeys:"strict",catchall:eh.create(),typeName:Sh.ZodObject,...xd(t)}),sh.lazycreate=(e,t)=>new sh({shape:e,unknownKeys:"strip",catchall:eh.create(),typeName:Sh.ZodObject,...xd(t)});class ih extends Id{_parse(e){const{ctx:t}=this._processInputParams(e),r=this._def.options;if(t.common.async)return Promise.all(r.map((async e=>{const r={...t,common:{...t.common,issues:[]},parent:null};return{result:await e._parseAsync({data:t.data,path:t.path,parent:r}),ctx:r}}))).then((function(e){for(const t of e)if("valid"===t.result.status)return t.result;for(const n of e)if("dirty"===n.result.status)return t.common.issues.push(...n.ctx.common.issues),n.result;const r=e.map((e=>new sd(e.ctx.common.issues)));return ld(t,{code:nd.invalid_union,unionErrors:r}),ud}));{let e;const n=[];for(const i of r){const r={...t,common:{...t.common,issues:[]},parent:null},s=i._parseSync({data:t.data,path:t.path,parent:r});if("valid"===s.status)return s;"dirty"!==s.status||e||(e={result:s,ctx:r}),r.common.issues.length&&n.push(r.common.issues)}if(e)return t.common.issues.push(...e.ctx.common.issues),e.result;const s=n.map((e=>new sd(e)));return ld(t,{code:nd.invalid_union,unionErrors:s}),ud}}get options(){return this._def.options}}ih.create=(e,t)=>new ih({options:e,typeName:Sh.ZodUnion,...xd(t)});const oh=e=>e instanceof gh?oh(e.schema):e instanceof yh?oh(e.innerType()):e instanceof ph?[e.value]:e instanceof wh?e.options:e instanceof vh?$u.objectValues(e.enum):e instanceof Ch?oh(e._def.innerType):e instanceof Kd?[void 0]:e instanceof Jd?[null]:e instanceof Bh?[void 0,...oh(e.unwrap())]:e instanceof Eh?[null,...oh(e.unwrap())]:e instanceof Qh||e instanceof Fh?oh(e.unwrap()):e instanceof xh?oh(e._def.innerType):[];class Ah extends Id{_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==td.object)return ld(t,{code:nd.invalid_type,expected:td.object,received:t.parsedType}),ud;const r=this.discriminator,n=t.data[r],s=this.optionsMap.get(n);return s?t.common.async?s._parseAsync({data:t.data,path:t.path,parent:t}):s._parseSync({data:t.data,path:t.path,parent:t}):(ld(t,{code:nd.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[r]}),ud)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(e,t,r){const n=new Map;for(const s of t){const t=oh(s.shape[e]);if(!t.length)throw new Error(`A discriminator value for key \`${e}\` could not be extracted from all schema options`);for(const r of t){if(n.has(r))throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(r)}`);n.set(r,s)}}return new Ah({typeName:Sh.ZodDiscriminatedUnion,discriminator:e,options:t,optionsMap:n,...xd(r)})}}function ah(e,t){const r=rd(e),n=rd(t);if(e===t)return{valid:!0,data:e};if(r===td.object&&n===td.object){const r=$u.objectKeys(t),n=$u.objectKeys(e).filter((e=>-1!==r.indexOf(e))),s={...e,...t};for(const i of n){const r=ah(e[i],t[i]);if(!r.valid)return{valid:!1};s[i]=r.data}return{valid:!0,data:s}}if(r===td.array&&n===td.array){if(e.length!==t.length)return{valid:!1};const r=[];for(let n=0;n<e.length;n++){const s=ah(e[n],t[n]);if(!s.valid)return{valid:!1};r.push(s.data)}return{valid:!0,data:r}}return r===td.date&&n===td.date&&+e===+t?{valid:!0,data:e}:{valid:!1}}class lh extends Id{_parse(e){const{status:t,ctx:r}=this._processInputParams(e),n=(e,n)=>{if(fd(e)||fd(n))return ud;const s=ah(e.value,n.value);return s.valid?((gd(e)||gd(n))&&t.dirty(),{status:t.value,value:s.data}):(ld(r,{code:nd.invalid_intersection_types}),ud)};return r.common.async?Promise.all([this._def.left._parseAsync({data:r.data,path:r.path,parent:r}),this._def.right._parseAsync({data:r.data,path:r.path,parent:r})]).then((e=>{let[t,r]=e;return n(t,r)})):n(this._def.left._parseSync({data:r.data,path:r.path,parent:r}),this._def.right._parseSync({data:r.data,path:r.path,parent:r}))}}lh.create=(e,t,r)=>new lh({left:e,right:t,typeName:Sh.ZodIntersection,...xd(r)});class ch extends Id{_parse(e){const{status:t,ctx:r}=this._processInputParams(e);if(r.parsedType!==td.array)return ld(r,{code:nd.invalid_type,expected:td.array,received:r.parsedType}),ud;if(r.data.length<this._def.items.length)return ld(r,{code:nd.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),ud;!this._def.rest&&r.data.length>this._def.items.length&&(ld(r,{code:nd.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),t.dirty());const n=[...r.data].map(((e,t)=>{const n=this._def.items[t]||this._def.rest;return n?n._parse(new Ed(r,e,r.path,t)):null})).filter((e=>!!e));return r.common.async?Promise.all(n).then((e=>cd.mergeArray(t,e))):cd.mergeArray(t,n)}get items(){return this._def.items}rest(e){return new ch({...this._def,rest:e})}}ch.create=(e,t)=>{if(!Array.isArray(e))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new ch({items:e,typeName:Sh.ZodTuple,rest:null,...xd(t)})};class uh extends Id{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:t,ctx:r}=this._processInputParams(e);if(r.parsedType!==td.object)return ld(r,{code:nd.invalid_type,expected:td.object,received:r.parsedType}),ud;const n=[],s=this._def.keyType,i=this._def.valueType;for(const o in r.data)n.push({key:s._parse(new Ed(r,o,r.path,o)),value:i._parse(new Ed(r,r.data[o],r.path,o)),alwaysSet:o in r.data});return r.common.async?cd.mergeObjectAsync(t,n):cd.mergeObjectSync(t,n)}get element(){return this._def.valueType}static create(e,t,r){return new uh(t instanceof Id?{keyType:e,valueType:t,typeName:Sh.ZodRecord,...xd(r)}:{keyType:zd.create(),valueType:e,typeName:Sh.ZodRecord,...xd(t)})}}class dh extends Id{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:t,ctx:r}=this._processInputParams(e);if(r.parsedType!==td.map)return ld(r,{code:nd.invalid_type,expected:td.map,received:r.parsedType}),ud;const n=this._def.keyType,s=this._def.valueType,i=[...r.data.entries()].map(((e,t)=>{let[i,o]=e;return{key:n._parse(new Ed(r,i,r.path,[t,"key"])),value:s._parse(new Ed(r,o,r.path,[t,"value"]))}}));if(r.common.async){const e=new Map;return Promise.resolve().then((async()=>{for(const r of i){const n=await r.key,s=await r.value;if("aborted"===n.status||"aborted"===s.status)return ud;"dirty"!==n.status&&"dirty"!==s.status||t.dirty(),e.set(n.value,s.value)}return{status:t.value,value:e}}))}{const e=new Map;for(const r of i){const n=r.key,s=r.value;if("aborted"===n.status||"aborted"===s.status)return ud;"dirty"!==n.status&&"dirty"!==s.status||t.dirty(),e.set(n.value,s.value)}return{status:t.value,value:e}}}}dh.create=(e,t,r)=>new dh({valueType:t,keyType:e,typeName:Sh.ZodMap,...xd(r)});class hh extends Id{_parse(e){const{status:t,ctx:r}=this._processInputParams(e);if(r.parsedType!==td.set)return ld(r,{code:nd.invalid_type,expected:td.set,received:r.parsedType}),ud;const n=this._def;null!==n.minSize&&r.data.size<n.minSize.value&&(ld(r,{code:nd.too_small,minimum:n.minSize.value,type:"set",inclusive:!0,exact:!1,message:n.minSize.message}),t.dirty()),null!==n.maxSize&&r.data.size>n.maxSize.value&&(ld(r,{code:nd.too_big,maximum:n.maxSize.value,type:"set",inclusive:!0,exact:!1,message:n.maxSize.message}),t.dirty());const s=this._def.valueType;function i(e){const r=new Set;for(const n of e){if("aborted"===n.status)return ud;"dirty"===n.status&&t.dirty(),r.add(n.value)}return{status:t.value,value:r}}const o=[...r.data.values()].map(((e,t)=>s._parse(new Ed(r,e,r.path,t))));return r.common.async?Promise.all(o).then((e=>i(e))):i(o)}min(e,t){return new hh({...this._def,minSize:{value:e,message:bd.toString(t)}})}max(e,t){return new hh({...this._def,maxSize:{value:e,message:bd.toString(t)}})}size(e,t){return this.min(e,t).max(e,t)}nonempty(e){return this.min(1,e)}}hh.create=(e,t)=>new hh({valueType:e,minSize:null,maxSize:null,typeName:Sh.ZodSet,...xd(t)});class fh extends Id{constructor(){super(...arguments),this.validate=this.implement}_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==td.function)return ld(t,{code:nd.invalid_type,expected:td.function,received:t.parsedType}),ud;function r(e,r){return ad({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,Ad(),id].filter((e=>!!e)),issueData:{code:nd.invalid_arguments,argumentsError:r}})}function n(e,r){return ad({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,Ad(),id].filter((e=>!!e)),issueData:{code:nd.invalid_return_type,returnTypeError:r}})}const s={errorMap:t.common.contextualErrorMap},i=t.data;if(this._def.returns instanceof bh){const e=this;return hd((async function(){for(var t=arguments.length,o=new Array(t),A=0;A<t;A++)o[A]=arguments[A];const a=new sd([]),l=await e._def.args.parseAsync(o,s).catch((e=>{throw a.addIssue(r(o,e)),a})),c=await Reflect.apply(i,this,l);return await e._def.returns._def.type.parseAsync(c,s).catch((e=>{throw a.addIssue(n(c,e)),a}))}))}{const e=this;return hd((function(){for(var t=arguments.length,o=new Array(t),A=0;A<t;A++)o[A]=arguments[A];const a=e._def.args.safeParse(o,s);if(!a.success)throw new sd([r(o,a.error)]);const l=Reflect.apply(i,this,a.data),c=e._def.returns.safeParse(l,s);if(!c.success)throw new sd([n(l,c.error)]);return c.data}))}}parameters(){return this._def.args}returnType(){return this._def.returns}args(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return new fh({...this._def,args:ch.create(t).rest($d.create())})}returns(e){return new fh({...this._def,returns:e})}implement(e){return this.parse(e)}strictImplement(e){return this.parse(e)}static create(e,t,r){return new fh({args:e||ch.create([]).rest($d.create()),returns:t||$d.create(),typeName:Sh.ZodFunction,...xd(r)})}}class gh extends Id{get schema(){return this._def.getter()}_parse(e){const{ctx:t}=this._processInputParams(e);return this._def.getter()._parse({data:t.data,path:t.path,parent:t})}}gh.create=(e,t)=>new gh({getter:e,typeName:Sh.ZodLazy,...xd(t)});class ph extends Id{_parse(e){if(e.data!==this._def.value){const t=this._getOrReturnCtx(e);return ld(t,{received:t.data,code:nd.invalid_literal,expected:this._def.value}),ud}return{status:"valid",value:e.data}}get value(){return this._def.value}}function mh(e,t){return new wh({values:e,typeName:Sh.ZodEnum,...xd(t)})}ph.create=(e,t)=>new ph({value:e,typeName:Sh.ZodLiteral,...xd(t)});class wh extends Id{constructor(){super(...arguments),yd.set(this,void 0)}_parse(e){if("string"!==typeof e.data){const t=this._getOrReturnCtx(e),r=this._def.values;return ld(t,{expected:$u.joinValues(r),received:t.parsedType,code:nd.invalid_type}),ud}if(wd(this,yd,"f")||vd(this,yd,new Set(this._def.values),"f"),!wd(this,yd,"f").has(e.data)){const t=this._getOrReturnCtx(e),r=this._def.values;return ld(t,{received:t.data,code:nd.invalid_enum_value,options:r}),ud}return hd(e.data)}get options(){return this._def.values}get enum(){const e={};for(const t of this._def.values)e[t]=t;return e}get Values(){const e={};for(const t of this._def.values)e[t]=t;return e}get Enum(){const e={};for(const t of this._def.values)e[t]=t;return e}extract(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._def;return wh.create(e,{...this._def,...t})}exclude(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._def;return wh.create(this.options.filter((t=>!e.includes(t))),{...this._def,...t})}}yd=new WeakMap,wh.create=mh;class vh extends Id{constructor(){super(...arguments),Bd.set(this,void 0)}_parse(e){const t=$u.getValidEnumValues(this._def.values),r=this._getOrReturnCtx(e);if(r.parsedType!==td.string&&r.parsedType!==td.number){const e=$u.objectValues(t);return ld(r,{expected:$u.joinValues(e),received:r.parsedType,code:nd.invalid_type}),ud}if(wd(this,Bd,"f")||vd(this,Bd,new Set($u.getValidEnumValues(this._def.values)),"f"),!wd(this,Bd,"f").has(e.data)){const e=$u.objectValues(t);return ld(r,{received:r.data,code:nd.invalid_enum_value,options:e}),ud}return hd(e.data)}get enum(){return this._def.values}}Bd=new WeakMap,vh.create=(e,t)=>new vh({values:e,typeName:Sh.ZodNativeEnum,...xd(t)});class bh extends Id{unwrap(){return this._def.type}_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==td.promise&&!1===t.common.async)return ld(t,{code:nd.invalid_type,expected:td.promise,received:t.parsedType}),ud;const r=t.parsedType===td.promise?t.data:Promise.resolve(t.data);return hd(r.then((e=>this._def.type.parseAsync(e,{path:t.path,errorMap:t.common.contextualErrorMap}))))}}bh.create=(e,t)=>new bh({type:e,typeName:Sh.ZodPromise,...xd(t)});class yh extends Id{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===Sh.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(e){const{status:t,ctx:r}=this._processInputParams(e),n=this._def.effect||null,s={addIssue:e=>{ld(r,e),e.fatal?t.abort():t.dirty()},get path(){return r.path}};if(s.addIssue=s.addIssue.bind(s),"preprocess"===n.type){const e=n.transform(r.data,s);if(r.common.async)return Promise.resolve(e).then((async e=>{if("aborted"===t.value)return ud;const n=await this._def.schema._parseAsync({data:e,path:r.path,parent:r});return"aborted"===n.status?ud:"dirty"===n.status||"dirty"===t.value?dd(n.value):n}));{if("aborted"===t.value)return ud;const n=this._def.schema._parseSync({data:e,path:r.path,parent:r});return"aborted"===n.status?ud:"dirty"===n.status||"dirty"===t.value?dd(n.value):n}}if("refinement"===n.type){const e=e=>{const t=n.refinement(e,s);if(r.common.async)return Promise.resolve(t);if(t instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return e};if(!1===r.common.async){const n=this._def.schema._parseSync({data:r.data,path:r.path,parent:r});return"aborted"===n.status?ud:("dirty"===n.status&&t.dirty(),e(n.value),{status:t.value,value:n.value})}return this._def.schema._parseAsync({data:r.data,path:r.path,parent:r}).then((r=>"aborted"===r.status?ud:("dirty"===r.status&&t.dirty(),e(r.value).then((()=>({status:t.value,value:r.value}))))))}if("transform"===n.type){if(!1===r.common.async){const e=this._def.schema._parseSync({data:r.data,path:r.path,parent:r});if(!pd(e))return e;const i=n.transform(e.value,s);if(i instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:t.value,value:i}}return this._def.schema._parseAsync({data:r.data,path:r.path,parent:r}).then((e=>pd(e)?Promise.resolve(n.transform(e.value,s)).then((e=>({status:t.value,value:e}))):e))}$u.assertNever(n)}}yh.create=(e,t,r)=>new yh({schema:e,typeName:Sh.ZodEffects,effect:t,...xd(r)}),yh.createWithPreprocess=(e,t,r)=>new yh({schema:t,effect:{type:"preprocess",transform:e},typeName:Sh.ZodEffects,...xd(r)});class Bh extends Id{_parse(e){return this._getType(e)===td.undefined?hd(void 0):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}Bh.create=(e,t)=>new Bh({innerType:e,typeName:Sh.ZodOptional,...xd(t)});class Eh extends Id{_parse(e){return this._getType(e)===td.null?hd(null):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}Eh.create=(e,t)=>new Eh({innerType:e,typeName:Sh.ZodNullable,...xd(t)});class Ch extends Id{_parse(e){const{ctx:t}=this._processInputParams(e);let r=t.data;return t.parsedType===td.undefined&&(r=this._def.defaultValue()),this._def.innerType._parse({data:r,path:t.path,parent:t})}removeDefault(){return this._def.innerType}}Ch.create=(e,t)=>new Ch({innerType:e,typeName:Sh.ZodDefault,defaultValue:"function"===typeof t.default?t.default:()=>t.default,...xd(t)});class xh extends Id{_parse(e){const{ctx:t}=this._processInputParams(e),r={...t,common:{...t.common,issues:[]}},n=this._def.innerType._parse({data:r.data,path:r.path,parent:{...r}});return md(n)?n.then((e=>({status:"valid",value:"valid"===e.status?e.value:this._def.catchValue({get error(){return new sd(r.common.issues)},input:r.data})}))):{status:"valid",value:"valid"===n.status?n.value:this._def.catchValue({get error(){return new sd(r.common.issues)},input:r.data})}}removeCatch(){return this._def.innerType}}xh.create=(e,t)=>new xh({innerType:e,typeName:Sh.ZodCatch,catchValue:"function"===typeof t.catch?t.catch:()=>t.catch,...xd(t)});class Ih extends Id{_parse(e){if(this._getType(e)!==td.nan){const t=this._getOrReturnCtx(e);return ld(t,{code:nd.invalid_type,expected:td.nan,received:t.parsedType}),ud}return{status:"valid",value:e.data}}}Ih.create=e=>new Ih({typeName:Sh.ZodNaN,...xd(e)});const Dh=Symbol("zod_brand");class Qh extends Id{_parse(e){const{ctx:t}=this._processInputParams(e),r=t.data;return this._def.type._parse({data:r,path:t.path,parent:t})}unwrap(){return this._def.type}}class Ph extends Id{_parse(e){const{status:t,ctx:r}=this._processInputParams(e);if(r.common.async){return(async()=>{const e=await this._def.in._parseAsync({data:r.data,path:r.path,parent:r});return"aborted"===e.status?ud:"dirty"===e.status?(t.dirty(),dd(e.value)):this._def.out._parseAsync({data:e.value,path:r.path,parent:r})})()}{const e=this._def.in._parseSync({data:r.data,path:r.path,parent:r});return"aborted"===e.status?ud:"dirty"===e.status?(t.dirty(),{status:"dirty",value:e.value}):this._def.out._parseSync({data:e.value,path:r.path,parent:r})}}static create(e,t){return new Ph({in:e,out:t,typeName:Sh.ZodPipeline})}}class Fh extends Id{_parse(e){const t=this._def.innerType._parse(e),r=e=>(pd(e)&&(e.value=Object.freeze(e.value)),e);return md(t)?t.then((e=>r(e))):r(t)}unwrap(){return this._def.innerType}}function Lh(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2?arguments[2]:void 0;return e?_d.create().superRefine(((n,s)=>{var i,o;if(!e(n)){const e="function"===typeof t?t(n):"string"===typeof t?{message:t}:t,A=null===(o=null!==(i=e.fatal)&&void 0!==i?i:r)||void 0===o||o,a="string"===typeof e?{message:e}:e;s.addIssue({code:"custom",...a,fatal:A})}})):_d.create()}Fh.create=(e,t)=>new Fh({innerType:e,typeName:Sh.ZodReadonly,...xd(t)});const Mh={object:sh.lazycreate};var Sh;!function(e){e.ZodString="ZodString",e.ZodNumber="ZodNumber",e.ZodNaN="ZodNaN",e.ZodBigInt="ZodBigInt",e.ZodBoolean="ZodBoolean",e.ZodDate="ZodDate",e.ZodSymbol="ZodSymbol",e.ZodUndefined="ZodUndefined",e.ZodNull="ZodNull",e.ZodAny="ZodAny",e.ZodUnknown="ZodUnknown",e.ZodNever="ZodNever",e.ZodVoid="ZodVoid",e.ZodArray="ZodArray",e.ZodObject="ZodObject",e.ZodUnion="ZodUnion",e.ZodDiscriminatedUnion="ZodDiscriminatedUnion",e.ZodIntersection="ZodIntersection",e.ZodTuple="ZodTuple",e.ZodRecord="ZodRecord",e.ZodMap="ZodMap",e.ZodSet="ZodSet",e.ZodFunction="ZodFunction",e.ZodLazy="ZodLazy",e.ZodLiteral="ZodLiteral",e.ZodEnum="ZodEnum",e.ZodEffects="ZodEffects",e.ZodNativeEnum="ZodNativeEnum",e.ZodOptional="ZodOptional",e.ZodNullable="ZodNullable",e.ZodDefault="ZodDefault",e.ZodCatch="ZodCatch",e.ZodPromise="ZodPromise",e.ZodBranded="ZodBranded",e.ZodPipeline="ZodPipeline",e.ZodReadonly="ZodReadonly"}(Sh||(Sh={}));const Nh=zd.create,kh=Hd.create,Rh=Ih.create,Th=Ud.create,Wh=Vd.create,jh=qd.create,Gh=Zd.create,Xh=Kd.create,Oh=Jd.create,zh=_d.create,Yh=$d.create,Hh=eh.create,Uh=th.create,Vh=rh.create,qh=sh.create,Zh=sh.strictCreate,Kh=ih.create,Jh=Ah.create,_h=lh.create,$h=ch.create,ef=uh.create,tf=dh.create,rf=hh.create,nf=fh.create,sf=gh.create,of=ph.create,Af=wh.create,af=vh.create,lf=bh.create,cf=yh.create,uf=Bh.create,df=Eh.create,hf=yh.createWithPreprocess,ff=Ph.create,gf={string:e=>zd.create({...e,coerce:!0}),number:e=>Hd.create({...e,coerce:!0}),boolean:e=>Vd.create({...e,coerce:!0}),bigint:e=>Ud.create({...e,coerce:!0}),date:e=>qd.create({...e,coerce:!0})},pf=ud;var mf=Object.freeze({__proto__:null,defaultErrorMap:id,setErrorMap:function(e){od=e},getErrorMap:Ad,makeIssue:ad,EMPTY_PATH:[],addIssueToContext:ld,ParseStatus:cd,INVALID:ud,DIRTY:dd,OK:hd,isAborted:fd,isDirty:gd,isValid:pd,isAsync:md,get util(){return $u},get objectUtil(){return ed},ZodParsedType:td,getParsedType:rd,ZodType:Id,datetimeRegex:Od,ZodString:zd,ZodNumber:Hd,ZodBigInt:Ud,ZodBoolean:Vd,ZodDate:qd,ZodSymbol:Zd,ZodUndefined:Kd,ZodNull:Jd,ZodAny:_d,ZodUnknown:$d,ZodNever:eh,ZodVoid:th,ZodArray:rh,ZodObject:sh,ZodUnion:ih,ZodDiscriminatedUnion:Ah,ZodIntersection:lh,ZodTuple:ch,ZodRecord:uh,ZodMap:dh,ZodSet:hh,ZodFunction:fh,ZodLazy:gh,ZodLiteral:ph,ZodEnum:wh,ZodNativeEnum:vh,ZodPromise:bh,ZodEffects:yh,ZodTransformer:yh,ZodOptional:Bh,ZodNullable:Eh,ZodDefault:Ch,ZodCatch:xh,ZodNaN:Ih,BRAND:Dh,ZodBranded:Qh,ZodPipeline:Ph,ZodReadonly:Fh,custom:Lh,Schema:Id,ZodSchema:Id,late:Mh,get ZodFirstPartyTypeKind(){return Sh},coerce:gf,any:zh,array:Vh,bigint:Th,boolean:Wh,date:jh,discriminatedUnion:Jh,effect:cf,enum:Af,function:nf,instanceof:function(e){return Lh((t=>t instanceof e),arguments.length>1&&void 0!==arguments[1]?arguments[1]:{message:`Input not instance of ${e.name}`})},intersection:_h,lazy:sf,literal:of,map:tf,nan:Rh,nativeEnum:af,never:Hh,null:Oh,nullable:df,number:kh,object:qh,oboolean:()=>Wh().optional(),onumber:()=>kh().optional(),optional:uf,ostring:()=>Nh().optional(),pipeline:ff,preprocess:hf,promise:lf,record:ef,set:rf,strictObject:Zh,string:Nh,symbol:Gh,transformer:cf,tuple:$h,undefined:Xh,union:Kh,unknown:Yh,void:Uh,NEVER:pf,ZodIssueCode:nd,quotelessJson:e=>JSON.stringify(e,null,2).replace(/"([^"]+)":/g,"$1:"),ZodError:sd}),wf=r(6382);const vf=mf.enum(["en","zh","ja","ko","ar","th","pl","it","de","es","fr"]),bf=(mf.object({cancel:mf.string(),field:mf.string(),fieldName:mf.string(),align:mf.string(),width:mf.string(),opacity:mf.string(),height:mf.string(),rotate:mf.string(),edit:mf.string(),required:mf.string(),editable:mf.string(),plsInputName:mf.string(),fieldMustUniq:mf.string(),notUniq:mf.string(),noKeyName:mf.string(),fieldsList:mf.string(),editField:mf.string(),type:mf.string(),errorOccurred:mf.string(),errorBulkUpdateFieldName:mf.string(),commitBulkUpdateFieldName:mf.string(),bulkUpdateFieldName:mf.string(),addPageAfter:mf.string(),removePage:mf.string(),removePageConfirm:mf.string(),"validation.uniqueName":mf.string(),"validation.hexColor":mf.string(),"schemas.color":mf.string(),"schemas.borderWidth":mf.string(),"schemas.borderColor":mf.string(),"schemas.backgroundColor":mf.string(),"schemas.textColor":mf.string(),"schemas.bgColor":mf.string(),"schemas.horizontal":mf.string(),"schemas.vertical":mf.string(),"schemas.left":mf.string(),"schemas.center":mf.string(),"schemas.right":mf.string(),"schemas.top":mf.string(),"schemas.middle":mf.string(),"schemas.bottom":mf.string(),"schemas.padding":mf.string(),"schemas.text.fontName":mf.string(),"schemas.text.size":mf.string(),"schemas.text.spacing":mf.string(),"schemas.text.textAlign":mf.string(),"schemas.text.verticalAlign":mf.string(),"schemas.text.lineHeight":mf.string(),"schemas.text.min":mf.string(),"schemas.text.max":mf.string(),"schemas.text.fit":mf.string(),"schemas.text.dynamicFontSize":mf.string(),"schemas.text.format":mf.string(),"schemas.mvt.typingInstructions":mf.string(),"schemas.mvt.sampleField":mf.string(),"schemas.mvt.variablesSampleData":mf.string(),"schemas.barcodes.barColor":mf.string(),"schemas.barcodes.includetext":mf.string(),"schemas.table.alternateBackgroundColor":mf.string(),"schemas.table.tableStyle":mf.string(),"schemas.table.headStyle":mf.string(),"schemas.table.bodyStyle":mf.string(),"schemas.table.columnStyle":mf.string()}),mf.enum(["viewer","form","designer"]),mf.enum(["rgb","cmyk"]).optional()),yf=(mf.object({height:mf.number(),width:mf.number()}),mf.object({type:mf.string(),content:mf.string().optional(),position:mf.object({x:mf.number(),y:mf.number()}),width:mf.number(),height:mf.number(),rotate:mf.number().optional(),opacity:mf.number().optional(),readOnly:mf.boolean().optional(),required:mf.boolean().optional()}).passthrough()),Bf=mf.object({id:mf.string(),key:mf.string()}),Ef=(yf.merge(Bf),mf.any().refine((e=>e instanceof ArrayBuffer))),Cf=mf.any().refine((e=>e instanceof Uint8Array)),xf=mf.object({width:mf.number(),height:mf.number(),padding:mf.tuple([mf.number(),mf.number(),mf.number(),mf.number()])}),If=mf.union([mf.string(),Ef,Cf]),Df=mf.union([If,xf]),Qf=mf.object({schemas:mf.array(mf.record(yf)),basePdf:Df,pdfmeVersion:mf.string().optional()}).passthrough(),Pf=mf.array(mf.record(mf.any())).min(1),Ff=mf.record(mf.object({data:mf.union([mf.string(),Ef,Cf]),fallback:mf.boolean().optional(),subset:mf.boolean().optional()})),Lf=mf.object({font:Ff.optional()}).passthrough(),Mf=mf.object({template:Qf,options:Lf.optional(),plugins:mf.record(mf.object({ui:mf.any(),pdf:mf.any(),propPanel:mf.any()})).optional()}),Sf=Lf.extend({colorType:bf,author:mf.string().optional(),creationDate:mf.date().optional(),creator:mf.string().optional(),keywords:mf.array(mf.string()).optional(),language:mf.string().optional(),modificationDate:mf.date().optional(),producer:mf.string().optional(),subject:mf.string().optional(),title:mf.string().optional()}),Nf=Mf.extend({inputs:Pf,options:Sf.optional()}).strict(),kf=Lf.extend({lang:vf.optional(),labels:mf.record(mf.string(),mf.string()).optional(),theme:mf.record(mf.string(),mf.unknown()).optional(),icons:mf.record(mf.string(),mf.string()).optional(),requiredByDefault:mf.boolean().optional()}),Rf=mf.any().refine((e=>e instanceof HTMLElement)),Tf=Mf.extend({domContainer:Rf,options:kf.optional()}),Wf=(Tf.extend({inputs:Pf}).strict(),Tf.extend({}).strict(),"Roboto"),jf=e=>Array.from(new Set(e)),Gf=e=>{const t=Object.entries(e).reduce(((e,t)=>{const[r,n]=t;return!e&&n.fallback?r:e}),"");if(""===t)throw Error("[@pdfme/common] fallback flag is not found in font. true fallback flag must be only one.");return t},Xf=()=>({[Wf]:{data:qf("data:font/ttf;base64,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G7EDGj5ZsCfcMDEA//8Aev/sBNwHGQImACsAAAEHAKIBpQFXABQAsABFWLALLxuxCx4+WbEnBPQwMf//AGD+VgPyBcICJgBLAAABBwCiATIAAAAUALAARViwAy8bsQMaPlmxLAH0MDH//wB6/fYE3AXEAiYAKwAAAAcBugHa/pf//wBg/lYD8gaTAiYASwAAAQcBzwErAFgAEwCwAEVYsAMvG7EDGj5ZsCrcMDEA//8AqQAABQgHQgImACwAAAEHAJ4A8QFCABQAsABFWLAHLxuxBx4+WbEQBvQwMf//AIwAAAPfB0ECJgBMAAABBwCeAB0BQQAJALARL7AU3DAxAP///7cAAAJ6By4CJgAtAAABBwCl/zwBRgAUALAARViwAy8bsQMePlmxBwT0MDH///+dAAACYAXqAiYAjQAAAQcApf8iAAIAFACwAEVYsAMvG7EDGj5ZsQcB9DAx////zAAAAmwG7wImAC0AAAEHAHD/PgFKABMAsABFWLACLxuxAh4+WbAF3DAxAP///7IAAAJSBasCJgCNAAABBwBw/yQABgATALAARViwAi8bsQIaPlmwBdwwMQD////sAAACQwcaAiYALQAAAQcAof9rAUMAEwCwAEVYsAIvG7ECHj5ZsAfcMDEA////0gAAAikF1wImAI0AAAEHAKH/UQAAABMAsABFWLACLxuxAho+WbAH3DAxAP//ABj+WAF4BbACJgAtAAAABgCk5gn////7/k8BaAXEAiYATQAAAAYApMkA//8AqQAAAYQHBAImAC0AAAEHAKIAHAFCABQAsABFWLACLxuxAh4+WbELBPQwMf//ALf/7AX5BbAAJgAtAAAABwAuAi0AAP//AI3+SwNKBcQAJgBNAAAABwBOAfEAAP//ADX/7ASCBzUCJgAuAAABBwCeAXwBNQAUALAARViwAC8bsQAePlmxFAb0MDH///+0/ksCOQXYAiYAnAAAAQcAnv8z/9gAFACwAEVYsA0vG7ENGj5ZsRIE9DAx//8Aqf5YBQUFsAImAC8AAAAHAboBlP75//8Ajf5FBAwGAAImAE8AAAAHAboBEf7m//8AoQAABBwHMQImADAAAAEHAHUAJgExABQAsABFWLAFLxuxBR4+WbEICPQwMf//AJMAAAI0B5YCJgBQAAABBwB1ABgBlgAUALAARViwAy8bsQMgPlmxBgn0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AHUBhwE2ABQAsABFWLAHLxuxBx4+WbEMCPQwMf//AFgAAAOzBgACJgBeAAABBwB1ASEAAAAUALAARViwBy8bsQcaPlmxDAn0MDH//wBWAAAEegb4AiYAPgAAAQcAogFuATYAFACwAEVYsAcvG7EHHj5ZsREE9DAx//8AWAAAA7MFwgImAF4AAAEHAKIBCAAAABQAsABFWLAHLxuxBxo+WbERAfQwMf//AFYAAAR6BzYCJgA+AAABBwCfAKYBNwAUALAARViwBy8bsQcePlmxDwb0MDH//wBYAAADswYAAiYAXgAAAQYAn0ABABQAsABFWLAHLxuxBxo+WbEPAfQwMf////IAAAdXB0ICJgCBAAABBwB1AskBQgAUALAARViwBi8bsQYePlmxFQj0MDH//wBO/+wGfAYBAiYAhgAAAQcAdQJ6AAEAFACwAEVYsB0vG7EdGj5ZsUAJ9DAx//8Adv+jBR0HgAImAIMAAAEHAHUB6QGAABQAsABFWLAQLxuxEB4+WbEsCPQwMf//AFv/egQ0BgACJgCJAAABBwB1ATcAAAAUALAARViwBC8bsQQaPlmxKQn0MDH//wAcAAAFHQY/AiYAJQAAAAYArgQA////KQAABEYGPwImACkAAAAHAK7+cgAA////NwAABQgGQQImACwAAAAHAK7+gAAC////PQAAAXcGQAImAC0AAAAHAK7+hgAB////5v/sBR0GPwAmADMUAAAHAK7/LwAA////FAAABR8GPwAmAD1kAAAHAK7+XQAA////6QAABN8GPwAmALoUAAAHAK7/MgAA////m//0Aq0GdAImAMMAAAEHAK//Kv/sAB0AsABFWLAMLxuxDBo+WbEYAfSwD9CwGBCwIdAwMQD//wAcAAAFHQWwAgYAJQAA//8AqQAABIgFsAIGACYAAP//AKkAAARGBbACBgApAAD//wBWAAAEegWwAgYAPgAA//8AqQAABQgFsAIGACwAAP//ALcAAAF3BbACBgAtAAD//wCpAAAFBQWwAgYALwAA//8AqQAABlIFsAIGADEAAP//AKkAAAUIBbACBgAyAAD//wB2/+wFCQXEAgYAMwAA//8AqQAABMAFsAIGADQAAP//ADEAAASXBbACBgA4AAD//wAPAAAEuwWwAgYAPQAA//8AOQAABM4FsAIGADwAAP///9UAAAJeBwcCJgAt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BH4AZAHwAIYBsQApBBEASARkAJgELgCGA8cASwcvAGoFOAAcBPsAqQU1AHcFPwCpBIwAqQRsAKkFcwB6BbQAqQItALcEagA1BQQAqQROAKkG/ACpBbQAqQWAAHYFDACpBYAAbQTtAKgEvwBQBMYAMQUwAIwFFwAcBxkAPQUEADkEzgAPBMoAVgIfAJIDSAAoAh8ACQNYAEADnAAEAnkAOQRaAG0EfQCMBDAAXASDAF8EPQBdAscAPAR9AGAEaACMAfEAjQHp/78EDgCNAfEAnAcDAIsEagCMBJAAWwR9AIwEjABfArUAjAQgAF8CnQAJBGkAiAPgACEGAwArA/cAKQPJABYD9wBYArUAQAHzAK8CtQATBXEAgwHzAIsEYABpBKYAWwW0AGkEMwAPAesAkwToAFoDWABlBkkAWwOTAJMDwQBmBG4AfwZKAFoDqgCOAv0AggRGAGEC7wBCAu8APgKCAHsEiACaA+kAQwIWAJMB+wB0Au8AegOjAHoDwABmBdwAVQY1AFAGOQBvA8kARAd6//IERABZBYAAdgS6AKYEwgCLBsEATgSwAH4EkQBHBIgAWwScAJUExwBfBZoAHQH6AJsEcwCaBE8AIgIpACIFiwCiBIgAkQehAGgHRABhAfwAoAWHAF0Cuf/kBX4AZQSSAFsFkACMBPMAiAID/7QENwBiA8QAqQONAI0DqwCOA2oAgQHxAI0CrQB5AioAMgPGAHsC/ABeAloAfgAA/KcAAP1vAAD8iwAA/V4AAPwnAAD9OAINALcECwBxAhcAkwRzALEFpAAfBXEAZwU+ADIEkQB4BbUAsgSRAEUFuwBNBYkAWgVSAHEEhQBkBL0AoAQCAC4EiABgBFAAYwQlAG0EiACRBI4AegKXAMMEbgAlA+wAZQTEACkEiACRBE0AZQSIAGAELABRBF0AjwWjAFcFmgBfBpcAegShAHkEQv/aBkgASgX/ACoFZAB7CJEAMQikALEGggA+BbQAsAULAKIGBAAyB0MAGwS/AFAFtACxBakALwUHAE0GLABTBdkArwV6AJYHhwCwB8AAsAYSABAG6wCyBQUAowVkAJMHJwC3BRgAWQRsAGEEkgCdA1sAmgTUAC4GIAAVBBAAWASeAJwEUgCcBKAALAXvAJ0EnQCcBJ4AnAPYACgFzQBkBL0AnARZAGcGeACcBp4AkQT3AB4GNgCdBFgAnQRNAGQGhwCdBGQALwRo/+gETQBnBskAJwbkAJwEif/9BJ4AnAcIAJwGKwCBBFb/3AcrALcF+ACZBNIAKARGAA8HCwDJBgsAvAbRAJMF4QCWCQQAtgfRAJsEIwBQA9sATAVxAGcEiwBbBQoAFgQDAC4FcQBnBIgAWwcBAJwGJAB+BwgAnAYrAIEFMgB1BEcAZAT9AHQAAPxnAAD8cQAA/WYAAP2kAAD6GwAA+iwGCQCxBO0AnARW/9wFGwCoBIkAjARjAKIDkACRBNsAsQQFAJEHogAbBmEAFQWaALIEuACcBQkAowR+AJoGjABEBYMAPgX/AKkE2QCcB88AqAW0AJEIMQCwBvQAkQXuAHEE0wBtBRgAOQQqACkHLAA0BVwAHwW8AJYElgBnBW8AlgRqAIMFbwCJBi8APwS9/94FCQCjBFoAmgX+AC8E7wAsBbIAsQSIAJEGEgCpBOwAnAdPAKkGPgCdBYcAXQSoAGgEqABpBLcAOgOrADsFLgA5BEAAKQT2AFcGlABZBuQAZAZWADYFKwAxBEkAUgQHAHkHwQBEBnUAPwf7AKkGoQCQBPYAdgQdAGUFrQAjBSAARgVkAJYGAgAvBPIALAMgAG8EFAAACCkAAAQUAAAIKQAAArkAAAIKAAABXAAABH8AAAIwAAABogAAAQAAAADRAAAAAAAAAjQAJQI0ACUFQACiBj8AkAOlAA0BmQBgAZkAMAGXACQBmQBPAtQAaALbADwCwQAkBGkARgSPAFcCsgCKA8QAlAVaAJQBfgBSB6oARAJmAGwCZgBZA6MAOwLvADYDYAB6BKYAWwZVAB8GkACnCHYAqAXrAB8GKwCMBH4AXwXaAB8EIgAqBHQAIAVIAF0FTwAfBecAegPOAGgIOgCiBQEAZwUXAJgGJgBUBtcAZAbPAGMGagBZBI8AagWOAKkErwBFBJIAqATFAD8IOgBiAgz/sASCAGUEZACYBBEAPgQvAIUECAArAkwAtQKPAG4CAwBcBG4AHwSLADwG1AA8BtQAPAAAAAAIMwBbCDUAXALvAEIC7wB6Au8AUALvAD4C7wA2Au8AWwLvAFYC7wA6Au8ATwLvAEkDlgCPArUAngUkALIB/QCfA6QAgQAA/KQD7wBuA/P/XgQOAGkD9ABpA58AgQOeAIEC7wBQAu8ANgLvAFsC7wBWAu8AOgLvAE8C7wBJA6QAgwGRAGcB/P+2BH8AfgR/AHACBv+0AgT/tAH7AJsB+//6AfsAmwQgADsDeQBXAfsAAAI1ACUFXQAHBV0ABwSG/+IExgAxAp3/9AU4ABwFOAAcBTgAHAU4ABwFOAAcBTgAHAU4ABwFNQB3BIwAqQSMAKkEjACpBIwAqQIt/+ACLQCwAi3/6QIt/9UFtACpBYAAdgWAAHYFgAB2BYAAdgWAAHYFMACMBTAAjAUwAIwFMACMBM4ADwRaAG0EWgBtBFoAbQRaAG0EWgBtBFoAbQRaAG0EMABcBD0AXQQ9AF0EPQBdBD0AXQH6/8YB+gCWAfr/zwH6/7sEagCMBJAAWwSQAFsEkABbBJAAWwSQAFsEaQCIBGkAiARpAIgEaQCIA8kAFgPJABYFOAAcBFoAbQU4ABwEWgBtBTgAHARaAG0FNQB3BDAAXAU1AHcEMABcBTUAdwQwAFwFNQB3BDAAXAU/AKkFGQBfBIwAqQQ9AF0EjACpBD0AXQSMAKkEPQBdBIwAqQQ9AF0EjACpBD0AXQVzAHoEfQBgBXMAegR9AGAFcwB6BH0AYAVzAHoEfQBgBbQAqQRoAIwCLf+3Afr/nQIt/8wB+v+yAi3/7AH6/9ICLQAYAfH/+wItAKkGlwC3A9oAjQRqADUCA/+0BQQAqQQOAI0ETgChAfEAkwROAKkB8QBXBE4AqQKHAJwETgCpAs0AnAW0AKkEagCMBbQAqQRqAIwFtACpBGoAjARq/7wFgAB2BJAAWwWAAHYEkABbBYAAdgSQAFsE7QCoArUAjATtAKgCtQBTBO0AqAK1AGMEvwBQBCAAXwS/AFAEIABfBL8AUAQgAF8EvwBQBCAAXwS/AFAEIABfBMYAMQKdAAkExgAxAp0ACQTGADECxQAJBTAAjARpAIgFMACMBGkAiAUwAIwEaQCIBTAAjARpAIgFMACMBGkAiAUwAIwEaQCIBxkAPQYDACsEzgAPA8kAFgTOAA8EygBWA/cAWATKAFYD9wBYBMoAVgP3AFgHev/yBsEATgWAAHYEiABbBTgAHASM/ykFtP83Ai3/PQWU/+YFMv8UBWb/6QKX/5sFOAAcBPsAqQSMAKkEygBWBbQAqQItALcFBACpBvwAqQW0AKkFgAB2BQwAqQTGADEEzgAPBQQAOQIt/9UEzgAPBIUAZARQAGMEiACRApcAwwRdAI8EcwCaBJAAWwSIAJoD4AAhA/cAKQKX/+UEXQCPBJAAWwRdAI8GlwB6BIwAqQRzALEEvwBQAi0AtwIt/9UEagA1BSQAsgUEAKkFBwBNBTgAHAT7AKkEcwCxBIwAqQW0ALEG/ACpBbQAqQWAAHYFtQCyBQwAqQU1AHcExgAxBQQAOQRaAG0EPQBdBJ4AnASQAFsEfQCMBDAAXAPJABYD9wApBD0AXQNbAJoEIABfAfEAjQH6/7sB6f+/BFIAnAPJABYHGQA9BgMAKwcZAD0GAwArBxkAPQYDACsEzgAPA8kAFgFlAGcCjwCIBB4AoAID/7QBmQAwBvwAqQcDAIsFOAAcBFoAbQSMAKkFtACxBD0AXQSeAJwFiQBaBZoAXwUKABYEA//7CFkAWwlJAHYEvwBQBBAAWAU1AHcEMABcBM4ADwQCAC4CLQC3B0MAGwYgABUCLQC3BTgAHARaAG0FOAAcBFoAbQd6//IGwQBOBIwAqQQ9AF0FhwBdBDcAYgQ3AGIHQwAbBiAAFQS/AFAEEABYBbQAsQSeAJwFtACxBJ4AnAWAAHYEkABbBXEAZwSLAFsFcQBnBIsAWwVkAJMETQBkBQcATQPJABYFBwBNA8kAFgUHAE0DyQAWBXoAlgRZAGcG6wCyBjYAnQSDAF8FOAAcBFoAbQU4ABwEWgBtBTgAHARaAG0FOAAcBFr/ygU4ABwEWgBtBTgAHARaAG0FOAAcBFoAbQU4ABwEWgBtBTgAHARaAG0FOAAcBFoAbQU4ABwEWgBtBTgAHARaAG0EjACpBD0AXQSMAKkEPQBdBIwAqQQ9AF0EjACpBD0AXQSM//AEPf+6BIwAqQQ9AF0EjACpBD0AXQSMAKkEPQBdAi0AtwH6AJsCLQCjAfEAhQWAAHYEkABbBYAAdgSQAFsFgAB2BJAAWwWAAEcEkP/EBYAAdgSQAFsFgAB2BJAAWwWAAHYEkABbBX4AZQSSAFsFfgBlBJIAWwV+AGUEkgBbBX4AZQSSAFsFfgBlBJIAWwUwAIwEaQCIBTAAjARpAIgFkACMBPMAiAWQAIwE8wCIBZAAjATzAIgFkACMBPMAiAWQAIwE8wCIBM4ADwPJABYEzgAPA8kAFgTOAA8DyQAWBKEAXwTGADED2AAoBXoAlgRZAGcEcwCxA1sAmgYvAD8Evf/eBGgAjAUF/9QFBf/UBHMAAwNb//wFOP/3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AYcBiQCJAe0B7gCMAfAB8ACOAfICBwCPAgwCEwClAhUCGACtAh0CIgCxAicCLwC3AjECMQDAAjMCMwDBAjUCNQDCAjcCNwDDAjkCQgDEAksCTQDOAk8CTwDRAlECUQDSAlMCUwDTAlUCVQDUAloCWgDVAlwCXADWAl4CXgDXAmACYADYAmICYgDZAmQCcADaAnICcgDnAnQCdADoAnYCdgDpAoECgQDqAoMCgwDrAoUChQDsApMCkwDtApUCmADuApoCmgDyApwCnADzAqICpwD0AqoCuQD6ArwCvAEKAsACwAELAsICwgEMAsYCxgENAskCygEOAswCzQEQAs8C1QESAtcC2QEZAtsC4AEcAuIC4wEiAuUC6AEkAu4C7wEoAvEC8QEqAvMC8wErAvUC+AEsAvsDAAEwAwIDAgE2AwYDBwE3AwwDDAE5Aw4DFwE6AxoDGwFEAx0DIAFGAycDKAFKAywDLAFMAy4DNAFNAzoDYgFUA2QDZAF9A2YDcwF+A3sDewGMA4wDkQGNA5MDkwGTA5cDmAGUA5sDmwGWA50DngGXA6ADoAGZA6IDogGaA7MDtwGbA7kDuQGgA7sDvAGhA74DvgGjA8IDxAGkA8YDxgGnA8gDygGoA8wDzAGrA84DzgGsA9AD1gGtA9gD2AG0A9sD2wG1A94D4gG2A+QD5AG7A+YD5gG8AAsAOP/YANL/2ADW/9gBOf/YAUX/2AKB/9gCg//YAoX/2ALd/9gDk//YA9v/2AAYADoAFAA7ABIAPQAWARkAFAIMABYCkwASApUAFgKXABYCpwAWArYAFgK5ABYC7wASAvEAEgLzABIC9QAWAwYAFAMOABYDjAAWA44AFgOQABYDogAWA94AFAPgABQD4gASAAEAE/8gANcAEP8WABL/FgAl/1YALv74ADgAFABF/94AR//rAEj/6wBJ/+sAS//rAFP/6wBV/+sAVv/mAFn/6gBa/+gAXf/oAJT/6wCZ/+sAm//qALL/VgC0/1YAu//rAL3/6ADI/+sAyf/rAMv/6gDSABQA1gAUAPf/6wED/+sBDf9WARj/6wEa/+gBHv/rASL/6wE5ABQBQv/rAUUAFAFg/+sBYf/rAWv/6wGG/xYBiv8WAY7/FgGP/xYB8v9WAfP/VgH0/1YB9f9WAfb/VgH3/1YB+P9WAg3/3gIO/94CD//eAhD/3gIR/94CEv/eAhP/3gIU/+sCFf/rAhb/6wIX/+sCGP/rAh7/6wIf/+sCIP/rAiH/6wIi/+sCI//qAiT/6gIl/+oCJv/qAif/6AIo/+gCKf9WAir/3gIr/1YCLP/eAi3/VgIu/94CMP/rAjL/6wI0/+sCNv/rAjj/6wI6/+sCPP/rAj7/6wJA/+sCQv/rAkT/6wJG/+sCSP/rAkr/6wJY/vgCbP/rAm7/6wJw/+sCgQAUAoMAFAKFABQCiP/qAor/6gKM/+oCjv/qApD/6gKS/+oClv/oAqL/VgKq/1YCuv/rAr7/6gLA/+sCwv/oAsX/6gLG/+sCx//qAs7++ALS/1YC3QAUAt//3gLg/+sC4v/rAuT/6wLl/+gC5//rAu7/6AL2/+gC/v9WAv//3gMC/+sDB//oAwj/6wMN/+sDD//oAxT/VgMV/94DFv9WAxf/3gMb/+sDHf/rAx7/6wMo/+sDKv/rAyz/6wMw/+gDMv/oAzT/6AM5/+sDOv9WAzv/3gM8/1YDPf/eAz7/VgM//94DQP9WA0H/3gNC/1YDQ//eA0T/VgNF/94DRv9WA0f/3gNI/1YDSf/eA0r/VgNL/94DTP9WA03/3gNO/1YDT//eA1D/VgNR/94DU//rA1X/6wNX/+sDWf/rA1v/6wNd/+sDX//rA2H/6wNn/+sDaf/rA2v/6wNt/+sDb//rA3H/6wNz/+sDdf/rA3f/6wN5/+sDe//rA33/6wN//+oDgf/qA4P/6gOF/+oDh//qA4n/6gOL/+oDjf/oA4//6AOR/+gDkwAUA7X/VgO2/94DuP/rA7z/6wPA/+oDxf/rA8f/6wPbABQD3//oA+H/6AAjADj/1QA6/+QAO//sAD3/3QDS/9UA1v/VARn/5AE5/9UBRf/VAgz/3QKB/9UCg//VAoX/1QKT/+wClf/dApf/3QKn/90Ctv/dArn/3QLd/9UC7//sAvH/7ALz/+wC9f/dAwb/5AMO/90DjP/dA47/3QOQ/90Dk//VA6L/3QPb/9UD3v/kA+D/5APi/+wAHQA4/7AAOv/tAD3/0ADS/7AA1v+wARn/7QE5/7ABRf+wAgz/0AKB/7ACg/+wAoX/sAKV/9ACl//QAqf/0AK2/9ACuf/QAt3/sAL1/9ADBv/tAw7/0AOM/9ADjv/QA5D/0AOT/7ADov/QA9v/sAPe/+0D4P/tABEALv/uADn/7gII/+4CCf/uAgr/7gIL/+4CWP/uAof/7gKJ/+4Ci//uAo3/7gKP/+4Ckf/uAs7/7gN+/+4DgP/uA93/7gBNAAYAEAALABAADQAUAEEAEgBH/+gASP/oAEn/6ABL/+gAVf/oAGEAEwCU/+gAmf/oALv/6ADI/+gAyf/oAPf/6AED/+gBHv/oASL/6AFC/+gBYP/oAWH/6AFr/+gBhAAQAYUAEAGHABABiAAQAYkAEAIU/+gCFf/oAhb/6AIX/+gCGP/oAjD/6AIy/+gCNP/oAjb/6AI4/+gCOv/oAjz/6AI+/+gCQP/oAkL/6AJE/+gCRv/oAkj/6AJK/+gCuv/oAuD/6ALk/+gC5//oAvcAEAL4ABAC+wAQAwL/6AMI/+gDDf/oAxv/6AMd/+gDHv/oAyr/6AM5/+gDU//oA1X/6ANX/+gDWf/oA1v/6ANd/+gDX//oA2H/6AN1/+gDd//oA3n/6AN9/+gDuP/oA8X/6APH/+gAQABH/+wASP/sAEn/7ABL/+wAVf/sAJT/7ACZ/+wAu//sAMj/7ADJ/+wA9//sAQP/7AEe/+wBIv/sAUL/7AFg/+wBYf/sAWv/7AIU/+wCFf/sAhb/7AIX/+wCGP/sAjD/7AIy/+wCNP/sAjb/7AI4/+wCOv/sAjz/7AI+/+wCQP/sAkL/7AJE/+wCRv/sAkj/7AJK/+wCuv/sAuD/7ALk/+wC5//sAwL/7AMI/+wDDf/sAxv/7AMd/+wDHv/sAyr/7AM5/+wDU//sA1X/7ANX/+wDWf/sA1v/7ANd/+wDX//sA2H/7AN1/+wDd//sA3n/7AN9/+wDuP/sA8X/7APH/+wAGABT/+wBGP/sAh7/7AIf/+wCIP/sAiH/7AIi/+wCbP/sAm7/7AJw/+wCwP/sAsb/7ALi/+wDKP/sAyz/7ANn/+wDaf/sA2v/7ANt/+wDb//sA3H/7ANz/+wDe//sA7z/7AAGABD/hAAS/4QBhv+EAYr/hAGO/4QBj/+EABEALv/sADn/7AII/+wCCf/sAgr/7AIL/+wCWP/sAof/7AKJ/+wCi//sAo3/7AKP/+wCkf/sAs7/7AN+/+wDgP/sA93/7AAgAAb/8gAL//IAWv/zAF3/8wC9//MA9v/1ARr/8wGE//IBhf/yAYf/8gGI//IBif/yAif/8wIo//MClv/zAsL/8wLl//MC7v/zAvb/8wL3//IC+P/yAvv/8gMH//MDD//zAzD/8wMy//MDNP/zA43/8wOP//MDkf/zA9//8wPh//MAOwAn//MAK//zADP/8wA1//MAg//zAJP/8wCY//MAs//zAMQADQDT//MBCP/zARf/8wEb//MBHf/zAR//8wEh//MBQf/zAWr/8wH5//MCA//zAgT/8wIF//MCBv/zAgf/8wIv//MCMf/zAjP/8wI1//MCQ//zAkX/8wJH//MCSf/zAmv/8wJt//MCb//zAqD/8wKm//MCs//zAtn/8wLc//MDCf/zAwz/8wMn//MDKf/zAyv/8wNm//MDaP/zA2r/8wNs//MDbv/zA3D/8wNy//MDdP/zA3b/8wN4//MDev/zA3z/8wO7//MD1P/zADwAJ//mACv/5gAz/+YANf/mAIP/5gCT/+YAmP/mALP/5gC4/8IAxAAQANP/5gEI/+YBF//mARv/5gEd/+YBH//mASH/5gFB/+YBav/mAfn/5gID/+YCBP/mAgX/5gIG/+YCB//mAi//5gIx/+YCM//mAjX/5gJD/+YCRf/mAkf/5gJJ/+YCa//mAm3/5gJv/+YCoP/mAqb/5gKz/+YC2f/mAtz/5gMJ/+YDDP/mAyf/5gMp/+YDK//mA2b/5gNo/+YDav/mA2z/5gNu/+YDcP/mA3L/5gN0/+YDdv/mA3j/5gN6/+YDfP/mA7v/5gPU/+YAOAAl/+QAPP/SAD3/0wCy/+QAtP/kAMT/4gDa/9IBDf/kATP/0gFD/9IBXf/SAfL/5AHz/+QB9P/kAfX/5AH2/+QB9//kAfj/5AIM/9MCKf/kAiv/5AIt/+QClf/TApf/0wKi/+QCp//TAqr/5AK2/9MCt//SArn/0wLS/+QC3v/SAvX/0wL+/+QDDv/TAxH/0gMU/+QDFv/kAx//0gM6/+QDPP/kAz7/5ANA/+QDQv/kA0T/5ANG/+QDSP/kA0r/5ANM/+QDTv/kA1D/5AOM/9MDjv/TA5D/0wOi/9MDtf/kACgAEP8eABL/HgAl/80Asv/NALT/zQDH//IBDf/NAYb/HgGK/x4Bjv8eAY//HgHy/80B8//NAfT/zQH1/80B9v/NAff/zQH4/80CKf/NAiv/zQIt/80Cov/NAqr/zQLS/80C/v/NAxT/zQMW/80DOv/NAzz/zQM+/80DQP/NA0L/zQNE/80DRv/NA0j/zQNK/80DTP/NA07/zQNQ/80Dtf/NAAEAxAAOAAIAyv/tAPb/wAC6AEf/3ABI/9wASf/cAEv/3ABR//MAUv/zAFP/1gBU//MAVf/cAFn/3QBa/+EAXf/hAJT/3ACZ/9wAm//dALv/3AC9/+EAvv/uAL//5gDB//MAwv/rAMP/6QDF//AAxv/nAMj/3ADJ/9wAyv/jAMv/3QDM/84Azf/UAM7/2wDs//MA8P/zAPH/8wDz//MA9P/zAPX/8wD3/9wA+P/zAPr/8wD7//MA/v/zAQD/8wED/9wBBf/zARj/1gEa/+EBHv/cASL/3AEr//MBNv/zATz/8wE+//MBQv/cAVP/8wFV//MBV//zAVz/8wFg/9wBYf/cAWv/3AIU/9wCFf/cAhb/3AIX/9wCGP/cAh3/8wIe/9YCH//WAiD/1gIh/9YCIv/WAiP/3QIk/90CJf/dAib/3QIn/+ECKP/hAjD/3AIy/9wCNP/cAjb/3AI4/9wCOv/cAjz/3AI+/9wCQP/cAkL/3AJE/9wCRv/cAkj/3AJK/9wCZf/zAmf/8wJp//MCav/zAmz/1gJu/9YCcP/WAoj/3QKK/90CjP/dAo7/3QKQ/90Ckv/dApb/4QK6/9wCvP/zAr7/3QLA/9YCwv/hAsX/3QLG/9YCx//dAuD/3ALh//MC4v/WAuP/8wLk/9wC5f/hAuf/3ALo//MC7f/zAu7/4QL2/+EC/f/zAwL/3AMD//MDB//hAwj/3AMN/9wDD//hAxv/3AMd/9wDHv/cAyT/8wMm//MDKP/WAyr/3AMs/9YDMP/hAzL/4QM0/+EDOP/zAzn/3ANT/9wDVf/cA1f/3ANZ/9wDW//cA13/3ANf/9wDYf/cA2f/1gNp/9YDa//WA23/1gNv/9YDcf/WA3P/1gN1/9wDd//cA3n/3AN7/9YDff/cA3//3QOB/90Dg//dA4X/3QOH/90Dif/dA4v/3QON/+EDj//hA5H/4QOY//MDtP/zA7j/3AO8/9YDwP/dA8X/3APH/9wD0f/zA9P/8wPf/+ED4f/hAHwABv/aAAv/2gBH//AASP/wAEn/8ABL//AAVf/wAFn/7wBa/9wAXf/cAJT/8ACZ//AAm//vALv/8AC9/9wAwv/sAMQADwDG/+oAyP/wAMn/8ADK/8QAy//vAMz/5wD3//ABA//wARr/3AEe//ABIv/wAUL/8AFg//ABYf/wAWv/8AGE/9oBhf/aAYf/2gGI/9oBif/aAhT/8AIV//ACFv/wAhf/8AIY//ACI//vAiT/7wIl/+8CJv/vAif/3AIo/9wCMP/wAjL/8AI0//ACNv/wAjj/8AI6//ACPP/wAj7/8AJA//ACQv/wAkT/8AJG//ACSP/wAkr/8AKI/+8Civ/vAoz/7wKO/+8CkP/vApL/7wKW/9wCuv/wAr7/7wLC/9wCxf/vAsf/7wLg//AC5P/wAuX/3ALn//AC7v/cAvb/3AL3/9oC+P/aAvv/2gMC//ADB//cAwj/8AMN//ADD//cAxv/8AMd//ADHv/wAyr/8AMw/9wDMv/cAzT/3AM5//ADU//wA1X/8ANX//ADWf/wA1v/8ANd//ADX//wA2H/8AN1//ADd//wA3n/8AN9//ADf//vA4H/7wOD/+8Dhf/vA4f/7wOJ/+8Di//vA43/3AOP/9wDkf/cA7j/8APA/+8Dxf/wA8f/8APf/9wD4f/cADwABv+gAAv/oABK/+kAWf/xAFr/xQBd/8UAm//xAL3/xQDC/+4AxAAQAMb/7ADK/yAAy//xARr/xQGE/6ABhf+gAYf/oAGI/6ABif+gAiP/8QIk//ECJf/xAib/8QIn/8UCKP/FAoj/8QKK//ECjP/xAo7/8QKQ//ECkv/xApb/xQK+//ECwv/FAsX/8QLH//EC5f/FAu7/xQL2/8UC9/+gAvj/oAL7/6ADB//FAw//xQMw/8UDMv/FAzT/xQN///EDgf/xA4P/8QOF//EDh//xA4n/8QOL//EDjf/FA4//xQOR/8UDwP/xA9//xQPh/8UAQQBH/+cASP/nAEn/5wBL/+cAVf/nAJT/5wCZ/+cAu//nAMQADwDI/+cAyf/nAPf/5wED/+cBHv/nASL/5wFC/+cBYP/nAWH/5wFr/+cCFP/nAhX/5wIW/+cCF//nAhj/5wIw/+cCMv/nAjT/5wI2/+cCOP/nAjr/5wI8/+cCPv/nAkD/5wJC/+cCRP/nAkb/5wJI/+cCSv/nArr/5wLg/+cC5P/nAuf/5wMC/+cDCP/nAw3/5wMb/+cDHf/nAx7/5wMq/+cDOf/nA1P/5wNV/+cDV//nA1n/5wNb/+cDXf/nA1//5wNh/+cDdf/nA3f/5wN5/+cDff/nA7j/5wPF/+cDx//nAAUAyv/qAO3/7gD2/6sBOv/sAW3/7AABAPb/1QABAMoACwB7AAYADAALAAwAR//oAEj/6ABJ/+gASgAMAEv/6ABT/+oAVf/oAFoACwBdAAsAlP/oAJn/6AC7/+gAvQALAL7/7QDGAAsAyP/oAMn/6ADKAAwA9//oAQP/6AEY/+oBGgALAR7/6AEi/+gBQv/oAWD/6AFh/+gBa//oAYQADAGFAAwBhwAMAYgADAGJAAwCFP/oAhX/6AIW/+gCF//oAhj/6AIe/+oCH//qAiD/6gIh/+oCIv/qAicACwIoAAsCMP/oAjL/6AI0/+gCNv/oAjj/6AI6/+gCPP/oAj7/6AJA/+gCQv/oAkT/6AJG/+gCSP/oAkr/6AJs/+oCbv/qAnD/6gKWAAsCuv/oAsD/6gLCAAsCxv/qAuD/6ALi/+oC5P/oAuUACwLn/+gC7gALAvYACwL3AAwC+AAMAvsADAMC/+gDBwALAwj/6AMN/+gDDwALAxv/6AMd/+gDHv/oAyj/6gMq/+gDLP/qAzAACwMyAAsDNAALAzn/6ANT/+gDVf/oA1f/6ANZ/+gDW//oA13/6ANf/+gDYf/oA2f/6gNp/+oDa//qA23/6gNv/+oDcf/qA3P/6gN1/+gDd//oA3n/6AN7/+oDff/oA40ACwOPAAsDkQALA7j/6AO8/+oDxf/oA8f/6APfAAsD4QALAAEA9v/YAA4AXP/tAF7/7QDu/+0A9v+qATT/7QFE/+0BXv/tApn/7QKb/+0Cnf/tAub/7QMS/+0DIP/tA+X/7QANAFz/8gBe//IA7v/yATT/8gFE//IBXv/yApn/8gKb//ICnf/yAub/8gMS//IDIP/yA+X/8gAiAFr/9ABc//IAXf/0AF7/8wC9//QA7v/yARr/9AE0//IBRP/yAV7/8gIn//QCKP/0Apb/9AKZ//MCm//zAp3/8wLC//QC5f/0Aub/8gLu//QC9v/0Awf/9AMP//QDEv/yAyD/8gMw//QDMv/0AzT/9AON//QDj//0A5H/9APf//QD4f/0A+X/8wCMAAb/ygAL/8oAOP/SADr/1AA8//QAPf/TAFH/0QBS/9EAVP/RAFr/5gBc/+8AXf/mAL3/5gDB/9EA0v/SANb/0gDa//QA3v/tAOH/4QDm/9QA7P/RAO7/7wDw/9EA8f/RAPP/0QD0/9EA9f/RAPb/yQD4/9EA+v/RAPv/0QD+/9EBAP/RAQX/0QEJ/+UBGf/UARr/5gEg/+MBK//RATP/9AE0/+8BNv/RATn/0gE6/8QBPP/RAT7/0QFD//QBRP/vAUX/0gFH/+EBSf/hAVP/0QFV/9EBV//RAVz/0QFd//QBXv/vAWL/1AFj//UBZP/nAWz/0gFt/8kBhP/KAYX/ygGH/8oBiP/KAYn/ygIM/9MCHf/RAif/5gIo/+YCZf/RAmf/0QJp/9ECav/RAoH/0gKD/9IChf/SApX/0wKW/+YCl//TAqf/0wK2/9MCt//0Arn/0wK8/9ECwv/mAtH/7QLd/9IC3v/0AuH/0QLj/9EC5f/mAub/7wLo/9EC7f/RAu7/5gL1/9MC9v/mAvf/ygL4/8oC+//KAv3/0QMD/9EDBv/UAwf/5gMO/9MDD//mAxH/9AMS/+8DH//0AyD/7wMk/9EDJv/RAy//7QMw/+YDMf/tAzL/5gMz/+0DNP/mAzX/4QM4/9EDjP/TA43/5gOO/9MDj//mA5D/0wOR/+YDk//SA5X/4QOY/9EDov/TA7T/0QPR/9ED0//RA9v/0gPe/9QD3//mA+D/1APh/+YAKAA4/74AWv/vAF3/7wC9/+8A0v++ANb/vgDm/8kA9v/fAQn/7QEa/+8BIP/rATn/vgE6/98BRf++AUz/6QFj//UBbf/gAif/7wIo/+8Cgf++AoP/vgKF/74Clv/vAsL/7wLd/74C5f/vAu7/7wL2/+8DB//vAw//7wMw/+8DMv/vAzT/7wON/+8Dj//vA5H/7wOT/74D2/++A9//7wPh/+8APwA4/+YAOv/nADz/8gA9/+cAXP/xANL/5gDW/+YA2v/yAN7/7gDh/+gA5v/mAO7/8QD2/9ABGf/nATP/8gE0//EBOf/mATr/zgFD//IBRP/xAUX/5gFH/+gBSf/oAV3/8gFe//EBYv/nAWT/7QFs/+YBbf/QAgz/5wKB/+YCg//mAoX/5gKV/+cCl//nAqf/5wK2/+cCt//yArn/5wLR/+4C3f/mAt7/8gLm//EC9f/nAwb/5wMO/+cDEf/yAxL/8QMf//IDIP/xAy//7gMx/+4DM//uAzX/6AOM/+cDjv/nA5D/5wOT/+YDlf/oA6L/5wPb/+YD3v/nA+D/5wCUACUAEAAn/+gAK//oADP/6AA1/+gAOP/gADr/4AA9/98Ag//oAJP/6ACY/+gAsgAQALP/6AC0ABAA0v/gANP/6ADUABAA1v/gANkAFADdABAA4f/hAOb/4ADtABMA8gAQAPn/4AEEABABCP/oAQ0AEAEX/+gBGf/gARv/6AEd/+gBH//oASH/6AE5/+ABQf/oAUX/4AFH/+EBSP/gAUn/4QFK/+ABTf/hAVAAEAFRABABWP/pAWL/3wFk/94BZgAQAWr/6AFs/98Bbv/yAW8AEAFwABAB8gAQAfMAEAH0ABAB9QAQAfYAEAH3ABAB+AAQAfn/6AID/+gCBP/oAgX/6AIG/+gCB//oAgz/3wIpABACKwAQAi0AEAIv/+gCMf/oAjP/6AI1/+gCQ//oAkX/6AJH/+gCSf/oAmv/6AJt/+gCb//oAoH/4AKD/+AChf/gApX/3wKX/98CoP/oAqIAEAKm/+gCp//fAqoAEAKz/+gCtv/fArn/3wLSABAC2f/oAtz/6ALd/+AC9f/fAv4AEAMG/+ADCf/oAwz/6AMO/98DFAAQAxYAEAMn/+gDKf/oAyv/6AM1/+EDNv/gAzoAEAM8ABADPgAQA0AAEANCABADRAAQA0YAEANIABADSgAQA0wAEANOABADUAAQA2b/6ANo/+gDav/oA2z/6ANu/+gDcP/oA3L/6AN0/+gDdv/oA3j/6AN6/+gDfP/oA4z/3wOO/98DkP/fA5P/4AOV/+EDlv/gA6L/3wO1ABADu//oA9T/6APb/+AD3v/gA+D/4AA1ABv/8gA4//EAOv/0ADz/9AA9//AA0v/xANT/9QDW//EA2v/0AN3/9QDe//MA5v/xARn/9AEz//QBOf/xAUP/9AFF//EBUP/1AV3/9AFi//IBZP/yAWb/9QFs//IBb//1Agz/8AKB//ECg//xAoX/8QKV//ACl//wAqf/8AK2//ACt//0Arn/8ALR//MC3f/xAt7/9AL1//ADBv/0Aw7/8AMR//QDH//0Ay//8wMx//MDM//zA4z/8AOO//ADkP/wA5P/8QOi//AD2//xA97/9APg//QAagAlAA8AOP/mADr/5gA8AA4APf/mALIADwC0AA8A0v/mANQADgDW/+YA2QATANoADgDdAA4A3gALAOH/5QDm/+YA5//0AO0AEgDyAA8A9v/nAPn/6AEEAA8BDQAPARn/5gEzAA4BOf/mATr/5wFDAA4BRf/mAUf/5QFI/+gBSf/lAUr/6AFM/+QBUAAOAVEADwFdAA4BYv/mAWT/5gFmAA4BbP/mAW3/5wFvAA4BcAAPAfIADwHzAA8B9AAPAfUADwH2AA8B9wAPAfgADwIM/+YCKQAPAisADwItAA8Cgf/mAoP/5gKF/+YClf/mApf/5gKiAA8Cp//mAqoADwK2/+YCtwAOArn/5gLRAAsC0gAPAt3/5gLeAA4C9f/mAv4ADwMG/+YDDv/mAxEADgMUAA8DFgAPAx8ADgMvAAsDMQALAzMACwM1/+UDNv/oAzoADwM8AA8DPgAPA0AADwNCAA8DRAAPA0YADwNIAA8DSgAPA0wADwNOAA8DUAAPA4z/5gOO/+YDkP/mA5P/5gOV/+UDlv/oA6L/5gO1AA8D2//mA97/5gPg/+YAMQA4/+MAPP/lAD3/5ADS/+MA1P/lANb/4wDZ/+IA2v/lAN3/5QDe/+kA8v/qAQT/6gEz/+UBOf/jAUP/5QFF/+MBUP/lAVH/6gFd/+UBZv/lAWz/5AFv/+UBcP/qAgz/5AKB/+MCg//jAoX/4wKV/+QCl//kAqf/5AK2/+QCt//lArn/5ALR/+kC3f/jAt7/5QL1/+QDDv/kAxH/5QMf/+UDL//pAzH/6QMz/+kDjP/kA47/5AOQ/+QDk//jA6L/5APb/+MAJAA4/+IAPP/kANL/4gDU/+QA1v/iANn/4QDa/+QA3f/kAN7/6QDt/+QA8v/rAQT/6wEz/+QBOf/iAUP/5AFF/+IBUP/kAVH/6wFd/+QBZv/kAW//5AFw/+sCgf/iAoP/4gKF/+ICt//kAtH/6QLd/+IC3v/kAxH/5AMf/+QDL//pAzH/6QMz/+kDk//iA9v/4gAYADj/6wA9//MA0v/rANb/6wE5/+sBRf/rAgz/8wKB/+sCg//rAoX/6wKV//MCl//zAqf/8wK2//MCuf/zAt3/6wL1//MDDv/zA4z/8wOO//MDkP/zA5P/6wOi//MD2//rADkAUf/vAFL/7wBU/+8AXP/wAMH/7wDs/+8A7f/uAO7/8ADw/+8A8f/vAPP/7wD0/+8A9f/vAPb/7gD4/+8A+v/vAPv/7wD+/+8BAP/vAQX/7wEJ//QBIP/xASv/7wE0//ABNv/vATr/7wE8/+8BPv/vAUT/8AFT/+8BVf/vAVf/7wFc/+8BXv/wAW3/7wId/+8CZf/vAmf/7wJp/+8Cav/vArz/7wLh/+8C4//vAub/8ALo/+8C7f/vAv3/7wMD/+8DEv/wAyD/8AMk/+8DJv/vAzj/7wOY/+8DtP/vA9H/7wPT/+8AIwAG//IAC//yAFr/9QBd//UAvf/1APb/9AEJ//UBGv/1ATr/9QFt//UBhP/yAYX/8gGH//IBiP/yAYn/8gIn//UCKP/1Apb/9QLC//UC5f/1Au7/9QL2//UC9//yAvj/8gL7//IDB//1Aw//9QMw//UDMv/1AzT/9QON//UDj//1A5H/9QPf//UD4f/1AAoA7QAUAPb/7QD5/+0A/P/iATr/7QFI/+0BSv/tAW3/7QM2/+0Dlv/tAFkAR//wAEj/8ABJ//AAS//wAFP/6wBV//AAlP/wAJn/8AC7//AAyP/wAMn/8AD3//ABA//wARj/6wEc/+sBHv/wASL/8AFC//ABYP/wAWH/8AFr//ACFP/wAhX/8AIW//ACF//wAhj/8AIe/+sCH//rAiD/6wIh/+sCIv/rAjD/8AIy//ACNP/wAjb/8AI4//ACOv/wAjz/8AI+//ACQP/wAkL/8AJE//ACRv/wAkj/8AJK//ACbP/rAm7/6wJw/+sCuv/wAsD/6wLG/+sC4P/wAuL/6wLk//AC5//wAwL/8AMI//ADDf/wAxv/8AMd//ADHv/wAyj/6wMq//ADLP/rAzn/8ANT//ADVf/wA1f/8ANZ//ADW//wA13/8ANf//ADYf/wA2f/6wNp/+sDa//rA23/6wNv/+sDcf/rA3P/6wN1//ADd//wA3n/8AN7/+sDff/wA7j/8AO8/+sDxf/wA8f/8ACgAAYADQALAA0ARf/wAEf/sABI/7AASf+wAEoADQBL/7AAU//WAFX/sABaAAsAXQALAJT/sACZ/7AAu/+wAL0ACwC+/7AAx/+rAMj/wADJ/7AAzP/VAO3/qgDy/68A9/+wAQP/sAEE/68BGP/WARoACwEc/+IBHv+wASAADAEi/7ABQv+wAVH/rwFg/7ABYf+wAWMACwFlAAsBa/+wAXD/rwGEAA0BhQANAYcADQGIAA0BiQANAg3/8AIO//ACD//wAhD/8AIR//ACEv/wAhP/8AIU/7ACFf+wAhb/sAIX/7ACGP+wAh7/1gIf/9YCIP/WAiH/1gIi/9YCJwALAigACwIq//ACLP/wAi7/8AIw/7ACMv+wAjT/sAI2/7ACOP+wAjr/sAI8/7ACPv+wAkD/sAJC/7ACRP+wAkb/sAJI/7ACSv+wAmz/1gJu/9YCcP/WApYACwK6/7ACwP/WAsIACwLG/9YC3//wAuD/sALi/9YC5P+wAuUACwLn/7AC7gALAvYACwL3AA0C+AANAvsADQL///ADAv+wAwcACwMI/7ADDf+wAw8ACwMV//ADF//wAxv/sAMd/7ADHv+wAyj/1gMq/7ADLP/WAzAACwMyAAsDNAALAzn/sAM7//ADPf/wAz//8ANB//ADQ//wA0X/8ANH//ADSf/wA0v/8ANN//ADT//wA1H/8ANT/7ADVf+wA1f/sANZ/7ADW/+wA13/sANf/7ADYf+wA2f/1gNp/9YDa//WA23/1gNv/9YDcf/WA3P/1gN1/7ADd/+wA3n/sAN7/9YDff+wA40ACwOPAAsDkQALA7b/8AO4/7ADvP/WA8X/sAPH/7AD3wALA+EACwAOAO0AFADyABAA9v/wAPn/8AEBAAwBBAAQATr/8AFI//ABSv/mAVEAEAFt//ABcAAQAzb/8AOW//AATQBHAAwASAAMAEkADABLAAwAVQAMAJQADACZAAwAuwAMAMgADADJAAwA7QA6APIAGAD2/+MA9wAMAPn/9wEDAAwBBAAYAR4ADAEiAAwBOv/iAUIADAFI//cBSv/jAVEAGAFgAAwBYQAMAWsADAFt/+MBcAAYAhQADAIVAAwCFgAMAhcADAIYAAwCMAAMAjIADAI0AAwCNgAMAjgADAI6AAwCPAAMAj4ADAJAAAwCQgAMAkQADAJGAAwCSAAMAkoADAK6AAwC4AAMAuQADALnAAwDAgAMAwgADAMNAAwDGwAMAx0ADAMeAAwDKgAMAzb/9wM5AAwDUwAMA1UADANXAAwDWQAMA1sADANdAAwDXwAMA2EADAN1AAwDdwAMA3kADAN9AAwDlv/3A7gADAPFAAwDxwAMACIAWv/0AFz/8ABd//QAvf/0AO3/7wDu//AA8v/zAQT/8wEa//QBNP/wAUT/8AFR//MBXv/wAXD/8wIn//QCKP/0Apb/9ALC//QC5f/0Aub/8ALu//QC9v/0Awf/9AMP//QDEv/wAyD/8AMw//QDMv/0AzT/9AON//QDj//0A5H/9APf//QD4f/0AAoABv/WAAv/1gGE/9YBhf/WAYf/1gGI/9YBif/WAvf/1gL4/9YC+//WAAgA9v+6AQn/zwEg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AAAAHAAAABwABwAAAAAAAAAAABwAHAAAAAAAAAAAABwAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAADABsACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAHwAYAAAAAAAQABIACwAAAAsAAAALAAAAAAAAAAAAAAAAAAAAAAAAABAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAGAAQABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXABcAHgAXABcAFwAeAAAAAAAAAB4AHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEAAAANAAAAAgACAAIAAgACAAIAAgARAAUABQAFAAUAAAAAAAAAAAAAAAEAAQABAAEAAQAKAAoACgAKAAwABgAGAAYABgAGAAYABgAVAAgACAAIAAgAAAAAAAAAAAAEAAMAAwADAAMAAwAAAAAAAAAAAAkACQACAAYAAgAGAAIABgARABUAEQAVABEAFQARABUAAQAAAAUACAAFAAgABQAIAAUACAAFAAgAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAsAAAAWAAAAFgAAABYAAAAWAAAAAAAEAAAABAAAAAQABAABAAMAAQADAAEAAwAAABMAAAATAAAAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAAANAAAADQAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAABkAAAAMAAkADAAPAA4ADwAOAA8ADgAAAAAAAAAAAAIABQAAAAAAAQAMAAAAAAACABoABQAPAAAAAAALAAAAAAABABQADQAMABAAAAAMAAAAAAAEAAAAAAAAAAMAAAAJAAAAAAAAAAMAAAAAAAUAHwAAAAAAAAAKAAsACwAgAAIAGgAfAAUAAAAAAAAAAQAAABQAEQANABAABgAIAAAAAwAHABUACQASAAgAGAAAAAAAAAAAAAAACQAZAAAAGQAAABkAAAAMAAkAFwAXAAAAAAAXAAAABAACAAYABQAAAAgAAAAAAAAAGwAJAAAAAAAAAAAAEQAVAAwACQAAABAAEgAAAAIABgACAAYAAAAAAAUACAAAAAgACAAQABIAAAAAAAAAAAAAAAAAAQADAAAAAAAAAAMAAAAHACAACQAgAAkAIAAJAAAAAAAAAAAAAAACAAYAAgAGAAIABgACAAYAAgAGAAIABgACAAYAAgAGAAIABgACAAYAAgAGAAIABgAFAAgABQAIAAUACAAFAAgABQAIAAUACAAFAAgABQAIAAAAAAAAAAAAAQADAAEAAwABAAMAAQADAAEAAwABAAMAAQADAAAAAAAAAAAAAAAAAAAAAwAAAAAACgAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwACQAMAAkADAAJAAAADQAAAAAAAAAfABgAAAAAAAQAAAAdAB8AAAALAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAACAAYABQAAAAAAAAABAAMAAAATAAAAAAAAABoABwABAAAAAQAAAAAABAALAAAACwAAABYAAAAAAAQAAAAEAAEAFAAHAAAAEwAAAAAADQAAAAoAGwAJABsACQAZAAAADwAOAAEAAQAGA+AAEQAAAAAAAAAAABEAAAAAAAAAAAAVABgAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAAgAAAAAAAAACAAAAAAAcAAAAAAAAAAAAAgAAAAIAAAAOAAoACQAXABMADwALABAAAAAAAAAAAAAAAAAABwAAAAEAAQABAAAAAQAAAAAAAAAAAAAAAwADAAQAAwABAAAADAAAAAUACAAAABIACAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAAAAAAAAAIAAQAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAIABgAAAAAAAAAAAAAAAAABAAAACAAAAAAAAAADAAAAAAAAAAAAAAAAAAEAAQAAAAUAAAAAAAAAAAAAAAAACgACABQAAAAKAAAAAAAAAA8AAAAAABQAGwAAAAAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAASAAAAAwADABYAAwADAAMAAAABAAMAGgADAAMAAAAAAAMAAAADAAAAAAABABYAAwAAAAAAAgAAAAAAAAAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAgAEABcACAACAAAAAgABAAIAAAACAAEAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAPABIAAAADAAAAAAAKAAAAAAADAAAAAwAAAAAAAgABAA8AEgAKAAAAGQAaAAAAAAAAAAAAAAAAAAAAFAAWAAAAAwAAAAMAAAADAAAAAAAAAAAAAwAPABIAAAABAAEAAAAAAAAAAAAUAAAAAAAAAAIAAQAAAAAAAAAUABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYABgAAAARABEAFQARABEAEQAVAAAAAAAAABUAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAAAAAAAAAAAABgAGAAYABgAGAAYABgACAAAAAAAAAAAAAAAAAAAAAAAAAAIAAgACAAIAAgAJAAkACQAJAAsABwAHAAcABwAHAAcABwABAAEAAQABAAEAAAAAAAAAAAADAAQABAAEAAQABAAFAAUABQAFAAgACAAGAAcABgAHAAYABwACAAEAAgABAAIAAQACAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAgABAAIAAQACAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAAAAAAAA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"),fallback:!0}}),Of=e=>2.8346*parseFloat(String(e)),zf=e=>.3528*e,Yf=e=>1.333*e,Hf=e=>new Promise(((t,r)=>{const n=new FileReader;n.onloadend=()=>{n.result.startsWith("data:application/pdf;")?t(n.result):r(Error("[@pdfme/common] template.basePdf must be pdf data."))},n.readAsDataURL(e)})),Uf=e=>/^#(?:[A-Fa-f0-9]{3,4}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})$/i.test(e),Vf=e=>xf.safeParse(e).success,qf=e=>{const t=(e=>wf.hp.from(e,"base64").toString("binary"))(e.split(";base64,")[1]?e.split(";base64,")[1]:e),r=new Uint8Array(t.length);for(let n=0;n<t.length;n+=1)r[n]=t.charCodeAt(n);return r},Zf=e=>{const{font:t,template:{schemas:r}}=e,n=Object.values(t).reduce(((e,t)=>t.fallback?e+1:e),0);if(0===n)throw Error("[@pdfme/common] fallback flag is not found in font. true fallback flag must be only one.\nCheck this document: https://pdfme.com/docs/custom-fonts#about-font-type");if(n>1)throw Error(`[@pdfme/common] ${n} fallback flags found in font. true fallback flag must be only one.\nCheck this document: https://pdfme.com/docs/custom-fonts#about-font-type`);const s=(e=>jf(e.map((e=>Object.values(e).map((e=>e.fontName??"")))).reduce(((e,t)=>e.concat(t)),[]).filter(Boolean)))(r),i=Object.keys(t);if(s.some((e=>!i.includes(e))))throw Error(`[@pdfme/common] ${s.filter((e=>!i.includes(e))).join()} of template.schemas is not found in font.\nCheck this document: https://pdfme.com/docs/custom-fonts`)},Kf=(e,t)=>{try{t.parse(e)}catch(JM){if(JM instanceof mf.ZodError){const t=JM.issues.map((e=>`ERROR POSITION: ${e.path.join(".")}\nERROR MESSAGE: ${e.message}\n--------------------------`)).join("\n");throw Error(`[@pdfme/common] Invalid argument:\n--------------------------\n${t}`)}}if(e&&"object"===typeof e&&"template"in e&&"options"in e){const{template:t,options:r}=e;r&&r.font&&Zf({font:r.font,template:t})}if(e&&"object"===typeof e&&"template"in e&&"plugins"in e){const{template:t,plugins:r}=e;r&&(e=>{const{plugins:t,template:{schemas:r}}=e,n=jf(r.map((e=>Object.values(e).map((e=>e.type)))).flat()),s=Object.values(t).map((e=>e?.propPanel.defaultSchema.type));if(n.some((e=>!s.includes(e))))throw Error(`[@pdfme/common] ${n.filter((e=>!s.includes(e))).join()} of template.schemas is not found in plugins.`)})({plugins:r,template:t})}},Jf=async e=>{const{template:t,modifyTemplate:r}=e;if(!Vf(t.basePdf))return t;const n=await r(e),s=await _f({...e,template:n});return $f(n,s)},_f=async e=>{const{template:t,input:r,_cache:n,options:s,getDynamicHeight:i}=e,o=t.basePdf,A=new Map;if(!Vf(o))return A;const a=o.height;let l=0;for(const h of t.schemas){for(const[e,t]of Object.entries(h)){const c=await i(r?.[e]||"",{schema:t,basePdf:o,options:s,_cache:n});t.height!==c&&A.set(t.position.y+t.height+a*l,c-t.height)}l++}const c=new Map,u=Array.from(A.keys()).sort(((e,t)=>e-t));let d=0;for(const h of u){const e=A.get(h)+d;c.set(h+d,e),d+=e}return c},$f=(e,t)=>{if(!Vf(e.basePdf)||0===t.size)return e;const r={schemas:[{}],basePdf:e.basePdf},n=r.schemas,s=e.basePdf.height,i=e.basePdf.padding[0],o=e.basePdf.padding[2];for(let A=0;A<e.schemas.length;A+=1){const r=e.schemas[A];n[A]||(n[A]={});for(const[e,a]of Object.entries(r)){const{position:r,height:l}=a;let c=r.y,u=A;for(const[e,n]of t)c>e&&(c+=n);for(;c+l>=s-o;)c=c+i-(s-o)+i,u++;n[u]||(n[u]={}),n[u][e]={...a,position:{...r,y:c}}}}return r},eg=(e,t,r)=>{const n=ia(r);return{x:Math.cos(n)*(e.x-t.x)-Math.sin(n)*(e.y-t.y)+t.x,y:Math.sin(n)*(e.x-t.x)+Math.cos(n)*(e.y-t.y)+t.y}},tg=(e,t)=>"designer"===e||"form"===e&&!0!==t.readOnly,rg=e=>{if(e){if(!Uf(e))throw new Error(`Invalid hex color value ${e}`);const[t,r,n]=(e=>("#"===e.slice(0,1)&&(e=e.slice(1)),3===e.length&&(e=e.slice(0,1)+e.slice(0,1)+e.slice(1,2)+e.slice(1,2)+e.slice(2,3)+e.slice(2,3)),[e.slice(0,2),e.slice(2,4),e.slice(4,6)].map((e=>parseInt(e,16)))))(e);return yl(t/255,r/255,n/255)}},ng=(e,t)=>"cmyk"==t?.toLocaleLowerCase()?(e=>{if(e){if(!Uf(e))throw new Error(`Invalid hex color value ${e}`);const t=(e=e.replace("#","")).substring(0,6),r=e.substring(6,8),n=r?parseInt(r,16)/255:1;let s=parseInt(t.substring(0,2),16)/255,i=parseInt(t.substring(2,4),16)/255,o=parseInt(t.substring(4,6),16)/255;s=s*n+(1-n),i=i*n+(1-n),o=o*n+(1-n);const A=1-Math.max(s,i,o);return Bl(0===s?0:(1-s-A)/(1-A),0===i?0:(1-i-A)/(1-A),0===o?0:(1-o-A)/(1-A),A)}})(e):rg(e),sg=e=>JSON.parse(JSON.stringify(e)),ig={utf16le:"utf-16le",ucs2:"utf-16le",utf16be:"utf-16be"};class og{constructor(e){this.buffer=e,this.view=new DataView(e.buffer,e.byteOffset,e.byteLength),this.pos=0,this.length=this.buffer.length}readString(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"ascii";t=ig[t]||t;let r=this.readBuffer(e);try{return new TextDecoder(t).decode(r)}catch(n){return r}}readBuffer(e){return this.buffer.slice(this.pos,this.pos+=e)}readUInt24BE(){return(this.readUInt16BE()<<8)+this.readUInt8()}readUInt24LE(){return this.readUInt16LE()+(this.readUInt8()<<16)}readInt24BE(){return(this.readInt16BE()<<8)+this.readUInt8()}readInt24LE(){return this.readUInt16LE()+(this.readInt8()<<16)}}og.TYPES={UInt8:1,UInt16:2,UInt24:3,UInt32:4,Int8:1,Int16:2,Int24:3,Int32:4,Float:4,Double:8};for(let r of Object.getOwnPropertyNames(DataView.prototype))if("get"===r.slice(0,3)){let e=r.slice(3).replace("Ui","UI");"Float32"===e?e="Float":"Float64"===e&&(e="Double");let t=og.TYPES[e];og.prototype["read"+e+(1===t?"":"BE")]=function(){const e=this.view[r](this.pos,!1);return this.pos+=t,e},1!==t&&(og.prototype["read"+e+"LE"]=function(){const e=this.view[r](this.pos,!0);return this.pos+=t,e})}const Ag=new TextEncoder,ag=18==new Uint8Array(new Uint16Array([4660]).buffer)[0];class lg{constructor(e){this.buffer=e,this.view=new DataView(this.buffer.buffer,this.buffer.byteOffset,this.buffer.byteLength),this.pos=0}writeBuffer(e){this.buffer.set(e,this.pos),this.pos+=e.length}writeString(e){let t,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"ascii";switch(r){case"utf16le":case"utf16-le":case"ucs2":t=cg(e,ag);break;case"utf16be":case"utf16-be":t=cg(e,!ag);break;case"utf8":t=Ag.encode(e);break;case"ascii":t=function(e){let t=new Uint8Array(e.length);for(let r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return t}(e);break;default:throw new Error(`Unsupported encoding: ${r}`)}this.writeBuffer(t)}writeUInt24BE(e){this.buffer[this.pos++]=e>>>16&255,this.buffer[this.pos++]=e>>>8&255,this.buffer[this.pos++]=255&e}writeUInt24LE(e){this.buffer[this.pos++]=255&e,this.buffer[this.pos++]=e>>>8&255,this.buffer[this.pos++]=e>>>16&255}writeInt24BE(e){e>=0?this.writeUInt24BE(e):this.writeUInt24BE(e+16777215+1)}writeInt24LE(e){e>=0?this.writeUInt24LE(e):this.writeUInt24LE(e+16777215+1)}fill(e,t){if(t<this.buffer.length)this.buffer.fill(e,this.pos,this.pos+t),this.pos+=t;else{const r=new Uint8Array(t);r.fill(e),this.writeBuffer(r)}}}function cg(e,t){let r=new Uint16Array(e.length);for(let n=0;n<e.length;n++){let s=e.charCodeAt(n);t&&(s=s>>8|(255&s)<<8),r[n]=s}return new Uint8Array(r.buffer)}for(let r of Object.getOwnPropertyNames(DataView.prototype))if("set"===r.slice(0,3)){let e=r.slice(3).replace("Ui","UI");"Float32"===e?e="Float":"Float64"===e&&(e="Double");let t=og.TYPES[e];lg.prototype["write"+e+(1===t?"":"BE")]=function(e){this.view[r](this.pos,e,!1),this.pos+=t},1!==t&&(lg.prototype["write"+e+"LE"]=function(e){this.view[r](this.pos,e,!0),this.pos+=t})}class ug{fromBuffer(e){let t=new og(e);return this.decode(t)}toBuffer(e){let t=this.size(e),r=new Uint8Array(t),n=new lg(r);return this.encode(n,e),r}}class dg extends ug{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"BE";super(),this.type=e,this.endian=t,this.fn=this.type,"8"!==this.type[this.type.length-1]&&(this.fn+=this.endian)}size(){return og.TYPES[this.type]}decode(e){return e[`read${this.fn}`]()}encode(e,t){return e[`write${this.fn}`](t)}}const hg=new dg("UInt8"),fg=new dg("UInt16","BE"),gg=(new dg("UInt16","LE"),new dg("UInt24","BE")),pg=(new dg("UInt24","LE"),new dg("UInt32","BE")),mg=(new dg("UInt32","LE"),new dg("Int8")),wg=new dg("Int16","BE"),vg=(new dg("Int16","LE"),new dg("Int24","BE"),new dg("Int24","LE"),new dg("Int32","BE"));new dg("Int32","LE"),new dg("Float","BE"),new dg("Float","LE"),new dg("Double","BE"),new dg("Double","LE");class bg extends dg{constructor(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e>>1;super(`Int${e}`,t),this._point=1<<r}decode(e){return super.decode(e)/this._point}encode(e,t){return super.encode(e,t*this._point|0)}}const yg=new bg(16,"BE"),Bg=(new bg(16,"LE"),new bg(32,"BE"));new bg(32,"LE");function Eg(e,t,r){let n;if("number"===typeof e?n=e:"function"===typeof e?n=e.call(r,r):r&&"string"===typeof e?n=r[e]:t&&e instanceof dg&&(n=e.decode(t)),isNaN(n))throw new Error("Not a fixed size");return n}class Cg{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.enumerable=!0,this.configurable=!0;for(let t in e){const r=e[t];this[t]=r}}}class xg extends ug{constructor(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"count";super(),this.type=e,this.length=t,this.lengthType=r}decode(e,t){let r;const{pos:n}=e,s=[];let i=t;if(null!=this.length&&(r=Eg(this.length,e,t)),this.length instanceof dg&&(Object.defineProperties(s,{parent:{value:t},_startOffset:{value:n},_currentOffset:{value:0,writable:!0},_length:{value:r}}),i=s),null==r||"bytes"===this.lengthType){const n=null!=r?e.pos+r:(null!=t?t._length:void 0)?t._startOffset+t._length:e.length;for(;e.pos<n;)s.push(this.type.decode(e,i))}else for(let o=0,A=r;o<A;o++)s.push(this.type.decode(e,i));return s}size(e,t){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(!e)return this.type.size(null,t)*Eg(this.length,null,t);let n=0;this.length instanceof dg&&(n+=this.length.size(),t={parent:t,pointerSize:0});for(let s of e)n+=this.type.size(s,t);return t&&r&&this.length instanceof dg&&(n+=t.pointerSize),n}encode(e,t,r){let n=r;this.length instanceof dg&&(n={pointers:[],startOffset:e.pos,parent:r},n.pointerOffset=e.pos+this.size(t,n,!1),this.length.encode(e,t.length));for(let s of t)this.type.encode(e,s,n);if(this.length instanceof dg){let t=0;for(;t<n.pointers.length;){const r=n.pointers[t++];r.type.encode(e,r.val,r.parent)}}}}class Ig extends xg{decode(e,t){const{pos:r}=e,n=Eg(this.length,e,t);this.length instanceof dg&&(t={parent:t,_startOffset:r,_currentOffset:0,_length:n});const s=new Dg(this.type,n,e,t);return e.pos+=n*this.type.size(null,t),s}size(e,t){return e instanceof Dg&&(e=e.toArray()),super.size(e,t)}encode(e,t,r){return t instanceof Dg&&(t=t.toArray()),super.encode(e,t,r)}}class Dg{constructor(e,t,r,n){this.type=e,this.length=t,this.stream=r,this.ctx=n,this.base=this.stream.pos,this.items=[]}get(e){if(!(e<0||e>=this.length)){if(null==this.items[e]){const{pos:t}=this.stream;this.stream.pos=this.base+this.type.size(null,this.ctx)*e,this.items[e]=this.type.decode(this.stream,this.ctx),this.stream.pos=t}return this.items[e]}}toArray(){const e=[];for(let t=0,r=this.length;t<r;t++)e.push(this.get(t));return e}}class Qg extends ug{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];super(),this.type=e,this.flags=t}decode(e){const t=this.type.decode(e),r={};for(let n=0;n<this.flags.length;n++){const e=this.flags[n];null!=e&&(r[e]=!!(t&1<<n))}return r}size(){return this.type.size()}encode(e,t){let r=0;for(let n=0;n<this.flags.length;n++){const e=this.flags[n];null!=e&&t[e]&&(r|=1<<n)}return this.type.encode(e,r)}}class Pg extends ug{constructor(e){super(),this.length=e}decode(e,t){const r=Eg(this.length,e,t);return e.readBuffer(r)}size(e,t){if(!e)return Eg(this.length,null,t);let r=e.length;return this.length instanceof dg&&(r+=this.length.size()),r}encode(e,t,r){return this.length instanceof dg&&this.length.encode(e,t.length),e.writeBuffer(t)}}class Fg extends ug{constructor(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];super(),this.type=e,this.condition=t}decode(e,t){let{condition:r}=this;if("function"===typeof r&&(r=r.call(t,t)),r)return this.type.decode(e,t)}size(e,t){let{condition:r}=this;return"function"===typeof r&&(r=r.call(t,t)),r?this.type.size(e,t):0}encode(e,t,r){let{condition:n}=this;if("function"===typeof n&&(n=n.call(r,r)),n)return this.type.encode(e,t,r)}}class Lg extends ug{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;super(),this.type=e,this.count=t}decode(e,t){e.pos+=this.size(null,t)}size(e,t){const r=Eg(this.count,null,t);return this.type.size()*r}encode(e,t,r){return e.fill(0,this.size(t,r))}}class Mg extends ug{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"ascii";super(),this.length=e,this.encoding=t}decode(e,t){let r,n,{encoding:s}=this;"function"===typeof s&&(s=s.call(t,t)||"ascii");let i=Sg(s);if(null!=this.length)r=Eg(this.length,e,t);else{let t;for(({buffer:t,length:r,pos:n}=e);n<r-i+1&&(0!==t[n]||2===i&&0!==t[n+1]);)n+=i;r=n-e.pos}const o=e.readString(r,s);return null==this.length&&e.pos<e.length&&(e.pos+=i),o}size(e,t){if(void 0===e||null===e)return Eg(this.length,null,t);let{encoding:r}=this;"function"===typeof r&&(r=r.call(null!=t?t.val:void 0,null!=t?t.val:void 0)||"ascii"),"utf16be"===r&&(r="utf16le");let n=Ng(e,r);return this.length instanceof dg&&(n+=this.length.size()),null==this.length&&(n+=Sg(r)),n}encode(e,t,r){let{encoding:n}=this;if("function"===typeof n&&(n=n.call(null!=r?r.val:void 0,null!=r?r.val:void 0)||"ascii"),this.length instanceof dg&&this.length.encode(e,Ng(t,n)),e.writeString(t,n),null==this.length)return 2==Sg(n)?e.writeUInt16LE(0):e.writeUInt8(0)}}function Sg(e){switch(e){case"ascii":case"utf8":default:return 1;case"utf16le":case"utf16-le":case"utf-16be":case"utf-16le":case"utf16be":case"utf16-be":case"ucs2":return 2}}function Ng(e,t){switch(t){case"ascii":return e.length;case"utf8":let r=0;for(let t=0;t<e.length;t++){let n=e.charCodeAt(t);if(n>=55296&&n<=56319&&t<e.length-1){let r=e.charCodeAt(++t);56320===(64512&r)?n=((1023&n)<<10)+(1023&r)+65536:t--}0===(4294967168&n)?r++:0===(4294965248&n)?r+=2:0===(4294901760&n)?r+=3:0===(4292870144&n)&&(r+=4)}return r;case"utf16le":case"utf16-le":case"utf16be":case"utf16-be":case"ucs2":return 2*e.length;default:throw new Error("Unknown encoding "+t)}}class kg extends ug{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this.fields=e}decode(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const n=this._setup(e,t,r);return this._parseFields(e,n,this.fields),null!=this.process&&this.process.call(n,e),n}_setup(e,t,r){const n={};return Object.defineProperties(n,{parent:{value:t},_startOffset:{value:e.pos},_currentOffset:{value:0,writable:!0},_length:{value:r}}),n}_parseFields(e,t,r){for(let s in r){var n;const i=r[s];void 0!==(n="function"===typeof i?i.call(t,t):i.decode(e,t))&&(n instanceof Cg?Object.defineProperty(t,s,n):t[s]=n),t._currentOffset=e.pos-t._startOffset}}size(e,t){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];null==e&&(e={});const n={parent:t,val:e,pointerSize:0};null!=this.preEncode&&this.preEncode.call(e);let s=0;for(let i in this.fields){const t=this.fields[i];null!=t.size&&(s+=t.size(e[i],n))}return r&&(s+=n.pointerSize),s}encode(e,t,r){let n;null!=this.preEncode&&this.preEncode.call(t,e);const s={pointers:[],startOffset:e.pos,parent:r,val:t,pointerSize:0};s.pointerOffset=e.pos+this.size(t,s,!1);for(let o in this.fields)n=this.fields[o],null!=n.encode&&n.encode(e,t[o],s);let i=0;for(;i<s.pointers.length;){const t=s.pointers[i++];t.type.encode(e,t.val,t.parent)}}}class Rg extends kg{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.type=e,this.versions=t,"string"===typeof e&&(this.versionPath=e.split("."))}decode(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const n=this._setup(e,t,r);var s;"string"===typeof this.type?n.version=(s=t,this.versionPath.reduce(((e,t)=>e&&e[t]),s)):n.version=this.type.decode(e),this.versions.header&&this._parseFields(e,n,this.versions.header);const i=this.versions[n.version];if(null==i)throw new Error(`Unknown version ${n.version}`);return i instanceof Rg?i.decode(e,t):(this._parseFields(e,n,i),null!=this.process&&this.process.call(n,e),n)}size(e,t){let r,n,s=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(!e)throw new Error("Not a fixed size");null!=this.preEncode&&this.preEncode.call(e);const i={parent:t,val:e,pointerSize:0};let o=0;if("string"!==typeof this.type&&(o+=this.type.size(e.version,i)),this.versions.header)for(r in this.versions.header)n=this.versions.header[r],null!=n.size&&(o+=n.size(e[r],i));const A=this.versions[e.version];if(null==A)throw new Error(`Unknown version ${e.version}`);for(r in A)n=A[r],null!=n.size&&(o+=n.size(e[r],i));return s&&(o+=i.pointerSize),o}encode(e,t,r){let n,s;null!=this.preEncode&&this.preEncode.call(t,e);const i={pointers:[],startOffset:e.pos,parent:r,val:t,pointerSize:0};if(i.pointerOffset=e.pos+this.size(t,i,!1),"string"!==typeof this.type&&this.type.encode(e,t.version),this.versions.header)for(n in this.versions.header)s=this.versions.header[n],null!=s.encode&&s.encode(e,t[n],i);const o=this.versions[t.version];for(n in o)s=o[n],null!=s.encode&&s.encode(e,t[n],i);let A=0;for(;A<i.pointers.length;){const t=i.pointers[A++];t.type.encode(e,t.val,t.parent)}}}class Tg extends ug{constructor(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(super(),this.offsetType=e,this.type=t,this.options=r,"void"===this.type&&(this.type=null),null==this.options.type&&(this.options.type="local"),null==this.options.allowNull&&(this.options.allowNull=!0),null==this.options.nullValue&&(this.options.nullValue=0),null==this.options.lazy&&(this.options.lazy=!1),this.options.relativeTo){if("function"!==typeof this.options.relativeTo)throw new Error("relativeTo option must be a function");this.relativeToGetter=r.relativeTo}}decode(e,t){const r=this.offsetType.decode(e,t);if(r===this.options.nullValue&&this.options.allowNull)return null;let n;switch(this.options.type){case"local":n=t._startOffset;break;case"immediate":n=e.pos-this.offsetType.size();break;case"parent":n=t.parent._startOffset;break;default:for(var s=t;s.parent;)s=s.parent;n=s._startOffset||0}this.options.relativeTo&&(n+=this.relativeToGetter(t));const i=r+n;if(null!=this.type){let r=null;const n=()=>{if(null!=r)return r;const{pos:n}=e;return e.pos=i,r=this.type.decode(e,t),e.pos=n,r};return this.options.lazy?new Cg({get:n}):n()}return i}size(e,t){const r=t;switch(this.options.type){case"local":case"immediate":break;case"parent":t=t.parent;break;default:for(;t.parent;)t=t.parent}let{type:n}=this;if(null==n){if(!(e instanceof Wg))throw new Error("Must be a VoidPointer");({type:n}=e),e=e.value}if(e&&t){let s=n.size(e,r);t.pointerSize+=s}return this.offsetType.size()}encode(e,t,r){let n;const s=r;if(null==t)return void this.offsetType.encode(e,this.options.nullValue);switch(this.options.type){case"local":n=r.startOffset;break;case"immediate":n=e.pos+this.offsetType.size(t,s);break;case"parent":n=(r=r.parent).startOffset;break;default:for(n=0;r.parent;)r=r.parent}this.options.relativeTo&&(n+=this.relativeToGetter(s.val)),this.offsetType.encode(e,r.pointerOffset-n);let{type:i}=this;if(null==i){if(!(t instanceof Wg))throw new Error("Must be a VoidPointer");({type:i}=t),t=t.value}return r.pointers.push({type:i,val:t,parent:s}),r.pointerOffset+=i.size(t,s)}}class Wg{constructor(e,t){this.type=e,this.value=t}}function jg(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Gg(e,t,r,n){var s,i=arguments.length,o=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)o=Reflect.decorate(e,t,r,n);else for(var A=e.length-1;A>=0;A--)(s=e[A])&&(o=(i<3?s(o):i>3?s(t,r,o):s(t,r))||o);return i>3&&o&&Object.defineProperty(t,r,o),o}Object.create;Object.create;"function"===typeof SuppressedError&&SuppressedError;var Xg=r(122),Og=r(4445),zg=r(2582);function Yg(e){return e&&e.__esModule?e.default:e}var Hg={};Hg=JSON.parse('{"categories":["Cc","Zs","Po","Sc","Ps","Pe","Sm","Pd","Nd","Lu","Sk","Pc","Ll","So","Lo","Pi","Cf","No","Pf","Lt","Lm","Mn","Me","Mc","Nl","Zl","Zp","Cs","Co"],"combiningClasses":["Not_Reordered","Above","Above_Right","Below","Attached_Above_Right","Attached_Below","Overlay","Iota_Subscript","Double_Below","Double_Above","Below_Right","Above_Left","CCC10","CCC11","CCC12","CCC13","CCC14","CCC15","CCC16","CCC17","CCC18","CCC19","CCC20","CCC21","CCC22","CCC23","CCC24","CCC25","CCC30","CCC31","CCC32","CCC27","CCC28","CCC29","CCC33","CCC34","CCC35","CCC36","Nukta","Virama","CCC84","CCC91","CCC103","CCC107","CCC118","CCC122","CCC129","CCC130","CCC132","Attached_Above","Below_Left","Left","Kana_Voicing","CCC26","Right"],"scripts":["Common","Latin","Bopomofo","Inherited","Greek","Coptic","Cyrillic","Armenian","Hebrew","Arabic","Syriac","Thaana","Nko","Samaritan","Mandaic","Devanagari","Bengali","Gurmukhi","Gujarati","Oriya","Tamil","Telugu","Kannada","Malayalam","Sinhala","Thai","Lao","Tibetan","Myanmar","Georgian","Hangul","Ethiopic","Cherokee","Canadian_Aboriginal","Ogham","Runic","Tagalog","Hanunoo","Buhid","Tagbanwa","Khmer","Mongolian","Limbu","Tai_Le","New_Tai_Lue","Buginese","Tai_Tham","Balinese","Sundanese","Batak","Lepcha","Ol_Chiki","Braille","Glagolitic","Tifinagh","Han","Hiragana","Katakana","Yi","Lisu","Vai","Bamum","Syloti_Nagri","Phags_Pa","Saurashtra","Kayah_Li","Rejang","Javanese","Cham","Tai_Viet","Meetei_Mayek","null","Linear_B","Lycian","Carian","Old_Italic","Gothic","Old_Permic","Ugaritic","Old_Persian","Deseret","Shavian","Osmanya","Osage","Elbasan","Caucasian_Albanian","Linear_A","Cypriot","Imperial_Aramaic","Palmyrene","Nabataean","Hatran","Phoenician","Lydian","Meroitic_Hieroglyphs","Meroitic_Cursive","Kharoshthi","Old_South_Arabian","Old_North_Arabian","Manichaean","Avestan","Inscriptional_Parthian","Inscriptional_Pahlavi","Psalter_Pahlavi","Old_Turkic","Old_Hungarian","Hanifi_Rohingya","Old_Sogdian","Sogdian","Elymaic","Brahmi","Kaithi","Sora_Sompeng","Chakma","Mahajani","Sharada","Khojki","Multani","Khudawadi","Grantha","Newa","Tirhuta","Siddham","Modi","Takri","Ahom","Dogra","Warang_Citi","Nandinagari","Zanabazar_Square","Soyombo","Pau_Cin_Hau","Bhaiksuki","Marchen","Masaram_Gondi","Gunjala_Gondi","Makasar","Cuneiform","Egyptian_Hieroglyphs","Anatolian_Hieroglyphs","Mro","Bassa_Vah","Pahawh_Hmong","Medefaidrin","Miao","Tangut","Nushu","Duployan","SignWriting","Nyiakeng_Puachue_Hmong","Wancho","Mende_Kikakui","Adlam"],"eaw":["N","Na","A","W","H","F"]}');const Ug=new zg(Og.toByteArray("")),Vg=Math.log2||(e=>Math.log(e)/Math.LN2),qg=e=>Vg(e)+1|0,Zg=qg(Yg(Hg).categories.length-1),Kg=qg(Yg(Hg).combiningClasses.length-1),Jg=qg(Yg(Hg).scripts.length-1),_g=qg(Yg(Hg).eaw.length-1),$g=Kg+Jg+_g+10,ep=Jg+_g+10,tp=_g+10,rp=(1<<Zg)-1,np=(1<<Kg)-1,sp=(1<<Jg)-1;function ip(e){const t=Ug.get(e);return Yg(Hg).categories[t>>$g&rp]}function op(e){const t=Ug.get(e);return Yg(Hg).combiningClasses[t>>ep&np]}function Ap(e){const t=Ug.get(e);return Yg(Hg).scripts[t>>tp&sp]}function ap(e){return"Nd"===ip(e)}function lp(e){const t=ip(e);return"Mn"===t||"Me"===t||"Mc"===t}var cp=r(8493),up=r(224),dp=r(8680),hp=r(3245);function fp(e,t,r,n){Object.defineProperty(e,t,{get:r,set:n,enumerable:!0,configurable:!0})}function gp(e){return e&&e.__esModule?e.default:e}var pp={};fp(pp,"logErrors",(()=>mp)),fp(pp,"registerFormat",(()=>vp)),fp(pp,"create",(()=>bp)),fp(pp,"defaultLanguage",(()=>yp)),fp(pp,"setDefaultLanguage",(()=>Bp));let mp=!1,wp=[];function vp(e){wp.push(e)}function bp(e,t){for(let r=0;r<wp.length;r++){let n=wp[r];if(n.probe(e)){let r=new n(new og(e));return t?r.getFont(t):r}}throw new Error("Unknown font format")}let yp="en";function Bp(){yp=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"en"}function Ep(e,t,r){if(r.get){let e=r.get;r.get=function(){let r=e.call(this);return Object.defineProperty(this,t,{value:r}),r}}else if("function"===typeof r.value){let e=r.value;return{get(){let r=new Map;function n(){for(var t=arguments.length,n=new Array(t),s=0;s<t;s++)n[s]=arguments[s];let i=n.length>0?n[0]:"value";if(r.has(i))return r.get(i);let o=e.apply(this,n);return r.set(i,o),o}return Object.defineProperty(this,t,{value:n}),n}}}}let Cp=new kg({firstCode:fg,entryCount:fg,idDelta:wg,idRangeOffset:fg}),xp=new kg({startCharCode:pg,endCharCode:pg,glyphID:pg}),Ip=new kg({startUnicodeValue:gg,additionalCount:hg}),Dp=new kg({unicodeValue:gg,glyphID:fg}),Qp=new xg(Ip,pg),Pp=new xg(Dp,pg),Fp=new kg({varSelector:gg,defaultUVS:new Tg(pg,Qp,{type:"parent"}),nonDefaultUVS:new Tg(pg,Pp,{type:"parent"})}),Lp=new Rg(fg,{0:{length:fg,language:fg,codeMap:new Ig(hg,256)},2:{length:fg,language:fg,subHeaderKeys:new xg(fg,256),subHeaderCount:e=>Math.max.apply(Math,e.subHeaderKeys),subHeaders:new Ig(Cp,"subHeaderCount"),glyphIndexArray:new Ig(fg,"subHeaderCount")},4:{length:fg,language:fg,segCountX2:fg,segCount:e=>e.segCountX2>>1,searchRange:fg,entrySelector:fg,rangeShift:fg,endCode:new Ig(fg,"segCount"),reservedPad:new Lg(fg),startCode:new Ig(fg,"segCount"),idDelta:new Ig(wg,"segCount"),idRangeOffset:new Ig(fg,"segCount"),glyphIndexArray:new Ig(fg,(e=>(e.length-e._currentOffset)/2))},6:{length:fg,language:fg,firstCode:fg,entryCount:fg,glyphIndices:new Ig(fg,"entryCount")},8:{reserved:new Lg(fg),length:pg,language:fg,is32:new Ig(hg,8192),nGroups:pg,groups:new Ig(xp,"nGroups")},10:{reserved:new Lg(fg),length:pg,language:pg,firstCode:pg,entryCount:pg,glyphIndices:new Ig(fg,"numChars")},12:{reserved:new Lg(fg),length:pg,language:pg,nGroups:pg,groups:new Ig(xp,"nGroups")},13:{reserved:new Lg(fg),length:pg,language:pg,nGroups:pg,groups:new Ig(xp,"nGroups")},14:{length:pg,numRecords:pg,varSelectors:new Ig(Fp,"numRecords")}}),Mp=new kg({platformID:fg,encodingID:fg,table:new Tg(pg,Lp,{type:"parent",lazy:!0})});var Sp=new kg({version:fg,numSubtables:fg,tables:new xg(Mp,"numSubtables")}),Np=new kg({version:vg,revision:vg,checkSumAdjustment:pg,magicNumber:pg,flags:fg,unitsPerEm:fg,created:new xg(vg,2),modified:new xg(vg,2),xMin:wg,yMin:wg,xMax:wg,yMax:wg,macStyle:new Qg(fg,["bold","italic","underline","outline","shadow","condensed","extended"]),lowestRecPPEM:fg,fontDirectionHint:wg,indexToLocFormat:wg,glyphDataFormat:wg}),kp=new kg({version:vg,ascent:wg,descent:wg,lineGap:wg,advanceWidthMax:fg,minLeftSideBearing:wg,minRightSideBearing:wg,xMaxExtent:wg,caretSlopeRise:wg,caretSlopeRun:wg,caretOffset:wg,reserved:new Lg(wg,4),metricDataFormat:wg,numberOfMetrics:fg});let Rp=new kg({advance:fg,bearing:wg});var Tp=new kg({metrics:new Ig(Rp,(e=>e.parent.hhea.numberOfMetrics)),bearings:new Ig(wg,(e=>e.parent.maxp.numGlyphs-e.parent.hhea.numberOfMetrics))}),Wp=new kg({version:vg,numGlyphs:fg,maxPoints:fg,maxContours:fg,maxComponentPoints:fg,maxComponentContours:fg,maxZones:fg,maxTwilightPoints:fg,maxStorage:fg,maxFunctionDefs:fg,maxInstructionDefs:fg,maxStackElements:fg,maxSizeOfInstructions:fg,maxComponentElements:fg,maxComponentDepth:fg});function jp(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return 1===e&&Hp[r]?Hp[r]:Yp[e][t]}const Gp=new Set(["x-mac-roman","x-mac-cyrillic","iso-8859-6","iso-8859-8"]),Xp={"x-mac-croatian":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\u0160\u2122\xb4\xa8\u2260\u017d\xd8\u221e\xb1\u2264\u2265\u2206\xb5\u2202\u2211\u220f\u0161\u222b\xaa\xba\u03a9\u017e\xf8\xbf\xa1\xac\u221a\u0192\u2248\u0106\xab\u010c\u2026 \xc0\xc3\xd5\u0152\u0153\u0110\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\uf8ff\xa9\u2044\u20ac\u2039\u203a\xc6\xbb\u2013\xb7\u201a\u201e\u2030\xc2\u0107\xc1\u010d\xc8\xcd\xce\xcf\xcc\xd3\xd4\u0111\xd2\xda\xdb\xd9\u0131\u02c6\u02dc\xaf\u03c0\xcb\u02da\xb8\xca\xe6\u02c7","x-mac-gaelic":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u1e02\xb1\u2264\u2265\u1e03\u010a\u010b\u1e0a\u1e0b\u1e1e\u1e1f\u0120\u0121\u1e40\xe6\xf8\u1e41\u1e56\u1e57\u027c\u0192\u017f\u1e60\xab\xbb\u2026 \xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\u1e61\u1e9b\xff\u0178\u1e6a\u20ac\u2039\u203a\u0176\u0177\u1e6b\xb7\u1ef2\u1ef3\u204a\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\u2663\xd2\xda\xdb\xd9\u0131\xdd\xfd\u0174\u0175\u1e84\u1e85\u1e80\u1e81\u1e82\u1e83","x-mac-greek":"\xc4\xb9\xb2\xc9\xb3\xd6\xdc\u0385\xe0\xe2\xe4\u0384\xa8\xe7\xe9\xe8\xea\xeb\xa3\u2122\xee\xef\u2022\xbd\u2030\xf4\xf6\xa6\u20ac\xf9\xfb\xfc\u2020\u0393\u0394\u0398\u039b\u039e\u03a0\xdf\xae\xa9\u03a3\u03aa\xa7\u2260\xb0\xb7\u0391\xb1\u2264\u2265\xa5\u0392\u0395\u0396\u0397\u0399\u039a\u039c\u03a6\u03ab\u03a8\u03a9\u03ac\u039d\xac\u039f\u03a1\u2248\u03a4\xab\xbb\u2026 \u03a5\u03a7\u0386\u0388\u0153\u2013\u2015\u201c\u201d\u2018\u2019\xf7\u0389\u038a\u038c\u038e\u03ad\u03ae\u03af\u03cc\u038f\u03cd\u03b1\u03b2\u03c8\u03b4\u03b5\u03c6\u03b3\u03b7\u03b9\u03be\u03ba\u03bb\u03bc\u03bd\u03bf\u03c0\u03ce\u03c1\u03c3\u03c4\u03b8\u03c9\u03c2\u03c7\u03c5\u03b6\u03ca\u03cb\u0390\u03b0\xad","x-mac-icelandic":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\xdd\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221e\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220f\u03c0\u222b\xaa\xba\u03a9\xe6\xf8\xbf\xa1\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026 \xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\xff\u0178\u2044\u20ac\xd0\xf0\xde\xfe\xfd\xb7\u201a\u201e\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uf8ff\xd2\xda\xdb\xd9\u0131\u02c6\u02dc\xaf\u02d8\u02d9\u02da\xb8\u02dd\u02db\u02c7","x-mac-inuit":"\u1403\u1404\u1405\u1406\u140a\u140b\u1431\u1432\u1433\u1434\u1438\u1439\u1449\u144e\u144f\u1450\u1451\u1455\u1456\u1466\u146d\u146e\u146f\u1470\u1472\u1473\u1483\u148b\u148c\u148d\u148e\u1490\u1491\xb0\u14a1\u14a5\u14a6\u2022\xb6\u14a7\xae\xa9\u2122\u14a8\u14aa\u14ab\u14bb\u14c2\u14c3\u14c4\u14c5\u14c7\u14c8\u14d0\u14ef\u14f0\u14f1\u14f2\u14f4\u14f5\u1505\u14d5\u14d6\u14d7\u14d8\u14da\u14db\u14ea\u1528\u1529\u152a\u152b\u152d\u2026 \u152e\u153e\u1555\u1556\u1557\u2013\u2014\u201c\u201d\u2018\u2019\u1558\u1559\u155a\u155d\u1546\u1547\u1548\u1549\u154b\u154c\u1550\u157f\u1580\u1581\u1582\u1583\u1584\u1585\u158f\u1590\u1591\u1592\u1593\u1594\u1595\u1671\u1672\u1673\u1674\u1675\u1676\u1596\u15a0\u15a1\u15a2\u15a3\u15a4\u15a5\u15a6\u157c\u0141\u0142","x-mac-ce":"\xc4\u0100\u0101\xc9\u0104\xd6\xdc\xe1\u0105\u010c\xe4\u010d\u0106\u0107\xe9\u0179\u017a\u010e\xed\u010f\u0112\u0113\u0116\xf3\u0117\xf4\xf6\xf5\xfa\u011a\u011b\xfc\u2020\xb0\u0118\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\u0119\xa8\u2260\u0123\u012e\u012f\u012a\u2264\u2265\u012b\u0136\u2202\u2211\u0142\u013b\u013c\u013d\u013e\u0139\u013a\u0145\u0146\u0143\xac\u221a\u0144\u0147\u2206\xab\xbb\u2026 \u0148\u0150\xd5\u0151\u014c\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\u014d\u0154\u0155\u0158\u2039\u203a\u0159\u0156\u0157\u0160\u201a\u201e\u0161\u015a\u015b\xc1\u0164\u0165\xcd\u017d\u017e\u016a\xd3\xd4\u016b\u016e\xda\u016f\u0170\u0171\u0172\u0173\xdd\xfd\u0137\u017b\u0141\u017c\u0122\u02c7","x-mac-romanian":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\u0102\u0218\u221e\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220f\u03c0\u222b\xaa\xba\u03a9\u0103\u0219\xbf\xa1\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026 \xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\xff\u0178\u2044\u20ac\u2039\u203a\u021a\u021b\u2021\xb7\u201a\u201e\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uf8ff\xd2\xda\xdb\xd9\u0131\u02c6\u02dc\xaf\u02d8\u02d9\u02da\xb8\u02dd\u02db\u02c7","x-mac-turkish":"\xc4\xc5\xc7\xc9\xd1\xd6\xdc\xe1\xe0\xe2\xe4\xe3\xe5\xe7\xe9\xe8\xea\xeb\xed\xec\xee\xef\xf1\xf3\xf2\xf4\xf6\xf5\xfa\xf9\xfb\xfc\u2020\xb0\xa2\xa3\xa7\u2022\xb6\xdf\xae\xa9\u2122\xb4\xa8\u2260\xc6\xd8\u221e\xb1\u2264\u2265\xa5\xb5\u2202\u2211\u220f\u03c0\u222b\xaa\xba\u03a9\xe6\xf8\xbf\xa1\xac\u221a\u0192\u2248\u2206\xab\xbb\u2026 \xc0\xc3\xd5\u0152\u0153\u2013\u2014\u201c\u201d\u2018\u2019\xf7\u25ca\xff\u0178\u011e\u011f\u0130\u0131\u015e\u015f\u2021\xb7\u201a\u201e\u2030\xc2\xca\xc1\xcb\xc8\xcd\xce\xcf\xcc\xd3\xd4\uf8ff\xd2\xda\xdb\xd9\uf8a0\u02c6\u02dc\xaf\u02d8\u02d9\u02da\xb8\u02dd\u02db\u02c7"},Op=new Map;function zp(e){let t=Op.get(e);if(t)return t;let r=Xp[e];if(r){let t=new Map;for(let e=0;e<r.length;e++)t.set(r.charCodeAt(e),128+e);return Op.set(e,t),t}if(Gp.has(e)){let t=new TextDecoder(e),r=new Uint8Array(128);for(let e=0;e<128;e++)r[e]=128+e;let n=new Map,s=t.decode(r);for(let e=0;e<128;e++)n.set(s.charCodeAt(e),128+e);return Op.set(e,n),n}}const Yp=[["utf-16be","utf-16be","utf-16be","utf-16be","utf-16be","utf-16be","utf-16be"],["x-mac-roman","shift-jis","big5","euc-kr","iso-8859-6","iso-8859-8","x-mac-greek","x-mac-cyrillic","x-mac-symbol","x-mac-devanagari","x-mac-gurmukhi","x-mac-gujarati","Oriya","Bengali","Tamil","Telugu","Kannada","Malayalam","Sinhalese","Burmese","Khmer","iso-8859-11","Laotian","Georgian","Armenian","gbk","Tibetan","Mongolian","Geez","x-mac-ce","Vietnamese","Sindhi"],["ascii",null,"iso-8859-1"],["symbol","utf-16be","shift-jis","gb18030","big5","euc-kr","johab",null,null,null,"utf-16be"]],Hp={15:"x-mac-icelandic",17:"x-mac-turkish",18:"x-mac-croatian",24:"x-mac-ce",25:"x-mac-ce",26:"x-mac-ce",27:"x-mac-ce",28:"x-mac-ce",30:"x-mac-icelandic",37:"x-mac-romanian",38:"x-mac-ce",39:"x-mac-ce",40:"x-mac-ce",143:"x-mac-inuit",146:"x-mac-gaelic"},Up=[[],{0:"en",30:"fo",60:"ks",90:"rw",1:"fr",31:"fa",61:"ku",91:"rn",2:"de",32:"ru",62:"sd",92:"ny",3:"it",33:"zh",63:"bo",93:"mg",4:"nl",34:"nl-BE",64:"ne",94:"eo",5:"sv",35:"ga",65:"sa",128:"cy",6:"es",36:"sq",66:"mr",129:"eu",7:"da",37:"ro",67:"bn",130:"ca",8:"pt",38:"cz",68:"as",131:"la",9:"no",39:"sk",69:"gu",132:"qu",10:"he",40:"si",70:"pa",133:"gn",11:"ja",41:"yi",71:"or",134:"ay",12:"ar",42:"sr",72:"ml",135:"tt",13:"fi",43:"mk",73:"kn",136:"ug",14:"el",44:"bg",74:"ta",137:"dz",15:"is",45:"uk",75:"te",138:"jv",16:"mt",46:"be",76:"si",139:"su",17:"tr",47:"uz",77:"my",140:"gl",18:"hr",48:"kk",78:"km",141:"af",19:"zh-Hant",49:"az-Cyrl",79:"lo",142:"br",20:"ur",50:"az-Arab",80:"vi",143:"iu",21:"hi",51:"hy",81:"id",144:"gd",22:"th",52:"ka",82:"tl",145:"gv",23:"ko",53:"mo",83:"ms",146:"ga",24:"lt",54:"ky",84:"ms-Arab",147:"to",25:"pl",55:"tg",85:"am",148:"el-polyton",26:"hu",56:"tk",86:"ti",149:"kl",27:"es",57:"mn-CN",87:"om",150:"az",28:"lv",58:"mn",88:"so",151:"nn",29:"se",59:"ps",89:"sw"},[],{1078:"af",16393:"en-IN",1159:"rw",1074:"tn",1052:"sq",6153:"en-IE",1089:"sw",1115:"si",1156:"gsw",8201:"en-JM",1111:"kok",1051:"sk",1118:"am",17417:"en-MY",1042:"ko",1060:"sl",5121:"ar-DZ",5129:"en-NZ",1088:"ky",11274:"es-AR",15361:"ar-BH",13321:"en-PH",1108:"lo",16394:"es-BO",3073:"ar",18441:"en-SG",1062:"lv",13322:"es-CL",2049:"ar-IQ",7177:"en-ZA",1063:"lt",9226:"es-CO",11265:"ar-JO",11273:"en-TT",2094:"dsb",5130:"es-CR",13313:"ar-KW",2057:"en-GB",1134:"lb",7178:"es-DO",12289:"ar-LB",1033:"en",1071:"mk",12298:"es-EC",4097:"ar-LY",12297:"en-ZW",2110:"ms-BN",17418:"es-SV",6145:"ary",1061:"et",1086:"ms",4106:"es-GT",8193:"ar-OM",1080:"fo",1100:"ml",18442:"es-HN",16385:"ar-QA",1124:"fil",1082:"mt",2058:"es-MX",1025:"ar-SA",1035:"fi",1153:"mi",19466:"es-NI",10241:"ar-SY",2060:"fr-BE",1146:"arn",6154:"es-PA",7169:"aeb",3084:"fr-CA",1102:"mr",15370:"es-PY",14337:"ar-AE",1036:"fr",1148:"moh",10250:"es-PE",9217:"ar-YE",5132:"fr-LU",1104:"mn",20490:"es-PR",1067:"hy",6156:"fr-MC",2128:"mn-CN",3082:"es",1101:"as",4108:"fr-CH",1121:"ne",1034:"es",2092:"az-Cyrl",1122:"fy",1044:"nb",21514:"es-US",1068:"az",1110:"gl",2068:"nn",14346:"es-UY",1133:"ba",1079:"ka",1154:"oc",8202:"es-VE",1069:"eu",3079:"de-AT",1096:"or",2077:"sv-FI",1059:"be",1031:"de",1123:"ps",1053:"sv",2117:"bn",5127:"de-LI",1045:"pl",1114:"syr",1093:"bn-IN",4103:"de-LU",1046:"pt",1064:"tg",8218:"bs-Cyrl",2055:"de-CH",2070:"pt-PT",2143:"tzm",5146:"bs",1032:"el",1094:"pa",1097:"ta",1150:"br",1135:"kl",1131:"qu-BO",1092:"tt",1026:"bg",1095:"gu",2155:"qu-EC",1098:"te",1027:"ca",1128:"ha",3179:"qu",1054:"th",3076:"zh-HK",1037:"he",1048:"ro",1105:"bo",5124:"zh-MO",1081:"hi",1047:"rm",1055:"tr",2052:"zh",1038:"hu",1049:"ru",1090:"tk",4100:"zh-SG",1039:"is",9275:"smn",1152:"ug",1028:"zh-TW",1136:"ig",4155:"smj-NO",1058:"uk",1155:"co",1057:"id",5179:"smj",1070:"hsb",1050:"hr",1117:"iu",3131:"se-FI",1056:"ur",4122:"hr-BA",2141:"iu-Latn",1083:"se",2115:"uz-Cyrl",1029:"cs",2108:"ga",2107:"se-SE",1091:"uz",1030:"da",1076:"xh",8251:"sms",1066:"vi",1164:"prs",1077:"zu",6203:"sma-NO",1106:"cy",1125:"dv",1040:"it",7227:"sms",1160:"wo",2067:"nl-BE",2064:"it-CH",1103:"sa",1157:"sah",1043:"nl",1041:"ja",7194:"sr-Cyrl-BA",1144:"ii",3081:"en-AU",1099:"kn",3098:"sr",1130:"yo",10249:"en-BZ",1087:"kk",6170:"sr-Latn-BA",4105:"en-CA",1107:"km",2074:"sr-Latn",9225:"en-029",1158:"quc",1132:"nso"}];let Vp=new kg({platformID:fg,encodingID:fg,languageID:fg,nameID:fg,length:fg,string:new Tg(fg,new Mg("length",(e=>jp(e.platformID,e.encodingID,e.languageID))),{type:"parent",relativeTo:e=>e.parent.stringOffset,allowNull:!1})}),qp=new kg({length:fg,tag:new Tg(fg,new Mg("length","utf16be"),{type:"parent",relativeTo:e=>e.stringOffset})});var Zp=new Rg(fg,{0:{count:fg,stringOffset:fg,records:new xg(Vp,"count")},1:{count:fg,stringOffset:fg,records:new xg(Vp,"count"),langTagCount:fg,langTags:new xg(qp,"langTagCount")}}),Kp=Zp;const Jp=["copyright","fontFamily","fontSubfamily","uniqueSubfamily","fullName","version","postscriptName","trademark","manufacturer","designer","description","vendorURL","designerURL","license","licenseURL",null,"preferredFamily","preferredSubfamily","compatibleFull","sampleText","postscriptCIDFontName","wwsFamilyName","wwsSubfamilyName"];Zp.process=function(e){var t={};for(let r of this.records){let e=Up[r.platformID][r.languageID];null==e&&null!=this.langTags&&r.languageID>=32768&&(e=this.langTags[r.languageID-32768].tag),null==e&&(e=r.platformID+"-"+r.languageID);let n=r.nameID>=256?"fontFeatures":Jp[r.nameID]||r.nameID;null==t[n]&&(t[n]={});let s=t[n];r.nameID>=256&&(s=s[r.nameID]||(s[r.nameID]={})),"string"!==typeof r.string&&"string"===typeof s[e]||(s[e]=r.string)}this.records=t},Zp.preEncode=function(){if(Array.isArray(this.records))return;this.version=0;let e=[];for(let t in this.records){let r=this.records[t];"fontFeatures"!==t&&(e.push({platformID:3,encodingID:1,languageID:1033,nameID:Jp.indexOf(t),length:2*r.en.length,string:r.en}),"postscriptName"===t&&e.push({platformID:1,encodingID:0,languageID:0,nameID:Jp.indexOf(t),length:r.en.length,string:r.en}))}this.records=e,this.count=e.length,this.stringOffset=Zp.size(this,null,!1)};var _p=new Rg(fg,{header:{xAvgCharWidth:wg,usWeightClass:fg,usWidthClass:fg,fsType:new Qg(fg,[null,"noEmbedding","viewOnly","editable",null,null,null,null,"noSubsetting","bitmapOnly"]),ySubscriptXSize:wg,ySubscriptYSize:wg,ySubscriptXOffset:wg,ySubscriptYOffset:wg,ySuperscriptXSize:wg,ySuperscriptYSize:wg,ySuperscriptXOffset:wg,ySuperscriptYOffset:wg,yStrikeoutSize:wg,yStrikeoutPosition:wg,sFamilyClass:wg,panose:new xg(hg,10),ulCharRange:new xg(pg,4),vendorID:new Mg(4),fsSelection:new Qg(fg,["italic","underscore","negative","outlined","strikeout","bold","regular","useTypoMetrics","wws","oblique"]),usFirstCharIndex:fg,usLastCharIndex:fg},0:{},1:{typoAscender:wg,typoDescender:wg,typoLineGap:wg,winAscent:fg,winDescent:fg,codePageRange:new xg(pg,2)},2:{typoAscender:wg,typoDescender:wg,typoLineGap:wg,winAscent:fg,winDescent:fg,codePageRange:new xg(pg,2),xHeight:wg,capHeight:wg,defaultChar:fg,breakChar:fg,maxContent:fg},5:{typoAscender:wg,typoDescender:wg,typoLineGap:wg,winAscent:fg,winDescent:fg,codePageRange:new xg(pg,2),xHeight:wg,capHeight:wg,defaultChar:fg,breakChar:fg,maxContent:fg,usLowerOpticalPointSize:fg,usUpperOpticalPointSize:fg}});let $p=_p.versions;$p[3]=$p[4]=$p[2];var em=_p,tm=new Rg(Bg,{header:{italicAngle:Bg,underlinePosition:wg,underlineThickness:wg,isFixedPitch:pg,minMemType42:pg,maxMemType42:pg,minMemType1:pg,maxMemType1:pg},1:{},2:{numberOfGlyphs:fg,glyphNameIndex:new xg(fg,"numberOfGlyphs"),names:new xg(new Mg(hg))},2.5:{numberOfGlyphs:fg,offsets:new xg(hg,"numberOfGlyphs")},3:{},4:{map:new xg(pg,(e=>e.parent.maxp.numGlyphs))}}),rm=new kg({controlValues:new xg(wg)}),nm=new kg({instructions:new xg(hg)});let sm=new Rg("head.indexToLocFormat",{0:{offsets:new xg(fg)},1:{offsets:new xg(pg)}});sm.process=function(){if(0===this.version&&!this._processed){for(let e=0;e<this.offsets.length;e++)this.offsets[e]<<=1;this._processed=!0}},sm.preEncode=function(){if(0===this.version&&!1!==this._processed){for(let e=0;e<this.offsets.length;e++)this.offsets[e]>>>=1;this._processed=!1}};var im=sm,om=new kg({controlValueProgram:new xg(hg)}),Am=new xg(new Pg);class am{getCFFVersion(e){for(;e&&!e.hdrSize;)e=e.parent;return e?e.version:-1}decode(e,t){let r=this.getCFFVersion(t)>=2?e.readUInt32BE():e.readUInt16BE();if(0===r)return[];let n,s=e.readUInt8();if(1===s)n=hg;else if(2===s)n=fg;else if(3===s)n=gg;else{if(4!==s)throw new Error(`Bad offset size in CFFIndex: ${s} ${e.pos}`);n=pg}let i=[],o=e.pos+(r+1)*s-1,A=n.decode(e);for(let a=0;a<r;a++){let r=n.decode(e);if(null!=this.type){let n=e.pos;e.pos=o+A,t.length=r-A,i.push(this.type.decode(e,t)),e.pos=n}else i.push({offset:o+A,length:r-A});A=r}return e.pos=o+A,i}size(e,t){let r=2;if(0===e.length)return r;let n,s=this.type||new Pg,i=1;for(let o=0;o<e.length;o++){let r=e[o];i+=s.size(r,t)}if(i<=255)n=hg;else if(i<=65535)n=fg;else if(i<=16777215)n=gg;else{if(!(i<=4294967295))throw new Error("Bad offset in CFFIndex");n=pg}return r+=1+n.size()*(e.length+1),r+=i-1,r}encode(e,t,r){if(e.writeUInt16BE(t.length),0===t.length)return;let n,s=this.type||new Pg,i=[],o=1;for(let A of t){let e=s.size(A,r);i.push(e),o+=e}if(o<=255)n=hg;else if(o<=65535)n=fg;else if(o<=16777215)n=gg;else{if(!(o<=4294967295))throw new Error("Bad offset in CFFIndex");n=pg}e.writeUInt8(n.size()),o=1,n.encode(e,o);for(let A of i)o+=A,n.encode(e,o);for(let A of t)s.encode(e,A,r)}constructor(e){this.type=e}}const lm=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"],cm={".":10,E:11,"E-":12,"-":14};class um{static decode(e,t){if(32<=t&&t<=246)return t-139;if(247<=t&&t<=250)return 256*(t-247)+e.readUInt8()+108;if(251<=t&&t<=254)return 256*-(t-251)-e.readUInt8()-108;if(28===t)return e.readInt16BE();if(29===t)return e.readInt32BE();if(30===t){let t="";for(;;){let r=e.readUInt8(),n=r>>4;if(15===n)break;t+=lm[n];let s=15&r;if(15===s)break;t+=lm[s]}return parseFloat(t)}return null}static size(e){if(e.forceLarge&&(e=32768),(0|e)!==e){let t=""+e;return 1+Math.ceil((t.length+1)/2)}return-107<=e&&e<=107?1:108<=e&&e<=1131||-1131<=e&&e<=-108?2:-32768<=e&&e<=32767?3:5}static encode(e,t){let r=Number(t);if(t.forceLarge)return e.writeUInt8(29),e.writeInt32BE(r);if((0|r)===r)return-107<=r&&r<=107?e.writeUInt8(r+139):108<=r&&r<=1131?(r-=108,e.writeUInt8(247+(r>>8)),e.writeUInt8(255&r)):-1131<=r&&r<=-108?(r=-r-108,e.writeUInt8(251+(r>>8)),e.writeUInt8(255&r)):-32768<=r&&r<=32767?(e.writeUInt8(28),e.writeInt16BE(r)):(e.writeUInt8(29),e.writeInt32BE(r));{e.writeUInt8(30);let t=""+r;for(let r=0;r<t.length;r+=2){let s=t[r],i=cm[s]||+s;if(r===t.length-1)var n=15;else{let e=t[r+1];n=cm[e]||+e}e.writeUInt8(i<<4|15&n)}if(15!==n)return e.writeUInt8(240)}}}class dm{decodeOperands(e,t,r,n){if(Array.isArray(e))return n.map(((n,s)=>this.decodeOperands(e[s],t,r,[n])));if(null!=e.decode)return e.decode(t,r,n);switch(e){case"number":case"offset":case"sid":return n[0];case"boolean":return!!n[0];default:return n}}encodeOperands(e,t,r,n){return Array.isArray(e)?n.map(((n,s)=>this.encodeOperands(e[s],t,r,n)[0])):null!=e.encode?e.encode(t,n,r):"number"===typeof n?[n]:"boolean"===typeof n?[+n]:Array.isArray(n)?n:[n]}decode(e,t){let r=e.pos+t.length,n={},s=[];Object.defineProperties(n,{parent:{value:t},_startOffset:{value:e.pos}});for(let i in this.fields){let e=this.fields[i];n[e[1]]=e[3]}for(;e.pos<r;){let t=e.readUInt8();if(t<28){12===t&&(t=t<<8|e.readUInt8());let r=this.fields[t];if(!r)throw new Error(`Unknown operator ${t}`);let i=this.decodeOperands(r[2],e,n,s);null!=i&&(i instanceof Cg?Object.defineProperty(n,r[1],i):n[r[1]]=i),s=[]}else s.push(um.decode(e,t))}return n}size(e,t){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],n={parent:t,val:e,pointerSize:0,startOffset:t.startOffset||0},s=0;for(let i in this.fields){let t=this.fields[i],r=e[t[1]];if(null==r||Xg(r,t[3]))continue;let o=this.encodeOperands(t[2],null,n,r);for(let e of o)s+=um.size(e);s+=(Array.isArray(t[0])?t[0]:[t[0]]).length}return r&&(s+=n.pointerSize),s}encode(e,t,r){let n={pointers:[],startOffset:e.pos,parent:r,val:t,pointerSize:0};n.pointerOffset=e.pos+this.size(t,n,!1);for(let i of this.ops){let r=t[i[1]];if(null==r||Xg(r,i[3]))continue;let s=this.encodeOperands(i[2],e,n,r);for(let t of s)um.encode(e,t);let o=Array.isArray(i[0])?i[0]:[i[0]];for(let t of o)e.writeUInt8(t)}let s=0;for(;s<n.pointers.length;){let t=n.pointers[s++];t.type.encode(e,t.val,t.parent)}}constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this.ops=e,this.fields={};for(let t of e){let e=Array.isArray(t[0])?t[0][0]<<8|t[0][1]:t[0];this.fields[e]=t}}}class hm extends Tg{decode(e,t,r){return this.offsetType={decode:()=>r[0]},super.decode(e,t,r)}encode(e,t,r){if(!e)return this.offsetType={size:()=>0},this.size(t,r),[new fm(0)];let n=null;return this.offsetType={encode:(e,t)=>n=t},super.encode(e,t,r),[new fm(n)]}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};null==t.type&&(t.type="global"),super(null,e,t)}}class fm{valueOf(){return this.val}constructor(e){this.val=e,this.forceLarge=!0}}var gm=new dm([[6,"BlueValues","delta",null],[7,"OtherBlues","delta",null],[8,"FamilyBlues","delta",null],[9,"FamilyOtherBlues","delta",null],[[12,9],"BlueScale","number",.039625],[[12,10],"BlueShift","number",7],[[12,11],"BlueFuzz","number",1],[10,"StdHW","number",null],[11,"StdVW","number",null],[[12,12],"StemSnapH","delta",null],[[12,13],"StemSnapV","delta",null],[[12,14],"ForceBold","boolean",!1],[[12,17],"LanguageGroup","number",0],[[12,18],"ExpansionFactor","number",.06],[[12,19],"initialRandomSeed","number",0],[20,"defaultWidthX","number",0],[21,"nominalWidthX","number",0],[22,"vsindex","number",0],[23,"blend",class{static decode(e,t,r){let n=r.pop();for(;r.length>n;)r.pop()}},null],[19,"Subrs",new hm(new am,{type:"local"}),null]]),pm=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"];let mm=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"],wm=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron"],vm=new kg({reserved:new Lg(fg),reqFeatureIndex:fg,featureCount:fg,featureIndexes:new xg(fg,"featureCount")}),bm=new kg({tag:new Mg(4),langSys:new Tg(fg,vm,{type:"parent"})}),ym=new kg({defaultLangSys:new Tg(fg,vm),count:fg,langSysRecords:new xg(bm,"count")}),Bm=new kg({tag:new Mg(4),script:new Tg(fg,ym,{type:"parent"})}),Em=new xg(Bm,fg),Cm=new kg({version:fg,nameID:fg}),xm=new kg({featureParams:new Tg(fg,Cm),lookupCount:fg,lookupListIndexes:new xg(fg,"lookupCount")}),Im=new kg({tag:new Mg(4),feature:new Tg(fg,xm,{type:"parent"})}),Dm=new xg(Im,fg),Qm=new kg({markAttachmentType:hg,flags:new Qg(hg,["rightToLeft","ignoreBaseGlyphs","ignoreLigatures","ignoreMarks","useMarkFilteringSet"])});function Pm(e){let t=new kg({lookupType:fg,flags:Qm,subTableCount:fg,subTables:new xg(new Tg(fg,e),"subTableCount"),markFilteringSet:new Fg(fg,(e=>e.flags.flags.useMarkFilteringSet))});return new Ig(new Tg(fg,t),fg)}let Fm=new kg({start:fg,end:fg,startCoverageIndex:fg}),Lm=new Rg(fg,{1:{glyphCount:fg,glyphs:new xg(fg,"glyphCount")},2:{rangeCount:fg,rangeRecords:new xg(Fm,"rangeCount")}}),Mm=new kg({start:fg,end:fg,class:fg}),Sm=new Rg(fg,{1:{startGlyph:fg,glyphCount:fg,classValueArray:new xg(fg,"glyphCount")},2:{classRangeCount:fg,classRangeRecord:new xg(Mm,"classRangeCount")}}),Nm=new kg({a:fg,b:fg,deltaFormat:fg}),km=new kg({sequenceIndex:fg,lookupListIndex:fg}),Rm=new kg({glyphCount:fg,lookupCount:fg,input:new xg(fg,(e=>e.glyphCount-1)),lookupRecords:new xg(km,"lookupCount")}),Tm=new xg(new Tg(fg,Rm),fg),Wm=new kg({glyphCount:fg,lookupCount:fg,classes:new xg(fg,(e=>e.glyphCount-1)),lookupRecords:new xg(km,"lookupCount")}),jm=new xg(new Tg(fg,Wm),fg),Gm=new Rg(fg,{1:{coverage:new Tg(fg,Lm),ruleSetCount:fg,ruleSets:new xg(new Tg(fg,Tm),"ruleSetCount")},2:{coverage:new Tg(fg,Lm),classDef:new Tg(fg,Sm),classSetCnt:fg,classSet:new xg(new Tg(fg,jm),"classSetCnt")},3:{glyphCount:fg,lookupCount:fg,coverages:new xg(new Tg(fg,Lm),"glyphCount"),lookupRecords:new xg(km,"lookupCount")}}),Xm=new kg({backtrackGlyphCount:fg,backtrack:new xg(fg,"backtrackGlyphCount"),inputGlyphCount:fg,input:new xg(fg,(e=>e.inputGlyphCount-1)),lookaheadGlyphCount:fg,lookahead:new xg(fg,"lookaheadGlyphCount"),lookupCount:fg,lookupRecords:new xg(km,"lookupCount")}),Om=new xg(new Tg(fg,Xm),fg),zm=new Rg(fg,{1:{coverage:new Tg(fg,Lm),chainCount:fg,chainRuleSets:new xg(new Tg(fg,Om),"chainCount")},2:{coverage:new Tg(fg,Lm),backtrackClassDef:new Tg(fg,Sm),inputClassDef:new Tg(fg,Sm),lookaheadClassDef:new Tg(fg,Sm),chainCount:fg,chainClassSet:new xg(new Tg(fg,Om),"chainCount")},3:{backtrackGlyphCount:fg,backtrackCoverage:new xg(new Tg(fg,Lm),"backtrackGlyphCount"),inputGlyphCount:fg,inputCoverage:new xg(new Tg(fg,Lm),"inputGlyphCount"),lookaheadGlyphCount:fg,lookaheadCoverage:new xg(new Tg(fg,Lm),"lookaheadGlyphCount"),lookupCount:fg,lookupRecords:new xg(km,"lookupCount")}}),Ym=new bg(16,"BE",14),Hm=new kg({startCoord:Ym,peakCoord:Ym,endCoord:Ym}),Um=new kg({axisCount:fg,regionCount:fg,variationRegions:new xg(new xg(Hm,"axisCount"),"regionCount")}),Vm=new kg({shortDeltas:new xg(wg,(e=>e.parent.shortDeltaCount)),regionDeltas:new xg(mg,(e=>e.parent.regionIndexCount-e.parent.shortDeltaCount)),deltas:e=>e.shortDeltas.concat(e.regionDeltas)}),qm=new kg({itemCount:fg,shortDeltaCount:fg,regionIndexCount:fg,regionIndexes:new xg(fg,"regionIndexCount"),deltaSets:new xg(Vm,"itemCount")}),Zm=new kg({format:fg,variationRegionList:new Tg(pg,Um),variationDataCount:fg,itemVariationData:new xg(new Tg(pg,qm),"variationDataCount")}),Km=new Rg(fg,{1:{axisIndex:fg,axisIndex:fg,filterRangeMinValue:Ym,filterRangeMaxValue:Ym}}),Jm=new kg({conditionCount:fg,conditionTable:new xg(new Tg(pg,Km),"conditionCount")}),_m=new kg({featureIndex:fg,alternateFeatureTable:new Tg(pg,xm,{type:"parent"})}),$m=new kg({version:Bg,substitutionCount:fg,substitutions:new xg(_m,"substitutionCount")}),ew=new kg({conditionSet:new Tg(pg,Jm,{type:"parent"}),featureTableSubstitution:new Tg(pg,$m,{type:"parent"})}),tw=new kg({majorVersion:fg,minorVersion:fg,featureVariationRecordCount:pg,featureVariationRecords:new xg(ew,"featureVariationRecordCount")});class rw{decode(e,t,r){return this.predefinedOps[r[0]]?this.predefinedOps[r[0]]:this.type.decode(e,t,r)}size(e,t){return this.type.size(e,t)}encode(e,t,r){let n=this.predefinedOps.indexOf(t);return-1!==n?n:this.type.encode(e,t,r)}constructor(e,t){this.predefinedOps=e,this.type=t}}let nw=new kg({first:fg,nLeft:hg}),sw=new kg({first:fg,nLeft:fg}),iw=new Rg(new class extends dg{decode(e){return 127&hg.decode(e)}constructor(){super("UInt8")}},{0:{nCodes:hg,codes:new xg(hg,"nCodes")},1:{nRanges:hg,ranges:new xg(nw,"nRanges")}}),ow=new rw([mm,["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"]],new hm(iw,{lazy:!0}));class Aw extends xg{decode(e,t){let r=Eg(this.length,e,t),n=0,s=[];for(;n<r;){let r=this.type.decode(e,t);r.offset=n,n+=r.nLeft+1,s.push(r)}return s}}let aw=new rw([wm,[".notdef","space","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],[".notdef","space","dollaroldstyle","dollarsuperior","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","hyphensuperior","colonmonetary","onefitted","rupiah","centoldstyle","figuredash","hypheninferior","onequarter","onehalf","threequarters","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior"]],new hm(new Rg(hg,{0:{glyphs:new xg(fg,(e=>e.parent.CharStrings.length-1))},1:{ranges:new Aw(nw,(e=>e.parent.CharStrings.length-1))},2:{ranges:new Aw(sw,(e=>e.parent.CharStrings.length-1))}}),{lazy:!0})),lw=new kg({first:fg,fd:hg}),cw=new kg({first:pg,fd:fg}),uw=new Rg(hg,{0:{fds:new xg(hg,(e=>e.parent.CharStrings.length))},3:{nRanges:fg,ranges:new xg(lw,"nRanges"),sentinel:fg},4:{nRanges:pg,ranges:new xg(cw,"nRanges"),sentinel:pg}}),dw=new hm(gm);class hw{decode(e,t,r){return t.length=r[0],dw.decode(e,t,[r[1]])}size(e,t){return[gm.size(e,t,!1),dw.size(e,t)[0]]}encode(e,t,r){return[gm.size(t,r,!1),dw.encode(e,t,r)[0]]}}let fw=new dm([[18,"Private",new hw,null],[[12,38],"FontName","sid",null],[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[[12,5],"PaintType","number",0]]),gw=new dm([[[12,30],"ROS",["sid","sid","number"],null],[0,"version","sid",null],[1,"Notice","sid",null],[[12,0],"Copyright","sid",null],[2,"FullName","sid",null],[3,"FamilyName","sid",null],[4,"Weight","sid",null],[[12,1],"isFixedPitch","boolean",!1],[[12,2],"ItalicAngle","number",0],[[12,3],"UnderlinePosition","number",-100],[[12,4],"UnderlineThickness","number",50],[[12,5],"PaintType","number",0],[[12,6],"CharstringType","number",2],[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[13,"UniqueID","number",null],[5,"FontBBox","array",[0,0,0,0]],[[12,8],"StrokeWidth","number",0],[14,"XUID","array",null],[15,"charset",aw,wm],[16,"Encoding",ow,mm],[17,"CharStrings",new hm(new am),null],[18,"Private",new hw,null],[[12,20],"SyntheticBase","number",null],[[12,21],"PostScript","sid",null],[[12,22],"BaseFontName","sid",null],[[12,23],"BaseFontBlend","delta",null],[[12,31],"CIDFontVersion","number",0],[[12,32],"CIDFontRevision","number",0],[[12,33],"CIDFontType","number",0],[[12,34],"CIDCount","number",8720],[[12,35],"UIDBase","number",null],[[12,37],"FDSelect",new hm(uw),null],[[12,36],"FDArray",new hm(new am(fw)),null],[[12,38],"FontName","sid",null]]),pw=new kg({length:fg,itemVariationStore:Zm}),mw=new dm([[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[17,"CharStrings",new hm(new am),null],[[12,37],"FDSelect",new hm(uw),null],[[12,36],"FDArray",new hm(new am(fw)),null],[24,"vstore",new hm(pw),null],[25,"maxstack","number",193]]);var ww=new Rg(yg,{1:{hdrSize:hg,offSize:hg,nameIndex:new am(new Mg("length")),topDictIndex:new am(gw),stringIndex:new am(new Mg("length")),globalSubrIndex:new am},2:{hdrSize:hg,length:fg,topDict:mw,globalSubrIndex:new am}});class vw{static decode(e){return new vw(e)}decode(){this.stream.pos;let e=ww.decode(this.stream);for(let t in e){let r=e[t];this[t]=r}if(this.version<2){if(1!==this.topDictIndex.length)throw new Error("Only a single font is allowed in CFF");this.topDict=this.topDictIndex[0]}return this.isCIDFont=null!=this.topDict.ROS,this}string(e){return this.version>=2?null:e<pm.length?pm[e]:this.stringIndex[e-pm.length]}get postscriptName(){return this.version<2?this.nameIndex[0]:null}get fullName(){return this.string(this.topDict.FullName)}get familyName(){return this.string(this.topDict.FamilyName)}getCharString(e){return this.stream.pos=this.topDict.CharStrings[e].offset,this.stream.readBuffer(this.topDict.CharStrings[e].length)}getGlyphName(e){if(this.version>=2)return null;if(this.isCIDFont)return null;let{charset:t}=this.topDict;if(Array.isArray(t))return t[e];if(0===e)return".notdef";switch(e-=1,t.version){case 0:return this.string(t.glyphs[e]);case 1:case 2:for(let r=0;r<t.ranges.length;r++){let n=t.ranges[r];if(n.offset<=e&&e<=n.offset+n.nLeft)return this.string(n.first+(e-n.offset))}}return null}fdForGlyph(e){if(!this.topDict.FDSelect)return null;switch(this.topDict.FDSelect.version){case 0:return this.topDict.FDSelect.fds[e];case 3:case 4:let{ranges:t}=this.topDict.FDSelect,r=0,n=t.length-1;for(;r<=n;){let s=r+n>>1;if(e<t[s].first)n=s-1;else{if(!(s<n&&e>=t[s+1].first))return t[s].fd;r=s+1}}default:throw new Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`)}}privateDictForGlyph(e){if(this.topDict.FDSelect){let t=this.fdForGlyph(e);return this.topDict.FDArray[t]?this.topDict.FDArray[t].Private:null}return this.version<2?this.topDict.Private:this.topDict.FDArray[0].Private}constructor(e){this.stream=e,this.decode()}}var bw=vw;let yw=new kg({glyphIndex:fg,vertOriginY:wg});var Bw=new kg({majorVersion:fg,minorVersion:fg,defaultVertOriginY:wg,numVertOriginYMetrics:fg,metrics:new xg(yw,"numVertOriginYMetrics")});let Ew=new kg({height:hg,width:hg,horiBearingX:mg,horiBearingY:mg,horiAdvance:hg,vertBearingX:mg,vertBearingY:mg,vertAdvance:hg}),Cw=new kg({height:hg,width:hg,bearingX:mg,bearingY:mg,advance:hg}),xw=new kg({glyph:fg,xOffset:mg,yOffset:mg});class Iw{}class Dw{}new Rg("version",{1:{metrics:Cw,data:Iw},2:{metrics:Cw,data:Dw},5:{data:Dw},6:{metrics:Ew,data:Iw},7:{metrics:Ew,data:Dw},8:{metrics:Cw,pad:new Lg(hg),numComponents:fg,components:new xg(xw,"numComponents")},9:{metrics:Ew,pad:new Lg(hg),numComponents:fg,components:new xg(xw,"numComponents")},17:{metrics:Cw,dataLen:pg,data:new Pg("dataLen")},18:{metrics:Ew,dataLen:pg,data:new Pg("dataLen")},19:{dataLen:pg,data:new Pg("dataLen")}});let Qw=new kg({ascender:mg,descender:mg,widthMax:hg,caretSlopeNumerator:mg,caretSlopeDenominator:mg,caretOffset:mg,minOriginSB:mg,minAdvanceSB:mg,maxBeforeBL:mg,minAfterBL:mg,pad:new Lg(mg,2)}),Pw=new kg({glyphCode:fg,offset:fg}),Fw=new Rg(fg,{header:{imageFormat:fg,imageDataOffset:pg},1:{offsetArray:new xg(pg,(e=>e.parent.lastGlyphIndex-e.parent.firstGlyphIndex+1))},2:{imageSize:pg,bigMetrics:Ew},3:{offsetArray:new xg(fg,(e=>e.parent.lastGlyphIndex-e.parent.firstGlyphIndex+1))},4:{numGlyphs:pg,glyphArray:new xg(Pw,(e=>e.numGlyphs+1))},5:{imageSize:pg,bigMetrics:Ew,numGlyphs:pg,glyphCodeArray:new xg(fg,"numGlyphs")}}),Lw=new kg({firstGlyphIndex:fg,lastGlyphIndex:fg,subtable:new Tg(pg,Fw)}),Mw=new kg({indexSubTableArray:new Tg(pg,new xg(Lw,1),{type:"parent"}),indexTablesSize:pg,numberOfIndexSubTables:pg,colorRef:pg,hori:Qw,vert:Qw,startGlyphIndex:fg,endGlyphIndex:fg,ppemX:hg,ppemY:hg,bitDepth:hg,flags:new Qg(hg,["horizontal","vertical"])});var Sw=new kg({version:pg,numSizes:pg,sizes:new xg(Mw,"numSizes")});let Nw=new kg({ppem:fg,resolution:fg,imageOffsets:new xg(new Tg(pg,"void"),(e=>e.parent.parent.maxp.numGlyphs+1))});var kw=new kg({version:fg,flags:new Qg(fg,["renderOutlines"]),numImgTables:pg,imageTables:new xg(new Tg(pg,Nw),"numImgTables")});let Rw=new kg({gid:fg,paletteIndex:fg}),Tw=new kg({gid:fg,firstLayerIndex:fg,numLayers:fg});var Ww=new kg({version:fg,numBaseGlyphRecords:fg,baseGlyphRecord:new Tg(pg,new xg(Tw,"numBaseGlyphRecords")),layerRecords:new Tg(pg,new xg(Rw,"numLayerRecords"),{lazy:!0}),numLayerRecords:fg});let jw=new kg({blue:hg,green:hg,red:hg,alpha:hg});var Gw=new Rg(fg,{header:{numPaletteEntries:fg,numPalettes:fg,numColorRecords:fg,colorRecords:new Tg(pg,new xg(jw,"numColorRecords")),colorRecordIndices:new xg(fg,"numPalettes")},0:{},1:{offsetPaletteTypeArray:new Tg(pg,new xg(pg,"numPalettes")),offsetPaletteLabelArray:new Tg(pg,new xg(fg,"numPalettes")),offsetPaletteEntryLabelArray:new Tg(pg,new xg(fg,"numPaletteEntries"))}});let Xw=new Rg(fg,{1:{coordinate:wg},2:{coordinate:wg,referenceGlyph:fg,baseCoordPoint:fg},3:{coordinate:wg,deviceTable:new Tg(fg,Nm)}}),Ow=new kg({defaultIndex:fg,baseCoordCount:fg,baseCoords:new xg(new Tg(fg,Xw),"baseCoordCount")}),zw=new kg({tag:new Mg(4),minCoord:new Tg(fg,Xw,{type:"parent"}),maxCoord:new Tg(fg,Xw,{type:"parent"})}),Yw=new kg({minCoord:new Tg(fg,Xw),maxCoord:new Tg(fg,Xw),featMinMaxCount:fg,featMinMaxRecords:new xg(zw,"featMinMaxCount")}),Hw=new kg({tag:new Mg(4),minMax:new Tg(fg,Yw,{type:"parent"})}),Uw=new kg({baseValues:new Tg(fg,Ow),defaultMinMax:new Tg(fg,Yw),baseLangSysCount:fg,baseLangSysRecords:new xg(Hw,"baseLangSysCount")}),Vw=new kg({tag:new Mg(4),script:new Tg(fg,Uw,{type:"parent"})}),qw=new xg(Vw,fg),Zw=new xg(new Mg(4),fg),Kw=new kg({baseTagList:new Tg(fg,Zw),baseScriptList:new Tg(fg,qw)});var Jw=new Rg(pg,{header:{horizAxis:new Tg(fg,Kw),vertAxis:new Tg(fg,Kw)},65536:{},65537:{itemVariationStore:new Tg(pg,Zm)}});let _w=new xg(fg,fg),$w=new kg({coverage:new Tg(fg,Lm),glyphCount:fg,attachPoints:new xg(new Tg(fg,_w),"glyphCount")}),ev=new Rg(fg,{1:{coordinate:wg},2:{caretValuePoint:fg},3:{coordinate:wg,deviceTable:new Tg(fg,Nm)}}),tv=new xg(new Tg(fg,ev),fg),rv=new kg({coverage:new Tg(fg,Lm),ligGlyphCount:fg,ligGlyphs:new xg(new Tg(fg,tv),"ligGlyphCount")}),nv=new kg({markSetTableFormat:fg,markSetCount:fg,coverage:new xg(new Tg(pg,Lm),"markSetCount")});var sv=new Rg(pg,{header:{glyphClassDef:new Tg(fg,Sm),attachList:new Tg(fg,$w),ligCaretList:new Tg(fg,rv),markAttachClassDef:new Tg(fg,Sm)},65536:{},65538:{markGlyphSetsDef:new Tg(fg,nv)},65539:{markGlyphSetsDef:new Tg(fg,nv),itemVariationStore:new Tg(pg,Zm)}});let iv=new Qg(fg,["xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice"]),ov={xPlacement:wg,yPlacement:wg,xAdvance:wg,yAdvance:wg,xPlaDevice:new Tg(fg,Nm,{type:"global",relativeTo:e=>e.rel}),yPlaDevice:new Tg(fg,Nm,{type:"global",relativeTo:e=>e.rel}),xAdvDevice:new Tg(fg,Nm,{type:"global",relativeTo:e=>e.rel}),yAdvDevice:new Tg(fg,Nm,{type:"global",relativeTo:e=>e.rel})};class Av{buildStruct(e){let t=e;for(;!t[this.key]&&t.parent;)t=t.parent;if(!t[this.key])return;let r={rel:()=>t._startOffset},n=t[this.key];for(let s in n)n[s]&&(r[s]=ov[s]);return new kg(r)}size(e,t){return this.buildStruct(t).size(e,t)}decode(e,t){let r=this.buildStruct(t).decode(e,t);return delete r.rel,r}constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"valueFormat";this.key=e}}let av=new kg({secondGlyph:fg,value1:new Av("valueFormat1"),value2:new Av("valueFormat2")}),lv=new xg(av,fg),cv=new kg({value1:new Av("valueFormat1"),value2:new Av("valueFormat2")}),uv=new Rg(fg,{1:{xCoordinate:wg,yCoordinate:wg},2:{xCoordinate:wg,yCoordinate:wg,anchorPoint:fg},3:{xCoordinate:wg,yCoordinate:wg,xDeviceTable:new Tg(fg,Nm),yDeviceTable:new Tg(fg,Nm)}}),dv=new kg({entryAnchor:new Tg(fg,uv,{type:"parent"}),exitAnchor:new Tg(fg,uv,{type:"parent"})}),hv=new kg({class:fg,markAnchor:new Tg(fg,uv,{type:"parent"})}),fv=new xg(hv,fg),gv=new xg(new Tg(fg,uv),(e=>e.parent.classCount)),pv=new xg(gv,fg),mv=new xg(new Tg(fg,uv),(e=>e.parent.parent.classCount)),wv=new xg(mv,fg),vv=new xg(new Tg(fg,wv),fg),bv=new Rg("lookupType",{1:new Rg(fg,{1:{coverage:new Tg(fg,Lm),valueFormat:iv,value:new Av},2:{coverage:new Tg(fg,Lm),valueFormat:iv,valueCount:fg,values:new Ig(new Av,"valueCount")}}),2:new Rg(fg,{1:{coverage:new Tg(fg,Lm),valueFormat1:iv,valueFormat2:iv,pairSetCount:fg,pairSets:new Ig(new Tg(fg,lv),"pairSetCount")},2:{coverage:new Tg(fg,Lm),valueFormat1:iv,valueFormat2:iv,classDef1:new Tg(fg,Sm),classDef2:new Tg(fg,Sm),class1Count:fg,class2Count:fg,classRecords:new Ig(new Ig(cv,"class2Count"),"class1Count")}}),3:{format:fg,coverage:new Tg(fg,Lm),entryExitCount:fg,entryExitRecords:new xg(dv,"entryExitCount")},4:{format:fg,markCoverage:new Tg(fg,Lm),baseCoverage:new Tg(fg,Lm),classCount:fg,markArray:new Tg(fg,fv),baseArray:new Tg(fg,pv)},5:{format:fg,markCoverage:new Tg(fg,Lm),ligatureCoverage:new Tg(fg,Lm),classCount:fg,markArray:new Tg(fg,fv),ligatureArray:new Tg(fg,vv)},6:{format:fg,mark1Coverage:new Tg(fg,Lm),mark2Coverage:new Tg(fg,Lm),classCount:fg,mark1Array:new Tg(fg,fv),mark2Array:new Tg(fg,pv)},7:Gm,8:zm,9:{posFormat:fg,lookupType:fg,extension:new Tg(pg,null)}});bv.versions[9].extension.type=bv;var yv=new Rg(pg,{header:{scriptList:new Tg(fg,Em),featureList:new Tg(fg,Dm),lookupList:new Tg(fg,new Pm(bv))},65536:{},65537:{featureVariations:new Tg(pg,tw)}});let Bv=new xg(fg,fg),Ev=Bv,Cv=new kg({glyph:fg,compCount:fg,components:new xg(fg,(e=>e.compCount-1))}),xv=new xg(new Tg(fg,Cv),fg),Iv=new Rg("lookupType",{1:new Rg(fg,{1:{coverage:new Tg(fg,Lm),deltaGlyphID:wg},2:{coverage:new Tg(fg,Lm),glyphCount:fg,substitute:new Ig(fg,"glyphCount")}}),2:{substFormat:fg,coverage:new Tg(fg,Lm),count:fg,sequences:new Ig(new Tg(fg,Bv),"count")},3:{substFormat:fg,coverage:new Tg(fg,Lm),count:fg,alternateSet:new Ig(new Tg(fg,Ev),"count")},4:{substFormat:fg,coverage:new Tg(fg,Lm),count:fg,ligatureSets:new Ig(new Tg(fg,xv),"count")},5:Gm,6:zm,7:{substFormat:fg,lookupType:fg,extension:new Tg(pg,null)},8:{substFormat:fg,coverage:new Tg(fg,Lm),backtrackCoverage:new xg(new Tg(fg,Lm),"backtrackGlyphCount"),lookaheadGlyphCount:fg,lookaheadCoverage:new xg(new Tg(fg,Lm),"lookaheadGlyphCount"),glyphCount:fg,substitutes:new xg(fg,"glyphCount")}});Iv.versions[7].extension.type=Iv;var Dv=new Rg(pg,{header:{scriptList:new Tg(fg,Em),featureList:new Tg(fg,Dm),lookupList:new Tg(fg,new Pm(Iv))},65536:{},65537:{featureVariations:new Tg(pg,tw)}});let Qv=new xg(fg,fg),Pv=new kg({shrinkageEnableGSUB:new Tg(fg,Qv),shrinkageDisableGSUB:new Tg(fg,Qv),shrinkageEnableGPOS:new Tg(fg,Qv),shrinkageDisableGPOS:new Tg(fg,Qv),shrinkageJstfMax:new Tg(fg,new Pm(bv)),extensionEnableGSUB:new Tg(fg,Qv),extensionDisableGSUB:new Tg(fg,Qv),extensionEnableGPOS:new Tg(fg,Qv),extensionDisableGPOS:new Tg(fg,Qv),extensionJstfMax:new Tg(fg,new Pm(bv))}),Fv=new xg(new Tg(fg,Pv),fg),Lv=new kg({tag:new Mg(4),jstfLangSys:new Tg(fg,Fv)}),Mv=new kg({extenderGlyphs:new Tg(fg,new xg(fg,fg)),defaultLangSys:new Tg(fg,Fv),langSysCount:fg,langSysRecords:new xg(Lv,"langSysCount")}),Sv=new kg({tag:new Mg(4),script:new Tg(fg,Mv,{type:"parent"})});var Nv=new kg({version:pg,scriptCount:fg,scriptList:new xg(Sv,"scriptCount")});let kv=new kg({entry:new class{decode(e,t){switch(this.size(0,t)){case 1:return e.readUInt8();case 2:return e.readUInt16BE();case 3:return e.readUInt24BE();case 4:return e.readUInt32BE()}}size(e,t){return Eg(this._size,null,t)}constructor(e){this._size=e}}((e=>1+((48&e.parent.entryFormat)>>4))),outerIndex:e=>e.entry>>1+(15&e.parent.entryFormat),innerIndex:e=>e.entry&(1<<1+(15&e.parent.entryFormat))-1}),Rv=new kg({entryFormat:fg,mapCount:fg,mapData:new xg(kv,"mapCount")});var Tv=new kg({majorVersion:fg,minorVersion:fg,itemVariationStore:new Tg(pg,Zm),advanceWidthMapping:new Tg(pg,Rv),LSBMapping:new Tg(pg,Rv),RSBMapping:new Tg(pg,Rv)});let Wv=new kg({format:pg,length:pg,offset:pg}),jv=new kg({reserved:new Lg(fg,2),cbSignature:pg,signature:new Pg("cbSignature")});var Gv=new kg({ulVersion:pg,usNumSigs:fg,usFlag:fg,signatures:new xg(Wv,"usNumSigs"),signatureBlocks:new xg(jv,"usNumSigs")});let Xv=new kg({rangeMaxPPEM:fg,rangeGaspBehavior:new Qg(fg,["grayscale","gridfit","symmetricSmoothing","symmetricGridfit"])});var Ov=new kg({version:fg,numRanges:fg,gaspRanges:new xg(Xv,"numRanges")});let zv=new kg({pixelSize:hg,maximumWidth:hg,widths:new xg(hg,(e=>e.parent.parent.maxp.numGlyphs))});var Yv=new kg({version:fg,numRecords:wg,sizeDeviceRecord:vg,records:new xg(zv,"numRecords")});let Hv=new kg({left:fg,right:fg,value:wg}),Uv=new kg({firstGlyph:fg,nGlyphs:fg,offsets:new xg(fg,"nGlyphs"),max:e=>e.offsets.length&&Math.max.apply(Math,e.offsets)}),Vv=new kg({off:e=>e._startOffset-e.parent.parent._startOffset,len:e=>((e.parent.leftTable.max-e.off)/e.parent.rowWidth+1)*(e.parent.rowWidth/2),values:new Ig(wg,"len")}),qv=new Rg("format",{0:{nPairs:fg,searchRange:fg,entrySelector:fg,rangeShift:fg,pairs:new xg(Hv,"nPairs")},2:{rowWidth:fg,leftTable:new Tg(fg,Uv,{type:"parent"}),rightTable:new Tg(fg,Uv,{type:"parent"}),array:new Tg(fg,Vv,{type:"parent"})},3:{glyphCount:fg,kernValueCount:hg,leftClassCount:hg,rightClassCount:hg,flags:hg,kernValue:new xg(wg,"kernValueCount"),leftClass:new xg(hg,"glyphCount"),rightClass:new xg(hg,"glyphCount"),kernIndex:new xg(hg,(e=>e.leftClassCount*e.rightClassCount))}}),Zv=new Rg("version",{0:{subVersion:fg,length:fg,format:hg,coverage:new Qg(hg,["horizontal","minimum","crossStream","override"]),subtable:qv,padding:new Lg(hg,(e=>e.length-e._currentOffset))},1:{length:pg,coverage:new Qg(hg,[null,null,null,null,null,"variation","crossStream","vertical"]),format:hg,tupleIndex:fg,subtable:qv,padding:new Lg(hg,(e=>e.length-e._currentOffset))}});var Kv=new Rg(fg,{0:{nTables:fg,tables:new xg(Zv,"nTables")},1:{reserved:new Lg(fg),nTables:pg,tables:new xg(Zv,"nTables")}}),Jv=new kg({version:fg,numGlyphs:fg,yPels:new xg(hg,"numGlyphs")}),_v=new kg({version:fg,fontNumber:pg,pitch:fg,xHeight:fg,style:fg,typeFamily:fg,capHeight:fg,symbolSet:fg,typeface:new Mg(16),characterComplement:new Mg(8),fileName:new Mg(6),strokeWeight:new Mg(1),widthType:new Mg(1),serifStyle:hg,reserved:new Lg(hg)});let $v=new kg({bCharSet:hg,xRatio:hg,yStartRatio:hg,yEndRatio:hg}),eb=new kg({yPelHeight:fg,yMax:wg,yMin:wg}),tb=new kg({recs:fg,startsz:hg,endsz:hg,entries:new xg(eb,"recs")});var rb=new kg({version:fg,numRecs:fg,numRatios:fg,ratioRanges:new xg($v,"numRatios"),offsets:new xg(fg,"numRatios"),groups:new xg(tb,"numRecs")}),nb=new kg({version:fg,ascent:wg,descent:wg,lineGap:wg,advanceHeightMax:wg,minTopSideBearing:wg,minBottomSideBearing:wg,yMaxExtent:wg,caretSlopeRise:wg,caretSlopeRun:wg,caretOffset:wg,reserved:new Lg(wg,4),metricDataFormat:wg,numberOfMetrics:fg});let sb=new kg({advance:fg,bearing:wg});var ib=new kg({metrics:new Ig(sb,(e=>e.parent.vhea.numberOfMetrics)),bearings:new Ig(wg,(e=>e.parent.maxp.numGlyphs-e.parent.vhea.numberOfMetrics))});let ob=new bg(16,"BE",14),Ab=new kg({fromCoord:ob,toCoord:ob}),ab=new kg({pairCount:fg,correspondence:new xg(Ab,"pairCount")});var lb=new kg({version:Bg,axisCount:pg,segment:new xg(ab,"axisCount")});class cb{getItem(e){if(null==this._items[e]){let t=this.stream.pos;this.stream.pos=this.base+this.type.size(null,this.parent)*e,this._items[e]=this.type.decode(this.stream,this.parent),this.stream.pos=t}return this._items[e]}inspect(){return`[UnboundedArray ${this.type.constructor.name}]`}constructor(e,t,r){this.type=e,this.stream=t,this.parent=r,this.base=this.stream.pos,this._items=[]}}class ub extends xg{decode(e,t){return new cb(this.type,e,t)}constructor(e){super(e,0)}}let db=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:fg;e=new class{decode(e,t){return t=t.parent.parent,this.type.decode(e,t)}size(e,t){return t=t.parent.parent,this.type.size(e,t)}encode(e,t,r){return r=r.parent.parent,this.type.encode(e,t,r)}constructor(e){this.type=e}}(e);let t=new kg({unitSize:fg,nUnits:fg,searchRange:fg,entrySelector:fg,rangeShift:fg}),r=new kg({lastGlyph:fg,firstGlyph:fg,value:e}),n=new kg({lastGlyph:fg,firstGlyph:fg,values:new Tg(fg,new xg(e,(e=>e.lastGlyph-e.firstGlyph+1)),{type:"parent"})}),s=new kg({glyph:fg,value:e});return new Rg(fg,{0:{values:new ub(e)},2:{binarySearchHeader:t,segments:new xg(r,(e=>e.binarySearchHeader.nUnits))},4:{binarySearchHeader:t,segments:new xg(n,(e=>e.binarySearchHeader.nUnits))},6:{binarySearchHeader:t,segments:new xg(s,(e=>e.binarySearchHeader.nUnits))},8:{firstGlyph:fg,count:fg,values:new xg(e,"count")}})};function hb(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:fg,r=Object.assign({newState:fg,flags:fg},e),n=new kg(r),s=new ub(new xg(fg,(e=>e.nClasses)));return new kg({nClasses:pg,classTable:new Tg(pg,new db(t)),stateArray:new Tg(pg,s),entryTable:new Tg(pg,new ub(n))})}let fb=new Rg("format",{0:{deltas:new xg(wg,32)},1:{deltas:new xg(wg,32),mappingData:new db(fg)},2:{standardGlyph:fg,controlPoints:new xg(fg,32)},3:{standardGlyph:fg,controlPoints:new xg(fg,32),mappingData:new db(fg)}});var gb=new kg({version:Bg,format:fg,defaultBaseline:fg,subtable:fb});let pb=new kg({setting:fg,nameIndex:wg,name:e=>e.parent.parent.parent.name.records.fontFeatures[e.nameIndex]}),mb=new kg({feature:fg,nSettings:fg,settingTable:new Tg(pg,new xg(pb,"nSettings"),{type:"parent"}),featureFlags:new Qg(hg,[null,null,null,null,null,null,"hasDefault","exclusive"]),defaultSetting:hg,nameIndex:wg,name:e=>e.parent.parent.name.records.fontFeatures[e.nameIndex]});var wb=new kg({version:Bg,featureNameCount:fg,reserved1:new Lg(fg),reserved2:new Lg(pg),featureNames:new xg(mb,"featureNameCount")});let vb=new kg({axisTag:new Mg(4),minValue:Bg,defaultValue:Bg,maxValue:Bg,flags:fg,nameID:fg,name:e=>e.parent.parent.name.records.fontFeatures[e.nameID]}),bb=new kg({nameID:fg,name:e=>e.parent.parent.name.records.fontFeatures[e.nameID],flags:fg,coord:new xg(Bg,(e=>e.parent.axisCount)),postscriptNameID:new Fg(fg,(e=>e.parent.instanceSize-e._currentOffset>0))});var yb=new kg({version:Bg,offsetToData:fg,countSizePairs:fg,axisCount:fg,axisSize:fg,instanceCount:fg,instanceSize:fg,axis:new xg(vb,"axisCount"),instance:new xg(bb,"instanceCount")});let Bb=new bg(16,"BE",14);let Eb=new kg({version:fg,reserved:new Lg(fg),axisCount:fg,globalCoordCount:fg,globalCoords:new Tg(pg,new xg(new xg(Bb,"axisCount"),"globalCoordCount")),glyphCount:fg,flags:fg,offsetToData:pg,offsets:new xg(new Tg(class{static decode(e,t){return t.flags?e.readUInt32BE():2*e.readUInt16BE()}},"void",{relativeTo:e=>e.offsetToData,allowNull:!1}),(e=>e.glyphCount+1))});var Cb=Eb;let xb=new kg({length:fg,coverage:fg,subFeatureFlags:pg,stateTable:new function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=new kg({version:()=>8,firstGlyph:fg,values:new xg(hg,fg)}),r=Object.assign({newStateOffset:fg,newState:e=>(e.newStateOffset-(e.parent.stateArray.base-e.parent._startOffset))/e.parent.nClasses,flags:fg},e),n=new kg(r),s=new ub(new xg(hg,(e=>e.nClasses)));return new kg({nClasses:fg,classTable:new Tg(fg,t),stateArray:new Tg(fg,s),entryTable:new Tg(fg,new ub(n))})}}),Ib=new kg({justClass:pg,beforeGrowLimit:Bg,beforeShrinkLimit:Bg,afterGrowLimit:Bg,afterShrinkLimit:Bg,growFlags:fg,shrinkFlags:fg}),Db=new xg(Ib,pg),Qb=new Rg("actionType",{0:{lowerLimit:Bg,upperLimit:Bg,order:fg,glyphs:new xg(fg,fg)},1:{addGlyph:fg},2:{substThreshold:Bg,addGlyph:fg,substGlyph:fg},3:{},4:{variationAxis:pg,minimumLimit:Bg,noStretchValue:Bg,maximumLimit:Bg},5:{flags:fg,glyph:fg}}),Pb=new kg({actionClass:fg,actionType:fg,actionLength:pg,actionData:Qb,padding:new Lg(hg,(e=>e.actionLength-e._currentOffset))}),Fb=new xg(Pb,pg),Lb=new kg({lookupTable:new db(new Tg(fg,Fb))}),Mb=new kg({classTable:new Tg(fg,xb,{type:"parent"}),wdcOffset:fg,postCompensationTable:new Tg(fg,Lb,{type:"parent"}),widthDeltaClusters:new db(new Tg(fg,Db,{type:"parent",relativeTo:e=>e.wdcOffset}))});var Sb=new kg({version:pg,format:fg,horizontal:new Tg(fg,Mb),vertical:new Tg(fg,Mb)});let Nb={action:fg},kb={markIndex:fg,currentIndex:fg},Rb={currentInsertIndex:fg,markedInsertIndex:fg},Tb=new kg({items:new ub(new Tg(pg,new db))}),Wb=new Rg("type",{0:{stateTable:new hb},1:{stateTable:new hb(kb),substitutionTable:new Tg(pg,Tb)},2:{stateTable:new hb(Nb),ligatureActions:new Tg(pg,new ub(pg)),components:new Tg(pg,new ub(fg)),ligatureList:new Tg(pg,new ub(fg))},4:{lookupTable:new db},5:{stateTable:new hb(Rb),insertionActions:new Tg(pg,new ub(fg))}}),jb=new kg({length:pg,coverage:gg,type:hg,subFeatureFlags:pg,table:Wb,padding:new Lg(hg,(e=>e.length-e._currentOffset))}),Gb=new kg({featureType:fg,featureSetting:fg,enableFlags:pg,disableFlags:pg}),Xb=new kg({defaultFlags:pg,chainLength:pg,nFeatureEntries:pg,nSubtables:pg,features:new xg(Gb,"nFeatureEntries"),subtables:new xg(jb,"nSubtables")});var Ob=new kg({version:fg,unused:new Lg(fg),nChains:pg,chains:new xg(Xb,"nChains")});let zb=new kg({left:wg,top:wg,right:wg,bottom:wg});var Yb=new kg({version:Bg,format:fg,lookupTable:new db(zb)});let Hb={};var Ub=Hb;Hb.cmap=Sp,Hb.head=Np,Hb.hhea=kp,Hb.hmtx=Tp,Hb.maxp=Wp,Hb.name=Kp,Hb["OS/2"]=em,Hb.post=tm,Hb.fpgm=nm,Hb.loca=im,Hb.prep=om,Hb["cvt "]=rm,Hb.glyf=Am,Hb["CFF "]=bw,Hb.CFF2=bw,Hb.VORG=Bw,Hb.EBLC=Sw,Hb.CBLC=Hb.EBLC,Hb.sbix=kw,Hb.COLR=Ww,Hb.CPAL=Gw,Hb.BASE=Jw,Hb.GDEF=sv,Hb.GPOS=yv,Hb.GSUB=Dv,Hb.JSTF=Nv,Hb.HVAR=Tv,Hb.DSIG=Gv,Hb.gasp=Ov,Hb.hdmx=Yv,Hb.kern=Kv,Hb.LTSH=Jv,Hb.PCLT=_v,Hb.VDMX=rb,Hb.vhea=nb,Hb.vmtx=ib,Hb.avar=lb,Hb.bsln=gb,Hb.feat=wb,Hb.fvar=yb,Hb.gvar=Cb,Hb.just=Sb,Hb.morx=Ob,Hb.opbd=Yb;let Vb=new kg({tag:new Mg(4),checkSum:pg,offset:new Tg(pg,"void",{type:"global"}),length:pg}),qb=new kg({tag:new Mg(4),numTables:fg,searchRange:fg,entrySelector:fg,rangeShift:fg,tables:new xg(Vb,"numTables")});qb.process=function(){let e={};for(let t of this.tables)e[t.tag]=t;this.tables=e},qb.preEncode=function(){if(!Array.isArray(this.tables)){let e=[];for(let t in this.tables){let r=this.tables[t];r&&e.push({tag:t,checkSum:0,offset:new Wg(Ub[t],r),length:Ub[t].size(r)})}this.tables=e}this.tag="true",this.numTables=this.tables.length;let e=Math.floor(Math.log(this.numTables)/Math.LN2),t=Math.pow(2,e);this.searchRange=16*t,this.entrySelector=Math.log(t)/Math.LN2,this.rangeShift=16*this.numTables-this.searchRange};var Zb=qb;function Kb(e,t){let r=0,n=e.length-1;for(;r<=n;){let s=r+n>>1,i=t(e[s]);if(i<0)n=s-1;else{if(!(i>0))return s;r=s+1}}return-1}function Jb(e,t){let r=[];for(;e<t;)r.push(e++);return r}const _b=new TextDecoder("ascii"),$b="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",ey=new Uint8Array(256);for(let r=0;r<64;r++)ey[$b.charCodeAt(r)]=r;function ty(e){let t=.75*e.length;"="===e[e.length-1]&&(t--,"="===e[e.length-2]&&t--);let r=new Uint8Array(t),n=0;for(let s=0,i=e.length;s<i;s+=4){let t=ey[e.charCodeAt(s)],i=ey[e.charCodeAt(s+1)],o=ey[e.charCodeAt(s+2)],A=ey[e.charCodeAt(s+3)];r[n++]=t<<2|i>>4,r[n++]=(15&i)<<4|o>>2,r[n++]=(3&o)<<6|63&A}return r}class ry{findSubtable(e,t){for(let[r,n]of t)for(let t of e.tables)if(t.platformID===r&&t.encodingID===n)return t.table;return null}lookup(e,t){if(this.encoding)e=this.encoding.get(e)||e;else if(t){let r=this.getVariationSelector(e,t);if(r)return r}let r=this.cmap;switch(r.version){case 0:return r.codeMap.get(e)||0;case 4:{let t=0,n=r.segCount-1;for(;t<=n;){let s=t+n>>1;if(e<r.startCode.get(s))n=s-1;else{if(!(e>r.endCode.get(s))){let t,n=r.idRangeOffset.get(s);if(0===n)t=e+r.idDelta.get(s);else{let i=n/2+(e-r.startCode.get(s))-(r.segCount-s);t=r.glyphIndexArray.get(i)||0,0!==t&&(t+=r.idDelta.get(s))}return 65535&t}t=s+1}}return 0}case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return r.glyphIndices.get(e-r.firstCode)||0;case 12:case 13:{let t=0,n=r.nGroups-1;for(;t<=n;){let s=t+n>>1,i=r.groups.get(s);if(e<i.startCharCode)n=s-1;else{if(!(e>i.endCharCode))return 12===r.version?i.glyphID+(e-i.startCharCode):i.glyphID;t=s+1}}return 0}case 14:throw new Error("TODO: cmap format 14");default:throw new Error(`Unknown cmap format ${r.version}`)}}getVariationSelector(e,t){if(!this.uvs)return 0;let r=this.uvs.varSelectors.toArray(),n=Kb(r,(e=>t-e.varSelector)),s=r[n];return-1!==n&&s.defaultUVS&&(n=Kb(s.defaultUVS,(t=>e<t.startUnicodeValue?-1:e>t.startUnicodeValue+t.additionalCount?1:0))),-1!==n&&s.nonDefaultUVS&&(n=Kb(s.nonDefaultUVS,(t=>e-t.unicodeValue)),-1!==n)?s.nonDefaultUVS[n].glyphID:0}getCharacterSet(){let e=this.cmap;switch(e.version){case 0:return Jb(0,e.codeMap.length);case 4:{let t=[],r=e.endCode.toArray();for(let n=0;n<r.length;n++){let s=r[n]+1,i=e.startCode.get(n);t.push(...Jb(i,s))}return t}case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return Jb(e.firstCode,e.firstCode+e.glyphIndices.length);case 12:case 13:{let t=[];for(let r of e.groups.toArray())t.push(...Jb(r.startCharCode,r.endCharCode+1));return t}case 14:throw new Error("TODO: cmap format 14");default:throw new Error(`Unknown cmap format ${e.version}`)}}codePointsForGlyph(e){let t=this.cmap;switch(t.version){case 0:{let r=[];for(let n=0;n<256;n++)t.codeMap.get(n)===e&&r.push(n);return r}case 4:{let n=[];for(let s=0;s<t.segCount;s++){let i=t.endCode.get(s),o=t.startCode.get(s),A=t.idRangeOffset.get(s),a=t.idDelta.get(s);for(var r=o;r<=i;r++){let i=0;if(0===A)i=r+a;else{let e=A/2+(r-o)-(t.segCount-s);i=t.glyphIndexArray.get(e)||0,0!==i&&(i+=a)}i===e&&n.push(r)}}return n}case 12:{let r=[];for(let n of t.groups.toArray())e>=n.glyphID&&e<=n.glyphID+(n.endCharCode-n.startCharCode)&&r.push(n.startCharCode+(e-n.glyphID));return r}case 13:{let r=[];for(let n of t.groups.toArray())e===n.glyphID&&r.push(...Jb(n.startCharCode,n.endCharCode+1));return r}default:throw new Error(`Unknown cmap format ${t.version}`)}}constructor(e){if(this.encoding=null,this.cmap=this.findSubtable(e,[[3,10],[0,6],[0,4],[3,1],[0,3],[0,2],[0,1],[0,0]]),!this.cmap)for(let t of e.tables){let e=zp(jp(t.platformID,t.encodingID,t.table.language-1));e&&(this.cmap=t.table,this.encoding=e)}if(!this.cmap)throw new Error("Could not find a supported cmap table");this.uvs=this.findSubtable(e,[[0,5]]),this.uvs&&14!==this.uvs.version&&(this.uvs=null)}}Gg([Ep],ry.prototype,"getCharacterSet",null),Gg([Ep],ry.prototype,"codePointsForGlyph",null);class ny{process(e,t){for(let r=0;r<e.length-1;r++){let n=e[r].id,s=e[r+1].id;t[r].xAdvance+=this.getKerning(n,s)}}getKerning(e,t){let r=0;for(let n of this.kern.tables){if(n.coverage.crossStream)continue;switch(n.version){case 0:if(!n.coverage.horizontal)continue;break;case 1:if(n.coverage.vertical||n.coverage.variation)continue;break;default:throw new Error(`Unsupported kerning table version ${n.version}`)}let s=0,i=n.subtable;switch(n.format){case 0:let r=Kb(i.pairs,(function(r){return e-r.left||t-r.right}));r>=0&&(s=i.pairs[r].value);break;case 2:let o=0,A=0;o=e>=i.leftTable.firstGlyph&&e<i.leftTable.firstGlyph+i.leftTable.nGlyphs?i.leftTable.offsets[e-i.leftTable.firstGlyph]:i.array.off,t>=i.rightTable.firstGlyph&&t<i.rightTable.firstGlyph+i.rightTable.nGlyphs&&(A=i.rightTable.offsets[t-i.rightTable.firstGlyph]);let a=(o+A-i.array.off)/2;s=i.array.values.get(a);break;case 3:if(e>=i.glyphCount||t>=i.glyphCount)return 0;s=i.kernValue[i.kernIndex[i.leftClass[e]*i.rightClassCount+i.rightClass[t]]];break;default:throw new Error(`Unsupported kerning sub-table format ${n.format}`)}n.coverage.override?r=s:r+=s}return r}constructor(e){this.kern=e.kern}}class sy{positionGlyphs(e,t){let r=0,n=0;for(let s=0;s<e.length;s++){e[s].isMark?n=s:(r!==n&&this.positionCluster(e,t,r,n),r=n=s)}return r!==n&&this.positionCluster(e,t,r,n),t}positionCluster(e,t,r,n){let s=e[r],i=s.cbox.copy();s.codePoints.length>1&&(i.minX+=(s.codePoints.length-1)*i.width/s.codePoints.length);let o=-t[r].xAdvance,A=0,a=this.font.unitsPerEm/16;for(let l=r+1;l<=n;l++){let r=e[l],n=r.cbox,s=t[l],c=this.getCombiningClass(r.codePoints[0]);if("Not_Reordered"!==c){switch(s.xOffset=s.yOffset=0,c){case"Double_Above":case"Double_Below":s.xOffset+=i.minX-n.width/2-n.minX;break;case"Attached_Below_Left":case"Below_Left":case"Above_Left":s.xOffset+=i.minX-n.minX;break;case"Attached_Above_Right":case"Below_Right":case"Above_Right":s.xOffset+=i.maxX-n.width-n.minX;break;default:s.xOffset+=i.minX+(i.width-n.width)/2-n.minX}switch(c){case"Double_Below":case"Below_Left":case"Below":case"Below_Right":case"Attached_Below_Left":case"Attached_Below":"Attached_Below_Left"!==c&&"Attached_Below"!==c||(i.minY+=a),s.yOffset=-i.minY-n.maxY,i.minY+=n.height;break;case"Double_Above":case"Above_Left":case"Above":case"Above_Right":case"Attached_Above":case"Attached_Above_Right":"Attached_Above"!==c&&"Attached_Above_Right"!==c||(i.maxY+=a),s.yOffset=i.maxY-n.minY,i.maxY+=n.height}s.xAdvance=s.yAdvance=0,s.xOffset+=o,s.yOffset+=A}else o-=s.xAdvance,A-=s.yAdvance}}getCombiningClass(e){let t=op(e);if(3584===(-256&e))if("Not_Reordered"===t)switch(e){case 3633:case 3636:case 3637:case 3638:case 3639:case 3655:case 3660:case 3645:case 3662:return"Above_Right";case 3761:case 3764:case 3765:case 3766:case 3767:case 3771:case 3788:case 3789:return"Above";case 3772:return"Below"}else if(3642===e)return"Below_Right";switch(t){case"CCC10":case"CCC11":case"CCC12":case"CCC13":case"CCC14":case"CCC15":case"CCC16":case"CCC17":case"CCC18":case"CCC20":case"CCC22":case"CCC29":case"CCC32":case"CCC118":case"CCC129":case"CCC132":return"Below";case"CCC23":return"Attached_Above";case"CCC24":case"CCC107":return"Above_Right";case"CCC25":case"CCC19":return"Above_Left";case"CCC26":case"CCC27":case"CCC28":case"CCC30":case"CCC31":case"CCC33":case"CCC34":case"CCC35":case"CCC36":case"CCC122":case"CCC130":return"Above";case"CCC21":break;case"CCC103":return"Below_Right"}return t}constructor(e){this.font=e}}class iy{get width(){return this.maxX-this.minX}get height(){return this.maxY-this.minY}addPoint(e,t){Math.abs(e)!==1/0&&(e<this.minX&&(this.minX=e),e>this.maxX&&(this.maxX=e)),Math.abs(t)!==1/0&&(t<this.minY&&(this.minY=t),t>this.maxY&&(this.maxY=t))}copy(){return new iy(this.minX,this.minY,this.maxX,this.maxY)}constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1/0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1/0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1/0;this.minX=e,this.minY=t,this.maxX=r,this.maxY=n}}const oy={Caucasian_Albanian:"aghb",Arabic:"arab",Imperial_Aramaic:"armi",Armenian:"armn",Avestan:"avst",Balinese:"bali",Bamum:"bamu",Bassa_Vah:"bass",Batak:"batk",Bengali:["bng2","beng"],Bopomofo:"bopo",Brahmi:"brah",Braille:"brai",Buginese:"bugi",Buhid:"buhd",Chakma:"cakm",Canadian_Aboriginal:"cans",Carian:"cari",Cham:"cham",Cherokee:"cher",Coptic:"copt",Cypriot:"cprt",Cyrillic:"cyrl",Devanagari:["dev2","deva"],Deseret:"dsrt",Duployan:"dupl",Egyptian_Hieroglyphs:"egyp",Elbasan:"elba",Ethiopic:"ethi",Georgian:"geor",Glagolitic:"glag",Gothic:"goth",Grantha:"gran",Greek:"grek",Gujarati:["gjr2","gujr"],Gurmukhi:["gur2","guru"],Hangul:"hang",Han:"hani",Hanunoo:"hano",Hebrew:"hebr",Hiragana:"hira",Pahawh_Hmong:"hmng",Katakana_Or_Hiragana:"hrkt",Old_Italic:"ital",Javanese:"java",Kayah_Li:"kali",Katakana:"kana",Kharoshthi:"khar",Khmer:"khmr",Khojki:"khoj",Kannada:["knd2","knda"],Kaithi:"kthi",Tai_Tham:"lana",Lao:"lao ",Latin:"latn",Lepcha:"lepc",Limbu:"limb",Linear_A:"lina",Linear_B:"linb",Lisu:"lisu",Lycian:"lyci",Lydian:"lydi",Mahajani:"mahj",Mandaic:"mand",Manichaean:"mani",Mende_Kikakui:"mend",Meroitic_Cursive:"merc",Meroitic_Hieroglyphs:"mero",Malayalam:["mlm2","mlym"],Modi:"modi",Mongolian:"mong",Mro:"mroo",Meetei_Mayek:"mtei",Myanmar:["mym2","mymr"],Old_North_Arabian:"narb",Nabataean:"nbat",Nko:"nko ",Ogham:"ogam",Ol_Chiki:"olck",Old_Turkic:"orkh",Oriya:["ory2","orya"],Osmanya:"osma",Palmyrene:"palm",Pau_Cin_Hau:"pauc",Old_Permic:"perm",Phags_Pa:"phag",Inscriptional_Pahlavi:"phli",Psalter_Pahlavi:"phlp",Phoenician:"phnx",Miao:"plrd",Inscriptional_Parthian:"prti",Rejang:"rjng",Runic:"runr",Samaritan:"samr",Old_South_Arabian:"sarb",Saurashtra:"saur",Shavian:"shaw",Sharada:"shrd",Siddham:"sidd",Khudawadi:"sind",Sinhala:"sinh",Sora_Sompeng:"sora",Sundanese:"sund",Syloti_Nagri:"sylo",Syriac:"syrc",Tagbanwa:"tagb",Takri:"takr",Tai_Le:"tale",New_Tai_Lue:"talu",Tamil:["tml2","taml"],Tai_Viet:"tavt",Telugu:["tel2","telu"],Tifinagh:"tfng",Tagalog:"tglg",Thaana:"thaa",Thai:"thai",Tibetan:"tibt",Tirhuta:"tirh",Ugaritic:"ugar",Vai:"vai ",Warang_Citi:"wara",Old_Persian:"xpeo",Cuneiform:"xsux",Yi:"yi  ",Inherited:"zinh",Common:"zyyy",Unknown:"zzzz"},Ay={};for(let r in oy){let e=oy[r];if(Array.isArray(e))for(let t of e)Ay[t]=r;else Ay[e]=r}const ay={arab:!0,hebr:!0,syrc:!0,thaa:!0,cprt:!0,khar:!0,phnx:!0,"nko ":!0,lydi:!0,avst:!0,armi:!0,phli:!0,prti:!0,sarb:!0,orkh:!0,samr:!0,mand:!0,merc:!0,mero:!0,mani:!0,mend:!0,nbat:!0,narb:!0,palm:!0,phlp:!0};function ly(e){return ay[e]?"rtl":"ltr"}class cy{get advanceWidth(){let e=0;for(let t of this.positions)e+=t.xAdvance;return e}get advanceHeight(){let e=0;for(let t of this.positions)e+=t.yAdvance;return e}get bbox(){let e=new iy,t=0,r=0;for(let n=0;n<this.glyphs.length;n++){let s=this.glyphs[n],i=this.positions[n],o=s.bbox;e.addPoint(o.minX+t+i.xOffset,o.minY+r+i.yOffset),e.addPoint(o.maxX+t+i.xOffset,o.maxY+r+i.yOffset),t+=i.xAdvance,r+=i.yAdvance}return e}constructor(e,t,r,n,s){if(this.glyphs=e,this.positions=null,this.script=r,this.language=n||null,this.direction=s||ly(r),this.features={},Array.isArray(t))for(let i of t)this.features[i]=!0;else"object"===typeof t&&(this.features=t)}}class uy{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.xAdvance=e,this.yAdvance=t,this.xOffset=r,this.yOffset=n}}const dy={allTypographicFeatures:{code:0,exclusive:!1,allTypeFeatures:0},ligatures:{code:1,exclusive:!1,requiredLigatures:0,commonLigatures:2,rareLigatures:4,rebusPictures:8,diphthongLigatures:10,squaredLigatures:12,abbrevSquaredLigatures:14,symbolLigatures:16,contextualLigatures:18,historicalLigatures:20},cursiveConnection:{code:2,exclusive:!0,unconnected:0,partiallyConnected:1,cursive:2},letterCase:{code:3,exclusive:!0},verticalSubstitution:{code:4,exclusive:!1,substituteVerticalForms:0},linguisticRearrangement:{code:5,exclusive:!1,linguisticRearrangement:0},numberSpacing:{code:6,exclusive:!0,monospacedNumbers:0,proportionalNumbers:1,thirdWidthNumbers:2,quarterWidthNumbers:3},smartSwash:{code:8,exclusive:!1,wordInitialSwashes:0,wordFinalSwashes:2,nonFinalSwashes:8},diacritics:{code:9,exclusive:!0,showDiacritics:0,hideDiacritics:1,decomposeDiacritics:2},verticalPosition:{code:10,exclusive:!0,normalPosition:0,superiors:1,inferiors:2,ordinals:3,scientificInferiors:4},fractions:{code:11,exclusive:!0,noFractions:0,verticalFractions:1,diagonalFractions:2},overlappingCharacters:{code:13,exclusive:!1,preventOverlap:0},typographicExtras:{code:14,exclusive:!1,slashedZero:4},mathematicalExtras:{code:15,exclusive:!1,mathematicalGreek:10},ornamentSets:{code:16,exclusive:!0,noOrnaments:0,dingbats:1,piCharacters:2,fleurons:3,decorativeBorders:4,internationalSymbols:5,mathSymbols:6},characterAlternatives:{code:17,exclusive:!0,noAlternates:0},designComplexity:{code:18,exclusive:!0,designLevel1:0,designLevel2:1,designLevel3:2,designLevel4:3,designLevel5:4},styleOptions:{code:19,exclusive:!0,noStyleOptions:0,displayText:1,engravedText:2,illuminatedCaps:3,titlingCaps:4,tallCaps:5},characterShape:{code:20,exclusive:!0,traditionalCharacters:0,simplifiedCharacters:1,JIS1978Characters:2,JIS1983Characters:3,JIS1990Characters:4,traditionalAltOne:5,traditionalAltTwo:6,traditionalAltThree:7,traditionalAltFour:8,traditionalAltFive:9,expertCharacters:10,JIS2004Characters:11,hojoCharacters:12,NLCCharacters:13,traditionalNamesCharacters:14},numberCase:{code:21,exclusive:!0,lowerCaseNumbers:0,upperCaseNumbers:1},textSpacing:{code:22,exclusive:!0,proportionalText:0,monospacedText:1,halfWidthText:2,thirdWidthText:3,quarterWidthText:4,altProportionalText:5,altHalfWidthText:6},transliteration:{code:23,exclusive:!0,noTransliteration:0},annotation:{code:24,exclusive:!0,noAnnotation:0,boxAnnotation:1,roundedBoxAnnotation:2,circleAnnotation:3,invertedCircleAnnotation:4,parenthesisAnnotation:5,periodAnnotation:6,romanNumeralAnnotation:7,diamondAnnotation:8,invertedBoxAnnotation:9,invertedRoundedBoxAnnotation:10},kanaSpacing:{code:25,exclusive:!0,fullWidthKana:0,proportionalKana:1},ideographicSpacing:{code:26,exclusive:!0,fullWidthIdeographs:0,proportionalIdeographs:1,halfWidthIdeographs:2},unicodeDecomposition:{code:27,exclusive:!1,canonicalComposition:0,compatibilityComposition:2,transcodingComposition:4},rubyKana:{code:28,exclusive:!1,rubyKana:2},CJKSymbolAlternatives:{code:29,exclusive:!0,noCJKSymbolAlternatives:0,CJKSymbolAltOne:1,CJKSymbolAltTwo:2,CJKSymbolAltThree:3,CJKSymbolAltFour:4,CJKSymbolAltFive:5},ideographicAlternatives:{code:30,exclusive:!0,noIdeographicAlternatives:0,ideographicAltOne:1,ideographicAltTwo:2,ideographicAltThree:3,ideographicAltFour:4,ideographicAltFive:5},CJKVerticalRomanPlacement:{code:31,exclusive:!0,CJKVerticalRomanCentered:0,CJKVerticalRomanHBaseline:1},italicCJKRoman:{code:32,exclusive:!1,CJKItalicRoman:2},caseSensitiveLayout:{code:33,exclusive:!1,caseSensitiveLayout:0,caseSensitiveSpacing:2},alternateKana:{code:34,exclusive:!1,alternateHorizKana:0,alternateVertKana:2},stylisticAlternatives:{code:35,exclusive:!1,noStylisticAlternates:0,stylisticAltOne:2,stylisticAltTwo:4,stylisticAltThree:6,stylisticAltFour:8,stylisticAltFive:10,stylisticAltSix:12,stylisticAltSeven:14,stylisticAltEight:16,stylisticAltNine:18,stylisticAltTen:20,stylisticAltEleven:22,stylisticAltTwelve:24,stylisticAltThirteen:26,stylisticAltFourteen:28,stylisticAltFifteen:30,stylisticAltSixteen:32,stylisticAltSeventeen:34,stylisticAltEighteen:36,stylisticAltNineteen:38,stylisticAltTwenty:40},contextualAlternates:{code:36,exclusive:!1,contextualAlternates:0,swashAlternates:2,contextualSwashAlternates:4},lowerCase:{code:37,exclusive:!0,defaultLowerCase:0,lowerCaseSmallCaps:1,lowerCasePetiteCaps:2},upperCase:{code:38,exclusive:!0,defaultUpperCase:0,upperCaseSmallCaps:1,upperCasePetiteCaps:2},languageTag:{code:39,exclusive:!0},CJKRomanSpacing:{code:103,exclusive:!0,halfWidthCJKRoman:0,proportionalCJKRoman:1,defaultCJKRoman:2,fullWidthCJKRoman:3}},hy=(e,t)=>[dy[e].code,dy[e][t]],fy={rlig:hy("ligatures","requiredLigatures"),clig:hy("ligatures","contextualLigatures"),dlig:hy("ligatures","rareLigatures"),hlig:hy("ligatures","historicalLigatures"),liga:hy("ligatures","commonLigatures"),hist:hy("ligatures","historicalLigatures"),smcp:hy("lowerCase","lowerCaseSmallCaps"),pcap:hy("lowerCase","lowerCasePetiteCaps"),frac:hy("fractions","diagonalFractions"),dnom:hy("fractions","diagonalFractions"),numr:hy("fractions","diagonalFractions"),afrc:hy("fractions","verticalFractions"),case:hy("caseSensitiveLayout","caseSensitiveLayout"),ccmp:hy("unicodeDecomposition","canonicalComposition"),cpct:hy("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),valt:hy("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),swsh:hy("contextualAlternates","swashAlternates"),cswh:hy("contextualAlternates","contextualSwashAlternates"),curs:hy("cursiveConnection","cursive"),c2pc:hy("upperCase","upperCasePetiteCaps"),c2sc:hy("upperCase","upperCaseSmallCaps"),init:hy("smartSwash","wordInitialSwashes"),fin2:hy("smartSwash","wordFinalSwashes"),medi:hy("smartSwash","nonFinalSwashes"),med2:hy("smartSwash","nonFinalSwashes"),fin3:hy("smartSwash","wordFinalSwashes"),fina:hy("smartSwash","wordFinalSwashes"),pkna:hy("kanaSpacing","proportionalKana"),half:hy("textSpacing","halfWidthText"),halt:hy("textSpacing","altHalfWidthText"),hkna:hy("alternateKana","alternateHorizKana"),vkna:hy("alternateKana","alternateVertKana"),ital:hy("italicCJKRoman","CJKItalicRoman"),lnum:hy("numberCase","upperCaseNumbers"),onum:hy("numberCase","lowerCaseNumbers"),mgrk:hy("mathematicalExtras","mathematicalGreek"),calt:hy("contextualAlternates","contextualAlternates"),vrt2:hy("verticalSubstitution","substituteVerticalForms"),vert:hy("verticalSubstitution","substituteVerticalForms"),tnum:hy("numberSpacing","monospacedNumbers"),pnum:hy("numberSpacing","proportionalNumbers"),sups:hy("verticalPosition","superiors"),subs:hy("verticalPosition","inferiors"),ordn:hy("verticalPosition","ordinals"),pwid:hy("textSpacing","proportionalText"),hwid:hy("textSpacing","halfWidthText"),qwid:hy("textSpacing","quarterWidthText"),twid:hy("textSpacing","thirdWidthText"),fwid:hy("textSpacing","proportionalText"),palt:hy("textSpacing","altProportionalText"),trad:hy("characterShape","traditionalCharacters"),smpl:hy("characterShape","simplifiedCharacters"),jp78:hy("characterShape","JIS1978Characters"),jp83:hy("characterShape","JIS1983Characters"),jp90:hy("characterShape","JIS1990Characters"),jp04:hy("characterShape","JIS2004Characters"),expt:hy("characterShape","expertCharacters"),hojo:hy("characterShape","hojoCharacters"),nlck:hy("characterShape","NLCCharacters"),tnam:hy("characterShape","traditionalNamesCharacters"),ruby:hy("rubyKana","rubyKana"),titl:hy("styleOptions","titlingCaps"),zero:hy("typographicExtras","slashedZero"),ss01:hy("stylisticAlternatives","stylisticAltOne"),ss02:hy("stylisticAlternatives","stylisticAltTwo"),ss03:hy("stylisticAlternatives","stylisticAltThree"),ss04:hy("stylisticAlternatives","stylisticAltFour"),ss05:hy("stylisticAlternatives","stylisticAltFive"),ss06:hy("stylisticAlternatives","stylisticAltSix"),ss07:hy("stylisticAlternatives","stylisticAltSeven"),ss08:hy("stylisticAlternatives","stylisticAltEight"),ss09:hy("stylisticAlternatives","stylisticAltNine"),ss10:hy("stylisticAlternatives","stylisticAltTen"),ss11:hy("stylisticAlternatives","stylisticAltEleven"),ss12:hy("stylisticAlternatives","stylisticAltTwelve"),ss13:hy("stylisticAlternatives","stylisticAltThirteen"),ss14:hy("stylisticAlternatives","stylisticAltFourteen"),ss15:hy("stylisticAlternatives","stylisticAltFifteen"),ss16:hy("stylisticAlternatives","stylisticAltSixteen"),ss17:hy("stylisticAlternatives","stylisticAltSeventeen"),ss18:hy("stylisticAlternatives","stylisticAltEighteen"),ss19:hy("stylisticAlternatives","stylisticAltNineteen"),ss20:hy("stylisticAlternatives","stylisticAltTwenty")};for(let r=1;r<=99;r++)fy[`cv${`00${r}`.slice(-2)}`]=[dy.characterAlternatives.code,r];let gy={};for(let r in fy){let e=fy[r];null==gy[e[0]]&&(gy[e[0]]={}),gy[e[0]][e[1]]=r}function py(e){let[t,r]=e;if(isNaN(t))var n=dy[t]&&dy[t].code;else n=t;if(isNaN(r))var s=dy[t]&&dy[t][r];else s=r;return[n,s]}class my{lookup(e){switch(this.table.version){case 0:return this.table.values.getItem(e);case 2:case 4:{let n=0,s=this.table.binarySearchHeader.nUnits-1;for(;n<=s;){var t=n+s>>1;if(65535===(r=this.table.segments[t]).firstGlyph)return null;if(e<r.firstGlyph)s=t-1;else{if(!(e>r.lastGlyph))return 2===this.table.version?r.value:r.values[e-r.firstGlyph];n=t+1}}return null}case 6:{let n=0,s=this.table.binarySearchHeader.nUnits-1;for(;n<=s;){var r;t=n+s>>1;if(65535===(r=this.table.segments[t]).glyph)return null;if(e<r.glyph)s=t-1;else{if(!(e>r.glyph))return r.value;n=t+1}}return null}case 8:return this.table.values[e-this.table.firstGlyph];default:throw new Error(`Unknown lookup table format: ${this.table.version}`)}}glyphsForValue(e){let t=[];switch(this.table.version){case 2:case 4:for(let r of this.table.segments)if(2===this.table.version&&r.value===e)t.push(...Jb(r.firstGlyph,r.lastGlyph+1));else for(let n=0;n<r.values.length;n++)r.values[n]===e&&t.push(r.firstGlyph+n);break;case 6:for(let r of this.table.segments)r.value===e&&t.push(r.glyph);break;case 8:for(let r=0;r<this.table.values.length;r++)this.table.values[r]===e&&t.push(this.table.firstGlyph+r);break;default:throw new Error(`Unknown lookup table format: ${this.table.version}`)}return t}constructor(e){this.table=e}}Gg([Ep],my.prototype,"glyphsForValue",null);class wy{process(e,t,r){let n=0,s=t?e.length-1:0,i=t?-1:1;for(;1===i&&s<=e.length||-1===i&&s>=-1;){let t=null,o=1,A=!0;s===e.length||-1===s?o=0:(t=e[s],65535===t.id?o=2:(o=this.lookupTable.lookup(t.id),null==o&&(o=1)));let a=this.stateTable.stateArray.getItem(n)[o],l=this.stateTable.entryTable.getItem(a);0!==o&&2!==o&&(r(t,l,s),A=!(16384&l.flags)),n=l.newState,A&&(s+=i)}return e}traverse(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;if(r.has(t))return;r.add(t);let{nClasses:n,stateArray:s,entryTable:i}=this.stateTable,o=s.getItem(t);for(let A=4;A<n;A++){let t=o[A],n=i.getItem(t);for(let s of this.lookupTable.glyphsForValue(A))e.enter&&e.enter(s,n),0!==n.newState&&this.traverse(e,n.newState,r),e.exit&&e.exit(s,n)}}constructor(e){this.stateTable=e,this.lookupTable=new my(e.classTable)}}const vy=4194304;class by{process(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(let n of this.morx.chains){let r=n.defaultFlags;for(let e of n.features){let n;(n=t[e.featureType])&&(n[e.featureSetting]?(r&=e.disableFlags,r|=e.enableFlags):!1===n[e.featureSetting]&&(r|=~e.disableFlags,r&=~e.enableFlags))}for(let t of n.subtables)t.subFeatureFlags&r&&this.processSubtable(t,e)}let r=e.length-1;for(;r>=0;)65535===e[r].id&&e.splice(r,1),r--;return e}processSubtable(e,t){if(this.subtable=e,this.glyphs=t,4===this.subtable.type)return void this.processNoncontextualSubstitutions(this.subtable,this.glyphs);this.ligatureStack=[],this.markedGlyph=null,this.firstGlyph=null,this.lastGlyph=null,this.markedIndex=null;let r=this.getStateMachine(e),n=this.getProcessor(),s=!!(this.subtable.coverage&vy);return r.process(this.glyphs,s,n)}getStateMachine(e){return new wy(e.table.stateTable)}getProcessor(){switch(this.subtable.type){case 0:return this.processIndicRearragement;case 1:return this.processContextualSubstitution;case 2:return this.processLigature;case 4:return this.processNoncontextualSubstitutions;case 5:return this.processGlyphInsertion;default:throw new Error(`Invalid morx subtable type: ${this.subtable.type}`)}}processIndicRearragement(e,t,r){32768&t.flags&&(this.firstGlyph=r),8192&t.flags&&(this.lastGlyph=r),function(e,t,r,n){switch(t){case 0:return e;case 1:return yy(e,[r,1],[n,0]);case 2:return yy(e,[r,0],[n,1]);case 3:return yy(e,[r,1],[n,1]);case 4:return yy(e,[r,2],[n,0]);case 5:return yy(e,[r,2],[n,0],!0,!1);case 6:return yy(e,[r,0],[n,2]);case 7:return yy(e,[r,0],[n,2],!1,!0);case 8:return yy(e,[r,1],[n,2]);case 9:return yy(e,[r,1],[n,2],!1,!0);case 10:return yy(e,[r,2],[n,1]);case 11:return yy(e,[r,2],[n,1],!0,!1);case 12:return yy(e,[r,2],[n,2]);case 13:return yy(e,[r,2],[n,2],!0,!1);case 14:return yy(e,[r,2],[n,2],!1,!0);case 15:return yy(e,[r,2],[n,2],!0,!0);default:throw new Error(`Unknown verb: ${t}`)}}(this.glyphs,15&t.flags,this.firstGlyph,this.lastGlyph)}processContextualSubstitution(e,t,r){let n=this.subtable.table.substitutionTable.items;if(65535!==t.markIndex){let r=n.getItem(t.markIndex),i=new my(r);e=this.glyphs[this.markedGlyph],(s=i.lookup(e.id))&&(this.glyphs[this.markedGlyph]=this.font.getGlyph(s,e.codePoints))}if(65535!==t.currentIndex){let i=n.getItem(t.currentIndex),o=new my(i);var s;e=this.glyphs[r],(s=o.lookup(e.id))&&(this.glyphs[r]=this.font.getGlyph(s,e.codePoints))}32768&t.flags&&(this.markedGlyph=r)}processLigature(e,t,r){if(32768&t.flags&&this.ligatureStack.push(r),8192&t.flags){let e=this.subtable.table.ligatureActions,r=this.subtable.table.components,n=this.subtable.table.ligatureList,s=t.action,i=!1,o=0,A=[],a=[];for(;!i;){let t=this.ligatureStack.pop();A.unshift(...this.glyphs[t].codePoints);let l=e.getItem(s++);i=!!(2147483648&l);let c=!!(1073741824&l),u=(1073741823&l)<<2>>2;if(u+=this.glyphs[t].id,o+=r.getItem(u),i||c){let e=n.getItem(o);this.glyphs[t]=this.font.getGlyph(e,A),a.push(t),o=0,A=[]}else this.glyphs[t]=this.font.getGlyph(65535)}this.ligatureStack.push(...a)}}processNoncontextualSubstitutions(e,t,r){let n=new my(e.table.lookupTable);for(r=0;r<t.length;r++){let e=t[r];if(65535!==e.id){let s=n.lookup(e.id);s&&(t[r]=this.font.getGlyph(s,e.codePoints))}}}_insertGlyphs(e,t,r,n){let s=[];for(;r--;){let e=this.subtable.table.insertionActions.getItem(t++);s.push(this.font.getGlyph(e))}n||e++,this.glyphs.splice(e,0,...s)}processGlyphInsertion(e,t,r){if(32768&t.flags&&(this.markedIndex=r),65535!==t.markedInsertIndex){let e=(31&t.flags)>>>5,r=!!(1024&t.flags);this._insertGlyphs(this.markedIndex,t.markedInsertIndex,e,r)}if(65535!==t.currentInsertIndex){let e=(992&t.flags)>>>5,n=!!(2048&t.flags);this._insertGlyphs(r,t.currentInsertIndex,e,n)}}getSupportedFeatures(){let e=[];for(let t of this.morx.chains)for(let r of t.features)e.push([r.featureType,r.featureSetting]);return e}generateInputs(e){return this.inputCache||this.generateInputCache(),this.inputCache[e]||[]}generateInputCache(){this.inputCache={};for(let e of this.morx.chains){let t=e.defaultFlags;for(let r of e.subtables)r.subFeatureFlags&t&&this.generateInputsForSubtable(r)}}generateInputsForSubtable(e){if(2!==e.type)return;if(!!(e.coverage&vy))throw new Error("Reverse subtable, not supported.");this.subtable=e,this.ligatureStack=[];let t=this.getStateMachine(e),r=this.getProcessor(),n=[],s=[];this.glyphs=[],t.traverse({enter:(e,t)=>{let i=this.glyphs;s.push({glyphs:i.slice(),ligatureStack:this.ligatureStack.slice()});let o=this.font.getGlyph(e);n.push(o),i.push(n[n.length-1]),r(i[i.length-1],t,i.length-1);let A=0,a=0;for(let r=0;r<i.length&&A<=1;r++)65535!==i[r].id&&(A++,a=i[r].id);if(1===A){let e=n.map((e=>e.id)),t=this.inputCache[a];t?t.push(e):this.inputCache[a]=[e]}},exit:()=>{({glyphs:this.glyphs,ligatureStack:this.ligatureStack}=s.pop()),n.pop()}})}constructor(e){this.processIndicRearragement=this.processIndicRearragement.bind(this),this.processContextualSubstitution=this.processContextualSubstitution.bind(this),this.processLigature=this.processLigature.bind(this),this.processNoncontextualSubstitutions=this.processNoncontextualSubstitutions.bind(this),this.processGlyphInsertion=this.processGlyphInsertion.bind(this),this.font=e,this.morx=e.morx,this.inputCache=null}}function yy(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3],s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=e.splice(r[0]-(r[1]-1),r[1]);s&&i.reverse();let o=e.splice(t[0],t[1],...i);return n&&o.reverse(),e.splice(r[0]-(t[1]-1),0,...o),e}Gg([Ep],by.prototype,"getStateMachine",null);class By{substitute(e){"rtl"===e.direction&&e.glyphs.reverse(),this.morxProcessor.process(e.glyphs,function(e){let t={};for(let r in e){let n;(n=fy[r])&&(null==t[n[0]]&&(t[n[0]]={}),t[n[0]][n[1]]=e[r])}return t}(e.features))}getAvailableFeatures(e,t){return function(e){let t={};if(Array.isArray(e))for(let r=0;r<e.length;r++){let n,s=py(e[r]);(n=gy[s[0]]&&gy[s[0]][s[1]])&&(t[n]=!0)}else if("object"===typeof e)for(let r in e){let n=e[r];for(let e in n){let s,i=py([r,e]);n[e]&&(s=gy[i[0]]&&gy[i[0]][i[1]])&&(t[s]=!0)}}return Object.keys(t)}(this.morxProcessor.getSupportedFeatures())}stringsForGlyph(e){let t=this.morxProcessor.generateInputs(e),r=new Set;for(let n of t)this._addStrings(n,0,r,"");return r}_addStrings(e,t,r,n){let s=this.font._cmapProcessor.codePointsForGlyph(e[t]);for(let i of s){let s=n+String.fromCodePoint(i);t<e.length-1?this._addStrings(e,t+1,r,s):r.add(s)}}constructor(e){this.font=e,this.morxProcessor=new by(e),this.fallbackPosition=!1}}class Ey{_addFeatures(e,t){let r=this.stages.length-1,n=this.stages[r];for(let s of e)null==this.allFeatures[s]&&(n.push(s),this.allFeatures[s]=r,t&&(this.globalFeatures[s]=!0))}add(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===this.stages.length&&this.stages.push([]),"string"===typeof e&&(e=[e]),Array.isArray(e))this._addFeatures(e,t);else{if("object"!==typeof e)throw new Error("Unsupported argument to ShapingPlan#add");this._addFeatures(e.global||[],!0),this._addFeatures(e.local||[],!1)}}addStage(e,t){"function"===typeof e?this.stages.push(e,[]):(this.stages.push([]),this.add(e,t))}setFeatureOverrides(e){if(Array.isArray(e))this.add(e);else if("object"===typeof e)for(let t in e)if(e[t])this.add(t);else if(null!=this.allFeatures[t]){let e=this.stages[this.allFeatures[t]];e.splice(e.indexOf(t),1),delete this.allFeatures[t],delete this.globalFeatures[t]}}assignGlobalFeatures(e){for(let t of e)for(let e in this.globalFeatures)t.features[e]=!0}process(e,t,r){for(let n of this.stages)"function"===typeof n?r||n(this.font,t,this):n.length>0&&e.applyFeatures(n,t,r)}constructor(e,t,r){this.font=e,this.script=t,this.direction=r,this.stages=[],this.globalFeatures={},this.allFeatures={}}}const Cy=["rvrn"],xy=["ccmp","locl","rlig","mark","mkmk"],Iy=["frac","numr","dnom"],Dy=["calt","clig","liga","rclt","curs","kern"],Qy={ltr:["ltra","ltrm"],rtl:["rtla","rtlm"]};class Py{static plan(e,t,r){this.planPreprocessing(e),this.planFeatures(e),this.planPostprocessing(e,r),e.assignGlobalFeatures(t),this.assignFeatures(e,t)}static planPreprocessing(e){e.add({global:[...Cy,...Qy[e.direction]],local:Iy})}static planFeatures(e){}static planPostprocessing(e,t){e.add([...xy,...Dy]),e.setFeatureOverrides(t)}static assignFeatures(e,t){for(let r=0;r<t.length;r++){let e=t[r];if(8260===e.codePoints[0]){let n=r,s=r+1;for(;n>0&&ap(t[n-1].codePoints[0]);)t[n-1].features.numr=!0,t[n-1].features.frac=!0,n--;for(;s<t.length&&ap(t[s].codePoints[0]);)t[s].features.dnom=!0,t[s].features.frac=!0,s++;e.features.frac=!0,r=s-1}}}}jg(Py,"zeroMarkWidths","AFTER_GPOS");const Fy=new zg(ty("APABAAAAAAAAOAAAAf0BAv7tmi1MxDAUx7vtvjhAgcDgkEgEAnmXEBIMCYaEcygEiqBQ4FAkCE4ikUgMiiBJSAgSiUQSDMn9L9eSl6bddddug9t7yS/trevre+3r27pcNxZiG+yCfdCVv/9LeQxOwRm4AJegD27ALbgD9+ABPJF+z+BN/h7yDj5k/VOWX6SdmU5+wLWknggxDxaS8u0qiiX4uiz9XamQ3wzDMAzDMAzDMAzDVI/h959V/v7BMAzDMAzDMLlyNTNiMSdewVxbiA44B4/guz1qW58VYlMI0WsJ0W+N6kXw0spvPtdwhtkwnGM6uLaV4Xyzg3v3PM9DPfQ/sOg4xPWjipy31P8LTqbU304c/cLCUmWJLNB2Uz2U1KTeRKNmKHVMfbJC+/0loTZRH/W5cvEvBJPMbREkWt3FD1NcqXZBSpuE2Ad0PBehPtNrPtIEdYP+hiRt/V1jIiE69X4NT/uVZI3PUHE9bm5M7ePGdZWy951v7Nn6j8v1WWKP3mt6ttnsigx6VN7Vc0VomSSGqW2mGNP1muZPl7LfjNUaKNFtDGVf2fvE9O7VlBS5j333c5p/eeoOqcs1R/hIqDWLJ7TTlksirVT1SI7l8k4Yp+g3jafGcrU1RM6l9th80XOpnlN97bDNY4i4s61B0Si/ipa0uHMl6zqEjlFfCZm/TM8KmzQDjmuTAQ==")),Ly=["isol","fina","fin2","fin3","medi","med2","init"],My=0,Sy=6,Ny="isol",ky="fina",Ry="fin2",Ty="medi",Wy="med2",jy="init",Gy=null,Xy=[[[Gy,Gy,0],[Gy,Ny,2],[Gy,Ny,1],[Gy,Ny,2],[Gy,Ny,1],[Gy,Ny,6]],[[Gy,Gy,0],[Gy,Ny,2],[Gy,Ny,1],[Gy,Ny,2],[Gy,Ry,5],[Gy,Ny,6]],[[Gy,Gy,0],[Gy,Ny,2],[jy,ky,1],[jy,ky,3],[jy,ky,4],[jy,ky,6]],[[Gy,Gy,0],[Gy,Ny,2],[Ty,ky,1],[Ty,ky,3],[Ty,ky,4],[Ty,ky,6]],[[Gy,Gy,0],[Gy,Ny,2],[Wy,Ny,1],[Wy,Ny,2],[Wy,Ry,5],[Wy,Ny,6]],[[Gy,Gy,0],[Gy,Ny,2],[Ny,Ny,1],[Ny,Ny,2],[Ny,Ry,5],[Ny,Ny,6]],[[Gy,Gy,0],[Gy,Ny,2],[Gy,Ny,1],[Gy,Ny,2],[Gy,"fin3",5],[Gy,Ny,6]]];class Oy extends Py{static planFeatures(e){e.add(["ccmp","locl"]);for(let t=0;t<Ly.length;t++){let r=Ly[t];e.addStage(r,!1)}e.addStage("mset")}static assignFeatures(e,t){super.assignFeatures(e,t);let r=-1,n=0,s=[];for(let o=0;o<t.length;o++){let e,A;let a=zy((i=t[o]).codePoints[0]);a!==Sy?([A,e,n]=Xy[n][a],A!==Gy&&-1!==r&&(s[r]=A),s[o]=e,r=o):s[o]=Gy}for(let o=0;o<t.length;o++){let e;var i=t[o];(e=s[o])&&(i.features[e]=!0)}}}function zy(e){let t=Fy.get(e);if(t)return t-1;let r=ip(e);return"Mn"===r||"Me"===r||"Cf"===r?Sy:My}class Yy{reset(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.options=e,this.flags=e.flags||{},this.markAttachmentType=e.markAttachmentType||0,this.index=t}get cur(){return this.glyphs[this.index]||null}shouldIgnore(e){return this.flags.ignoreMarks&&e.isMark||this.flags.ignoreBaseGlyphs&&e.isBase||this.flags.ignoreLigatures&&e.isLigature||this.markAttachmentType&&e.isMark&&e.markAttachmentType!==this.markAttachmentType}move(e){for(this.index+=e;0<=this.index&&this.index<this.glyphs.length&&this.shouldIgnore(this.glyphs[this.index]);)this.index+=e;return 0>this.index||this.index>=this.glyphs.length?null:this.glyphs[this.index]}next(){return this.move(1)}prev(){return this.move(-1)}peek(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=this.index,r=this.increment(e);return this.index=t,r}peekIndex(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=this.index;this.increment(e);let r=this.index;return this.index=t,r}increment(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=e<0?-1:1;for(e=Math.abs(e);e--;)this.move(t);return this.glyphs[this.index]}constructor(e,t){this.glyphs=e,this.reset(t)}}const Hy=["DFLT","dflt","latn"];class Uy{findScript(e){if(null==this.table.scriptList)return null;Array.isArray(e)||(e=[e]);for(let t of e)for(let e of this.table.scriptList)if(e.tag===t)return e;return null}selectScript(e,t,r){let n,s=!1;if(!this.script||e!==this.scriptTag){if(n=this.findScript(e),n||(n=this.findScript(Hy)),!n)return this.scriptTag;this.scriptTag=n.tag,this.script=n.script,this.language=null,this.languageTag=null,s=!0}if(r&&r===this.direction||(this.direction=r||ly(e)),t&&t.length<4&&(t+=" ".repeat(4-t.length)),!t||t!==this.languageTag){this.language=null;for(let e of this.script.langSysRecords)if(e.tag===t){this.language=e.langSys,this.languageTag=e.tag;break}this.language||(this.language=this.script.defaultLangSys,this.languageTag=null),s=!0}if(s&&(this.features={},this.language))for(let i of this.language.featureIndexes){let e=this.table.featureList[i],t=this.substituteFeatureForVariations(i);this.features[e.tag]=t||e.feature}return this.scriptTag}lookupsForFeatures(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1?arguments[1]:void 0,r=[];for(let n of e){let e=this.features[n];if(e)for(let s of e.lookupListIndexes)t&&-1!==t.indexOf(s)||r.push({feature:n,index:s,lookup:this.table.lookupList.get(s)})}return r.sort(((e,t)=>e.index-t.index)),r}substituteFeatureForVariations(e){if(-1===this.variationsIndex)return null;let t=this.table.featureVariations.featureVariationRecords[this.variationsIndex].featureTableSubstitution.substitutions;for(let r of t)if(r.featureIndex===e)return r.alternateFeatureTable;return null}findVariationsIndex(e){let t=this.table.featureVariations;if(!t)return-1;let r=t.featureVariationRecords;for(let n=0;n<r.length;n++){let t=r[n].conditionSet.conditionTable;if(this.variationConditionsMatch(t,e))return n}return-1}variationConditionsMatch(e,t){return e.every((e=>{let r=e.axisIndex<t.length?t[e.axisIndex]:0;return e.filterRangeMinValue<=r&&r<=e.filterRangeMaxValue}))}applyFeatures(e,t,r){let n=this.lookupsForFeatures(e);this.applyLookups(n,t,r)}applyLookups(e,t,r){this.glyphs=t,this.positions=r,this.glyphIterator=new Yy(t);for(let{feature:n,lookup:s}of e)for(this.currentFeature=n,this.glyphIterator.reset(s.flags);this.glyphIterator.index<t.length;)if(n in this.glyphIterator.cur.features){for(let e of s.subTables){if(this.applyLookup(s.lookupType,e))break}this.glyphIterator.next()}else this.glyphIterator.next()}applyLookup(e,t){throw new Error("applyLookup must be implemented by subclasses")}applyLookupList(e){let t=this.glyphIterator.options,r=this.glyphIterator.index;for(let n of e){this.glyphIterator.reset(t,r),this.glyphIterator.increment(n.sequenceIndex);let e=this.table.lookupList.get(n.lookupListIndex);this.glyphIterator.reset(e.flags,this.glyphIterator.index);for(let t of e.subTables)if(this.applyLookup(e.lookupType,t))break}return this.glyphIterator.reset(t,r),!0}coverageIndex(e,t){switch(null==t&&(t=this.glyphIterator.cur.id),e.version){case 1:return e.glyphs.indexOf(t);case 2:for(let r of e.rangeRecords)if(r.start<=t&&t<=r.end)return r.startCoverageIndex+t-r.start}return-1}match(e,t,r,n){let s=this.glyphIterator.index,i=this.glyphIterator.increment(e),o=0;for(;o<t.length&&i&&r(t[o],i);)n&&n.push(this.glyphIterator.index),o++,i=this.glyphIterator.next();return this.glyphIterator.index=s,!(o<t.length)&&(n||!0)}sequenceMatches(e,t){return this.match(e,t,((e,t)=>e===t.id))}sequenceMatchIndices(e,t){return this.match(e,t,((e,t)=>this.currentFeature in t.features&&e===t.id),[])}coverageSequenceMatches(e,t){return this.match(e,t,((e,t)=>this.coverageIndex(e,t.id)>=0))}getClassID(e,t){switch(t.version){case 1:let r=e-t.startGlyph;if(r>=0&&r<t.classValueArray.length)return t.classValueArray[r];break;case 2:for(let n of t.classRangeRecord)if(n.start<=e&&e<=n.end)return n.class}return 0}classSequenceMatches(e,t,r){return this.match(e,t,((e,t)=>e===this.getClassID(t.id,r)))}applyContext(e){let t,r;switch(e.version){case 1:if(t=this.coverageIndex(e.coverage),-1===t)return!1;r=e.ruleSets[t];for(let e of r)if(this.sequenceMatches(1,e.input))return this.applyLookupList(e.lookupRecords);break;case 2:if(-1===this.coverageIndex(e.coverage))return!1;if(t=this.getClassID(this.glyphIterator.cur.id,e.classDef),-1===t)return!1;r=e.classSet[t];for(let t of r)if(this.classSequenceMatches(1,t.classes,e.classDef))return this.applyLookupList(t.lookupRecords);break;case 3:if(this.coverageSequenceMatches(0,e.coverages))return this.applyLookupList(e.lookupRecords)}return!1}applyChainingContext(e){let t;switch(e.version){case 1:if(t=this.coverageIndex(e.coverage),-1===t)return!1;let r=e.chainRuleSets[t];for(let e of r)if(this.sequenceMatches(-e.backtrack.length,e.backtrack)&&this.sequenceMatches(1,e.input)&&this.sequenceMatches(1+e.input.length,e.lookahead))return this.applyLookupList(e.lookupRecords);break;case 2:if(-1===this.coverageIndex(e.coverage))return!1;t=this.getClassID(this.glyphIterator.cur.id,e.inputClassDef);let n=e.chainClassSet[t];if(!n)return!1;for(let t of n)if(this.classSequenceMatches(-t.backtrack.length,t.backtrack,e.backtrackClassDef)&&this.classSequenceMatches(1,t.input,e.inputClassDef)&&this.classSequenceMatches(1+t.input.length,t.lookahead,e.lookaheadClassDef))return this.applyLookupList(t.lookupRecords);break;case 3:if(this.coverageSequenceMatches(-e.backtrackGlyphCount,e.backtrackCoverage)&&this.coverageSequenceMatches(0,e.inputCoverage)&&this.coverageSequenceMatches(e.inputGlyphCount,e.lookaheadCoverage))return this.applyLookupList(e.lookupRecords)}return!1}constructor(e,t){this.font=e,this.table=t,this.script=null,this.scriptTag=null,this.language=null,this.languageTag=null,this.features={},this.lookups={},this.variationsIndex=e._variationProcessor?this.findVariationsIndex(e._variationProcessor.normalizedCoords):-1,this.selectScript(),this.glyphs=[],this.positions=[],this.ligatureID=1,this.currentFeature=null}}class Vy{get id(){return this._id}set id(e){this._id=e,this.substituted=!0;let t=this._font.GDEF;if(t&&t.glyphClassDef){let r=Uy.prototype.getClassID(e,t.glyphClassDef);this.isBase=1===r,this.isLigature=2===r,this.isMark=3===r,this.markAttachmentType=t.markAttachClassDef?Uy.prototype.getClassID(e,t.markAttachClassDef):0}else this.isMark=this.codePoints.length>0&&this.codePoints.every(lp),this.isBase=!this.isMark,this.isLigature=this.codePoints.length>1,this.markAttachmentType=0}copy(){return new Vy(this._font,this.id,this.codePoints,this.features)}constructor(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],n=arguments.length>3?arguments[3]:void 0;if(this._font=e,this.codePoints=r,this.id=t,this.features={},Array.isArray(n))for(let s=0;s<n.length;s++){let e=n[s];this.features[e]=!0}else"object"===typeof n&&Object.assign(this.features,n);this.ligatureID=null,this.ligatureComponent=null,this.isLigated=!1,this.cursiveAttachment=null,this.markAttachment=null,this.shaperInfo=null,this.substituted=!1,this.isMultiplied=!1}}class qy extends Py{static planFeatures(e){e.add(["ljmo","vjmo","tjmo"],!1)}static assignFeatures(e,t){let r=0,n=0;for(;n<t.length;){let s,i=t[n].codePoints[0],o=BB(i);switch([s,r]=DB[r][o],s){case EB:e.font.hasGlyphForCodePoint(i)||(n=PB(t,n,e.font));break;case CB:n=FB(t,n,e.font);break;case xB:LB(t,n,e.font);break;case IB:n=MB(t,n,e.font)}n++}}}jg(qy,"zeroMarkWidths","NONE");const Zy=44032,Ky=55204-Zy+1,Jy=4352,_y=4449,$y=4519,eB=21,tB=28,rB=Jy+19-1,nB=_y+eB-1,sB=$y+tB-1,iB=9676,oB=e=>4352<=e&&e<=4447||43360<=e&&e<=43388,AB=e=>4448<=e&&e<=4519||55216<=e&&e<=55238,aB=e=>4520<=e&&e<=4607||55243<=e&&e<=55291,lB=e=>12334<=e&&e<=12335,cB=e=>Zy<=e&&e<=55204,uB=e=>e-Zy<Ky&&(e-Zy)%tB===0,dB=e=>Jy<=e&&e<=rB,hB=e=>_y<=e&&e<=nB,fB=e=>$y+1&&1<=e&&e<=sB,gB=0,pB=1,mB=2,wB=3,vB=4,bB=5,yB=6;function BB(e){return oB(e)?pB:AB(e)?mB:aB(e)?wB:uB(e)?vB:cB(e)?bB:lB(e)?yB:gB}const EB=1,CB=2,xB=4,IB=5,DB=[[[0,0],[0,1],[0,0],[0,0],[EB,2],[EB,3],[IB,0]],[[0,0],[0,1],[CB,2],[0,0],[EB,2],[EB,3],[IB,0]],[[0,0],[0,1],[0,0],[CB,3],[EB,2],[EB,3],[xB,0]],[[0,0],[0,1],[0,0],[0,0],[EB,2],[EB,3],[xB,0]]];function QB(e,t,r){return new Vy(e,e.glyphForCodePoint(t).id,[t],r)}function PB(e,t,r){let n=e[t],s=n.codePoints[0]-Zy,i=$y+s%tB;s=s/tB|0;let o=Jy+s/eB|0,A=_y+s%eB;if(!r.hasGlyphForCodePoint(o)||!r.hasGlyphForCodePoint(A)||i!==$y&&!r.hasGlyphForCodePoint(i))return t;let a=QB(r,o,n.features);a.features.ljmo=!0;let l=QB(r,A,n.features);l.features.vjmo=!0;let c=[a,l];if(i>$y){let e=QB(r,i,n.features);e.features.tjmo=!0,c.push(e)}return e.splice(t,1,...c),t+c.length-1}function FB(e,t,r){let n,s,i,o,A=e[t],a=BB(e[t].codePoints[0]),l=e[t-1].codePoints[0],c=BB(l);if(c===vB&&a===wB)n=l,o=A;else{a===mB?(s=e[t-1],i=A):(s=e[t-2],i=e[t-1],o=A);let r=s.codePoints[0],l=i.codePoints[0];dB(r)&&hB(l)&&(n=Zy+((r-Jy)*eB+(l-_y))*tB)}let u=o&&o.codePoints[0]||$y;if(null!=n&&(u===$y||fB(u))){let s=n+(u-$y);if(r.hasGlyphForCodePoint(s)){let n=c===mB?3:2;return e.splice(t-n+1,n,QB(r,s,A.features)),t-n+1}}return s&&(s.features.ljmo=!0),i&&(i.features.vjmo=!0),o&&(o.features.tjmo=!0),c===vB?(PB(e,t-1,r),t+1):t}function LB(e,t,r){let n=e[t],s=e[t].codePoints[0];if(0===r.glyphForCodePoint(s).advanceWidth)return;let i=function(e){switch(BB(e)){case vB:case bB:return 1;case mB:return 2;case wB:return 3}}(e[t-1].codePoints[0]);return e.splice(t,1),e.splice(t-i,0,n)}function MB(e,t,r){let n=e[t],s=e[t].codePoints[0];if(r.hasGlyphForCodePoint(iB)){let i=QB(r,iB,n.features),o=0===r.glyphForCodePoint(s).advanceWidth?t:t+1;e.splice(o,0,i),t++}return t}var SB;SB=JSON.parse('{"stateTable":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],"accepting":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],"tags":[[],["broken_cluster"],["consonant_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],[],["broken_cluster"],["symbol_cluster"],[],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["symbol_cluster"],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],[],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],[],[],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],["consonant_syllable"],["vowel_syllable"],["standalone_cluster"]]}');var NB;NB=JSON.parse('{"categories":["O","IND","S","GB","B","FM","CGJ","VMAbv","VMPst","VAbv","VPst","CMBlw","VPre","VBlw","H","VMBlw","CMAbv","MBlw","CS","R","SUB","MPst","MPre","FAbv","FPst","FBlw","null","SMAbv","SMBlw","VMPre","ZWNJ","ZWJ","WJ","M","VS","N","HN","MAbv"],"decompositions":{"2507":[2503,2494],"2508":[2503,2519],"2888":[2887,2902],"2891":[2887,2878],"2892":[2887,2903],"3018":[3014,3006],"3019":[3015,3006],"3020":[3014,3031],"3144":[3142,3158],"3264":[3263,3285],"3271":[3270,3285],"3272":[3270,3286],"3274":[3270,3266],"3275":[3270,3266,3285],"3402":[3398,3390],"3403":[3399,3390],"3404":[3398,3415],"3546":[3545,3530],"3548":[3545,3535],"3549":[3545,3535,3530],"3550":[3545,3551],"3635":[3661,3634],"3763":[3789,3762],"3955":[3953,3954],"3957":[3953,3956],"3958":[4018,3968],"3959":[4018,3953,3968],"3960":[4019,3968],"3961":[4019,3953,3968],"3969":[3953,3968],"6971":[6970,6965],"6973":[6972,6965],"6976":[6974,6965],"6977":[6975,6965],"6979":[6978,6965],"69934":[69937,69927],"69935":[69938,69927],"70475":[70471,70462],"70476":[70471,70487],"70843":[70841,70842],"70844":[70841,70832],"70846":[70841,70845],"71098":[71096,71087],"71099":[71097,71087]},"stateTable":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,0,23,0,0,2,0,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],"accepting":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],"tags":[[],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["symbol_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["virama_terminated_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["number_joiner_terminated_cluster"],["standard_cluster"],["standard_cluster"],["numeral_cluster"]]}');const kB={X:1,C:2,V:4,N:8,H:16,ZWNJ:32,ZWJ:64,M:128,SM:256,VD:512,A:1024,Placeholder:2048,Dotted_Circle:4096,RS:8192,Coeng:16384,Repha:32768,Ra:65536,CM:131072,Symbol:262144},RB={Start:1,Ra_To_Become_Reph:2,Pre_M:4,Pre_C:8,Base_C:16,After_Main:32,Above_C:64,Before_Sub:128,Below_C:256,After_Sub:512,Before_Post:1024,Post_C:2048,After_Post:4096,Final_C:8192,SMVD:16384,End:32768},TB=kB.C|kB.Ra|kB.CM|kB.V|kB.Placeholder|kB.Dotted_Circle,WB=kB.ZWJ|kB.ZWNJ,jB=kB.H|kB.Coeng,GB={Default:{hasOldSpec:!1,virama:0,basePos:"Last",rephPos:RB.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Devanagari:{hasOldSpec:!0,virama:2381,basePos:"Last",rephPos:RB.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Bengali:{hasOldSpec:!0,virama:2509,basePos:"Last",rephPos:RB.After_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gurmukhi:{hasOldSpec:!0,virama:2637,basePos:"Last",rephPos:RB.Before_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gujarati:{hasOldSpec:!0,virama:2765,basePos:"Last",rephPos:RB.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Oriya:{hasOldSpec:!0,virama:2893,basePos:"Last",rephPos:RB.After_Main,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Tamil:{hasOldSpec:!0,virama:3021,basePos:"Last",rephPos:RB.After_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Telugu:{hasOldSpec:!0,virama:3149,basePos:"Last",rephPos:RB.After_Post,rephMode:"Explicit",blwfMode:"Post_Only"},Kannada:{hasOldSpec:!0,virama:3277,basePos:"Last",rephPos:RB.After_Post,rephMode:"Implicit",blwfMode:"Post_Only"},Malayalam:{hasOldSpec:!0,virama:3405,basePos:"Last",rephPos:RB.After_Main,rephMode:"Log_Repha",blwfMode:"Pre_And_Post"},Khmer:{hasOldSpec:!1,virama:6098,basePos:"First",rephPos:RB.Ra_To_Become_Reph,rephMode:"Vis_Repha",blwfMode:"Pre_And_Post"}},XB={6078:[6081,6078],6079:[6081,6079],6080:[6081,6080],6084:[6081,6084],6085:[6081,6085]},{decompositions:OB}=gp(NB),zB=new zg(ty("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")),YB=new cp(gp(SB));class HB extends Py{static planFeatures(e){var t;e.addStage(ZB),e.addStage(["locl","ccmp"]),e.addStage(tE),e.addStage("nukt"),e.addStage("akhn"),e.addStage("rphf",!1),e.addStage("rkrf"),e.addStage("pref",!1),e.addStage("blwf",!1),e.addStage("abvf",!1),e.addStage("half",!1),e.addStage("pstf",!1),e.addStage("vatu"),e.addStage("cjct"),e.addStage("cfar",!1),e.addStage(rE),e.addStage({local:["init"],global:["pres","abvs","blws","psts","haln","dist","abvm","blwm","calt","clig"]}),e.unicodeScript=(t=e.script,Ay[t]),e.indicConfig=GB[e.unicodeScript]||GB.Default,e.isOldSpec=e.indicConfig.hasOldSpec&&"2"!==e.script[e.script.length-1]}static assignFeatures(e,t){for(let r=t.length-1;r>=0;r--){let n=t[r].codePoints[0],s=XB[n]||OB[n];if(s){let n=s.map((n=>{let s=e.font.glyphForCodePoint(n);return new Vy(e.font,s.id,[n],t[r].features)}));t.splice(r,1,...n)}}}}function UB(e){return zB.get(e.codePoints[0])>>8}function VB(e){return 1<<(255&zB.get(e.codePoints[0]))}jg(HB,"zeroMarkWidths","NONE");class qB{constructor(e,t,r,n){this.category=e,this.position=t,this.syllableType=r,this.syllable=n}}function ZB(e,t){let r=0,n=0;for(let[s,i,o]of YB.match(t.map(UB))){if(s>n){++r;for(let e=n;e<s;e++)t[e].shaperInfo=new qB(kB.X,RB.End,"non_indic_cluster",r)}++r;for(let e=s;e<=i;e++)t[e].shaperInfo=new qB(1<<UB(t[e]),VB(t[e]),o[0],r);n=i+1}if(n<t.length){++r;for(let e=n;e<t.length;e++)t[e].shaperInfo=new qB(kB.X,RB.End,"non_indic_cluster",r)}}function KB(e){return e.shaperInfo.category&TB}function JB(e){return e.shaperInfo.category&WB}function _B(e){return e.shaperInfo.category&jB}function $B(e,t){for(let r of e)r.features={[t]:!0};return e[0]._font._layoutEngine.engine.GSUBProcessor.applyFeatures([t],e),1===e.length}function eE(e,t,r){let n=[r,t,r];return $B(n.slice(0,2),"blwf")||$B(n.slice(1,3),"blwf")?RB.Below_C:$B(n.slice(0,2),"pstf")||$B(n.slice(1,3),"pstf")||$B(n.slice(0,2),"pref")||$B(n.slice(1,3),"pref")?RB.Post_C:RB.Base_C}function tE(e,t,r){let n=r.indicConfig,s=e._layoutEngine.engine.GSUBProcessor.features,i=e.glyphForCodePoint(9676).id,o=e.glyphForCodePoint(n.virama).id;if(o){let r=new Vy(e,o,[n.virama]);for(let e=0;e<t.length;e++)t[e].shaperInfo.position===RB.Base_C&&(t[e].shaperInfo.position=eE(0,t[e].copy(),r))}for(let A=0,a=nE(t,0);A<t.length;A=a,a=nE(t,A)){let{category:o,syllableType:l}=t[A].shaperInfo;if("symbol_cluster"===l||"non_indic_cluster"===l)continue;if("broken_cluster"===l&&i){let r=new Vy(e,i,[9676]);r.shaperInfo=new qB(1<<UB(r),VB(r),t[A].shaperInfo.syllableType,t[A].shaperInfo.syllable);let n=A;for(;n<a&&t[n].shaperInfo.category===kB.Repha;)n++;t.splice(n++,0,r),a++}let c=a,u=A,d=!1;if(n.rephPos!==RB.Ra_To_Become_Reph&&s.rphf&&A+3<=a&&("Implicit"===n.rephMode&&!JB(t[A+2])||"Explicit"===n.rephMode&&t[A+2].shaperInfo.category===kB.ZWJ)){let e=[t[A].copy(),t[A+1].copy(),t[A+2].copy()];if($B(e.slice(0,2),"rphf")||"Explicit"===n.rephMode&&$B(e,"rphf")){for(u+=2;u<a&&JB(t[u]);)u++;c=A,d=!0}}else if("Log_Repha"===n.rephMode&&t[A].shaperInfo.category===kB.Repha){for(u++;u<a&&JB(t[u]);)u++;c=A,d=!0}switch(n.basePos){case"Last":{let e=a,r=!1;do{let n=t[--e].shaperInfo;if(KB(t[e])){if(n.position!==RB.Below_C&&(n.position!==RB.Post_C||r)){c=e;break}n.position===RB.Below_C&&(r=!0),c=e}else if(A<e&&n.category===kB.ZWJ&&t[e-1].shaperInfo.category===kB.H)break}while(e>u);break}case"First":c=A;for(let e=c+1;e<a;e++)KB(t[e])&&(t[e].shaperInfo.position=RB.Below_C)}d&&c===A&&u-c<=2&&(d=!1);for(let e=A;e<c;e++){let r=t[e].shaperInfo;r.position=Math.min(RB.Pre_C,r.position)}c<a&&(t[c].shaperInfo.position=RB.Base_C);for(let e=c+1;e<a;e++)if(t[e].shaperInfo.category===kB.M){for(let r=e+1;r<a;r++)if(KB(t[r])){t[r].shaperInfo.position=RB.Final_C;break}break}if(d&&(t[A].shaperInfo.position=RB.Ra_To_Become_Reph),r.isOldSpec){let e="Malayalam"!==r.unicodeScript;for(let r=c+1;r<a;r++)if(t[r].shaperInfo.category===kB.H){let n;for(n=a-1;n>r&&!(KB(t[n])||e&&t[n].shaperInfo.category===kB.H);n--);if(t[n].shaperInfo.category!==kB.H&&n>r){let e=t[r];t.splice(r,0,...t.splice(r+1,n-r)),t[n]=e}break}}let h=RB.Start;for(let e=A;e<a;e++){let r=t[e].shaperInfo;if(r.category&(WB|kB.N|kB.RS|kB.CM|jB&r.category)){if(r.position=h,r.category===kB.H&&r.position===RB.Pre_M)for(let n=e;n>A;n--)if(t[n-1].shaperInfo.position!==RB.Pre_M){r.position=t[n-1].shaperInfo.position;break}}else r.position!==RB.SMVD&&(h=r.position)}let f=c;for(let e=c+1;e<a;e++)if(KB(t[e])){for(let r=f+1;r<e;r++)t[r].shaperInfo.position<RB.SMVD&&(t[r].shaperInfo.position=t[e].shaperInfo.position);f=e}else t[e].shaperInfo.category===kB.M&&(f=e);let g=t.slice(A,a);g.sort(((e,t)=>e.shaperInfo.position-t.shaperInfo.position)),t.splice(A,g.length,...g);for(let e=A;e<a;e++)if(t[e].shaperInfo.position===RB.Base_C){c=e;break}for(let e=A;e<a&&t[e].shaperInfo.position===RB.Ra_To_Become_Reph;e++)t[e].features.rphf=!0;let p=!r.isOldSpec&&"Pre_And_Post"===n.blwfMode;for(let e=A;e<c;e++)t[e].features.half=!0,p&&(t[e].features.blwf=!0);for(let e=c+1;e<a;e++)t[e].features.abvf=!0,t[e].features.pstf=!0,t[e].features.blwf=!0;if(r.isOldSpec&&"Devanagari"===r.unicodeScript)for(let e=A;e+1<c;e++)t[e].shaperInfo.category!==kB.Ra||t[e+1].shaperInfo.category!==kB.H||e+1!==c&&t[e+2].shaperInfo.category!==kB.ZWJ||(t[e].features.blwf=!0,t[e+1].features.blwf=!0);let m=2;if(s.pref&&c+m<a)for(let e=c+1;e+m-1<a;e++){if($B([t[e].copy(),t[e+1].copy()],"pref")){for(let r=0;r<m;r++)t[e++].features.pref=!0;if(s.cfar)for(;e<a;e++)t[e].features.cfar=!0;break}}for(let e=A+1;e<a;e++)if(JB(t[e])){let r=t[e].shaperInfo.category===kB.ZWNJ,n=e;do{n--,r&&delete t[n].features.half}while(n>A&&!KB(t[n]))}}}function rE(e,t,r){let n=r.indicConfig,s=e._layoutEngine.engine.GSUBProcessor.features;for(let i=0,o=nE(t,0);i<t.length;i=o,o=nE(t,i)){let e=!!s.pref,A=i;for(;A<o;A++)if(t[A].shaperInfo.position>=RB.Base_C){if(e&&A+1<o)for(let r=A+1;r<o;r++)if(t[r].features.pref){if(!t[r].substituted||!t[r].isLigated||t[r].isMultiplied){for(A=r;A<o&&_B(t[A]);)A++;t[A].shaperInfo.position=RB.BASE_C,e=!1}break}if("Malayalam"===r.unicodeScript)for(let e=A+1;e<o;e++){for(;e<o&&JB(t[e]);)e++;if(e===o||!_B(t[e]))break;for(e++;e<o&&JB(t[e]);)e++;e<o&&KB(t[e])&&t[e].shaperInfo.position===RB.Below_C&&(A=e,t[A].shaperInfo.position=RB.Base_C)}i<A&&t[A].shaperInfo.position>RB.Base_C&&A--;break}if(A===o&&i<A&&t[A-1].shaperInfo.category===kB.ZWJ&&A--,A<o)for(;i<A&&t[A].shaperInfo.category&(kB.N|jB);)A--;if(i+1<o&&i<A){let e=A===o?A-2:A-1;if("Malayalam"!==r.unicodeScript&&"Tamil"!==r.unicodeScript){for(;e>i&&!(t[e].shaperInfo.category&(kB.M|jB));)e--;_B(t[e])&&t[e].shaperInfo.position!==RB.Pre_M?e+1<o&&JB(t[e+1])&&e++:e=i}if(i<e&&t[e].shaperInfo.position!==RB.Pre_M)for(let r=e;r>i;r--)if(t[r-1].shaperInfo.position===RB.Pre_M){let n=r-1;n<A&&A<=e&&A--;let s=t[n];t.splice(n,0,...t.splice(n+1,e-n)),t[e]=s,e--}}if(i+1<o&&t[i].shaperInfo.position===RB.Ra_To_Become_Reph&&t[i].shaperInfo.category===kB.Repha!==(t[i].isLigated&&!t[i].isMultiplied)){let e,r=n.rephPos,s=!1;if(r!==RB.After_Post){for(e=i+1;e<A&&!_B(t[e]);)e++;if(e<A&&_B(t[e])&&(e+1<A&&JB(t[e+1])&&e++,s=!0),!s&&r===RB.After_Main){for(e=A;e+1<o&&t[e+1].shaperInfo.position<=RB.After_Main;)e++;s=e<o}if(!s&&r===RB.After_Sub){for(e=A;e+1<o&&!(t[e+1].shaperInfo.position&(RB.Post_C|RB.After_Post|RB.SMVD));)e++;s=e<o}}if(!s){for(e=i+1;e<A&&!_B(t[e]);)e++;e<A&&_B(t[e])&&(e+1<A&&JB(t[e+1])&&e++,s=!0)}if(!s){for(e=o-1;e>i&&t[e].shaperInfo.position===RB.SMVD;)e--;if(_B(t[e]))for(let r=A+1;r<e;r++)t[r].shaperInfo.category===kB.M&&e--}let a=t[i];t.splice(i,0,...t.splice(i+1,e-i)),t[e]=a,i<A&&A<=e&&A--}if(e&&A+1<o)for(let n=A+1;n<o;n++)if(t[n].features.pref){if(t[n].isLigated&&!t[n].isMultiplied){let e=A;if("Malayalam"!==r.unicodeScript&&"Tamil"!==r.unicodeScript){for(;e>i&&!(t[e-1].shaperInfo.category&(kB.M|jB));)e--;if(e>i&&t[e-1].shaperInfo.category===kB.M){let r=n;for(let n=A+1;n<r;n++)if(t[n].shaperInfo.category===kB.M){e--;break}}}e>i&&_B(t[e-1])&&e<o&&JB(t[e])&&e++;let s=n,a=t[s];t.splice(e+1,0,...t.splice(e,s-e)),t[e]=a,e<=A&&A<s&&A++}break}t[i].shaperInfo.position!==RB.Pre_M||i&&/Cf|Mn/.test(ip(t[i-1].codePoints[0]))||(t[i].features.init=!0)}}function nE(e,t){if(t>=e.length)return t;let r=e[t].shaperInfo.syllable;for(;++t<e.length&&e[t].shaperInfo.syllable===r;);return t}const{categories:sE,decompositions:iE}=gp(NB),oE=new zg(ty("AAACAAAAAAAQugAAAQUO+vHtnHuMX0UVx2d3u/t7bXe7FlqgvB+mpQhFmhikMRAg0ZQmakMU+cPWBzZisEGNjUpoiIYCEgmGUGOEGqOVNPUZUGNA+QNIBU2KREEFFSMBUYRISMXE+B3vnPzOzp553tcWfif5ZO5jnufMzJ2ZO/eumlDqFLAWnAMuBBvBZnC5uXZeBe4WsA1sBzs8/naCXcL1G8GtYDfYA74NvgfuAfcZHmT+fwEeBb8DTwvxPQWeAavACyZvq8z9VYxXwCGglijVBcvACnA8eCM4E6wHG8BF4BLwbvA+8AHwUbAd7AA7wS5wC9gN7gR7wX5wN7gXPAAeBr8Gvwd/Ac+CF8EhoCaV6oBZsBKcAE4FZ0wWeV8P9zxwoTnfCHczuBxsAdvAx8Gnzf1r4X4B3AxuA1+bHJb9m5PzdVGW/Yjv+xXHyfmxFfd9OH8Q/Ar8Bjw1WZT3GfACeAX8N5CfqSmlZsAKsGqqCH8K3DXgbHCuuXYB3HeAd4HLpgrdarbi+EPgY+CT4HPg8ybMTcb9MtyvghtYut/A+b4pf95+ELgfw08Qx/3gADgInjDl0veehPtX8A/wsrn2KtzxDuogWNoJx38k/BzXKeI8Ee5qcBZYD9aZtDbg+AwT19uMX83F7JizCdcvBZdZ97c6/BMfMWmfzfTm88/95aLj+DDSvApcDXZ04uPfaen3TMHPLvi5BezuFPVtD4t/qUcfe3FvP7gb3Ouwo9T+H+gMy/UIjh8DfwBPm7T08d/M8WMBe1Sh3xEjXo+M2s+IESNGjBgxYsSI1wLrOsM1gRsi/P+TzV3/Zc1jvxgR/j8IM9Et1mEGcJeDFeA4cJq5/ia467uF/w1wzwdvB+80998LdwvYZs63w90Bdnbd6Wp/uzz3R4wYMWJEvZzTMm2Xf8SIEfVQd/v+EsaPt3eL90J3wP2WMJ78Trd4t6+P77Hu37cIxp9/ny6YXqrUJeCR6TA74e/nll81MzxejeMtYA94HBwy91bPYow+O/S3A8d7oIM/gRN7CAP29Iqx/B1ThfuwOecM+vA3NmRjf6Gfm3BtH7v+PI7XDpS6EuwDz4O10+0/f9om1F4ehO4OmHp6EO7jxl56nvhsN/15ut+4Z0b657yYkZ7UJ0jhX0bcr3bn+6P87vekN4762QNzvWHZtL+jcH5srzg/uTf0f3pvfj5i+6tYW7rK9+aefO+tuL4BXAQ2gs3gPeBJc//9OL4CXAWuNvc/A64DN4Jbwe0s7jtxvBfsAz8EPwX3gwPgoJAHPQ9/Atf/bO7p/TTP4fglwS/5/zfujfWH5z0cz4Gj+8X5Sf1ib4m+vwbHZ/fdOtP+z+3LOnPp/QL4vxhsApeCy8BWk/a2ftFmYu22Hf4/Ba4B14Hrwc0sP7fh+Cvg6+Au8F1WthA/8pT7UeTxZ/12njkuXT8UyM9i6iur1EEb6f+yPz/eg0b3v4X7x365fMaW42lPu7PTv6vi8i/G+lWF/cvUk7bLl1r+5/rN5tu3j2qvWTd/qV+4h+AqjDGnBsX59GDo94iBXDa6v6Yjl6vu+h8itJcsZq/ZykHhHg/3tMHhUe9s/Yfuny7YNxTvQ8LYdrER2+/c0GBezhrMv3ZNRv7PmYirh7oOv4W1Y72/cwPOzx8U7X8d2295sfE3MPnbBPfSQbHv9nK4HxTqiK/trI7Yy5mLzvuVg/nX+N7V51A3r+gMy/4J434W7l2dYf5PZWGuNX6uh3uzEPetuLY7sZ20zTETY2oxyBhj3DrnfsidYPeXRGLHpxzX6pbFofGRkFBdGhcgW40L4cYtd9JAElO36q4LEzXHX7VMtZ2BEhJjy9dT25fazOtJxhwsBrHzwfu8w12kMYN9fLhIbp2RxlI59rX1dzjpsKl2Fxt3iu6rbofc9q5+KcRrXVzzDn6/Crvk6p/y1GFgGhs9/6maHjBLgv8/18fTxl1q0bPoW8ywsFTGWaazHosrNn/kP2eeqEroZYLZphsZl7L82eephMIqNT8dyT9JjH1Jpg32ubZvTB/SF665ymSnnaqjUHum+1Qn+NyOtz9f2r6y5OQ51b6hYy0D40r2tYXar30+Y/mbVX6JqY+hMC60XZapoh3S/HdOpT3DYu3rs0lKnquyb277JZvyPlqp+f1zVVK2/dJYNpQGf04uYyh1+PTPqfalZ2tO/xwSu+3bOrDzmWvfcTW/fLmibRx6lkvlcOlc8qsE/y5/rnSk67F1iAu1VT6+4jKt5tufn8e2b+n57JKcckhrsKG1Cd6Wu+Y8tf2l5DenPafqQZ/7xstKLeyr+XnInjSelvRgS9n27JPQM5n6Am7jmLG8VK6m7OvyS2L313XYV2r/tth5LWPfNxhyhI+1Up7HVbe/HMgeZE8brtNQ/7tcyX0cn//H2LTO9kpir5VI6yYp9szJW9W2jI1Tqfl5ic2v1GZ5XaG6RDZbyvxMO/DVh1SdUj5y1vraaHs+2/TYNXvtSRoXk4wrf9w6fEctnFt0zL2y+xFsfSrLza2zOTqMiZv8xOpbn8+xsL5ykdj6VsxNKb/Lvxb7nX8u48y1x6yuMW3V9tNxTlouzXslibVxndjC14xda8g2NIbg5x01XAP2lfeIBFSi/zrQEporTXru8fCueiy1CUnqrhspSM9SzbSS64tep9R1ZsZcOxKsUEUfNZeYtr0vjY5DeXW915hT8/PRV8MxlR1HV4DHZZc9R7dzajgWoXikdLtGr0uEfPigsGS/NvYjSHW87XejoXZehZ74XrcqpQ4d5T5f7Gu8f6g7fQmefoqOqk4/VarQv2o4/VDetPDnhjR2dc3BCBp/9NVw7KGfwStVMf6aZNAajj6224j9HCZbpZa/LvH1gU30i/q5WnUdSNEprxv2eIOwx2pcjjLMsmObo008k0J4u69P3d9QdbspW/dy080Nb8PXqcrmj0vsc7tu6qwD1A5oLYr3U3XWSxqj6/a10nCMkudJMyxvrvbK55jUrqU+Xlr/Iai98jY7mVAml5QNHxq31j2m5TrSdmp6z5p+9kpzQntdQbI1Pafr6I9C60gxrALHGtdF6tyhLTtxeBuW+hhqyzPMX931xl6rJ5f6n5h3blpsW7vKbvdBfL1gpYfjDLrvob1drrRT+mcuMf1OrJSdW/P+RfufdUB+pOtdTzhpL5t0jfKr46P3obQfQdPGt1jS+DEkx4MT2PmEg1j72OthqfZNWX+JuZ4at/2sTAmn5cSIMqZIjk0pnD0+aUI6YS9ekdaspWsp8cWEC62dS66UTkq+ypajyvXSlPz4xhQhm/ns6wpXBVI560jHN9aKkdT46spvWT916rONdHNsGSNtl6Hp8oakTVukpF9n3U3Jx0TNefbp3R4jltVfFfpvQkJpNaH/puyco++qbZPz7sE1L3DFGVovc4XPLUPO3ELyrzLiSpmPhaTJfqeJ+t60PiTh9snNW2656upDQ+Wtyg6ueJquB7HSVPspW9a28lDWJouhb6iyv7XjTfVL67j2vjDpvUfMt1Vl4GvctMaeq/vYcFWXIfV5Ku3XaxK951H6dsWFrhcxa3pU/pz3C1xc71tTcaXjGjtJbYIj7UHm7wxSyx+D/d7SfpfJ3wPpfSQp32tS2dt8V2tD7+Bce3rpPa3eC6Dr8Ulq+K+J3HFvbn312Zv2RdStr9g0pP0P/B04XbP3Q8cIT2dlRF6orkrhY/Rv27FqHfL1DP480ffo/V6V7aTHXLKDbTdXOOrnyG1ScvSv6xqve30lPzdpj36M8Pilb+L5vr0xE3dd30nWIfZ45uSSxK4x+CRmTUK6F/LrSsfnj+aOdYyvpXyMK7/OpHWjlDTsa0rJum5K7Ppnj7F9c+0q0qtr7pQji2X9oMwcVrJfmblwU2V2SV3rEk3YuO46XXf8MfrQz077G2zftyDkj/ZqhcZr9nldkOg5ykAt3GunJbR3NGYsUfWafd3ts853C4dLHppOM6WcfM5C+xSbaC/2HMa1H9v1vXdoXm/LKSVpYh5wqmr/X67SfwHtPc9a97p/k8bt0hpbW0j1Svr2m+7Rd98qIQ1pvSF273dKOjHYNmk6fd8/JX3tWIddblBqoU5p7zrZKnd9TppjVq0DSitWqkwz12b2exb7vwjaRvS/TFd/S+8AYvIo+Suri5TwvvZRdV1IQevQ1/8SA+UeH5eto7n/X1Oe86ptaafl8kPjcF7P7W93eD9d5n+oSvn7fFe7I/G9q1IBfylSR71N6fft94ZU18hOXKR+JqUO8f4+5dvLsmWlMQb/Vov+CUDlpTGUndeQlG3fdZWdRPoPgl3mmDlsLnaey/4X3tVuU+o6L3/Pym+qlLV/jk6rlBRd8394hZ6JdnuqIv2ykOh3pfq96Wkq/E8qu2xl88/tOJ4R3tfmpbGi3c5T859bzqr7MbsN03iI5itUNj5eaEKWqIX/KJCQ/iFWNZMmHXs8ovWk53JzFq5vPul6zDjLV36pX7bzvNzB0YlQOZephWtRS5T7eeSq8030R77/HvC1d7tN83Zt9yltrDdwSR0XxsZd5l+MvvvU1/M9jSnj+Nh6FPJbBld/w6XHXH5MZeXrOfS/65g9RTl1JCa8chzX2RZ9/3lXSh4/VqWfEBNq4b82Ytp6m+9Qqxir1jX+rfPdT1vvsWhM6bPbmON6E1LnPCZW7L0qqXswmtqf0MQelZj4myrzYtzvIYmURlvtqapyx+gzRfd0XPfahVSOquMoG+dibBdl46iyfdbV1qvUW9m8+KTudMvkzZe/pqTJ+pWTflX5zw1fVfox6ZTVc8hvHflOSb+OuG1JsZ0kufXAJf8D")),AE=new cp(gp(NB));class aE extends Py{static planFeatures(e){e.addStage(uE),e.addStage(["locl","ccmp","nukt","akhn"]),e.addStage(dE),e.addStage(["rphf"],!1),e.addStage(hE),e.addStage(dE),e.addStage(["pref"]),e.addStage(fE),e.addStage(["rkrf","abvf","blwf","half","pstf","vatu","cjct"]),e.addStage(gE),e.addStage(["abvs","blws","pres","psts","dist","abvm","blwm"])}static assignFeatures(e,t){for(let r=t.length-1;r>=0;r--){let n=t[r].codePoints[0];if(iE[n]){let s=iE[n].map((n=>{let s=e.font.glyphForCodePoint(n);return new Vy(e.font,s.id,[n],t[r].features)}));t.splice(r,1,...s)}}}}function lE(e){return oE.get(e.codePoints[0])}jg(aE,"zeroMarkWidths","BEFORE_GPOS");class cE{constructor(e,t,r){this.category=e,this.syllableType=t,this.syllable=r}}function uE(e,t){let r=0;for(let[n,s,i]of AE.match(t.map(lE))){++r;for(let o=n;o<=s;o++)t[o].shaperInfo=new cE(sE[lE(t[o])],i[0],r);let e="R"===t[n].shaperInfo.category?1:Math.min(3,s-n);for(let r=n;r<n+e;r++)t[r].features.rphf=!0}}function dE(e,t){for(let r of t)r.substituted=!1}function hE(e,t){for(let r of t)r.substituted&&r.features.rphf&&(r.shaperInfo.category="R")}function fE(e,t){for(let r of t)r.substituted&&(r.shaperInfo.category="VPre")}function gE(e,t){let r=e.glyphForCodePoint(9676).id;for(let n=0,s=pE(t,0);n<t.length;n=s,s=pE(t,n)){let i,o,A=t[n].shaperInfo,a=A.syllableType;if("virama_terminated_cluster"===a||"standard_cluster"===a||"broken_cluster"===a){if("broken_cluster"===a&&r){let o=new Vy(e,r,[9676]);for(o.shaperInfo=A,i=n;i<s&&"R"===t[i].shaperInfo.category;i++);t.splice(++i,0,o),s++}if("R"===A.category&&s-n>1)for(i=n+1;i<s;i++)if(A=t[i].shaperInfo,wE(A)||mE(t[i])){mE(t[i])&&i--,t.splice(n,0,...t.splice(n+1,i-n),t[i]);break}for(i=n,o=s;i<s;i++)A=t[i].shaperInfo,wE(A)||mE(t[i])?o=mE(t[i])?i+1:i:("VPre"===A.category||"VMPre"===A.category)&&o<i&&t.splice(o,1,t[i],...t.splice(o,i-o))}}}function pE(e,t){if(t>=e.length)return t;let r=e[t].shaperInfo.syllable;for(;++t<e.length&&e[t].shaperInfo.syllable===r;);return t}function mE(e){return"H"===e.shaperInfo.category&&!e.isLigated}function wE(e){return"B"===e.category||"GB"===e.category}const vE={arab:Oy,mong:Oy,syrc:Oy,"nko ":Oy,phag:Oy,mand:Oy,mani:Oy,phlp:Oy,hang:qy,bng2:HB,beng:HB,dev2:HB,deva:HB,gjr2:HB,gujr:HB,guru:HB,gur2:HB,knda:HB,knd2:HB,mlm2:HB,mlym:HB,ory2:HB,orya:HB,taml:HB,tml2:HB,telu:HB,tel2:HB,khmr:HB,bali:aE,batk:aE,brah:aE,bugi:aE,buhd:aE,cakm:aE,cham:aE,dupl:aE,egyp:aE,gran:aE,hano:aE,java:aE,kthi:aE,kali:aE,khar:aE,khoj:aE,sind:aE,lepc:aE,limb:aE,mahj:aE,mtei:aE,modi:aE,hmng:aE,rjng:aE,saur:aE,shrd:aE,sidd:aE,sinh:HB,sund:aE,sylo:aE,tglg:aE,tagb:aE,tale:aE,lana:aE,tavt:aE,takr:aE,tibt:aE,tfng:aE,tirh:aE,latn:Py,DFLT:Py};class bE extends Uy{applyLookup(e,t){switch(e){case 1:{let e=this.coverageIndex(t.coverage);if(-1===e)return!1;let r=this.glyphIterator.cur;switch(t.version){case 1:r.id=r.id+t.deltaGlyphID&65535;break;case 2:r.id=t.substitute.get(e)}return!0}case 2:{let e=this.coverageIndex(t.coverage);if(-1!==e){let r=t.sequences.get(e);if(0===r.length)return this.glyphs.splice(this.glyphIterator.index,1),!0;this.glyphIterator.cur.id=r[0],this.glyphIterator.cur.ligatureComponent=0;let n=this.glyphIterator.cur.features,s=this.glyphIterator.cur,i=r.slice(1).map(((e,t)=>{let r=new Vy(this.font,e,void 0,n);return r.shaperInfo=s.shaperInfo,r.isLigated=s.isLigated,r.ligatureComponent=t+1,r.substituted=!0,r.isMultiplied=!0,r}));return this.glyphs.splice(this.glyphIterator.index+1,0,...i),!0}return!1}case 3:{let e=this.coverageIndex(t.coverage);if(-1!==e){let r=0;return this.glyphIterator.cur.id=t.alternateSet.get(e)[r],!0}return!1}case 4:{let e=this.coverageIndex(t.coverage);if(-1===e)return!1;for(let n of t.ligatureSets.get(e)){let e=this.sequenceMatchIndices(1,n.components);if(!e)continue;let t=this.glyphIterator.cur,s=t.codePoints.slice();for(let r of e)s.push(...this.glyphs[r].codePoints);let i=new Vy(this.font,n.glyph,s,t.features);i.shaperInfo=t.shaperInfo,i.isLigated=!0,i.substituted=!0;let o=t.isMark;for(let r=0;r<e.length&&o;r++)o=this.glyphs[e[r]].isMark;i.ligatureID=o?null:this.ligatureID++;let A=t.ligatureID,a=t.codePoints.length,l=a,c=this.glyphIterator.index+1;for(let n of e){if(o)c=n;else for(;c<n;){var r=l-a+Math.min(this.glyphs[c].ligatureComponent||1,a);this.glyphs[c].ligatureID=i.ligatureID,this.glyphs[c].ligatureComponent=r,c++}A=this.glyphs[c].ligatureID,a=this.glyphs[c].codePoints.length,l+=a,c++}if(A&&!o)for(let n=c;n<this.glyphs.length&&this.glyphs[n].ligatureID===A;n++){r=l-a+Math.min(this.glyphs[n].ligatureComponent||1,a);this.glyphs[n].ligatureComponent=r}for(let r=e.length-1;r>=0;r--)this.glyphs.splice(e[r],1);return this.glyphs[this.glyphIterator.index]=i,!0}return!1}case 5:return this.applyContext(t);case 6:return this.applyChainingContext(t);case 7:return this.applyLookup(t.lookupType,t.extension);default:throw new Error(`GSUB lookupType ${e} is not supported`)}}}class yE extends Uy{applyPositionValue(e,t){let r=this.positions[this.glyphIterator.peekIndex(e)];null!=t.xAdvance&&(r.xAdvance+=t.xAdvance),null!=t.yAdvance&&(r.yAdvance+=t.yAdvance),null!=t.xPlacement&&(r.xOffset+=t.xPlacement),null!=t.yPlacement&&(r.yOffset+=t.yPlacement);let n=this.font._variationProcessor,s=this.font.GDEF&&this.font.GDEF.itemVariationStore;n&&s&&(t.xPlaDevice&&(r.xOffset+=n.getDelta(s,t.xPlaDevice.a,t.xPlaDevice.b)),t.yPlaDevice&&(r.yOffset+=n.getDelta(s,t.yPlaDevice.a,t.yPlaDevice.b)),t.xAdvDevice&&(r.xAdvance+=n.getDelta(s,t.xAdvDevice.a,t.xAdvDevice.b)),t.yAdvDevice&&(r.yAdvance+=n.getDelta(s,t.yAdvDevice.a,t.yAdvDevice.b)))}applyLookup(e,t){switch(e){case 1:{let e=this.coverageIndex(t.coverage);if(-1===e)return!1;switch(t.version){case 1:this.applyPositionValue(0,t.value);break;case 2:this.applyPositionValue(0,t.values.get(e))}return!0}case 2:{let e=this.glyphIterator.peek();if(!e)return!1;let n=this.coverageIndex(t.coverage);if(-1===n)return!1;switch(t.version){case 1:let s=t.pairSets.get(n);for(let t of s)if(t.secondGlyph===e.id)return this.applyPositionValue(0,t.value1),this.applyPositionValue(1,t.value2),!0;return!1;case 2:let i=this.getClassID(this.glyphIterator.cur.id,t.classDef1),o=this.getClassID(e.id,t.classDef2);if(-1===i||-1===o)return!1;var r=t.classRecords.get(i).get(o);return this.applyPositionValue(0,r.value1),this.applyPositionValue(1,r.value2),!0}}case 3:{let e=this.glyphIterator.peekIndex(),r=this.glyphs[e];if(!r)return!1;let n=t.entryExitRecords[this.coverageIndex(t.coverage)];if(!n||!n.exitAnchor)return!1;let s=t.entryExitRecords[this.coverageIndex(t.coverage,r.id)];if(!s||!s.entryAnchor)return!1;let i,o=this.getAnchor(s.entryAnchor),A=this.getAnchor(n.exitAnchor),a=this.positions[this.glyphIterator.index],l=this.positions[e];switch(this.direction){case"ltr":a.xAdvance=A.x+a.xOffset,i=o.x+l.xOffset,l.xAdvance-=i,l.xOffset-=i;break;case"rtl":i=A.x+a.xOffset,a.xAdvance-=i,a.xOffset-=i,l.xAdvance=o.x+l.xOffset}return this.glyphIterator.flags.rightToLeft?(this.glyphIterator.cur.cursiveAttachment=e,a.yOffset=o.y-A.y):(r.cursiveAttachment=this.glyphIterator.index,a.yOffset=A.y-o.y),!0}case 4:{let e=this.coverageIndex(t.markCoverage);if(-1===e)return!1;let r=this.glyphIterator.index;for(;--r>=0&&(this.glyphs[r].isMark||this.glyphs[r].ligatureComponent>0););if(r<0)return!1;let n=this.coverageIndex(t.baseCoverage,this.glyphs[r].id);if(-1===n)return!1;let s=t.markArray[e],i=t.baseArray[n][s.class];return this.applyAnchor(s,i,r),!0}case 5:{let e=this.coverageIndex(t.markCoverage);if(-1===e)return!1;let r=this.glyphIterator.index;for(;--r>=0&&this.glyphs[r].isMark;);if(r<0)return!1;let n=this.coverageIndex(t.ligatureCoverage,this.glyphs[r].id);if(-1===n)return!1;let s=t.ligatureArray[n],i=this.glyphIterator.cur,o=this.glyphs[r],A=o.ligatureID&&o.ligatureID===i.ligatureID&&i.ligatureComponent>0?Math.min(i.ligatureComponent,o.codePoints.length)-1:o.codePoints.length-1,a=t.markArray[e],l=s[A][a.class];return this.applyAnchor(a,l,r),!0}case 6:{let e=this.coverageIndex(t.mark1Coverage);if(-1===e)return!1;let r=this.glyphIterator.peekIndex(-1),n=this.glyphs[r];if(!n||!n.isMark)return!1;let s=this.glyphIterator.cur,i=!1;if(s.ligatureID===n.ligatureID?s.ligatureID?s.ligatureComponent===n.ligatureComponent&&(i=!0):i=!0:(s.ligatureID&&!s.ligatureComponent||n.ligatureID&&!n.ligatureComponent)&&(i=!0),!i)return!1;let o=this.coverageIndex(t.mark2Coverage,n.id);if(-1===o)return!1;let A=t.mark1Array[e],a=t.mark2Array[o][A.class];return this.applyAnchor(A,a,r),!0}case 7:return this.applyContext(t);case 8:return this.applyChainingContext(t);case 9:return this.applyLookup(t.lookupType,t.extension);default:throw new Error(`Unsupported GPOS table: ${e}`)}}applyAnchor(e,t,r){let n=this.getAnchor(t),s=this.getAnchor(e.markAnchor),i=(this.positions[r],this.positions[this.glyphIterator.index]);i.xOffset=n.x-s.x,i.yOffset=n.y-s.y,this.glyphIterator.cur.markAttachment=r}getAnchor(e){let t=e.xCoordinate,r=e.yCoordinate,n=this.font._variationProcessor,s=this.font.GDEF&&this.font.GDEF.itemVariationStore;return n&&s&&(e.xDeviceTable&&(t+=n.getDelta(s,e.xDeviceTable.a,e.xDeviceTable.b)),e.yDeviceTable&&(r+=n.getDelta(s,e.yDeviceTable.a,e.yDeviceTable.b))),{x:t,y:r}}applyFeatures(e,t,r){super.applyFeatures(e,t,r);for(var n=0;n<this.glyphs.length;n++)this.fixCursiveAttachment(n);this.fixMarkAttachment()}fixCursiveAttachment(e){let t=this.glyphs[e];if(null!=t.cursiveAttachment){let r=t.cursiveAttachment;t.cursiveAttachment=null,this.fixCursiveAttachment(r),this.positions[e].yOffset+=this.positions[r].yOffset}}fixMarkAttachment(){for(let e=0;e<this.glyphs.length;e++){let t=this.glyphs[e];if(null!=t.markAttachment){let r=t.markAttachment;if(this.positions[e].xOffset+=this.positions[r].xOffset,this.positions[e].yOffset+=this.positions[r].yOffset,"ltr"===this.direction)for(let t=r;t<e;t++)this.positions[e].xOffset-=this.positions[t].xAdvance,this.positions[e].yOffset-=this.positions[t].yAdvance;else for(let t=r+1;t<e+1;t++)this.positions[e].xOffset+=this.positions[t].xAdvance,this.positions[e].yOffset+=this.positions[t].yAdvance}}}}class BE{setup(e){this.glyphInfos=e.glyphs.map((e=>new Vy(this.font,e.id,[...e.codePoints])));let t=null;this.GPOSProcessor&&(t=this.GPOSProcessor.selectScript(e.script,e.language,e.direction)),this.GSUBProcessor&&(t=this.GSUBProcessor.selectScript(e.script,e.language,e.direction)),this.shaper=function(e){Array.isArray(e)||(e=[e]);for(let t of e){let e=vE[t];if(e)return e}return Py}(t),this.plan=new Ey(this.font,t,e.direction),this.shaper.plan(this.plan,this.glyphInfos,e.features);for(let r in this.plan.allFeatures)e.features[r]=!0}substitute(e){this.GSUBProcessor&&(this.plan.process(this.GSUBProcessor,this.glyphInfos),e.glyphs=this.glyphInfos.map((e=>this.font.getGlyph(e.id,e.codePoints))))}position(e){return"BEFORE_GPOS"===this.shaper.zeroMarkWidths&&this.zeroMarkAdvances(e.positions),this.GPOSProcessor&&this.plan.process(this.GPOSProcessor,this.glyphInfos,e.positions),"AFTER_GPOS"===this.shaper.zeroMarkWidths&&this.zeroMarkAdvances(e.positions),"rtl"===e.direction&&(e.glyphs.reverse(),e.positions.reverse()),this.GPOSProcessor&&this.GPOSProcessor.features}zeroMarkAdvances(e){for(let t=0;t<this.glyphInfos.length;t++)this.glyphInfos[t].isMark&&(e[t].xAdvance=0,e[t].yAdvance=0)}cleanup(){this.glyphInfos=null,this.plan=null,this.shaper=null}getAvailableFeatures(e,t){let r=[];return this.GSUBProcessor&&(this.GSUBProcessor.selectScript(e,t),r.push(...Object.keys(this.GSUBProcessor.features))),this.GPOSProcessor&&(this.GPOSProcessor.selectScript(e,t),r.push(...Object.keys(this.GPOSProcessor.features))),r}constructor(e){this.font=e,this.glyphInfos=null,this.plan=null,this.GSUBProcessor=null,this.GPOSProcessor=null,this.fallbackPosition=!0,e.GSUB&&(this.GSUBProcessor=new bE(e,e.GSUB)),e.GPOS&&(this.GPOSProcessor=new yE(e,e.GPOS))}}class EE{layout(e,t,r,n,s){if("string"===typeof t&&(s=n,n=r,r=t,t=[]),"string"===typeof e){null==r&&(r=function(e){let t=e.length,r=0;for(;r<t;){let n=e.charCodeAt(r++);if(55296<=n&&n<=56319&&r<t){let t=e.charCodeAt(r);56320<=t&&t<=57343&&(r++,n=((1023&n)<<10)+(1023&t)+65536)}let s=Ap(n);if("Common"!==s&&"Inherited"!==s&&"Unknown"!==s)return oy[s]}return oy.Unknown}(e));var i=this.font.glyphsForString(e)}else{if(null==r){let t=[];for(let r of e)t.push(...r.codePoints);r=function(e){for(let t=0;t<e.length;t++){let r=Ap(e[t]);if("Common"!==r&&"Inherited"!==r&&"Unknown"!==r)return oy[r]}return oy.Unknown}(t)}i=e}let o=new cy(i,t,r,n,s);return 0===i.length?(o.positions=[],o):(this.engine&&this.engine.setup&&this.engine.setup(o),this.substitute(o),this.position(o),this.hideDefaultIgnorables(o.glyphs,o.positions),this.engine&&this.engine.cleanup&&this.engine.cleanup(),o)}substitute(e){this.engine&&this.engine.substitute&&this.engine.substitute(e)}position(e){e.positions=e.glyphs.map((e=>new uy(e.advanceWidth)));let t=null;this.engine&&this.engine.position&&(t=this.engine.position(e)),t||this.engine&&!this.engine.fallbackPosition||(this.unicodeLayoutEngine||(this.unicodeLayoutEngine=new sy(this.font)),this.unicodeLayoutEngine.positionGlyphs(e.glyphs,e.positions)),t&&t.kern||!1===e.features.kern||!this.font.kern||(this.kernProcessor||(this.kernProcessor=new ny(this.font)),this.kernProcessor.process(e.glyphs,e.positions),e.features.kern=!0)}hideDefaultIgnorables(e,t){let r=this.font.glyphForCodePoint(32);for(let n=0;n<e.length;n++)this.isDefaultIgnorable(e[n].codePoints[0])&&(e[n]=r,t[n].xAdvance=0,t[n].yAdvance=0)}isDefaultIgnorable(e){let t=e>>16;if(0===t)switch(e>>8){case 0:return 173===e;case 3:return 847===e;case 6:return 1564===e;case 23:return 6068<=e&&e<=6069;case 24:return 6155<=e&&e<=6158;case 32:return 8203<=e&&e<=8207||8234<=e&&e<=8238||8288<=e&&e<=8303;case 254:return 65024<=e&&e<=65039||65279===e;case 255:return 65520<=e&&e<=65528;default:return!1}else switch(t){case 1:return 113824<=e&&e<=113827||119155<=e&&e<=119162;case 14:return 917504<=e&&e<=921599;default:return!1}}getAvailableFeatures(e,t){let r=[];return this.engine&&r.push(...this.engine.getAvailableFeatures(e,t)),this.font.kern&&-1===r.indexOf("kern")&&r.push("kern"),r}stringsForGlyph(e){let t=new Set,r=this.font._cmapProcessor.codePointsForGlyph(e);for(let n of r)t.add(String.fromCodePoint(n));if(this.engine&&this.engine.stringsForGlyph)for(let n of this.engine.stringsForGlyph(e))t.add(n);return Array.from(t)}constructor(e){this.font=e,this.unicodeLayoutEngine=null,this.kernProcessor=null,this.font.morx?this.engine=new By(this.font):(this.font.GSUB||this.font.GPOS)&&(this.engine=new BE(this.font))}}const CE={moveTo:"M",lineTo:"L",quadraticCurveTo:"Q",bezierCurveTo:"C",closePath:"Z"};class xE{toFunction(){return e=>{this.commands.forEach((t=>e[t.command].apply(e,t.args)))}}toSVG(){let e=this.commands.map((e=>{let t=e.args.map((e=>Math.round(100*e)/100));return`${CE[e.command]}${t.join(" ")}`}));return e.join("")}get cbox(){if(!this._cbox){let e=new iy;for(let t of this.commands)for(let r=0;r<t.args.length;r+=2)e.addPoint(t.args[r],t.args[r+1]);this._cbox=Object.freeze(e)}return this._cbox}get bbox(){if(this._bbox)return this._bbox;let e=new iy,t=0,r=0,n=e=>Math.pow(1-e,3)*d[p]+3*Math.pow(1-e,2)*e*h[p]+3*(1-e)*Math.pow(e,2)*f[p]+Math.pow(e,3)*g[p];for(let m of this.commands)switch(m.command){case"moveTo":case"lineTo":let[w,v]=m.args;e.addPoint(w,v),t=w,r=v;break;case"quadraticCurveTo":case"bezierCurveTo":if("quadraticCurveTo"===m.command)var[s,i,o,A]=m.args,a=t+2/3*(s-t),l=r+2/3*(i-r),c=o+2/3*(s-o),u=A+2/3*(i-A);else var[a,l,c,u,o,A]=m.args;e.addPoint(o,A);for(var d=[t,r],h=[a,l],f=[c,u],g=[o,A],p=0;p<=1;p++){let t=6*d[p]-12*h[p]+6*f[p],r=-3*d[p]+9*h[p]-9*f[p]+3*g[p];if(m=3*h[p]-3*d[p],0===r){if(0===t)continue;let r=-m/t;0<r&&r<1&&(0===p?e.addPoint(n(r),e.maxY):1===p&&e.addPoint(e.maxX,n(r)));continue}let s=Math.pow(t,2)-4*m*r;if(s<0)continue;let i=(-t+Math.sqrt(s))/(2*r);0<i&&i<1&&(0===p?e.addPoint(n(i),e.maxY):1===p&&e.addPoint(e.maxX,n(i)));let o=(-t-Math.sqrt(s))/(2*r);0<o&&o<1&&(0===p?e.addPoint(n(o),e.maxY):1===p&&e.addPoint(e.maxX,n(o)))}t=o,r=A}return this._bbox=Object.freeze(e)}mapPoints(e){let t=new xE;for(let r of this.commands){let n=[];for(let t=0;t<r.args.length;t+=2){let[s,i]=e(r.args[t],r.args[t+1]);n.push(s,i)}t[r.command](...n)}return t}transform(e,t,r,n,s,i){return this.mapPoints(((o,A)=>[e*o+r*A+s,t*o+n*A+i]))}translate(e,t){return this.transform(1,0,0,1,e,t)}rotate(e){let t=Math.cos(e),r=Math.sin(e);return this.transform(t,r,-r,t,0,0)}scale(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;return this.transform(e,0,0,t,0,0)}constructor(){this.commands=[],this._bbox=null,this._cbox=null}}for(let r of["moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath"])xE.prototype[r]=function(){this._bbox=this._cbox=null;for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.commands.push({command:r,args:t}),this};var IE=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"];class DE{_getPath(){return new xE}_getCBox(){return this.path.cbox}_getBBox(){return this.path.bbox}_getTableMetrics(e){if(this.id<e.metrics.length)return e.metrics.get(this.id);let t=e.metrics.get(e.metrics.length-1);return{advance:t?t.advance:0,bearing:e.bearings.get(this.id-e.metrics.length)||0}}_getMetrics(e){if(this._metrics)return this._metrics;let{advance:t,bearing:r}=this._getTableMetrics(this._font.hmtx);if(this._font.vmtx)var{advance:n,bearing:s}=this._getTableMetrics(this._font.vmtx);else{let t;if("undefined"!==typeof e&&null!==e||({cbox:e}=this),(t=this._font["OS/2"])&&t.version>0)n=Math.abs(t.typoAscender-t.typoDescender),s=t.typoAscender-e.maxY;else{let{hhea:t}=this._font;var n=Math.abs(t.ascent-t.descent),s=t.ascent-e.maxY}}return this._font._variationProcessor&&this._font.HVAR&&(t+=this._font._variationProcessor.getAdvanceAdjustment(this.id,this._font.HVAR)),this._metrics={advanceWidth:t,advanceHeight:n,leftBearing:r,topBearing:s}}get cbox(){return this._getCBox()}get bbox(){return this._getBBox()}get path(){return this._getPath()}getScaledPath(e){let t=1/this._font.unitsPerEm*e;return this.path.scale(t)}get advanceWidth(){return this._getMetrics().advanceWidth}get advanceHeight(){return this._getMetrics().advanceHeight}get ligatureCaretPositions(){}_getName(){let{post:e}=this._font;if(!e)return null;switch(e.version){case 1:return IE[this.id];case 2:let t=e.glyphNameIndex[this.id];return t<IE.length?IE[t]:e.names[t-IE.length];case 2.5:return IE[this.id+e.offsets[this.id]];case 4:return String.fromCharCode(e.map[this.id])}}get name(){return this._getName()}render(e,t){e.save();let r=1/this._font.head.unitsPerEm*t;e.scale(r,r),this.path.toFunction()(e),e.fill(),e.restore()}constructor(e,t,r){this.id=e,this.codePoints=t,this._font=r,this.isMark=this.codePoints.length>0&&this.codePoints.every(lp),this.isLigature=this.codePoints.length>1}}Gg([Ep],DE.prototype,"cbox",null),Gg([Ep],DE.prototype,"bbox",null),Gg([Ep],DE.prototype,"path",null),Gg([Ep],DE.prototype,"advanceWidth",null),Gg([Ep],DE.prototype,"advanceHeight",null),Gg([Ep],DE.prototype,"name",null);let QE=new kg({numberOfContours:wg,xMin:wg,yMin:wg,xMax:wg,yMax:wg});class PE{copy(){return new PE(this.onCurve,this.endContour,this.x,this.y)}constructor(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.onCurve=e,this.endContour=t,this.x=r,this.y=n}}class FE{constructor(e,t,r){this.glyphID=e,this.dx=t,this.dy=r,this.pos=0,this.scaleX=this.scaleY=1,this.scale01=this.scale10=0}}class LE extends DE{_getCBox(e){if(this._font._variationProcessor&&!e)return this.path.cbox;let t=this._font._getTableStream("glyf");t.pos+=this._font.loca.offsets[this.id];let r=QE.decode(t),n=new iy(r.xMin,r.yMin,r.xMax,r.yMax);return Object.freeze(n)}_parseGlyphCoord(e,t,r,n){if(r){var s=e.readUInt8();n||(s=-s),s+=t}else if(n)s=t;else s=t+e.readInt16BE();return s}_decode(){let e=this._font.loca.offsets[this.id];if(e===this._font.loca.offsets[this.id+1])return null;let t=this._font._getTableStream("glyf");t.pos+=e;let r=t.pos,n=QE.decode(t);return n.numberOfContours>0?this._decodeSimple(n,t):n.numberOfContours<0&&this._decodeComposite(n,t,r),n}_decodeSimple(e,t){e.points=[];let r=new xg(fg,e.numberOfContours).decode(t);e.instructions=new xg(hg,fg).decode(t);let n=[],s=r[r.length-1]+1;for(;n.length<s;){var i=t.readUInt8();if(n.push(i),8&i){let e=t.readUInt8();for(let t=0;t<e;t++)n.push(i)}}for(var o=0;o<n.length;o++){i=n[o];let t=new PE(!!(1&i),r.indexOf(o)>=0,0,0);e.points.push(t)}let A=0;for(o=0;o<n.length;o++){i=n[o];e.points[o].x=A=this._parseGlyphCoord(t,A,2&i,16&i)}let a=0;for(o=0;o<n.length;o++){i=n[o];e.points[o].y=a=this._parseGlyphCoord(t,a,4&i,32&i)}if(this._font._variationProcessor){let t=e.points.slice();t.push(...this._getPhantomPoints(e)),this._font._variationProcessor.transformPoints(this.id,t),e.phantomPoints=t.slice(-4)}}_decodeComposite(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;e.components=[];let n=!1,s=32;for(;32&s;){s=t.readUInt16BE();let a=t.pos-r,l=t.readUInt16BE();if(n||(n=0!==(256&s)),1&s)var i=t.readInt16BE(),o=t.readInt16BE();else i=t.readInt8(),o=t.readInt8();(A=new FE(l,i,o)).pos=a,8&s?A.scaleX=A.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824:64&s?(A.scaleX=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,A.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824):128&s&&(A.scaleX=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,A.scale01=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,A.scale10=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,A.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824),e.components.push(A)}if(this._font._variationProcessor){let t=[];for(let r=0;r<e.components.length;r++){var A=e.components[r];t.push(new PE(!0,!0,A.dx,A.dy))}t.push(...this._getPhantomPoints(e)),this._font._variationProcessor.transformPoints(this.id,t),e.phantomPoints=t.splice(-4,4);for(let r=0;r<t.length;r++){let n=t[r];e.components[r].dx=n.x,e.components[r].dy=n.y}}return n}_getPhantomPoints(e){let t=this._getCBox(!0);null==this._metrics&&(this._metrics=DE.prototype._getMetrics.call(this,t));let{advanceWidth:r,advanceHeight:n,leftBearing:s,topBearing:i}=this._metrics;return[new PE(!1,!0,e.xMin-s,0),new PE(!1,!0,e.xMin-s+r,0),new PE(!1,!0,0,e.yMax+i),new PE(!1,!0,0,e.yMax+i+n)]}_getContours(){let e=this._decode();if(!e)return[];let t=[];if(e.numberOfContours<0)for(let i of e.components){let e=this._font.getGlyph(i.glyphID)._getContours();for(let r=0;r<e.length;r++){let n=e[r];for(let e=0;e<n.length;e++){let r=n[e],s=r.x*i.scaleX+r.y*i.scale01+i.dx,o=r.y*i.scaleY+r.x*i.scale10+i.dy;t.push(new PE(r.onCurve,r.endContour,s,o))}}}else t=e.points||[];e.phantomPoints&&!this._font.directory.tables.HVAR&&(this._metrics.advanceWidth=e.phantomPoints[1].x-e.phantomPoints[0].x,this._metrics.advanceHeight=e.phantomPoints[3].y-e.phantomPoints[2].y,this._metrics.leftBearing=e.xMin-e.phantomPoints[0].x,this._metrics.topBearing=e.phantomPoints[2].y-e.yMax);let r=[],n=[];for(let i=0;i<t.length;i++){var s=t[i];n.push(s),s.endContour&&(r.push(n),n=[])}return r}_getMetrics(){if(this._metrics)return this._metrics;let e=this._getCBox(!0);return super._getMetrics(e),this._font._variationProcessor&&!this._font.HVAR&&this.path,this._metrics}_getPath(){let e=this._getContours(),t=new xE;for(let n=0;n<e.length;n++){let s=e[n],i=s[0],o=s[s.length-1],A=0;if(i.onCurve){var r=null;A=1}else{i=o.onCurve?o:new PE(!1,!1,(i.x+o.x)/2,(i.y+o.y)/2);r=i}t.moveTo(i.x,i.y);for(let e=A;e<s.length;e++){let n=s[e],o=0===e?i:s[e-1];if(o.onCurve&&n.onCurve)t.lineTo(n.x,n.y);else if(o.onCurve&&!n.onCurve)r=n;else if(o.onCurve||n.onCurve){if(o.onCurve||!n.onCurve)throw new Error("Unknown TTF path state");t.quadraticCurveTo(r.x,r.y,n.x,n.y);r=null}else{let e=(o.x+n.x)/2,s=(o.y+n.y)/2;t.quadraticCurveTo(o.x,o.y,e,s);var r=n}}r&&t.quadraticCurveTo(r.x,r.y,i.x,i.y),t.closePath()}return t}constructor(){super(...arguments),jg(this,"type","TTF")}}class ME extends DE{_getName(){return this._font.CFF2?super._getName():this._font["CFF "].getGlyphName(this.id)}bias(e){return e.length<1240?107:e.length<33900?1131:32768}_getPath(){let e=this._font.CFF2||this._font["CFF "],{stream:t}=e,r=e.topDict.CharStrings[this.id],n=r.offset+r.length;t.pos=r.offset;let s,i,o=new xE,A=[],a=[],l=null,c=0,u=0,d=0,h=!1;this._usedGsubrs=s={},this._usedSubrs=i={};let f=e.globalSubrIndex||[],g=this.bias(f),p=e.privateDictForGlyph(this.id)||{},m=p.Subrs||[],w=this.bias(m),v=e.topDict.vstore&&e.topDict.vstore.itemVariationStore,b=p.vsindex,y=this._font._variationProcessor;function B(){null==l&&(l=A.shift()+p.nominalWidthX)}function E(){return A.length%2!==0&&B(),c+=A.length>>1,A.length=0}function C(e,t){h&&o.closePath(),o.moveTo(e,t),h=!0}let x=function(){for(;t.pos<n;){let p=t.readUInt8();if(p<32){let l,I,D,Q,P,F,L,M,S,N,k,R,T,W,j,G;switch(p){case 1:case 3:case 18:case 23:E();break;case 4:A.length>1&&B(),d+=A.shift(),C(u,d);break;case 5:for(;A.length>=2;)u+=A.shift(),d+=A.shift(),o.lineTo(u,d);break;case 6:case 7:for(D=6===p;A.length>=1;)D?u+=A.shift():d+=A.shift(),o.lineTo(u,d),D=!D;break;case 8:for(;A.length>0;)Q=u+A.shift(),P=d+A.shift(),F=Q+A.shift(),L=P+A.shift(),u=F+A.shift(),d=L+A.shift(),o.bezierCurveTo(Q,P,F,L,u,d);break;case 10:if(l=A.pop()+w,I=m[l],I){i[l]=!0;let e=t.pos,r=n;t.pos=I.offset,n=I.offset+I.length,x(),t.pos=e,n=r}break;case 11:if(e.version>=2)break;return;case 14:if(e.version>=2)break;A.length>0&&B(),h&&(o.closePath(),h=!1);break;case 15:if(e.version<2)throw new Error("vsindex operator not supported in CFF v1");b=A.pop();break;case 16:{if(e.version<2)throw new Error("blend operator not supported in CFF v1");if(!y)throw new Error("blend operator in non-variation font");let t=y.getBlendVector(v,b),r=A.pop(),n=r*t.length,s=A.length-n,i=s-r;for(let e=0;e<r;e++){let r=A[i+e];for(let e=0;e<t.length;e++)r+=t[e]*A[s++];A[i+e]=r}for(;n--;)A.pop();break}case 19:case 20:E(),t.pos+=c+7>>3;break;case 21:A.length>2&&B(),u+=A.shift(),d+=A.shift(),C(u,d);break;case 22:A.length>1&&B(),u+=A.shift(),C(u,d);break;case 24:for(;A.length>=8;)Q=u+A.shift(),P=d+A.shift(),F=Q+A.shift(),L=P+A.shift(),u=F+A.shift(),d=L+A.shift(),o.bezierCurveTo(Q,P,F,L,u,d);u+=A.shift(),d+=A.shift(),o.lineTo(u,d);break;case 25:for(;A.length>=8;)u+=A.shift(),d+=A.shift(),o.lineTo(u,d);Q=u+A.shift(),P=d+A.shift(),F=Q+A.shift(),L=P+A.shift(),u=F+A.shift(),d=L+A.shift(),o.bezierCurveTo(Q,P,F,L,u,d);break;case 26:for(A.length%2&&(u+=A.shift());A.length>=4;)Q=u,P=d+A.shift(),F=Q+A.shift(),L=P+A.shift(),u=F,d=L+A.shift(),o.bezierCurveTo(Q,P,F,L,u,d);break;case 27:for(A.length%2&&(d+=A.shift());A.length>=4;)Q=u+A.shift(),P=d,F=Q+A.shift(),L=P+A.shift(),u=F+A.shift(),d=L,o.bezierCurveTo(Q,P,F,L,u,d);break;case 28:A.push(t.readInt16BE());break;case 29:if(l=A.pop()+g,I=f[l],I){s[l]=!0;let e=t.pos,r=n;t.pos=I.offset,n=I.offset+I.length,x(),t.pos=e,n=r}break;case 30:case 31:for(D=31===p;A.length>=4;)D?(Q=u+A.shift(),P=d,F=Q+A.shift(),L=P+A.shift(),d=L+A.shift(),u=F+(1===A.length?A.shift():0)):(Q=u,P=d+A.shift(),F=Q+A.shift(),L=P+A.shift(),u=F+A.shift(),d=L+(1===A.length?A.shift():0)),o.bezierCurveTo(Q,P,F,L,u,d),D=!D;break;case 12:switch(p=t.readUInt8(),p){case 3:let e=A.pop(),t=A.pop();A.push(e&&t?1:0);break;case 4:e=A.pop(),t=A.pop(),A.push(e||t?1:0);break;case 5:e=A.pop(),A.push(e?0:1);break;case 9:e=A.pop(),A.push(Math.abs(e));break;case 10:e=A.pop(),t=A.pop(),A.push(e+t);break;case 11:e=A.pop(),t=A.pop(),A.push(e-t);break;case 12:e=A.pop(),t=A.pop(),A.push(e/t);break;case 14:e=A.pop(),A.push(-e);break;case 15:e=A.pop(),t=A.pop(),A.push(e===t?1:0);break;case 18:A.pop();break;case 20:let n=A.pop(),s=A.pop();a[s]=n;break;case 21:s=A.pop(),A.push(a[s]||0);break;case 22:let i=A.pop(),l=A.pop(),c=A.pop(),h=A.pop();A.push(c<=h?i:l);break;case 23:A.push(Math.random());break;case 24:e=A.pop(),t=A.pop(),A.push(e*t);break;case 26:e=A.pop(),A.push(Math.sqrt(e));break;case 27:e=A.pop(),A.push(e,e);break;case 28:e=A.pop(),t=A.pop(),A.push(t,e);break;case 29:s=A.pop(),s<0?s=0:s>A.length-1&&(s=A.length-1),A.push(A[s]);break;case 30:let f=A.pop(),g=A.pop();if(g>=0)for(;g>0;){var r=A[f-1];for(let e=f-2;e>=0;e--)A[e+1]=A[e];A[0]=r,g--}else for(;g<0;){r=A[0];for(let e=0;e<=f;e++)A[e]=A[e+1];A[f-1]=r,g++}break;case 34:Q=u+A.shift(),P=d,F=Q+A.shift(),L=P+A.shift(),M=F+A.shift(),S=L,N=M+A.shift(),k=S,R=N+A.shift(),T=k,W=R+A.shift(),j=T,u=W,d=j,o.bezierCurveTo(Q,P,F,L,M,S),o.bezierCurveTo(N,k,R,T,W,j);break;case 35:G=[];for(let r=0;r<=5;r++)u+=A.shift(),d+=A.shift(),G.push(u,d);o.bezierCurveTo(...G.slice(0,6)),o.bezierCurveTo(...G.slice(6)),A.shift();break;case 36:Q=u+A.shift(),P=d+A.shift(),F=Q+A.shift(),L=P+A.shift(),M=F+A.shift(),S=L,N=M+A.shift(),k=S,R=N+A.shift(),T=k+A.shift(),W=R+A.shift(),j=T,u=W,d=j,o.bezierCurveTo(Q,P,F,L,M,S),o.bezierCurveTo(N,k,R,T,W,j);break;case 37:let m=u,w=d;G=[];for(let r=0;r<=4;r++)u+=A.shift(),d+=A.shift(),G.push(u,d);Math.abs(u-m)>Math.abs(d-w)?(u+=A.shift(),d=w):(u=m,d+=A.shift()),G.push(u,d),o.bezierCurveTo(...G.slice(0,6)),o.bezierCurveTo(...G.slice(6));break;default:throw new Error(`Unknown op: 12 ${p}`)}break;default:throw new Error(`Unknown op: ${p}`)}}else if(p<247)A.push(p-139);else if(p<251){var l=t.readUInt8();A.push(256*(p-247)+l+108)}else if(p<255){l=t.readUInt8();A.push(256*-(p-251)-l-108)}else A.push(t.readInt32BE()/65536)}};return x(),h&&o.closePath(),o}constructor(){super(...arguments),jg(this,"type","CFF")}}let SE=new kg({originX:fg,originY:fg,type:new Mg(4),data:new Pg((e=>e.parent.buflen-e._currentOffset))});class NE extends LE{getImageForSize(e){for(let i=0;i<this._font.sbix.imageTables.length;i++){var t=this._font.sbix.imageTables[i];if(t.ppem>=e)break}let r=t.imageOffsets,n=r[this.id],s=r[this.id+1];return n===s?null:(this._font.stream.pos=n,SE.decode(this._font.stream,{buflen:s-n}))}render(e,t){let r=this.getImageForSize(t);if(null!=r){let n=t/this._font.unitsPerEm;e.image(r.data,{height:t,x:r.originX,y:(this.bbox.minY-r.originY)*n})}this._font.sbix.flags.renderOutlines&&super.render(e,t)}constructor(){super(...arguments),jg(this,"type","SBIX")}}class kE{constructor(e,t){this.glyph=e,this.color=t}}class RE extends DE{_getBBox(){let e=new iy;for(let t=0;t<this.layers.length;t++){let r=this.layers[t].glyph.bbox;e.addPoint(r.minX,r.minY),e.addPoint(r.maxX,r.maxY)}return e}get layers(){let e=this._font.CPAL,t=this._font.COLR,r=0,n=t.baseGlyphRecord.length-1;for(;r<=n;){let e=r+n>>1;var s=t.baseGlyphRecord[e];if(this.id<s.gid)n=e-1;else{if(!(this.id>s.gid)){var i=s;break}r=e+1}}if(null==i){var o=this._font._getBaseGlyph(this.id);return[new kE(o,a={red:0,green:0,blue:0,alpha:255})]}let A=[];for(let l=i.firstLayerIndex;l<i.firstLayerIndex+i.numLayers;l++){s=t.layerRecords[l];var a=e.colorRecords[s.paletteIndex];o=this._font._getBaseGlyph(s.gid);A.push(new kE(o,a))}return A}render(e,t){for(let{glyph:r,color:n}of this.layers)e.fillColor([n.red,n.green,n.blue],n.alpha/255*100),r.render(e,t)}constructor(){super(...arguments),jg(this,"type","COLR")}}class TE{normalizeCoords(e){let t=[];for(var r=0;r<this.font.fvar.axis.length;r++){let n=this.font.fvar.axis[r];e[r]<n.defaultValue?t.push((e[r]-n.defaultValue+Number.EPSILON)/(n.defaultValue-n.minValue+Number.EPSILON)):t.push((e[r]-n.defaultValue+Number.EPSILON)/(n.maxValue-n.defaultValue+Number.EPSILON))}if(this.font.avar)for(r=0;r<this.font.avar.segment.length;r++){let e=this.font.avar.segment[r];for(let n=0;n<e.correspondence.length;n++){let s=e.correspondence[n];if(n>=1&&t[r]<s.fromCoord){let i=e.correspondence[n-1];t[r]=((t[r]-i.fromCoord)*(s.toCoord-i.toCoord)+Number.EPSILON)/(s.fromCoord-i.fromCoord+Number.EPSILON)+i.toCoord;break}}}return t}transformPoints(e,t){if(!this.font.fvar||!this.font.gvar)return;let{gvar:r}=this.font;if(e>=r.glyphCount)return;let n=r.offsets[e];if(n===r.offsets[e+1])return;let{stream:s}=this.font;if(s.pos=n,s.pos>=s.length)return;let i=s.readUInt16BE(),o=n+s.readUInt16BE();if(32768&i){var A=s.pos;s.pos=o;var a=this.decodePoints();o=s.pos,s.pos=A}let l=t.map((e=>e.copy()));i&=4095;for(let g=0;g<i;g++){let e=s.readUInt16BE(),n=s.readUInt16BE();if(32768&n){var c=[];for(let e=0;e<r.axisCount;e++)c.push(s.readInt16BE()/16384)}else{if((4095&n)>=r.globalCoordCount)throw new Error("Invalid gvar table");c=r.globalCoords[4095&n]}if(16384&n){var u=[];for(let e=0;e<r.axisCount;e++)u.push(s.readInt16BE()/16384);var d=[];for(let e=0;e<r.axisCount;e++)d.push(s.readInt16BE()/16384)}let i=this.tupleFactor(n,c,u,d);if(0===i){o+=e;continue}A=s.pos;if(s.pos=o,8192&n)var h=this.decodePoints();else h=a;let g=0===h.length?t.length:h.length,p=this.decodeDeltas(g),m=this.decodeDeltas(g);if(0===h.length)for(let r=0;r<t.length;r++){var f=t[r];f.x+=Math.round(p[r]*i),f.y+=Math.round(m[r]*i)}else{let e=l.map((e=>e.copy())),r=t.map((()=>!1));for(let n=0;n<h.length;n++){let s=h[n];if(s<t.length){let t=e[s];r[s]=!0,t.x+=p[n]*i,t.y+=m[n]*i}}this.interpolateMissingDeltas(e,l,r);for(let n=0;n<t.length;n++){let r=e[n].x-l[n].x,s=e[n].y-l[n].y;t[n].x=Math.round(t[n].x+r),t[n].y=Math.round(t[n].y+s)}}o+=e,s.pos=A}}decodePoints(){let e=this.font.stream,t=e.readUInt8();128&t&&(t=(127&t)<<8|e.readUInt8());let r=new Uint16Array(t),n=0,s=0;for(;n<t;){let i=e.readUInt8(),o=1+(127&i),A=128&i?e.readUInt16:e.readUInt8;for(let a=0;a<o&&n<t;a++)s+=A.call(e),r[n++]=s}return r}decodeDeltas(e){let t=this.font.stream,r=0,n=new Int16Array(e);for(;r<e;){let s=t.readUInt8(),i=1+(63&s);if(128&s)r+=i;else{let o=64&s?t.readInt16BE:t.readInt8;for(let s=0;s<i&&r<e;s++)n[r++]=o.call(t)}}return n}tupleFactor(e,t,r,n){let s=this.normalizedCoords,{gvar:i}=this.font,o=1;for(let A=0;A<i.axisCount;A++)if(0!==t[A]){if(0===s[A])return 0;if(0===(16384&e)){if(s[A]<Math.min(0,t[A])||s[A]>Math.max(0,t[A]))return 0;o=(o*s[A]+Number.EPSILON)/(t[A]+Number.EPSILON)}else{if(s[A]<r[A]||s[A]>n[A])return 0;o=s[A]<t[A]?o*(s[A]-r[A]+Number.EPSILON)/(t[A]-r[A]+Number.EPSILON):o*(n[A]-s[A]+Number.EPSILON)/(n[A]-t[A]+Number.EPSILON)}}return o}interpolateMissingDeltas(e,t,r){if(0===e.length)return;let n=0;for(;n<e.length;){let s=n,i=n,o=e[i];for(;!o.endContour;)o=e[++i];for(;n<=i&&!r[n];)n++;if(n>i)continue;let A=n,a=n;for(n++;n<=i;)r[n]&&(this.deltaInterpolate(a+1,n-1,a,n,t,e),a=n),n++;a===A?this.deltaShift(s,i,a,t,e):(this.deltaInterpolate(a+1,i,a,A,t,e),A>0&&this.deltaInterpolate(s,A-1,a,A,t,e)),n=i+1}}deltaInterpolate(e,t,r,n,s,i){if(e>t)return;let o=["x","y"];for(let a=0;a<o.length;a++){let l=o[a];if(s[r][l]>s[n][l]){var A=r;r=n,n=A}let c=s[r][l],u=s[n][l],d=i[r][l],h=i[n][l];if(c!==u||d===h){let r=c===u?0:(h-d)/(u-c);for(let n=e;n<=t;n++){let e=s[n][l];e<=c?e+=d-c:e>=u?e+=h-u:e=d+(e-c)*r,i[n][l]=e}}}}deltaShift(e,t,r,n,s){let i=s[r].x-n[r].x,o=s[r].y-n[r].y;if(0!==i||0!==o)for(let A=e;A<=t;A++)A!==r&&(s[A].x+=i,s[A].y+=o)}getAdvanceAdjustment(e,t){let r,n;if(t.advanceWidthMapping){let s=e;s>=t.advanceWidthMapping.mapCount&&(s=t.advanceWidthMapping.mapCount-1);t.advanceWidthMapping.entryFormat;({outerIndex:r,innerIndex:n}=t.advanceWidthMapping.mapData[s])}else r=0,n=e;return this.getDelta(t.itemVariationStore,r,n)}getDelta(e,t,r){if(t>=e.itemVariationData.length)return 0;let n=e.itemVariationData[t];if(r>=n.deltaSets.length)return 0;let s=n.deltaSets[r],i=this.getBlendVector(e,t),o=0;for(let A=0;A<n.regionIndexCount;A++)o+=s.deltas[A]*i[A];return o}getBlendVector(e,t){let r=e.itemVariationData[t];if(this.blendVectors.has(r))return this.blendVectors.get(r);let n=this.normalizedCoords,s=[];for(let i=0;i<r.regionIndexCount;i++){let t=1,o=r.regionIndexes[i],A=e.variationRegionList.variationRegions[o];for(let e=0;e<A.length;e++){let r,s=A[e];r=s.startCoord>s.peakCoord||s.peakCoord>s.endCoord||s.startCoord<0&&s.endCoord>0&&0!==s.peakCoord||0===s.peakCoord?1:n[e]<s.startCoord||n[e]>s.endCoord?0:n[e]===s.peakCoord?1:n[e]<s.peakCoord?(n[e]-s.startCoord+Number.EPSILON)/(s.peakCoord-s.startCoord+Number.EPSILON):(s.endCoord-n[e]+Number.EPSILON)/(s.endCoord-s.peakCoord+Number.EPSILON),t*=r}s[i]=t}return this.blendVectors.set(r,s),s}constructor(e,t){this.font=e,this.normalizedCoords=this.normalizeCoords(t),this.blendVectors=new Map}}Promise.resolve();class WE{includeGlyph(e){return"object"===typeof e&&(e=e.id),null==this.mapping[e]&&(this.glyphs.push(e),this.mapping[e]=this.glyphs.length-1),this.mapping[e]}constructor(e){this.font=e,this.glyphs=[],this.mapping={},this.includeGlyph(0)}}class jE{static size(e){return e>=0&&e<=255?1:2}static encode(e,t){t>=0&&t<=255?e.writeUInt8(t):e.writeInt16BE(t)}}let GE=new kg({numberOfContours:wg,xMin:wg,yMin:wg,xMax:wg,yMax:wg,endPtsOfContours:new xg(fg,"numberOfContours"),instructions:new xg(hg,fg),flags:new xg(hg,0),xPoints:new xg(jE,0),yPoints:new xg(jE,0)});class XE{encodeSimple(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],r=[],n=[],s=[],i=[],o=0,A=0,a=0,l=0,c=0;for(let p=0;p<e.commands.length;p++){let t=e.commands[p];for(let r=0;r<t.args.length;r+=2){let u=t.args[r],d=t.args[r+1],h=0;if("quadraticCurveTo"===t.command&&2===r){let t=e.commands[p+1];if(t&&"quadraticCurveTo"===t.command){let e=(A+t.args[0])/2,r=(a+t.args[1])/2;if(u===e&&d===r)continue}}"quadraticCurveTo"===t.command&&0===r||(h|=1),h=this._encodePoint(u,A,n,h,2,16),h=this._encodePoint(d,a,s,h,4,32),h===l&&o<255?(i[i.length-1]|=8,o++):(o>0&&(i.push(o),o=0),i.push(h),l=h),A=u,a=d,c++}"closePath"===t.command&&r.push(c-1)}e.commands.length>1&&"closePath"!==e.commands[e.commands.length-1].command&&r.push(c-1);let u=e.bbox,d={numberOfContours:r.length,xMin:u.minX,yMin:u.minY,xMax:u.maxX,yMax:u.maxY,endPtsOfContours:r,instructions:t,flags:i,xPoints:n,yPoints:s},h=GE.size(d),f=4-h%4,g=new lg(h+f);return GE.encode(g,d),0!==f&&g.fill(0,f),g.buffer}_encodePoint(e,t,r,n,s,i){let o=e-t;return e===t?n|=i:(-255<=o&&o<=255&&(n|=s,o<0?o=-o:n|=i),r.push(o)),n}}class OE extends WE{_addGlyph(e){let t=this.font.getGlyph(e),r=t._decode(),n=this.font.loca.offsets[e],s=this.font.loca.offsets[e+1],i=this.font._getTableStream("glyf");i.pos+=n;let o=i.readBuffer(s-n);if(r&&r.numberOfContours<0){o=new Uint8Array(o);let t=new DataView(o.buffer);for(let n of r.components)e=this.includeGlyph(n.glyphID),t.setUint16(n.pos,e)}else r&&this.font._variationProcessor&&(o=this.glyphEncoder.encodeSimple(t.path,r.instructions));return this.glyf.push(o),this.loca.offsets.push(this.offset),this.hmtx.metrics.push({advance:t.advanceWidth,bearing:t._getMetrics().leftBearing}),this.offset+=o.length,this.glyf.length-1}encode(){this.glyf=[],this.offset=0,this.loca={offsets:[],version:this.font.loca.version},this.hmtx={metrics:[],bearings:[]};let e=0;for(;e<this.glyphs.length;)this._addGlyph(this.glyphs[e++]);let t=up(this.font.maxp);t.numGlyphs=this.glyf.length,this.loca.offsets.push(this.offset);let r=up(this.font.head);r.indexToLocFormat=this.loca.version;let n=up(this.font.hhea);return n.numberOfMetrics=this.hmtx.metrics.length,Zb.toBuffer({tables:{head:r,hhea:n,loca:this.loca,maxp:t,"cvt ":this.font["cvt "],prep:this.font.prep,glyf:this.glyf,hmtx:this.hmtx,fpgm:this.font.fpgm}})}constructor(e){super(e),this.glyphEncoder=new XE}}class zE extends WE{subsetCharstrings(){this.charstrings=[];let e={};for(let t of this.glyphs){this.charstrings.push(this.cff.getCharString(t));let r=this.font.getGlyph(t);r.path;for(let t in r._usedGsubrs)e[t]=!0}this.gsubrs=this.subsetSubrs(this.cff.globalSubrIndex,e)}subsetSubrs(e,t){let r=[];for(let n=0;n<e.length;n++){let s=e[n];t[n]?(this.cff.stream.pos=s.offset,r.push(this.cff.stream.readBuffer(s.length))):r.push(new Uint8Array([11]))}return r}subsetFontdict(e){e.FDArray=[],e.FDSelect={version:0,fds:[]};let t={},r=[],n={};for(let s of this.glyphs){let i=this.cff.fdForGlyph(s);if(null==i)continue;t[i]||(e.FDArray.push(Object.assign({},this.cff.topDict.FDArray[i])),r.push({}),n[i]=e.FDArray.length-1),t[i]=!0,e.FDSelect.fds.push(n[i]);let o=this.font.getGlyph(s);o.path;for(let e in o._usedSubrs)r[n[i]][e]=!0}for(let s=0;s<e.FDArray.length;s++){let t=e.FDArray[s];delete t.FontName,t.Private&&t.Private.Subrs&&(t.Private=Object.assign({},t.Private),t.Private.Subrs=this.subsetSubrs(t.Private.Subrs,r[s]))}}createCIDFontdict(e){let t={};for(let n of this.glyphs){let e=this.font.getGlyph(n);e.path;for(let r in e._usedSubrs)t[r]=!0}let r=Object.assign({},this.cff.topDict.Private);return this.cff.topDict.Private&&this.cff.topDict.Private.Subrs&&(r.Subrs=this.subsetSubrs(this.cff.topDict.Private.Subrs,t)),e.FDArray=[{Private:r}],e.FDSelect={version:3,nRanges:1,ranges:[{first:0,fd:0}],sentinel:this.charstrings.length}}addString(e){return e?(this.strings||(this.strings=[]),this.strings.push(e),pm.length+this.strings.length-1):null}encode(){this.subsetCharstrings();let e={version:this.charstrings.length>255?2:1,ranges:[{first:1,nLeft:this.charstrings.length-2}]},t=Object.assign({},this.cff.topDict);t.Private=null,t.charset=e,t.Encoding=null,t.CharStrings=this.charstrings;for(let n of["version","Notice","Copyright","FullName","FamilyName","Weight","PostScript","BaseFontName","FontName"])t[n]=this.addString(this.cff.string(t[n]));t.ROS=[this.addString("Adobe"),this.addString("Identity"),0],t.CIDCount=this.charstrings.length,this.cff.isCIDFont?this.subsetFontdict(t):this.createCIDFontdict(t);let r={version:1,hdrSize:this.cff.hdrSize,offSize:4,header:this.cff.header,nameIndex:[this.cff.postscriptName],topDictIndex:[t],stringIndex:this.strings,globalSubrIndex:this.gsubrs};return ww.toBuffer(r)}constructor(e){if(super(e),this.cff=this.font["CFF "],!this.cff)throw new Error("Not a CFF Font")}}class YE{static probe(e){let t=_b.decode(e.slice(0,4));return"true"===t||"OTTO"===t||t===String.fromCharCode(0,1,0,0)}setDefaultLanguage(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.defaultLanguage=e}_getTable(e){if(!(e.tag in this._tables))try{this._tables[e.tag]=this._decodeTable(e)}catch(JM){mp&&(console.error(`Error decoding table ${e.tag}`),console.error(JM.stack))}return this._tables[e.tag]}_getTableStream(e){let t=this.directory.tables[e];return t?(this.stream.pos=t.offset,this.stream):null}_decodeDirectory(){return this.directory=Zb.decode(this.stream,{_startOffset:0})}_decodeTable(e){let t=this.stream.pos,r=this._getTableStream(e.tag),n=Ub[e.tag].decode(r,this,e.length);return this.stream.pos=t,n}getName(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.defaultLanguage||yp,r=this.name&&this.name.records[e];return r&&(r[t]||r[this.defaultLanguage]||r[yp]||r.en||r[Object.keys(r)[0]])||null}get postscriptName(){return this.getName("postscriptName")}get fullName(){return this.getName("fullName")}get familyName(){return this.getName("fontFamily")}get subfamilyName(){return this.getName("fontSubfamily")}get copyright(){return this.getName("copyright")}get version(){return this.getName("version")}get ascent(){return this.hhea.ascent}get descent(){return this.hhea.descent}get lineGap(){return this.hhea.lineGap}get underlinePosition(){return this.post.underlinePosition}get underlineThickness(){return this.post.underlineThickness}get italicAngle(){return this.post.italicAngle}get capHeight(){let e=this["OS/2"];return e?e.capHeight:this.ascent}get xHeight(){let e=this["OS/2"];return e?e.xHeight:0}get numGlyphs(){return this.maxp.numGlyphs}get unitsPerEm(){return this.head.unitsPerEm}get bbox(){return Object.freeze(new iy(this.head.xMin,this.head.yMin,this.head.xMax,this.head.yMax))}get _cmapProcessor(){return new ry(this.cmap)}get characterSet(){return this._cmapProcessor.getCharacterSet()}hasGlyphForCodePoint(e){return!!this._cmapProcessor.lookup(e)}glyphForCodePoint(e){return this.getGlyph(this._cmapProcessor.lookup(e),[e])}glyphsForString(e){let t=[],r=e.length,n=0,s=-1,i=-1;for(;n<=r;){let o=0,A=0;if(n<r){if(o=e.charCodeAt(n++),55296<=o&&o<=56319&&n<r){let t=e.charCodeAt(n);56320<=t&&t<=57343&&(n++,o=((1023&o)<<10)+(1023&t)+65536)}A=65024<=o&&o<=65039||917760<=o&&o<=917999?1:0}else n++;0===i&&1===A?t.push(this.getGlyph(this._cmapProcessor.lookup(s,o),[s,o])):0===i&&0===A&&t.push(this.glyphForCodePoint(s)),s=o,i=A}return t}get _layoutEngine(){return new EE(this)}layout(e,t,r,n,s){return this._layoutEngine.layout(e,t,r,n,s)}stringsForGlyph(e){return this._layoutEngine.stringsForGlyph(e)}get availableFeatures(){return this._layoutEngine.getAvailableFeatures()}getAvailableFeatures(e,t){return this._layoutEngine.getAvailableFeatures(e,t)}_getBaseGlyph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return this._glyphs[e]||(this.directory.tables.glyf?this._glyphs[e]=new LE(e,t,this):(this.directory.tables["CFF "]||this.directory.tables.CFF2)&&(this._glyphs[e]=new ME(e,t,this))),this._glyphs[e]||null}getGlyph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return this._glyphs[e]||(this.directory.tables.sbix?this._glyphs[e]=new NE(e,t,this):this.directory.tables.COLR&&this.directory.tables.CPAL?this._glyphs[e]=new RE(e,t,this):this._getBaseGlyph(e,t)),this._glyphs[e]||null}createSubset(){return this.directory.tables["CFF "]?new zE(this):new OE(this)}get variationAxes(){let e={};if(!this.fvar)return e;for(let t of this.fvar.axis)e[t.axisTag.trim()]={name:t.name.en,min:t.minValue,default:t.defaultValue,max:t.maxValue};return e}get namedVariations(){let e={};if(!this.fvar)return e;for(let t of this.fvar.instance){let r={};for(let e=0;e<this.fvar.axis.length;e++){r[this.fvar.axis[e].axisTag.trim()]=t.coord[e]}e[t.name.en]=r}return e}getVariation(e){if(!this.directory.tables.fvar||!(this.directory.tables.gvar&&this.directory.tables.glyf||this.directory.tables.CFF2))throw new Error("Variations require a font with the fvar, gvar and glyf, or CFF2 tables.");if("string"===typeof e&&(e=this.namedVariations[e]),"object"!==typeof e)throw new Error("Variation settings must be either a variation name or settings object.");let t=this.fvar.axis.map(((t,r)=>{let n=t.axisTag.trim();return n in e?Math.max(t.minValue,Math.min(t.maxValue,e[n])):t.defaultValue})),r=new og(this.stream.buffer);r.pos=this._directoryPos;let n=new YE(r,t);return n._tables=this._tables,n}get _variationProcessor(){if(!this.fvar)return null;let e=this.variationCoords;return e||this.CFF2?(e||(e=this.fvar.axis.map((e=>e.defaultValue))),new TE(this,e)):null}getFont(e){return this.getVariation(e)}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;jg(this,"type","TTF"),this.defaultLanguage=null,this.stream=e,this.variationCoords=t,this._directoryPos=this.stream.pos,this._tables={},this._glyphs={},this._decodeDirectory();for(let r in this.directory.tables){let e=this.directory.tables[r];Ub[r]&&e.length>0&&Object.defineProperty(this,r,{get:this._getTable.bind(this,e)})}}}Gg([Ep],YE.prototype,"bbox",null),Gg([Ep],YE.prototype,"_cmapProcessor",null),Gg([Ep],YE.prototype,"characterSet",null),Gg([Ep],YE.prototype,"_layoutEngine",null),Gg([Ep],YE.prototype,"variationAxes",null),Gg([Ep],YE.prototype,"namedVariations",null),Gg([Ep],YE.prototype,"_variationProcessor",null);let HE=new kg({tag:new Mg(4),offset:new Tg(pg,"void",{type:"global"}),compLength:pg,length:pg,origChecksum:pg}),UE=new kg({tag:new Mg(4),flavor:pg,length:pg,numTables:fg,reserved:new Lg(fg),totalSfntSize:pg,majorVersion:fg,minorVersion:fg,metaOffset:pg,metaLength:pg,metaOrigLength:pg,privOffset:pg,privLength:pg,tables:new xg(HE,"numTables")});UE.process=function(){let e={};for(let t of this.tables)e[t.tag]=t;this.tables=e};var VE=UE;class qE extends LE{_decode(){return this._font._transformedGlyphs[this.id]}_getCBox(){return this.path.bbox}constructor(){super(...arguments),jg(this,"type","WOFF2")}}const ZE={decode(e){let t=0,r=[0,1,2,3,4];for(let n=0;n<r.length;n++){let r=e.readUInt8();if(3758096384&t)throw new Error("Overflow");if(t=t<<7|127&r,0===(128&r))return t}throw new Error("Bad base 128 number")}};let KE=["cmap","head","hhea","hmtx","maxp","name","OS/2","post","cvt ","fpgm","glyf","loca","prep","CFF ","VORG","EBDT","EBLC","gasp","hdmx","kern","LTSH","PCLT","VDMX","vhea","vmtx","BASE","GDEF","GPOS","GSUB","EBSC","JSTF","MATH","CBDT","CBLC","COLR","CPAL","SVG ","sbix","acnt","avar","bdat","bloc","bsln","cvar","fdsc","feat","fmtx","fvar","gvar","hsty","just","lcar","mort","morx","opbd","prop","trak","Zapf","Silf","Glat","Gloc","Feat","Sill"],JE=new kg({flags:hg,customTag:new Fg(new Mg(4),(e=>63===(63&e.flags))),tag:e=>e.customTag||KE[63&e.flags],length:ZE,transformVersion:e=>e.flags>>>6&3,transformed:e=>"glyf"===e.tag||"loca"===e.tag?0===e.transformVersion:0!==e.transformVersion,transformLength:new Fg(ZE,(e=>e.transformed))}),_E=new kg({tag:new Mg(4),flavor:pg,length:pg,numTables:fg,reserved:new Lg(fg),totalSfntSize:pg,totalCompressedSize:pg,majorVersion:fg,minorVersion:fg,metaOffset:pg,metaLength:pg,metaOrigLength:pg,privOffset:pg,privLength:pg,tables:new xg(JE,"numTables")});_E.process=function(){let e={};for(let t=0;t<this.tables.length;t++){let r=this.tables[t];e[r.tag]=r}return this.tables=e};var $E=_E;class eC{decode(e,t){return new og(this._buf.decode(e,t))}constructor(e){this.length=e,this._buf=new Pg(e)}}let tC=new kg({version:pg,numGlyphs:fg,indexFormat:fg,nContourStreamSize:pg,nPointsStreamSize:pg,flagStreamSize:pg,glyphStreamSize:pg,compositeStreamSize:pg,bboxStreamSize:pg,instructionStreamSize:pg,nContours:new eC("nContourStreamSize"),nPoints:new eC("nPointsStreamSize"),flags:new eC("flagStreamSize"),glyphs:new eC("glyphStreamSize"),composites:new eC("compositeStreamSize"),bboxes:new eC("bboxStreamSize"),instructions:new eC("instructionStreamSize")});const rC=253,nC=254,sC=255,iC=253;function oC(e){let t=e.readUInt8();return t===rC?e.readUInt16BE():t===sC?e.readUInt8()+iC:t===nC?e.readUInt8()+2*iC:t}function AC(e,t){return 1&e?t:-t}function aC(e,t,r){let n,s=n=0,i=[];for(let a=0;a<r;a++){let r=0,a=0,l=e.readUInt8(),c=!(l>>7);if(l&=127,l<10)r=0,a=AC(l,((14&l)<<7)+t.readUInt8());else if(l<20)r=AC(l,((l-10&14)<<7)+t.readUInt8()),a=0;else if(l<84){r=AC(l,1+(48&(o=l-20))+((A=t.readUInt8())>>4)),a=AC(l>>1,1+((12&o)<<2)+(15&A))}else if(l<120){var o;r=AC(l,1+((o=l-84)/12<<8)+t.readUInt8()),a=AC(l>>1,1+(o%12>>2<<8)+t.readUInt8())}else if(l<124){var A=t.readUInt8();let e=t.readUInt8();r=AC(l,(A<<4)+(e>>4)),a=AC(l>>1,((15&e)<<8)+t.readUInt8())}else r=AC(l,t.readUInt16BE()),a=AC(l>>1,t.readUInt16BE());s+=r,n+=a,i.push(new PE(c,!1,s,n))}return i}let lC=new Rg(pg,{65536:{numFonts:pg,offsets:new xg(pg,"numFonts")},131072:{numFonts:pg,offsets:new xg(pg,"numFonts"),dsigTag:pg,dsigLength:pg,dsigOffset:pg}});let cC=new Mg(hg),uC=(new kg({len:pg,buf:new Pg("len")}),new kg({id:fg,nameOffset:wg,attr:hg,dataOffset:gg,handle:pg})),dC=new kg({name:new Mg(4),maxTypeIndex:fg,refList:new Tg(fg,new xg(uC,(e=>e.maxTypeIndex+1)),{type:"parent"})}),hC=new kg({length:fg,types:new xg(dC,(e=>e.length+1))}),fC=new kg({reserved:new Lg(hg,24),typeList:new Tg(fg,hC),nameListOffset:new Tg(fg,"void")}),gC=new kg({dataOffset:pg,map:new Tg(pg,fC),dataLength:pg,mapLength:pg});vp(YE),vp(class extends YE{static probe(e){return"wOFF"===_b.decode(e.slice(0,4))}_decodeDirectory(){this.directory=VE.decode(this.stream,{_startOffset:0})}_getTableStream(e){let t=this.directory.tables[e];if(t){if(this.stream.pos=t.offset,t.compLength<t.length){this.stream.pos+=2;let e=new Uint8Array(t.length),r=dp(this.stream.readBuffer(t.compLength-2),e);return new og(r)}return this.stream}return null}constructor(){super(...arguments),jg(this,"type","WOFF")}}),vp(class extends YE{static probe(e){return"wOF2"===_b.decode(e.slice(0,4))}_decodeDirectory(){this.directory=$E.decode(this.stream),this._dataPos=this.stream.pos}_decompress(){if(!this._decompressed){this.stream.pos=this._dataPos;let e=this.stream.readBuffer(this.directory.totalCompressedSize),t=0;for(let n in this.directory.tables){let e=this.directory.tables[n];e.offset=t,t+=null!=e.transformLength?e.transformLength:e.length}let r=hp(e,t);if(!r)throw new Error("Error decoding compressed data in WOFF2");this.stream=new og(r),this._decompressed=!0}}_decodeTable(e){return this._decompress(),super._decodeTable(e)}_getBaseGlyph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if(!this._glyphs[e])return this.directory.tables.glyf&&this.directory.tables.glyf.transformed?(this._transformedGlyphs||this._transformGlyfTable(),this._glyphs[e]=new qE(e,t,this)):super._getBaseGlyph(e,t)}_transformGlyfTable(){this._decompress(),this.stream.pos=this.directory.tables.glyf.offset;let e=tC.decode(this.stream),t=[];for(let r=0;r<e.numGlyphs;r++){let r={},n=e.nContours.readInt16BE();if(r.numberOfContours=n,n>0){let t=[],s=0;for(let r=0;r<n;r++){s+=oC(e.nPoints),t.push(s)}r.points=aC(e.flags,e.glyphs,s);for(let e=0;e<n;e++)r.points[t[e]-1].endContour=!0;oC(e.glyphs)}else if(n<0){if(LE.prototype._decodeComposite.call({_font:this},r,e.composites))oC(e.glyphs)}t.push(r)}this._transformedGlyphs=t}constructor(){super(...arguments),jg(this,"type","WOFF2")}}),vp(class{static probe(e){return"ttcf"===_b.decode(e.slice(0,4))}getFont(e){for(let t of this.header.offsets){let r=new og(this.stream.buffer);r.pos=t;let n=new YE(r);if(n.postscriptName===e||n.postscriptName instanceof Uint8Array&&e instanceof Uint8Array&&n.postscriptName.every(((t,r)=>e[r]===t)))return n}return null}get fonts(){let e=[];for(let t of this.header.offsets){let r=new og(this.stream.buffer);r.pos=t,e.push(new YE(r))}return e}constructor(e){if(jg(this,"type","TTC"),this.stream=e,"ttcf"!==e.readString(4))throw new Error("Not a TrueType collection");this.header=lC.decode(e)}}),vp(class{static probe(e){let t=new og(e);try{var r=gC.decode(t)}catch(JM){return!1}for(let n of r.map.typeList.types)if("sfnt"===n.name)return!0;return!1}getFont(e){if(!this.sfnt)return null;for(let t of this.sfnt.refList){let r=this.header.dataOffset+t.dataOffset+4,n=new og(this.stream.buffer.slice(r)),s=new YE(n);if(s.postscriptName===e||s.postscriptName instanceof Uint8Array&&e instanceof Uint8Array&&s.postscriptName.every(((t,r)=>e[r]===t)))return s}return null}get fonts(){let e=[];for(let t of this.sfnt.refList){let r=this.header.dataOffset+t.dataOffset+4,n=new og(this.stream.buffer.slice(r));e.push(new YE(n))}return e}constructor(e){jg(this,"type","DFont"),this.stream=e,this.header=gC.decode(this.stream);for(let t of this.header.map.typeList.types){for(let e of t.refList)e.nameOffset>=0?(this.stream.pos=e.nameOffset+this.header.map.nameListOffset,e.name=cC.decode(this.stream)):e.name=null;"sfnt"===t.name&&(this.sfnt=t)}}});const pC=13,mC="left",wC="top",vC="middle",bC="bottom",yC=wC,BC=1,EC="#000000",CC="vertical",xC="horizontal",IC=CC,DC=.25,QC=(e,t,r,n)=>{const{ascent:s,descent:i,unitsPerEm:o}=e,A=(s-i)/o;if(n===wC)return{topAdj:Yf((A*t-t)/2),bottomAdj:0};let a=0;return r<A&&(a=(A-r)*t/2),{topAdj:0,bottomAdj:Yf(a)}},PC=(e,t)=>{const{ascent:r,descent:n,bbox:s,unitsPerEm:i}=e,o=1e3/i;let A=(r||s.maxY)*o-(n||s.minY)*o;return A-=Math.abs(n*o)||0,A/1e3*t},FC=(e,t,r,n)=>{const{glyphs:s}=t.layout(e),i=1e3/t.unitsPerEm;return s.reduce(((e,t)=>e+t.advanceWidth*i),0)*(r/1e3)+(o=n,(e.length-1)*o);var o},LC=async(e,t,r)=>{const n=e||Gf(t),s=(e=>`getFontKitFont-${e}`)(n);if(r.has(s))return r.get(s);const i=t[n]||(e=>e[Gf(e)])(t)||Xf()[Wf];let o=i.data;"string"===typeof o&&(o=o.startsWith("http")?await fetch(o).then((e=>e.arrayBuffer())):qf(o));const A=bp(o instanceof wf.hp?o:wf.hp.from(o));return r.set(s,A),A},MC=(e,t)=>{const{font:r,fontSize:n,characterSpacing:s,boxWidthInPt:i}=t;return FC(e,r,n,s)>i},SC=(e,t)=>{const r=((e,t)=>{for(let r=0;r<=e.length;r++)if(MC(e.slice(0,r+1),t))return r;return null})(e,t);if(null===r)return e.length;if(" "===e[r])return r;let n=r-1;for(;n>=0;){if(s=e[n],[" ","-","\u2014","\u2013"].includes(s))return n+1;n--}var s;return r},NC=(e,t)=>{const r=SC(e,t),n=e.substring(0,r).trimEnd(),s=e.substring(r).trimStart();return s===e?[e]:0===s.length?[n]:[n,...NC(s,t)]},kC=async e=>{let{textSchema:t,font:r,value:n,startingFontSize:s,_cache:i}=e;const{fontSize:o,dynamicFontSize:A,characterSpacing:a,width:l,height:c,lineHeight:u=BC}=t,d=s||o||pC;if(!A)return d;if(A.max<A.min)return d;const h=a??0,f=await LC(t.fontName,r,i),g=n.split("\n");let p=d;p<A.min?p=A.min:p>A.max&&(p=A.max);const m=A.fit??IC,w=e=>{let t=0,r=0;const n=Of(l),s=PC(f,e),i=zf(s*u),o=zf(e*u);return g.forEach(((s,A)=>{if(NC(s,{font:f,fontSize:e,characterSpacing:h,boxWidthInPt:n}).forEach(((n,s)=>{if(m===CC){const r=FC(n,f,e,h),s=zf(r);t=Math.max(t,s)}r+=A+s===0?i:o})),m===xC){const r=FC(s,f,e,h),n=zf(r);t=Math.max(t,n)}})),{totalWidthInMm:t,totalHeightInMm:r}},v=(e,t)=>!(p>=A.max)&&(m===xC?e<l:t<c),b=(e,t)=>!(p<=A.min||p<=0)&&(e>l||t>c);let{totalWidthInMm:y,totalHeightInMm:B}=w(p);for(;v(y,B);){p+=DC;const{totalWidthInMm:e,totalHeightInMm:t}=w(p);if(!(t<c)){p-=DC;break}y=e,B=t}for(;b(y,B);)p-=DC,({totalWidthInMm:y,totalHeightInMm:B}=w(p));return p},RC=e=>{const{value:t,characterSpacing:r,fontSize:n,fontKitFont:s,boxWidthInPt:i}=e,o={font:s,fontSize:n,characterSpacing:r,boxWidthInPt:i};let A=[];return t.split(/\r\n|\r|\n|\f|\u000B/g).forEach((e=>{A=A.concat(NC(e,o))})),A};class TC{constructor(e,t,r){Object.defineProperty(this,"raw",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"text",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"styles",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"section",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"contentHeight",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"contentWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"wrappedWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"minReadableWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"minWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"width",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"height",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"x",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"y",{enumerable:!0,configurable:!0,writable:!0,value:0}),this.styles=t,this.section=r,this.raw=e;this.text=e.split(/\r\n|\r|\n/g)}getContentHeight(){const e=(Array.isArray(this.text)?this.text.length:1)*(zf(this.styles.fontSize)*this.styles.lineHeight)+(this.padding("top")+this.padding("bottom"));return Math.max(e,this.styles.minCellHeight)}padding(e){return this.styles.cellPadding[e]}}class WC{constructor(e){Object.defineProperty(this,"index",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wrappedWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"minReadableWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"minWidth",{enumerable:!0,configurable:!0,writable:!0,value:0}),Object.defineProperty(this,"width",{enumerable:!0,configurable:!0,writable:!0,value:0}),this.index=e}getMaxCustomCellWidth(e){let t=0;for(const r of e.allRows()){const e=r.cells[this.index];t=Math.max(t,e.styles.cellWidth)}return t}}class jC{constructor(e,t,r,n){Object.defineProperty(this,"raw",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"index",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"section",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"cells",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"height",{enumerable:!0,configurable:!0,writable:!0,value:0}),this.raw=e,this.index=t,this.section=r,this.cells=n}getMaxCellHeight(e){return e.reduce(((e,t)=>Math.max(e,this.cells[t.index]?.height||0)),0)}getMinimumRowHeight(e){return e.reduce(((e,t)=>{const r=this.cells[t.index];if(!r)return 0;const n=r.padding("top")+r.padding("bottom")+r.styles.lineHeight;return n>e?n:e}),0)}}class GC{constructor(e,t){Object.defineProperty(this,"settings",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"styles",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"columns",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"head",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"body",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.settings=e.settings,this.styles=e.styles,this.columns=t.columns,this.head=t.head,this.body=t.body}static async create(e){const{input:t,content:r,font:n,_cache:s}=e,i=new GC(t,r);return await async function(e){const{table:t,font:r,_cache:n}=e,s=e=>LC(e,r,n);await async function(e,t){for(const r of e.allRows())for(const n of e.columns){const e=r.cells[n.index];if(!e)continue;const s=e.padding("right")+e.padding("left"),i=await t(e.styles.fontName);e.contentWidth=OC(e,i)+s;const o=OC(Object.assign(e,{text:e.text.join(" ").split(/\s+/)}),i);e.minReadableWidth=o+s,e.minWidth=e.styles.cellWidth,e.wrappedWidth=e.styles.cellWidth}for(const r of e.allRows())for(const t of e.columns){const n=r.cells[t.index];if(n)t.wrappedWidth=Math.max(t.wrappedWidth,n.wrappedWidth),t.minWidth=Math.max(t.minWidth,n.minWidth),t.minReadableWidth=Math.max(t.minReadableWidth,n.minReadableWidth);else{const r=e.styles.columnStyles[t.index]||{},n=r.cellWidth||r.minCellWidth;n&&(t.minWidth=n,t.wrappedWidth=n)}}}(t,s);const i=[];let o=0;t.columns.forEach((e=>{const r=e.getMaxCustomCellWidth(t);r?e.width=r:(e.width=e.wrappedWidth,i.push(e)),o+=e.width}));let A=t.getWidth()-o;A&&(A=XC(i,A,(e=>Math.max(e.minReadableWidth,e.minWidth))));A&&(A=XC(i,A,(e=>e.minWidth)));A=Math.abs(A),function(e){const t=e.allRows();for(let r=0;r<t.length;r++){const n=t[r];let s=null,i=0,o=0;for(let t=0;t<e.columns.length;t++){const r=e.columns[t];if(o-=1,o>1&&e.columns[t+1])i+=r.width,delete n.cells[r.index];else if(s){const e=s;delete n.cells[r.index],s=null,e.width=r.width+i}else{const e=n.cells[r.index];if(!e)continue;o=1,i=0,e.width=r.width+i}}}}(t),await async function(e,t){const r={count:0,height:0};for(const n of e.allRows()){for(const s of e.columns){const e=n.cells[s.index];if(!e)continue;const i=await t(e.styles.fontName);e.text=RC({value:e.raw,characterSpacing:e.styles.characterSpacing,boxWidthInPt:Of(e.width),fontSize:e.styles.fontSize,fontKitFont:i}),e.contentHeight=e.getContentHeight();let o=e.contentHeight;r&&r.count>0&&r.height>o&&(o=r.height),o>n.height&&(n.height=o)}r.count--}}(t,s),function(e){const t={};let r=1;const n=e.allRows();for(let s=0;s<n.length;s++){const i=n[s];for(const n of e.columns){const e=t[n.index];if(r>1)r--,delete i.cells[n.index];else if(e)e.cell.height+=i.height,r=1,delete i.cells[n.index],e.left--,e.left<=1&&delete t[n.index];else{const e=i.cells[n.index];if(!e)continue;e.height=i.height}}}}(t)}({table:i,font:n,_cache:s}),i}getHeadHeight(){return this.head.reduce(((e,t)=>e+t.getMaxCellHeight(this.columns)),0)}getBodyHeight(){return this.body.reduce(((e,t)=>e+t.getMaxCellHeight(this.columns)),0)}allRows(){return this.head.concat(this.body)}getWidth(){return this.settings.tableWidth}getHeight(){return(this.settings.showHead?this.getHeadHeight():0)+this.getBodyHeight()}}function XC(e,t,r){const n=t,s=e.reduce(((e,t)=>e+t.wrappedWidth),0);for(let i=0;i<e.length;i++){const o=e[i],A=n*(o.wrappedWidth/s),a=o.width+A,l=r(o),c=a<l?l:a;t-=c-o.width,o.width=c}if(t=Math.round(1e10*t)/1e10){const n=e.filter((e=>!(t<0)||e.width>r(e)));n.length&&(t=XC(n,t,r))}return t}function OC(e,t){const r=e.text,n=Array.isArray(r)?r:[r],s=e.styles.fontSize,i=e.styles.characterSpacing,o=n.map((e=>FC(e,t,s,i))).reduce(((e,t)=>Math.max(e,t)),0);return o}function zC(e,t,r,n,s){const i={};return t.map(((t,o)=>{let A=0;const a={};let l=0,c=0;for(const u of r)if(null==i[u.index]||0===i[u.index].left)if(0===c){let r;r=Array.isArray(t)?t[u.index-l-A]:t[u.index];const d=YC(e,u,o,n,s),h=new TC(r,d,e);a[u.index]=h,c=0,i[u.index]={left:0,times:c}}else c--,l++;else i[u.index].left--,c=i[u.index].times,A++;return new jC(t,o,e,a)}))}function YC(e,t,r,n,s){let i;"head"===e?i=n.headStyles:"body"===e&&(i=n.bodyStyles);const o=Object.assign({},n.styles,i),A=n.columnStyles[t.index]||n.columnStyles[t.index]||{},a="body"===e&&r%2===0?Object.assign({},n.alternateRowStyles):{},l={fontName:s,backgroundColor:"",textColor:"#000000",lineHeight:1,characterSpacing:0,alignment:"left",verticalAlignment:"middle",fontSize:10,cellPadding:5,lineColor:"#000000",lineWidth:0,minCellHeight:0,minCellWidth:0};return Object.assign(l,o,a,A)}function HC(e){return{fontName:e.fontName,alignment:e.alignment,verticalAlignment:e.verticalAlignment,fontSize:e.fontSize,lineHeight:e.lineHeight,characterSpacing:e.characterSpacing,backgroundColor:e.backgroundColor,textColor:e.fontColor,lineColor:e.borderColor,lineWidth:e.borderWidth,cellPadding:e.padding}}function UC(e,t,r){let n=t;const s=[];let i=0;for(;n>0&&i<e.length;){const t=e.slice(0,i+1).pop();if(!t)break;const r=t.height;if(n-r<0)break;s.push(t.raw),n-=r,i++}return qC(s,r)}function VC(e,t){const r=function(e,t){const r=e.headWidthPercentages.reduce(((t,r,n)=>({...t,[n]:{cellWidth:e.width*(r/100)}})),{}),n=Object.entries(e.columnStyles.alignment||{}).reduce(((e,t)=>{let[r,n]=t;return{...e,[r]:{alignment:n}}}),{}),s=new Set([...Object.keys(r).map(Number),...Object.keys(n).map(Number)]),i=Array.from(s).reduce(((e,t)=>{const s=r[t]||{},i=n[t]||{};return{...e,[t]:{...s,...i}}}),{});return{head:[e.head],body:t,showHead:e.showHead,startY:e.position.y,tableWidth:e.width,tableLineColor:e.tableStyles.borderColor,tableLineWidth:e.tableStyles.borderWidth,headStyles:HC(e.headStyles),bodyStyles:HC(e.bodyStyles),alternateRowStyles:{backgroundColor:e.bodyStyles.alternateBackgroundColor},columnStyles:i,margin:{top:0,right:0,left:e.position.x,bottom:0}}}(e,t),n=function(e){const t={styles:{},headStyles:{},bodyStyles:{},alternateRowStyles:{},columnStyles:{}};for(const r of Object.keys(t))if("columnStyles"===r){const n=e[r];t.columnStyles=Object.assign({},n)}else{const n=[e].map((e=>e[r]||{}));t[r]=Object.assign({},n[0],n[1],n[2])}return t}(r),s={startY:r.startY,margin:r.margin,tableWidth:r.tableWidth,showHead:r.showHead,tableLineWidth:r.tableLineWidth??0,tableLineColor:r.tableLineColor??""},i=function(e){const t=e.head||[],r=e.body||[];return{columns:(t[0]||r[0]||[]).map(((e,t)=>t)),head:t,body:r}}(r);return{content:i,styles:n,settings:s}}function qC(e,t){const{options:r,_cache:n,basePdf:s}=t;if(!Vf(s))throw new Error("[@pdfme/schema/table] Custom PDF is not supported");const i=VC(t.schema,e),o=r.font||Xf(),A=function(e,t){const r=e.content,n=r.columns.map((e=>new WC(e))),s=e.styles;return{columns:n,head:zC("head",r.head,n,s,t),body:zC("body",r.body,n,s,t)}}(i,Gf(o));return GC.create({input:i,content:A,font:o,_cache:n})}async function ZC(e,t){const{basePdf:r,schema:n}=t;if(!Vf(r))throw new Error("[@pdfme/schema/table] Custom PDF is not supported");const s=r.height,i=r.padding[2],o=r.padding[0];let A=s-i-n.position.y;const a=await qC(e,t);let l=a.body;const c=[];for(;l.length>0;){const e=0===c.length?A-a.getHeadHeight():A-o,r=await UC(l,e,t);if(c.push(r),l=l.slice(r.body.length),l.length>0){const e=sg(n);e.showHead=!1,e.position.y=o,t.schema=e,A=s-o-i}}return c}const KC=e=>"string"===typeof e?JSON.parse(e||"[]"):e||[],JC=async e=>{const{template:t,input:r,options:n,_cache:s}=e,i=Object.assign(sg(t),{schemas:[]});let o=0;for(const A of t.schemas){const e=[];for(const[t,a]of Object.entries(A))if("table"===a.type){a.__bodyRange=void 0;const A=KC(r?.[t]),l=await ZC(A,{schema:a,basePdf:i.basePdf,options:n,_cache:s});if(l.length>1){const n=l[0];a.__bodyRange={start:0,end:n.body.length};const s=l.map((e=>e.body));l.slice(1).forEach(((n,i)=>{const A=o+i+1,l={[t]:{...a,position:{x:a.position.x,y:n.settings.startY},height:n.getHeight(),showHead:!1,__bodyRange:{start:s.slice(0,i+1).reduce(((e,t)=>e+t.length),0),end:s.slice(0,i+2).reduce(((e,t)=>e+t.length),0)},content:"string"!==typeof r[t]?JSON.stringify(r[t]||"[]"):r[t]}};e[A]=l}))}}i.schemas.push(A),e.forEach(((e,t)=>{i.schemas[t]?i.schemas[t]={...i.schemas[t],...e}:i.schemas[t]=e})),o++}return i},_C=async(e,t)=>{if("table"!==t.schema.type)return Promise.resolve(t.schema.height);const r=t.schema,n=0===r.__bodyRange?.start?KC(e):((e,t)=>{const r=KC(e);return t?r.slice(t.start,t.end):r})(e,r.__bodyRange);return(await qC(n,t)).getHeight()},$C=async e=>{const{pdfDoc:t,font:r,_cache:n}=e;if(n.has(t))return n.get(t);const s=await Promise.all(Object.values(r).map((async e=>{let r=e.data;return"string"===typeof r&&r.startsWith("http")&&(r=await fetch(r).then((e=>e.arrayBuffer()))),t.embedFont(r,{subset:"undefined"===typeof e.subset||e.subset})}))),i=Object.keys(r).reduce(((e,t,r)=>Object.assign(e,{[t]:s[r]})),{});return n.set(t,i),i},ex=async e=>{let{value:t,font:r,schema:n,colorType:s,_cache:i}=e;const o=n.dynamicFontSize?await kC({textSchema:n,font:r,value:t,_cache:i}):n.fontSize??pC,A=ng(n.fontColor||EC,s);return{alignment:n.alignment??mC,verticalAlignment:n.verticalAlignment??yC,lineHeight:n.lineHeight??BC,characterSpacing:n.characterSpacing??0,fontSize:o,color:A}},tx="^#(?:[A-Fa-f0-9]{6})$";var rx;function nx(e){const t=[{key:rx.STRIKETHROUGH,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M6.85 7.08C6.85 4.37 9.45 3 12.24 3c1.64 0 3 .49 3.9 1.28c.77.65 1.46 1.73 1.46 3.24h-3.01c0-.31-.05-.59-.15-.85c-.29-.86-1.2-1.28-2.25-1.28c-1.86 0-2.34 1.02-2.34 1.7c0 .48.25.88.74 1.21c.38.25.77.48 1.41.7H7.39c-.21-.34-.54-.89-.54-1.92zM21 12v-2H3v2h9.62c1.15.45 1.96.75 1.96 1.97c0 1-.81 1.67-2.28 1.67c-1.54 0-2.93-.54-2.93-2.51H6.4c0 .55.08 1.13.24 1.58c.81 2.29 3.29 3.3 5.67 3.3c2.27 0 5.3-.89 5.3-4.05c0-.3-.01-1.16-.48-1.94H21V12z" fill="currentColor"></path></svg>',type:"boolean"},{key:rx.UNDERLINE,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z" fill="currentColor"></path></svg>',type:"boolean"},{key:rx.ALIGNMENT,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z" fill="currentColor"></path></svg>',type:"select",value:mC},{key:rx.ALIGNMENT,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z" fill="currentColor"></path></svg>',type:"select",value:"center"},{key:rx.ALIGNMENT,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z" fill="currentColor"></path></svg>',type:"select",value:"right"},{key:rx.VERTICAL_ALIGNMENT,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M8 11h3v10h2V11h3l-4-4l-4 4zM4 3v2h16V3H4z" fill="currentColor"></path></svg>',type:"select",value:yC},{key:rx.VERTICAL_ALIGNMENT,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M8 19h3v4h2v-4h3l-4-4l-4 4zm8-14h-3V1h-2v4H8l4 4l4-4zM4 11v2h16v-2H4z" fill="currentColor"></path></svg>',type:"select",value:vC},{key:rx.VERTICAL_ALIGNMENT,icon:'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><path d="M16 13h-3V3h-2v10H8l4 4l4-4zM4 19v2h16v-2H4z" fill="currentColor"></path></svg>',type:"select",value:bC}];return{title:e("schemas.text.format"),widget:"ButtonGroup",buttons:t,span:17}}!function(e){e.STRIKETHROUGH="strikethrough",e.UNDERLINE="underline",e.ALIGNMENT="alignment",e.VERTICAL_ALIGNMENT="verticalAlignment"}(rx||(rx={}));const sx=(e,t)=>{const r={};return e.split(/(\r\n|\n|\r)/).map((e=>/\r\n|\n|\r/.test(e)?e:e.split("").map((e=>/\s/.test(e)||e.charCodeAt(0)<32||(e=>{if(e in r)return r[e];const n=t.hasGlyphForCodePoint(e.codePointAt(0)||0);return r[e]=n,n})(e)?e:"\u303f")).join(""))).join("")},ix=async(e,t)=>{const{schema:r,rootElement:n,mode:s,options:i,_cache:o}=e,A=i?.font||Xf();let a;r.dynamicFontSize&&t&&(a=await kC({textSchema:r,font:A,value:t,startingFontSize:a,_cache:o}));const l=await LC(r.fontName,A,o),{topAdj:c,bottomAdj:u}=QC(l,a??r.fontSize??pC,r.lineHeight??BC,r.verticalAlignment??yC),d=c.toString(),h=u.toString(),f=document.createElement("div"),g={padding:0,resize:"none",backgroundColor:ax(t,r),border:"none",display:"flex",flexDirection:"column",justifyContent:Ax(r.verticalAlignment),width:"100%",height:"100%",cursor:tg(s,r)?"text":"default"};Object.assign(f.style,g),n.innerHTML="",n.appendChild(f);const p=[];r.strikethrough&&p.push("line-through"),r.underline&&p.push("underline");const m={fontFamily:r.fontName?`'${r.fontName}'`:"inherit",color:r.fontColor?r.fontColor:EC,fontSize:`${a??r.fontSize??pC}pt`,letterSpacing:`${r.characterSpacing??0}pt`,lineHeight:`${r.lineHeight??BC}em`,textAlign:r.alignment??mC,whiteSpace:"pre-wrap",wordBreak:"break-word",resize:"none",border:"none",outline:"none",marginBottom:`${h}px`,paddingTop:`${d}px`,backgroundColor:"transparent",textDecoration:p.join(" ")},w=document.createElement("div");return w.id="text-"+r.id,Object.assign(w.style,m),f.appendChild(w),w},ox=e=>{navigator.userAgent.toLowerCase().indexOf("firefox")>-1?(e.contentEditable="true",e.addEventListener("keydown",(e=>{"Enter"!==e.key||e.shiftKey||(e.preventDefault(),document.execCommand("insertLineBreak",!1,void 0))})),e.addEventListener("paste",(e=>{e.preventDefault();const t=e.clipboardData?.getData("text"),r=window.getSelection();r?.rangeCount&&(r.deleteFromDocument(),r.getRangeAt(0).insertNode(document.createTextNode(t||"")),r.collapseToEnd())}))):e.contentEditable="plaintext-only"},Ax=e=>{switch(e){case wC:return"flex-start";case vC:return"center";case bC:return"flex-end"}return"flex-start"},ax=(e,t)=>e&&t.backgroundColor?t.backgroundColor:"transparent",lx={pdf:async e=>{const{value:t,pdfDoc:r,pdfLib:n,page:s,options:i,schema:o,_cache:A}=e;if(!t)return;const{font:a=Xf(),colorType:l}=i,[c,u,d]=await Promise.all([$C({pdfDoc:r,font:a,_cache:A}),LC(o.fontName,a,A),ex({value:t,font:a,schema:o,_cache:A,colorType:l})]),{fontSize:h,color:f,alignment:g,verticalAlignment:p,lineHeight:m,characterSpacing:w}=d,v=o.fontName?o.fontName:Gf(a),b=c&&c[v],y=s.getHeight(),{width:B,height:E,rotate:C,position:{x:x,y:I},opacity:D}=(e=>{let{schema:t,pageHeight:r,applyRotateTranslate:n=!0}=e;const{width:s,height:i,position:o,rotate:A,opacity:a}=t,{x:l,y:c}=o,u=A?-A:0,d=Of(s),h=Of(i);let f=Of(l),g=r-Of(c)-h;if(u&&n){const e={x:f+d/2,y:r-Of(c)-h/2},t=eg({x:f,y:g},e,u);f=t.x,g=t.y}return{position:{x:f,y:g},height:h,width:d,rotate:ra(u),opacity:a}})({schema:o,pageHeight:y,applyRotateTranslate:!1});if(o.backgroundColor){const e=ng(o.backgroundColor,l);s.drawRectangle({x:x,y:I,width:B,height:E,rotate:C,color:e})}s.pushOperators(n.setCharacterSpacing(w??0));const Q=PC(u,h),P=((e,t)=>{const{descent:r,unitsPerEm:n}=e;return r/n*t})(u,h),F=0===m?0:(m-1)*h/2,L=RC({value:t,characterSpacing:w,fontSize:h,fontKitFont:u,boxWidthInPt:B});let M=0;if(p===wC)M=Q+F;else{const e=m*h*(L.length-1);p===bC?M=E-e+P-F:p===vC&&(M=(E-e-Q+P)/2+Q)}const S={x:x+B/2,y:y-Of(o.position.y)-E/2};L.forEach(((e,t)=>{const r=FC(e,u,h,w),n=PC(u,h),i=m*h*t;let A=x;"center"===g?A+=(B-r)/2:"right"===g&&(A+=B-r);let a=y-Of(o.position.y)-M-i;if(o.strikethrough&&r>0){const e=A+r+1,t=a+n/3;s.drawLine({start:eg({x:A,y:t},S,C.angle),end:eg({x:e,y:t},S,C.angle),thickness:1/12*h,color:f,opacity:D})}if(o.underline&&r>0){const e=A+r+1,t=a-n/12;s.drawLine({start:eg({x:A,y:t},S,C.angle),end:eg({x:e,y:t},S,C.angle),thickness:1/12*h,color:f,opacity:D})}if(0!==C.angle){const e=eg({x:A,y:a},S,C.angle);A=e.x,a=e.y}s.drawText(e,{x:A,y:a,rotate:C,size:h,color:f,lineHeight:m*h,font:b,opacity:D})}))},ui:async e=>{const{value:t,schema:r,mode:n,onChange:s,stopEditing:i,tabIndex:o,placeholder:A,options:a,_cache:l}=e,c=tg(n,r)&&A&&!t,u=e=>{let t=e.innerText;return t.endsWith("\n")&&(t=t.slice(0,-1)),t},d=a?.font||Xf(),[h,f]=await Promise.all([LC(r.fontName,d,l),ix(e,c?A:t)]),g=sx(t,h);if(tg(n,r)){if(ox(f),f.tabIndex=o||0,f.innerText="designer"===n?t:g,f.addEventListener("blur",(e=>{s&&s({key:"content",value:u(e.target)}),i&&i()})),r.dynamicFontSize){let e;const t=a?.font||Xf(),n=await LC(r.fontName,t,l);f.addEventListener("keyup",(()=>{setTimeout((()=>{(async()=>{if(!f.textContent)return;e=await kC({textSchema:r,font:t,value:u(f),startingFontSize:e,_cache:l}),f.style.fontSize=`${e}pt`;const{topAdj:s,bottomAdj:i}=QC(n,e??r.fontSize??pC,r.lineHeight??BC,r.verticalAlignment??yC);f.style.paddingTop=`${s}px`,f.style.marginBottom=`${i}px`})()}),0)}))}c&&(f.style.color="#A0A0A0",f.addEventListener("focus",(()=>{f.innerText===A&&(f.innerText="",f.style.color=r.fontColor??EC)}))),"designer"===n&&setTimeout((()=>{f.focus();const e=window.getSelection(),t=document.createRange();e&&t&&(t.selectNodeContents(f),t.collapse(!1),e?.removeAllRanges(),e?.addRange(t))}))}else f.innerHTML=g.split("").map(((e,r)=>`<span style="letter-spacing:${String(t).length===r+1?0:"inherit"};">${e}</span>`)).join("")},propPanel:{schema:e=>{let{options:t,activeSchema:r,i18n:n}=e;const s=t.font||{[Wf]:{data:"",fallback:!0}},i=Object.keys(s),o=Gf(s),A=Boolean(r?.dynamicFontSize);return{fontName:{title:n("schemas.text.fontName"),type:"string",widget:"select",default:o,props:{options:i.map((e=>({label:e,value:e})))},span:12},fontSize:{title:n("schemas.text.size"),type:"number",widget:"inputNumber",span:6,disabled:A,props:{min:0}},characterSpacing:{title:n("schemas.text.spacing"),type:"number",widget:"inputNumber",span:6,props:{min:0}},formatter:nx(n),lineHeight:{title:n("schemas.text.lineHeight"),type:"number",widget:"inputNumber",props:{step:.1,min:0},span:7},useDynamicFontSize:{type:"boolean",widget:"UseDynamicFontSize",bind:!1,span:16},dynamicFontSize:{type:"object",widget:"card",column:3,properties:{min:{title:n("schemas.text.min"),type:"number",widget:"inputNumber",hidden:!A,props:{min:0}},max:{title:n("schemas.text.max"),type:"number",widget:"inputNumber",hidden:!A,props:{min:0}},fit:{title:n("schemas.text.fit"),type:"string",widget:"select",hidden:!A,props:{options:[{label:n("schemas.horizontal"),value:xC},{label:n("schemas.vertical"),value:CC}]}}}},fontColor:{title:n("schemas.textColor"),type:"string",widget:"color",rules:[{pattern:tx,message:n("validation.hexColor")}]},backgroundColor:{title:n("schemas.bgColor"),type:"string",widget:"color",rules:[{pattern:tx,message:n("validation.hexColor")}]}}},widgets:{UseDynamicFontSize:e=>{const{rootElement:t,changeSchemas:r,activeSchema:n,i18n:s}=e,i=document.createElement("input");i.type="checkbox",i.checked=Boolean(n?.dynamicFontSize),i.onchange=e=>{const t=e.target.checked?{min:4,max:72,fit:IC}:void 0;r([{key:"dynamicFontSize",value:t,schemaId:n.id}])};const o=document.createElement("label"),A=document.createElement("span");A.innerText=s("schemas.text.dynamicFontSize")||"",A.style.cssText="margin-left: 0.5rem",o.style.cssText="display: flex; width: 100%;",o.appendChild(i),o.appendChild(A),t.appendChild(o)}},defaultSchema:{type:"text",content:"Type Something...",position:{x:0,y:0},width:45,height:10,rotate:0,alignment:mC,verticalAlignment:yC,fontSize:pC,lineHeight:BC,characterSpacing:0,dynamicFontSize:void 0,fontColor:EC,fontName:void 0,backgroundColor:"",opacity:1,strikethrough:!1,underline:!1}},icon:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-text-cursor-input"><path d="M5 4h1a3 3 0 0 1 3 3 3 3 0 0 1 3-3h1"/><path d="M13 20h-1a3 3 0 0 1-3-3 3 3 0 0 1-3 3H5"/><path d="M5 16H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h1"/><path d="M13 8h7a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2h-7"/><path d="M9 7v10"/></svg>'},cx=lx,ux=(lx.propPanel.defaultSchema,{Text:cx}),dx="pdfme (https://pdfme.com/)",hx=async e=>{const{template:{schemas:t,basePdf:r},pdfDoc:n}=e;let s=[],i=[];if(Vf(r)){const{width:e,height:o}=r,A=Of(e),a=Of(o);s=t.map((()=>{const e=Ju.create(n);return e.setSize(A,a),e})),i=t.map((()=>({mediaBox:{x:0,y:0,width:A,height:a},bleedBox:{x:0,y:0,width:A,height:a},trimBox:{x:0,y:0,width:A,height:a}})))}else{const e="string"===typeof r?await(e=>"string"!==typeof e||e.startsWith("data:application/pdf;")||"undefined"===typeof window?e:fetch(e).then((e=>e.blob())).then(Hf).catch((e=>{throw e})))(r):r,t=(await Du.load(e)).getPages();i=t.map((e=>({mediaBox:e.getMediaBox(),bleedBox:e.getBleedBox(),trimBox:e.getTrimBox()})));const o=t.map((e=>{const{x:t,y:r,width:n,height:s}=e.getMediaBox();return{left:t,bottom:r,right:n,top:s+r}})),A=t.map((()=>[1,0,0,1,0,0]));s=await n.embedPages(t,o,A)}return{basePages:s,embedPdfBoxes:i}},fx=e=>{const{basePage:t,embedPdfBox:r,pdfDoc:n}=e,s=t instanceof zc?t.size():t.getSize(),i=t instanceof zc?n.addPage([s.width,s.height]):n.addPage(t);if(t instanceof zc){i.drawPage(t);const{mediaBox:e,bleedBox:n,trimBox:s}=r;i.setMediaBox(e.x,e.y,e.width,e.height),i.setBleedBox(n.x,n.y,n.width,n.height),i.setTrimBox(s.x,s.y,s.width,s.height)}return i},gx=async r=>{(e=>{Kf(e,Nf)})(r);const{inputs:n,template:s,options:i={},plugins:o={}}=r,A=s.basePdf;if(0===n.length)throw new Error("[@pdfme/generator] inputs should not be empty, pass at least an empty object in the array");((e,t)=>{e.schemas.forEach((e=>Object.entries(e).forEach((e=>{let[r,n]=e;if(n.required&&!n.readOnly&&!t.some((e=>e[r])))throw new Error(`[@pdfme/generator] input for '${r}' is required to generate this PDF`)}))))})(s,n);const{pdfDoc:a,renderObj:l}=await(async e=>{const{template:r,userPlugins:n}=e,{schemas:s}=r,i=await Du.create();i.registerFontkit(t);const o=Object.values(n).length>0?Object.values(n):Object.values(ux);return{pdfDoc:i,renderObj:s.flatMap((e=>Object.values(e).map((e=>e.type)))).reduce(((e,t)=>{const r=o.find((e=>e.propPanel.defaultSchema.type===t));if(!r)throw new Error(`[@pdfme/generator] Renderer for type ${t} not found.\nCheck this document: https://pdfme.com/docs/custom-schemas`);return{...e,[t]:r.pdf}}),{})}})({template:s,userPlugins:o}),c=new Map;for(let t=0;t<n.length;t+=1){const r=n[t],o=await Jf({template:s,input:r,options:i,_cache:c,modifyTemplate:e=>JC(e),getDynamicHeight:(e,t)=>"table"!==t.schema.type?Promise.resolve(t.schema.height):_C(e,t)}),{basePages:u,embedPdfBoxes:d}=await hx({template:o,pdfDoc:a}),h=o.schemas.flatMap((e=>Object.keys(e)));for(let t=0;t<u.length;t+=1){const n=u[t],s=d[t],f=fx({basePage:n,embedPdfBox:s,pdfDoc:a});for(let u=0;u<h.length;u+=1){const n=h[u],s=(o.schemas[t]||{})[n];if(!s)continue;const d=l[s.type];if(!d)continue;const g=s.readOnly?s.content||"":r[n];await d({key:n,value:g,schema:s,basePdf:A,pdfLib:e,pdfDoc:a,page:f,options:i,_cache:c})}}}return(e=>{const{pdfDoc:t,options:r}=e,{author:n=dx,creationDate:s=new Date,creator:i=dx,keywords:o=[],language:A="en-US",modificationDate:a=new Date,producer:l=dx,subject:c="",title:u=""}=r;t.setAuthor(n),t.setCreationDate(s),t.setCreator(i),t.setKeywords(o),t.setLanguage(A),t.setModificationDate(a),t.setProducer(l),t.setSubject(c),t.setTitle(u)})({pdfDoc:a,options:i}),a.save()},px={schemas:[{"Resident First Name":{position:{x:149.27,y:56.13},width:149.52,height:13,verticalAlignment:"top",fontSize:25,lineHeight:1,characterSpacing:0,fontColor:"#b3b3b3",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left",fontName:"ArialBold"},"Resident Last Name":{position:{x:71.37,y:65.87},width:68.24,height:13,alignment:"center",verticalAlignment:"top",fontSize:25,lineHeight:1,characterSpacing:0,fontColor:"#b3b3b3",backgroundColor:"",opacity:1,rotate:0,type:"text",fontName:"ArialBold"},"Expiration Date and Time":{position:{x:80.18,y:84.33},width:65,height:8,verticalAlignment:"top",fontSize:11,lineHeight:1,characterSpacing:0,fontColor:"#454545",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},"Vehicle Make":{position:{x:114.13,y:103.29},width:50,height:6,verticalAlignment:"top",fontSize:11,lineHeight:1,characterSpacing:0,fontColor:"#454545",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},"Vehicle Model":{position:{x:115.4,y:115.91},width:50,height:6,verticalAlignment:"top",fontSize:11,lineHeight:1,characterSpacing:0,fontColor:"#454545",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"},"Vehicle Color":{position:{x:112.19,y:128.36},width:50,height:6,verticalAlignment:"top",fontSize:11,lineHeight:1,characterSpacing:0,fontColor:"#454545",backgroundColor:"",opacity:1,rotate:0,type:"text",alignment:"left"}}],basePdf:"data:application/pdf;base64,"},mx=()=>{const[e,t]=(0,s.useState)(""),[r,n]=(0,s.useState)(""),[i,o]=(0,s.useState)(""),[A,a]=(0,s.useState)(""),[l,c]=(0,s.useState)(""),[u,d]=(0,s.useState)(""),[h,f]=(0,s.useState)(""),[g,p]=(0,s.useState)(""),[m,w]=(0,s.useState)(null),[v,b]=(0,s.useState)("Generate Parking Pass"),[y,B]=(0,s.useState)(!1),[E,C]=(0,s.useState)(!1),x=(e,t)=>{if(e&&t){const r=Vt(new Date(`${e}T${t}`),"EEE MMM d yyyy 'at' hh:mm a");c(r)}};return(0,ve.jsxs)("div",{className:"flex flex-col items-center justify-center flex-grow p-4 bg-gray-100",children:[(0,ve.jsx)("h2",{className:"mb-8 text-3xl font-bold text-center text-gray-800",children:"Campus View Guest Parking Pass"}),(0,ve.jsxs)("form",{onSubmit:async t=>{t.preventDefault(),B(!0),b("Generating...");const n=[{"Resident First Name":e,"Resident Last Name":r,"Expiration Date and Time":l,"Vehicle Make":u,"Vehicle Model":h,"Vehicle Color":g}];try{const e=await gx({template:px,inputs:n}),t=new Blob([e],{type:"application/pdf"});w(t),b("Generated!"),C(!0),setTimeout((()=>{b("Generate Parking Pass"),B(!1),C(!1),w(null)}),5e3)}catch(on){console.error("Error generating PDF:",on),b("Generate Parking Pass"),B(!1)}},className:"w-full max-w-xl p-6 space-y-6 bg-white rounded-lg shadow-lg",children:[(0,ve.jsxs)("div",{className:"grid grid-cols-1 gap-6 md:grid-cols-2",children:[(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Resident First Name"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter first name",value:e,onChange:e=>t(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Resident Last Name"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter last name",value:r,onChange:e=>n(e.target.value),required:!0})]})]}),(0,ve.jsxs)("div",{className:"grid grid-cols-1 gap-6 md:grid-cols-2",children:[(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Permit Expiration Date"}),(0,ve.jsx)("input",{type:"date",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",value:i,onChange:e=>{o(e.target.value),x(e.target.value,A)},required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Permit Expiration Time"}),(0,ve.jsx)("input",{type:"time",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",value:A,onChange:e=>{a(e.target.value),x(i,e.target.value)},required:!0})]})]}),(0,ve.jsxs)("div",{className:"flex items-center",children:[(0,ve.jsx)("button",{type:"button",className:"px-4 py-2 text-white bg-black rounded-md hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black",onClick:()=>{const e=Zt(new Date,1),t=Vt(e,"yyyy-MM-dd"),r=Vt(e,"HH:mm");o(t),a(r);const n=Vt(e,"EEE MMM d yyyy 'at' hh:mm a");c(n)},children:"Set Expiration Date to 1 Day from Now"}),(0,ve.jsx)("p",{className:"ml-4 text-sm text-gray-500",children:l?`Selected: ${l}`:"Format: Mon Sep 9 2024 at 12:00 PM"})]}),(0,ve.jsxs)("div",{className:"grid grid-cols-1 gap-6 md:grid-cols-3",children:[(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Vehicle Make"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter vehicle make",value:u,onChange:e=>d(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Vehicle Model"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter vehicle model",value:h,onChange:e=>f(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Vehicle Color"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter vehicle color",value:g,onChange:e=>p(e.target.value),required:!0})]})]}),(0,ve.jsx)("div",{children:(0,ve.jsx)("button",{type:"submit",className:"w-full py-3 text-white bg-black rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black "+(y?"cursor-not-allowed":"hover:bg-gray-800"),disabled:y,children:v})})]}),E&&(0,ve.jsx)("div",{className:"mt-8 text-center",children:(0,ve.jsx)("button",{onClick:()=>{if(m){const e=URL.createObjectURL(m),t=document.createElement("a");t.href=e,t.download="CVParkingPermit.pdf",t.click(),URL.revokeObjectURL(e)}},className:"px-6 py-3 text-white bg-black rounded-md hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black",children:"Download PDF"})})]})},wx=()=>{const[e,t]=(0,s.useState)(""),[r,n]=(0,s.useState)(""),[i,o]=(0,s.useState)(""),[A,a]=(0,s.useState)(""),[l,c]=(0,s.useState)(""),[u,d]=(0,s.useState)(""),[h,f]=(0,s.useState)(""),[g,p]=(0,s.useState)(""),[m,w]=(0,s.useState)("");return(0,ve.jsxs)("div",{className:"flex flex-col items-center justify-center flex-grow p-6 bg-gray-100",children:[(0,ve.jsx)("h2",{className:"mb-8 text-3xl font-bold text-center text-gray-800",children:"Canvas Guest Parking Pass"}),(0,ve.jsxs)("form",{onSubmit:e=>{e.preventDefault(),alert("Coming Soon!")},className:"w-full max-w-xl p-6 space-y-6 bg-white rounded-lg shadow-lg",children:[(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"License Plate"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter license plate",value:e,onChange:e=>t(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"License Plate State"}),(0,ve.jsxs)("select",{className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",value:r,onChange:e=>n(e.target.value),required:!0,children:[(0,ve.jsx)("option",{value:"",children:"Select a state"}),["AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY","DC","AS","GU","MP","PR","VI","UM"].map((e=>(0,ve.jsx)("option",{value:e,children:e},e)))]})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Vehicle Year"}),(0,ve.jsx)("input",{type:"number",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter vehicle year",value:i,onChange:e=>o(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Vehicle Color"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter vehicle color",value:A,onChange:e=>a(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Vehicle Make"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter vehicle make",value:l,onChange:e=>c(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Vehicle Model"}),(0,ve.jsx)("input",{type:"text",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",placeholder:"Enter vehicle model",value:u,onChange:e=>d(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"Start Time"}),(0,ve.jsx)("input",{type:"time",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",value:h,onChange:e=>f(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{children:[(0,ve.jsx)("label",{className:"block text-sm font-medium text-gray-700",children:"End Time"}),(0,ve.jsx)("input",{type:"time",className:"block w-full p-3 mt-1 bg-white border border-gray-300 rounded-md shadow-sm focus:ring-black focus:border-black",value:g,onChange:e=>p(e.target.value),required:!0})]}),(0,ve.jsxs)("div",{className:"flex items-center",children:[(0,ve.jsx)("button",{type:"button",className:"px-4 py-2 text-white bg-black rounded-md hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black",onClick:()=>{const e=Vt(Zt(new Date,1),"yyyy-MM-dd");w(e)},children:"Set Expiration Date to 1 Day from Now"}),(0,ve.jsx)("p",{className:"ml-4 text-sm text-gray-500",children:m?`Selected: ${m}`:"Format: YYYY-MM-DD"})]}),(0,ve.jsx)("div",{children:(0,ve.jsx)("button",{type:"submit",className:"w-full py-3 text-white bg-black rounded-md hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black",children:"Coming Soon"})})]})]})},vx=()=>(0,ve.jsxs)("div",{className:"relative flex flex-col items-center justify-center min-h-screen p-8 bg-gradient-to-r from-gray-600 to-gray-900",children:[(0,ve.jsx)("div",{className:"absolute inset-0 bg-cover opacity-10 bg-[url('https://source.unsplash.com/random/1920x1080/?parking')]"}),(0,ve.jsx)("h1",{className:"relative z-10 mb-6 text-4xl font-bold text-white md:text-6xl",children:"About Guest Parking Permit Generator"}),(0,ve.jsxs)("div",{className:"relative z-10 max-w-4xl p-8 text-white bg-black shadow-xl bg-opacity-70 rounded-xl",children:[(0,ve.jsx)("p",{className:"mb-4 text-lg leading-8 md:text-xl",children:"This project is a guest parking permit generator for off-campus housing that uses physical, printed, guest parking temporary permits. It allows you to generate parking passes independently from the official housing system, giving you flexibility and convenience."}),(0,ve.jsx)("h2",{className:"mt-6 mb-4 text-2xl font-bold text-teal-300",children:"How to Use:"}),(0,ve.jsx)("p",{className:"mb-4 text-lg md:text-xl",children:"Go to the parking permit tab you are looking to create, fill out the form, download the PDF, and done!"}),(0,ve.jsx)("h2",{className:"mt-6 mb-4 text-2xl font-bold text-teal-300",children:"Why Use This Tool?"}),(0,ve.jsx)("p",{className:"mb-4 text-lg md:text-xl",children:"Many off-campus housing systems restrict the number of guest parking permits or impose strict monitoring policies. With this generator:"}),(0,ve.jsxs)("ul",{className:"pl-5 mt-2 space-y-2 text-lg list-disc md:text-xl",children:[(0,ve.jsx)("li",{children:"You bypass the limits imposed by some housing systems (e.g., 8 guest passes per month)."}),(0,ve.jsx)("li",{children:"No notifications are sent to management when you generate a guest pass, so you don\u2019t need to worry about being penalized for system abuse."}),(0,ve.jsx)("li",{children:"You can adjust the expiration date to suit your needs, allowing for more flexibility when managing guest parking."})]}),(0,ve.jsx)("h2",{className:"mt-6 mb-4 text-2xl font-bold text-teal-300",children:"Tips for Use:"}),(0,ve.jsxs)("ul",{className:"pl-5 space-y-2 text-lg list-disc md:text-xl",children:[(0,ve.jsx)("li",{children:"Do not leave a parking permit that has a multi-day expiration date as it may draw unwanted attention. Keep it to a few hours or a day at most."}),(0,ve.jsx)("li",{children:"You can create parking passes that expire on a future date if you need the pass in advance."})]}),(0,ve.jsxs)("p",{className:"mt-6 text-lg md:text-xl",children:[(0,ve.jsx)("strong",{children:"Disclaimer:"})," This tool is designed for convenience, but please be mindful of any local parking regulations or rules imposed by your housing management. Use it responsibly to avoid penalties or issues with your housing provider."]})]})]});function bx(e){if("undefined"===typeof Proxy)return e;const t=new Map;return new Proxy((function(){return e(...arguments)}),{get:(r,n)=>"create"===n?e:(t.has(n)||t.set(n,e(n)),t.get(n))})}function yx(e){return null!==e&&"object"===typeof e&&"function"===typeof e.start}const Bx=e=>Array.isArray(e);function Ex(e,t){if(!Array.isArray(t))return!1;const r=t.length;if(r!==e.length)return!1;for(let n=0;n<r;n++)if(t[n]!==e[n])return!1;return!0}function Cx(e){return"string"===typeof e||Array.isArray(e)}function xx(e){const t=[{},{}];return null===e||void 0===e||e.values.forEach(((e,r)=>{t[0][r]=e.get(),t[1][r]=e.getVelocity()})),t}function Ix(e,t,r,n){if("function"===typeof t){const[s,i]=xx(n);t=t(void 0!==r?r:e.custom,s,i)}if("string"===typeof t&&(t=e.variants&&e.variants[t]),"function"===typeof t){const[s,i]=xx(n);t=t(void 0!==r?r:e.custom,s,i)}return t}function Dx(e,t,r){const n=e.getProps();return Ix(n,t,void 0!==r?r:n.custom,e)}const Qx=["animate","whileInView","whileFocus","whileHover","whileTap","whileDrag","exit"],Px=["initial",...Qx],Fx=["transformPerspective","x","y","z","translateX","translateY","translateZ","scale","scaleX","scaleY","rotate","rotateX","rotateY","rotateZ","skew","skewX","skewY"],Lx=new Set(Fx),Mx=e=>1e3*e,Sx=e=>e/1e3,Nx={type:"spring",stiffness:500,damping:25,restSpeed:10},kx={type:"keyframes",duration:.8},Rx={type:"keyframes",ease:[.25,.1,.35,1],duration:.3},Tx=(e,t)=>{let{keyframes:r}=t;return r.length>2?kx:Lx.has(e)?e.startsWith("scale")?{type:"spring",stiffness:550,damping:0===r[1]?2*Math.sqrt(550):30,restSpeed:10}:Nx:Rx};function Wx(e,t){return e[t]||e.default||e}const jx=!1,Gx=!1,Xx=!1,Ox=e=>null!==e;function zx(e,t,r){let{repeat:n,repeatType:s="loop"}=t;const i=e.filter(Ox),o=n&&"loop"!==s&&n%2===1?0:i.length-1;return o&&void 0!==r?r:i[o]}const Yx=["read","resolveKeyframes","update","preRender","render","postRender"];function Hx(e,t){let r=!1,n=!0;const s={delta:0,timestamp:0,isProcessing:!1},i=()=>r=!0,o=Yx.reduce(((e,t)=>(e[t]=function(e){let t=new Set,r=new Set,n=!1,s=!1;const i=new WeakSet;let o={delta:0,timestamp:0,isProcessing:!1};function A(t){i.has(t)&&(a.schedule(t),e()),t(o)}const a={schedule:function(e){const s=arguments.length>2&&void 0!==arguments[2]&&arguments[2]&&n?t:r;return arguments.length>1&&void 0!==arguments[1]&&arguments[1]&&i.add(e),s.has(e)||s.add(e),e},cancel:e=>{r.delete(e),i.delete(e)},process:e=>{o=e,n?s=!0:(n=!0,[t,r]=[r,t],r.clear(),t.forEach(A),n=!1,s&&(s=!1,a.process(e)))}};return a}(i),e)),{}),{read:A,resolveKeyframes:a,update:l,preRender:c,render:u,postRender:d}=o,h=()=>{const i=Gx?s.timestamp:performance.now();r=!1,s.delta=n?1e3/60:Math.max(Math.min(i-s.timestamp,40),1),s.timestamp=i,s.isProcessing=!0,A.process(s),a.process(s),l.process(s),c.process(s),u.process(s),d.process(s),s.isProcessing=!1,r&&t&&(n=!1,e(h))},f=Yx.reduce(((t,i)=>{const A=o[i];return t[i]=function(t){let i=arguments.length>1&&void 0!==arguments[1]&&arguments[1],o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return r||(r=!0,n=!0,s.isProcessing||e(h)),A.schedule(t,i,o)},t}),{});return{schedule:f,cancel:e=>{for(let t=0;t<Yx.length;t++)o[Yx[t]].cancel(e)},state:s,steps:o}}const{schedule:Ux,cancel:Vx,state:qx,steps:Zx}=Hx("undefined"!==typeof requestAnimationFrame?requestAnimationFrame:Qe,!0),Kx=e=>/^0[^.\s]+$/u.test(e);const Jx=e=>/^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(e),_x=e=>t=>"string"===typeof t&&t.startsWith(e),$x=_x("--"),eI=_x("var(--"),tI=e=>!!eI(e)&&rI.test(e.split("/*")[0].trim()),rI=/var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu,nI=/^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u;function sI(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;Fe(r<=4,`Max CSS variable fallback depth detected in property "${e}". This may indicate a circular fallback dependency.`);const[n,s]=function(e){const t=nI.exec(e);if(!t)return[,];const[,r,n,s]=t;return[`--${null!==r&&void 0!==r?r:n}`,s]}(e);if(!n)return;const i=window.getComputedStyle(t).getPropertyValue(n);if(i){const e=i.trim();return Jx(e)?parseFloat(e):e}return tI(s)?sI(s,t,r+1):s}const iI=(e,t,r)=>r>t?t:r<e?e:r,oI={test:e=>"number"===typeof e,parse:parseFloat,transform:e=>e},AI={...oI,transform:e=>iI(0,1,e)},aI={...oI,default:1},lI=e=>Math.round(1e5*e)/1e5,cI=/-?(?:\d+(?:\.\d+)?|\.\d+)/gu,uI=/(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu,dI=/^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu;function hI(e){return"string"===typeof e}const fI=e=>({test:t=>hI(t)&&t.endsWith(e)&&1===t.split(" ").length,parse:parseFloat,transform:t=>`${t}${e}`}),gI=fI("deg"),pI=fI("%"),mI=fI("px"),wI=fI("vh"),vI=fI("vw"),bI={...pI,parse:e=>pI.parse(e)/100,transform:e=>pI.transform(100*e)},yI=new Set(["width","height","top","left","right","bottom","x","y","translateX","translateY"]),BI=e=>e===oI||e===mI,EI=(e,t)=>parseFloat(e.split(", ")[t]),CI=(e,t)=>(r,n)=>{let{transform:s}=n;if("none"===s||!s)return 0;const i=s.match(/^matrix3d\((.+)\)$/u);if(i)return EI(i[1],t);{const t=s.match(/^matrix\((.+)\)$/u);return t?EI(t[1],e):0}},xI=new Set(["x","y","z"]),II=Fx.filter((e=>!xI.has(e)));const DI={width:(e,t)=>{let{x:r}=e,{paddingLeft:n="0",paddingRight:s="0"}=t;return r.max-r.min-parseFloat(n)-parseFloat(s)},height:(e,t)=>{let{y:r}=e,{paddingTop:n="0",paddingBottom:s="0"}=t;return r.max-r.min-parseFloat(n)-parseFloat(s)},top:(e,t)=>{let{top:r}=t;return parseFloat(r)},left:(e,t)=>{let{left:r}=t;return parseFloat(r)},bottom:(e,t)=>{let{y:r}=e,{top:n}=t;return parseFloat(n)+(r.max-r.min)},right:(e,t)=>{let{x:r}=e,{left:n}=t;return parseFloat(n)+(r.max-r.min)},x:CI(4,13),y:CI(5,14)};DI.translateX=DI.x,DI.translateY=DI.y;const QI=e=>t=>t.test(e),PI=[oI,mI,pI,gI,vI,wI,{test:e=>"auto"===e,parse:e=>e}],FI=e=>PI.find(QI(e)),LI=new Set;let MI=!1,SI=!1;function NI(){if(SI){const e=Array.from(LI).filter((e=>e.needsMeasurement)),t=new Set(e.map((e=>e.element))),r=new Map;t.forEach((e=>{const t=function(e){const t=[];return II.forEach((r=>{const n=e.getValue(r);void 0!==n&&(t.push([r,n.get()]),n.set(r.startsWith("scale")?1:0))})),t}(e);t.length&&(r.set(e,t),e.render())})),e.forEach((e=>e.measureInitialState())),t.forEach((e=>{e.render();const t=r.get(e);t&&t.forEach((t=>{let[r,n]=t;var s;null===(s=e.getValue(r))||void 0===s||s.set(n)}))})),e.forEach((e=>e.measureEndState())),e.forEach((e=>{void 0!==e.suspendedScrollY&&window.scrollTo(0,e.suspendedScrollY)}))}SI=!1,MI=!1,LI.forEach((e=>e.complete())),LI.clear()}function kI(){LI.forEach((e=>{e.readKeyframes(),e.needsMeasurement&&(SI=!0)}))}class RI{constructor(e,t,r,n,s){let i=arguments.length>5&&void 0!==arguments[5]&&arguments[5];this.isComplete=!1,this.isAsync=!1,this.needsMeasurement=!1,this.isScheduled=!1,this.unresolvedKeyframes=[...e],this.onComplete=t,this.name=r,this.motionValue=n,this.element=s,this.isAsync=i}scheduleResolve(){this.isScheduled=!0,this.isAsync?(LI.add(this),MI||(MI=!0,Ux.read(kI),Ux.resolveKeyframes(NI))):(this.readKeyframes(),this.complete())}readKeyframes(){const{unresolvedKeyframes:e,name:t,element:r,motionValue:n}=this;for(let s=0;s<e.length;s++)if(null===e[s])if(0===s){const s=null===n||void 0===n?void 0:n.get(),i=e[e.length-1];if(void 0!==s)e[0]=s;else if(r&&t){const n=r.readValue(t,i);void 0!==n&&null!==n&&(e[0]=n)}void 0===e[0]&&(e[0]=i),n&&void 0===s&&n.set(e[0])}else e[s]=e[s-1]}setFinalKeyframe(){}measureInitialState(){}renderEndStyles(){}measureEndState(){}complete(){this.isComplete=!0,this.onComplete(this.unresolvedKeyframes,this.finalKeyframe),LI.delete(this)}cancel(){this.isComplete||(this.isScheduled=!1,LI.delete(this))}resume(){this.isComplete||this.scheduleResolve()}}const TI=(e,t)=>r=>Boolean(hI(r)&&dI.test(r)&&r.startsWith(e)||t&&!function(e){return null==e}(r)&&Object.prototype.hasOwnProperty.call(r,t)),WI=(e,t,r)=>n=>{if(!hI(n))return n;const[s,i,o,A]=n.match(cI);return{[e]:parseFloat(s),[t]:parseFloat(i),[r]:parseFloat(o),alpha:void 0!==A?parseFloat(A):1}},jI={...oI,transform:e=>Math.round((e=>iI(0,255,e))(e))},GI={test:TI("rgb","red"),parse:WI("red","green","blue"),transform:e=>{let{red:t,green:r,blue:n,alpha:s=1}=e;return"rgba("+jI.transform(t)+", "+jI.transform(r)+", "+jI.transform(n)+", "+lI(AI.transform(s))+")"}};const XI={test:TI("#"),parse:function(e){let t="",r="",n="",s="";return e.length>5?(t=e.substring(1,3),r=e.substring(3,5),n=e.substring(5,7),s=e.substring(7,9)):(t=e.substring(1,2),r=e.substring(2,3),n=e.substring(3,4),s=e.substring(4,5),t+=t,r+=r,n+=n,s+=s),{red:parseInt(t,16),green:parseInt(r,16),blue:parseInt(n,16),alpha:s?parseInt(s,16)/255:1}},transform:GI.transform},OI={test:TI("hsl","hue"),parse:WI("hue","saturation","lightness"),transform:e=>{let{hue:t,saturation:r,lightness:n,alpha:s=1}=e;return"hsla("+Math.round(t)+", "+pI.transform(lI(r))+", "+pI.transform(lI(n))+", "+lI(AI.transform(s))+")"}},zI={test:e=>GI.test(e)||XI.test(e)||OI.test(e),parse:e=>GI.test(e)?GI.parse(e):OI.test(e)?OI.parse(e):XI.parse(e),transform:e=>hI(e)?e:e.hasOwnProperty("red")?GI.transform(e):OI.transform(e)};const YI="number",HI="color",UI="var",VI="var(",qI="${}",ZI=/var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;function KI(e){const t=e.toString(),r=[],n={color:[],number:[],var:[]},s=[];let i=0;const o=t.replace(ZI,(e=>(zI.test(e)?(n.color.push(i),s.push(HI),r.push(zI.parse(e))):e.startsWith(VI)?(n.var.push(i),s.push(UI),r.push(e)):(n.number.push(i),s.push(YI),r.push(parseFloat(e))),++i,qI))).split(qI);return{values:r,split:o,indexes:n,types:s}}function JI(e){return KI(e).values}function _I(e){const{split:t,types:r}=KI(e),n=t.length;return e=>{let s="";for(let i=0;i<n;i++)if(s+=t[i],void 0!==e[i]){const t=r[i];s+=t===YI?lI(e[i]):t===HI?zI.transform(e[i]):e[i]}return s}}const $I=e=>"number"===typeof e?0:e;const eD={test:function(e){var t,r;return isNaN(e)&&hI(e)&&((null===(t=e.match(cI))||void 0===t?void 0:t.length)||0)+((null===(r=e.match(uI))||void 0===r?void 0:r.length)||0)>0},parse:JI,createTransformer:_I,getAnimatableNone:function(e){const t=JI(e);return _I(e)(t.map($I))}},tD=new Set(["brightness","contrast","saturate","opacity"]);function rD(e){const[t,r]=e.slice(0,-1).split("(");if("drop-shadow"===t)return e;const[n]=r.match(cI)||[];if(!n)return e;const s=r.replace(n,"");let i=tD.has(t)?1:0;return n!==r&&(i*=100),t+"("+i+s+")"}const nD=/\b([a-z-]*)\(.*?\)/gu,sD={...eD,getAnimatableNone:e=>{const t=e.match(nD);return t?t.map(rD).join(" "):e}},iD={...oI,transform:Math.round},oD={borderWidth:mI,borderTopWidth:mI,borderRightWidth:mI,borderBottomWidth:mI,borderLeftWidth:mI,borderRadius:mI,radius:mI,borderTopLeftRadius:mI,borderTopRightRadius:mI,borderBottomRightRadius:mI,borderBottomLeftRadius:mI,width:mI,maxWidth:mI,height:mI,maxHeight:mI,size:mI,top:mI,right:mI,bottom:mI,left:mI,padding:mI,paddingTop:mI,paddingRight:mI,paddingBottom:mI,paddingLeft:mI,margin:mI,marginTop:mI,marginRight:mI,marginBottom:mI,marginLeft:mI,rotate:gI,rotateX:gI,rotateY:gI,rotateZ:gI,scale:aI,scaleX:aI,scaleY:aI,scaleZ:aI,skew:gI,skewX:gI,skewY:gI,distance:mI,translateX:mI,translateY:mI,translateZ:mI,x:mI,y:mI,z:mI,perspective:mI,transformPerspective:mI,opacity:AI,originX:bI,originY:bI,originZ:mI,zIndex:iD,backgroundPositionX:mI,backgroundPositionY:mI,fillOpacity:AI,strokeOpacity:AI,numOctaves:iD},AD={...oD,color:zI,backgroundColor:zI,outlineColor:zI,fill:zI,stroke:zI,borderColor:zI,borderTopColor:zI,borderRightColor:zI,borderBottomColor:zI,borderLeftColor:zI,filter:sD,WebkitFilter:sD},aD=e=>AD[e];function lD(e,t){let r=aD(e);return r!==sD&&(r=eD),r.getAnimatableNone?r.getAnimatableNone(t):void 0}const cD=new Set(["auto","none","0"]);class uD extends RI{constructor(e,t,r,n,s){super(e,t,r,n,s,!0)}readKeyframes(){const{unresolvedKeyframes:e,element:t,name:r}=this;if(!t||!t.current)return;super.readKeyframes();for(let A=0;A<e.length;A++){let r=e[A];if("string"===typeof r&&(r=r.trim(),tI(r))){const n=sI(r,t.current);void 0!==n&&(e[A]=n),A===e.length-1&&(this.finalKeyframe=r)}}if(this.resolveNoneKeyframes(),!yI.has(r)||2!==e.length)return;const[n,s]=e,i=FI(n),o=FI(s);if(i!==o)if(BI(i)&&BI(o))for(let A=0;A<e.length;A++){const t=e[A];"string"===typeof t&&(e[A]=parseFloat(t))}else this.needsMeasurement=!0}resolveNoneKeyframes(){const{unresolvedKeyframes:e,name:t}=this,r=[];for(let s=0;s<e.length;s++)("number"===typeof(n=e[s])?0===n:null===n||"none"===n||"0"===n||Kx(n))&&r.push(s);var n;r.length&&function(e,t,r){let n,s=0;for(;s<e.length&&!n;){const t=e[s];"string"===typeof t&&!cD.has(t)&&KI(t).values.length&&(n=e[s]),s++}if(n&&r)for(const i of t)e[i]=lD(r,n)}(e,r,t)}measureInitialState(){const{element:e,unresolvedKeyframes:t,name:r}=this;if(!e||!e.current)return;"height"===r&&(this.suspendedScrollY=window.pageYOffset),this.measuredOrigin=DI[r](e.measureViewportBox(),window.getComputedStyle(e.current)),t[0]=this.measuredOrigin;const n=t[t.length-1];void 0!==n&&e.getValue(r,n).jump(n,!1)}measureEndState(){var e;const{element:t,name:r,unresolvedKeyframes:n}=this;if(!t||!t.current)return;const s=t.getValue(r);s&&s.jump(this.measuredOrigin,!1);const i=n.length-1,o=n[i];n[i]=DI[r](t.measureViewportBox(),window.getComputedStyle(t.current)),null!==o&&void 0===this.finalKeyframe&&(this.finalKeyframe=o),(null===(e=this.removedTransforms)||void 0===e?void 0:e.length)&&this.removedTransforms.forEach((e=>{let[r,n]=e;t.getValue(r).set(n)})),this.resolveNoneKeyframes()}}function dD(e){let t;return()=>(void 0===t&&(t=e()),t)}let hD;function fD(){hD=void 0}const gD={now:()=>(void 0===hD&&gD.set(qx.isProcessing||Gx?qx.timestamp:performance.now()),hD),set:e=>{hD=e,queueMicrotask(fD)}},pD=(e,t)=>"zIndex"!==t&&(!("number"!==typeof e&&!Array.isArray(e))||!("string"!==typeof e||!eD.test(e)&&"0"!==e||e.startsWith("url(")));class mD{constructor(e){let{autoplay:t=!0,delay:r=0,type:n="keyframes",repeat:s=0,repeatDelay:i=0,repeatType:o="loop",...A}=e;this.isStopped=!1,this.hasAttemptedResolve=!1,this.createdAt=gD.now(),this.options={autoplay:t,delay:r,type:n,repeat:s,repeatDelay:i,repeatType:o,...A},this.updateFinishedPromise()}calcStartTime(){return this.resolvedAt&&this.resolvedAt-this.createdAt>40?this.resolvedAt:this.createdAt}get resolved(){return this._resolved||this.hasAttemptedResolve||(kI(),NI()),this._resolved}onKeyframesResolved(e,t){this.resolvedAt=gD.now(),this.hasAttemptedResolve=!0;const{name:r,type:n,velocity:s,delay:i,onComplete:o,onUpdate:A,isGenerator:a}=this.options;if(!a&&!function(e,t,r,n){const s=e[0];if(null===s)return!1;if("display"===t||"visibility"===t)return!0;const i=e[e.length-1],o=pD(s,t),A=pD(i,t);return Pe(o===A,`You are trying to animate ${t} from "${s}" to "${i}". ${s} is not an animatable value - to enable this animation set ${s} to a value animatable to ${i} via the \`style\` property.`),!(!o||!A)&&(function(e){const t=e[0];if(1===e.length)return!0;for(let r=0;r<e.length;r++)if(e[r]!==t)return!0}(e)||"spring"===r&&n)}(e,r,n,s)){if(Xx||!i)return null===A||void 0===A||A(zx(e,this.options,t)),null===o||void 0===o||o(),void this.resolveFinishedPromise();this.options.duration=0}const l=this.initPlayback(e,t);!1!==l&&(this._resolved={keyframes:e,finalKeyframe:t,...l},this.onPostResolved())}onPostResolved(){}then(e,t){return this.currentFinishedPromise.then(e,t)}updateFinishedPromise(){this.currentFinishedPromise=new Promise((e=>{this.resolveFinishedPromise=e}))}}function wD(e,t){return t?e*(1e3/t):0}const vD=5;function bD(e,t,r){const n=Math.max(t-vD,0);return wD(r-e(n),t-n)}const yD=.001,BD=.01,ED=10,CD=.05,xD=1;function ID(e){let t,r,{duration:n=800,bounce:s=.25,velocity:i=0,mass:o=1}=e;Pe(n<=Mx(ED),"Spring duration must be 10 seconds or less");let A=1-s;A=iI(CD,xD,A),n=iI(BD,ED,Sx(n)),A<1?(t=e=>{const t=e*A,r=t*n,s=t-i,o=QD(e,A),a=Math.exp(-r);return yD-s/o*a},r=e=>{const r=e*A*n,s=r*i+i,o=Math.pow(A,2)*Math.pow(e,2)*n,a=Math.exp(-r),l=QD(Math.pow(e,2),A);return(-t(e)+yD>0?-1:1)*((s-o)*a)/l}):(t=e=>Math.exp(-e*n)*((e-i)*n+1)-yD,r=e=>Math.exp(-e*n)*(n*n*(i-e)));const a=function(e,t,r){let n=r;for(let s=1;s<DD;s++)n-=e(n)/t(n);return n}(t,r,5/n);if(n=Mx(n),isNaN(a))return{stiffness:100,damping:10,duration:n};{const e=Math.pow(a,2)*o;return{stiffness:e,damping:2*A*Math.sqrt(o*e),duration:n}}}const DD=12;function QD(e,t){return e*Math.sqrt(1-t*t)}const PD=["duration","bounce"],FD=["stiffness","damping","mass"];function LD(e,t){return t.some((t=>void 0!==e[t]))}function MD(e){let{keyframes:t,restDelta:r,restSpeed:n,...s}=e;const i=t[0],o=t[t.length-1],A={done:!1,value:i},{stiffness:a,damping:l,mass:c,duration:u,velocity:d,isResolvedFromDuration:h}=function(e){let t={velocity:0,stiffness:100,damping:10,mass:1,isResolvedFromDuration:!1,...e};if(!LD(e,FD)&&LD(e,PD)){const r=ID(e);t={...t,...r,mass:1},t.isResolvedFromDuration=!0}return t}({...s,velocity:-Sx(s.velocity||0)}),f=d||0,g=l/(2*Math.sqrt(a*c)),p=o-i,m=Sx(Math.sqrt(a/c)),w=Math.abs(p)<5;let v;if(n||(n=w?.01:2),r||(r=w?.005:.5),g<1){const e=QD(m,g);v=t=>{const r=Math.exp(-g*m*t);return o-r*((f+g*m*p)/e*Math.sin(e*t)+p*Math.cos(e*t))}}else if(1===g)v=e=>o-Math.exp(-m*e)*(p+(f+m*p)*e);else{const e=m*Math.sqrt(g*g-1);v=t=>{const r=Math.exp(-g*m*t),n=Math.min(e*t,300);return o-r*((f+g*m*p)*Math.sinh(n)+e*p*Math.cosh(n))/e}}return{calculatedDuration:h&&u||null,next:e=>{const t=v(e);if(h)A.done=e>=u;else{let s=0;g<1&&(s=0===e?Mx(f):bD(v,e,t));const i=Math.abs(s)<=n,a=Math.abs(o-t)<=r;A.done=i&&a}return A.value=A.done?o:t,A}}}function SD(e){let{keyframes:t,velocity:r=0,power:n=.8,timeConstant:s=325,bounceDamping:i=10,bounceStiffness:o=500,modifyTarget:A,min:a,max:l,restDelta:c=.5,restSpeed:u}=e;const d=t[0],h={done:!1,value:d},f=e=>void 0===a?l:void 0===l||Math.abs(a-e)<Math.abs(l-e)?a:l;let g=n*r;const p=d+g,m=void 0===A?p:A(p);m!==p&&(g=m-d);const w=e=>-g*Math.exp(-e/s),v=e=>m+w(e),b=e=>{const t=w(e),r=v(e);h.done=Math.abs(t)<=c,h.value=h.done?m:r};let y,B;const E=e=>{var t;(t=h.value,void 0!==a&&t<a||void 0!==l&&t>l)&&(y=e,B=MD({keyframes:[h.value,f(h.value)],velocity:bD(v,e,h.value),damping:i,stiffness:o,restDelta:c,restSpeed:u}))};return E(0),{calculatedDuration:null,next:e=>{let t=!1;return B||void 0!==y||(t=!0,b(e),E(e)),void 0!==y&&e>=y?B.next(e-y):(!t&&b(e),h)}}}const ND=(e,t,r)=>(((1-3*r+3*t)*e+(3*r-6*t))*e+3*t)*e,kD=1e-7,RD=12;function TD(e,t,r,n){if(e===t&&r===n)return Qe;const s=t=>function(e,t,r,n,s){let i,o,A=0;do{o=t+(r-t)/2,i=ND(o,n,s)-e,i>0?r=o:t=o}while(Math.abs(i)>kD&&++A<RD);return o}(t,0,1,e,r);return e=>0===e||1===e?e:ND(s(e),t,n)}const WD=TD(.42,0,1,1),jD=TD(0,0,.58,1),GD=TD(.42,0,.58,1),XD=e=>t=>t<=.5?e(2*t)/2:(2-e(2*(1-t)))/2,OD=e=>t=>1-e(1-t),zD=e=>1-Math.sin(Math.acos(e)),YD=OD(zD),HD=XD(zD),UD=TD(.33,1.53,.69,.99),VD=OD(UD),qD={linear:Qe,easeIn:WD,easeInOut:GD,easeOut:jD,circIn:zD,circInOut:HD,circOut:YD,backIn:VD,backInOut:XD(VD),backOut:UD,anticipate:e=>(e*=2)<1?.5*VD(e):.5*(2-Math.pow(2,-10*(e-1)))},ZD=e=>{if(Array.isArray(e)){Fe(4===e.length,"Cubic bezier arrays must contain four numerical values.");const[t,r,n,s]=e;return TD(t,r,n,s)}return"string"===typeof e?(Fe(void 0!==qD[e],`Invalid easing type '${e}'`),qD[e]):e},KD=(e,t)=>r=>t(e(r)),JD=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return t.reduce(KD)},_D=(e,t,r)=>{const n=t-e;return 0===n?1:(r-e)/n},$D=(e,t,r)=>e+(t-e)*r;function eQ(e,t,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+(t-e)*(2/3-r)*6:e}function tQ(e,t){return r=>r>0?t:e}const rQ=(e,t,r)=>{const n=e*e,s=r*(t*t-n)+n;return s<0?0:Math.sqrt(s)},nQ=[XI,GI,OI];function sQ(e){const t=(r=e,nQ.find((e=>e.test(r))));var r;if(Pe(Boolean(t),`'${e}' is not an animatable color. Use the equivalent color code instead.`),!Boolean(t))return!1;let n=t.parse(e);return t===OI&&(n=function(e){let{hue:t,saturation:r,lightness:n,alpha:s}=e;t/=360,r/=100,n/=100;let i=0,o=0,A=0;if(r){const e=n<.5?n*(1+r):n+r-n*r,s=2*n-e;i=eQ(s,e,t+1/3),o=eQ(s,e,t),A=eQ(s,e,t-1/3)}else i=o=A=n;return{red:Math.round(255*i),green:Math.round(255*o),blue:Math.round(255*A),alpha:s}}(n)),n}const iQ=(e,t)=>{const r=sQ(e),n=sQ(t);if(!r||!n)return tQ(e,t);const s={...r};return e=>(s.red=rQ(r.red,n.red,e),s.green=rQ(r.green,n.green,e),s.blue=rQ(r.blue,n.blue,e),s.alpha=$D(r.alpha,n.alpha,e),GI.transform(s))},oQ=new Set(["none","hidden"]);function AQ(e,t){return r=>$D(e,t,r)}function aQ(e){return"number"===typeof e?AQ:"string"===typeof e?tI(e)?tQ:zI.test(e)?iQ:uQ:Array.isArray(e)?lQ:"object"===typeof e?zI.test(e)?iQ:cQ:tQ}function lQ(e,t){const r=[...e],n=r.length,s=e.map(((e,r)=>aQ(e)(e,t[r])));return e=>{for(let t=0;t<n;t++)r[t]=s[t](e);return r}}function cQ(e,t){const r={...e,...t},n={};for(const s in r)void 0!==e[s]&&void 0!==t[s]&&(n[s]=aQ(e[s])(e[s],t[s]));return e=>{for(const t in n)r[t]=n[t](e);return r}}const uQ=(e,t)=>{const r=eD.createTransformer(t),n=KI(e),s=KI(t);return n.indexes.var.length===s.indexes.var.length&&n.indexes.color.length===s.indexes.color.length&&n.indexes.number.length>=s.indexes.number.length?oQ.has(e)&&!s.values.length||oQ.has(t)&&!n.values.length?function(e,t){return oQ.has(e)?r=>r<=0?e:t:r=>r>=1?t:e}(e,t):JD(lQ(function(e,t){var r;const n=[],s={color:0,var:0,number:0};for(let i=0;i<t.values.length;i++){const o=t.types[i],A=e.indexes[o][s[o]],a=null!==(r=e.values[A])&&void 0!==r?r:0;n[i]=a,s[o]++}return n}(n,s),s.values),r):(Pe(!0,`Complex values '${e}' and '${t}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`),tQ(e,t))};function dQ(e,t,r){if("number"===typeof e&&"number"===typeof t&&"number"===typeof r)return $D(e,t,r);return aQ(e)(e,t)}function hQ(e,t){let{clamp:r=!0,ease:n,mixer:s}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=e.length;if(Fe(i===t.length,"Both input and output ranges must be the same length"),1===i)return()=>t[0];if(2===i&&e[0]===e[1])return()=>t[1];e[0]>e[i-1]&&(e=[...e].reverse(),t=[...t].reverse());const o=function(e,t,r){const n=[],s=r||dQ,i=e.length-1;for(let o=0;o<i;o++){let r=s(e[o],e[o+1]);if(t){const e=Array.isArray(t)?t[o]||Qe:t;r=JD(e,r)}n.push(r)}return n}(t,n,s),A=o.length,a=t=>{let r=0;if(A>1)for(;r<e.length-2&&!(t<e[r+1]);r++);const n=_D(e[r],e[r+1],t);return o[r](n)};return r?t=>a(iI(e[0],e[i-1],t)):a}function fQ(e){const t=[0];return function(e,t){const r=e[e.length-1];for(let n=1;n<=t;n++){const s=_D(0,t,n);e.push($D(r,1,s))}}(t,e.length-1),t}function gQ(e){let{duration:t=300,keyframes:r,times:n,ease:s="easeInOut"}=e;const i=(e=>Array.isArray(e)&&"number"!==typeof e[0])(s)?s.map(ZD):ZD(s),o={done:!1,value:r[0]},A=function(e,t){return e.map((e=>e*t))}(n&&n.length===r.length?n:fQ(r),t),a=hQ(A,r,{ease:Array.isArray(i)?i:(l=r,c=i,l.map((()=>c||GD)).splice(0,l.length-1))});var l,c;return{calculatedDuration:t,next:e=>(o.value=a(e),o.done=e>=t,o)}}const pQ=e=>{const t=t=>{let{timestamp:r}=t;return e(r)};return{start:()=>Ux.update(t,!0),stop:()=>Vx(t),now:()=>qx.isProcessing?qx.timestamp:gD.now()}},mQ={decay:SD,inertia:SD,tween:gQ,keyframes:gQ,spring:MD},wQ=e=>e/100;class vQ extends mD{constructor(e){super(e),this.holdTime=null,this.cancelTime=null,this.currentTime=0,this.playbackSpeed=1,this.pendingPlayState="running",this.startTime=null,this.state="idle",this.stop=()=>{if(this.resolver.cancel(),this.isStopped=!0,"idle"===this.state)return;this.teardown();const{onStop:e}=this.options;e&&e()};const{name:t,motionValue:r,element:n,keyframes:s}=this.options,i=(null===n||void 0===n?void 0:n.KeyframeResolver)||RI;this.resolver=new i(s,((e,t)=>this.onKeyframesResolved(e,t)),t,r,n),this.resolver.scheduleResolve()}initPlayback(e){const{type:t="keyframes",repeat:r=0,repeatDelay:n=0,repeatType:s,velocity:i=0}=this.options,o=mQ[t]||gQ;let A,a;o!==gQ&&"number"!==typeof e[0]&&(A=JD(wQ,dQ(e[0],e[1])),e=[0,100]);const l=o({...this.options,keyframes:e});"mirror"===s&&(a=o({...this.options,keyframes:[...e].reverse(),velocity:-i})),null===l.calculatedDuration&&(l.calculatedDuration=function(e){let t=0,r=e.next(t);for(;!r.done&&t<2e4;)t+=50,r=e.next(t);return t>=2e4?1/0:t}(l));const{calculatedDuration:c}=l,u=c+n;return{generator:l,mirroredGenerator:a,mapPercentToKeyframes:A,calculatedDuration:c,resolvedDuration:u,totalDuration:u*(r+1)-n}}onPostResolved(){const{autoplay:e=!0}=this.options;this.play(),"paused"!==this.pendingPlayState&&e?this.state=this.pendingPlayState:this.pause()}tick(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const{resolved:r}=this;if(!r){const{keyframes:e}=this.options;return{done:!0,value:e[e.length-1]}}const{finalKeyframe:n,generator:s,mirroredGenerator:i,mapPercentToKeyframes:o,keyframes:A,calculatedDuration:a,totalDuration:l,resolvedDuration:c}=r;if(null===this.startTime)return s.next(0);const{delay:u,repeat:d,repeatType:h,repeatDelay:f,onUpdate:g}=this.options;this.speed>0?this.startTime=Math.min(this.startTime,e):this.speed<0&&(this.startTime=Math.min(e-l/this.speed,this.startTime)),t?this.currentTime=e:null!==this.holdTime?this.currentTime=this.holdTime:this.currentTime=Math.round(e-this.startTime)*this.speed;const p=this.currentTime-u*(this.speed>=0?1:-1),m=this.speed>=0?p<0:p>l;this.currentTime=Math.max(p,0),"finished"===this.state&&null===this.holdTime&&(this.currentTime=l);let w=this.currentTime,v=s;if(d){const e=Math.min(this.currentTime,l)/c;let t=Math.floor(e),r=e%1;!r&&e>=1&&(r=1),1===r&&t--,t=Math.min(t,d+1);Boolean(t%2)&&("reverse"===h?(r=1-r,f&&(r-=f/c)):"mirror"===h&&(v=i)),w=iI(0,1,r)*c}const b=m?{done:!1,value:A[0]}:v.next(w);o&&(b.value=o(b.value));let{done:y}=b;m||null===a||(y=this.speed>=0?this.currentTime>=l:this.currentTime<=0);const B=null===this.holdTime&&("finished"===this.state||"running"===this.state&&y);return B&&void 0!==n&&(b.value=zx(A,this.options,n)),g&&g(b.value),B&&this.finish(),b}get duration(){const{resolved:e}=this;return e?Sx(e.calculatedDuration):0}get time(){return Sx(this.currentTime)}set time(e){e=Mx(e),this.currentTime=e,null!==this.holdTime||0===this.speed?this.holdTime=e:this.driver&&(this.startTime=this.driver.now()-e/this.speed)}get speed(){return this.playbackSpeed}set speed(e){const t=this.playbackSpeed!==e;this.playbackSpeed=e,t&&(this.time=Sx(this.currentTime))}play(){if(this.resolver.isScheduled||this.resolver.resume(),!this._resolved)return void(this.pendingPlayState="running");if(this.isStopped)return;const{driver:e=pQ,onPlay:t,startTime:r}=this.options;this.driver||(this.driver=e((e=>this.tick(e)))),t&&t();const n=this.driver.now();null!==this.holdTime?this.startTime=n-this.holdTime:this.startTime?"finished"===this.state&&(this.startTime=n):this.startTime=null!==r&&void 0!==r?r:this.calcStartTime(),"finished"===this.state&&this.updateFinishedPromise(),this.cancelTime=this.startTime,this.holdTime=null,this.state="running",this.driver.start()}pause(){var e;this._resolved?(this.state="paused",this.holdTime=null!==(e=this.currentTime)&&void 0!==e?e:0):this.pendingPlayState="paused"}complete(){"running"!==this.state&&this.play(),this.pendingPlayState=this.state="finished",this.holdTime=null}finish(){this.teardown(),this.state="finished";const{onComplete:e}=this.options;e&&e()}cancel(){null!==this.cancelTime&&this.tick(this.cancelTime),this.teardown(),this.updateFinishedPromise()}teardown(){this.state="idle",this.stopDriver(),this.resolveFinishedPromise(),this.updateFinishedPromise(),this.startTime=this.cancelTime=null,this.resolver.cancel()}stopDriver(){this.driver&&(this.driver.stop(),this.driver=void 0)}sample(e){return this.startTime=0,this.tick(e,!0)}}const bQ=new Set(["opacity","clipPath","filter","transform"]),yQ=e=>Array.isArray(e)&&"number"===typeof e[0];function BQ(e){return Boolean(!e||"string"===typeof e&&e in CQ||yQ(e)||Array.isArray(e)&&e.every(BQ))}const EQ=e=>{let[t,r,n,s]=e;return`cubic-bezier(${t}, ${r}, ${n}, ${s})`},CQ={linear:"linear",ease:"ease",easeIn:"ease-in",easeOut:"ease-out",easeInOut:"ease-in-out",circIn:EQ([0,.65,.55,1]),circOut:EQ([.55,0,1,.45]),backIn:EQ([.31,.01,.66,-.59]),backOut:EQ([.33,1.53,.69,.99])};function xQ(e){return IQ(e)||CQ.easeOut}function IQ(e){return e?yQ(e)?EQ(e):Array.isArray(e)?e.map(xQ):CQ[e]:void 0}const DQ=dD((()=>Object.hasOwnProperty.call(Element.prototype,"animate")));class QQ extends mD{constructor(e){super(e);const{name:t,motionValue:r,element:n,keyframes:s}=this.options;this.resolver=new uD(s,((e,t)=>this.onKeyframesResolved(e,t)),t,r,n),this.resolver.scheduleResolve()}initPlayback(e,t){var r;let{duration:n=300,times:s,ease:i,type:o,motionValue:A,name:a,startTime:l}=this.options;if(!(null===(r=A.owner)||void 0===r?void 0:r.current))return!1;if("spring"===(c=this.options).type||!BQ(c.ease)){const{onComplete:t,onUpdate:r,motionValue:A,element:a,...l}=this.options,c=function(e,t){const r=new vQ({...t,keyframes:e,repeat:0,delay:0,isGenerator:!0});let n={done:!1,value:e[0]};const s=[];let i=0;for(;!n.done&&i<2e4;)n=r.sample(i),s.push(n.value),i+=10;return{times:void 0,keyframes:s,duration:i-10,ease:"linear"}}(e,l);1===(e=c.keyframes).length&&(e[1]=e[0]),n=c.duration,s=c.times,i=c.ease,o="keyframes"}var c;const u=function(e,t,r){let{delay:n=0,duration:s=300,repeat:i=0,repeatType:o="loop",ease:A,times:a}=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const l={[t]:r};a&&(l.offset=a);const c=IQ(A);return Array.isArray(c)&&(l.easing=c),e.animate(l,{delay:n,duration:s,easing:Array.isArray(c)?"linear":c,fill:"both",iterations:i+1,direction:"reverse"===o?"alternate":"normal"})}(A.owner.current,a,e,{...this.options,duration:n,times:s,ease:i});return u.startTime=null!==l&&void 0!==l?l:this.calcStartTime(),this.pendingTimeline?(u.timeline=this.pendingTimeline,this.pendingTimeline=void 0):u.onfinish=()=>{const{onComplete:r}=this.options;A.set(zx(e,this.options,t)),r&&r(),this.cancel(),this.resolveFinishedPromise()},{animation:u,duration:n,times:s,type:o,ease:i,keyframes:e}}get duration(){const{resolved:e}=this;if(!e)return 0;const{duration:t}=e;return Sx(t)}get time(){const{resolved:e}=this;if(!e)return 0;const{animation:t}=e;return Sx(t.currentTime||0)}set time(e){const{resolved:t}=this;if(!t)return;const{animation:r}=t;r.currentTime=Mx(e)}get speed(){const{resolved:e}=this;if(!e)return 1;const{animation:t}=e;return t.playbackRate}set speed(e){const{resolved:t}=this;if(!t)return;const{animation:r}=t;r.playbackRate=e}get state(){const{resolved:e}=this;if(!e)return"idle";const{animation:t}=e;return t.playState}get startTime(){const{resolved:e}=this;if(!e)return null;const{animation:t}=e;return t.startTime}attachTimeline(e){if(this._resolved){const{resolved:t}=this;if(!t)return Qe;const{animation:r}=t;r.timeline=e,r.onfinish=null}else this.pendingTimeline=e;return Qe}play(){if(this.isStopped)return;const{resolved:e}=this;if(!e)return;const{animation:t}=e;"finished"===t.playState&&this.updateFinishedPromise(),t.play()}pause(){const{resolved:e}=this;if(!e)return;const{animation:t}=e;t.pause()}stop(){if(this.resolver.cancel(),this.isStopped=!0,"idle"===this.state)return;this.resolveFinishedPromise(),this.updateFinishedPromise();const{resolved:e}=this;if(!e)return;const{animation:t,keyframes:r,duration:n,type:s,ease:i,times:o}=e;if("idle"===t.playState||"finished"===t.playState)return;if(this.time){const{motionValue:e,onUpdate:t,onComplete:A,element:a,...l}=this.options,c=new vQ({...l,keyframes:r,duration:n,type:s,ease:i,times:o,isGenerator:!0}),u=Mx(this.time);e.setWithVelocity(c.sample(u-10).value,c.sample(u).value,10)}const{onStop:A}=this.options;A&&A(),this.cancel()}complete(){const{resolved:e}=this;e&&e.animation.finish()}cancel(){const{resolved:e}=this;e&&e.animation.cancel()}static supports(e){const{motionValue:t,name:r,repeatDelay:n,repeatType:s,damping:i,type:o}=e;return DQ()&&r&&bQ.has(r)&&t&&t.owner&&t.owner.current instanceof HTMLElement&&!t.owner.getProps().onUpdate&&!n&&"mirror"!==s&&0!==i&&"inertia"!==o}}const PQ=dD((()=>void 0!==window.ScrollTimeline));class FQ{constructor(e){this.stop=()=>this.runAll("stop"),this.animations=e.filter(Boolean)}then(e,t){return Promise.all(this.animations).then(e).catch(t)}getAll(e){return this.animations[0][e]}setAll(e,t){for(let r=0;r<this.animations.length;r++)this.animations[r][e]=t}attachTimeline(e){const t=this.animations.map((t=>{if(!PQ()||!t.attachTimeline)return t.pause(),function(e,t){let r;const n=()=>{const{currentTime:n}=t,s=(null===n?0:n.value)/100;r!==s&&e(s),r=s};return Ux.update(n,!0),()=>Vx(n)}((e=>{t.time=t.duration*e}),e);t.attachTimeline(e)}));return()=>{t.forEach(((e,t)=>{e&&e(),this.animations[t].stop()}))}}get time(){return this.getAll("time")}set time(e){this.setAll("time",e)}get speed(){return this.getAll("speed")}set speed(e){this.setAll("speed",e)}get startTime(){return this.getAll("startTime")}get duration(){let e=0;for(let t=0;t<this.animations.length;t++)e=Math.max(e,this.animations[t].duration);return e}runAll(e){this.animations.forEach((t=>t[e]()))}play(){this.runAll("play")}pause(){this.runAll("pause")}cancel(){this.runAll("cancel")}complete(){this.runAll("complete")}}const LQ=function(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0,i=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;return A=>{const a=Wx(n,e)||{},l=a.delay||n.delay||0;let{elapsed:c=0}=n;c-=Mx(l);let u={keyframes:Array.isArray(r)?r:[null,r],ease:"easeOut",velocity:t.getVelocity(),...a,delay:-c,onUpdate:e=>{t.set(e),a.onUpdate&&a.onUpdate(e)},onComplete:()=>{A(),a.onComplete&&a.onComplete(),o&&o()},onStop:o,name:e,motionValue:t,element:i?void 0:s};(function(e){let{when:t,delay:r,delayChildren:n,staggerChildren:s,staggerDirection:i,repeat:o,repeatType:A,repeatDelay:a,from:l,elapsed:c,...u}=e;return!!Object.keys(u).length})(a)||(u={...u,...Tx(e,u)}),u.duration&&(u.duration=Mx(u.duration)),u.repeatDelay&&(u.repeatDelay=Mx(u.repeatDelay)),void 0!==u.from&&(u.keyframes[0]=u.from);let d=!1;if((!1===u.type||0===u.duration&&!u.repeatDelay)&&(u.duration=0,0===u.delay&&(d=!0)),(Xx||jx)&&(d=!0,u.duration=0,u.delay=0),d&&!i&&void 0!==t.get()){const e=zx(u.keyframes,a);if(void 0!==e)return Ux.update((()=>{u.onUpdate(e),u.onComplete()})),new FQ([])}return!i&&QQ.supports(u)?new QQ(u):new vQ(u)}},MQ=e=>Boolean(e&&"object"===typeof e&&e.mix&&e.toValue),SQ=e=>Bx(e)?e[e.length-1]||0:e;function NQ(e,t){-1===e.indexOf(t)&&e.push(t)}function kQ(e,t){const r=e.indexOf(t);r>-1&&e.splice(r,1)}class RQ{constructor(){this.subscriptions=[]}add(e){return NQ(this.subscriptions,e),()=>kQ(this.subscriptions,e)}notify(e,t,r){const n=this.subscriptions.length;if(n)if(1===n)this.subscriptions[0](e,t,r);else for(let s=0;s<n;s++){const n=this.subscriptions[s];n&&n(e,t,r)}}getSize(){return this.subscriptions.length}clear(){this.subscriptions.length=0}}const TQ={current:void 0};class WQ{constructor(e){var t=this;let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.version="11.5.4",this.canTrackVelocity=null,this.events={},this.updateAndNotify=function(e){let r=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=gD.now();t.updatedAt!==n&&t.setPrevFrameValue(),t.prev=t.current,t.setCurrent(e),t.current!==t.prev&&t.events.change&&t.events.change.notify(t.current),r&&t.events.renderRequest&&t.events.renderRequest.notify(t.current)},this.hasAnimated=!1,this.setCurrent(e),this.owner=r.owner}setCurrent(e){var t;this.current=e,this.updatedAt=gD.now(),null===this.canTrackVelocity&&void 0!==e&&(this.canTrackVelocity=(t=this.current,!isNaN(parseFloat(t))))}setPrevFrameValue(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.current;this.prevFrameValue=e,this.prevUpdatedAt=this.updatedAt}onChange(e){return this.on("change",e)}on(e,t){this.events[e]||(this.events[e]=new RQ);const r=this.events[e].add(t);return"change"===e?()=>{r(),Ux.read((()=>{this.events.change.getSize()||this.stop()}))}:r}clearListeners(){for(const e in this.events)this.events[e].clear()}attach(e,t){this.passiveEffect=e,this.stopPassiveEffect=t}set(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];t&&this.passiveEffect?this.passiveEffect(e,this.updateAndNotify):this.updateAndNotify(e,t)}setWithVelocity(e,t,r){this.set(t),this.prev=void 0,this.prevFrameValue=e,this.prevUpdatedAt=this.updatedAt-r}jump(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this.updateAndNotify(e),this.prev=e,this.prevUpdatedAt=this.prevFrameValue=void 0,t&&this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}get(){return TQ.current&&TQ.current.push(this),this.current}getPrevious(){return this.prev}getVelocity(){const e=gD.now();if(!this.canTrackVelocity||void 0===this.prevFrameValue||e-this.updatedAt>30)return 0;const t=Math.min(this.updatedAt-this.prevUpdatedAt,30);return wD(parseFloat(this.current)-parseFloat(this.prevFrameValue),t)}start(e){return this.stop(),new Promise((t=>{this.hasAnimated=!0,this.animation=e(t),this.events.animationStart&&this.events.animationStart.notify()})).then((()=>{this.events.animationComplete&&this.events.animationComplete.notify(),this.clearAnimation()}))}stop(){this.animation&&(this.animation.stop(),this.events.animationCancel&&this.events.animationCancel.notify()),this.clearAnimation()}isAnimating(){return!!this.animation}clearAnimation(){delete this.animation}destroy(){this.clearListeners(),this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}}function jQ(e,t){return new WQ(e,t)}function GQ(e,t,r){e.hasValue(t)?e.getValue(t).set(r):e.addValue(t,jQ(r))}const XQ=e=>e.replace(/([a-z])([A-Z])/gu,"$1-$2").toLowerCase(),OQ="data-"+XQ("framerAppearId");function zQ(e){return e.props[OQ]}function YQ(e){return Lx.has(e)?"transform":bQ.has(e)?XQ(e):void 0}class HQ extends WQ{constructor(){super(...arguments),this.output=[],this.counts=new Map}add(e){const t=YQ(e);if(!t)return;const r=this.counts.get(t)||0;this.counts.set(t,r+1),0===r&&(this.output.push(t),this.update());let n=!1;return()=>{if(n)return;n=!0;const e=this.counts.get(t)-1;this.counts.set(t,e),0===e&&(kQ(this.output,t),this.update())}}update(){this.set(this.output.length?this.output.join(", "):"auto")}}const UQ=e=>Boolean(e&&e.getVelocity);function VQ(e,t){var r;if(!e.applyWillChange)return;let n=e.getValue("willChange");return n||(null===(r=e.props.style)||void 0===r?void 0:r.willChange)||(n=new HQ("auto"),e.addValue("willChange",n)),s=n,Boolean(UQ(s)&&s.add)?n.add(t):void 0;var s}function qQ(e,t){let{protectedKeys:r,needsAnimating:n}=e;const s=r.hasOwnProperty(t)&&!0!==n[t];return n[t]=!1,s}function ZQ(e,t){let{delay:r=0,transitionOverride:n,type:s}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};var i;let{transition:o=e.getDefaultTransition(),transitionEnd:A,...a}=t;n&&(o=n);const l=[],c=s&&e.animationState&&e.animationState.getState()[s];for(const u in a){const t=e.getValue(u,null!==(i=e.latestValues[u])&&void 0!==i?i:null),n=a[u];if(void 0===n||c&&qQ(c,u))continue;const s={delay:r,...Wx(o||{},u)};let A=!1;if(window.MotionHandoffAnimation){const t=zQ(e);if(t){const e=window.MotionHandoffAnimation(t,u,Ux);null!==e&&(s.startTime=e,A=!0)}}t.start(LQ(u,t,n,e.shouldReduceMotion&&Lx.has(u)?{type:!1}:s,e,A,VQ(e,u)));const d=t.animation;d&&l.push(d)}return A&&Promise.all(l).then((()=>{Ux.update((()=>{A&&function(e,t){const r=Dx(e,t);let{transitionEnd:n={},transition:s={},...i}=r||{};i={...i,...n};for(const o in i)GQ(e,o,SQ(i[o]))}(e,A)}))})),l}function KQ(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};var n;const s=Dx(e,t,"exit"===r.type?null===(n=e.presenceContext)||void 0===n?void 0:n.custom:void 0);let{transition:i=e.getDefaultTransition()||{}}=s||{};r.transitionOverride&&(i=r.transitionOverride);const o=s?()=>Promise.all(ZQ(e,s,r)):()=>Promise.resolve(),A=e.variantChildren&&e.variantChildren.size?function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const{delayChildren:s=0,staggerChildren:o,staggerDirection:A}=i;return function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,i=arguments.length>5?arguments[5]:void 0;const o=[],A=(e.variantChildren.size-1)*n,a=1===s?function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:0)*n}:function(){return A-(arguments.length>0&&void 0!==arguments[0]?arguments[0]:0)*n};return Array.from(e.variantChildren).sort(JQ).forEach(((e,n)=>{e.notify("AnimationStart",t),o.push(KQ(e,t,{...i,delay:r+a(n)}).then((()=>e.notify("AnimationComplete",t))))})),Promise.all(o)}(e,t,s+n,o,A,r)}:()=>Promise.resolve(),{when:a}=i;if(a){const[e,t]="beforeChildren"===a?[o,A]:[A,o];return e().then((()=>t()))}return Promise.all([o(),A(r.delay)])}function JQ(e,t){return e.sortNodePosition(t)}const _Q=[...Qx].reverse(),$Q=Qx.length;function eP(e){return t=>Promise.all(t.map((t=>{let{animation:r,options:n}=t;return function(e,t){let r,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(e.notify("AnimationStart",t),Array.isArray(t)){const s=t.map((t=>KQ(e,t,n)));r=Promise.all(s)}else if("string"===typeof t)r=KQ(e,t,n);else{const s="function"===typeof t?Dx(e,t,n.custom):t;r=Promise.all(ZQ(e,s,n))}return r.then((()=>{e.notify("AnimationComplete",t)}))}(e,r,n)})))}function tP(e,t){return"string"===typeof t?t!==e:!!Array.isArray(t)&&!Ex(t,e)}function rP(){return{isActive:arguments.length>0&&void 0!==arguments[0]&&arguments[0],protectedKeys:{},needsAnimating:{},prevResolvedValues:{}}}function nP(){return{animate:rP(!0),whileInView:rP(),whileHover:rP(),whileTap:rP(),whileDrag:rP(),whileFocus:rP(),exit:rP()}}class sP{constructor(e){this.isMounted=!1,this.node=e}update(){}}let iP=0;const oP={animation:{Feature:class extends sP{constructor(e){super(e),e.animationState||(e.animationState=function(e){let t=eP(e),r=nP(),n=!0;const s=t=>(r,n)=>{var s;const i=Dx(e,n,"exit"===t?null===(s=e.presenceContext)||void 0===s?void 0:s.custom:void 0);if(i){const{transition:e,transitionEnd:t,...n}=i;r={...r,...n,...t}}return r};function i(i){const o=e.getProps(),A=e.getVariantContext(!0)||{},a=[],l=new Set;let c={},u=1/0;for(let t=0;t<$Q;t++){const d=_Q[t],h=r[d],f=void 0!==o[d]?o[d]:A[d],g=Cx(f),p=d===i?h.isActive:null;!1===p&&(u=t);let m=f===A[d]&&f!==o[d]&&g;if(m&&n&&e.manuallyAnimateOnMount&&(m=!1),h.protectedKeys={...c},!h.isActive&&null===p||!f&&!h.prevProp||yx(f)||"boolean"===typeof f)continue;let w=tP(h.prevProp,f)||d===i&&h.isActive&&!m&&g||t>u&&g,v=!1;const b=Array.isArray(f)?f:[f];let y=b.reduce(s(d),{});!1===p&&(y={});const{prevResolvedValues:B={}}=h,E={...B,...y},C=t=>{w=!0,l.has(t)&&(v=!0,l.delete(t)),h.needsAnimating[t]=!0;const r=e.getValue(t);r&&(r.liveStyle=!1)};for(const e in E){const t=y[e],r=B[e];if(c.hasOwnProperty(e))continue;let n=!1;n=Bx(t)&&Bx(r)?!Ex(t,r):t!==r,n?void 0!==t&&null!==t?C(e):l.add(e):void 0!==t&&l.has(e)?C(e):h.protectedKeys[e]=!0}h.prevProp=f,h.prevResolvedValues=y,h.isActive&&(c={...c,...y}),n&&e.blockInitialAnimation&&(w=!1),!w||m&&!v||a.push(...b.map((e=>({animation:e,options:{type:d}}))))}if(l.size){const t={};l.forEach((r=>{const n=e.getBaseTarget(r),s=e.getValue(r);s&&(s.liveStyle=!0),t[r]=null!==n&&void 0!==n?n:null})),a.push({animation:t})}let d=Boolean(a.length);return!n||!1!==o.initial&&o.initial!==o.animate||e.manuallyAnimateOnMount||(d=!1),n=!1,d?t(a):Promise.resolve()}return{animateChanges:i,setActive:function(t,n){var s;if(r[t].isActive===n)return Promise.resolve();null===(s=e.variantChildren)||void 0===s||s.forEach((e=>{var r;return null===(r=e.animationState)||void 0===r?void 0:r.setActive(t,n)})),r[t].isActive=n;const o=i(t);for(const e in r)r[e].protectedKeys={};return o},setAnimateFunction:function(r){t=r(e)},getState:()=>r,reset:()=>{r=nP(),n=!0}}}(e))}updateAnimationControlsSubscription(){const{animate:e}=this.node.getProps();yx(e)&&(this.unmountControls=e.subscribe(this.node))}mount(){this.updateAnimationControlsSubscription()}update(){const{animate:e}=this.node.getProps(),{animate:t}=this.node.prevProps||{};e!==t&&this.updateAnimationControlsSubscription()}unmount(){var e;this.node.animationState.reset(),null===(e=this.unmountControls)||void 0===e||e.call(this)}}},exit:{Feature:class extends sP{constructor(){super(...arguments),this.id=iP++}update(){if(!this.node.presenceContext)return;const{isPresent:e,onExitComplete:t}=this.node.presenceContext,{isPresent:r}=this.node.prevPresenceContext||{};if(!this.node.animationState||e===r)return;const n=this.node.animationState.setActive("exit",!e);t&&!e&&n.then((()=>t(this.id)))}mount(){const{register:e}=this.node.presenceContext||{};e&&(this.unmount=e(this.id))}unmount(){}}}},AP=e=>"mouse"===e.pointerType?"number"!==typeof e.button||e.button<=0:!1!==e.isPrimary;function aP(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"page";return{point:{x:e[`${t}X`],y:e[`${t}Y`]}}}const lP=e=>t=>AP(t)&&e(t,aP(t));function cP(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{passive:!0};return e.addEventListener(t,r,n),()=>e.removeEventListener(t,r)}function uP(e,t,r,n){return cP(e,t,lP(r),n)}const dP=(e,t)=>Math.abs(e-t);class hP{constructor(e,t){let{transformPagePoint:r,contextWindow:n,dragSnapToOrigin:s=!1}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.startEvent=null,this.lastMoveEvent=null,this.lastMoveEventInfo=null,this.handlers={},this.contextWindow=window,this.updatePoint=()=>{if(!this.lastMoveEvent||!this.lastMoveEventInfo)return;const e=pP(this.lastMoveEventInfo,this.history),t=null!==this.startEvent,r=function(e,t){const r=dP(e.x,t.x),n=dP(e.y,t.y);return Math.sqrt(r**2+n**2)}(e.offset,{x:0,y:0})>=3;if(!t&&!r)return;const{point:n}=e,{timestamp:s}=qx;this.history.push({...n,timestamp:s});const{onStart:i,onMove:o}=this.handlers;t||(i&&i(this.lastMoveEvent,e),this.startEvent=this.lastMoveEvent),o&&o(this.lastMoveEvent,e)},this.handlePointerMove=(e,t)=>{this.lastMoveEvent=e,this.lastMoveEventInfo=fP(t,this.transformPagePoint),Ux.update(this.updatePoint,!0)},this.handlePointerUp=(e,t)=>{this.end();const{onEnd:r,onSessionEnd:n,resumeAnimation:s}=this.handlers;if(this.dragSnapToOrigin&&s&&s(),!this.lastMoveEvent||!this.lastMoveEventInfo)return;const i=pP("pointercancel"===e.type?this.lastMoveEventInfo:fP(t,this.transformPagePoint),this.history);this.startEvent&&r&&r(e,i),n&&n(e,i)},!AP(e))return;this.dragSnapToOrigin=s,this.handlers=t,this.transformPagePoint=r,this.contextWindow=n||window;const i=fP(aP(e),this.transformPagePoint),{point:o}=i,{timestamp:A}=qx;this.history=[{...o,timestamp:A}];const{onSessionStart:a}=t;a&&a(e,pP(i,this.history)),this.removeListeners=JD(uP(this.contextWindow,"pointermove",this.handlePointerMove),uP(this.contextWindow,"pointerup",this.handlePointerUp),uP(this.contextWindow,"pointercancel",this.handlePointerUp))}updateHandlers(e){this.handlers=e}end(){this.removeListeners&&this.removeListeners(),Vx(this.updatePoint)}}function fP(e,t){return t?{point:t(e.point)}:e}function gP(e,t){return{x:e.x-t.x,y:e.y-t.y}}function pP(e,t){let{point:r}=e;return{point:r,delta:gP(r,wP(t)),offset:gP(r,mP(t)),velocity:vP(t,.1)}}function mP(e){return e[0]}function wP(e){return e[e.length-1]}function vP(e,t){if(e.length<2)return{x:0,y:0};let r=e.length-1,n=null;const s=wP(e);for(;r>=0&&(n=e[r],!(s.timestamp-n.timestamp>Mx(t)));)r--;if(!n)return{x:0,y:0};const i=Sx(s.timestamp-n.timestamp);if(0===i)return{x:0,y:0};const o={x:(s.x-n.x)/i,y:(s.y-n.y)/i};return o.x===1/0&&(o.x=0),o.y===1/0&&(o.y=0),o}function bP(e){let t=null;return()=>{const r=()=>{t=null};return null===t&&(t=e,r)}}const yP=bP("dragHorizontal"),BP=bP("dragVertical");function EP(e){let t=!1;if("y"===e)t=BP();else if("x"===e)t=yP();else{const e=yP(),r=BP();e&&r?t=()=>{e(),r()}:(e&&e(),r&&r())}return t}function CP(){const e=EP(!0);return!e||(e(),!1)}function xP(e){return e&&"object"===typeof e&&Object.prototype.hasOwnProperty.call(e,"current")}const IP=.9999,DP=1.0001,QP=-.01,PP=.01;function FP(e){return e.max-e.min}function LP(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;e.origin=n,e.originPoint=$D(t.min,t.max,e.origin),e.scale=FP(r)/FP(t),e.translate=$D(r.min,r.max,e.origin)-e.originPoint,(e.scale>=IP&&e.scale<=DP||isNaN(e.scale))&&(e.scale=1),(e.translate>=QP&&e.translate<=PP||isNaN(e.translate))&&(e.translate=0)}function MP(e,t,r,n){LP(e.x,t.x,r.x,n?n.originX:void 0),LP(e.y,t.y,r.y,n?n.originY:void 0)}function SP(e,t,r){e.min=r.min+t.min,e.max=e.min+FP(t)}function NP(e,t,r){e.min=t.min-r.min,e.max=e.min+FP(t)}function kP(e,t,r){NP(e.x,t.x,r.x),NP(e.y,t.y,r.y)}function RP(e,t,r){return{min:void 0!==t?e.min+t:void 0,max:void 0!==r?e.max+r-(e.max-e.min):void 0}}function TP(e,t){let r=t.min-e.min,n=t.max-e.max;return t.max-t.min<e.max-e.min&&([r,n]=[n,r]),{min:r,max:n}}const WP=.35;function jP(e,t,r){return{min:GP(e,t),max:GP(e,r)}}function GP(e,t){return"number"===typeof e?e:e[t]||0}const XP=()=>({x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}}),OP=()=>({x:{min:0,max:0},y:{min:0,max:0}});function zP(e){return[e("x"),e("y")]}function YP(e){let{top:t,left:r,right:n,bottom:s}=e;return{x:{min:r,max:n},y:{min:t,max:s}}}function HP(e){return void 0===e||1===e}function UP(e){let{scale:t,scaleX:r,scaleY:n}=e;return!HP(t)||!HP(r)||!HP(n)}function VP(e){return UP(e)||qP(e)||e.z||e.rotate||e.rotateX||e.rotateY||e.skewX||e.skewY}function qP(e){return ZP(e.x)||ZP(e.y)}function ZP(e){return e&&"0%"!==e}function KP(e,t,r){return r+t*(e-r)}function JP(e,t,r,n,s){return void 0!==s&&(e=KP(e,s,n)),KP(e,r,n)+t}function _P(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,n=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;e.min=JP(e.min,t,r,n,s),e.max=JP(e.max,t,r,n,s)}function $P(e,t){let{x:r,y:n}=t;_P(e.x,r.translate,r.scale,r.originPoint),_P(e.y,n.translate,n.scale,n.originPoint)}const eF=.999999999999,tF=1.0000000000001;function rF(e,t){e.min=e.min+t,e.max=e.max+t}function nF(e,t,r,n){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;_P(e,t,r,$D(e.min,e.max,s),n)}function sF(e,t){nF(e.x,t.x,t.scaleX,t.scale,t.originX),nF(e.y,t.y,t.scaleY,t.scale,t.originY)}function iF(e,t){return YP(function(e,t){if(!t)return e;const r=t({x:e.left,y:e.top}),n=t({x:e.right,y:e.bottom});return{top:r.y,left:r.x,bottom:n.y,right:n.x}}(e.getBoundingClientRect(),t))}const oF=e=>{let{current:t}=e;return t?t.ownerDocument.defaultView:null},AF=new WeakMap;class aF{constructor(e){this.openGlobalLock=null,this.isDragging=!1,this.currentDirection=null,this.originPoint={x:0,y:0},this.constraints=!1,this.hasMutatedConstraints=!1,this.elastic=OP(),this.visualElement=e}start(e){let{snapToCursor:t=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{presenceContext:r}=this.visualElement;if(r&&!1===r.isPresent)return;const{dragSnapToOrigin:n}=this.getProps();this.panSession=new hP(e,{onSessionStart:e=>{const{dragSnapToOrigin:r}=this.getProps();r?this.pauseAnimation():this.stopAnimation(),t&&this.snapToCursor(aP(e,"page").point)},onStart:(e,t)=>{var r;const{drag:n,dragPropagation:s,onDragStart:i}=this.getProps();if(n&&!s&&(this.openGlobalLock&&this.openGlobalLock(),this.openGlobalLock=EP(n),!this.openGlobalLock))return;this.isDragging=!0,this.currentDirection=null,this.resolveConstraints(),this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!0,this.visualElement.projection.target=void 0),zP((e=>{let t=this.getAxisMotionValue(e).get()||0;if(pI.test(t)){const{projection:r}=this.visualElement;if(r&&r.layout){const n=r.layout.layoutBox[e];if(n){t=FP(n)*(parseFloat(t)/100)}}}this.originPoint[e]=t})),i&&Ux.postRender((()=>i(e,t))),null===(r=this.removeWillChange)||void 0===r||r.call(this),this.removeWillChange=VQ(this.visualElement,"transform");const{animationState:o}=this.visualElement;o&&o.setActive("whileDrag",!0)},onMove:(e,t)=>{const{dragPropagation:r,dragDirectionLock:n,onDirectionLock:s,onDrag:i}=this.getProps();if(!r&&!this.openGlobalLock)return;const{offset:o}=t;if(n&&null===this.currentDirection)return this.currentDirection=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,r=null;Math.abs(e.y)>t?r="y":Math.abs(e.x)>t&&(r="x");return r}(o),void(null!==this.currentDirection&&s&&s(this.currentDirection));this.updateAxis("x",t.point,o),this.updateAxis("y",t.point,o),this.visualElement.render(),i&&i(e,t)},onSessionEnd:(e,t)=>this.stop(e,t),resumeAnimation:()=>zP((e=>{var t;return"paused"===this.getAnimationState(e)&&(null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.play())}))},{transformPagePoint:this.visualElement.getTransformPagePoint(),dragSnapToOrigin:n,contextWindow:oF(this.visualElement)})}stop(e,t){var r;null===(r=this.removeWillChange)||void 0===r||r.call(this);const n=this.isDragging;if(this.cancel(),!n)return;const{velocity:s}=t;this.startAnimation(s);const{onDragEnd:i}=this.getProps();i&&Ux.postRender((()=>i(e,t)))}cancel(){this.isDragging=!1;const{projection:e,animationState:t}=this.visualElement;e&&(e.isAnimationBlocked=!1),this.panSession&&this.panSession.end(),this.panSession=void 0;const{dragPropagation:r}=this.getProps();!r&&this.openGlobalLock&&(this.openGlobalLock(),this.openGlobalLock=null),t&&t.setActive("whileDrag",!1)}updateAxis(e,t,r){const{drag:n}=this.getProps();if(!r||!lF(e,n,this.currentDirection))return;const s=this.getAxisMotionValue(e);let i=this.originPoint[e]+r[e];this.constraints&&this.constraints[e]&&(i=function(e,t,r){let{min:n,max:s}=t;return void 0!==n&&e<n?e=r?$D(n,e,r.min):Math.max(e,n):void 0!==s&&e>s&&(e=r?$D(s,e,r.max):Math.min(e,s)),e}(i,this.constraints[e],this.elastic[e])),s.set(i)}resolveConstraints(){var e;const{dragConstraints:t,dragElastic:r}=this.getProps(),n=this.visualElement.projection&&!this.visualElement.projection.layout?this.visualElement.projection.measure(!1):null===(e=this.visualElement.projection)||void 0===e?void 0:e.layout,s=this.constraints;t&&xP(t)?this.constraints||(this.constraints=this.resolveRefConstraints()):this.constraints=!(!t||!n)&&function(e,t){let{top:r,left:n,bottom:s,right:i}=t;return{x:RP(e.x,n,i),y:RP(e.y,r,s)}}(n.layoutBox,t),this.elastic=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:WP;return!1===e?e=0:!0===e&&(e=WP),{x:jP(e,"left","right"),y:jP(e,"top","bottom")}}(r),s!==this.constraints&&n&&this.constraints&&!this.hasMutatedConstraints&&zP((e=>{!1!==this.constraints&&this.getAxisMotionValue(e)&&(this.constraints[e]=function(e,t){const r={};return void 0!==t.min&&(r.min=t.min-e.min),void 0!==t.max&&(r.max=t.max-e.min),r}(n.layoutBox[e],this.constraints[e]))}))}resolveRefConstraints(){const{dragConstraints:e,onMeasureDragConstraints:t}=this.getProps();if(!e||!xP(e))return!1;const r=e.current;Fe(null!==r,"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");const{projection:n}=this.visualElement;if(!n||!n.layout)return!1;const s=function(e,t,r){const n=iF(e,r),{scroll:s}=t;return s&&(rF(n.x,s.offset.x),rF(n.y,s.offset.y)),n}(r,n.root,this.visualElement.getTransformPagePoint());let i=function(e,t){return{x:TP(e.x,t.x),y:TP(e.y,t.y)}}(n.layout.layoutBox,s);if(t){const e=t(function(e){let{x:t,y:r}=e;return{top:r.min,right:t.max,bottom:r.max,left:t.min}}(i));this.hasMutatedConstraints=!!e,e&&(i=YP(e))}return i}startAnimation(e){const{drag:t,dragMomentum:r,dragElastic:n,dragTransition:s,dragSnapToOrigin:i,onDragTransitionEnd:o}=this.getProps(),A=this.constraints||{},a=zP((o=>{if(!lF(o,t,this.currentDirection))return;let a=A&&A[o]||{};i&&(a={min:0,max:0});const l=n?200:1e6,c=n?40:1e7,u={type:"inertia",velocity:r?e[o]:0,bounceStiffness:l,bounceDamping:c,timeConstant:750,restDelta:1,restSpeed:10,...s,...a};return this.startAxisValueAnimation(o,u)}));return Promise.all(a).then(o)}startAxisValueAnimation(e,t){const r=this.getAxisMotionValue(e);return r.start(LQ(e,r,0,t,this.visualElement,!1,VQ(this.visualElement,e)))}stopAnimation(){zP((e=>this.getAxisMotionValue(e).stop()))}pauseAnimation(){zP((e=>{var t;return null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.pause()}))}getAnimationState(e){var t;return null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.state}getAxisMotionValue(e){const t=`_drag${e.toUpperCase()}`,r=this.visualElement.getProps(),n=r[t];return n||this.visualElement.getValue(e,(r.initial?r.initial[e]:void 0)||0)}snapToCursor(e){zP((t=>{const{drag:r}=this.getProps();if(!lF(t,r,this.currentDirection))return;const{projection:n}=this.visualElement,s=this.getAxisMotionValue(t);if(n&&n.layout){const{min:r,max:i}=n.layout.layoutBox[t];s.set(e[t]-$D(r,i,.5))}}))}scalePositionWithinConstraints(){if(!this.visualElement.current)return;const{drag:e,dragConstraints:t}=this.getProps(),{projection:r}=this.visualElement;if(!xP(t)||!r||!this.constraints)return;this.stopAnimation();const n={x:0,y:0};zP((e=>{const t=this.getAxisMotionValue(e);if(t&&!1!==this.constraints){const r=t.get();n[e]=function(e,t){let r=.5;const n=FP(e),s=FP(t);return s>n?r=_D(t.min,t.max-n,e.min):n>s&&(r=_D(e.min,e.max-s,t.min)),iI(0,1,r)}({min:r,max:r},this.constraints[e])}}));const{transformTemplate:s}=this.visualElement.getProps();this.visualElement.current.style.transform=s?s({},""):"none",r.root&&r.root.updateScroll(),r.updateLayout(),this.resolveConstraints(),zP((t=>{if(!lF(t,e,null))return;const r=this.getAxisMotionValue(t),{min:s,max:i}=this.constraints[t];r.set($D(s,i,n[t]))}))}addListeners(){if(!this.visualElement.current)return;AF.set(this.visualElement,this);const e=uP(this.visualElement.current,"pointerdown",(e=>{const{drag:t,dragListener:r=!0}=this.getProps();t&&r&&this.start(e)})),t=()=>{const{dragConstraints:e}=this.getProps();xP(e)&&e.current&&(this.constraints=this.resolveRefConstraints())},{projection:r}=this.visualElement,n=r.addEventListener("measure",t);r&&!r.layout&&(r.root&&r.root.updateScroll(),r.updateLayout()),Ux.read(t);const s=cP(window,"resize",(()=>this.scalePositionWithinConstraints())),i=r.addEventListener("didUpdate",(e=>{let{delta:t,hasLayoutChanged:r}=e;this.isDragging&&r&&(zP((e=>{const r=this.getAxisMotionValue(e);r&&(this.originPoint[e]+=t[e].translate,r.set(r.get()+t[e].translate))})),this.visualElement.render())}));return()=>{s(),e(),n(),i&&i()}}getProps(){const e=this.visualElement.getProps(),{drag:t=!1,dragDirectionLock:r=!1,dragPropagation:n=!1,dragConstraints:s=!1,dragElastic:i=WP,dragMomentum:o=!0}=e;return{...e,drag:t,dragDirectionLock:r,dragPropagation:n,dragConstraints:s,dragElastic:i,dragMomentum:o}}}function lF(e,t,r){return(!0===t||t===e)&&(null===r||r===e)}const cF=e=>(t,r)=>{e&&Ux.postRender((()=>e(t,r)))};const uF=(0,s.createContext)({}),dF={hasAnimatedSinceResize:!0,hasEverUpdated:!1};function hF(e,t){return t.max===t.min?0:e/(t.max-t.min)*100}const fF={correct:(e,t)=>{if(!t.target)return e;if("string"===typeof e){if(!mI.test(e))return e;e=parseFloat(e)}return`${hF(e,t.target.x)}% ${hF(e,t.target.y)}%`}},gF={correct:(e,t)=>{let{treeScale:r,projectionDelta:n}=t;const s=e,i=eD.parse(e);if(i.length>5)return s;const o=eD.createTransformer(e),A="number"!==typeof i[0]?1:0,a=n.x.scale*r.x,l=n.y.scale*r.y;i[0+A]/=a,i[1+A]/=l;const c=$D(a,l,.5);return"number"===typeof i[2+A]&&(i[2+A]/=c),"number"===typeof i[3+A]&&(i[3+A]/=c),o(i)}},pF={};const{schedule:mF,cancel:wF}=Hx(queueMicrotask,!1);class vF extends s.Component{componentDidMount(){const{visualElement:e,layoutGroup:t,switchLayoutGroup:r,layoutId:n}=this.props,{projection:s}=e;var i;i=yF,Object.assign(pF,i),s&&(t.group&&t.group.add(s),r&&r.register&&n&&r.register(s),s.root.didUpdate(),s.addEventListener("animationComplete",(()=>{this.safeToRemove()})),s.setOptions({...s.options,onExitComplete:()=>this.safeToRemove()})),dF.hasEverUpdated=!0}getSnapshotBeforeUpdate(e){const{layoutDependency:t,visualElement:r,drag:n,isPresent:s}=this.props,i=r.projection;return i?(i.isPresent=s,n||e.layoutDependency!==t||void 0===t?i.willUpdate():this.safeToRemove(),e.isPresent!==s&&(s?i.promote():i.relegate()||Ux.postRender((()=>{const e=i.getStack();e&&e.members.length||this.safeToRemove()}))),null):null}componentDidUpdate(){const{projection:e}=this.props.visualElement;e&&(e.root.didUpdate(),mF.postRender((()=>{!e.currentAnimation&&e.isLead()&&this.safeToRemove()})))}componentWillUnmount(){const{visualElement:e,layoutGroup:t,switchLayoutGroup:r}=this.props,{projection:n}=e;n&&(n.scheduleCheckAfterUnmount(),t&&t.group&&t.group.remove(n),r&&r.deregister&&r.deregister(n))}safeToRemove(){const{safeToRemove:e}=this.props;e&&e()}render(){return null}}function bF(e){const[t,r]=function(){const e=(0,s.useContext)(be);if(null===e)return[!0,null];const{isPresent:t,onExitComplete:r,register:n}=e,i=(0,s.useId)();(0,s.useEffect)((()=>n(i)),[]);const o=(0,s.useCallback)((()=>r&&r(i)),[i,r]);return!t&&r?[!1,o]:[!0]}(),n=(0,s.useContext)(De);return(0,ve.jsx)(vF,{...e,layoutGroup:n,switchLayoutGroup:(0,s.useContext)(uF),isPresent:t,safeToRemove:r})}const yF={borderRadius:{...fF,applyTo:["borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"]},borderTopLeftRadius:fF,borderTopRightRadius:fF,borderBottomLeftRadius:fF,borderBottomRightRadius:fF,boxShadow:gF},BF=["TopLeft","TopRight","BottomLeft","BottomRight"],EF=BF.length,CF=e=>"string"===typeof e?parseFloat(e):e,xF=e=>"number"===typeof e||mI.test(e);function IF(e,t){return void 0!==e[t]?e[t]:e.borderRadius}const DF=PF(0,.5,YD),QF=PF(.5,.95,Qe);function PF(e,t,r){return n=>n<e?0:n>t?1:r(_D(e,t,n))}function FF(e,t){e.min=t.min,e.max=t.max}function LF(e,t){FF(e.x,t.x),FF(e.y,t.y)}function MF(e,t){e.translate=t.translate,e.scale=t.scale,e.originPoint=t.originPoint,e.origin=t.origin}function SF(e,t,r,n,s){return e=KP(e-=t,1/r,n),void 0!==s&&(e=KP(e,1/s,n)),e}function NF(e,t,r,n,s){let[i,o,A]=r;!function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,s=arguments.length>4?arguments[4]:void 0,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:e,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:e;pI.test(t)&&(t=parseFloat(t),t=$D(o.min,o.max,t/100)-o.min);if("number"!==typeof t)return;let A=$D(i.min,i.max,n);e===i&&(A-=t),e.min=SF(e.min,t,r,A,s),e.max=SF(e.max,t,r,A,s)}(e,t[i],t[o],t[A],t.scale,n,s)}const kF=["x","scaleX","originX"],RF=["y","scaleY","originY"];function TF(e,t,r,n){NF(e.x,t,kF,r?r.x:void 0,n?n.x:void 0),NF(e.y,t,RF,r?r.y:void 0,n?n.y:void 0)}function WF(e){return 0===e.translate&&1===e.scale}function jF(e){return WF(e.x)&&WF(e.y)}function GF(e,t){return e.min===t.min&&e.max===t.max}function XF(e,t){return Math.round(e.min)===Math.round(t.min)&&Math.round(e.max)===Math.round(t.max)}function OF(e,t){return XF(e.x,t.x)&&XF(e.y,t.y)}function zF(e){return FP(e.x)/FP(e.y)}function YF(e,t){return e.translate===t.translate&&e.scale===t.scale&&e.originPoint===t.originPoint}class HF{constructor(){this.members=[]}add(e){NQ(this.members,e),e.scheduleRender()}remove(e){if(kQ(this.members,e),e===this.prevLead&&(this.prevLead=void 0),e===this.lead){const e=this.members[this.members.length-1];e&&this.promote(e)}}relegate(e){const t=this.members.findIndex((t=>e===t));if(0===t)return!1;let r;for(let n=t;n>=0;n--){const e=this.members[n];if(!1!==e.isPresent){r=e;break}}return!!r&&(this.promote(r),!0)}promote(e,t){const r=this.lead;if(e!==r&&(this.prevLead=r,this.lead=e,e.show(),r)){r.instance&&r.scheduleRender(),e.scheduleRender(),e.resumeFrom=r,t&&(e.resumeFrom.preserveOpacity=!0),r.snapshot&&(e.snapshot=r.snapshot,e.snapshot.latestValues=r.animationValues||r.latestValues),e.root&&e.root.isUpdating&&(e.isLayoutDirty=!0);const{crossfade:n}=e.options;!1===n&&r.hide()}}exitAnimationComplete(){this.members.forEach((e=>{const{options:t,resumingFrom:r}=e;t.onExitComplete&&t.onExitComplete(),r&&r.options.onExitComplete&&r.options.onExitComplete()}))}scheduleRender(){this.members.forEach((e=>{e.instance&&e.scheduleRender(!1)}))}removeLeadSnapshot(){this.lead&&this.lead.snapshot&&(this.lead.snapshot=void 0)}}const UF=(e,t)=>e.depth-t.depth;class VF{constructor(){this.children=[],this.isDirty=!1}add(e){NQ(this.children,e),this.isDirty=!0}remove(e){kQ(this.children,e),this.isDirty=!0}forEach(e){this.isDirty&&this.children.sort(UF),this.isDirty=!1,this.children.forEach(e)}}function qF(e){const t=UQ(e)?e.get():e;return MQ(t)?t.toValue():t}const ZF={type:"projectionFrame",totalNodes:0,resolvedTargetDeltas:0,recalculatedProjection:0},KF="undefined"!==typeof window&&void 0!==window.MotionDebug,JF=["","X","Y","Z"],_F={visibility:"hidden"};let $F=0;function eL(e,t,r,n){const{latestValues:s}=t;s[e]&&(r[e]=s[e],t.setStaticValue(e,0),n&&(n[e]=0))}function tL(e){if(e.hasCheckedOptimisedAppear=!0,e.root===e)return;const{visualElement:t}=e.options;if(!t)return;const r=zQ(t);if(window.MotionHasOptimisedAnimation(r,"transform")){const{layout:t,layoutId:n}=e.options;window.MotionCancelOptimisedAnimation(r,"transform",Ux,!(t||n))}const{parent:n}=e;n&&!n.hasCheckedOptimisedAppear&&tL(n)}function rL(e){let{attachResizeListener:t,defaultParent:r,measureScroll:n,checkIsScrollRoot:s,resetTransform:i}=e;return class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null===r||void 0===r?void 0:r();this.id=$F++,this.animationId=0,this.children=new Set,this.options={},this.isTreeAnimating=!1,this.isAnimationBlocked=!1,this.isLayoutDirty=!1,this.isProjectionDirty=!1,this.isSharedProjectionDirty=!1,this.isTransformDirty=!1,this.updateManuallyBlocked=!1,this.updateBlockedByResize=!1,this.isUpdating=!1,this.isSVG=!1,this.needsReset=!1,this.shouldResetTransform=!1,this.hasCheckedOptimisedAppear=!1,this.treeScale={x:1,y:1},this.eventHandlers=new Map,this.hasTreeAnimated=!1,this.updateScheduled=!1,this.scheduleUpdate=()=>this.update(),this.projectionUpdateScheduled=!1,this.checkUpdateFailed=()=>{this.isUpdating&&(this.isUpdating=!1,this.clearAllSnapshots())},this.updateProjection=()=>{this.projectionUpdateScheduled=!1,KF&&(ZF.totalNodes=ZF.resolvedTargetDeltas=ZF.recalculatedProjection=0),this.nodes.forEach(iL),this.nodes.forEach(dL),this.nodes.forEach(hL),this.nodes.forEach(oL),KF&&window.MotionDebug.record(ZF)},this.resolvedRelativeTargetAt=0,this.hasProjected=!1,this.isVisible=!0,this.animationProgress=0,this.sharedNodes=new Map,this.latestValues=e,this.root=t?t.root||t:this,this.path=t?[...t.path,t]:[],this.parent=t,this.depth=t?t.depth+1:0;for(let r=0;r<this.path.length;r++)this.path[r].shouldResetTransform=!0;this.root===this&&(this.nodes=new VF)}addEventListener(e,t){return this.eventHandlers.has(e)||this.eventHandlers.set(e,new RQ),this.eventHandlers.get(e).add(t)}notifyListeners(e){const t=this.eventHandlers.get(e);for(var r=arguments.length,n=new Array(r>1?r-1:0),s=1;s<r;s++)n[s-1]=arguments[s];t&&t.notify(...n)}hasListeners(e){return this.eventHandlers.has(e)}mount(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.root.hasTreeAnimated;if(this.instance)return;var n;this.isSVG=(n=e)instanceof SVGElement&&"svg"!==n.tagName,this.instance=e;const{layoutId:s,layout:i,visualElement:o}=this.options;if(o&&!o.current&&o.mount(e),this.root.nodes.add(this),this.parent&&this.parent.children.add(this),r&&(i||s)&&(this.isLayoutDirty=!0),t){let r;const n=()=>this.root.updateBlockedByResize=!1;t(e,(()=>{this.root.updateBlockedByResize=!0,r&&r(),r=function(e,t){const r=gD.now(),n=s=>{let{timestamp:i}=s;const o=i-r;o>=t&&(Vx(n),e(o-t))};return Ux.read(n,!0),()=>Vx(n)}(n,250),dF.hasAnimatedSinceResize&&(dF.hasAnimatedSinceResize=!1,this.nodes.forEach(uL))}))}s&&this.root.registerSharedNode(s,this),!1!==this.options.animate&&o&&(s||i)&&this.addEventListener("didUpdate",(e=>{let{delta:t,hasLayoutChanged:r,hasRelativeTargetChanged:n,layout:s}=e;if(this.isTreeAnimationBlocked())return this.target=void 0,void(this.relativeTarget=void 0);const i=this.options.transition||o.getDefaultTransition()||vL,{onLayoutAnimationStart:A,onLayoutAnimationComplete:a}=o.getProps(),l=!this.targetLayout||!OF(this.targetLayout,s)||n,c=!r&&n;if(this.options.layoutRoot||this.resumeFrom&&this.resumeFrom.instance||c||r&&(l||!this.currentAnimation)){this.resumeFrom&&(this.resumingFrom=this.resumeFrom,this.resumingFrom.resumingFrom=void 0),this.setAnimationOrigin(t,c);const e={...Wx(i,"layout"),onPlay:A,onComplete:a};(o.shouldReduceMotion||this.options.layoutRoot)&&(e.delay=0,e.type=!1),this.startAnimation(e)}else r||uL(this),this.isLead()&&this.options.onExitComplete&&this.options.onExitComplete();this.targetLayout=s}))}unmount(){this.options.layoutId&&this.willUpdate(),this.root.nodes.remove(this);const e=this.getStack();e&&e.remove(this),this.parent&&this.parent.children.delete(this),this.instance=void 0,Vx(this.updateProjection)}blockUpdate(){this.updateManuallyBlocked=!0}unblockUpdate(){this.updateManuallyBlocked=!1}isUpdateBlocked(){return this.updateManuallyBlocked||this.updateBlockedByResize}isTreeAnimationBlocked(){return this.isAnimationBlocked||this.parent&&this.parent.isTreeAnimationBlocked()||!1}startUpdate(){this.isUpdateBlocked()||(this.isUpdating=!0,this.nodes&&this.nodes.forEach(fL),this.animationId++)}getTransformTemplate(){const{visualElement:e}=this.options;return e&&e.getProps().transformTemplate}willUpdate(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(this.root.hasTreeAnimated=!0,this.root.isUpdateBlocked())return void(this.options.onExitComplete&&this.options.onExitComplete());if(window.MotionCancelOptimisedAnimation&&!this.hasCheckedOptimisedAppear&&tL(this),!this.root.isUpdating&&this.root.startUpdate(),this.isLayoutDirty)return;this.isLayoutDirty=!0;for(let s=0;s<this.path.length;s++){const e=this.path[s];e.shouldResetTransform=!0,e.updateScroll("snapshot"),e.options.layoutRoot&&e.willUpdate(!1)}const{layoutId:t,layout:r}=this.options;if(void 0===t&&!r)return;const n=this.getTransformTemplate();this.prevTransformTemplateValue=n?n(this.latestValues,""):void 0,this.updateSnapshot(),e&&this.notifyListeners("willUpdate")}update(){this.updateScheduled=!1;if(this.isUpdateBlocked())return this.unblockUpdate(),this.clearAllSnapshots(),void this.nodes.forEach(aL);this.isUpdating||this.nodes.forEach(lL),this.isUpdating=!1,this.nodes.forEach(cL),this.nodes.forEach(nL),this.nodes.forEach(sL),this.clearAllSnapshots();const e=gD.now();qx.delta=iI(0,1e3/60,e-qx.timestamp),qx.timestamp=e,qx.isProcessing=!0,Zx.update.process(qx),Zx.preRender.process(qx),Zx.render.process(qx),qx.isProcessing=!1}didUpdate(){this.updateScheduled||(this.updateScheduled=!0,mF.read(this.scheduleUpdate))}clearAllSnapshots(){this.nodes.forEach(AL),this.sharedNodes.forEach(gL)}scheduleUpdateProjection(){this.projectionUpdateScheduled||(this.projectionUpdateScheduled=!0,Ux.preRender(this.updateProjection,!1,!0))}scheduleCheckAfterUnmount(){Ux.postRender((()=>{this.isLayoutDirty?this.root.didUpdate():this.root.checkUpdateFailed()}))}updateSnapshot(){!this.snapshot&&this.instance&&(this.snapshot=this.measure())}updateLayout(){if(!this.instance)return;if(this.updateScroll(),(!this.options.alwaysMeasureLayout||!this.isLead())&&!this.isLayoutDirty)return;if(this.resumeFrom&&!this.resumeFrom.instance)for(let r=0;r<this.path.length;r++){this.path[r].updateScroll()}const e=this.layout;this.layout=this.measure(!1),this.layoutCorrected=OP(),this.isLayoutDirty=!1,this.projectionDelta=void 0,this.notifyListeners("measure",this.layout.layoutBox);const{visualElement:t}=this.options;t&&t.notify("LayoutMeasure",this.layout.layoutBox,e?e.layoutBox:void 0)}updateScroll(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"measure",t=Boolean(this.options.layoutScroll&&this.instance);if(this.scroll&&this.scroll.animationId===this.root.animationId&&this.scroll.phase===e&&(t=!1),t){const t=s(this.instance);this.scroll={animationId:this.root.animationId,phase:e,isRoot:t,offset:n(this.instance),wasRoot:this.scroll?this.scroll.isRoot:t}}}resetTransform(){if(!i)return;const e=this.isLayoutDirty||this.shouldResetTransform||this.options.alwaysMeasureLayout,t=this.projectionDelta&&!jF(this.projectionDelta),r=this.getTransformTemplate(),n=r?r(this.latestValues,""):void 0,s=n!==this.prevTransformTemplateValue;e&&(t||VP(this.latestValues)||s)&&(i(this.instance,n),this.shouldResetTransform=!1,this.scheduleRender())}measure(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];const t=this.measurePageBox();let r=this.removeElementScroll(t);var n;return e&&(r=this.removeTransform(r)),BL((n=r).x),BL(n.y),{animationId:this.root.animationId,measuredBox:t,layoutBox:r,latestValues:{},source:this.id}}measurePageBox(){var e;const{visualElement:t}=this.options;if(!t)return OP();const r=t.measureViewportBox();if(!((null===(e=this.scroll)||void 0===e?void 0:e.wasRoot)||this.path.some(CL))){const{scroll:e}=this.root;e&&(rF(r.x,e.offset.x),rF(r.y,e.offset.y))}return r}removeElementScroll(e){var t;const r=OP();if(LF(r,e),null===(t=this.scroll)||void 0===t?void 0:t.wasRoot)return r;for(let n=0;n<this.path.length;n++){const t=this.path[n],{scroll:s,options:i}=t;t!==this.root&&s&&i.layoutScroll&&(s.wasRoot&&LF(r,e),rF(r.x,s.offset.x),rF(r.y,s.offset.y))}return r}applyTransform(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const r=OP();LF(r,e);for(let n=0;n<this.path.length;n++){const e=this.path[n];!t&&e.options.layoutScroll&&e.scroll&&e!==e.root&&sF(r,{x:-e.scroll.offset.x,y:-e.scroll.offset.y}),VP(e.latestValues)&&sF(r,e.latestValues)}return VP(this.latestValues)&&sF(r,this.latestValues),r}removeTransform(e){const t=OP();LF(t,e);for(let r=0;r<this.path.length;r++){const e=this.path[r];if(!e.instance)continue;if(!VP(e.latestValues))continue;UP(e.latestValues)&&e.updateSnapshot();const n=OP();LF(n,e.measurePageBox()),TF(t,e.latestValues,e.snapshot?e.snapshot.layoutBox:void 0,n)}return VP(this.latestValues)&&TF(t,this.latestValues),t}setTargetDelta(e){this.targetDelta=e,this.root.scheduleUpdateProjection(),this.isProjectionDirty=!0}setOptions(e){this.options={...this.options,...e,crossfade:void 0===e.crossfade||e.crossfade}}clearMeasurements(){this.scroll=void 0,this.layout=void 0,this.snapshot=void 0,this.prevTransformTemplateValue=void 0,this.targetDelta=void 0,this.target=void 0,this.isLayoutDirty=!1}forceRelativeParentToResolveTarget(){this.relativeParent&&this.relativeParent.resolvedRelativeTargetAt!==qx.timestamp&&this.relativeParent.resolveTargetDelta(!0)}resolveTargetDelta(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];var t;const r=this.getLead();this.isProjectionDirty||(this.isProjectionDirty=r.isProjectionDirty),this.isTransformDirty||(this.isTransformDirty=r.isTransformDirty),this.isSharedProjectionDirty||(this.isSharedProjectionDirty=r.isSharedProjectionDirty);const n=Boolean(this.resumingFrom)||this!==r;if(!(e||n&&this.isSharedProjectionDirty||this.isProjectionDirty||(null===(t=this.parent)||void 0===t?void 0:t.isProjectionDirty)||this.attemptToResolveRelativeTarget||this.root.updateBlockedByResize))return;const{layout:s,layoutId:i}=this.options;if(this.layout&&(s||i)){if(this.resolvedRelativeTargetAt=qx.timestamp,!this.targetDelta&&!this.relativeTarget){const e=this.getClosestProjectingParent();e&&e.layout&&1!==this.animationProgress?(this.relativeParent=e,this.forceRelativeParentToResolveTarget(),this.relativeTarget=OP(),this.relativeTargetOrigin=OP(),kP(this.relativeTargetOrigin,this.layout.layoutBox,e.layout.layoutBox),LF(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}if(this.relativeTarget||this.targetDelta){var o,A,a;if(this.target||(this.target=OP(),this.targetWithTransforms=OP()),this.relativeTarget&&this.relativeTargetOrigin&&this.relativeParent&&this.relativeParent.target?(this.forceRelativeParentToResolveTarget(),o=this.target,A=this.relativeTarget,a=this.relativeParent.target,SP(o.x,A.x,a.x),SP(o.y,A.y,a.y)):this.targetDelta?(Boolean(this.resumingFrom)?this.target=this.applyTransform(this.layout.layoutBox):LF(this.target,this.layout.layoutBox),$P(this.target,this.targetDelta)):LF(this.target,this.layout.layoutBox),this.attemptToResolveRelativeTarget){this.attemptToResolveRelativeTarget=!1;const e=this.getClosestProjectingParent();e&&Boolean(e.resumingFrom)===Boolean(this.resumingFrom)&&!e.options.layoutScroll&&e.target&&1!==this.animationProgress?(this.relativeParent=e,this.forceRelativeParentToResolveTarget(),this.relativeTarget=OP(),this.relativeTargetOrigin=OP(),kP(this.relativeTargetOrigin,this.target,e.target),LF(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}KF&&ZF.resolvedTargetDeltas++}}}getClosestProjectingParent(){if(this.parent&&!UP(this.parent.latestValues)&&!qP(this.parent.latestValues))return this.parent.isProjecting()?this.parent:this.parent.getClosestProjectingParent()}isProjecting(){return Boolean((this.relativeTarget||this.targetDelta||this.options.layoutRoot)&&this.layout)}calcProjection(){var e;const t=this.getLead(),r=Boolean(this.resumingFrom)||this!==t;let n=!0;if((this.isProjectionDirty||(null===(e=this.parent)||void 0===e?void 0:e.isProjectionDirty))&&(n=!1),r&&(this.isSharedProjectionDirty||this.isTransformDirty)&&(n=!1),this.resolvedRelativeTargetAt===qx.timestamp&&(n=!1),n)return;const{layout:s,layoutId:i}=this.options;if(this.isTreeAnimating=Boolean(this.parent&&this.parent.isTreeAnimating||this.currentAnimation||this.pendingAnimation),this.isTreeAnimating||(this.targetDelta=this.relativeTarget=void 0),!this.layout||!s&&!i)return;LF(this.layoutCorrected,this.layout.layoutBox);const o=this.treeScale.x,A=this.treeScale.y;!function(e,t,r){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=r.length;if(!s)return;let i,o;t.x=t.y=1;for(let A=0;A<s;A++){i=r[A],o=i.projectionDelta;const{visualElement:s}=i.options;s&&s.props.style&&"contents"===s.props.style.display||(n&&i.options.layoutScroll&&i.scroll&&i!==i.root&&sF(e,{x:-i.scroll.offset.x,y:-i.scroll.offset.y}),o&&(t.x*=o.x.scale,t.y*=o.y.scale,$P(e,o)),n&&VP(i.latestValues)&&sF(e,i.latestValues))}t.x<tF&&t.x>eF&&(t.x=1),t.y<tF&&t.y>eF&&(t.y=1)}(this.layoutCorrected,this.treeScale,this.path,r),!t.layout||t.target||1===this.treeScale.x&&1===this.treeScale.y||(t.target=t.layout.layoutBox,t.targetWithTransforms=OP());const{target:a}=t;a?(this.projectionDelta&&this.prevProjectionDelta?(MF(this.prevProjectionDelta.x,this.projectionDelta.x),MF(this.prevProjectionDelta.y,this.projectionDelta.y)):this.createProjectionDeltas(),MP(this.projectionDelta,this.layoutCorrected,a,this.latestValues),this.treeScale.x===o&&this.treeScale.y===A&&YF(this.projectionDelta.x,this.prevProjectionDelta.x)&&YF(this.projectionDelta.y,this.prevProjectionDelta.y)||(this.hasProjected=!0,this.scheduleRender(),this.notifyListeners("projectionUpdate",a)),KF&&ZF.recalculatedProjection++):this.prevProjectionDelta&&(this.createProjectionDeltas(),this.scheduleRender())}hide(){this.isVisible=!1}show(){this.isVisible=!0}scheduleRender(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];var t;if(null===(t=this.options.visualElement)||void 0===t||t.scheduleRender(),e){const e=this.getStack();e&&e.scheduleRender()}this.resumingFrom&&!this.resumingFrom.instance&&(this.resumingFrom=void 0)}createProjectionDeltas(){this.prevProjectionDelta=XP(),this.projectionDelta=XP(),this.projectionDeltaWithTransform=XP()}setAnimationOrigin(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const r=this.snapshot,n=r?r.latestValues:{},s={...this.latestValues},i=XP();this.relativeParent&&this.relativeParent.options.layoutRoot||(this.relativeTarget=this.relativeTargetOrigin=void 0),this.attemptToResolveRelativeTarget=!t;const o=OP(),A=(r?r.source:void 0)!==(this.layout?this.layout.source:void 0),a=this.getStack(),l=!a||a.members.length<=1,c=Boolean(A&&!l&&!0===this.options.crossfade&&!this.path.some(wL));let u;this.animationProgress=0,this.mixTargetDelta=t=>{const r=t/1e3;var a,d,h,f,g,p;pL(i.x,e.x,r),pL(i.y,e.y,r),this.setTargetDelta(i),this.relativeTarget&&this.relativeTargetOrigin&&this.layout&&this.relativeParent&&this.relativeParent.layout&&(kP(o,this.layout.layoutBox,this.relativeParent.layout.layoutBox),h=this.relativeTarget,f=this.relativeTargetOrigin,g=o,p=r,mL(h.x,f.x,g.x,p),mL(h.y,f.y,g.y,p),u&&(a=this.relativeTarget,d=u,GF(a.x,d.x)&&GF(a.y,d.y))&&(this.isProjectionDirty=!1),u||(u=OP()),LF(u,this.relativeTarget)),A&&(this.animationValues=s,function(e,t,r,n,s,i){s?(e.opacity=$D(0,void 0!==r.opacity?r.opacity:1,DF(n)),e.opacityExit=$D(void 0!==t.opacity?t.opacity:1,0,QF(n))):i&&(e.opacity=$D(void 0!==t.opacity?t.opacity:1,void 0!==r.opacity?r.opacity:1,n));for(let o=0;o<EF;o++){const s=`border${BF[o]}Radius`;let i=IF(t,s),A=IF(r,s);void 0===i&&void 0===A||(i||(i=0),A||(A=0),0===i||0===A||xF(i)===xF(A)?(e[s]=Math.max($D(CF(i),CF(A),n),0),(pI.test(A)||pI.test(i))&&(e[s]+="%")):e[s]=A)}(t.rotate||r.rotate)&&(e.rotate=$D(t.rotate||0,r.rotate||0,n))}(s,n,this.latestValues,r,c,l)),this.root.scheduleUpdateProjection(),this.scheduleRender(),this.animationProgress=r},this.mixTargetDelta(this.options.layoutRoot?1e3:0)}startAnimation(e){this.notifyListeners("animationStart"),this.currentAnimation&&this.currentAnimation.stop(),this.resumingFrom&&this.resumingFrom.currentAnimation&&this.resumingFrom.currentAnimation.stop(),this.pendingAnimation&&(Vx(this.pendingAnimation),this.pendingAnimation=void 0),this.pendingAnimation=Ux.update((()=>{dF.hasAnimatedSinceResize=!0,this.currentAnimation=function(e,t,r){const n=UQ(e)?e:jQ(e);return n.start(LQ("",n,t,r)),n.animation}(0,1e3,{...e,onUpdate:t=>{this.mixTargetDelta(t),e.onUpdate&&e.onUpdate(t)},onComplete:()=>{e.onComplete&&e.onComplete(),this.completeAnimation()}}),this.resumingFrom&&(this.resumingFrom.currentAnimation=this.currentAnimation),this.pendingAnimation=void 0}))}completeAnimation(){this.resumingFrom&&(this.resumingFrom.currentAnimation=void 0,this.resumingFrom.preserveOpacity=void 0);const e=this.getStack();e&&e.exitAnimationComplete(),this.resumingFrom=this.currentAnimation=this.animationValues=void 0,this.notifyListeners("animationComplete")}finishAnimation(){this.currentAnimation&&(this.mixTargetDelta&&this.mixTargetDelta(1e3),this.currentAnimation.stop()),this.completeAnimation()}applyTransformsToTarget(){const e=this.getLead();let{targetWithTransforms:t,target:r,layout:n,latestValues:s}=e;if(t&&r&&n){if(this!==e&&this.layout&&n&&EL(this.options.animationType,this.layout.layoutBox,n.layoutBox)){r=this.target||OP();const t=FP(this.layout.layoutBox.x);r.x.min=e.target.x.min,r.x.max=r.x.min+t;const n=FP(this.layout.layoutBox.y);r.y.min=e.target.y.min,r.y.max=r.y.min+n}LF(t,r),sF(t,s),MP(this.projectionDeltaWithTransform,this.layoutCorrected,t,s)}}registerSharedNode(e,t){this.sharedNodes.has(e)||this.sharedNodes.set(e,new HF);this.sharedNodes.get(e).add(t);const r=t.options.initialPromotionConfig;t.promote({transition:r?r.transition:void 0,preserveFollowOpacity:r&&r.shouldPreserveFollowOpacity?r.shouldPreserveFollowOpacity(t):void 0})}isLead(){const e=this.getStack();return!e||e.lead===this}getLead(){var e;const{layoutId:t}=this.options;return t&&(null===(e=this.getStack())||void 0===e?void 0:e.lead)||this}getPrevLead(){var e;const{layoutId:t}=this.options;return t?null===(e=this.getStack())||void 0===e?void 0:e.prevLead:void 0}getStack(){const{layoutId:e}=this.options;if(e)return this.root.sharedNodes.get(e)}promote(){let{needsReset:e,transition:t,preserveFollowOpacity:r}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const n=this.getStack();n&&n.promote(this,r),e&&(this.projectionDelta=void 0,this.needsReset=!0),t&&this.setOptions({transition:t})}relegate(){const e=this.getStack();return!!e&&e.relegate(this)}resetSkewAndRotation(){const{visualElement:e}=this.options;if(!e)return;let t=!1;const{latestValues:r}=e;if((r.z||r.rotate||r.rotateX||r.rotateY||r.rotateZ||r.skewX||r.skewY)&&(t=!0),!t)return;const n={};r.z&&eL("z",e,n,this.animationValues);for(let s=0;s<JF.length;s++)eL(`rotate${JF[s]}`,e,n,this.animationValues),eL(`skew${JF[s]}`,e,n,this.animationValues);e.render();for(const s in n)e.setStaticValue(s,n[s]),this.animationValues&&(this.animationValues[s]=n[s]);e.scheduleRender()}getProjectionStyles(e){var t,r;if(!this.instance||this.isSVG)return;if(!this.isVisible)return _F;const n={visibility:""},s=this.getTransformTemplate();if(this.needsReset)return this.needsReset=!1,n.opacity="",n.pointerEvents=qF(null===e||void 0===e?void 0:e.pointerEvents)||"",n.transform=s?s(this.latestValues,""):"none",n;const i=this.getLead();if(!this.projectionDelta||!this.layout||!i.target){const t={};return this.options.layoutId&&(t.opacity=void 0!==this.latestValues.opacity?this.latestValues.opacity:1,t.pointerEvents=qF(null===e||void 0===e?void 0:e.pointerEvents)||""),this.hasProjected&&!VP(this.latestValues)&&(t.transform=s?s({},""):"none",this.hasProjected=!1),t}const o=i.animationValues||i.latestValues;this.applyTransformsToTarget(),n.transform=function(e,t,r){let n="";const s=e.x.translate/t.x,i=e.y.translate/t.y,o=(null===r||void 0===r?void 0:r.z)||0;if((s||i||o)&&(n=`translate3d(${s}px, ${i}px, ${o}px) `),1===t.x&&1===t.y||(n+=`scale(${1/t.x}, ${1/t.y}) `),r){const{transformPerspective:e,rotate:t,rotateX:s,rotateY:i,skewX:o,skewY:A}=r;e&&(n=`perspective(${e}px) ${n}`),t&&(n+=`rotate(${t}deg) `),s&&(n+=`rotateX(${s}deg) `),i&&(n+=`rotateY(${i}deg) `),o&&(n+=`skewX(${o}deg) `),A&&(n+=`skewY(${A}deg) `)}const A=e.x.scale*t.x,a=e.y.scale*t.y;return 1===A&&1===a||(n+=`scale(${A}, ${a})`),n||"none"}(this.projectionDeltaWithTransform,this.treeScale,o),s&&(n.transform=s(o,n.transform));const{x:A,y:a}=this.projectionDelta;n.transformOrigin=`${100*A.origin}% ${100*a.origin}% 0`,i.animationValues?n.opacity=i===this?null!==(r=null!==(t=o.opacity)&&void 0!==t?t:this.latestValues.opacity)&&void 0!==r?r:1:this.preserveOpacity?this.latestValues.opacity:o.opacityExit:n.opacity=i===this?void 0!==o.opacity?o.opacity:"":void 0!==o.opacityExit?o.opacityExit:0;for(const l in pF){if(void 0===o[l])continue;const{correct:e,applyTo:t}=pF[l],r="none"===n.transform?o[l]:e(o[l],i);if(t){const e=t.length;for(let s=0;s<e;s++)n[t[s]]=r}else n[l]=r}return this.options.layoutId&&(n.pointerEvents=i===this?qF(null===e||void 0===e?void 0:e.pointerEvents)||"":"none"),n}clearSnapshot(){this.resumeFrom=this.snapshot=void 0}resetTree(){this.root.nodes.forEach((e=>{var t;return null===(t=e.currentAnimation)||void 0===t?void 0:t.stop()})),this.root.nodes.forEach(aL),this.root.sharedNodes.clear()}}}function nL(e){e.updateLayout()}function sL(e){var t;const r=(null===(t=e.resumeFrom)||void 0===t?void 0:t.snapshot)||e.snapshot;if(e.isLead()&&e.layout&&r&&e.hasListeners("didUpdate")){const{layoutBox:t,measuredBox:n}=e.layout,{animationType:s}=e.options,i=r.source!==e.layout.source;"size"===s?zP((e=>{const n=i?r.measuredBox[e]:r.layoutBox[e],s=FP(n);n.min=t[e].min,n.max=n.min+s})):EL(s,r.layoutBox,t)&&zP((n=>{const s=i?r.measuredBox[n]:r.layoutBox[n],o=FP(t[n]);s.max=s.min+o,e.relativeTarget&&!e.currentAnimation&&(e.isProjectionDirty=!0,e.relativeTarget[n].max=e.relativeTarget[n].min+o)}));const o=XP();MP(o,t,r.layoutBox);const A=XP();i?MP(A,e.applyTransform(n,!0),r.measuredBox):MP(A,t,r.layoutBox);const a=!jF(o);let l=!1;if(!e.resumeFrom){const n=e.getClosestProjectingParent();if(n&&!n.resumeFrom){const{snapshot:s,layout:i}=n;if(s&&i){const o=OP();kP(o,r.layoutBox,s.layoutBox);const A=OP();kP(A,t,i.layoutBox),OF(o,A)||(l=!0),n.options.layoutRoot&&(e.relativeTarget=A,e.relativeTargetOrigin=o,e.relativeParent=n)}}}e.notifyListeners("didUpdate",{layout:t,snapshot:r,delta:A,layoutDelta:o,hasLayoutChanged:a,hasRelativeTargetChanged:l})}else if(e.isLead()){const{onExitComplete:t}=e.options;t&&t()}e.options.transition=void 0}function iL(e){KF&&ZF.totalNodes++,e.parent&&(e.isProjecting()||(e.isProjectionDirty=e.parent.isProjectionDirty),e.isSharedProjectionDirty||(e.isSharedProjectionDirty=Boolean(e.isProjectionDirty||e.parent.isProjectionDirty||e.parent.isSharedProjectionDirty)),e.isTransformDirty||(e.isTransformDirty=e.parent.isTransformDirty))}function oL(e){e.isProjectionDirty=e.isSharedProjectionDirty=e.isTransformDirty=!1}function AL(e){e.clearSnapshot()}function aL(e){e.clearMeasurements()}function lL(e){e.isLayoutDirty=!1}function cL(e){const{visualElement:t}=e.options;t&&t.getProps().onBeforeLayoutMeasure&&t.notify("BeforeLayoutMeasure"),e.resetTransform()}function uL(e){e.finishAnimation(),e.targetDelta=e.relativeTarget=e.target=void 0,e.isProjectionDirty=!0}function dL(e){e.resolveTargetDelta()}function hL(e){e.calcProjection()}function fL(e){e.resetSkewAndRotation()}function gL(e){e.removeLeadSnapshot()}function pL(e,t,r){e.translate=$D(t.translate,0,r),e.scale=$D(t.scale,1,r),e.origin=t.origin,e.originPoint=t.originPoint}function mL(e,t,r,n){e.min=$D(t.min,r.min,n),e.max=$D(t.max,r.max,n)}function wL(e){return e.animationValues&&void 0!==e.animationValues.opacityExit}const vL={duration:.45,ease:[.4,0,.1,1]},bL=e=>"undefined"!==typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().includes(e),yL=bL("applewebkit/")&&!bL("chrome/")?Math.round:Qe;function BL(e){e.min=yL(e.min),e.max=yL(e.max)}function EL(e,t,r){return"position"===e||"preserve-aspect"===e&&(n=zF(t),s=zF(r),i=.2,!(Math.abs(n-s)<=i));var n,s,i}function CL(e){var t;return e!==e.root&&(null===(t=e.scroll)||void 0===t?void 0:t.wasRoot)}const xL=rL({attachResizeListener:(e,t)=>cP(e,"resize",t),measureScroll:()=>({x:document.documentElement.scrollLeft||document.body.scrollLeft,y:document.documentElement.scrollTop||document.body.scrollTop}),checkIsScrollRoot:()=>!0}),IL={current:void 0},DL=rL({measureScroll:e=>({x:e.scrollLeft,y:e.scrollTop}),defaultParent:()=>{if(!IL.current){const e=new xL({});e.mount(window),e.setOptions({layoutScroll:!0}),IL.current=e}return IL.current},resetTransform:(e,t)=>{e.style.transform=void 0!==t?t:"none"},checkIsScrollRoot:e=>Boolean("fixed"===window.getComputedStyle(e).position)}),QL={pan:{Feature:class extends sP{constructor(){super(...arguments),this.removePointerDownListener=Qe}onPointerDown(e){this.session=new hP(e,this.createPanHandlers(),{transformPagePoint:this.node.getTransformPagePoint(),contextWindow:oF(this.node)})}createPanHandlers(){const{onPanSessionStart:e,onPanStart:t,onPan:r,onPanEnd:n}=this.node.getProps();return{onSessionStart:cF(e),onStart:cF(t),onMove:r,onEnd:(e,t)=>{delete this.session,n&&Ux.postRender((()=>n(e,t)))}}}mount(){this.removePointerDownListener=uP(this.node.current,"pointerdown",(e=>this.onPointerDown(e)))}update(){this.session&&this.session.updateHandlers(this.createPanHandlers())}unmount(){this.removePointerDownListener(),this.session&&this.session.end()}}},drag:{Feature:class extends sP{constructor(e){super(e),this.removeGroupControls=Qe,this.removeListeners=Qe,this.controls=new aF(e)}mount(){const{dragControls:e}=this.node.getProps();e&&(this.removeGroupControls=e.subscribe(this.controls)),this.removeListeners=this.controls.addListeners()||Qe}unmount(){this.removeGroupControls(),this.removeListeners()}},ProjectionNode:DL,MeasureLayout:bF}};function PL(e,t){const r=t?"pointerenter":"pointerleave",n=t?"onHoverStart":"onHoverEnd";return uP(e.current,r,((r,s)=>{if("touch"===r.pointerType||CP())return;const i=e.getProps();e.animationState&&i.whileHover&&e.animationState.setActive("whileHover",t);const o=i[n];o&&Ux.postRender((()=>o(r,s)))}),{passive:!e.getProps()[n]})}const FL=(e,t)=>!!t&&(e===t||FL(e,t.parentElement));function LL(e,t){if(!t)return;const r=new PointerEvent("pointer"+e);t(r,aP(r))}const ML=new WeakMap,SL=new WeakMap,NL=e=>{const t=ML.get(e.target);t&&t(e)},kL=e=>{e.forEach(NL)};function RL(e,t,r){const n=function(e){let{root:t,...r}=e;const n=t||document;SL.has(n)||SL.set(n,{});const s=SL.get(n),i=JSON.stringify(r);return s[i]||(s[i]=new IntersectionObserver(kL,{root:t,...r})),s[i]}(t);return ML.set(e,r),n.observe(e),()=>{ML.delete(e),n.unobserve(e)}}const TL={some:0,all:1};const WL={inView:{Feature:class extends sP{constructor(){super(...arguments),this.hasEnteredView=!1,this.isInView=!1}startObserver(){this.unmount();const{viewport:e={}}=this.node.getProps(),{root:t,margin:r,amount:n="some",once:s}=e,i={root:t?t.current:void 0,rootMargin:r,threshold:"number"===typeof n?n:TL[n]};return RL(this.node.current,i,(e=>{const{isIntersecting:t}=e;if(this.isInView===t)return;if(this.isInView=t,s&&!t&&this.hasEnteredView)return;t&&(this.hasEnteredView=!0),this.node.animationState&&this.node.animationState.setActive("whileInView",t);const{onViewportEnter:r,onViewportLeave:n}=this.node.getProps(),i=t?r:n;i&&i(e)}))}mount(){this.startObserver()}update(){if("undefined"===typeof IntersectionObserver)return;const{props:e,prevProps:t}=this.node,r=["amount","margin","root"].some(function(e){let{viewport:t={}}=e,{viewport:r={}}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return e=>t[e]!==r[e]}(e,t));r&&this.startObserver()}unmount(){}}},tap:{Feature:class extends sP{constructor(){super(...arguments),this.removeStartListeners=Qe,this.removeEndListeners=Qe,this.removeAccessibleListeners=Qe,this.startPointerPress=(e,t)=>{if(this.isPressing)return;this.removeEndListeners();const r=this.node.getProps(),n=uP(window,"pointerup",((e,t)=>{if(!this.checkPressEnd())return;const{onTap:r,onTapCancel:n,globalTapTarget:s}=this.node.getProps(),i=s||FL(this.node.current,e.target)?r:n;i&&Ux.update((()=>i(e,t)))}),{passive:!(r.onTap||r.onPointerUp)}),s=uP(window,"pointercancel",((e,t)=>this.cancelPress(e,t)),{passive:!(r.onTapCancel||r.onPointerCancel)});this.removeEndListeners=JD(n,s),this.startPress(e,t)},this.startAccessiblePress=()=>{const e=cP(this.node.current,"keydown",(e=>{if("Enter"!==e.key||this.isPressing)return;this.removeEndListeners(),this.removeEndListeners=cP(this.node.current,"keyup",(e=>{"Enter"===e.key&&this.checkPressEnd()&&LL("up",((e,t)=>{const{onTap:r}=this.node.getProps();r&&Ux.postRender((()=>r(e,t)))}))})),LL("down",((e,t)=>{this.startPress(e,t)}))})),t=cP(this.node.current,"blur",(()=>{this.isPressing&&LL("cancel",((e,t)=>this.cancelPress(e,t)))}));this.removeAccessibleListeners=JD(e,t)}}startPress(e,t){this.isPressing=!0;const{onTapStart:r,whileTap:n}=this.node.getProps();n&&this.node.animationState&&this.node.animationState.setActive("whileTap",!0),r&&Ux.postRender((()=>r(e,t)))}checkPressEnd(){this.removeEndListeners(),this.isPressing=!1;return this.node.getProps().whileTap&&this.node.animationState&&this.node.animationState.setActive("whileTap",!1),!CP()}cancelPress(e,t){if(!this.checkPressEnd())return;const{onTapCancel:r}=this.node.getProps();r&&Ux.postRender((()=>r(e,t)))}mount(){const e=this.node.getProps(),t=uP(e.globalTapTarget?window:this.node.current,"pointerdown",this.startPointerPress,{passive:!(e.onTapStart||e.onPointerStart)}),r=cP(this.node.current,"focus",this.startAccessiblePress);this.removeStartListeners=JD(t,r)}unmount(){this.removeStartListeners(),this.removeEndListeners(),this.removeAccessibleListeners()}}},focus:{Feature:class extends sP{constructor(){super(...arguments),this.isActive=!1}onFocus(){let e=!1;try{e=this.node.current.matches(":focus-visible")}catch(JM){e=!0}e&&this.node.animationState&&(this.node.animationState.setActive("whileFocus",!0),this.isActive=!0)}onBlur(){this.isActive&&this.node.animationState&&(this.node.animationState.setActive("whileFocus",!1),this.isActive=!1)}mount(){this.unmount=JD(cP(this.node.current,"focus",(()=>this.onFocus())),cP(this.node.current,"blur",(()=>this.onBlur())))}unmount(){}}},hover:{Feature:class extends sP{mount(){this.unmount=JD(PL(this.node,!0),PL(this.node,!1))}unmount(){}}}},jL={layout:{ProjectionNode:DL,MeasureLayout:bF}},GL=(0,s.createContext)({}),XL=(0,s.createContext)({strict:!1});let OL=!1;function zL(e,t,r,n,i){var o;const{visualElement:A}=(0,s.useContext)(GL),a=(0,s.useContext)(XL),l=(0,s.useContext)(be),c=(0,s.useContext)(Be).reducedMotion,u=(0,s.useRef)();n=n||a.renderer,!u.current&&n&&(u.current=n(e,{visualState:t,parent:A,props:r,presenceContext:l,blockInitialAnimation:!!l&&!1===l.initial,reducedMotionConfig:c}));const d=u.current,h=(0,s.useContext)(uF);!d||d.projection||!i||"html"!==d.type&&"svg"!==d.type||function(e,t,r,n){const{layoutId:s,layout:i,drag:o,dragConstraints:A,layoutScroll:a,layoutRoot:l}=t;e.projection=new r(e.latestValues,t["data-framer-portal-id"]?void 0:HL(e.parent)),e.projection.setOptions({layoutId:s,layout:i,alwaysMeasureLayout:Boolean(o)||A&&xP(A),visualElement:e,animationType:"string"===typeof i?i:"both",initialPromotionConfig:n,layoutScroll:a,layoutRoot:l})}(u.current,r,i,h),(0,s.useInsertionEffect)((()=>{d&&d.update(r,l)}));const f=r[OQ],g=(0,s.useRef)(Boolean(f)&&!window.MotionHandoffIsComplete&&(null===(o=window.MotionHasOptimisedAnimation)||void 0===o?void 0:o.call(window,f)));return Ne((()=>{d&&(d.updateFeatures(),mF.render(d.render),g.current&&d.animationState&&d.animationState.animateChanges())})),(0,s.useEffect)((()=>{d&&(!g.current&&d.animationState&&d.animationState.animateChanges(),g.current=!1,OL||(OL=!0,queueMicrotask(YL)))})),d}function YL(){window.MotionHandoffIsComplete=!0}function HL(e){if(e)return!1!==e.options.allowProjection?e.projection:HL(e.parent)}function UL(e,t,r){return(0,s.useCallback)((n=>{n&&e.mount&&e.mount(n),t&&(n?t.mount(n):t.unmount()),r&&("function"===typeof r?r(n):xP(r)&&(r.current=n))}),[t])}function VL(e){return yx(e.animate)||Px.some((t=>Cx(e[t])))}function qL(e){return Boolean(VL(e)||e.variants)}function ZL(e){const{initial:t,animate:r}=function(e,t){if(VL(e)){const{initial:t,animate:r}=e;return{initial:!1===t||Cx(t)?t:void 0,animate:Cx(r)?r:void 0}}return!1!==e.inherit?t:{}}(e,(0,s.useContext)(GL));return(0,s.useMemo)((()=>({initial:t,animate:r})),[KL(t),KL(r)])}function KL(e){return Array.isArray(e)?e.join(" "):e}const JL={animation:["animate","variants","whileHover","whileTap","exit","whileInView","whileFocus","whileDrag"],exit:["exit"],drag:["drag","dragControls"],focus:["whileFocus"],hover:["whileHover","onHoverStart","onHoverEnd"],tap:["whileTap","onTap","onTapStart","onTapCancel"],pan:["onPan","onPanStart","onPanSessionStart","onPanEnd"],inView:["whileInView","onViewportEnter","onViewportLeave"],layout:["layout","layoutId"]},_L={};for(const r in JL)_L[r]={isEnabled:e=>JL[r].some((t=>!!e[t]))};const $L=Symbol.for("motionComponentSymbol");function eM(e){let{preloadedFeatures:t,createVisualElement:r,useRender:n,useVisualState:i,Component:o}=e;t&&function(e){for(const t in e)_L[t]={..._L[t],...e[t]}}(t);const A=(0,s.forwardRef)((function(e,t){let A;const a={...(0,s.useContext)(Be),...e,layoutId:tM(e)},{isStatic:l}=a,c=ZL(e),u=i(e,l);if(!l&&Se){!function(){(0,s.useContext)(XL).strict;0}();const e=function(e){const{drag:t,layout:r}=_L;if(!t&&!r)return{};const n={...t,...r};return{MeasureLayout:(null===t||void 0===t?void 0:t.isEnabled(e))||(null===r||void 0===r?void 0:r.isEnabled(e))?n.MeasureLayout:void 0,ProjectionNode:n.ProjectionNode}}(a);A=e.MeasureLayout,c.visualElement=zL(o,u,a,r,e.ProjectionNode)}return(0,ve.jsxs)(GL.Provider,{value:c,children:[A&&c.visualElement?(0,ve.jsx)(A,{visualElement:c.visualElement,...a}):null,n(o,e,UL(u,c.visualElement,t),u,l,c.visualElement)]})}));return A[$L]=o,A}function tM(e){let{layoutId:t}=e;const r=(0,s.useContext)(De).id;return r&&void 0!==t?r+"-"+t:t}const rM=["animate","circle","defs","desc","ellipse","g","image","line","filter","marker","mask","metadata","path","pattern","polygon","polyline","rect","stop","switch","symbol","svg","text","tspan","use","view"];function nM(e){return"string"===typeof e&&!e.includes("-")&&!!(rM.indexOf(e)>-1||/[A-Z]/u.test(e))}function sM(e,t,r,n){let{style:s,vars:i}=t;Object.assign(e.style,s,n&&n.getProjectionStyles(r));for(const o in i)e.style.setProperty(o,i[o])}const iM=new Set(["baseFrequency","diffuseConstant","kernelMatrix","kernelUnitLength","keySplines","keyTimes","limitingConeAngle","markerHeight","markerWidth","numOctaves","targetX","targetY","surfaceScale","specularConstant","specularExponent","stdDeviation","tableValues","viewBox","gradientTransform","pathLength","startOffset","textLength","lengthAdjust"]);function oM(e,t,r,n){sM(e,t,void 0,n);for(const s in t.attrs)e.setAttribute(iM.has(s)?s:XQ(s),t.attrs[s])}function AM(e,t){let{layout:r,layoutId:n}=t;return Lx.has(e)||e.startsWith("origin")||(r||void 0!==n)&&(!!pF[e]||"opacity"===e)}function aM(e,t,r){var n;const{style:s}=e,i={};for(const o in s)(UQ(s[o])||t.style&&UQ(t.style[o])||AM(o,e)||void 0!==(null===(n=null===r||void 0===r?void 0:r.getValue(o))||void 0===n?void 0:n.liveStyle))&&(i[o]=s[o]);return r&&s&&"string"===typeof s.willChange&&(r.applyWillChange=!1),i}function lM(e,t,r){const n=aM(e,t,r);for(const s in e)if(UQ(e[s])||UQ(t[s])){n[-1!==Fx.indexOf(s)?"attr"+s.charAt(0).toUpperCase()+s.substring(1):s]=e[s]}return n}const cM=e=>(t,r)=>{const n=(0,s.useContext)(GL),i=(0,s.useContext)(be),o=()=>function(e,t,r,n,s){let{applyWillChange:i=!1,scrapeMotionValuesFromProps:o,createRenderState:A,onMount:a}=e;const l={latestValues:hM(t,r,n,!s&&i,o),renderState:A()};return a&&(l.mount=e=>a(t,e,l)),l}(e,t,n,i,r);return r?o():ye(o)};function uM(e,t){const r=YQ(t);r&&NQ(e,r)}function dM(e,t,r){const n=Array.isArray(t)?t:[t];for(let s=0;s<n.length;s++){const t=Ix(e,n[s]);if(t){const{transitionEnd:e,transition:n,...s}=t;r(s,e)}}}function hM(e,t,r,n,s){var i;const o={},A=[],a=n&&void 0===(null===(i=e.style)||void 0===i?void 0:i.willChange),l=s(e,{});for(const p in l)o[p]=qF(l[p]);let{initial:c,animate:u}=e;const d=VL(e),h=qL(e);t&&h&&!d&&!1!==e.inherit&&(void 0===c&&(c=t.initial),void 0===u&&(u=t.animate));let f=!!r&&!1===r.initial;f=f||!1===c;const g=f?u:c;return g&&"boolean"!==typeof g&&!yx(g)&&dM(e,g,((e,t)=>{for(const r in e){let t=e[r];if(Array.isArray(t)){t=t[f?t.length-1:0]}null!==t&&(o[r]=t)}for(const r in t)o[r]=t[r]})),a&&(u&&!1!==c&&!yx(u)&&dM(e,u,(e=>{for(const t in e)uM(A,t)})),A.length&&(o.willChange=A.join(","))),o}const fM=()=>({style:{},transform:{},transformOrigin:{},vars:{}}),gM=()=>({...fM(),attrs:{}}),pM=(e,t)=>t&&"number"===typeof e?t.transform(e):e,mM={x:"translateX",y:"translateY",z:"translateZ",transformPerspective:"perspective"},wM=Fx.length;function vM(e,t,r){const{style:n,vars:s,transformOrigin:i}=e;let o=!1,A=!1;for(const a in t){const e=t[a];if(Lx.has(a))o=!0;else if($x(a))s[a]=e;else{const t=pM(e,oD[a]);a.startsWith("origin")?(A=!0,i[a]=t):n[a]=t}}if(t.transform||(o||r?n.transform=function(e,t,r){let n="",s=!0;for(let i=0;i<wM;i++){const o=Fx[i],A=e[o];if(void 0===A)continue;let a=!0;if(a="number"===typeof A?A===(o.startsWith("scale")?1:0):0===parseFloat(A),!a||r){const e=pM(A,oD[o]);a||(s=!1,n+=`${mM[o]||o}(${e}) `),r&&(t[o]=e)}}return n=n.trim(),r?n=r(t,s?"":n):s&&(n="none"),n}(t,e.transform,r):n.transform&&(n.transform="none")),A){const{originX:e="50%",originY:t="50%",originZ:r=0}=i;n.transformOrigin=`${e} ${t} ${r}`}}function bM(e,t,r){return"string"===typeof e?e:mI.transform(t+r*e)}const yM={offset:"stroke-dashoffset",array:"stroke-dasharray"},BM={offset:"strokeDashoffset",array:"strokeDasharray"};function EM(e,t,r,n){let{attrX:s,attrY:i,attrScale:o,originX:A,originY:a,pathLength:l,pathSpacing:c=1,pathOffset:u=0,...d}=t;if(vM(e,d,n),r)return void(e.style.viewBox&&(e.attrs.viewBox=e.style.viewBox));e.attrs=e.style,e.style={};const{attrs:h,style:f,dimensions:g}=e;h.transform&&(g&&(f.transform=h.transform),delete h.transform),g&&(void 0!==A||void 0!==a||f.transform)&&(f.transformOrigin=function(e,t,r){return`${bM(t,e.x,e.width)} ${bM(r,e.y,e.height)}`}(g,void 0!==A?A:.5,void 0!==a?a:.5)),void 0!==s&&(h.x=s),void 0!==i&&(h.y=i),void 0!==o&&(h.scale=o),void 0!==l&&function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];e.pathLength=1;const i=s?yM:BM;e[i.offset]=mI.transform(-n);const o=mI.transform(t),A=mI.transform(r);e[i.array]=`${o} ${A}`}(h,l,c,u,!1)}const CM=e=>"string"===typeof e&&"svg"===e.toLowerCase(),xM={useVisualState:cM({scrapeMotionValuesFromProps:lM,createRenderState:gM,onMount:(e,t,r)=>{let{renderState:n,latestValues:s}=r;Ux.read((()=>{try{n.dimensions="function"===typeof t.getBBox?t.getBBox():t.getBoundingClientRect()}catch(JM){n.dimensions={x:0,y:0,width:0,height:0}}})),Ux.render((()=>{EM(n,s,CM(t.tagName),e.transformTemplate),oM(t,n)}))}})},IM={useVisualState:cM({applyWillChange:!0,scrapeMotionValuesFromProps:aM,createRenderState:fM})};function DM(e,t,r){for(const n in t)UQ(t[n])||AM(n,r)||(e[n]=t[n])}function QM(e,t){const r={};return DM(r,e.style||{},e),Object.assign(r,function(e,t){let{transformTemplate:r}=e;return(0,s.useMemo)((()=>{const e=fM();return vM(e,t,r),Object.assign({},e.vars,e.style)}),[t])}(e,t)),r}function PM(e,t){const r={},n=QM(e,t);return e.drag&&!1!==e.dragListener&&(r.draggable=!1,n.userSelect=n.WebkitUserSelect=n.WebkitTouchCallout="none",n.touchAction=!0===e.drag?"none":"pan-"+("x"===e.drag?"y":"x")),void 0===e.tabIndex&&(e.onTap||e.onTapStart||e.whileTap)&&(r.tabIndex=0),r.style=n,r}const FM=new Set(["animate","exit","variants","initial","style","values","variants","transition","transformTemplate","custom","inherit","onBeforeLayoutMeasure","onAnimationStart","onAnimationComplete","onUpdate","onDragStart","onDrag","onDragEnd","onMeasureDragConstraints","onDirectionLock","onDragTransitionEnd","_dragX","_dragY","onHoverStart","onHoverEnd","onViewportEnter","onViewportLeave","globalTapTarget","ignoreStrict","viewport"]);function LM(e){return e.startsWith("while")||e.startsWith("drag")&&"draggable"!==e||e.startsWith("layout")||e.startsWith("onTap")||e.startsWith("onPan")||e.startsWith("onLayout")||FM.has(e)}let MM=e=>!LM(e);try{(SM=require("@emotion/is-prop-valid").default)&&(MM=e=>e.startsWith("on")?!LM(e):SM(e))}catch(_M){}var SM;function NM(e,t,r,n){const i=(0,s.useMemo)((()=>{const r=gM();return EM(r,t,CM(n),e.transformTemplate),{...r.attrs,style:{...r.style}}}),[t]);if(e.style){const t={};DM(t,e.style,e),i.style={...t,...i.style}}return i}function kM(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(t,r,n,i,o)=>{let{latestValues:A}=i;const a=(nM(t)?NM:PM)(r,A,o,t),l=function(e,t,r){const n={};for(const s in e)"values"===s&&"object"===typeof e.values||(MM(s)||!0===r&&LM(s)||!t&&!LM(s)||e.draggable&&s.startsWith("onDrag"))&&(n[s]=e[s]);return n}(r,"string"===typeof t,e),c=t!==s.Fragment?{...l,...a,ref:n}:{},{children:u}=r,d=(0,s.useMemo)((()=>UQ(u)?u.get():u),[u]);return(0,s.createElement)(t,{...c,children:d})}}function RM(e,t){return function(r){let{forwardMotionProps:n}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{forwardMotionProps:!1};return eM({...nM(r)?xM:IM,preloadedFeatures:e,useRender:kM(n),createVisualElement:t,Component:r})}}const TM={current:null},WM={current:!1};const jM=new WeakMap,GM=[...PI,zI,eD],XM=["AnimationStart","AnimationComplete","Update","BeforeLayoutMeasure","LayoutMeasure","LayoutAnimationStart","LayoutAnimationComplete"],OM=Px.length;class zM{scrapeMotionValuesFromProps(e,t,r){return{}}constructor(e){let{parent:t,props:r,presenceContext:n,reducedMotionConfig:s,blockInitialAnimation:i,visualState:o}=e,A=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.applyWillChange=!1,this.current=null,this.children=new Set,this.isVariantNode=!1,this.isControllingVariants=!1,this.shouldReduceMotion=null,this.values=new Map,this.KeyframeResolver=RI,this.features={},this.valueSubscriptions=new Map,this.prevMotionValues={},this.events={},this.propEventSubscriptions={},this.notifyUpdate=()=>this.notify("Update",this.latestValues),this.render=()=>{this.isRenderScheduled=!1,this.current&&(this.triggerBuild(),this.renderInstance(this.current,this.renderState,this.props.style,this.projection))},this.isRenderScheduled=!1,this.scheduleRender=()=>{this.isRenderScheduled||(this.isRenderScheduled=!0,Ux.render(this.render,!1,!0))};const{latestValues:a,renderState:l}=o;this.latestValues=a,this.baseTarget={...a},this.initialValues=r.initial?{...a}:{},this.renderState=l,this.parent=t,this.props=r,this.presenceContext=n,this.depth=t?t.depth+1:0,this.reducedMotionConfig=s,this.options=A,this.blockInitialAnimation=Boolean(i),this.isControllingVariants=VL(r),this.isVariantNode=qL(r),this.isVariantNode&&(this.variantChildren=new Set),this.manuallyAnimateOnMount=Boolean(t&&t.current);const{willChange:c,...u}=this.scrapeMotionValuesFromProps(r,{},this);for(const d in u){const e=u[d];void 0!==a[d]&&UQ(e)&&e.set(a[d],!1)}}mount(e){this.current=e,jM.set(e,this),this.projection&&!this.projection.instance&&this.projection.mount(e),this.parent&&this.isVariantNode&&!this.isControllingVariants&&(this.removeFromVariantTree=this.parent.addVariantChild(this)),this.values.forEach(((e,t)=>this.bindToMotionValue(t,e))),WM.current||function(){if(WM.current=!0,Se)if(window.matchMedia){const e=window.matchMedia("(prefers-reduced-motion)"),t=()=>TM.current=e.matches;e.addListener(t),t()}else TM.current=!1}(),this.shouldReduceMotion="never"!==this.reducedMotionConfig&&("always"===this.reducedMotionConfig||TM.current),this.parent&&this.parent.children.add(this),this.update(this.props,this.presenceContext)}unmount(){jM.delete(this.current),this.projection&&this.projection.unmount(),Vx(this.notifyUpdate),Vx(this.render),this.valueSubscriptions.forEach((e=>e())),this.valueSubscriptions.clear(),this.removeFromVariantTree&&this.removeFromVariantTree(),this.parent&&this.parent.children.delete(this);for(const e in this.events)this.events[e].clear();for(const e in this.features){const t=this.features[e];t&&(t.unmount(),t.isMounted=!1)}this.current=null}bindToMotionValue(e,t){this.valueSubscriptions.has(e)&&this.valueSubscriptions.get(e)();const r=Lx.has(e),n=t.on("change",(t=>{this.latestValues[e]=t,this.props.onUpdate&&Ux.preRender(this.notifyUpdate),r&&this.projection&&(this.projection.isTransformDirty=!0)})),s=t.on("renderRequest",this.scheduleRender);let i;window.MotionCheckAppearSync&&(i=window.MotionCheckAppearSync(this,e,t)),this.valueSubscriptions.set(e,(()=>{n(),s(),i&&i(),t.owner&&t.stop()}))}sortNodePosition(e){return this.current&&this.sortInstanceNodePosition&&this.type===e.type?this.sortInstanceNodePosition(this.current,e.current):0}updateFeatures(){let e="animation";for(e in _L){const t=_L[e];if(!t)continue;const{isEnabled:r,Feature:n}=t;if(!this.features[e]&&n&&r(this.props)&&(this.features[e]=new n(this)),this.features[e]){const t=this.features[e];t.isMounted?t.update():(t.mount(),t.isMounted=!0)}}}triggerBuild(){this.build(this.renderState,this.latestValues,this.props)}measureViewportBox(){return this.current?this.measureInstanceViewportBox(this.current,this.props):OP()}getStaticValue(e){return this.latestValues[e]}setStaticValue(e,t){this.latestValues[e]=t}update(e,t){(e.transformTemplate||this.props.transformTemplate)&&this.scheduleRender(),this.prevProps=this.props,this.props=e,this.prevPresenceContext=this.presenceContext,this.presenceContext=t;for(let r=0;r<XM.length;r++){const t=XM[r];this.propEventSubscriptions[t]&&(this.propEventSubscriptions[t](),delete this.propEventSubscriptions[t]);const n=e["on"+t];n&&(this.propEventSubscriptions[t]=this.on(t,n))}this.prevMotionValues=function(e,t,r){for(const n in t){const s=t[n],i=r[n];if(UQ(s))e.addValue(n,s);else if(UQ(i))e.addValue(n,jQ(s,{owner:e}));else if(i!==s)if(e.hasValue(n)){const t=e.getValue(n);!0===t.liveStyle?t.jump(s):t.hasAnimated||t.set(s)}else{const t=e.getStaticValue(n);e.addValue(n,jQ(void 0!==t?t:s,{owner:e}))}}for(const n in r)void 0===t[n]&&e.removeValue(n);return t}(this,this.scrapeMotionValuesFromProps(e,this.prevProps,this),this.prevMotionValues),this.handleChildMotionValue&&this.handleChildMotionValue()}getProps(){return this.props}getVariant(e){return this.props.variants?this.props.variants[e]:void 0}getDefaultTransition(){return this.props.transition}getTransformPagePoint(){return this.props.transformPagePoint}getClosestVariantNode(){return this.isVariantNode?this:this.parent?this.parent.getClosestVariantNode():void 0}getVariantContext(){if(arguments.length>0&&void 0!==arguments[0]&&arguments[0])return this.parent?this.parent.getVariantContext():void 0;if(!this.isControllingVariants){const e=this.parent&&this.parent.getVariantContext()||{};return void 0!==this.props.initial&&(e.initial=this.props.initial),e}const e={};for(let t=0;t<OM;t++){const r=Px[t],n=this.props[r];(Cx(n)||!1===n)&&(e[r]=n)}return e}addVariantChild(e){const t=this.getClosestVariantNode();if(t)return t.variantChildren&&t.variantChildren.add(e),()=>t.variantChildren.delete(e)}addValue(e,t){const r=this.values.get(e);t!==r&&(r&&this.removeValue(e),this.bindToMotionValue(e,t),this.values.set(e,t),this.latestValues[e]=t.get())}removeValue(e){this.values.delete(e);const t=this.valueSubscriptions.get(e);t&&(t(),this.valueSubscriptions.delete(e)),delete this.latestValues[e],this.removeValueFromRenderState(e,this.renderState)}hasValue(e){return this.values.has(e)}getValue(e,t){if(this.props.values&&this.props.values[e])return this.props.values[e];let r=this.values.get(e);return void 0===r&&void 0!==t&&(r=jQ(null===t?void 0:t,{owner:this}),this.addValue(e,r)),r}readValue(e,t){var r;let n=void 0===this.latestValues[e]&&this.current?null!==(r=this.getBaseTargetFromProps(this.props,e))&&void 0!==r?r:this.readValueFromInstance(this.current,e,this.options):this.latestValues[e];var s;return void 0!==n&&null!==n&&("string"===typeof n&&(Jx(n)||Kx(n))?n=parseFloat(n):(s=n,!GM.find(QI(s))&&eD.test(t)&&(n=lD(e,t))),this.setBaseTarget(e,UQ(n)?n.get():n)),UQ(n)?n.get():n}setBaseTarget(e,t){this.baseTarget[e]=t}getBaseTarget(e){var t;const{initial:r}=this.props;let n;if("string"===typeof r||"object"===typeof r){const s=Ix(this.props,r,null===(t=this.presenceContext)||void 0===t?void 0:t.custom);s&&(n=s[e])}if(r&&void 0!==n)return n;const s=this.getBaseTargetFromProps(this.props,e);return void 0===s||UQ(s)?void 0!==this.initialValues[e]&&void 0===n?void 0:this.baseTarget[e]:s}on(e,t){return this.events[e]||(this.events[e]=new RQ),this.events[e].add(t)}notify(e){if(this.events[e]){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];this.events[e].notify(...r)}}}class YM extends zM{constructor(){super(...arguments),this.KeyframeResolver=uD}sortInstanceNodePosition(e,t){return 2&e.compareDocumentPosition(t)?1:-1}getBaseTargetFromProps(e,t){return e.style?e.style[t]:void 0}removeValueFromRenderState(e,t){let{vars:r,style:n}=t;delete r[e],delete n[e]}}class HM extends YM{constructor(){super(...arguments),this.type="html",this.applyWillChange=!0,this.renderInstance=sM}readValueFromInstance(e,t){if(Lx.has(t)){const e=aD(t);return e&&e.default||0}{const n=(r=e,window.getComputedStyle(r)),s=($x(t)?n.getPropertyValue(t):n[t])||0;return"string"===typeof s?s.trim():s}var r}measureInstanceViewportBox(e,t){let{transformPagePoint:r}=t;return iF(e,r)}build(e,t,r){vM(e,t,r.transformTemplate)}scrapeMotionValuesFromProps(e,t,r){return aM(e,t,r)}handleChildMotionValue(){this.childSubscription&&(this.childSubscription(),delete this.childSubscription);const{children:e}=this.props;UQ(e)&&(this.childSubscription=e.on("change",(e=>{this.current&&(this.current.textContent=`${e}`)})))}}class UM extends YM{constructor(){super(...arguments),this.type="svg",this.isSVGTag=!1,this.measureInstanceViewportBox=OP}getBaseTargetFromProps(e,t){return e[t]}readValueFromInstance(e,t){if(Lx.has(t)){const e=aD(t);return e&&e.default||0}return t=iM.has(t)?t:XQ(t),e.getAttribute(t)}scrapeMotionValuesFromProps(e,t,r){return lM(e,t,r)}build(e,t,r){EM(e,t,this.isSVGTag,r.transformTemplate)}renderInstance(e,t,r,n){oM(e,t,0,n)}mount(e){this.isSVGTag=CM(e.tagName),super.mount(e)}}const VM=bx(RM({...oP,...WL,...QL,...jL},((e,t)=>nM(e)?new UM(t):new HM(t,{allowProjection:e!==s.Fragment})))),qM={initial:{opacity:0,x:"100vw"},animate:{opacity:1,x:0},exit:{opacity:0,x:"-100vw"}},ZM=e=>{let{children:t}=e;return(0,ve.jsx)(VM.div,{initial:"initial",animate:"animate",exit:"exit",variants:qM,transition:{duration:.5},children:t})},KM=()=>{const e=$();return(0,ve.jsxs)("div",{className:"flex flex-col min-h-screen bg-gray-100",children:[(0,ve.jsx)(Ue,{}),(0,ve.jsx)(ke,{mode:"wait",children:(0,ve.jsxs)(me,{location:e,children:[(0,ve.jsx)(ge,{path:"/",element:(0,ve.jsx)(ZM,{children:(0,ve.jsx)(Ve,{})})}),(0,ve.jsx)(ge,{path:"/cv-parking-permit",element:(0,ve.jsx)(ZM,{children:(0,ve.jsx)(mx,{})})}),(0,ve.jsx)(ge,{path:"/canvas-parking-permit",element:(0,ve.jsx)(ZM,{children:(0,ve.jsx)(wx,{})})}),(0,ve.jsx)(ge,{path:"/About",element:(0,ve.jsx)(ZM,{children:(0,ve.jsx)(vx,{})})})]},e.pathname)})]})};o.render((0,ve.jsx)(s.StrictMode,{children:(0,ve.jsx)(Ge,{children:(0,ve.jsx)(KM,{})})}),document.getElementById("root"))})()})();
//# sourceMappingURL=main.15b0f230.js.map